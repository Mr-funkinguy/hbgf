{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/kryo/case-style.js","webpack:///./node_modules/kryo/types/document.js","webpack:///./node_modules/incident/index.js","webpack:///./node_modules/swf-tree/tags/_type.js","webpack:///./node_modules/kryo/types/literal.js","webpack:///./node_modules/kryo/builtins/uint16.js","webpack:///./node_modules/kryo/types/array.js","webpack:///./node_modules/kryo/builtins/boolean.js","webpack:///./node_modules/kryo/types/ts-enum.js","webpack:///./node_modules/swf-tree/index.js","webpack:///./node_modules/kryo/types/integer.js","webpack:///./node_modules/kryo/types/ucs2-string.js","webpack:///./node_modules/kryo/builtins/bytes.js","webpack:///./node_modules/swf-tree/matrix.js","webpack:///./node_modules/swf-tree/fixed-point/sfixed8p8.js","webpack:///./node_modules/swf-tree/straight-s-rgba8.js","webpack:///./node_modules/kryo/readers/read-visitor.js","webpack:///./node_modules/kryo/_helpers/lazy-properties.js","webpack:///./node_modules/kryo/errors/lazy-options.js","webpack:///./node_modules/swf-tree/filters/_type.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/swf-renderer/display/display-object-type.js","webpack:///./node_modules/kryo/errors/invalid-type.js","webpack:///./node_modules/swf-tree/fixed-point/sfixed16p16.js","webpack:///./node_modules/kryo/builtins/sint16.js","webpack:///./node_modules/swf-parser/parsers/basic-data-types.js","webpack:///./node_modules/kryo/types/tagged-union.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/avmore/avm-value.js","webpack:///./node_modules/swf-tree/fill-styles/_type.js","webpack:///./node_modules/swf-tree/vector-2d.js","webpack:///./node_modules/kryo/builtins/uint32.js","webpack:///./node_modules/kryo/builtins/uint8.js","webpack:///./node_modules/swf-tree/join-styles/_type.js","webpack:///./node_modules/swf-tree/shape-records/_type.js","webpack:///./node_modules/swf-tree/rect.js","webpack:///./node_modules/@open-flash/stream/index.js","webpack:///./node_modules/core-util-is/lib/util.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/kryo/test-error.js","webpack:///./node_modules/swf-tree/fixed-point/fixed-point.js","webpack:///./node_modules/swf-tree/gradient.js","webpack:///./node_modules/swf-tree/color-stop.js","webpack:///./node_modules/kryo/types/float64.js","webpack:///./node_modules/swf-tree/blend-mode.js","webpack:///./node_modules/process-nextick-args/index.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/pako/lib/utils/common.js","webpack:///./node_modules/object-inspect/index.js","webpack:///./node_modules/swf-tree/fill-styles/index.js","webpack:///./node_modules/kryo/errors/not-implemented.js","webpack:///./node_modules/kryo/builtins/sint32.js","webpack:///./node_modules/swf-tree/morph-gradient.js","webpack:///./node_modules/swf-tree/shape-records/index.js","webpack:///./node_modules/swf-tree/cap-style.js","webpack:///./node_modules/kryo/types/white-list.js","webpack:///./node_modules/swf-tree/language-code.js","webpack:///./node_modules/swf-tree/sound/audio-coding-format.js","webpack:///./node_modules/swf-tree/sound/sound-type.js","webpack:///./node_modules/readable-stream/readable-browser.js","webpack:///./node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/swf-parser/parsers/shape.js","webpack:///./node_modules/element-resize-detector/src/collection-utils.js","webpack:///./node_modules/element-resize-detector/src/browser-detector.js","webpack:///./node_modules/swf-tree/fill-styles/bitmap.js","webpack:///./node_modules/swf-tree/fill-styles/focal-gradient.js","webpack:///./node_modules/kryo/errors/max-array-length.js","webpack:///./node_modules/swf-tree/color-space.js","webpack:///./node_modules/swf-tree/s-rgb8.js","webpack:///./node_modules/swf-tree/gradient-spread.js","webpack:///./node_modules/swf-tree/fill-styles/linear-gradient.js","webpack:///./node_modules/swf-tree/fill-styles/radial-gradient.js","webpack:///./node_modules/swf-tree/fill-styles/solid.js","webpack:///./node_modules/swf-tree/filters/index.js","webpack:///./node_modules/swf-tree/join-styles/index.js","webpack:///./node_modules/swf-tree/shape-records/curved-edge.js","webpack:///./node_modules/swf-tree/shape-records/straight-edge.js","webpack:///./node_modules/swf-tree/morph-shape-styles.js","webpack:///./node_modules/swf-tree/morph-fill-style.js","webpack:///./node_modules/swf-tree/line-style.js","webpack:///./node_modules/swf-tree/fill-style.js","webpack:///./node_modules/swf-tree/shape-records/style-change.js","webpack:///./node_modules/swf-tree/shape-styles.js","webpack:///./node_modules/swf-tree/tags/index.js","webpack:///./node_modules/swf-tree/text/grid-fitting.js","webpack:///./node_modules/swf-tree/text/text-renderer.js","webpack:///./node_modules/swf-tree/color-transform-with-alpha.js","webpack:///./node_modules/swf-tree/filter.js","webpack:///./node_modules/swf-tree/text/text-alignment.js","webpack:///./node_modules/swf-tree/glyph.js","webpack:///./node_modules/swf-tree/shape-record.js","webpack:///./node_modules/swf-tree/text/csm-table-hint.js","webpack:///./node_modules/swf-tree/sound/sound-rate.js","webpack:///./node_modules/swf-tree/sound/sound-size.js","webpack:///./node_modules/swf-tree/named-id.js","webpack:///./node_modules/swf-renderer/shape/decode-swf-shape.js","webpack:///./node_modules/swf-renderer/shape/fill-style.js","webpack:///./node_modules/swf-renderer/shape/line-style.js","webpack:///./node_modules/swf-renderer/shape/path.js","webpack:///./node_modules/swf-renderer/shape/morph-fill-style.js","webpack:///./node_modules/swf-renderer/shape/morph-line-style.js","webpack:///./node_modules/swf-renderer/shape/morph-path.js","webpack:///./node_modules/canvas/browser.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/browserify-zlib/lib/index.js","webpack:///./node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/string_decoder/lib/string_decoder.js","webpack:///./node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/assert/assert.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/pako/lib/zlib/adler32.js","webpack:///./node_modules/pako/lib/zlib/crc32.js","webpack:///./node_modules/swf-parser/errors/incomplete-stream.js","webpack:///./node_modules/swf-parser/parsers/display.js","webpack:///./node_modules/swf-parser/parsers/gradient.js","webpack:///./node_modules/avm1-tree/action-type.js","webpack:///./node_modules/avm1-tree/value-type.js","webpack:///./node_modules/element-resize-detector/src/element-resize-detector.js","webpack:///./node_modules/swf-renderer/renderers/canvas-renderer.js","webpack:///./node_modules/swf-parser/index.js","webpack:///./node_modules/avmore/host.js","webpack:///./node_modules/avmore/vm.js","webpack:///./node_modules/incident/incident.js","webpack:///./node_modules/element-resize-detector/src/element-utils.js","webpack:///./node_modules/element-resize-detector/src/listener-handler.js","webpack:///./node_modules/element-resize-detector/src/id-generator.js","webpack:///./node_modules/element-resize-detector/src/id-handler.js","webpack:///./node_modules/element-resize-detector/src/reporter.js","webpack:///./node_modules/batch-processor/src/batch-processor.js","webpack:///./node_modules/batch-processor/src/utils.js","webpack:///./node_modules/element-resize-detector/src/state-handler.js","webpack:///./node_modules/element-resize-detector/src/detection-strategy/object.js","webpack:///./node_modules/element-resize-detector/src/detection-strategy/scroll.js","webpack:///./node_modules/swf-renderer/css-color.js","webpack:///./node_modules/swf-renderer/shape/decode-swf-morph-shape.js","webpack:///./node_modules/kryo/types/boolean.js","webpack:///./node_modules/kryo/errors/invalid-integer.js","webpack:///./node_modules/kryo/errors/invalid-document.js","webpack:///./node_modules/kryo/errors/invalid-value.js","webpack:///./node_modules/kryo/errors/invalid-array-items.js","webpack:///./node_modules/kryo/errors/min-array-length.js","webpack:///./node_modules/swf-tree/fill-styles/morph-bitmap.js","webpack:///./node_modules/swf-tree/fill-styles/morph-focal-gradient.js","webpack:///./node_modules/swf-tree/morph-color-stop.js","webpack:///./node_modules/swf-tree/fill-styles/morph-linear-gradient.js","webpack:///./node_modules/swf-tree/fill-styles/morph-radial-gradient.js","webpack:///./node_modules/swf-tree/fill-styles/morph-solid.js","webpack:///./node_modules/swf-tree/filters/bevel.js","webpack:///./node_modules/swf-tree/filters/blur.js","webpack:///./node_modules/swf-tree/filters/color-matrix.js","webpack:///./node_modules/kryo/errors/invalid-float64.js","webpack:///./node_modules/swf-tree/filters/convolution.js","webpack:///./node_modules/swf-tree/filters/drop-shadow.js","webpack:///./node_modules/swf-tree/filters/glow.js","webpack:///./node_modules/swf-tree/filters/gradient-bevel.js","webpack:///./node_modules/swf-tree/filters/gradient-glow.js","webpack:///./node_modules/swf-tree/join-styles/bevel.js","webpack:///./node_modules/swf-tree/join-styles/miter.js","webpack:///./node_modules/swf-tree/join-styles/round.js","webpack:///./node_modules/swf-tree/shape-records/morph-curved-edge.js","webpack:///./node_modules/swf-tree/shape-records/morph-straight-edge.js","webpack:///./node_modules/swf-tree/shape-records/morph-style-change.js","webpack:///./node_modules/swf-tree/morph-line-style.js","webpack:///./node_modules/swf-tree/join-style.js","webpack:///./node_modules/swf-tree/tags/csm-text-settings.js","webpack:///./node_modules/swf-tree/tags/define-binary-data.js","webpack:///./node_modules/kryo/types/bytes.js","webpack:///./node_modules/swf-tree/tags/define-bitmap.js","webpack:///./node_modules/swf-tree/image-type.js","webpack:///./node_modules/kryo/errors/lower-case.js","webpack:///./node_modules/kryo/errors/max-ucs2-string-length.js","webpack:///./node_modules/kryo/errors/min-ucs2-string-length.js","webpack:///./node_modules/kryo/errors/not-trimmed.js","webpack:///./node_modules/kryo/errors/pattern-not-matched.js","webpack:///./node_modules/swf-tree/tags/define-button.js","webpack:///./node_modules/swf-tree/button/button-cond-action.js","webpack:///./node_modules/swf-tree/button/button-cond.js","webpack:///./node_modules/swf-tree/button/button-record.js","webpack:///./node_modules/swf-tree/color-transform.js","webpack:///./node_modules/swf-tree/tags/define-cff-font.js","webpack:///./node_modules/swf-tree/tags/define-dynamic-text.js","webpack:///./node_modules/swf-tree/tags/define-font.js","webpack:///./node_modules/swf-tree/text/font-layout.js","webpack:///./node_modules/swf-tree/text/kerning-record.js","webpack:///./node_modules/swf-tree/tags/define-font-align-zones.js","webpack:///./node_modules/swf-tree/text/font-alignment-zone.js","webpack:///./node_modules/swf-tree/text/font-alignment-zone-data.js","webpack:///./node_modules/swf-tree/tags/define-font-info.js","webpack:///./node_modules/swf-tree/tags/define-font-name.js","webpack:///./node_modules/swf-tree/tags/define-jpeg-tables.js","webpack:///./node_modules/swf-tree/tags/define-morph-shape.js","webpack:///./node_modules/swf-tree/morph-shape.js","webpack:///./node_modules/swf-tree/morph-shape-record.js","webpack:///./node_modules/swf-tree/tags/define-partial-font.js","webpack:///./node_modules/swf-tree/tags/define-scene-and-frame-label-data.js","webpack:///./node_modules/swf-tree/control/label.js","webpack:///./node_modules/swf-tree/control/scene.js","webpack:///./node_modules/swf-tree/tags/define-shape.js","webpack:///./node_modules/swf-tree/shape.js","webpack:///./node_modules/swf-tree/tags/define-sound.js","webpack:///./node_modules/swf-tree/tags/define-sprite.js","webpack:///./node_modules/swf-tree/sprite-tag.js","webpack:///./node_modules/swf-tree/tags/define-text.js","webpack:///./node_modules/swf-tree/text/text-record.js","webpack:///./node_modules/swf-tree/text/glyph-entry.js","webpack:///./node_modules/swf-tree/tags/do-action.js","webpack:///./node_modules/swf-tree/tags/do-init-action.js","webpack:///./node_modules/swf-tree/tags/enable-debugger.js","webpack:///./node_modules/swf-tree/tags/export-assets.js","webpack:///./node_modules/swf-tree/tags/file-attributes.js","webpack:///./node_modules/swf-tree/tags/frame-label.js","webpack:///./node_modules/swf-tree/tags/import-assets.js","webpack:///./node_modules/swf-tree/tags/metadata.js","webpack:///./node_modules/swf-tree/tags/place-object.js","webpack:///./node_modules/swf-tree/clip-actions.js","webpack:///./node_modules/swf-tree/clip-event-flags.js","webpack:///./node_modules/swf-tree/tags/remove-object.js","webpack:///./node_modules/swf-tree/tags/set-background-color.js","webpack:///./node_modules/swf-tree/tags/show-frame.js","webpack:///./node_modules/swf-tree/tags/sound-stream-block.js","webpack:///./node_modules/swf-tree/tags/sound-stream-head.js","webpack:///./node_modules/swf-tree/tags/telemetry.js","webpack:///./node_modules/swf-tree/tags/unknown.js","webpack:///./node_modules/swf-tree/text/index.js","webpack:///./node_modules/swf-tree/compression-method.js","webpack:///./node_modules/swf-tree/fixed-point/ufixed8p8.js","webpack:///./node_modules/swf-tree/fixed-point/ufixed16p16.js","webpack:///./node_modules/swf-renderer/renderers/node-canvas-bitmap-service.js","webpack:///./node_modules/canvas/lib/parse-font.js","webpack:///./node_modules/swf-renderer/decode-x-swf-bmp.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/@open-flash/stream/readable.js","webpack:///./node_modules/@open-flash/stream/errors/incomplete-stream.js","webpack:///./node_modules/@open-flash/stream/writable.js","webpack:///./node_modules/@open-flash/stream/concat-bytes.js","webpack:///./node_modules/stream-browserify/index.js","webpack:///./node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/util-deprecate/browser.js","webpack:///./node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/readable-stream/writable-browser.js","webpack:///./node_modules/readable-stream/duplex-browser.js","webpack:///./node_modules/readable-stream/transform.js","webpack:///./node_modules/readable-stream/passthrough.js","webpack:///./node_modules/browserify-zlib/lib/binding.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/pako/lib/zlib/zstream.js","webpack:///./node_modules/pako/lib/zlib/deflate.js","webpack:///./node_modules/pako/lib/zlib/trees.js","webpack:///./node_modules/pako/lib/zlib/messages.js","webpack:///./node_modules/pako/lib/zlib/inflate.js","webpack:///./node_modules/pako/lib/zlib/inffast.js","webpack:///./node_modules/pako/lib/zlib/inftrees.js","webpack:///./node_modules/pako/lib/zlib/constants.js","webpack:///./node_modules/swf-parser/parsers/movie.js","webpack:///./node_modules/swf-parser/concat-bytes.js","webpack:///./node_modules/swf-parser/parse-context.js","webpack:///./node_modules/swf-parser/parsers/header.js","webpack:///./node_modules/swf-parser/parsers/tags.js","webpack:///./node_modules/swf-parser/parsers/button.js","webpack:///./node_modules/swf-parser/parsers/image.js","webpack:///./node_modules/swf-parser/parsers/morph-shape.js","webpack:///./node_modules/swf-parser/parsers/sound.js","webpack:///./node_modules/swf-parser/parsers/text.js","webpack:///./node_modules/avm1-parser/index.js","webpack:///./node_modules/avm1-parser/parsers/avm1.js","webpack:///./node_modules/avm1-tree/catch-targets/_type.js","webpack:///./node_modules/avm1-tree/get-url2-method.js","webpack:///./node_modules/avmore/scope.js","webpack:///./src/lib/display/display-object-base.ts","webpack:///./src/lib/display/loader.ts","webpack:///./src/browser/xhr-loader.ts","webpack:///./src/lib/avm/slots.ts","webpack:///./src/lib/avm/native/movie-clip.ts","webpack:///./src/lib/avm/avm.ts","webpack:///./src/lib/display/character.ts","webpack:///./src/lib/display/simple-button.ts","webpack:///./src/lib/display/display-object-container.ts","webpack:///./src/lib/display/frame.ts","webpack:///./src/lib/display/morph-shape.ts","webpack:///./src/lib/display/shape.ts","webpack:///./src/lib/display/interactive-object.ts","webpack:///./src/lib/display/sprite.ts","webpack:///./src/lib/display/stage.ts","webpack:///./src/lib/services/clock.ts","webpack:///./src/lib/player.ts","webpack:///./src/browser/domu-player.ts","webpack:///./src/browser/x-swf-elements.ts","webpack:///./src/browser/polyfills.ts","webpack:///./src/main.browser.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","incident_1","CaseStyle","detectCaseStyle","identifier","test","ScreamingSnakeCase","SnakeCase","KebabCase","PascalCase","CamelCase","split","caseStyle","toLowerCase","map","part","Incident","join","parts","toUpperCase","index","upperLength","substr","substring","rename","from","to","undefined","renameMap","keys","result","Map","outKeys","Set","renamed","set","has","add","lazy_properties_1","case_style_1","invalid_document_1","invalid_type_1","lazy_options_1","not_implemented_1","read_visitor_1","DocumentType","[object Object]","options","this","_options","_applyOptions","lazyProperties","_outKeys","properties","getOutKey","Error","descriptor","changeCase","reader","raw","readDocument","readVisitor","fromMap","input","keyReader","valueReader","extra","missing","optional","invalid","rawKey","rawValue","outKey","readString","fromString","delete","type","read","err","noExtraKeys","size","createInvalidDocumentError","writer","jskey","writeDocument","fieldWriter","jsKey","write","val","createInvalidTypeError","propertyValue","error","testError","val1","val2","equals","clone","oldVal","newVal","equal","unset","update","oldMember","newMember","diff","Reflect","deleteProperty","patch","reverseDiff","_diff1","_diff2","createNotImplementedError","createLazyOptionsError","assign","renameKeys","obj","renameAll","format","ts_enum_1","TagType","$TagType","TsEnumType","enum","test_error_1","LiteralType","trustInput","_oldVal","_newVal","_diff","integer_1","$Uint16","IntegerType","min","max","invalid_array_items_1","max_array_length_1","min_array_length_1","ArrayType","itemType","minLength","maxLength","readList","itemReader","rawItem","createMaxArrayLengthError","item","push","createInvalidArrayItemsError","createMinArrayLengthError","writeList","length","itemWriter","Array","isArray","itemCount","boolean_1","$Boolean","BooleanType","isValidEnumMember","toString","getEnumMaps","tsEnum","jsToOut","outToJs","tsEnumToMap","_jsToOut","_outToJs","writeString","__importStar","mod","k","fillStyles","filters","joinStyles","shapeRecords","tags","text","blend_mode_1","BlendMode","cap_style_1","CapStyle","color_space_1","ColorSpace","compression_method_1","CompressionMethod","gradient_spread_1","GradientSpread","language_code_1","LanguageCode","_type_1","FillStyleType","_type_2","FilterType","_type_3","JoinStyleType","_type_4","ShapeRecordType","_type_5","sfixed8p8_1","Sfixed8P8","sfixed16p16_1","Sfixed16P16","ufixed8p8_1","Ufixed8P8","ufixed16p16_1","Ufixed16P16","invalid_integer_1","DEFAULT_MIN","Number","MIN_SAFE_INTEGER","DEFAULT_MAX","MAX_SAFE_INTEGER","readFloat64","fromFloat64","writeFloat64","Math","round","createInvalidIntegerError","left","right","diff1","diff2","lower_case_1","max_ucs2_string_length_1","min_ucs2_string_length_1","not_trimmed_1","pattern_not_matched_1","Ucs2StringType","resolvedOptions","allowUnicodeRegExp","lowerCase","trimmed","pattern","RegExp","jsonType","source","flags","createLowerCaseError","trim","createNotTrimmedError","strLen","createMinUcs2StringLengthError","createMaxUcs2StringLengthError","unicode","createPatternNotMatchedError","bytes_1","$Bytes","BytesType","Infinity","sint32_1","document_1","$Matrix","scaleX","scaleY","rotateSkew0","rotateSkew1","translateX","$Sint32","translateY","fixed_point_1","createFixedPoint","signed","intBits","fracBits","uint8_1","s_rgb8_1","$StraightSRgba8","$SRgb8","g","b","a","$Uint8","fromBoolean","_","fromBytes","fromDate","fromList","fromNull","partial","target","apply","restoreProperties","configurable","writable","__importDefault","default","object_inspect_1","$FilterType","global","base64","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","isBuffer","len","checked","copy","buffer","data","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","remaining","parsed","parseInt","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","e","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","inspect","match","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","leadSurrogate","toByteArray","replace","stringtrim","base64clean","src","dst","DisplayObjectType","typeName","variableName","$Sint16","swf_tree_1","parseRectBits","bitStream","nBits","readUint16Bits","xMin","readSint16Bits","xMax","yMin","yMax","parseMatrixBits","readBoolBits","scaleBits","fromEpsilons","readSint32Bits","fromValue","skew0","skew1","skewBits","translateBits","parseColorTransformBits","hasAdd","hasMult","redMult","greenMult","blueMult","redAdd","greenAdd","blueAdd","parseColorTransformWithAlphaBits","alphaMult","alphaAdd","parseRect","byteStream","asBitStream","align","parseSRgb8","readUint8","parseStraightSRgba8","parseMatrix","parseColorTransform","parseColorTransformWithAlpha","TaggedUnionType","tagValue","tag","variant","getValueToVariantMap","union","variantRead","outTag","getOutTag","getTagType","type1","matchTrusted","variants","_outTag","cur","_tagType","tagType","_valueToVariantMap","valueToVariantMap","lit","Function","window","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","ctor","superCtor","super_","constructor","TempCtor","pna","objectKeys","Duplex","util","inherits","Readable","Writable","v","method","readable","allowHalfOpen","onend","_writableState","ended","onEndNT","self","highWaterMark","_readableState","destroyed","_destroy","cb","AvmValueType","AvmValue","avmValue","_swfVersion","AVM_NULL","freeze","Null","AVM_UNDEFINED","Undefined","AVM_TRUE","Boolean","AVM_FALSE","$FillStyleType","$Vector2D","$Uint32","$JoinStyleType","$ShapeRecordType","sint16_1","$Rect","readable_1","ReadableStream","writable_1","WritableStream","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","re","isObject","isDate","isError","isFunction","isPrimitive","ReflectOwnKeys","R","ReflectApply","receiver","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","init","_events","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","_addListener","listener","prepend","events","existing","warning","newListener","unshift","warned","w","emitter","count","console","warn","_onceWrap","state","fired","wrapFn","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","message","context","handler","position","originalListener","shift","pop","spliceOne","rawListeners","eventNames","invalid_value_1","createInvalidValueError","_a","FixedPoint","epsilons","array_1","color_stop_1","$Gradient","spread","$GradientSpread","colorSpace","$ColorSpace","colors","$ColorStop","straight_s_rgba8_1","ratio","color","invalid_float64_1","Float64Type","allowNaN","allowInfinity","createInvalidFloat64Error","abs","is","$BlendMode","fn","arg1","arg2","arg3","copyProps","SafeBuffer","TYPED_OK","Uint16Array","Int32Array","_has","sources","shrinkBuf","fnTyped","arraySet","dest","src_offs","dest_offs","flattenChunks","chunks","chunk","fnUntyped","setTyped","Buf8","Buf16","Buf32","hasMap","mapSizeDescriptor","getOwnPropertyDescriptor","mapSize","mapForEach","forEach","hasSet","setSizeDescriptor","setSize","setForEach","booleanValueOf","valueOf","bigIntValueOf","BigInt","inspectCustom","custom","inspectSymbol","wrapQuotes","defaultStyle","opts","quoteChar","quoteStyle","quote","toStr","inspect_","depth","seen","lowbyte","inspectString","maxDepth","xs","f","nameOf","symString","markBoxed","HTMLElement","nodeName","getAttribute","isElement","attrs","attributes","childNodes","arrObjKeys","isMap","collectionOf","isSet","isBigInt","hasOwn","8","9","10","12","13","entries","isArr","bitmap_1","$Bitmap","focal_gradient_1","$FocalGradient","linear_gradient_1","$LinearGradient","morph_bitmap_1","$MorphBitmap","morph_focal_gradient_1","$MorphFocalGradient","morph_linear_gradient_1","$MorphLinearGradient","morph_radial_gradient_1","$MorphRadialGradient","morph_solid_1","$MorphSolid","radial_gradient_1","$RadialGradient","solid_1","$Solid","gradient_1","morph_color_stop_1","$MorphGradient","$MorphColorStop","curved_edge_1","$CurvedEdge","morph_curved_edge_1","$MorphCurvedEdge","morph_straight_edge_1","$MorphStraightEdge","morph_style_change_1","$MorphStyleChange","straight_edge_1","$StraightEdge","style_change_1","$StyleChange","$CapStyle","WhiteListType","allowed","values","squash","$LanguageCode","AudioCodingFormat","$AudioCodingFormat","SoundType","$SoundType","Stream","Transform","PassThrough","setImmediate","CorkedRequest","_this","next","entry","finish","corkReq","callback","pendingcb","corkedRequestsFree","onCorkedFinish","asyncWrite","WritableState","internalUtil","deprecate","OurUint8Array","realHasInstance","destroyImpl","nop","stream","isDuplex","objectMode","writableObjectMode","hwm","writableHwm","writableHighWaterMark","defaultHwm","finalCalled","needDrain","ending","finished","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","_write","writev","_writev","destroy","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","prefinish","getBuffer","current","hasInstance","pipe","_uint8ArrayToBuffer","writeAfterEnd","valid","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_undestroy","undestroy","basic_data_types_1","ShapeVersion","parseGlyphBits","fillBits","readUint32Bits","lineBits","records","parseShapeRecordStringBits","Shape1","parseShapeBits","shapeVersion","styles","parseShapeStylesBits","initialStyles","line","asByteStream","parseFillStyleList","parseLineStyleList","bytePos","bitPos","parseStraightEdgeBits","parseCurvedEdgeBits","parseStyleChangeBits","controlX","controlY","deltaX","deltaY","CurvedEdge","controlDelta","anchorDelta","isDiagonal","isVertical","StraightEdge","delta","hasNewStyles","changeLineStyle","changeRightFill","changeLeftFill","moveTo","leftFill","rightFill","lineStyle","newStyles","StyleChange","parseListLength","allowExtended","readUint16LE","Shape2","parseFillStyle","Shape3","withAlpha","parseSolidFill","parseLinearGradientFill","parseRadialGradientFill","parseFocalGradientFill","parseBitmapFill","repeating","smoothed","bitmapId","matrix","Bitmap","gradient","parseGradient","focalPoint","readSint16LE","FocalGradient","LinearGradient","RadialGradient","Solid","Shape4","parseLineStyle2","parseLineStyle","width","startCap","Round","endCap","noHScale","noVScale","noClose","pixelHinting","hasFill","joinStyleId","startCapStyleId","endCapStyleId","Bevel","Miter","id","capStyleFromId","capStyleId","None","Square","parseGlyph","parseShape","collection","detector","isIE","agent","navigator","userAgent","div","document","createElement","all","getElementsByTagName","innerHTML","undef","isLegacyOpera","opera","uint16_1","literal_1","matrix_1","bevel_1","$Bevel","blur_1","$Blur","color_matrix_1","$ColorMatrix","convolution_1","$Convolution","drop_shadow_1","$DropShadow","glow_1","$Glow","gradient_bevel_1","$GradientBevel","gradient_glow_1","$GradientGlow","miter_1","$Miter","round_1","$Round","vector_2d_1","morph_fill_style_1","morph_line_style_1","$MorphShapeStyles","$MorphFillStyle","$MorphLineStyle","tagged_union_1","fill_style_1","join_style_1","$LineStyle","$JoinStyle","$FillStyle","uint32_1","shape_styles_1","$ShapeStyles","line_style_1","csm_text_settings_1","$CsmTextSettings","define_binary_data_1","$DefineBinaryData","define_bitmap_1","$DefineBitmap","define_button_1","$DefineButton","define_cff_font_1","$DefineCffFont","define_dynamic_text_1","$DefineDynamicText","define_font_1","$DefineFont","define_font_align_zones_1","$DefineFontAlignZones","define_font_info_1","$DefineFontInfo","define_font_name_1","$DefineFontName","define_jpeg_tables_1","$DefineJpegTables","define_morph_shape_1","$DefineMorphShape","define_partial_font_1","$DefinePartialFont","define_scene_and_frame_label_data_1","$DefineSceneAndFrameLabelData","define_shape_1","$DefineShape","define_sound_1","$DefineSound","define_sprite_1","$DefineSprite","define_text_1","$DefineText","do_action_1","$DoAction","do_init_action_1","$DoInitAction","enable_debugger_1","$EnableDebugger","export_assets_1","$ExportAssets","file_attributes_1","$FileAttributes","frame_label_1","$FrameLabel","import_assets_1","$ImportAssets","metadata_1","$Metadata","place_object_1","$PlaceObject","remove_object_1","$RemoveObject","set_background_color_1","$SetBackgroundColor","show_frame_1","$ShowFrame","sound_stream_block_1","$SoundStreamBlock","sound_stream_head_1","$SoundStreamHead","telemetry_1","$Telemetry","unknown_1","$Unknown","GridFitting","$GridFitting","TextRenderer","$TextRenderer","color_transform_1","$ColorTransformWithAlpha","$ColorTransform","$Filter","TextAlignment","$TextAlignment","shape_record_1","$Glyph","$ShapeRecord","shape_records_1","CsmTableHint","$CsmTableHint","white_list_1","$SoundRate","$SoundSize","ucs2_string_1","$NamedId","path_1","SegmentType","createStraightSegment","startX","startY","endX","endY","Straight","createCurvedSegment","Curved","normalizeStraightSRgba","decodeGradient","swfGradient","colorStop","decodeFillStyle","swfStyle","style","extractContinuous","openSet","first","splice","segmentsToCommands","segments","sequence","CommandType","MoveTo","segment","LineTo","CurveTo","layerToPaths","layer","paths","fillSet","fills","commands","lineSet","lines","decodeSwfShape","converter","SwfShapeDecoder","shape","record","applyCurvedEdge","applyStraightEdge","applyStyleChange","getShape","swfFillStyles","swfLineStyles","layers","lineFill","setNewStyles","newFills","newLines","setLeftFillById","setRightFillById","setLineFillById","path","swfFillStyle","swfLineStyle","LineStyleType","createStyleLayer","fillId","currentLayer","fillIndex","MorphFillStyleType","MorphLineStyleType","MorphCommandType","parseFont","createCanvas","height","createImageData","ImageData","loadImage","Promise","resolve","reject","image","cleanup","onload","onerror","assert","ok","kRangeErrorMessage","Z_MIN_WINDOWBITS","Z_MAX_WINDOWBITS","Z_DEFAULT_WINDOWBITS","Z_MIN_CHUNK","Z_MAX_CHUNK","Z_DEFAULT_CHUNK","Z_MIN_MEMLEVEL","Z_MAX_MEMLEVEL","Z_DEFAULT_MEMLEVEL","Z_MIN_LEVEL","Z_MAX_LEVEL","Z_DEFAULT_LEVEL","Z_DEFAULT_COMPRESSION","bkeys","bk","bkey","codes","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_VERSION_ERROR","ckeys","ck","ckey","zlibBuffer","engine","buffers","nread","flow","onEnd","close","zlibBufferSync","flushFlag","_finishFlushFlag","_processChunk","Deflate","Zlib","DEFLATE","Inflate","INFLATE","Gzip","GZIP","Gunzip","GUNZIP","DeflateRaw","DEFLATERAW","InflateRaw","INFLATERAW","Unzip","UNZIP","isValidFlushFlag","flag","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","_opts","_chunkSize","chunkSize","flush","finishFlush","_flushFlag","windowBits","level","memLevel","strategy","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","dictionary","_handle","_hadError","errno","_close","_buffer","_offset","_level","_strategy","emitCloseNT","createDeflate","createInflate","createDeflateRaw","createInflateRaw","createGzip","createGunzip","createUnzip","deflate","deflateSync","gzip","gzipSync","deflateRaw","deflateRawSync","unzip","unzipSync","inflate","inflateSync","gunzip","gunzipSync","inflateRaw","inflateRawSync","params","reset","_flush","_transform","kind","_this2","ws","availInBefore","availOutBefore","inOff","async","writeSync","req","availInAfter","availOutAfter","have","newReq","ReadableState","EElistenerCount","debugUtil","debug","debuglog","StringDecoder","BufferList","kProxyEvents","readableObjectMode","readableHwm","readableHighWaterMark","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","awaitDrain","readingMore","decoder","_read","readableAddChunk","addToFront","skipChunkCheck","emitReadable","onEofChunk","chunkInvalid","addChunk","maybeReadMore","needMoreData","isPaused","setEncoding","enc","MAX_HWM","howMuchToRead","head","computeNewHighWaterMark","emitReadable_","maybeReadMore_","nReadingNextTick","resume_","clear","hasStrings","nb","tail","copyFromBufferString","copyFromBuffer","fromListPartial","endReadable","endReadableNT","nOrig","doRead","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","ondata","cleanedUp","pipeOnDrain","increasedAwaitDrain","pause","event","resume","dests","ev","wrap","paused","_fromList","emitErrorNT","readableDestroyed","writableDestroyed","nenc","retried","_normalizeEncoding","normalizeEncoding","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","total","utf8CheckIncomplete","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","done","err2","pSlice","functionsHaveNames","pToString","arrbuf","DataView","regex","getName","func","truncate","something","rawname","fail","expected","operator","stackStartFunction","AssertionError","_deepEqual","strict","memos","getTime","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","actualVisitedObjects","aIsArgs","isArguments","bIsArgs","ka","kb","sort","objEquiv","expectedException","isPrototypeOf","_throws","shouldThrow","block","_tryBlock","userProvidedMessage","isUnexpectedException","generatedMessage","captureStackTrace","stack","fn_name","idx","next_line","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","getOwnPropertyDescriptors","descriptors","formatRegExp","objects","JSON","stringify","msg","noDeprecation","throwDeprecation","traceDeprecation","trace","debugEnviron","debugs","ctx","stylize","stylizeNoColor","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","recurseTimes","primitive","simple","formatPrimitive","visibleKeys","hash","arrayToHash","formatError","Date","output","base","braces","toUTCString","formatProperty","formatArray","reduce","prev","numLinesEst","reduceToSingleString","desc","ar","pad","NODE_DEBUG","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","date","regexp","months","prop","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","origin","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","newReason","promisify","original","promiseResolve","promiseReject","promise","setPrototypeOf","defineProperties","callbackify","callbackified","maybeCb","then","rej","adler","s1","s2","crcTable","table","makeTable","crc","needed","createIncompleteStreamError","parseClipEventFlags","extendedEvents","readFloat32LE","load","enterFrame","unload","mouseMove","mouseDown","mouseUp","keyDown","keyUp","initialize","press","release","releaseOutside","rollOver","rollOut","dragOver","dragOut","keyPress","construct","parseClipActions","actionsSize","readUint32LE","keyCode","actions","takeBytes","parseFilter","parseDropShadowFilter","parseBlurFilter","parseGlowFilter","parseBevelFilter","parseGradientGlowFilter","parseConvolutionFilter","parseColorMatrixFilter","parseGradientBevelFilter","shadowColor","highlightColor","blurX","readSint32LE","blurY","angle","distance","strength","passes","onTop","compositeSource","knockout","inner","filter","Blur","ColorMatrix","matrixWidth","matrixHeight","divisor","bias","defaultColor","preserveAlpha","clamp","Convolution","DropShadow","Glow","colorCount","GradientBevel","GradientGlow","parseBlendMode","Normal","Layer","Multiply","Screen","Lighten","Darken","Difference","Add","Subtract","Invert","Alpha","Erase","Overlay","Hardlight","parseClipActionsString","skip","savedPos","readUint32BE","parseFilterList","filterCount","parseColorStop","parseMorphColorStop","morphRatio","morphColor","colorSpaceId","Pad","Repeat","SRgb","LinearRgb","parseMorphGradient","ActionType","$ActionType","ValueType","$ValueType","elementUtilsMaker","listenerHandlerMaker","idGeneratorMaker","idHandlerMaker","reporterMaker","browserDetector","batchProcessorMaker","stateHandler","objectStrategyMaker","scrollStrategyMaker","isCollection","toArray","nodeType","getOption","defaultValue","idHandler","element","idGenerator","defaultIdHandler","reporter","batchProcessor","globalOptions","callOnAdd","detectionStrategy","eventListenerHandler","elementUtils","desiredStrategy","strategyOptions","onReadyCallbacks","listenTo","elements","onResizeCallback","elementsReady","onReadyCallback","getState","initState","isDetectable","isBusy","markBusy","makeDetectable","markAsDetectable","startSize","offsetWidth","offsetHeight","uninstall","cleanState","css_color_1","display_object_type_1","decode_swf_morph_shape_1","decode_swf_shape_1","morph_path_1","node_canvas_bitmap_service_1","lerp","lerpRgba","CanvasRenderer","bitmapService","NodeCanvasBitmapService","morphShapeCache","WeakMap","shapeCache","stage","renderStage","addBitmap","setTransform","clearRect","canvas","scale","child","children","drawDisplayObject","displayObject","Container","drawContainer","Shape","drawShape","MorphShape","drawMorphShape","swfShape","compiled","decodeSwfMorphShape","save","applyMatrix","getCompiledShape","definition","drawPath","restore","container","getCompiledMorphShape","drawMorphPath","beginPath","command","quadraticCurveTo","lineTo","fillStyle","fromNormalizedColor","startColor","endColor","lineWidth","strokeStyle","lineCap","lineJoin","stroke","bitmap","getById","createPattern","GRAD_RADIUS","createRadialGradient","addColorStop","stream_1","ast","movie_1","movieFromBytes","parseMovie","NativeHost","NoopHost","LoggedHost","logs","avm1_parser_1","action_type_1","value_type_1","avm_value_1","scope_1","SWF_VERSION","Vm","nextScriptId","scriptsById","avm1Bytes","rootScope","script","scriptId","host","maxActions","scope","DynamicScope","StaticScope","ectx","ExecutionContext","parser","Avm1Parser","actionCount","action","readNext","exec","External","ownProperties","tryGetMember","AvmStack","AvmConstantPool","pool","vm","defaultTarget","constantPool","thisArg","CallMethod","execCallMethod","ConstantPool","execConstantPool","DefineLocal","execDefineLocal","GetMember","execGetMember","GetVariable","execGetVariable","InitObject","execInitObject","Pop","execPop","Push","execPush","SetTarget","execSetTarget","SetVariable","execSetVariable","Stop","execStop","Trace","execTrace","avmKey","toAvmString","getMember","avmArgCount","argCount","toUintSize","avmPropertyCount","propertyCount","newObject","Constant","Sint32","targetName","getTarget","stop","messageStr","defineHiddenProperty","propertyName","noStackSymbol","_super","__","converted","_message","cause","_stackContainer","_stack","noStack","argIndex","createIncident","busy","eventListeners","getListeners","idCount","generate","quiet","attachFunction","utils","Batch","batch","topLevel","bottomLevel","fns","asyncProcess","autoProcess","asyncFrameHandler","isProcessing","processBatch","processingBatch","processBatchAsync","force","localAsyncProcess","getObject","OBJECT_STYLE","positionCheckPerformed","getComputedStyle","mutateDom","alterPositionStyles","removeRelativeStyles","getNumericalValue","cssText","tabIndex","setAttribute","getDocument","contentDocument","objectDocument","appendChild","injectObject","listenerProxy","proxy","attachEvent","defaultView","addEventListener","detachEvent","removeChild","hasState","scrollbarSizes","body","insertBefore","firstChild","widthSize","clientWidth","heightSize","clientHeight","getScrollbarSizes","detectionContainerClass","addEvent","el","removeEvent","removeEventListener","getExpandElement","getShrinkElement","styleId","containerClass","getElementById","containerAnimationClass","containerAnimationActiveClass","styleElement","injectStyle","injectScrollStyle","isUnrendered","getStyle","elementStyle","top","bottom","widthCSS","heightCSS","storeStyle","storeCurrentSize","lastWidth","lastHeight","getWidthOffset","getHeightOffset","getExpandWidth","getExpandHeight","positionScrollbars","expand","shrink","expandWidth","expandHeight","shrinkWidth","getShrinkWidth","shrinkHeight","getShrinkHeight","scrollLeft","scrollTop","injectContainerElement","className","addAnimationClass","onAnimationStart","onRendered","injectScrollElements","rootContainer","scrollbarWidth","scrollbarHeight","containerStyle","containerContainer","expandChild","shrinkChild","onExpandScroll","onShrinkScroll","onExpand","onShrink","registerListenersAndPositionElements","updateChildSizes","getExpandChildElement","updateDetectorElements","areElementsInjected","h","notifyListenersIfNeeded","lastNotifiedWidth","lastNotifiedHeight","handleScroll","finalizeDomMutation","ready","install","ownerDocument","contains","isInDocument","isDetached","old","SwfMorphShapeDecoder","morphMoveTo","morphDelta","morphControlDelta","morphAnchorDelta","morphWidth","readBoolean","writeBoolean","morphMatrix","morph_gradient_1","morphFocalPoint","float64_1","morph_shape_styles_1","grid_fitting_1","text_renderer_1","CsmTextSettings","textId","renderer","fitting","thickness","sharpness","DefineBinaryData","readBytes","writeBytes","image_type_1","DefineBitmap","mediaType","$ImageType","button_cond_action_1","button_record_1","DefineButton","trackAsMenu","characters","$ButtonRecord","$ButtonCondAction","button_cond_1","conditions","$ButtonCond","idleToOverDown","outDownToIdle","outDownToOverDown","overDownToOutDown","overDownToOverUp","overUpToOverDown","overUpToIdle","idleToOverUp","overDownToIdle","color_transform_with_alpha_1","filter_1","stateHitTest","stateDown","stateOver","stateUp","characterId","colorTransform","blendMode","DefineCffFont","fontName","isItalic","isBold","rect_1","text_alignment_1","DefineDynamicText","bounds","wordWrap","password","readonly","autoSize","noSelect","border","wasStatic","html","useGlyphFont","fontId","fontClass","fontSize","marginLeft","marginRight","indent","leading","glyph_1","font_layout_1","DefineFont","isAnsi","isSmall","isShiftJis","language","glyphs","codeUnits","layout","$FontLayout","kerning_record_1","ascent","descent","advances","kerning","$KerningRecord","adjustment","csm_table_hint_1","font_alignment_zone_1","DefineFontAlignZones","csmTableHint","zones","$FontAlignmentZone","font_alignment_zone_data_1","$FontAlignmentZoneData","hasX","hasY","DefineFontInfo","DefineFontName","copyright","DefineJpegTables","morph_shape_1","DefineMorphShape","morphBounds","edgeBounds","morphEdgeBounds","hasNonScalingStrokes","hasScalingStrokes","$MorphShape","morph_shape_record_1","$MorphShapeRecord","DefinePartialFont","label_1","scene_1","DefineSceneAndFrameLabelData","scenes","$Scene","labels","$Label","frame","shape_1","DefineShape","hasFillWinding","$Shape","audio_coding_format_1","sound_rate_1","sound_size_1","sound_type_1","DefineSound","soundRate","soundSize","soundType","sampleCount","sprite_tag_1","DefineSprite","frameCount","$SpriteTag","text_record_1","DefineText","$TextRecord","glyph_entry_1","offsetX","offsetY","$GlyphEntry","advance","DoAction","DoInitAction","spriteId","EnableDebugger","named_id_1","ExportAssets","assets","FileAttributes","useDirectBlit","useGpu","hasMetadata","useAs3","noCrossDomainCaching","useRelativeUrls","useNetwork","FrameLabel","isAnchor","ImportAssets","url","Metadata","metadata","clip_actions_1","PlaceObject","isUpdate","clipDepth","bitmapCache","visible","backgroundColor","clipActions","$ClipActions","clip_event_flags_1","$ClipEventFlags","RemoveObject","SetBackgroundColor","ShowFrame","SoundStreamBlock","SoundStreamHead","playbackSoundRate","playbackSoundSize","playbackSoundType","streamSoundCompression","streamSoundRate","streamSoundSize","streamSoundType","streamSoundSampleCount","latencySeek","Telemetry","Unknown","$CompressionMethod","canvas_1","decode_x_swf_bmp_1","bitmaps","decoded","decodeXSwfBmpSync","cvs","getContext","putImageData","bitmap$","weightRe","styleRe","variantRe","stretchRe","sizeFamilyRe","cache","sizeFamily","font","weight","stretch","parseFloat","unit","family","zlib","RGB_SIZE","RGBA_SIZE","formatId","paddedWidth","compressedData","tailBytes","srcData","Uint8ClampedArray","dataView","colorTableSize","ci","setUint32","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","NaN","rt","LN2","incomplete_stream_1","_byteOffset","bitOffset","view","byteEnd","leftLen","leftPartialByte","rightPartialByte","mask","getInt8","getInt16","getInt32","getUint8","getUint16","getUint32","u16","reinterpretUint16AsFloat16","getFloat32","getFloat64","readUintBits","readIntBits","nextByte","endOfString","endBitPos","unsigned","sign","exponent","fraction","concat_bytes_1","TMP_BUFFER","TMP_DATA_VIEW","reinterpretFloat16AsUint16","signBit","bitsBuffer","writeUint8","getBytes","writeZeros","writeUint16LE","writeSint32LE","writeUint16BE","setFloat32","setFloat64","writeUintBits","writeSintBits","concatBytes","bits","availableBits","consumedBits","totalSize","EE","_isStdio","didOnEnd","instance","Constructor","_classCallCheck","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","registerImmediate","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","handle","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","port2","documentElement","onreadystatechange","random","task","config","localStorage","Zstream","zlib_deflate","zlib_inflate","constants","NONE","init_done","write_in_progress","pending_close","gzip_id_bytes_read","deflateEnd","strm","inflateEnd","in_off","in_len","out_off","out_len","avail_in","next_in","avail_out","next_out","_process","_checkError","_afterSync","_after","next_expected_header_byte","inflateSetDictionary","_error","_init","_setDictionary","_reset","deflateInit2","Z_DEFLATED","inflateInit2","deflateSetDictionary","deflateReset","inflateReset","total_in","total_out","data_type","configuration_table","trees","adler32","crc32","Z_UNKNOWN","MAX_MEM_LEVEL","MAX_WBITS","DEF_MEM_LEVEL","L_CODES","LITERALS","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","PRESET_DICT","INIT_STATE","EXTRA_STATE","NAME_STATE","COMMENT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","OS_CODE","errorCode","rank","zero","flush_pending","pending","pending_buf","pending_out","flush_block_only","_tr_flush_block","block_start","strstart","put_byte","putShortMSB","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","w_size","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","_w_size","window_size","hash_size","insert","ins_h","hash_shift","hash_mask","deflate_fast","hash_head","bflush","match_length","_tr_tally","max_lazy_match","last_lit","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","DeflateState","status","pending_buf_size","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","heap","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","deflateResetKeep","_tr_init","max_block_size","max_start","deflateInit","deflateSetHeader","old_flush","beg","hcrc","comment","os","header","bstate","deflate_huff","deflate_rle","_tr_align","_tr_stored_block","avail","tmpDict","dictLength","deflateInfo","Z_BINARY","Z_TEXT","STORED_BLOCK","STATIC_TREES","DYN_TREES","LENGTH_CODES","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","send_bits","send_code","tree","bi_reverse","gen_codes","next_code","init_block","bi_windup","smaller","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lc","lx","build_tree","node","stree","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","send_tree","static_init_done","stored_len","copy_block","tr_static_init","opt_lenb","static_lenb","max_blindex","black_mask","detect_data_type","build_bl_tree","lcodes","dcodes","blcodes","send_all_trees","bi_flush","2","1","0","-1","-2","-3","-4","-5","-6","inflate_fast","inflate_table","CODES","LENS","DISTS","Z_TREES","HEAD","FLAGS","TIME","OS","EXLEN","EXTRA","NAME","COMMENT","HCRC","DICTID","DICT","TYPE","TYPEDO","STORED","COPY_","COPY","TABLE","LENLENS","CODELENS","LEN_","LEN","LENEXT","DIST","DISTEXT","MATCH","LIT","CHECK","LENGTH","DONE","BAD","MEM","SYNC","ENOUGH_LENS","ENOUGH_DISTS","DEF_WBITS","zswap32","q","InflateState","havedict","dmax","check","wbits","wsize","whave","wnext","hold","lencode","distcode","lenbits","distbits","ncode","nlen","ndist","work","lendyn","distdyn","sane","back","was","inflateResetKeep","inflateReset2","lenfix","distfix","virgin","fixedtables","sym","updatewindow","inflateInit","put","_in","_out","from_source","here_bits","here_op","here_val","last_bits","last_op","last_val","here","hbuf","order","inf_leave","xflags","extra_len","inflateGetHeader","inflateInfo","s_window","lcode","dcode","lmask","dmask","op","dolen","dodist","lbase","lext","dbase","dext","lens_index","table_index","incr","low","root","curr","drop","used","huff","base_index","MAXBITS","offs","extra_index","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","parse_context_1","header_1","tags_1","parseDecompressedMovie","swfVersion","DefaultParseContext","parseHeader","parseTagBlockString","startPos","headerSignature","parseSwfSignature","compressionMethod","curPos","signature","tailBuffer","deflated","decompressed","Lzma","glyphCounts","glyphCount","parseCompressionMethod","uncompressedFileLength","frameSize","frameRate","button_1","display_1","image_1","sound_1","text_1","available","peekUint8","oldBytePos","parseTag","codeAndLength","parseTagHeader","tagCode","parseDefineShape","parsePlaceObject","parseRemoveObject","parseDefineBits","getVersion","parseDefineJpegTables","parseSetBackgroundColor","parseDefineText","parseDoAction","Stereo","Mono","getSoundRateFromCode","getAudioCodingFormatFromCode","parseDefineSound","parseDefineBitsLossless","parseDefineBitsJpeg2","parseDefineShape2","parsePlaceObject2","parseRemoveObject2","parseDefineShape3","parseDefineButton2","parseDefineBitsJpeg3","parseDefineBitsLossless2","parseDefineEditText","parseDefineSprite","parseFrameLabel","parseDefineMorphShape","parseExportAssets","parseImportAssets","parseDoInitAction","parseFileAttributes","parsePlaceObject3","parseImportAssets2","parseDefineFontAlignZones","getGlyphCount","parseCsmTextSettings","parseDefineFont3","parseMetadata","parseDefineShape4","parseDefineMorphShape2","parseDefineSceneAndFrameLabelData","parseDefineFontName","parseDefineBitsJpeg4","parseTagBody","take","setGlyphCount","parseTextRendererBits","parseGridFittingBits","imageDimensions","testImageStart","JPEG_START","ERRONEOUS_JPEG_START","getJpegImageDimensions","PNG_START","getPngImageDimensions","GIF_START","getGifImageDimensions","dataLen","_byteStream","parseDefineBitsLosslessAny","actionOffset","parseButtonRecordString","ButtonVersion","Button2","parseButton2CondActionString","hasFont","hasMaxLength","hasColor","hasText","hasLayout","hasFontClass","readCString","parseTextAlignment","rawVariableName","useWideCodes","useWideOffsets","parseLanguageCode","fontNameLength","parseOffsetGlyphs","parseFontLayout","glyphCountProvider","parseCsmTableHintBits","parseFontAlignmentZone","parseDefineMorphShapeAny","MorphShapeVersion","MorphShape1","MorphShape2","morphShapeVersion","parseMorphShape","sceneCount","readUint32Leb128","labelCount","parseDefineShapeAny","indexBits","advanceBits","parseTextRecordString","assetCount","hasCharacterId","hasMatrix","hasColorTransform","hasRatio","hasName","hasClipDepth","hasClipActions","hasFilters","hasBlendMode","hasCacheHint","hasClassName","hasImage","hasVisibility","hasBackgroundColor","useBitmapCache","isVisible","parseButtonRecord","buttonVersion","hasFilterList","parseButton2CondAction","parseButtonCond","nextActionOffset","byteCount","getNextChunkIndex","search","chunkStart","nextChunkStart","readJpegChunks","frameHeight","frameWidth","readUint16BE","imageData","startBytes","parseMorphShapeBits","parseMorphShapeStylesBits","startRecords","parseMorphShapeStartRecordStringBits","parseMorphShapeEndRecordStringBits","parseMorphFillStyleList","parseMorphLineStyleList","parseMorphStyleChangeBits","asCurvedEdge","edge","asMorphEdge","startEdge","endEdge","startCurve","endCurve","startRecord","startStyle","styleChange","parseMorphFillStyle","parseMorphSolidFill","parseMorphLinearGradientFill","parseMorphRadialGradientFill","parseMorphFocalGradientFill","parseMorphBitmapFill","parseMorphLineStyle2","parseMorphLineStyle1","soundRateCode","formatCode","UncompressedNativeEndian","Adpcm","Mp3","UncompressedLittleEndian","Nellymoser16","Nellymoser8","Nellymoser","Speex","parseTextRecord","hasAlpha","hasOffsetX","hasOffsetY","entryCount","parseFontAlignmentZoneData","readFloat16LE","parseKerningRecord","Pixel","SubPixel","Auto","Latin","Japanese","Korean","SimplifiedChinese","TraditionalChinese","Advanced","Thin","Medium","Thick","zoneDataCount","useWideOffset","offsets","Left","Right","Center","Justify","avm1_1","parseAction","get_url2_method_1","parseActionHeader","actionCode","parseGotoFrameAction","GotoFrame","parseGetUrlAction","GetUrl","parseStoreRegisterAction","register","StoreRegister","parseConstantPoolAction","constantCount","parseWaitForFrameAction","skipCount","WaitForFrame","parseSetTargetAction","parseGotoLabelAction","label","GotoLabel","parseWaitForFrame2Action","WaitForFrame2","parseDefineFunction2Action","parameterCount","registerCount","preloadThis","suppressThis","preloadArguments","suppressArguments","preloadSuper","suppressSuper","preloadRoot","preloadParent","preloadGlobal","parameters","codeSize","DefineFunction2","parseTryAction","hasCatchBlock","hasFinallyBlock","catchInRegister","trySize","catchSize","finallySize","catchTarget","CatchTargetType","Register","Variable","parseCatchTarget","tryBody","catchBody","finallyBody","Try","try","catch","finally","parseWithAction","withSize","withBody","With","with","parsePushAction","parseActionValue","typeCode","Float32","Float64","readFloat64LE","parseJumpAction","Jump","parseGetUrl2Action","GetUrl2Method","Get","Post","skipBits","loadTarget","loadVariables","GetUrl2","parseDefineFunctionAction","bodySize","DefineFunction","parseIfAction","If","parseGotoFrame2Action","play","sceneBias","GotoFrame2","actionDataStartPos","NextFrame","PreviousFrame","Play","ToggleQuality","StopSounds","Divide","Equals","Less","And","Or","Not","StringEquals","StringLength","StringExtract","ToInteger","SetTarget2","StringAdd","GetProperty","SetProperty","CloneSprite","RemoveSprite","StartDrag","EndDrag","StringLess","Throw","CastOp","ImplementsOp","FsCommand2","RandomNumber","MbStringLength","CharToAscii","AsciiToChar","GetTime","MbStringExtract","MbCharToAscii","MbAsciiToChar","Delete","Delete2","CallFunction","Return","Modulo","NewObject","DefineLocal2","InitArray","TypeOf","TargetPath","Enumerate","Add2","Less2","Equals2","ToNumber","ToString","PushDuplicate","StackSwap","SetMember","Increment","Decrement","NewMethod","InstanceOf","Enumerate2","BitAnd","BitOr","BitXor","BitLShift","BitRShift","BitURShift","StrictEquals","Greater","StringGreater","Extends","Call","actionDataLength","$CatchTargetType","$GetUrl2Method","setMember","DisplayObjectBase","LoaderEvent","loader_SwfLoader","super","sprite","uri","xhr","XMLHttpRequest","open","responseType","response","movie","swf_parser","send","getMovie","handleMovieLoaded","visitor","visitLoader","isMainLoop","runScripts","SwfHeader","Complete","NativeSlot","AUDIO","SPRITE","NATIVE_SLOTS","MovieClipBindings","realm","bindings","SYMBOL","movie_clip_MovieClipGotoAndPlayBindings","getOrCreate","newExternal","slot","slots","getNativeSlot","frameArg","avm_value","gotoAndPlay","REALM","AVM_SPRITE_CACHE","getAvmSprite","external","slotValue","setNativeSlot","namedChild","namedChildren","TARGET_BY_ID","TARGET_TO_ID","CharacterType","CharacterDictionary","character","ButtonState","display_object_container_DisplayObjectContainer","display_object_type","addChildAtIndex","incident","deleteCount","nextFrame","Frame","collectFrames","curTags","swf_tree","morph_shape_MorphShape","visitMorphShape","shape_Shape","visitShape","interactive_object_InteractiveObject","instanciateState","avm1Ctx","DynamicSprite","simple_button_SimpleButton","Up","button","upState","states","up","downState","down","overState","over","hitTestState","hitTest","visitSimpleButton","sprite_AbstractSprite","frameLabels","stopped","frameIndex","currentFrameIndex","visitSprite","_type","setCharacter","buttonRecord","Button","createButtonCharacter","createMorphShapeCharacter","createBitmapCharacter","execDoAction","createShapeCharacter","Sprite","createSpriteCharacter","execPlaceObject","execRemoveObject","executeActions","getChildAtDepth","getCharacterById","fromCharacter","sprite_ChildSprite","setChildAtDepth","removeChildAtDepth","sprite_RootSprite","avmore_vm","avmore_host","targetId","createAvm1Script","runToCompletion","createAvm1Context","frames","addFrame","applyTag","DEFAULT_BACKGROUND_COLOR","stage_Stage","frameSizeInTwips","visitStage","SYSTEM_CLOCK","handles","now","nativeHandle","createSystemClock","ChildClock","parent","initialEpoch","epoch","pausedAt","tasks","targetTime","outerHandle","PlayerState","player_Player","movieUrl","clock","rootLoader","mainLoop","swfUrl","loader","loadSwf","handleSwfLoaded","rootSprite","addChild","onTick","startTime","oldTime","nextTickCount","handleTick","scheduleNextTick","curTime","infoUri","startLoop","render","getContentDimensions","paddingX","paddingLeft","paddingRight","paddingY","paddingTop","paddingBottom","borderX","borderLeftWidth","borderRightWidth","borderY","borderTopWidth","borderBottomWidth","resetStyle","padding","margin","domu_player_DomuPlayer","containerResizeDetector","_containerResizeDetector","element_resize_detector_default","containerResizeListener","_containerResizeListener","handleViewportResize","viewportSize","_viewportSize","newSize","cssFloat","canvas_renderer","player","startPlayer","createDomuPlayer","DEFAULT_WIDTH","DEFAULT_HEIGHT","x_swf_elements_XSwfElement","getSize","domuPlayer","display","setMovieUrl","widthAttr","heightAttr","observedAttributes","asyncIterator","for","customElements","define","containers","getElementsByClassName","containerCount","dataset"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 127);\n","\"use strict\";\n/**\n * This module defines utility functions to detect and change case styles.\n *\n * @module kryo/case-style\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nvar CaseStyle;\n(function (CaseStyle) {\n    CaseStyle[CaseStyle[\"CamelCase\"] = 0] = \"CamelCase\";\n    CaseStyle[CaseStyle[\"PascalCase\"] = 1] = \"PascalCase\";\n    CaseStyle[CaseStyle[\"SnakeCase\"] = 2] = \"SnakeCase\";\n    CaseStyle[CaseStyle[\"ScreamingSnakeCase\"] = 3] = \"ScreamingSnakeCase\";\n    CaseStyle[CaseStyle[\"KebabCase\"] = 4] = \"KebabCase\";\n})(CaseStyle = exports.CaseStyle || (exports.CaseStyle = {}));\nfunction detectCaseStyle(identifier) {\n    if (/^[A-Z]+[0-9]*(?:_[A-Z]+[0-9]*)*$/.test(identifier)) {\n        return CaseStyle.ScreamingSnakeCase;\n    }\n    else if (/^[a-z]+[0-9]*(?:_[a-z]+[0-9]*)+$/.test(identifier)) {\n        return CaseStyle.SnakeCase;\n    }\n    else if (/^[a-z]+[0-9]*(?:-[a-z]+[0-9]*)+$/.test(identifier)) {\n        return CaseStyle.KebabCase;\n    }\n    else if (/^[A-Z]/.test(identifier)) {\n        return CaseStyle.PascalCase;\n    }\n    else {\n        return CaseStyle.CamelCase;\n    }\n}\nexports.detectCaseStyle = detectCaseStyle;\nfunction split(caseStyle, identifier) {\n    switch (caseStyle) {\n        case CaseStyle.ScreamingSnakeCase:\n            return identifier.toLowerCase().split(\"_\");\n        case CaseStyle.SnakeCase:\n            return identifier.toLowerCase().split(\"_\");\n        case CaseStyle.KebabCase:\n            return identifier.toLowerCase().split(\"-\");\n        case CaseStyle.CamelCase:\n            return identifier.split(/(?=[A-Z])/).map((part) => part.toLowerCase());\n        case CaseStyle.PascalCase:\n            return identifier.split(/(?=[A-Z])/).map((part) => part.toLowerCase());\n        default:\n            throw new incident_1.Incident(`IncompleteSwitch: Received unexpected variant for caseStyle: ${caseStyle}`);\n    }\n}\nexports.split = split;\nfunction join(caseStyle, parts) {\n    switch (caseStyle) {\n        case CaseStyle.ScreamingSnakeCase:\n            return parts.join(\"_\").toUpperCase();\n        case CaseStyle.SnakeCase:\n            return parts.join(\"_\").toLowerCase();\n        case CaseStyle.KebabCase:\n            return parts.join(\"-\").toLowerCase();\n        case CaseStyle.CamelCase:\n            return parts.map((part, index) => {\n                const upperLength = index === 0 ? 0 : 1;\n                return part.substr(0, upperLength).toUpperCase() + part.substring(upperLength).toLowerCase();\n            }).join(\"\");\n        case CaseStyle.PascalCase:\n            return parts.map((part) => {\n                return part.substr(0, 1).toUpperCase() + part.substring(1).toLowerCase();\n            }).join(\"\");\n        default:\n            throw new incident_1.Incident(`IncompleteSwitch: Received unexpected variant for caseStyle: ${caseStyle}`);\n    }\n}\nexports.join = join;\nfunction rename(identifier, from, to) {\n    if (to === undefined) {\n        to = from;\n        from = detectCaseStyle(identifier);\n    }\n    return join(to, split(from, identifier));\n}\nexports.rename = rename;\nfunction renameMap(keys, to) {\n    const result = new Map();\n    const outKeys = new Set();\n    for (const key of keys) {\n        const renamed = to === undefined ? key : rename(key, to);\n        result.set(renamed, key);\n        if (outKeys.has(renamed)) {\n            throw new incident_1.Incident(\"NonBijectiveKeyRename\", \"Some keys are the same after renaming\");\n        }\n        outKeys.add(renamed);\n    }\n    return result;\n}\nexports.renameMap = renameMap;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst lazy_properties_1 = require(\"../_helpers/lazy-properties\");\nconst case_style_1 = require(\"../case-style\");\nconst invalid_document_1 = require(\"../errors/invalid-document\");\nconst invalid_type_1 = require(\"../errors/invalid-type\");\nconst lazy_options_1 = require(\"../errors/lazy-options\");\nconst not_implemented_1 = require(\"../errors/not-implemented\");\nconst read_visitor_1 = require(\"../readers/read-visitor\");\nexports.name = \"document\";\n// We use an `any` cast because of the `properties` property.\n// tslint:disable-next-line:variable-name\nexports.DocumentType = class {\n    constructor(options) {\n        this.name = exports.name;\n        this._options = options;\n        if (typeof options !== \"function\") {\n            this._applyOptions();\n        }\n        else {\n            lazy_properties_1.lazyProperties(this, this._applyOptions, [\"noExtraKeys\", \"properties\", \"changeCase\", \"rename\"]);\n        }\n    }\n    /**\n     * Map from serialized keys to the document keys\n     */\n    get outKeys() {\n        if (this._outKeys === undefined) {\n            this._outKeys = new Map();\n            for (const key of Object.keys(this.properties)) {\n                this._outKeys.set(this.getOutKey(key), key);\n            }\n        }\n        return this._outKeys;\n    }\n    getOutKey(key) {\n        if (typeof key !== \"string\") {\n            throw new Error(`NonStringKey: ${key}`);\n        }\n        const descriptor = this.properties[key];\n        if (descriptor.rename !== undefined) {\n            return descriptor.rename;\n        }\n        else if (descriptor.changeCase !== undefined) {\n            return case_style_1.rename(key, descriptor.changeCase);\n        }\n        if (this.rename !== undefined && this.rename[key] !== undefined) {\n            return this.rename[key];\n        }\n        else if (this.changeCase !== undefined) {\n            return case_style_1.rename(key, this.changeCase);\n        }\n        return key;\n    }\n    // TODO: Dynamically add with prototype?\n    read(reader, raw) {\n        return reader.readDocument(raw, read_visitor_1.readVisitor({\n            fromMap: (input, keyReader, valueReader) => {\n                const extra = new Set();\n                const missing = new Set();\n                for (const key in this.properties) {\n                    const descriptor = this.properties[key];\n                    if (!descriptor.optional) {\n                        missing.add(key);\n                    }\n                }\n                const invalid = new Map();\n                const result = {}; // Object.create(null);\n                for (const [rawKey, rawValue] of input) {\n                    const outKey = keyReader.readString(rawKey, read_visitor_1.readVisitor({ fromString: (input) => input }));\n                    const key = this.outKeys.get(outKey);\n                    if (key === undefined) {\n                        // Extra key\n                        extra.add(outKey);\n                        continue;\n                    }\n                    missing.delete(key);\n                    const descriptor = this.properties[key];\n                    // TODO: Update readers so `undefined` is impossible/not handled here\n                    if (rawValue === undefined) {\n                        if (descriptor.optional) {\n                            result[key] = undefined;\n                        }\n                        else {\n                            missing.add(key);\n                        }\n                        continue;\n                    }\n                    try {\n                        result[key] = descriptor.type.read(valueReader, rawValue);\n                    }\n                    catch (err) {\n                        invalid.set(key, err);\n                    }\n                }\n                if (this.noExtraKeys && extra.size > 0 || missing.size > 0 || invalid.size > 0) {\n                    throw invalid_document_1.createInvalidDocumentError({ extra, missing, invalid });\n                }\n                return result;\n            },\n        }));\n    }\n    // TODO: Dynamically add with prototype?\n    write(writer, value) {\n        const outKeys = new Map(this.outKeys);\n        for (const [outKey, jskey] of outKeys) {\n            if (value[jskey] === undefined) {\n                outKeys.delete(outKey);\n            }\n        }\n        return writer.writeDocument(outKeys.keys(), (outKey, fieldWriter) => {\n            const jsKey = this.outKeys.get(outKey);\n            const descriptor = this.properties[jsKey];\n            if (descriptor.type.write === undefined) {\n                throw new incident_1.Incident(\"NotWritable\", { type: descriptor.type });\n            }\n            return descriptor.type.write(fieldWriter, value[jsKey]);\n        });\n    }\n    testError(val) {\n        if (typeof val !== \"object\" || val === null) {\n            return invalid_type_1.createInvalidTypeError(\"object\", val);\n        }\n        const extra = this.noExtraKeys ? new Set(Object.keys(val)) : undefined;\n        const missing = new Set();\n        const invalid = new Map();\n        for (const key in this.properties) {\n            if (extra !== undefined) {\n                extra.delete(key);\n            }\n            const descriptor = this.properties[key];\n            const propertyValue = val[key];\n            if (propertyValue === undefined) {\n                if (!descriptor.optional) {\n                    missing.add(key);\n                }\n                continue;\n            }\n            const error = descriptor.type.testError(propertyValue);\n            if (error !== undefined) {\n                invalid.set(key, error);\n            }\n        }\n        if (extra !== undefined && extra.size > 0 || missing.size > 0 || invalid.size > 0) {\n            return invalid_document_1.createInvalidDocumentError({ extra, missing, invalid });\n        }\n        return undefined;\n    }\n    test(val) {\n        if (typeof val !== \"object\" || val === null) {\n            return false;\n        }\n        const extra = this.noExtraKeys ? new Set(Object.keys(val)) : undefined;\n        for (const key in this.properties) {\n            if (extra !== undefined) {\n                extra.delete(key);\n            }\n            const descriptor = this.properties[key];\n            const propertyValue = val[key];\n            if (propertyValue === undefined) {\n                if (!descriptor.optional) {\n                    return false;\n                }\n            }\n            else if (!descriptor.type.test(propertyValue)) {\n                return false;\n            }\n        }\n        return extra === undefined || extra.size === 0;\n    }\n    equals(val1, val2) {\n        for (const key in this.properties) {\n            const descriptor = this.properties[key];\n            if (!descriptor.optional) {\n                if (!descriptor.type.equals(val1[key], val2[key])) {\n                    return false;\n                }\n                continue;\n            }\n            if (val1[key] === undefined && val2[key] === undefined) {\n                continue;\n            }\n            if (val1[key] === undefined || val2[key] === undefined || !descriptor.type.equals(val1[key], val2[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    clone(val) {\n        const result = {}; // Object.create(null);\n        for (const key in this.properties) {\n            result[key] = val[key] === undefined ? undefined : this.properties[key].type.clone(val[key]);\n        }\n        return result;\n    }\n    diff(oldVal, newVal) {\n        let equal = true;\n        const result = { set: {}, unset: {}, update: {} };\n        for (const key in this.properties) {\n            // TODO: Remove cast\n            const descriptor = this.properties[key];\n            const oldMember = oldVal[key];\n            const newMember = newVal[key];\n            if (oldMember !== undefined) {\n                if (newMember !== undefined) {\n                    const diff = descriptor.type.diff(oldMember, newMember);\n                    if (diff !== undefined) {\n                        result.update[key] = diff;\n                        equal = false;\n                    }\n                }\n                else {\n                    result.unset[key] = descriptor.type.clone(oldMember);\n                    equal = false;\n                }\n            }\n            else {\n                if (newMember === undefined) {\n                    result.set[key] = descriptor.type.clone(newMember);\n                    equal = false;\n                }\n            }\n        }\n        return equal ? undefined : result;\n    }\n    patch(oldVal, diff) {\n        const result = this.clone(oldVal);\n        if (diff === undefined) {\n            return result;\n        }\n        for (const key in diff.set) {\n            result[key] = this.properties[key].type.clone(diff.set[key]);\n        }\n        for (const key in diff.unset) {\n            Reflect.deleteProperty(result, key);\n        }\n        for (const key in diff.update) {\n            // TODO: Remove cast\n            result[key] = this.properties[key].type.patch(result[key], diff.update[key]);\n        }\n        return result;\n    }\n    reverseDiff(diff) {\n        if (diff === undefined) {\n            return undefined;\n        }\n        const result = { set: {}, unset: {}, update: {} };\n        for (const key in diff.unset) {\n            result.set[key] = this.properties[key].type.clone(diff.unset[key]);\n        }\n        for (const key in diff.set) {\n            result.unset[key] = this.properties[key].type.clone(diff.set[key]);\n        }\n        for (const key in diff.update) {\n            // TODO: Remove cast\n            result.update[key] = this.properties[key].type.reverseDiff(diff.update[key]);\n        }\n        return result;\n    }\n    squash(_diff1, _diff2) {\n        throw not_implemented_1.createNotImplementedError(\"DocumentType#squash\");\n    }\n    _applyOptions() {\n        if (this._options === undefined) {\n            throw lazy_options_1.createLazyOptionsError(this);\n        }\n        const options = typeof this._options === \"function\" ?\n            this._options() :\n            this._options;\n        const noExtraKeys = options.noExtraKeys;\n        const properties = options.properties;\n        const rename = options.rename;\n        const changeCase = options.changeCase;\n        Object.assign(this, { noExtraKeys, properties, rename, changeCase });\n    }\n};\nfunction renameKeys(obj, renameAll) {\n    const keys = Object.keys(obj);\n    const result = new Map();\n    const outKeys = new Set();\n    for (const key of keys) {\n        const renamed = renameAll === undefined ? key : case_style_1.rename(key, renameAll);\n        result.set(key, renamed);\n        if (outKeys.has(renamed)) {\n            throw new incident_1.Incident(\"NonBijectiveKeyRename\", \"Some keys are the same after renaming\");\n        }\n        outKeys.add(renamed);\n    }\n    return result;\n}\nexports.renameKeys = renameKeys;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar incident_1 = require(\"./incident\");\nexports.Incident = incident_1.Incident;\nexports.format = incident_1.format;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBOEM7QUFBckMsOEJBQUEsUUFBUSxDQUFBO0FBQUUsNEJBQUEsTUFBTSxDQUFBIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgSW5jaWRlbnQsIGZvcm1hdCB9IGZyb20gXCIuL2luY2lkZW50XCI7XG5leHBvcnQgeyBTdGF0aWNJbmNpZGVudCB9IGZyb20gXCIuL3R5cGVzXCI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar TagType;\n(function (TagType) {\n    TagType[TagType[\"CharacterSet\"] = 0] = \"CharacterSet\";\n    TagType[TagType[\"CsmTextSettings\"] = 1] = \"CsmTextSettings\";\n    TagType[TagType[\"DebugId\"] = 2] = \"DebugId\";\n    TagType[TagType[\"DefineBehaviour\"] = 3] = \"DefineBehaviour\";\n    TagType[TagType[\"DefineBinaryData\"] = 4] = \"DefineBinaryData\";\n    TagType[TagType[\"DefineBitmap\"] = 5] = \"DefineBitmap\";\n    TagType[TagType[\"DefineButton\"] = 6] = \"DefineButton\";\n    TagType[TagType[\"DefineButtonColorTransform\"] = 7] = \"DefineButtonColorTransform\";\n    TagType[TagType[\"DefineButtonSound\"] = 8] = \"DefineButtonSound\";\n    TagType[TagType[\"DefineCffFont\"] = 9] = \"DefineCffFont\";\n    TagType[TagType[\"DefineCommandObject\"] = 10] = \"DefineCommandObject\";\n    TagType[TagType[\"DefineDynamicText\"] = 11] = \"DefineDynamicText\";\n    TagType[TagType[\"DefinePartialFont\"] = 12] = \"DefinePartialFont\";\n    TagType[TagType[\"DefineFont\"] = 13] = \"DefineFont\";\n    TagType[TagType[\"DefineFontAlignZones\"] = 14] = \"DefineFontAlignZones\";\n    TagType[TagType[\"DefineFontInfo\"] = 15] = \"DefineFontInfo\";\n    TagType[TagType[\"DefineFontName\"] = 16] = \"DefineFontName\";\n    TagType[TagType[\"DefineJpegTables\"] = 17] = \"DefineJpegTables\";\n    TagType[TagType[\"DefineFunction\"] = 18] = \"DefineFunction\";\n    TagType[TagType[\"DefineMorphShape\"] = 19] = \"DefineMorphShape\";\n    TagType[TagType[\"DefineScalingGrid\"] = 20] = \"DefineScalingGrid\";\n    TagType[TagType[\"DefineSceneAndFrameLabelData\"] = 21] = \"DefineSceneAndFrameLabelData\";\n    TagType[TagType[\"DefineShape\"] = 22] = \"DefineShape\";\n    TagType[TagType[\"DefineSound\"] = 23] = \"DefineSound\";\n    TagType[TagType[\"DefineSprite\"] = 24] = \"DefineSprite\";\n    TagType[TagType[\"DefineText\"] = 25] = \"DefineText\";\n    TagType[TagType[\"DefineTextFormat\"] = 26] = \"DefineTextFormat\";\n    TagType[TagType[\"DefineVideo\"] = 27] = \"DefineVideo\";\n    TagType[TagType[\"DefineVideoStream\"] = 28] = \"DefineVideoStream\";\n    TagType[TagType[\"DoAbc\"] = 29] = \"DoAbc\";\n    TagType[TagType[\"DoAbcDefine\"] = 30] = \"DoAbcDefine\";\n    TagType[TagType[\"DoAction\"] = 31] = \"DoAction\";\n    TagType[TagType[\"DoInitAction\"] = 32] = \"DoInitAction\";\n    TagType[TagType[\"EnableDebugger\"] = 33] = \"EnableDebugger\";\n    TagType[TagType[\"ExportAssets\"] = 34] = \"ExportAssets\";\n    TagType[TagType[\"ExternalFont\"] = 35] = \"ExternalFont\";\n    TagType[TagType[\"FileAttributes\"] = 36] = \"FileAttributes\";\n    TagType[TagType[\"FrameLabel\"] = 37] = \"FrameLabel\";\n    TagType[TagType[\"FreeAll\"] = 38] = \"FreeAll\";\n    TagType[TagType[\"FreeCharacter\"] = 39] = \"FreeCharacter\";\n    TagType[TagType[\"GenCommand\"] = 40] = \"GenCommand\";\n    TagType[TagType[\"GenerateFrame\"] = 41] = \"GenerateFrame\";\n    TagType[TagType[\"GenTagObjects\"] = 42] = \"GenTagObjects\";\n    TagType[TagType[\"ImportAssets\"] = 43] = \"ImportAssets\";\n    TagType[TagType[\"Metadata\"] = 44] = \"Metadata\";\n    TagType[TagType[\"NameCharacter\"] = 45] = \"NameCharacter\";\n    TagType[TagType[\"PathsArePostscript\"] = 46] = \"PathsArePostscript\";\n    TagType[TagType[\"PlaceFunction\"] = 47] = \"PlaceFunction\";\n    TagType[TagType[\"PlaceObject\"] = 48] = \"PlaceObject\";\n    TagType[TagType[\"ProductInfo\"] = 49] = \"ProductInfo\";\n    TagType[TagType[\"Protect\"] = 50] = \"Protect\";\n    TagType[TagType[\"RemoveObject\"] = 51] = \"RemoveObject\";\n    TagType[TagType[\"ScriptLimits\"] = 52] = \"ScriptLimits\";\n    TagType[TagType[\"SetBackgroundColor\"] = 53] = \"SetBackgroundColor\";\n    TagType[TagType[\"SetTabIndex\"] = 54] = \"SetTabIndex\";\n    TagType[TagType[\"ShowFrame\"] = 55] = \"ShowFrame\";\n    TagType[TagType[\"SoundStreamBlock\"] = 56] = \"SoundStreamBlock\";\n    TagType[TagType[\"SoundStreamHead\"] = 57] = \"SoundStreamHead\";\n    TagType[TagType[\"StartSound\"] = 58] = \"StartSound\";\n    TagType[TagType[\"StartSound2\"] = 59] = \"StartSound2\";\n    TagType[TagType[\"StopSound\"] = 60] = \"StopSound\";\n    TagType[TagType[\"SymbolClass\"] = 61] = \"SymbolClass\";\n    TagType[TagType[\"SyncFrame\"] = 62] = \"SyncFrame\";\n    TagType[TagType[\"Telemetry\"] = 63] = \"Telemetry\";\n    TagType[TagType[\"VideoFrame\"] = 64] = \"VideoFrame\";\n    TagType[TagType[\"Unknown\"] = 65] = \"Unknown\";\n})(TagType = exports.TagType || (exports.TagType = {}));\nexports.$TagType = new ts_enum_1.TsEnumType({\n    enum: TagType,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9fdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxPQW1FWDtBQW5FRCxXQUFZLE9BQU87SUFDakIscURBQVksQ0FBQTtJQUNaLDJEQUFlLENBQUE7SUFDZiwyQ0FBTyxDQUFBO0lBQ1AsMkRBQWUsQ0FBQTtJQUNmLDZEQUFnQixDQUFBO0lBQ2hCLHFEQUFZLENBQUE7SUFDWixxREFBWSxDQUFBO0lBQ1osaUZBQTBCLENBQUE7SUFDMUIsK0RBQWlCLENBQUE7SUFDakIsdURBQWEsQ0FBQTtJQUNiLG9FQUFtQixDQUFBO0lBQ25CLGdFQUFpQixDQUFBO0lBQ2pCLGdFQUFpQixDQUFBO0lBQ2pCLGtEQUFVLENBQUE7SUFDVixzRUFBb0IsQ0FBQTtJQUNwQiwwREFBYyxDQUFBO0lBQ2QsMERBQWMsQ0FBQTtJQUNkLDhEQUFnQixDQUFBO0lBQ2hCLDBEQUFjLENBQUE7SUFDZCw4REFBZ0IsQ0FBQTtJQUNoQixnRUFBaUIsQ0FBQTtJQUNqQixzRkFBNEIsQ0FBQTtJQUM1QixvREFBVyxDQUFBO0lBQ1gsb0RBQVcsQ0FBQTtJQUNYLHNEQUFZLENBQUE7SUFDWixrREFBVSxDQUFBO0lBQ1YsOERBQWdCLENBQUE7SUFDaEIsb0RBQVcsQ0FBQTtJQUNYLGdFQUFpQixDQUFBO0lBQ2pCLHdDQUFLLENBQUE7SUFDTCxvREFBVyxDQUFBO0lBQ1gsOENBQVEsQ0FBQTtJQUNSLHNEQUFZLENBQUE7SUFDWiwwREFBYyxDQUFBO0lBQ2Qsc0RBQVksQ0FBQTtJQUNaLHNEQUFZLENBQUE7SUFDWiwwREFBYyxDQUFBO0lBQ2Qsa0RBQVUsQ0FBQTtJQUNWLDRDQUFPLENBQUE7SUFDUCx3REFBYSxDQUFBO0lBQ2Isa0RBQVUsQ0FBQTtJQUNWLHdEQUFhLENBQUE7SUFDYix3REFBYSxDQUFBO0lBQ2Isc0RBQVksQ0FBQTtJQUNaLDhDQUFRLENBQUE7SUFDUix3REFBYSxDQUFBO0lBQ2Isa0VBQWtCLENBQUE7SUFDbEIsd0RBQWEsQ0FBQTtJQUNiLG9EQUFXLENBQUE7SUFDWCxvREFBVyxDQUFBO0lBQ1gsNENBQU8sQ0FBQTtJQUNQLHNEQUFZLENBQUE7SUFDWixzREFBWSxDQUFBO0lBQ1osa0VBQWtCLENBQUE7SUFDbEIsb0RBQVcsQ0FBQTtJQUNYLGdEQUFTLENBQUE7SUFDVCw4REFBZ0IsQ0FBQTtJQUNoQiw0REFBZSxDQUFBO0lBQ2Ysa0RBQVUsQ0FBQTtJQUNWLG9EQUFXLENBQUE7SUFDWCxnREFBUyxDQUFBO0lBQ1Qsb0RBQVcsQ0FBQTtJQUNYLGdEQUFTLENBQUE7SUFDVCxnREFBUyxDQUFBO0lBQ1Qsa0RBQVUsQ0FBQTtJQUNWLDRDQUFPLENBQUE7QUFDVCxDQUFDLEVBbkVXLE9BQU8sR0FBUCxlQUFPLEtBQVAsZUFBTyxRQW1FbEI7QUFFWSxRQUFBLFFBQVEsR0FBd0IsSUFBSSxvQkFBVSxDQUFVO0lBQ25FLElBQUksRUFBRSxPQUFPO0lBQ2IsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9fdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIFRhZ1R5cGUge1xuICBDaGFyYWN0ZXJTZXQsXG4gIENzbVRleHRTZXR0aW5ncyxcbiAgRGVidWdJZCxcbiAgRGVmaW5lQmVoYXZpb3VyLFxuICBEZWZpbmVCaW5hcnlEYXRhLFxuICBEZWZpbmVCaXRtYXAsXG4gIERlZmluZUJ1dHRvbixcbiAgRGVmaW5lQnV0dG9uQ29sb3JUcmFuc2Zvcm0sXG4gIERlZmluZUJ1dHRvblNvdW5kLFxuICBEZWZpbmVDZmZGb250LFxuICBEZWZpbmVDb21tYW5kT2JqZWN0LFxuICBEZWZpbmVEeW5hbWljVGV4dCxcbiAgRGVmaW5lUGFydGlhbEZvbnQsXG4gIERlZmluZUZvbnQsXG4gIERlZmluZUZvbnRBbGlnblpvbmVzLFxuICBEZWZpbmVGb250SW5mbyxcbiAgRGVmaW5lRm9udE5hbWUsXG4gIERlZmluZUpwZWdUYWJsZXMsXG4gIERlZmluZUZ1bmN0aW9uLFxuICBEZWZpbmVNb3JwaFNoYXBlLFxuICBEZWZpbmVTY2FsaW5nR3JpZCxcbiAgRGVmaW5lU2NlbmVBbmRGcmFtZUxhYmVsRGF0YSxcbiAgRGVmaW5lU2hhcGUsXG4gIERlZmluZVNvdW5kLFxuICBEZWZpbmVTcHJpdGUsXG4gIERlZmluZVRleHQsXG4gIERlZmluZVRleHRGb3JtYXQsXG4gIERlZmluZVZpZGVvLFxuICBEZWZpbmVWaWRlb1N0cmVhbSxcbiAgRG9BYmMsXG4gIERvQWJjRGVmaW5lLFxuICBEb0FjdGlvbixcbiAgRG9Jbml0QWN0aW9uLFxuICBFbmFibGVEZWJ1Z2dlcixcbiAgRXhwb3J0QXNzZXRzLFxuICBFeHRlcm5hbEZvbnQsXG4gIEZpbGVBdHRyaWJ1dGVzLFxuICBGcmFtZUxhYmVsLFxuICBGcmVlQWxsLFxuICBGcmVlQ2hhcmFjdGVyLFxuICBHZW5Db21tYW5kLFxuICBHZW5lcmF0ZUZyYW1lLFxuICBHZW5UYWdPYmplY3RzLFxuICBJbXBvcnRBc3NldHMsXG4gIE1ldGFkYXRhLFxuICBOYW1lQ2hhcmFjdGVyLFxuICBQYXRoc0FyZVBvc3RzY3JpcHQsXG4gIFBsYWNlRnVuY3Rpb24sXG4gIFBsYWNlT2JqZWN0LFxuICBQcm9kdWN0SW5mbyxcbiAgUHJvdGVjdCxcbiAgUmVtb3ZlT2JqZWN0LFxuICBTY3JpcHRMaW1pdHMsXG4gIFNldEJhY2tncm91bmRDb2xvcixcbiAgU2V0VGFiSW5kZXgsXG4gIFNob3dGcmFtZSxcbiAgU291bmRTdHJlYW1CbG9jayxcbiAgU291bmRTdHJlYW1IZWFkLFxuICBTdGFydFNvdW5kLFxuICBTdGFydFNvdW5kMixcbiAgU3RvcFNvdW5kLFxuICBTeW1ib2xDbGFzcyxcbiAgU3luY0ZyYW1lLFxuICBUZWxlbWV0cnksXG4gIFZpZGVvRnJhbWUsXG4gIFVua25vd24sXG59XG5cbmV4cG9ydCBjb25zdCAkVGFnVHlwZTogVHNFbnVtVHlwZTxUYWdUeXBlPiA9IG5ldyBUc0VudW1UeXBlPFRhZ1R5cGU+KHtcbiAgZW51bTogVGFnVHlwZSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst lazy_properties_1 = require(\"../_helpers/lazy-properties\");\nconst lazy_options_1 = require(\"../errors/lazy-options\");\nconst test_error_1 = require(\"../test-error\");\nexports.name = \"literal\";\n/**\n * You may need to explicitly write the type or inference won't pick it.\n * For example, in the case of enum values, inference will pick the type of the enum instead of\n * the specific property you pass.\n *\n * @see https://github.com/Microsoft/TypeScript/issues/10195\n */\n// tslint:disable-next-line:variable-name\nexports.LiteralType = class {\n    constructor(options) {\n        this.name = exports.name;\n        this._options = options;\n        if (typeof options !== \"function\") {\n            this._applyOptions();\n        }\n        else {\n            lazy_properties_1.lazyProperties(this, this._applyOptions, [\"type\", \"value\"]);\n        }\n    }\n    read(reader, raw) {\n        if (this.type.read === undefined) {\n            throw new incident_1.Incident(\"NotReadable\", { type: this });\n        }\n        return reader.trustInput ? this.clone(this.value) : this.type.read(reader, raw);\n    }\n    write(writer, value) {\n        if (this.type.write === undefined) {\n            throw new incident_1.Incident(\"NotWritable\", { type: this });\n        }\n        return this.type.write(writer, value);\n    }\n    testError(val) {\n        const error = test_error_1.testError(this.type, val);\n        if (error !== undefined) {\n            return error;\n        }\n        if (!this.type.equals(val, this.value)) {\n            return incident_1.Incident(\"InvalidLiteral\", \"Invalid literal value\");\n        }\n        return undefined;\n    }\n    test(value) {\n        return this.type.test(value) && this.type.equals(value, this.value);\n    }\n    equals(val1, val2) {\n        return this.type.equals(val1, val2);\n    }\n    clone(val) {\n        return this.type.clone(val);\n    }\n    diff(_oldVal, _newVal) {\n        return;\n    }\n    patch(oldVal, _diff) {\n        return this.type.clone(oldVal);\n    }\n    reverseDiff(_diff) {\n        return;\n    }\n    squash(_diff1, _diff2) {\n        return;\n    }\n    _applyOptions() {\n        if (this._options === undefined) {\n            throw lazy_options_1.createLazyOptionsError(this);\n        }\n        const options = typeof this._options === \"function\"\n            ? this._options()\n            : this._options;\n        const type = options.type;\n        const value = options.value;\n        Object.assign(this, { type, value });\n    }\n};\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n/**\n * @module kryo/builtins/uint16\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst integer_1 = require(\"../types/integer\");\nexports.$Uint16 = new integer_1.IntegerType({ min: 0, max: 65535 });\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnVpbHRpbnMvdWludDE2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7R0FFRzs7QUFFSCw4Q0FBK0M7QUFFbEMsUUFBQSxPQUFPLEdBQWdCLElBQUkscUJBQVcsQ0FBQyxFQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBQyxDQUFDLENBQUMiLCJmaWxlIjoiYnVpbHRpbnMvdWludDE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlIGtyeW8vYnVpbHRpbnMvdWludDE2XG4gKi9cblxuaW1wb3J0IHsgSW50ZWdlclR5cGUgfSBmcm9tIFwiLi4vdHlwZXMvaW50ZWdlclwiO1xuXG5leHBvcnQgY29uc3QgJFVpbnQxNjogSW50ZWdlclR5cGUgPSBuZXcgSW50ZWdlclR5cGUoe21pbjogMCwgbWF4OiA2NTUzNX0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst lazy_properties_1 = require(\"../_helpers/lazy-properties\");\nconst invalid_array_items_1 = require(\"../errors/invalid-array-items\");\nconst invalid_type_1 = require(\"../errors/invalid-type\");\nconst lazy_options_1 = require(\"../errors/lazy-options\");\nconst max_array_length_1 = require(\"../errors/max-array-length\");\nconst min_array_length_1 = require(\"../errors/min-array-length\");\nconst read_visitor_1 = require(\"../readers/read-visitor\");\nconst test_error_1 = require(\"../test-error\");\nexports.name = \"array\";\n// tslint:disable-next-line:variable-name\nexports.ArrayType = class {\n    constructor(options) {\n        this.name = exports.name;\n        this._options = options;\n        if (typeof options !== \"function\") {\n            this._applyOptions();\n        }\n        else {\n            lazy_properties_1.lazyProperties(this, this._applyOptions, [\"itemType\", \"minLength\", \"maxLength\"]);\n        }\n    }\n    // TODO: Dynamically add with prototype?\n    read(reader, raw) {\n        const itemType = this.itemType;\n        const minLength = this.minLength;\n        const maxLength = this.maxLength;\n        return reader.readList(raw, read_visitor_1.readVisitor({\n            fromList(input, itemReader) {\n                let invalid = undefined;\n                const result = [];\n                let i = 0;\n                for (const rawItem of input) {\n                    if (maxLength !== undefined && i === maxLength) {\n                        throw max_array_length_1.createMaxArrayLengthError([...input], maxLength);\n                    }\n                    try {\n                        const item = itemType.read(itemReader, rawItem);\n                        if (invalid === undefined) {\n                            result.push(item);\n                        }\n                    }\n                    catch (err) {\n                        if (invalid === undefined) {\n                            invalid = new Map();\n                        }\n                        invalid.set(i, err);\n                    }\n                    i++;\n                }\n                if (invalid !== undefined) {\n                    throw invalid_array_items_1.createInvalidArrayItemsError(invalid);\n                }\n                if (minLength !== undefined && i < minLength) {\n                    throw min_array_length_1.createMinArrayLengthError([...input], minLength);\n                }\n                return result;\n            },\n        }));\n    }\n    // TODO: Dynamically add with prototype?\n    write(writer, value) {\n        return writer.writeList(value.length, (index, itemWriter) => {\n            if (this.itemType.write === undefined) {\n                throw new incident_1.Incident(\"NotWritable\", { type: this.itemType });\n            }\n            return this.itemType.write(itemWriter, value[index]);\n        });\n    }\n    testError(value) {\n        if (!Array.isArray(value)) {\n            return invalid_type_1.createInvalidTypeError(\"array\", value);\n        }\n        if (this.maxLength !== undefined && value.length > this.maxLength) {\n            return max_array_length_1.createMaxArrayLengthError(value, this.maxLength);\n        }\n        if (this.minLength !== undefined && value.length < this.minLength) {\n            return min_array_length_1.createMinArrayLengthError(value, this.minLength);\n        }\n        const invalid = new Map();\n        const itemCount = value.length;\n        for (let i = 0; i < itemCount; i++) {\n            const error = test_error_1.testError(this.itemType, value[i]);\n            if (error !== undefined) {\n                invalid.set(i, error);\n            }\n        }\n        if (invalid.size !== 0) {\n            return invalid_array_items_1.createInvalidArrayItemsError(invalid);\n        }\n        return undefined;\n    }\n    test(val) {\n        if (!Array.isArray(val)\n            || (this.maxLength !== undefined && val.length > this.maxLength)\n            || (this.minLength !== undefined && val.length < this.minLength)) {\n            return false;\n        }\n        for (const item of val) {\n            if (!this.itemType.test(item)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    equals(val1, val2) {\n        if (val2.length !== val1.length) {\n            return false;\n        }\n        for (let i = 0; i < val1.length; i++) {\n            if (!this.itemType.equals(val2[i], val1[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    clone(val) {\n        return val.map((item) => this.itemType.clone(item));\n    }\n    _applyOptions() {\n        if (this._options === undefined) {\n            throw lazy_options_1.createLazyOptionsError(this);\n        }\n        const options = typeof this._options === \"function\" ? this._options() : this._options;\n        const itemType = options.itemType;\n        const minLength = options.minLength;\n        const maxLength = options.maxLength;\n        Object.assign(this, { itemType, minLength, maxLength });\n    }\n};\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n/**\n * @module kryo/builtins/boolean\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"../types/boolean\");\nexports.$Boolean = new boolean_1.BooleanType();\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnVpbHRpbnMvYm9vbGVhbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7O0FBRUgsOENBQStDO0FBRWxDLFFBQUEsUUFBUSxHQUFnQixJQUFJLHFCQUFXLEVBQUUsQ0FBQyIsImZpbGUiOiJidWlsdGlucy9ib29sZWFuLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlIGtyeW8vYnVpbHRpbnMvYm9vbGVhblxuICovXG5cbmltcG9ydCB7IEJvb2xlYW5UeXBlIH0gZnJvbSBcIi4uL3R5cGVzL2Jvb2xlYW5cIjtcblxuZXhwb3J0IGNvbnN0ICRCb29sZWFuOiBCb29sZWFuVHlwZSA9IG5ldyBCb29sZWFuVHlwZSgpO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst lazy_properties_1 = require(\"../_helpers/lazy-properties\");\nconst case_style_1 = require(\"../case-style\");\nconst lazy_options_1 = require(\"../errors/lazy-options\");\nconst not_implemented_1 = require(\"../errors/not-implemented\");\nconst read_visitor_1 = require(\"../readers/read-visitor\");\nexports.name = \"ts-enum\";\n/**\n * Builds a map from a TS enum by removing reverse-lookup keys.\n */\nfunction tsEnumToMap(tsEnum) {\n    const result = new Map();\n    for (const key in tsEnum) {\n        if (!isValidEnumMember(key)) {\n            continue;\n        }\n        result.set(key, tsEnum[key]);\n    }\n    return result;\n}\n/**\n * Function used by TS to check the names of enums (isNumericLiteralName)\n *\n * @see https://github.com/Microsoft/TypeScript/blob/89de4c9a3ab3f7f88a141f1529b77628204bff73/lib/tsc.js#L36877\n */\nfunction isValidEnumMember(key) {\n    return (+key).toString() !== key || key === \"Infinity\" || key === \"-Infinity\" || key === \"NaN\";\n}\n/**\n * Converts a TS enum and rename options to two maps: from out names to values and from\n * values to out names.\n */\nfunction getEnumMaps(tsEnum, changeCase, renameAll) {\n    const jsToOut = new Map();\n    const outToJs = new Map();\n    // TODO: Check for bijection\n    for (const [key, value] of tsEnumToMap(tsEnum)) {\n        let name = key;\n        if (renameAll !== undefined && renameAll[key] !== undefined) {\n            name = renameAll[key];\n        }\n        else if (changeCase !== undefined) {\n            name = case_style_1.rename(key, changeCase);\n        }\n        jsToOut.set(value, name);\n        outToJs.set(name, value);\n    }\n    return [jsToOut, outToJs];\n}\n/**\n * Represents a TS-style enum value.\n *\n * A TS enum value is defined in an object (\"enum object\"). It contains \"forward\"properties from\n * non-numeric strings to strings or numbers and \"reversed\" properties from numeric strings to\n * keys of forward properties with constant numeric values.\n */\nclass TsEnumType {\n    constructor(options) {\n        this.name = exports.name;\n        this._options = options;\n        if (typeof options !== \"function\") {\n            this._applyOptions();\n        }\n        else {\n            lazy_properties_1.lazyProperties(this, this._applyOptions, [\"enum\", \"changeCase\", \"rename\"]);\n        }\n    }\n    get jsToOut() {\n        if (this._jsToOut === undefined) {\n            [this._jsToOut, this._outToJs] = getEnumMaps(this.enum, this.changeCase, this.rename);\n        }\n        return this._jsToOut;\n    }\n    get outToJs() {\n        if (this._outToJs === undefined) {\n            [this._jsToOut, this._outToJs] = getEnumMaps(this.enum, this.changeCase, this.rename);\n        }\n        return this._outToJs;\n    }\n    static fromJSON() {\n        throw not_implemented_1.createNotImplementedError(\"TsEnumType.fromJSON\");\n    }\n    read(reader, raw) {\n        return reader.readString(raw, read_visitor_1.readVisitor({\n            fromString: (input) => {\n                if (!reader.trustInput && !this.outToJs.has(input)) {\n                    throw incident_1.Incident(\"Unknown enum variant name\", input);\n                }\n                return this.outToJs.get(input);\n            },\n        }));\n    }\n    write(writer, value) {\n        return writer.writeString(this.jsToOut.get(value));\n    }\n    testError(value) {\n        if (!this.jsToOut.has(value)) {\n            return incident_1.Incident(\"UnknownVariantError\", { value }, \"Unknown enum variant value\");\n        }\n        return undefined;\n    }\n    test(value) {\n        return this.jsToOut.has(value);\n    }\n    equals(val1, val2) {\n        return val1 === val2;\n    }\n    clone(val) {\n        return val;\n    }\n    _applyOptions() {\n        if (this._options === undefined) {\n            throw lazy_options_1.createLazyOptionsError(this);\n        }\n        const options = typeof this._options === \"function\" ? this._options() : this._options;\n        const tsEnum = options.enum;\n        const changeCase = options.changeCase;\n        const rename = options.rename;\n        Object.assign(this, { enum: tsEnum, changeCase, rename });\n    }\n}\nexports.TsEnumType = TsEnumType;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fillStyles = __importStar(require(\"./fill-styles/index\"));\nexports.fillStyles = fillStyles;\nconst filters = __importStar(require(\"./filters/index\"));\nexports.filters = filters;\nconst joinStyles = __importStar(require(\"./join-styles/index\"));\nexports.joinStyles = joinStyles;\nconst shapeRecords = __importStar(require(\"./shape-records/index\"));\nexports.shapeRecords = shapeRecords;\nconst tags = __importStar(require(\"./tags/index\"));\nexports.tags = tags;\nconst text = __importStar(require(\"./text/index\"));\nexports.text = text;\nvar blend_mode_1 = require(\"./blend-mode\");\nexports.BlendMode = blend_mode_1.BlendMode;\nvar cap_style_1 = require(\"./cap-style\");\nexports.CapStyle = cap_style_1.CapStyle;\nvar color_space_1 = require(\"./color-space\");\nexports.ColorSpace = color_space_1.ColorSpace;\nvar compression_method_1 = require(\"./compression-method\");\nexports.CompressionMethod = compression_method_1.CompressionMethod;\nvar gradient_spread_1 = require(\"./gradient-spread\");\nexports.GradientSpread = gradient_spread_1.GradientSpread;\nvar language_code_1 = require(\"./language-code\");\nexports.LanguageCode = language_code_1.LanguageCode;\nvar _type_1 = require(\"./fill-styles/_type\");\nexports.FillStyleType = _type_1.FillStyleType;\nvar _type_2 = require(\"./filters/_type\");\nexports.FilterType = _type_2.FilterType;\nvar _type_3 = require(\"./join-styles/_type\");\nexports.JoinStyleType = _type_3.JoinStyleType;\nvar _type_4 = require(\"./shape-records/_type\");\nexports.ShapeRecordType = _type_4.ShapeRecordType;\nvar _type_5 = require(\"./tags/_type\");\nexports.TagType = _type_5.TagType;\nvar sfixed8p8_1 = require(\"./fixed-point/sfixed8p8\");\nexports.Sfixed8P8 = sfixed8p8_1.Sfixed8P8;\nvar sfixed16p16_1 = require(\"./fixed-point/sfixed16p16\");\nexports.Sfixed16P16 = sfixed16p16_1.Sfixed16P16;\nvar ufixed8p8_1 = require(\"./fixed-point/ufixed8p8\");\nexports.Ufixed8P8 = ufixed8p8_1.Ufixed8P8;\nvar ufixed16p16_1 = require(\"./fixed-point/ufixed16p16\");\nexports.Ufixed16P16 = ufixed16p16_1.Ufixed16P16;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsZ0VBQWtEO0FBT3pDLGdDQUFVO0FBTm5CLHlEQUEyQztBQU10QiwwQkFBTztBQUw1QixnRUFBa0Q7QUFLcEIsZ0NBQVU7QUFKeEMsb0VBQXNEO0FBSVosb0NBQVk7QUFIdEQsbURBQXFDO0FBR21CLG9CQUFJO0FBRjVELG1EQUFxQztBQUV5QixvQkFBSTtBQUVsRSwyQ0FBeUM7QUFBaEMsaUNBQUEsU0FBUyxDQUFBO0FBQ2xCLHlDQUF1QztBQUE5QiwrQkFBQSxRQUFRLENBQUE7QUFHakIsNkNBQTJDO0FBQWxDLG1DQUFBLFVBQVUsQ0FBQTtBQUluQiwyREFBeUQ7QUFBaEQsaURBQUEsaUJBQWlCLENBQUE7QUFLMUIscURBQW1EO0FBQTFDLDJDQUFBLGNBQWMsQ0FBQTtBQUd2QixpREFBK0M7QUFBdEMsdUNBQUEsWUFBWSxDQUFBO0FBcUJyQiw2Q0FBb0Q7QUFBM0MsZ0NBQUEsYUFBYSxDQUFBO0FBQ3RCLHlDQUE2QztBQUFwQyw2QkFBQSxVQUFVLENBQUE7QUFDbkIsNkNBQW9EO0FBQTNDLGdDQUFBLGFBQWEsQ0FBQTtBQUN0QiwrQ0FBd0Q7QUFBL0Msa0NBQUEsZUFBZSxDQUFBO0FBQ3hCLHNDQUF1QztBQUE5QiwwQkFBQSxPQUFPLENBQUE7QUFLaEIscURBQW9EO0FBQTNDLGdDQUFBLFNBQVMsQ0FBQTtBQUNsQix5REFBd0Q7QUFBL0Msb0NBQUEsV0FBVyxDQUFBO0FBRXBCLHFEQUFvRDtBQUEzQyxnQ0FBQSxTQUFTLENBQUE7QUFDbEIseURBQXdEO0FBQS9DLG9DQUFBLFdBQVcsQ0FBQSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGZpbGxTdHlsZXMgZnJvbSBcIi4vZmlsbC1zdHlsZXMvaW5kZXhcIjtcbmltcG9ydCAqIGFzIGZpbHRlcnMgZnJvbSBcIi4vZmlsdGVycy9pbmRleFwiO1xuaW1wb3J0ICogYXMgam9pblN0eWxlcyBmcm9tIFwiLi9qb2luLXN0eWxlcy9pbmRleFwiO1xuaW1wb3J0ICogYXMgc2hhcGVSZWNvcmRzIGZyb20gXCIuL3NoYXBlLXJlY29yZHMvaW5kZXhcIjtcbmltcG9ydCAqIGFzIHRhZ3MgZnJvbSBcIi4vdGFncy9pbmRleFwiO1xuaW1wb3J0ICogYXMgdGV4dCBmcm9tIFwiLi90ZXh0L2luZGV4XCI7XG5cbmV4cG9ydCB7IGZpbGxTdHlsZXMsIGZpbHRlcnMsIGpvaW5TdHlsZXMsIHNoYXBlUmVjb3JkcywgdGFncywgdGV4dCB9O1xuXG5leHBvcnQgeyBCbGVuZE1vZGUgfSBmcm9tIFwiLi9ibGVuZC1tb2RlXCI7XG5leHBvcnQgeyBDYXBTdHlsZSB9IGZyb20gXCIuL2NhcC1zdHlsZVwiO1xuZXhwb3J0IHsgQ2xpcEFjdGlvbnMgfSBmcm9tIFwiLi9jbGlwLWFjdGlvbnNcIjtcbmV4cG9ydCB7IENsaXBFdmVudEZsYWdzIH0gZnJvbSBcIi4vY2xpcC1ldmVudC1mbGFnc1wiO1xuZXhwb3J0IHsgQ29sb3JTcGFjZSB9IGZyb20gXCIuL2NvbG9yLXNwYWNlXCI7XG5leHBvcnQgeyBDb2xvclN0b3AgfSBmcm9tIFwiLi9jb2xvci1zdG9wXCI7XG5leHBvcnQgeyBDb2xvclRyYW5zZm9ybSB9IGZyb20gXCIuL2NvbG9yLXRyYW5zZm9ybVwiO1xuZXhwb3J0IHsgQ29sb3JUcmFuc2Zvcm1XaXRoQWxwaGEgfSBmcm9tIFwiLi9jb2xvci10cmFuc2Zvcm0td2l0aC1hbHBoYVwiO1xuZXhwb3J0IHsgQ29tcHJlc3Npb25NZXRob2QgfSBmcm9tIFwiLi9jb21wcmVzc2lvbi1tZXRob2RcIjtcbmV4cG9ydCB7IEZpbGxTdHlsZSB9IGZyb20gXCIuL2ZpbGwtc3R5bGVcIjtcbmV4cG9ydCB7IEZpbHRlciB9IGZyb20gXCIuL2ZpbHRlclwiO1xuZXhwb3J0IHsgR2x5cGggfSBmcm9tIFwiLi9nbHlwaFwiO1xuZXhwb3J0IHsgR3JhZGllbnQgfSBmcm9tIFwiLi9ncmFkaWVudFwiO1xuZXhwb3J0IHsgR3JhZGllbnRTcHJlYWQgfSBmcm9tIFwiLi9ncmFkaWVudC1zcHJlYWRcIjtcbmV4cG9ydCB7IEhlYWRlciB9IGZyb20gXCIuL2hlYWRlclwiO1xuZXhwb3J0IHsgSm9pblN0eWxlIH0gZnJvbSBcIi4vam9pbi1zdHlsZVwiO1xuZXhwb3J0IHsgTGFuZ3VhZ2VDb2RlIH0gZnJvbSBcIi4vbGFuZ3VhZ2UtY29kZVwiO1xuZXhwb3J0IHsgTGluZVN0eWxlIH0gZnJvbSBcIi4vbGluZS1zdHlsZVwiO1xuZXhwb3J0IHsgTWF0cml4IH0gZnJvbSBcIi4vbWF0cml4XCI7XG5leHBvcnQgeyBNb3JwaENvbG9yU3RvcCB9IGZyb20gXCIuL21vcnBoLWNvbG9yLXN0b3BcIjtcbmV4cG9ydCB7IE1vcnBoRmlsbFN0eWxlIH0gZnJvbSBcIi4vbW9ycGgtZmlsbC1zdHlsZVwiO1xuZXhwb3J0IHsgTW9ycGhHcmFkaWVudCB9IGZyb20gXCIuL21vcnBoLWdyYWRpZW50XCI7XG5leHBvcnQgeyBNb3JwaExpbmVTdHlsZSB9IGZyb20gXCIuL21vcnBoLWxpbmUtc3R5bGVcIjtcbmV4cG9ydCB7IE1vcnBoU2hhcGUgfSBmcm9tIFwiLi9tb3JwaC1zaGFwZVwiO1xuZXhwb3J0IHsgTW9ycGhTaGFwZVJlY29yZCB9IGZyb20gXCIuL21vcnBoLXNoYXBlLXJlY29yZFwiO1xuZXhwb3J0IHsgTW92aWUgfSBmcm9tIFwiLi9tb3ZpZVwiO1xuZXhwb3J0IHsgTmFtZWRJZCB9IGZyb20gXCIuL25hbWVkLWlkXCI7XG5leHBvcnQgeyBSZWN0IH0gZnJvbSBcIi4vcmVjdFwiO1xuZXhwb3J0IHsgU1JnYjggfSBmcm9tIFwiLi9zLXJnYjhcIjtcbmV4cG9ydCB7IFNoYXBlIH0gZnJvbSBcIi4vc2hhcGVcIjtcbmV4cG9ydCB7IFNoYXBlUmVjb3JkIH0gZnJvbSBcIi4vc2hhcGUtcmVjb3JkXCI7XG5leHBvcnQgeyBTcHJpdGVUYWcgfSBmcm9tIFwiLi9zcHJpdGUtdGFnXCI7XG5leHBvcnQgeyBTdHJhaWdodFNSZ2JhOCB9IGZyb20gXCIuL3N0cmFpZ2h0LXMtcmdiYThcIjtcbmV4cG9ydCB7IFN3ZlNpZ25hdHVyZSB9IGZyb20gXCIuL3N3Zi1zaWduYXR1cmVcIjtcbmV4cG9ydCB7IFRhZyB9IGZyb20gXCIuL3RhZ1wiO1xuZXhwb3J0IHsgVmVjdG9yMkQgfSBmcm9tIFwiLi92ZWN0b3ItMmRcIjtcblxuZXhwb3J0IHsgRmlsbFN0eWxlVHlwZSB9IGZyb20gXCIuL2ZpbGwtc3R5bGVzL190eXBlXCI7XG5leHBvcnQgeyBGaWx0ZXJUeXBlIH0gZnJvbSBcIi4vZmlsdGVycy9fdHlwZVwiO1xuZXhwb3J0IHsgSm9pblN0eWxlVHlwZSB9IGZyb20gXCIuL2pvaW4tc3R5bGVzL190eXBlXCI7XG5leHBvcnQgeyBTaGFwZVJlY29yZFR5cGUgfSBmcm9tIFwiLi9zaGFwZS1yZWNvcmRzL190eXBlXCI7XG5leHBvcnQgeyBUYWdUeXBlIH0gZnJvbSBcIi4vdGFncy9fdHlwZVwiO1xuXG5leHBvcnQgeyBMYWJlbCB9IGZyb20gXCIuL2NvbnRyb2wvbGFiZWxcIjtcbmV4cG9ydCB7IFNjZW5lIH0gZnJvbSBcIi4vY29udHJvbC9zY2VuZVwiO1xuXG5leHBvcnQgeyBTZml4ZWQ4UDggfSBmcm9tIFwiLi9maXhlZC1wb2ludC9zZml4ZWQ4cDhcIjtcbmV4cG9ydCB7IFNmaXhlZDE2UDE2IH0gZnJvbSBcIi4vZml4ZWQtcG9pbnQvc2ZpeGVkMTZwMTZcIjtcbmV4cG9ydCB7IEZpeGVkUG9pbnQsIEZpeGVkUG9pbnRDb25zdHJ1Y3RvciwgRml4ZWRQb2ludE9wdGlvbnMgfSBmcm9tIFwiLi9maXhlZC1wb2ludC9maXhlZC1wb2ludFwiO1xuZXhwb3J0IHsgVWZpeGVkOFA4IH0gZnJvbSBcIi4vZml4ZWQtcG9pbnQvdWZpeGVkOHA4XCI7XG5leHBvcnQgeyBVZml4ZWQxNlAxNiB9IGZyb20gXCIuL2ZpeGVkLXBvaW50L3VmaXhlZDE2cDE2XCI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst lazy_properties_1 = require(\"../_helpers/lazy-properties\");\nconst invalid_integer_1 = require(\"../errors/invalid-integer\");\nconst invalid_type_1 = require(\"../errors/invalid-type\");\nconst lazy_options_1 = require(\"../errors/lazy-options\");\nconst read_visitor_1 = require(\"../readers/read-visitor\");\nexports.name = \"integer\";\n/**\n * Default value for the `min` option.\n * It corresponds to `-(2**53)`.\n */\nexports.DEFAULT_MIN = Number.MIN_SAFE_INTEGER - 1;\n/**\n * Default value for the `max` option.\n * It corresponds to `2**53 - 1`.\n */\nexports.DEFAULT_MAX = Number.MAX_SAFE_INTEGER;\nclass IntegerType {\n    constructor(options) {\n        this.name = exports.name;\n        if (options === undefined) {\n            this._options = {};\n            this._applyOptions();\n            return;\n        }\n        this._options = options;\n        if (typeof options !== \"function\") {\n            this._applyOptions();\n        }\n        else {\n            lazy_properties_1.lazyProperties(this, this._applyOptions, [\"min\", \"max\"]);\n        }\n    }\n    static fromJSON(options) {\n        return new IntegerType(options);\n    }\n    toJSON() {\n        return { name: exports.name, min: this.min, max: this.max };\n    }\n    read(reader, raw) {\n        return reader.readFloat64(raw, read_visitor_1.readVisitor({\n            fromFloat64: (input) => {\n                const error = reader.trustInput ? undefined : this.testError(input);\n                if (error !== undefined) {\n                    throw error;\n                }\n                return input;\n            },\n        }));\n    }\n    // TODO: Dynamically add with prototype?\n    write(writer, value) {\n        return writer.writeFloat64(value);\n    }\n    testError(val) {\n        if (typeof val !== \"number\") {\n            return invalid_type_1.createInvalidTypeError(\"number\", val);\n        }\n        if (Math.round(val) !== val) {\n            return invalid_integer_1.createInvalidIntegerError(val);\n        }\n        if (val < this.min || val > this.max) {\n            return new incident_1.Incident(\"Range\", { value: val, min: this.min, max: this.max }, \"Integer not in range\");\n        }\n        return undefined;\n    }\n    test(val) {\n        return typeof val === \"number\" && val >= this.min && val <= this.max && Math.round(val) === val;\n    }\n    equals(left, right) {\n        return left === right;\n    }\n    lte(left, right) {\n        return left <= right;\n    }\n    clone(val) {\n        return val;\n    }\n    diff(oldVal, newVal) {\n        return newVal === oldVal ? undefined : newVal - oldVal;\n    }\n    patch(oldVal, diff) {\n        return diff === undefined ? oldVal : oldVal + diff;\n    }\n    reverseDiff(diff) {\n        /* tslint:disable-next-line:strict-boolean-expressions */\n        return diff && -diff;\n    }\n    squash(diff1, diff2) {\n        if (diff1 === undefined) {\n            return diff2;\n        }\n        else if (diff2 === undefined) {\n            return diff1;\n        }\n        return diff2 === -diff1 ? undefined : diff1 + diff2;\n    }\n    _applyOptions() {\n        if (this._options === undefined) {\n            throw lazy_options_1.createLazyOptionsError(this);\n        }\n        const options = typeof this._options === \"function\" ? this._options() : this._options;\n        const min = options.min !== undefined ? options.min : exports.DEFAULT_MIN;\n        const max = options.max !== undefined ? options.max : exports.DEFAULT_MAX;\n        Object.assign(this, { min, max });\n    }\n}\nexports.IntegerType = IntegerType;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst lazy_properties_1 = require(\"../_helpers/lazy-properties\");\nconst invalid_type_1 = require(\"../errors/invalid-type\");\nconst lazy_options_1 = require(\"../errors/lazy-options\");\nconst lower_case_1 = require(\"../errors/lower-case\");\nconst max_ucs2_string_length_1 = require(\"../errors/max-ucs2-string-length\");\nconst min_ucs2_string_length_1 = require(\"../errors/min-ucs2-string-length\");\nconst not_trimmed_1 = require(\"../errors/not-trimmed\");\nconst pattern_not_matched_1 = require(\"../errors/pattern-not-matched\");\nconst read_visitor_1 = require(\"../readers/read-visitor\");\nexports.name = \"ucs2-string\";\n/**\n * The type used for simple Javascript strings.\n * Javascript strings expose characters as UCS2 code units. This is a fixed-size encoding that supports the unicode\n * codepoints from U+000000 to U+00FFFF (Basic Multilingual Plane or BMP). Displaying larger codepoints is\n * a property of the environment based on UTF-16 surrogate pairs. Unicode does not, and will never, assign\n * characters to the codepoints from U+OOD800 to U+00DFFF. These spare codepoints allows UTF16 to combine\n * codeunits from 0xd800 to 0xdfff in pairs (called surrogate pairs) to represent codepoints from supplementary planes.\n * This transformation happens during the transition from codeunits to codepoints in UTF-16.\n * In UCS2, the codeunits from 0xd800 to 0xdfff directly produce codepoints in the range from U+OOD8OO to\n * U+OODFF. Then, the display might merge these codepoints into higher codepoints during the rendering.\n *\n *\n * Lets take an example (all the numbers are in hexadecimal):\n *\n * ```\n *                                         +---+---+---+---+---+---+\n * Bytes                                   | 00| 41| d8| 34| dd| 1e|\n *                                         +---+---+---+---+---+---+\n * UTF-16BE codeunits                      | 0x0041| 0xd834| 0xdd1e|\n *                                         +-------+-------+-------+\n * Codepoints (from UTF-16BE)              |  U+41 |   U+01D11E    |\n *                                         +-------+---------------+\n * Displayed (from UTF-16BE)               |   A   |       𝄞       |\n *                                         +-------+-------+-------+\n * UCS2 codeunits                          | 0x0041| 0xd834| 0xdd1e|\n *                                         +-------+-------+-------+\n * Codepoints (from UCS2BE)                |  U+41 | U+D834| U+DD1E|  <- This is what Javascript sees\n *                                         +-------+-------+-------+\n * Displayed (from UCS2BE)                 |   A   |   �   |   �   |  <- This is what the user may see\n *                                         +-------+-------+-------+\n * Displayed (from UCS2BE with surrogates) |   A   |       𝄞       |  <- This is what the user may see\n *                                         +-------+---------------+\n * ```\n *\n * The most important takeaway is that codepoints outside of the BMP are a property of the display, not of\n * the Javascript string.\n * This is the cause of multiple issues.\n * - Surrogate halves are exposed as distinct characters: `\"𝄞\".length === 2`\n * - Unmatched surrogate halves are allowed: `\"\\ud834\"`\n * - Surrogate pairs in the wrong order are allowed: `\"\\udd1e\\ud834\"`\n *\n * If you need to support the full unicode range by manipulating codepoints instead of UCS2 character codes, you may\n * want to use CodepointString or CodepointArray instead of Ucs2String.\n *\n * PS: This type does not deal with Unicdoe normalization either. Use CodepointString and CodepointArray if you need\n * it.\n */\nclass Ucs2StringType {\n    constructor(options) {\n        this.name = exports.name;\n        this._options = options;\n        if (typeof options !== \"function\") {\n            this._applyOptions();\n        }\n        else {\n            lazy_properties_1.lazyProperties(this, this._applyOptions, [\"allowUnicodeRegExp\", \"pattern\", \"lowerCase\", \"trimmed\", \"minLength\", \"maxLength\"]);\n        }\n    }\n    static fromJSON(options) {\n        const resolvedOptions = {\n            allowUnicodeRegExp: options.allowUnicodeRegExp,\n            lowerCase: options.lowerCase,\n            trimmed: options.trimmed,\n            maxLength: options.maxLength,\n        };\n        if (options.pattern !== undefined) {\n            resolvedOptions.pattern = new RegExp(options.pattern[0], options.pattern[1]);\n        }\n        if (options.minLength !== undefined) {\n            resolvedOptions.minLength = options.minLength;\n        }\n        return new Ucs2StringType(resolvedOptions);\n    }\n    toJSON() {\n        const jsonType = {\n            name: exports.name,\n            allowUnicodeRegExp: this.allowUnicodeRegExp,\n            lowerCase: this.lowerCase,\n            trimmed: this.trimmed,\n            maxLength: this.maxLength,\n        };\n        if (this.pattern !== undefined) {\n            jsonType.pattern = [this.pattern.source, this.pattern.flags];\n        }\n        if (this.minLength !== undefined) {\n            jsonType.minLength = this.minLength;\n        }\n        return jsonType;\n    }\n    // TODO: Dynamically add with prototype?\n    read(reader, raw) {\n        return reader.readString(raw, read_visitor_1.readVisitor({\n            fromString: (input) => {\n                const error = this.testError(input);\n                if (error !== undefined) {\n                    throw error;\n                }\n                return input;\n            },\n        }));\n    }\n    // TODO: Dynamically add with prototype?\n    write(writer, value) {\n        return writer.writeString(value);\n    }\n    testError(val) {\n        if (typeof val !== \"string\") {\n            return invalid_type_1.createInvalidTypeError(\"string\", val);\n        }\n        if (this.lowerCase && val.toLowerCase() !== val) {\n            return lower_case_1.createLowerCaseError(val);\n        }\n        if (this.trimmed && val.trim() !== val) {\n            return not_trimmed_1.createNotTrimmedError(val);\n        }\n        const strLen = val.length;\n        const minLength = this.minLength;\n        if (minLength !== undefined && strLen < minLength) {\n            return min_ucs2_string_length_1.createMinUcs2StringLengthError(val, minLength);\n        }\n        if (strLen > this.maxLength) {\n            return max_ucs2_string_length_1.createMaxUcs2StringLengthError(val, this.maxLength);\n        }\n        if (this.pattern instanceof RegExp) {\n            if (this.pattern.unicode && !this.allowUnicodeRegExp) {\n                throw new incident_1.Incident(\"UnicodeRegExp\", \"Disallowed unicode RegExp, use `allowUnicodeRegExp` or `CodepointStringType`\");\n            }\n            if (!this.pattern.test(val)) {\n                return pattern_not_matched_1.createPatternNotMatchedError(this.pattern, val);\n            }\n        }\n        return undefined;\n    }\n    test(val) {\n        return this.testError(val) === undefined;\n    }\n    equals(val1, val2) {\n        return val1 === val2;\n    }\n    clone(val) {\n        return val;\n    }\n    diff(oldVal, newVal) {\n        return oldVal === newVal ? undefined : [oldVal, newVal];\n    }\n    patch(oldVal, diff) {\n        return diff === undefined ? oldVal : diff[1];\n    }\n    reverseDiff(diff) {\n        return diff === undefined ? undefined : [diff[1], diff[0]];\n    }\n    squash(diff1, diff2) {\n        if (diff1 === undefined) {\n            return diff2 === undefined ? undefined : [diff2[0], diff2[1]];\n        }\n        else if (diff2 === undefined) {\n            return [diff1[0], diff1[1]];\n        }\n        return diff1[0] === diff2[1] ? undefined : [diff1[0], diff2[1]];\n    }\n    _applyOptions() {\n        if (this._options === undefined) {\n            throw lazy_options_1.createLazyOptionsError(this);\n        }\n        const options = typeof this._options === \"function\" ? this._options() : this._options;\n        const allowUnicodeRegExp = options.allowUnicodeRegExp !== undefined ? options.allowUnicodeRegExp : true;\n        const pattern = options.pattern;\n        const lowerCase = options.lowerCase !== undefined ? options.lowerCase : false;\n        const trimmed = options.trimmed !== undefined ? options.trimmed : false;\n        const minLength = options.minLength;\n        const maxLength = options.maxLength;\n        Object.assign(this, { allowUnicodeRegExp, pattern, lowerCase, trimmed, minLength, maxLength });\n    }\n}\nexports.Ucs2StringType = Ucs2StringType;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n/**\n * @module kryo/builtins/bytes\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bytes_1 = require(\"../types/bytes\");\nexports.$Bytes = new bytes_1.BytesType({ maxLength: Infinity });\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnVpbHRpbnMvYnl0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOztHQUVHOztBQUVILDBDQUEyQztBQUU5QixRQUFBLE1BQU0sR0FBYyxJQUFJLGlCQUFTLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJidWlsdGlucy9ieXRlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZSBrcnlvL2J1aWx0aW5zL2J5dGVzXG4gKi9cblxuaW1wb3J0IHsgQnl0ZXNUeXBlIH0gZnJvbSBcIi4uL3R5cGVzL2J5dGVzXCI7XG5cbmV4cG9ydCBjb25zdCAkQnl0ZXM6IEJ5dGVzVHlwZSA9IG5ldyBCeXRlc1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sint32_1 = require(\"kryo/builtins/sint32\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst sfixed16p16_1 = require(\"./fixed-point/sfixed16p16\");\nexports.$Matrix = new document_1.DocumentType({\n    properties: {\n        scaleX: { type: sfixed16p16_1.Sfixed16P16 },\n        scaleY: { type: sfixed16p16_1.Sfixed16P16 },\n        rotateSkew0: { type: sfixed16p16_1.Sfixed16P16 },\n        rotateSkew1: { type: sfixed16p16_1.Sfixed16P16 },\n        translateX: { type: sint32_1.$Sint32 },\n        translateY: { type: sint32_1.$Sint32 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbWF0cml4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFFbkUsMkRBQXdEO0FBVzNDLFFBQUEsT0FBTyxHQUEyQixJQUFJLHVCQUFZLENBQVM7SUFDdEUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUM7UUFDM0IsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUM7UUFDM0IsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUM7UUFDaEMsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUM7UUFDaEMsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDM0IsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7S0FDNUI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJtYXRyaXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkU2ludDMyIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvc2ludDMyXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IFNpbnQzMiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgU2ZpeGVkMTZQMTYgfSBmcm9tIFwiLi9maXhlZC1wb2ludC9zZml4ZWQxNnAxNlwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1hdHJpeCB7XG4gIHNjYWxlWDogU2ZpeGVkMTZQMTY7XG4gIHNjYWxlWTogU2ZpeGVkMTZQMTY7XG4gIHJvdGF0ZVNrZXcwOiBTZml4ZWQxNlAxNjtcbiAgcm90YXRlU2tldzE6IFNmaXhlZDE2UDE2O1xuICB0cmFuc2xhdGVYOiBTaW50MzI7XG4gIHRyYW5zbGF0ZVk6IFNpbnQzMjtcbn1cblxuZXhwb3J0IGNvbnN0ICRNYXRyaXg6IERvY3VtZW50SW9UeXBlPE1hdHJpeD4gPSBuZXcgRG9jdW1lbnRUeXBlPE1hdHJpeD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgc2NhbGVYOiB7dHlwZTogU2ZpeGVkMTZQMTZ9LFxuICAgIHNjYWxlWToge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICByb3RhdGVTa2V3MDoge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICByb3RhdGVTa2V3MToge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICB0cmFuc2xhdGVYOiB7dHlwZTogJFNpbnQzMn0sXG4gICAgdHJhbnNsYXRlWToge3R5cGU6ICRTaW50MzJ9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fixed_point_1 = require(\"./fixed-point\");\n// tslint:disable-next-line:variable-name\nexports.Sfixed8P8 = fixed_point_1.createFixedPoint({\n    signed: true,\n    intBits: 8,\n    fracBits: 8,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZml4ZWQtcG9pbnQvc2ZpeGVkOHA4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsK0NBQW9GO0FBSXBGLHlDQUF5QztBQUM1QixRQUFBLFNBQVMsR0FBMEIsOEJBQWdCLENBQUM7SUFDL0QsTUFBTSxFQUFFLElBQUk7SUFDWixPQUFPLEVBQUUsQ0FBQztJQUNWLFFBQVEsRUFBRSxDQUFDO0NBQ1osQ0FBQyxDQUFDIiwiZmlsZSI6ImZpeGVkLXBvaW50L3NmaXhlZDhwOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhZ2dlZCB9IGZyb20gXCJ0cy10YWdnZWRcIjtcbmltcG9ydCB7IGNyZWF0ZUZpeGVkUG9pbnQsIEZpeGVkUG9pbnQsIEZpeGVkUG9pbnRDb25zdHJ1Y3RvciB9IGZyb20gXCIuL2ZpeGVkLXBvaW50XCI7XG5cbmV4cG9ydCB0eXBlIFNmaXhlZDhQOCA9IFRhZ2dlZDxGaXhlZFBvaW50LCBcIkZpeGVkOFA4XCI+O1xuXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6dmFyaWFibGUtbmFtZVxuZXhwb3J0IGNvbnN0IFNmaXhlZDhQODogRml4ZWRQb2ludENvbnN0cnVjdG9yID0gY3JlYXRlRml4ZWRQb2ludCh7XG4gIHNpZ25lZDogdHJ1ZSxcbiAgaW50Qml0czogOCxcbiAgZnJhY0JpdHM6IDgsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint8_1 = require(\"kryo/builtins/uint8\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst s_rgb8_1 = require(\"./s-rgb8\");\nexports.$StraightSRgba8 = new document_1.DocumentType({\n    properties: {\n        r: s_rgb8_1.$SRgb8.properties.r,\n        g: s_rgb8_1.$SRgb8.properties.g,\n        b: s_rgb8_1.$SRgb8.properties.b,\n        a: { type: uint8_1.$Uint8 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc3RyYWlnaHQtcy1yZ2JhOC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtDQUE2QztBQUM3QyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBRW5FLHFDQUFrQztBQUtyQixRQUFBLGVBQWUsR0FBbUMsSUFBSSx1QkFBWSxDQUFpQjtJQUM5RixVQUFVLEVBQUU7UUFDVixDQUFDLEVBQUUsZUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3RCLENBQUMsRUFBRSxlQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDdEIsQ0FBQyxFQUFFLGVBQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN0QixDQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUUsY0FBTSxFQUFDO0tBQ2xCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoic3RyYWlnaHQtcy1yZ2JhOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50OCB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQ4XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IFN0cmFpZ2h0U1JnYmEgYXMgU3RyYWlnaHRTUmdiYSwgVWludDggfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRTUmdiOCB9IGZyb20gXCIuL3MtcmdiOFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0cmFpZ2h0U1JnYmE4IGV4dGVuZHMgU3RyYWlnaHRTUmdiYTxVaW50OD4ge1xufVxuXG5leHBvcnQgY29uc3QgJFN0cmFpZ2h0U1JnYmE4OiBEb2N1bWVudElvVHlwZTxTdHJhaWdodFNSZ2JhOD4gPSBuZXcgRG9jdW1lbnRUeXBlPFN0cmFpZ2h0U1JnYmE4Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICByOiAkU1JnYjgucHJvcGVydGllcy5yLFxuICAgIGc6ICRTUmdiOC5wcm9wZXJ0aWVzLmcsXG4gICAgYjogJFNSZ2I4LnByb3BlcnRpZXMuYixcbiAgICBhOiB7dHlwZTogJFVpbnQ4fSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","\"use strict\";\n/**\n * @module kryo/readers/read-visitor\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction fromBoolean(_) {\n    throw new Error(\"Unable to read from boolean\");\n}\nfunction fromBytes(_) {\n    throw new Error(\"Unable to read from bytes\");\n}\nfunction fromDate(_) {\n    throw new Error(\"Unable to read from date\");\n}\nfunction fromFloat64(_) {\n    throw new Error(\"Unable to read from float64\");\n}\nfunction fromList(_) {\n    throw new Error(\"Unable to read from list\");\n}\nfunction fromMap(_) {\n    throw new Error(\"Unable to read from map\");\n}\nfunction fromNull() {\n    throw new Error(\"Unable to read from null\");\n}\nfunction fromString(_) {\n    throw new Error(\"Unable to read from string\");\n}\nfunction readVisitor(partial) {\n    return Object.assign({ fromBytes,\n        fromBoolean,\n        fromDate,\n        fromFloat64,\n        fromMap,\n        fromNull,\n        fromList,\n        fromString }, partial);\n}\nexports.readVisitor = readVisitor;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcmVhZGVycy9yZWFkLXZpc2l0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOztHQUVHOztBQUlILFNBQVMsV0FBVyxDQUFDLENBQVU7SUFDN0IsTUFBTSxJQUFJLEtBQUssQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO0FBQ2pELENBQUM7QUFFRCxTQUFTLFNBQVMsQ0FBQyxDQUFhO0lBQzlCLE1BQU0sSUFBSSxLQUFLLENBQUMsMkJBQTJCLENBQUMsQ0FBQztBQUMvQyxDQUFDO0FBRUQsU0FBUyxRQUFRLENBQUMsQ0FBTztJQUN2QixNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7QUFDOUMsQ0FBQztBQUVELFNBQVMsV0FBVyxDQUFDLENBQVM7SUFDNUIsTUFBTSxJQUFJLEtBQUssQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO0FBQ2pELENBQUM7QUFFRCxTQUFTLFFBQVEsQ0FBQyxDQUFnQjtJQUNoQyxNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7QUFDOUMsQ0FBQztBQUVELFNBQVMsT0FBTyxDQUFDLENBQWdCO0lBQy9CLE1BQU0sSUFBSSxLQUFLLENBQUMseUJBQXlCLENBQUMsQ0FBQztBQUM3QyxDQUFDO0FBRUQsU0FBUyxRQUFRO0lBQ2YsTUFBTSxJQUFJLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0FBQzlDLENBQUM7QUFFRCxTQUFTLFVBQVUsQ0FBQyxDQUFTO0lBQzNCLE1BQU0sSUFBSSxLQUFLLENBQUMsNEJBQTRCLENBQUMsQ0FBQztBQUNoRCxDQUFDO0FBRUQsU0FBZ0IsV0FBVyxDQUFJLE9BQWdDO0lBQzdELHVCQUNFLFNBQVM7UUFDVCxXQUFXO1FBQ1gsUUFBUTtRQUNSLFdBQVc7UUFDWCxPQUFPO1FBQ1AsUUFBUTtRQUNSLFFBQVE7UUFDUixVQUFVLElBQ1AsT0FBTyxFQUNWO0FBQ0osQ0FBQztBQVpELGtDQVlDIiwiZmlsZSI6InJlYWRlcnMvcmVhZC12aXNpdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlIGtyeW8vcmVhZGVycy9yZWFkLXZpc2l0b3JcbiAqL1xuXG5pbXBvcnQgeyBSZWFkVmlzaXRvciB9IGZyb20gXCIuLi9jb3JlXCI7XG5cbmZ1bmN0aW9uIGZyb21Cb29sZWFuKF86IGJvb2xlYW4pOiBuZXZlciB7XG4gIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byByZWFkIGZyb20gYm9vbGVhblwiKTtcbn1cblxuZnVuY3Rpb24gZnJvbUJ5dGVzKF86IFVpbnQ4QXJyYXkpOiBuZXZlciB7XG4gIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byByZWFkIGZyb20gYnl0ZXNcIik7XG59XG5cbmZ1bmN0aW9uIGZyb21EYXRlKF86IERhdGUpOiBuZXZlciB7XG4gIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byByZWFkIGZyb20gZGF0ZVwiKTtcbn1cblxuZnVuY3Rpb24gZnJvbUZsb2F0NjQoXzogbnVtYmVyKTogbmV2ZXIge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gcmVhZCBmcm9tIGZsb2F0NjRcIik7XG59XG5cbmZ1bmN0aW9uIGZyb21MaXN0KF86IEl0ZXJhYmxlPGFueT4pOiBuZXZlciB7XG4gIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byByZWFkIGZyb20gbGlzdFwiKTtcbn1cblxuZnVuY3Rpb24gZnJvbU1hcChfOiBNYXA8YW55LCBhbnk+KTogbmV2ZXIge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gcmVhZCBmcm9tIG1hcFwiKTtcbn1cblxuZnVuY3Rpb24gZnJvbU51bGwoKTogbmV2ZXIge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gcmVhZCBmcm9tIG51bGxcIik7XG59XG5cbmZ1bmN0aW9uIGZyb21TdHJpbmcoXzogc3RyaW5nKTogbmV2ZXIge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gcmVhZCBmcm9tIHN0cmluZ1wiKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRWaXNpdG9yPFI+KHBhcnRpYWw6IFBhcnRpYWw8UmVhZFZpc2l0b3I8Uj4+KTogUmVhZFZpc2l0b3I8Uj4ge1xuICByZXR1cm4ge1xuICAgIGZyb21CeXRlcyxcbiAgICBmcm9tQm9vbGVhbixcbiAgICBmcm9tRGF0ZSxcbiAgICBmcm9tRmxvYXQ2NCxcbiAgICBmcm9tTWFwLFxuICAgIGZyb21OdWxsLFxuICAgIGZyb21MaXN0LFxuICAgIGZyb21TdHJpbmcsXG4gICAgLi4ucGFydGlhbCxcbiAgfTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Intercepts reads to the provided `keys` of `target` to run `apply` before returning\n * the value. This allows to initialize these properties lazily.\n * You should ensure that `apply` never throws.\n * Once one of the trapped properties was read, all the properties become normal properties.\n * Call `lazyProperties` on different subsets of keys to have independent lazy properties.\n *\n * Calling `lazyProperties` multiple time on the same key is undefined behavior.\n *\n * @param target The object holding the properties to intercept.\n * @param apply The function called once one of the lazy properties is accessed. Its `this` value\n *              will be `target`.\n * @param keys The names of the properties to intercept.\n */\nfunction lazyProperties(target, apply, keys) {\n    function restoreProperties() {\n        for (const key of keys) {\n            Object.defineProperty(target, key, {\n                configurable: true,\n                value: undefined,\n                writable: true,\n            });\n        }\n        apply.call(target);\n    }\n    for (const key of keys) {\n        Object.defineProperty(target, key, {\n            get: () => {\n                restoreProperties();\n                return target[key];\n            },\n            set: undefined,\n            enumerable: true,\n            configurable: true,\n        });\n    }\n}\nexports.lazyProperties = lazyProperties;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvX2hlbHBlcnMvbGF6eS1wcm9wZXJ0aWVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7Ozs7Ozs7R0FhRztBQUNILFNBQWdCLGNBQWMsQ0FBSSxNQUFTLEVBQUUsS0FBaUIsRUFBRSxJQUF1QjtJQUNyRixTQUFTLGlCQUFpQjtRQUN4QixLQUFLLE1BQU0sR0FBRyxJQUFJLElBQUksRUFBRTtZQUN0QixNQUFNLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUU7Z0JBQ2pDLFlBQVksRUFBRSxJQUFJO2dCQUNsQixLQUFLLEVBQUUsU0FBUztnQkFDaEIsUUFBUSxFQUFFLElBQUk7YUFDZixDQUFDLENBQUM7U0FDSjtRQUNELEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDckIsQ0FBQztJQUVELEtBQUssTUFBTSxHQUFHLElBQUksSUFBSSxFQUFFO1FBQ3RCLE1BQU0sQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRTtZQUNqQyxHQUFHLEVBQUUsR0FBRyxFQUFFO2dCQUNSLGlCQUFpQixFQUFFLENBQUM7Z0JBQ3BCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLENBQUM7WUFDRCxHQUFHLEVBQUUsU0FBUztZQUNkLFVBQVUsRUFBRSxJQUFJO1lBQ2hCLFlBQVksRUFBRSxJQUFJO1NBQ25CLENBQUMsQ0FBQztLQUNKO0FBQ0gsQ0FBQztBQXZCRCx3Q0F1QkMiLCJmaWxlIjoiX2hlbHBlcnMvbGF6eS1wcm9wZXJ0aWVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJbnRlcmNlcHRzIHJlYWRzIHRvIHRoZSBwcm92aWRlZCBga2V5c2Agb2YgYHRhcmdldGAgdG8gcnVuIGBhcHBseWAgYmVmb3JlIHJldHVybmluZ1xuICogdGhlIHZhbHVlLiBUaGlzIGFsbG93cyB0byBpbml0aWFsaXplIHRoZXNlIHByb3BlcnRpZXMgbGF6aWx5LlxuICogWW91IHNob3VsZCBlbnN1cmUgdGhhdCBgYXBwbHlgIG5ldmVyIHRocm93cy5cbiAqIE9uY2Ugb25lIG9mIHRoZSB0cmFwcGVkIHByb3BlcnRpZXMgd2FzIHJlYWQsIGFsbCB0aGUgcHJvcGVydGllcyBiZWNvbWUgbm9ybWFsIHByb3BlcnRpZXMuXG4gKiBDYWxsIGBsYXp5UHJvcGVydGllc2Agb24gZGlmZmVyZW50IHN1YnNldHMgb2Yga2V5cyB0byBoYXZlIGluZGVwZW5kZW50IGxhenkgcHJvcGVydGllcy5cbiAqXG4gKiBDYWxsaW5nIGBsYXp5UHJvcGVydGllc2AgbXVsdGlwbGUgdGltZSBvbiB0aGUgc2FtZSBrZXkgaXMgdW5kZWZpbmVkIGJlaGF2aW9yLlxuICpcbiAqIEBwYXJhbSB0YXJnZXQgVGhlIG9iamVjdCBob2xkaW5nIHRoZSBwcm9wZXJ0aWVzIHRvIGludGVyY2VwdC5cbiAqIEBwYXJhbSBhcHBseSBUaGUgZnVuY3Rpb24gY2FsbGVkIG9uY2Ugb25lIG9mIHRoZSBsYXp5IHByb3BlcnRpZXMgaXMgYWNjZXNzZWQuIEl0cyBgdGhpc2AgdmFsdWVcbiAqICAgICAgICAgICAgICB3aWxsIGJlIGB0YXJnZXRgLlxuICogQHBhcmFtIGtleXMgVGhlIG5hbWVzIG9mIHRoZSBwcm9wZXJ0aWVzIHRvIGludGVyY2VwdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxhenlQcm9wZXJ0aWVzPFQ+KHRhcmdldDogVCwgYXBwbHk6ICgpID0+IHZvaWQsIGtleXM6IEl0ZXJhYmxlPGtleW9mIFQ+KTogdm9pZCB7XG4gIGZ1bmN0aW9uIHJlc3RvcmVQcm9wZXJ0aWVzKCkge1xuICAgIGZvciAoY29uc3Qga2V5IG9mIGtleXMpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwge1xuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiB1bmRlZmluZWQsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgfSk7XG4gICAgfVxuICAgIGFwcGx5LmNhbGwodGFyZ2V0KTtcbiAgfVxuXG4gIGZvciAoY29uc3Qga2V5IG9mIGtleXMpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHtcbiAgICAgIGdldDogKCkgPT4ge1xuICAgICAgICByZXN0b3JlUHJvcGVydGllcygpO1xuICAgICAgICByZXR1cm4gdGFyZ2V0W2tleV07XG4gICAgICB9LFxuICAgICAgc2V0OiB1bmRlZmluZWQsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIH0pO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst object_inspect_1 = __importDefault(require(\"object-inspect\"));\nexports.name = \"LazyOptions\";\nfunction createLazyOptionsError(target) {\n    return new incident_1.Incident(exports.name, { target }, ({ target }) => `Cannot resolve lazy options in target: ${object_inspect_1.default(target)}`);\n}\nexports.createLazyOptionsError = createLazyOptionsError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2xhenktb3B0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLHVDQUFvQztBQUNwQyxvRUFBMkM7QUFHOUIsUUFBQSxJQUFJLEdBQVMsYUFBYSxDQUFDO0FBU3hDLFNBQWdCLHNCQUFzQixDQUFDLE1BQVc7SUFDaEQsT0FBTyxJQUFJLG1CQUFRLENBQUMsWUFBSSxFQUFFLEVBQUMsTUFBTSxFQUFDLEVBQUUsQ0FBQyxFQUFDLE1BQU0sRUFBQyxFQUFFLEVBQUUsQ0FBQywwQ0FBMEMsd0JBQWEsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDdkgsQ0FBQztBQUZELHdEQUVDIiwiZmlsZSI6ImVycm9ycy9sYXp5LW9wdGlvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmNpZGVudCB9IGZyb20gXCJpbmNpZGVudFwiO1xuaW1wb3J0IG9iamVjdEluc3BlY3QgZnJvbSBcIm9iamVjdC1pbnNwZWN0XCI7XG5cbmV4cG9ydCB0eXBlIE5hbWUgPSBcIkxhenlPcHRpb25zXCI7XG5leHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiTGF6eU9wdGlvbnNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEYXRhIHtcbiAgdGFyZ2V0OiBhbnk7XG59XG5cbmV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuZXhwb3J0IHR5cGUgTGF6eU9wdGlvbnNFcnJvciA9IEluY2lkZW50PERhdGEsIE5hbWUsIENhdXNlPjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUxhenlPcHRpb25zRXJyb3IodGFyZ2V0OiBhbnkpOiBMYXp5T3B0aW9uc0Vycm9yIHtcbiAgcmV0dXJuIG5ldyBJbmNpZGVudChuYW1lLCB7dGFyZ2V0fSwgKHt0YXJnZXR9KSA9PiBgQ2Fubm90IHJlc29sdmUgbGF6eSBvcHRpb25zIGluIHRhcmdldDogJHtvYmplY3RJbnNwZWN0KHRhcmdldCl9YCk7XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar FilterType;\n(function (FilterType) {\n    FilterType[FilterType[\"DropShadow\"] = 0] = \"DropShadow\";\n    FilterType[FilterType[\"Blur\"] = 1] = \"Blur\";\n    FilterType[FilterType[\"Glow\"] = 2] = \"Glow\";\n    FilterType[FilterType[\"Bevel\"] = 3] = \"Bevel\";\n    FilterType[FilterType[\"GradientGlow\"] = 4] = \"GradientGlow\";\n    FilterType[FilterType[\"Convolution\"] = 5] = \"Convolution\";\n    FilterType[FilterType[\"ColorMatrix\"] = 6] = \"ColorMatrix\";\n    FilterType[FilterType[\"GradientBevel\"] = 7] = \"GradientBevel\";\n})(FilterType = exports.FilterType || (exports.FilterType = {}));\nexports.$FilterType = new ts_enum_1.TsEnumType({\n    enum: FilterType,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9fdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxVQVNYO0FBVEQsV0FBWSxVQUFVO0lBQ3BCLHVEQUFVLENBQUE7SUFDViwyQ0FBSSxDQUFBO0lBQ0osMkNBQUksQ0FBQTtJQUNKLDZDQUFLLENBQUE7SUFDTCwyREFBWSxDQUFBO0lBQ1oseURBQVcsQ0FBQTtJQUNYLHlEQUFXLENBQUE7SUFDWCw2REFBYSxDQUFBO0FBQ2YsQ0FBQyxFQVRXLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBU3JCO0FBRVksUUFBQSxXQUFXLEdBQTJCLElBQUksb0JBQVUsQ0FBYTtJQUM1RSxJQUFJLEVBQUUsVUFBVTtJQUNoQixVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJmaWx0ZXJzL190eXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gRmlsdGVyVHlwZSB7XG4gIERyb3BTaGFkb3csXG4gIEJsdXIsXG4gIEdsb3csXG4gIEJldmVsLFxuICBHcmFkaWVudEdsb3csXG4gIENvbnZvbHV0aW9uLFxuICBDb2xvck1hdHJpeCxcbiAgR3JhZGllbnRCZXZlbCxcbn1cblxuZXhwb3J0IGNvbnN0ICRGaWx0ZXJUeXBlOiBUc0VudW1UeXBlPEZpbHRlclR5cGU+ID0gbmV3IFRzRW51bVR5cGU8RmlsdGVyVHlwZT4oe1xuICBlbnVtOiBGaWx0ZXJUeXBlLFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DisplayObjectType;\n(function (DisplayObjectType) {\n    DisplayObjectType[DisplayObjectType[\"Container\"] = 0] = \"Container\";\n    DisplayObjectType[DisplayObjectType[\"MorphShape\"] = 1] = \"MorphShape\";\n    DisplayObjectType[DisplayObjectType[\"Shape\"] = 2] = \"Shape\";\n})(DisplayObjectType = exports.DisplayObjectType || (exports.DisplayObjectType = {}));\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZGlzcGxheS9kaXNwbGF5LW9iamVjdC10eXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBWSxpQkFJWDtBQUpELFdBQVksaUJBQWlCO0lBQzNCLG1FQUFTLENBQUE7SUFDVCxxRUFBVSxDQUFBO0lBQ1YsMkRBQUssQ0FBQTtBQUNQLENBQUMsRUFKVyxpQkFBaUIsR0FBakIseUJBQWlCLEtBQWpCLHlCQUFpQixRQUk1QiIsImZpbGUiOiJkaXNwbGF5L2Rpc3BsYXktb2JqZWN0LXR5cGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBEaXNwbGF5T2JqZWN0VHlwZSB7XG4gIENvbnRhaW5lcixcbiAgTW9ycGhTaGFwZSxcbiAgU2hhcGUsXG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst object_inspect_1 = __importDefault(require(\"object-inspect\"));\nexports.name = \"InvalidType\";\nfunction format({ typeName, value, variableName }) {\n    if (typeof variableName === \"string\") {\n        return `Variable \\`${variableName}\\` should have type \\`${typeName}\\`: ${object_inspect_1.default(value)}`;\n    }\n    else {\n        return `Expected type \\`${typeName}\\`: ${object_inspect_1.default(value)}`;\n    }\n}\nexports.format = format;\nfunction createInvalidTypeError(typeName, value, variableName) {\n    return incident_1.Incident(exports.name, { typeName, value, variableName }, format);\n}\nexports.createInvalidTypeError = createInvalidTypeError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2ludmFsaWQtdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLHVDQUFvQztBQUNwQyxvRUFBMkM7QUFHOUIsUUFBQSxJQUFJLEdBQVMsYUFBYSxDQUFDO0FBdUJ4QyxTQUFnQixNQUFNLENBQUMsRUFBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBTztJQUMxRCxJQUFJLE9BQU8sWUFBWSxLQUFLLFFBQVEsRUFBRTtRQUNwQyxPQUFPLGNBQWMsWUFBWSx5QkFBeUIsUUFBUSxPQUFPLHdCQUFhLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztLQUNqRztTQUFNO1FBQ0wsT0FBTyxtQkFBbUIsUUFBUSxPQUFPLHdCQUFhLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztLQUNqRTtBQUNILENBQUM7QUFORCx3QkFNQztBQUVELFNBQWdCLHNCQUFzQixDQUFDLFFBQWdCLEVBQUUsS0FBVSxFQUFFLFlBQXFCO0lBQ3hGLE9BQU8sbUJBQVEsQ0FBQyxZQUFJLEVBQUUsRUFBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQ2pFLENBQUM7QUFGRCx3REFFQyIsImZpbGUiOiJlcnJvcnMvaW52YWxpZC10eXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcbmltcG9ydCBvYmplY3RJbnNwZWN0IGZyb20gXCJvYmplY3QtaW5zcGVjdFwiO1xuXG5leHBvcnQgdHlwZSBOYW1lID0gXCJJbnZhbGlkVHlwZVwiO1xuZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcIkludmFsaWRUeXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gIC8qKlxuICAgKiBUaGUgZXhwZWN0ZWQgSmF2YXNjcmlwdCB0eXBlLiBUaGlzIGlzIG9uZSBvZiB0aGUgcG9zc2libGUgcmVzdWx0cyBvZlxuICAgKiB0aGUgYHR5cGVvZmAgb3BlcmF0b3IuXG4gICAqL1xuICB0eXBlTmFtZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgdmFsdWUgdGhhdCBoYXMgYSBwcm9ibGVtIHdpdGggaXRzIHR5cGUuXG4gICAqL1xuICB2YWx1ZTogYW55O1xuXG4gIC8qKlxuICAgKiBUaGUgbmFtZSBvZiB0aGUgdmFyaWFibGUgdGhhdCBoYXMgYSBwcm9ibGVtIHdpdGggaXRzIHR5cGUuXG4gICAqL1xuICB2YXJpYWJsZU5hbWU/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuZXhwb3J0IHR5cGUgSW52YWxpZFR5cGVFcnJvciA9IEluY2lkZW50PERhdGEsIE5hbWUsIENhdXNlPjtcblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7dHlwZU5hbWUsIHZhbHVlLCB2YXJpYWJsZU5hbWV9OiBEYXRhKTogc3RyaW5nIHtcbiAgaWYgKHR5cGVvZiB2YXJpYWJsZU5hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gYFZhcmlhYmxlIFxcYCR7dmFyaWFibGVOYW1lfVxcYCBzaG91bGQgaGF2ZSB0eXBlIFxcYCR7dHlwZU5hbWV9XFxgOiAke29iamVjdEluc3BlY3QodmFsdWUpfWA7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGBFeHBlY3RlZCB0eXBlIFxcYCR7dHlwZU5hbWV9XFxgOiAke29iamVjdEluc3BlY3QodmFsdWUpfWA7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUludmFsaWRUeXBlRXJyb3IodHlwZU5hbWU6IHN0cmluZywgdmFsdWU6IGFueSwgdmFyaWFibGVOYW1lPzogc3RyaW5nKTogSW52YWxpZFR5cGVFcnJvciB7XG4gIHJldHVybiBJbmNpZGVudChuYW1lLCB7dHlwZU5hbWUsIHZhbHVlLCB2YXJpYWJsZU5hbWV9LCBmb3JtYXQpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fixed_point_1 = require(\"./fixed-point\");\n// tslint:disable-next-line:variable-name\nexports.Sfixed16P16 = fixed_point_1.createFixedPoint({\n    signed: true,\n    intBits: 16,\n    fracBits: 16,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZml4ZWQtcG9pbnQvc2ZpeGVkMTZwMTYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSwrQ0FBb0Y7QUFJcEYseUNBQXlDO0FBQzVCLFFBQUEsV0FBVyxHQUEwQiw4QkFBZ0IsQ0FBQztJQUNqRSxNQUFNLEVBQUUsSUFBSTtJQUNaLE9BQU8sRUFBRSxFQUFFO0lBQ1gsUUFBUSxFQUFFLEVBQUU7Q0FDYixDQUFDLENBQUMiLCJmaWxlIjoiZml4ZWQtcG9pbnQvc2ZpeGVkMTZwMTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUYWdnZWQgfSBmcm9tIFwidHMtdGFnZ2VkXCI7XG5pbXBvcnQgeyBjcmVhdGVGaXhlZFBvaW50LCBGaXhlZFBvaW50LCBGaXhlZFBvaW50Q29uc3RydWN0b3IgfSBmcm9tIFwiLi9maXhlZC1wb2ludFwiO1xuXG5leHBvcnQgdHlwZSBTZml4ZWQxNlAxNiA9IFRhZ2dlZDxGaXhlZFBvaW50LCBcIkZpeGVkMTZQMTZcIj47XG5cbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTp2YXJpYWJsZS1uYW1lXG5leHBvcnQgY29uc3QgU2ZpeGVkMTZQMTY6IEZpeGVkUG9pbnRDb25zdHJ1Y3RvciA9IGNyZWF0ZUZpeGVkUG9pbnQoe1xuICBzaWduZWQ6IHRydWUsXG4gIGludEJpdHM6IDE2LFxuICBmcmFjQml0czogMTYsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\n/**\n * @module kryo/builtins/sint16\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst integer_1 = require(\"../types/integer\");\nexports.$Sint16 = new integer_1.IntegerType({ min: -32768, max: 32767 });\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnVpbHRpbnMvc2ludDE2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7R0FFRzs7QUFFSCw4Q0FBK0M7QUFFbEMsUUFBQSxPQUFPLEdBQWdCLElBQUkscUJBQVcsQ0FBQyxFQUFDLEdBQUcsRUFBRSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJidWlsdGlucy9zaW50MTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUga3J5by9idWlsdGlucy9zaW50MTZcbiAqL1xuXG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCIuLi90eXBlcy9pbnRlZ2VyXCI7XG5cbmV4cG9ydCBjb25zdCAkU2ludDE2OiBJbnRlZ2VyVHlwZSA9IG5ldyBJbnRlZ2VyVHlwZSh7bWluOiAtMzI3NjgsIG1heDogMzI3Njd9KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst swf_tree_1 = require(\"swf-tree\");\nfunction parseRect(byteStream) {\n    const bitStream = byteStream.asBitStream();\n    const result = parseRectBits(bitStream);\n    bitStream.align();\n    return result;\n}\nexports.parseRect = parseRect;\nfunction parseRectBits(bitStream) {\n    const nBits = bitStream.readUint16Bits(5);\n    const xMin = bitStream.readSint16Bits(nBits);\n    const xMax = bitStream.readSint16Bits(nBits);\n    const yMin = bitStream.readSint16Bits(nBits);\n    const yMax = bitStream.readSint16Bits(nBits);\n    return { xMin, xMax, yMin, yMax };\n}\nexports.parseRectBits = parseRectBits;\nfunction parseSRgb8(byteStream) {\n    return {\n        r: byteStream.readUint8(),\n        g: byteStream.readUint8(),\n        b: byteStream.readUint8(),\n    };\n}\nexports.parseSRgb8 = parseSRgb8;\nfunction parseStraightSRgba8(byteStream) {\n    return {\n        r: byteStream.readUint8(),\n        g: byteStream.readUint8(),\n        b: byteStream.readUint8(),\n        a: byteStream.readUint8(),\n    };\n}\nexports.parseStraightSRgba8 = parseStraightSRgba8;\nfunction parseMatrix(byteStream) {\n    const bitStream = byteStream.asBitStream();\n    const result = parseMatrixBits(bitStream);\n    bitStream.align();\n    return result;\n}\nexports.parseMatrix = parseMatrix;\nfunction parseMatrixBits(bitStream) {\n    const hasScale = bitStream.readBoolBits();\n    let scaleX;\n    let scaleY;\n    if (hasScale) {\n        const scaleBits = bitStream.readUint16Bits(5);\n        scaleX = swf_tree_1.Sfixed16P16.fromEpsilons(bitStream.readSint32Bits(scaleBits));\n        scaleY = swf_tree_1.Sfixed16P16.fromEpsilons(bitStream.readSint32Bits(scaleBits));\n    }\n    else {\n        scaleX = swf_tree_1.Sfixed16P16.fromValue(1);\n        scaleY = swf_tree_1.Sfixed16P16.fromValue(1);\n    }\n    const hasSkew = bitStream.readBoolBits();\n    let skew0;\n    let skew1;\n    if (hasSkew) {\n        const skewBits = bitStream.readUint16Bits(5);\n        skew0 = swf_tree_1.Sfixed16P16.fromEpsilons(bitStream.readSint32Bits(skewBits));\n        skew1 = swf_tree_1.Sfixed16P16.fromEpsilons(bitStream.readSint32Bits(skewBits));\n    }\n    else {\n        skew0 = swf_tree_1.Sfixed16P16.fromValue(0);\n        skew1 = swf_tree_1.Sfixed16P16.fromValue(0);\n    }\n    const translateBits = bitStream.readUint16Bits(5);\n    const translateX = bitStream.readSint16Bits(translateBits);\n    const translateY = bitStream.readSint16Bits(translateBits);\n    return {\n        scaleX,\n        scaleY,\n        rotateSkew0: skew0,\n        rotateSkew1: skew1,\n        translateX,\n        translateY,\n    };\n}\nexports.parseMatrixBits = parseMatrixBits;\nfunction parseColorTransform(byteStream) {\n    const bitStream = byteStream.asBitStream();\n    const result = parseColorTransformBits(bitStream);\n    bitStream.align();\n    return result;\n}\nexports.parseColorTransform = parseColorTransform;\nfunction parseColorTransformBits(bitStream) {\n    const hasAdd = bitStream.readBoolBits();\n    const hasMult = bitStream.readBoolBits();\n    const nBits = bitStream.readUint16Bits(4);\n    let redMult;\n    let greenMult;\n    let blueMult;\n    if (hasMult) {\n        redMult = swf_tree_1.Sfixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));\n        greenMult = swf_tree_1.Sfixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));\n        blueMult = swf_tree_1.Sfixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));\n    }\n    else {\n        redMult = swf_tree_1.Sfixed8P8.fromValue(1);\n        greenMult = swf_tree_1.Sfixed8P8.fromValue(1);\n        blueMult = swf_tree_1.Sfixed8P8.fromValue(1);\n    }\n    let redAdd;\n    let greenAdd;\n    let blueAdd;\n    if (hasAdd) {\n        redAdd = bitStream.readSint16Bits(nBits);\n        greenAdd = bitStream.readSint16Bits(nBits);\n        blueAdd = bitStream.readSint16Bits(nBits);\n    }\n    else {\n        redAdd = 0;\n        greenAdd = 0;\n        blueAdd = 0;\n    }\n    return {\n        redMult,\n        greenMult,\n        blueMult,\n        redAdd,\n        greenAdd,\n        blueAdd,\n    };\n}\nexports.parseColorTransformBits = parseColorTransformBits;\nfunction parseColorTransformWithAlpha(byteStream) {\n    const bitStream = byteStream.asBitStream();\n    const result = parseColorTransformWithAlphaBits(bitStream);\n    bitStream.align();\n    return result;\n}\nexports.parseColorTransformWithAlpha = parseColorTransformWithAlpha;\nfunction parseColorTransformWithAlphaBits(bitStream) {\n    const hasAdd = bitStream.readBoolBits();\n    const hasMult = bitStream.readBoolBits();\n    const nBits = bitStream.readUint16Bits(4);\n    let redMult;\n    let greenMult;\n    let blueMult;\n    let alphaMult;\n    if (hasMult) {\n        redMult = swf_tree_1.Sfixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));\n        greenMult = swf_tree_1.Sfixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));\n        blueMult = swf_tree_1.Sfixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));\n        alphaMult = swf_tree_1.Sfixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));\n    }\n    else {\n        redMult = swf_tree_1.Sfixed8P8.fromValue(1);\n        greenMult = swf_tree_1.Sfixed8P8.fromValue(1);\n        blueMult = swf_tree_1.Sfixed8P8.fromValue(1);\n        alphaMult = swf_tree_1.Sfixed8P8.fromValue(1);\n    }\n    let redAdd;\n    let greenAdd;\n    let blueAdd;\n    let alphaAdd;\n    if (hasAdd) {\n        redAdd = bitStream.readSint16Bits(nBits);\n        greenAdd = bitStream.readSint16Bits(nBits);\n        blueAdd = bitStream.readSint16Bits(nBits);\n        alphaAdd = bitStream.readSint16Bits(nBits);\n    }\n    else {\n        redAdd = 0;\n        greenAdd = 0;\n        blueAdd = 0;\n        alphaAdd = 0;\n    }\n    return {\n        redMult,\n        greenMult,\n        blueMult,\n        alphaMult,\n        redAdd,\n        greenAdd,\n        blueAdd,\n        alphaAdd,\n    };\n}\nexports.parseColorTransformWithAlphaBits = parseColorTransformWithAlphaBits;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst lazy_properties_1 = require(\"../_helpers/lazy-properties\");\nconst invalid_type_1 = require(\"../errors/invalid-type\");\nconst lazy_options_1 = require(\"../errors/lazy-options\");\nconst read_visitor_1 = require(\"../readers/read-visitor\");\nconst test_error_1 = require(\"../test-error\");\nexports.name = \"union\";\nclass TaggedUnionType {\n    constructor(options) {\n        this.name = exports.name;\n        this._options = options;\n        if (typeof options !== \"function\") {\n            this._applyOptions();\n        }\n        else {\n            lazy_properties_1.lazyProperties(this, this._applyOptions, [\"variants\", \"tag\"]);\n        }\n    }\n    match(value) {\n        const tag = this.tag;\n        const tagValue = value[tag];\n        if (tagValue === undefined) {\n            return undefined;\n            // throw new Incident(\"MissingTag\", {union: this, value});\n        }\n        const variant = this.getValueToVariantMap().get(tagValue); // tagToVariant\n        if (variant === undefined) {\n            return undefined;\n            // throw new Incident(\"VariantNotFound\", {union: this, value});\n        }\n        return variant;\n    }\n    matchTrusted(value) {\n        return this.match(value);\n    }\n    write(writer, value) {\n        const variant = this.match(value);\n        if (variant === undefined) {\n            throw new incident_1.Incident(\"VariantNotFound\", { union: this, value });\n        }\n        if (variant.write === undefined) {\n            throw new incident_1.Incident(\"NotWritable\", { type: variant });\n        }\n        return variant.write(writer, value);\n    }\n    read(reader, raw) {\n        return this.variantRead(reader, raw)[1];\n    }\n    variantRead(reader, raw) {\n        return reader.readDocument(raw, read_visitor_1.readVisitor({\n            fromMap: (input, keyReader, valueReader) => {\n                const outTag = this.getOutTag();\n                for (const [rawKey, rawValue] of input) {\n                    const outKey = keyReader.readString(rawKey, read_visitor_1.readVisitor({ fromString: (input) => input }));\n                    if (outKey !== outTag) {\n                        continue;\n                    }\n                    const tagValue = this.getTagType().read(valueReader, rawValue);\n                    const variant = this.getValueToVariantMap().get(tagValue); // tagToVariant\n                    if (variant === undefined) {\n                        throw new incident_1.Incident(\"VariantNotFound\", { union: this, tagValue });\n                    }\n                    return [variant, variant.read(reader, raw)];\n                }\n                throw new incident_1.Incident(\"MissingOutTag\");\n            },\n        }));\n    }\n    testError(value) {\n        if (typeof value !== \"object\" || value === null) {\n            return invalid_type_1.createInvalidTypeError(\"object\", value);\n        }\n        const variant = this.match(value);\n        if (variant === undefined) {\n            return new incident_1.Incident(\"UnknownUnionVariant\", \"Unknown union variant\");\n        }\n        return test_error_1.testError(variant, value);\n    }\n    // testWithVariant(val: T): TestWithVariantResult<T> {\n    //   const variant: K | undefined = this.match(val);\n    //   if (variant === undefined) {\n    //     return [false as false, undefined];\n    //   }\n    //   return [variant.test(val), variant] as TestWithVariantResult<T>;\n    // }\n    test(value) {\n        if (typeof value !== \"object\" || value === null) {\n            return false;\n        }\n        const type = this.match(value);\n        if (type === undefined) {\n            return false;\n        }\n        return type.test(value);\n    }\n    // TODO: Always return true?\n    equals(val1, val2) {\n        const type1 = this.matchTrusted(val1);\n        const type2 = this.matchTrusted(val2);\n        return type1 === type2 && type1.equals(val1, val2);\n    }\n    clone(val) {\n        return this.matchTrusted(val).clone(val);\n    }\n    _applyOptions() {\n        if (this._options === undefined) {\n            throw lazy_options_1.createLazyOptionsError(this);\n        }\n        const options = typeof this._options === \"function\"\n            ? this._options()\n            : this._options;\n        delete this._options;\n        const variants = options.variants;\n        const tag = options.tag;\n        Object.assign(this, { variants, tag });\n    }\n    /**\n     * Returns the serialized name of the tag property\n     */\n    getOutTag() {\n        if (this._outTag === undefined) {\n            const tag = this.tag;\n            let outTag = undefined;\n            for (const variant of this.variants) {\n                const cur = variant.getOutKey(tag);\n                if (outTag === undefined) {\n                    outTag = cur;\n                }\n                else if (cur !== outTag) {\n                    throw new incident_1.Incident(\"MixedOutTag\", { tag, out: [cur, outTag] });\n                }\n            }\n            if (outTag === undefined) {\n                throw new incident_1.Incident(\"AssertionFailed\", \"Expected outTag to be defined\");\n            }\n            this._outTag = outTag;\n        }\n        return this._outTag;\n    }\n    getTagType() {\n        if (this._tagType === undefined) {\n            const tag = this.tag;\n            let tagType = undefined;\n            for (const variant of this.variants) {\n                const lit = variant.properties[tag].type;\n                const cur = lit.type;\n                if (tagType === undefined) {\n                    tagType = cur;\n                }\n                else if (cur !== tagType) {\n                    throw new incident_1.Incident(\"MixedTagType\", { tag, type: [cur, tagType] });\n                }\n            }\n            if (tagType === undefined) {\n                throw new incident_1.Incident(\"AssertionFailed\", \"Expected tagType to be defined\");\n            }\n            this._tagType = tagType;\n        }\n        return this._tagType;\n    }\n    getValueToVariantMap() {\n        if (this._valueToVariantMap === undefined) {\n            const tag = this.tag;\n            const valueToVariantMap = new Map();\n            for (const variant of this.variants) {\n                const lit = variant.properties[tag].type;\n                if (valueToVariantMap.has(lit.value)) {\n                    throw new incident_1.Incident(\"DuplicateTagValue\", { value: lit.value });\n                }\n                valueToVariantMap.set(lit.value, variant);\n            }\n            if (valueToVariantMap === undefined) {\n                throw new incident_1.Incident(\"AssertionFailed\", \"Expected valueToVariantMap to be defined\");\n            }\n            this._valueToVariantMap = valueToVariantMap;\n        }\n        return this._valueToVariantMap;\n    }\n}\nexports.TaggedUnionType = TaggedUnionType;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AvmValueType;\n(function (AvmValueType) {\n    AvmValueType[AvmValueType[\"Boolean\"] = 0] = \"Boolean\";\n    AvmValueType[AvmValueType[\"External\"] = 1] = \"External\";\n    AvmValueType[AvmValueType[\"Function\"] = 2] = \"Function\";\n    AvmValueType[AvmValueType[\"Null\"] = 3] = \"Null\";\n    AvmValueType[AvmValueType[\"Number\"] = 4] = \"Number\";\n    AvmValueType[AvmValueType[\"Object\"] = 5] = \"Object\";\n    AvmValueType[AvmValueType[\"String\"] = 6] = \"String\";\n    AvmValueType[AvmValueType[\"Undefined\"] = 7] = \"Undefined\";\n})(AvmValueType = exports.AvmValueType || (exports.AvmValueType = {}));\n// tslint:disable-next-line:typedef variable-name\nexports.AvmValue = {\n    // fromAst(astValue: AstValue): AvmValue {\n    //\n    // }\n    toAvmString(avmValue, _swfVersion) {\n        switch (avmValue.type) {\n            case AvmValueType.String:\n                return avmValue;\n            default:\n                throw new Error(\"CannotConvertToString\");\n        }\n    },\n};\nexports.AVM_NULL = Object.freeze({ type: AvmValueType.Null });\nexports.AVM_UNDEFINED = Object.freeze({ type: AvmValueType.Undefined });\nexports.AVM_TRUE = Object.freeze({ type: AvmValueType.Boolean, value: true });\nexports.AVM_FALSE = Object.freeze({ type: AvmValueType.Boolean, value: false });\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtLXZhbHVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBWSxZQVNYO0FBVEQsV0FBWSxZQUFZO0lBQ3RCLHFEQUFPLENBQUE7SUFDUCx1REFBUSxDQUFBO0lBQ1IsdURBQVEsQ0FBQTtJQUNSLCtDQUFJLENBQUE7SUFDSixtREFBTSxDQUFBO0lBQ04sbURBQU0sQ0FBQTtJQUNOLG1EQUFNLENBQUE7SUFDTix5REFBUyxDQUFBO0FBQ1gsQ0FBQyxFQVRXLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBU3ZCO0FBcUZELGlEQUFpRDtBQUNwQyxRQUFBLFFBQVEsR0FBRztJQUN0QiwwQ0FBMEM7SUFDMUMsRUFBRTtJQUNGLElBQUk7SUFDSixXQUFXLENBQUMsUUFBa0IsRUFBRSxXQUFtQjtRQUNqRCxRQUFRLFFBQVEsQ0FBQyxJQUFJLEVBQUU7WUFDckIsS0FBSyxZQUFZLENBQUMsTUFBTTtnQkFDdEIsT0FBTyxRQUFRLENBQUM7WUFDbEI7Z0JBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1NBQzVDO0lBQ0gsQ0FBQztDQUNGLENBQUM7QUFFVyxRQUFBLFFBQVEsR0FBWSxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUMsSUFBSSxFQUFFLFlBQVksQ0FBQyxJQUF5QixFQUFDLENBQUMsQ0FBQztBQUNsRixRQUFBLGFBQWEsR0FBaUIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFDLElBQUksRUFBRSxZQUFZLENBQUMsU0FBbUMsRUFBQyxDQUFDLENBQUM7QUFDdEcsUUFBQSxRQUFRLEdBQWUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFDLElBQUksRUFBRSxZQUFZLENBQUMsT0FBK0IsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQztBQUN4RyxRQUFBLFNBQVMsR0FBZSxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUMsSUFBSSxFQUFFLFlBQVksQ0FBQyxPQUErQixFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bS12YWx1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBlbnVtIEF2bVZhbHVlVHlwZSB7XG4gIEJvb2xlYW4sXG4gIEV4dGVybmFsLFxuICBGdW5jdGlvbixcbiAgTnVsbCxcbiAgTnVtYmVyLFxuICBPYmplY3QsXG4gIFN0cmluZyxcbiAgVW5kZWZpbmVkLFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEF2bUV4dGVybmFsSGFuZGxlciB7XG4gIG93bktleXMoKTogQXZtVmFsdWVbXTtcblxuICBhcHBseT8odGhpc0FyZzogQXZtVmFsdWUgfCB1bmRlZmluZWQsIGFyZ3M6IFJlYWRvbmx5QXJyYXk8QXZtVmFsdWU+KTogQXZtVmFsdWU7XG5cbiAgc2V0KGtleTogc3RyaW5nLCB2YWx1ZTogQXZtVmFsdWUpOiB2b2lkO1xuXG4gIGdldChrZXk6IHN0cmluZyk6IEF2bVZhbHVlIHwgdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEF2bUV4dGVybmFsIHtcbiAgcmVhZG9ubHkgdHlwZTogQXZtVmFsdWVUeXBlLkV4dGVybmFsO1xuICByZWFkb25seSBoYW5kbGVyOiBBdm1FeHRlcm5hbEhhbmRsZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXZtQm9vbGVhbiB7XG4gIHJlYWRvbmx5IHR5cGU6IEF2bVZhbHVlVHlwZS5Cb29sZWFuO1xuICByZWFkb25seSB2YWx1ZTogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBdm1OdWxsIHtcbiAgcmVhZG9ubHkgdHlwZTogQXZtVmFsdWVUeXBlLk51bGw7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXZtTnVtYmVyIHtcbiAgcmVhZG9ubHkgdHlwZTogQXZtVmFsdWVUeXBlLk51bWJlcjtcbiAgcmVhZG9ubHkgdmFsdWU6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBdm1TdHJpbmcge1xuICByZWFkb25seSB0eXBlOiBBdm1WYWx1ZVR5cGUuU3RyaW5nO1xuICByZWFkb25seSB2YWx1ZTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEF2bVVuZGVmaW5lZCB7XG4gIHJlYWRvbmx5IHR5cGU6IEF2bVZhbHVlVHlwZS5VbmRlZmluZWQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXZtT2JqZWN0UHJvcGVydHkge1xuICByZWFkb25seSB2YWx1ZTogQXZtVmFsdWU7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXZtT2JqZWN0IHtcbiAgcmVhZG9ubHkgdHlwZTogQXZtVmFsdWVUeXBlLk9iamVjdDtcbiAgcHJvdG90eXBlOiBBdm1WYWx1ZTtcbiAgcmVhZG9ubHkgb3duUHJvcGVydGllczogTWFwPHN0cmluZywgQXZtT2JqZWN0UHJvcGVydHk+O1xufVxuXG5leHBvcnQgdHlwZSBBdm1DYWxsUmVzdWx0ID0gW2Jvb2xlYW4sIEF2bVZhbHVlXTtcblxuZXhwb3J0IGludGVyZmFjZSBBdm1DYWxsIHtcbiAgcmVhZG9ubHkgY29udGV4dD86IEF2bVZhbHVlO1xuICByZWFkb25seSBhcmdzOiBBdm1WYWx1ZVtdO1xuICByZWFkb25seSBjYWxsZWU/OiBBdm1GdW5jdGlvbjtcbn1cblxuZXhwb3J0IHR5cGUgTmF0aXZlQ2FsbEhhbmRsZXIgPSAoY2FsbDogQXZtQ2FsbCkgPT4gQXZtQ2FsbFJlc3VsdDtcblxuZXhwb3J0IGludGVyZmFjZSBBdm1OYXRpdmVGdW5jdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGU6IEF2bVZhbHVlVHlwZS5GdW5jdGlvbjtcbiAgcmVhZG9ubHkgbmF0aXZlOiB0cnVlO1xuICBvd25Qcm9wZXJ0aWVzPzogTWFwPHN0cmluZywgQXZtVmFsdWU+O1xuICByZWFkb25seSBoYW5kbGVyOiBOYXRpdmVDYWxsSGFuZGxlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBdm1DbGllbnRGdW5jdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGU6IEF2bVZhbHVlVHlwZS5GdW5jdGlvbjtcbiAgcmVhZG9ubHkgbmF0aXZlOiBmYWxzZTtcbiAgb3duUHJvcGVydGllcz86IE1hcDxzdHJpbmcsIEF2bVZhbHVlPjtcbiAgLy8gZGVmaW5pdGlvbjogRGVmaW5lRnVuY3Rpb247XG59XG5cbmV4cG9ydCB0eXBlIEF2bUZ1bmN0aW9uID0gQXZtTmF0aXZlRnVuY3Rpb24gfCBBdm1DbGllbnRGdW5jdGlvbjtcblxuZXhwb3J0IHR5cGUgQXZtVmFsdWUgPSBBdm1Cb29sZWFuXG4gIHwgQXZtRXh0ZXJuYWxcbiAgfCBBdm1OdWxsXG4gIHwgQXZtTnVtYmVyXG4gIHwgQXZtT2JqZWN0XG4gIHwgQXZtRnVuY3Rpb25cbiAgfCBBdm1VbmRlZmluZWRcbiAgfCBBdm1TdHJpbmc7XG5cbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTp0eXBlZGVmIHZhcmlhYmxlLW5hbWVcbmV4cG9ydCBjb25zdCBBdm1WYWx1ZSA9IHtcbiAgLy8gZnJvbUFzdChhc3RWYWx1ZTogQXN0VmFsdWUpOiBBdm1WYWx1ZSB7XG4gIC8vXG4gIC8vIH1cbiAgdG9Bdm1TdHJpbmcoYXZtVmFsdWU6IEF2bVZhbHVlLCBfc3dmVmVyc2lvbjogbnVtYmVyKTogQXZtU3RyaW5nIHtcbiAgICBzd2l0Y2ggKGF2bVZhbHVlLnR5cGUpIHtcbiAgICAgIGNhc2UgQXZtVmFsdWVUeXBlLlN0cmluZzpcbiAgICAgICAgcmV0dXJuIGF2bVZhbHVlO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90Q29udmVydFRvU3RyaW5nXCIpO1xuICAgIH1cbiAgfSxcbn07XG5cbmV4cG9ydCBjb25zdCBBVk1fTlVMTDogQXZtTnVsbCA9IE9iamVjdC5mcmVlemUoe3R5cGU6IEF2bVZhbHVlVHlwZS5OdWxsIGFzIEF2bVZhbHVlVHlwZS5OdWxsfSk7XG5leHBvcnQgY29uc3QgQVZNX1VOREVGSU5FRDogQXZtVW5kZWZpbmVkID0gT2JqZWN0LmZyZWV6ZSh7dHlwZTogQXZtVmFsdWVUeXBlLlVuZGVmaW5lZCBhcyBBdm1WYWx1ZVR5cGUuVW5kZWZpbmVkfSk7XG5leHBvcnQgY29uc3QgQVZNX1RSVUU6IEF2bUJvb2xlYW4gPSBPYmplY3QuZnJlZXplKHt0eXBlOiBBdm1WYWx1ZVR5cGUuQm9vbGVhbiBhcyBBdm1WYWx1ZVR5cGUuQm9vbGVhbiwgdmFsdWU6IHRydWV9KTtcbmV4cG9ydCBjb25zdCBBVk1fRkFMU0U6IEF2bUJvb2xlYW4gPSBPYmplY3QuZnJlZXplKHt0eXBlOiBBdm1WYWx1ZVR5cGUuQm9vbGVhbiBhcyBBdm1WYWx1ZVR5cGUuQm9vbGVhbiwgdmFsdWU6IGZhbHNlfSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar FillStyleType;\n(function (FillStyleType) {\n    FillStyleType[FillStyleType[\"Bitmap\"] = 0] = \"Bitmap\";\n    FillStyleType[FillStyleType[\"FocalGradient\"] = 1] = \"FocalGradient\";\n    FillStyleType[FillStyleType[\"LinearGradient\"] = 2] = \"LinearGradient\";\n    FillStyleType[FillStyleType[\"RadialGradient\"] = 3] = \"RadialGradient\";\n    FillStyleType[FillStyleType[\"Solid\"] = 4] = \"Solid\";\n})(FillStyleType = exports.FillStyleType || (exports.FillStyleType = {}));\nexports.$FillStyleType = new ts_enum_1.TsEnumType({\n    enum: FillStyleType,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvX3R5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsZ0RBQWdEO0FBRWhELElBQVksYUFNWDtBQU5ELFdBQVksYUFBYTtJQUN2QixxREFBTSxDQUFBO0lBQ04sbUVBQWEsQ0FBQTtJQUNiLHFFQUFjLENBQUE7SUFDZCxxRUFBYyxDQUFBO0lBQ2QsbURBQUssQ0FBQTtBQUNQLENBQUMsRUFOVyxhQUFhLEdBQWIscUJBQWEsS0FBYixxQkFBYSxRQU14QjtBQUVZLFFBQUEsY0FBYyxHQUE4QixJQUFJLG9CQUFVLENBQWdCO0lBQ3JGLElBQUksRUFBRSxhQUFhO0lBQ25CLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImZpbGwtc3R5bGVzL190eXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gRmlsbFN0eWxlVHlwZSB7XG4gIEJpdG1hcCxcbiAgRm9jYWxHcmFkaWVudCxcbiAgTGluZWFyR3JhZGllbnQsXG4gIFJhZGlhbEdyYWRpZW50LFxuICBTb2xpZCxcbn1cblxuZXhwb3J0IGNvbnN0ICRGaWxsU3R5bGVUeXBlOiBUc0VudW1UeXBlPEZpbGxTdHlsZVR5cGU+ID0gbmV3IFRzRW51bVR5cGU8RmlsbFN0eWxlVHlwZT4oe1xuICBlbnVtOiBGaWxsU3R5bGVUeXBlLFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sint32_1 = require(\"kryo/builtins/sint32\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nexports.$Vector2D = new document_1.DocumentType({\n    properties: {\n        x: { type: sint32_1.$Sint32 },\n        y: { type: sint32_1.$Sint32 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdmVjdG9yLTJkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFRdEQsUUFBQSxTQUFTLEdBQTZCLElBQUksdUJBQVksQ0FBVztJQUM1RSxVQUFVLEVBQUU7UUFDVixDQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUNsQixDQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztLQUNuQjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InZlY3Rvci0yZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRTaW50MzIgfSBmcm9tIFwia3J5by9idWlsdGlucy9zaW50MzJcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgU2ludDMyIH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVmVjdG9yMkQge1xuICB4OiBTaW50MzI7XG4gIHk6IFNpbnQzMjtcbn1cblxuZXhwb3J0IGNvbnN0ICRWZWN0b3IyRDogRG9jdW1lbnRJb1R5cGU8VmVjdG9yMkQ+ID0gbmV3IERvY3VtZW50VHlwZTxWZWN0b3IyRD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgeDoge3R5cGU6ICRTaW50MzJ9LFxuICAgIHk6IHt0eXBlOiAkU2ludDMyfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","\"use strict\";\n/**\n * @module kryo/builtins/uint32\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst integer_1 = require(\"../types/integer\");\nexports.$Uint32 = new integer_1.IntegerType({ min: 0, max: 4294967295 });\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnVpbHRpbnMvdWludDMyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7R0FFRzs7QUFFSCw4Q0FBK0M7QUFFbEMsUUFBQSxPQUFPLEdBQWdCLElBQUkscUJBQVcsQ0FBQyxFQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBQyxDQUFDLENBQUMiLCJmaWxlIjoiYnVpbHRpbnMvdWludDMyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlIGtyeW8vYnVpbHRpbnMvdWludDMyXG4gKi9cblxuaW1wb3J0IHsgSW50ZWdlclR5cGUgfSBmcm9tIFwiLi4vdHlwZXMvaW50ZWdlclwiO1xuXG5leHBvcnQgY29uc3QgJFVpbnQzMjogSW50ZWdlclR5cGUgPSBuZXcgSW50ZWdlclR5cGUoe21pbjogMCwgbWF4OiA0Mjk0OTY3Mjk1fSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\n/**\n * @module kryo/builtins/uint8\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst integer_1 = require(\"../types/integer\");\nexports.$Uint8 = new integer_1.IntegerType({ min: 0, max: 255 });\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnVpbHRpbnMvdWludDgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOztHQUVHOztBQUVILDhDQUErQztBQUVsQyxRQUFBLE1BQU0sR0FBZ0IsSUFBSSxxQkFBVyxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJidWlsdGlucy91aW50OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZSBrcnlvL2J1aWx0aW5zL3VpbnQ4XG4gKi9cblxuaW1wb3J0IHsgSW50ZWdlclR5cGUgfSBmcm9tIFwiLi4vdHlwZXMvaW50ZWdlclwiO1xuXG5leHBvcnQgY29uc3QgJFVpbnQ4OiBJbnRlZ2VyVHlwZSA9IG5ldyBJbnRlZ2VyVHlwZSh7bWluOiAwLCBtYXg6IDI1NX0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar JoinStyleType;\n(function (JoinStyleType) {\n    JoinStyleType[JoinStyleType[\"Bevel\"] = 0] = \"Bevel\";\n    JoinStyleType[JoinStyleType[\"Miter\"] = 1] = \"Miter\";\n    JoinStyleType[JoinStyleType[\"Round\"] = 2] = \"Round\";\n})(JoinStyleType = exports.JoinStyleType || (exports.JoinStyleType = {}));\nexports.$JoinStyleType = new ts_enum_1.TsEnumType({\n    enum: JoinStyleType,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvam9pbi1zdHlsZXMvX3R5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsZ0RBQWdEO0FBRWhELElBQVksYUFJWDtBQUpELFdBQVksYUFBYTtJQUN2QixtREFBSyxDQUFBO0lBQ0wsbURBQUssQ0FBQTtJQUNMLG1EQUFLLENBQUE7QUFDUCxDQUFDLEVBSlcsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFJeEI7QUFFWSxRQUFBLGNBQWMsR0FBOEIsSUFBSSxvQkFBVSxDQUFnQjtJQUNyRixJQUFJLEVBQUUsYUFBYTtJQUNuQixVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJqb2luLXN0eWxlcy9fdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIEpvaW5TdHlsZVR5cGUge1xuICBCZXZlbCxcbiAgTWl0ZXIsXG4gIFJvdW5kLFxufVxuXG5leHBvcnQgY29uc3QgJEpvaW5TdHlsZVR5cGU6IFRzRW51bVR5cGU8Sm9pblN0eWxlVHlwZT4gPSBuZXcgVHNFbnVtVHlwZTxKb2luU3R5bGVUeXBlPih7XG4gIGVudW06IEpvaW5TdHlsZVR5cGUsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar ShapeRecordType;\n(function (ShapeRecordType) {\n    ShapeRecordType[ShapeRecordType[\"CurvedEdge\"] = 0] = \"CurvedEdge\";\n    ShapeRecordType[ShapeRecordType[\"StraightEdge\"] = 1] = \"StraightEdge\";\n    ShapeRecordType[ShapeRecordType[\"StyleChange\"] = 2] = \"StyleChange\";\n})(ShapeRecordType = exports.ShapeRecordType || (exports.ShapeRecordType = {}));\nexports.$ShapeRecordType = new ts_enum_1.TsEnumType({\n    enum: ShapeRecordType,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3Jkcy9fdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxlQUlYO0FBSkQsV0FBWSxlQUFlO0lBQ3pCLGlFQUFVLENBQUE7SUFDVixxRUFBWSxDQUFBO0lBQ1osbUVBQVcsQ0FBQTtBQUNiLENBQUMsRUFKVyxlQUFlLEdBQWYsdUJBQWUsS0FBZix1QkFBZSxRQUkxQjtBQUVZLFFBQUEsZ0JBQWdCLEdBQWdDLElBQUksb0JBQVUsQ0FBa0I7SUFDM0YsSUFBSSxFQUFFLGVBQWU7SUFDckIsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoic2hhcGUtcmVjb3Jkcy9fdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIFNoYXBlUmVjb3JkVHlwZSB7XG4gIEN1cnZlZEVkZ2UsXG4gIFN0cmFpZ2h0RWRnZSxcbiAgU3R5bGVDaGFuZ2UsXG59XG5cbmV4cG9ydCBjb25zdCAkU2hhcGVSZWNvcmRUeXBlOiBUc0VudW1UeXBlPFNoYXBlUmVjb3JkVHlwZT4gPSBuZXcgVHNFbnVtVHlwZTxTaGFwZVJlY29yZFR5cGU+KHtcbiAgZW51bTogU2hhcGVSZWNvcmRUeXBlLFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sint16_1 = require(\"kryo/builtins/sint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nexports.$Rect = new document_1.DocumentType({\n    properties: {\n        xMin: { type: sint16_1.$Sint16 },\n        xMax: { type: sint16_1.$Sint16 },\n        yMin: { type: sint16_1.$Sint16 },\n        yMax: { type: sint16_1.$Sint16 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcmVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBVXRELFFBQUEsS0FBSyxHQUF5QixJQUFJLHVCQUFZLENBQU87SUFDaEUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDckIsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDckIsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDckIsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7S0FDdEI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJyZWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFNpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3NpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBTaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBSZWN0IHtcbiAgeE1pbjogU2ludDE2O1xuICB4TWF4OiBTaW50MTY7XG4gIHlNaW46IFNpbnQxNjtcbiAgeU1heDogU2ludDE2O1xufVxuXG5leHBvcnQgY29uc3QgJFJlY3Q6IERvY3VtZW50SW9UeXBlPFJlY3Q+ID0gbmV3IERvY3VtZW50VHlwZTxSZWN0Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB4TWluOiB7dHlwZTogJFNpbnQxNn0sXG4gICAgeE1heDoge3R5cGU6ICRTaW50MTZ9LFxuICAgIHlNaW46IHt0eXBlOiAkU2ludDE2fSxcbiAgICB5TWF4OiB7dHlwZTogJFNpbnQxNn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar readable_1 = require(\"./readable\");\nexports.ReadableStream = readable_1.ReadableStream;\nvar writable_1 = require(\"./writable\");\nexports.WritableStream = writable_1.WritableStream;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBbUY7QUFBbkMsb0NBQUEsY0FBYyxDQUFBO0FBQzlELHVDQUFtRjtBQUFuQyxvQ0FBQSxjQUFjLENBQUEiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBSZWFkYWJsZUJpdFN0cmVhbSwgUmVhZGFibGVCeXRlU3RyZWFtLCBSZWFkYWJsZVN0cmVhbSB9IGZyb20gXCIuL3JlYWRhYmxlXCI7XG5leHBvcnQgeyBXcml0YWJsZUJpdFN0cmVhbSwgV3JpdGFibGVCeXRlU3RyZWFtLCBXcml0YWJsZVN0cmVhbSB9IGZyb20gXCIuL3dyaXRhYmxlXCI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst invalid_value_1 = require(\"./errors/invalid-value\");\n/**\n * Calls the `.testError` method of `type` or falls back to an implementation derived from `.test`.\n *\n * @param type The type used for the test.\n * @param value The value to match.\n * @return Undefined if the value matches, otherwise an `Error` instance.\n */\nfunction testError(type, value) {\n    if (type.testError !== undefined) {\n        return type.testError(value);\n    }\n    else {\n        return type.test(value) ? undefined : invalid_value_1.createInvalidValueError(type, value);\n    }\n}\nexports.testError = testError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGVzdC1lcnJvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLDBEQUFpRTtBQUVqRTs7Ozs7O0dBTUc7QUFDSCxTQUFnQixTQUFTLENBQUksSUFBYSxFQUFFLEtBQVE7SUFDbEQsSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLFNBQVMsRUFBRTtRQUNoQyxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDOUI7U0FBTTtRQUNMLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyx1Q0FBdUIsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDNUU7QUFDSCxDQUFDO0FBTkQsOEJBTUMiLCJmaWxlIjoidGVzdC1lcnJvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFR5cGUgfSBmcm9tIFwiLi9jb3JlXCI7XG5pbXBvcnQgeyBjcmVhdGVJbnZhbGlkVmFsdWVFcnJvciB9IGZyb20gXCIuL2Vycm9ycy9pbnZhbGlkLXZhbHVlXCI7XG5cbi8qKlxuICogQ2FsbHMgdGhlIGAudGVzdEVycm9yYCBtZXRob2Qgb2YgYHR5cGVgIG9yIGZhbGxzIGJhY2sgdG8gYW4gaW1wbGVtZW50YXRpb24gZGVyaXZlZCBmcm9tIGAudGVzdGAuXG4gKlxuICogQHBhcmFtIHR5cGUgVGhlIHR5cGUgdXNlZCBmb3IgdGhlIHRlc3QuXG4gKiBAcGFyYW0gdmFsdWUgVGhlIHZhbHVlIHRvIG1hdGNoLlxuICogQHJldHVybiBVbmRlZmluZWQgaWYgdGhlIHZhbHVlIG1hdGNoZXMsIG90aGVyd2lzZSBhbiBgRXJyb3JgIGluc3RhbmNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdGVzdEVycm9yPFQ+KHR5cGU6IFR5cGU8VD4sIHZhbHVlOiBUKTogRXJyb3IgfCB1bmRlZmluZWQge1xuICBpZiAodHlwZS50ZXN0RXJyb3IgIT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiB0eXBlLnRlc3RFcnJvcih2YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHR5cGUudGVzdCh2YWx1ZSkgPyB1bmRlZmluZWQgOiBjcmVhdGVJbnZhbGlkVmFsdWVFcnJvcih0eXBlLCB2YWx1ZSk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst read_visitor_1 = require(\"kryo/readers/read-visitor\");\nfunction createFixedPoint(options) {\n    var _a;\n    const { signed, intBits, fracBits } = options;\n    return _a = class FixedPoint {\n            constructor(epsilons) {\n                this.epsilons = epsilons;\n            }\n            static toJSON() {\n                throw new incident_1.Incident(\"NotImplemented\", \"FixedPointType#toJSON\");\n            }\n            static clone(value) {\n                return value;\n            }\n            static equals(left, right) {\n                return left.epsilons === right.epsilons;\n            }\n            static testError(value) {\n                if (typeof value !== \"object\" || value === null || typeof value.epsilons !== \"number\") {\n                    return new incident_1.Incident(\"InvalidType\", \"Expected `{epsilons: number}`\");\n                }\n                const epsilons = value.epsilons;\n                if ((epsilons | 0) !== epsilons) {\n                    return new incident_1.Incident(\"InvalidType\", \"Expected `Sint32`\");\n                }\n                const max = Math.pow(2, this.intBits + this.fracBits - (this.signed ? 1 : 0));\n                const min = this.signed ? -max - 1 : 0;\n                if (epsilons < min || epsilons > max) {\n                    return new incident_1.Incident(\"RangeError\", { min, max, value });\n                }\n                return undefined;\n            }\n            static test(value) {\n                return this.testError(value) === undefined;\n            }\n            static read(reader, raw) {\n                return reader.readFloat64(raw, read_visitor_1.readVisitor({\n                    fromFloat64: (input) => {\n                        const result = FixedPoint.fromEpsilons(input);\n                        const error = this.testError(result);\n                        if (error !== undefined) {\n                            throw error;\n                        }\n                        return result;\n                    },\n                }));\n            }\n            static write(writer, value) {\n                return writer.writeFloat64(value.epsilons);\n            }\n            static fromEpsilons(epsilons) {\n                return new FixedPoint(epsilons);\n            }\n            static fromValue(value) {\n                return new FixedPoint(value * Math.pow(2, fracBits));\n            }\n            valueOf() {\n                return this.epsilons * Math.pow(2, -fracBits);\n            }\n        },\n        _a.signed = signed,\n        _a.intBits = intBits,\n        _a.fracBits = fracBits,\n        _a;\n}\nexports.createFixedPoint = createFixedPoint;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZml4ZWQtcG9pbnQvZml4ZWQtcG9pbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFFcEMsNERBQXdEO0FBc0J4RCxTQUFnQixnQkFBZ0IsQ0FBQyxPQUEwQjs7SUFDekQsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFDLEdBQUcsT0FBTyxDQUFDO0lBRTVDLFlBQU8sTUFBTSxVQUFVO1lBT3JCLFlBQW9CLFFBQWdCO2dCQUNsQyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztZQUMzQixDQUFDO1lBRUQsTUFBTSxDQUFDLE1BQU07Z0JBQ1gsTUFBTSxJQUFJLG1CQUFRLENBQUMsZ0JBQWdCLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztZQUNoRSxDQUFDO1lBRUQsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFrQjtnQkFDN0IsT0FBTyxLQUFLLENBQUM7WUFDZixDQUFDO1lBRUQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFpQixFQUFFLEtBQWtCO2dCQUNqRCxPQUFPLElBQUksQ0FBQyxRQUFRLEtBQUssS0FBSyxDQUFDLFFBQVEsQ0FBQztZQUMxQyxDQUFDO1lBRUQsTUFBTSxDQUFDLFNBQVMsQ0FBQyxLQUFrQjtnQkFDakMsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLElBQUksS0FBSyxLQUFLLElBQUksSUFBSSxPQUFPLEtBQUssQ0FBQyxRQUFRLEtBQUssUUFBUSxFQUFFO29CQUNyRixPQUFPLElBQUksbUJBQVEsQ0FBQyxhQUFhLEVBQUUsK0JBQStCLENBQUMsQ0FBQztpQkFDckU7Z0JBQ0QsTUFBTSxRQUFRLEdBQVcsS0FBSyxDQUFDLFFBQVEsQ0FBQztnQkFDeEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsS0FBSyxRQUFRLEVBQUU7b0JBQy9CLE9BQU8sSUFBSSxtQkFBUSxDQUFDLGFBQWEsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO2lCQUN6RDtnQkFDRCxNQUFNLEdBQUcsR0FBVyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3RGLE1BQU0sR0FBRyxHQUFXLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUUvQyxJQUFJLFFBQVEsR0FBRyxHQUFHLElBQUksUUFBUSxHQUFHLEdBQUcsRUFBRTtvQkFDcEMsT0FBTyxJQUFJLG1CQUFRLENBQUMsWUFBWSxFQUFFLEVBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDO2lCQUN0RDtnQkFFRCxPQUFPLFNBQVMsQ0FBQztZQUNuQixDQUFDO1lBRUQsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFrQjtnQkFDNUIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxLQUFLLFNBQVMsQ0FBQztZQUM3QyxDQUFDO1lBRUQsTUFBTSxDQUFDLElBQUksQ0FBSSxNQUFpQixFQUFFLEdBQU07Z0JBQ3RDLE9BQU8sTUFBTSxDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUUsMEJBQVcsQ0FBQztvQkFDekMsV0FBVyxFQUFFLENBQUMsS0FBYSxFQUFlLEVBQUU7d0JBQzFDLE1BQU0sTUFBTSxHQUFnQixVQUFVLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO3dCQUMzRCxNQUFNLEtBQUssR0FBc0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQzt3QkFDeEQsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFOzRCQUN2QixNQUFNLEtBQUssQ0FBQzt5QkFDYjt3QkFDRCxPQUFPLE1BQU0sQ0FBQztvQkFDaEIsQ0FBQztpQkFDRixDQUFDLENBQUMsQ0FBQztZQUNOLENBQUM7WUFFRCxNQUFNLENBQUMsS0FBSyxDQUFJLE1BQWlCLEVBQUUsS0FBa0I7Z0JBQ25ELE9BQU8sTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDN0MsQ0FBQztZQUVELE1BQU0sQ0FBQyxZQUFZLENBQUMsUUFBZ0I7Z0JBQ2xDLE9BQU8sSUFBSSxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDbEMsQ0FBQztZQUVELE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBYTtnQkFDNUIsT0FBTyxJQUFJLFVBQVUsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUN2RCxDQUFDO1lBRUQsT0FBTztnQkFDTCxPQUFPLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNoRCxDQUFDO1NBQ0Y7UUF4RWlCLFNBQU0sR0FBWSxNQUFPO1FBQ3pCLFVBQU8sR0FBVyxPQUFRO1FBQzFCLFdBQVEsR0FBVyxRQUFTO1dBc0U1QztBQUNKLENBQUM7QUE3RUQsNENBNkVDIiwiZmlsZSI6ImZpeGVkLXBvaW50L2ZpeGVkLXBvaW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcbmltcG9ydCB7IElvVHlwZSwgUmVhZGVyLCBXcml0ZXIgfSBmcm9tIFwia3J5by9jb3JlXCI7XG5pbXBvcnQgeyByZWFkVmlzaXRvciB9IGZyb20gXCJrcnlvL3JlYWRlcnMvcmVhZC12aXNpdG9yXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRml4ZWRQb2ludE9wdGlvbnMge1xuICByZWFkb25seSBzaWduZWQ6IGJvb2xlYW47XG4gIHJlYWRvbmx5IGludEJpdHM6IG51bWJlcjtcbiAgcmVhZG9ubHkgZnJhY0JpdHM6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGaXhlZFBvaW50IHtcbiAgcmVhZG9ubHkgZXBzaWxvbnM6IG51bWJlcjtcblxuICB2YWx1ZU9mKCk6IG51bWJlcjtcbn1cblxudHlwZSBfRml4ZWRQb2ludCA9IEZpeGVkUG9pbnQ7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRml4ZWRQb2ludENvbnN0cnVjdG9yIGV4dGVuZHMgSW9UeXBlPEZpeGVkUG9pbnQ+LCBGaXhlZFBvaW50T3B0aW9ucyB7XG4gIGZyb21FcHNpbG9ucyhlcHNpbG9uczogbnVtYmVyKTogRml4ZWRQb2ludDtcblxuICBmcm9tVmFsdWUodmFsdWU6IG51bWJlcik6IEZpeGVkUG9pbnQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVGaXhlZFBvaW50KG9wdGlvbnM6IEZpeGVkUG9pbnRPcHRpb25zKTogRml4ZWRQb2ludENvbnN0cnVjdG9yIHtcbiAgY29uc3Qge3NpZ25lZCwgaW50Qml0cywgZnJhY0JpdHN9ID0gb3B0aW9ucztcblxuICByZXR1cm4gY2xhc3MgRml4ZWRQb2ludCB7XG4gICAgc3RhdGljIHJlYWRvbmx5IHNpZ25lZDogYm9vbGVhbiA9IHNpZ25lZDtcbiAgICBzdGF0aWMgcmVhZG9ubHkgaW50Qml0czogbnVtYmVyID0gaW50Qml0cztcbiAgICBzdGF0aWMgcmVhZG9ubHkgZnJhY0JpdHM6IG51bWJlciA9IGZyYWNCaXRzO1xuXG4gICAgcmVhZG9ubHkgZXBzaWxvbnM6IG51bWJlcjtcblxuICAgIHByaXZhdGUgY29uc3RydWN0b3IoZXBzaWxvbnM6IG51bWJlcikge1xuICAgICAgdGhpcy5lcHNpbG9ucyA9IGVwc2lsb25zO1xuICAgIH1cblxuICAgIHN0YXRpYyB0b0pTT04oKSB7XG4gICAgICB0aHJvdyBuZXcgSW5jaWRlbnQoXCJOb3RJbXBsZW1lbnRlZFwiLCBcIkZpeGVkUG9pbnRUeXBlI3RvSlNPTlwiKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgY2xvbmUodmFsdWU6IF9GaXhlZFBvaW50KTogX0ZpeGVkUG9pbnQge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cblxuICAgIHN0YXRpYyBlcXVhbHMobGVmdDogX0ZpeGVkUG9pbnQsIHJpZ2h0OiBfRml4ZWRQb2ludCk6IGJvb2xlYW4ge1xuICAgICAgcmV0dXJuIGxlZnQuZXBzaWxvbnMgPT09IHJpZ2h0LmVwc2lsb25zO1xuICAgIH1cblxuICAgIHN0YXRpYyB0ZXN0RXJyb3IodmFsdWU6IF9GaXhlZFBvaW50KTogRXJyb3IgfCB1bmRlZmluZWQge1xuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJvYmplY3RcIiB8fCB2YWx1ZSA9PT0gbnVsbCB8fCB0eXBlb2YgdmFsdWUuZXBzaWxvbnMgIT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBJbmNpZGVudChcIkludmFsaWRUeXBlXCIsIFwiRXhwZWN0ZWQgYHtlcHNpbG9uczogbnVtYmVyfWBcIik7XG4gICAgICB9XG4gICAgICBjb25zdCBlcHNpbG9uczogbnVtYmVyID0gdmFsdWUuZXBzaWxvbnM7XG4gICAgICBpZiAoKGVwc2lsb25zIHwgMCkgIT09IGVwc2lsb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgSW5jaWRlbnQoXCJJbnZhbGlkVHlwZVwiLCBcIkV4cGVjdGVkIGBTaW50MzJgXCIpO1xuICAgICAgfVxuICAgICAgY29uc3QgbWF4OiBudW1iZXIgPSBNYXRoLnBvdygyLCB0aGlzLmludEJpdHMgKyB0aGlzLmZyYWNCaXRzIC0gKHRoaXMuc2lnbmVkID8gMSA6IDApKTtcbiAgICAgIGNvbnN0IG1pbjogbnVtYmVyID0gdGhpcy5zaWduZWQgPyAtbWF4IC0gMSA6IDA7XG5cbiAgICAgIGlmIChlcHNpbG9ucyA8IG1pbiB8fCBlcHNpbG9ucyA+IG1heCkge1xuICAgICAgICByZXR1cm4gbmV3IEluY2lkZW50KFwiUmFuZ2VFcnJvclwiLCB7bWluLCBtYXgsIHZhbHVlfSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgc3RhdGljIHRlc3QodmFsdWU6IF9GaXhlZFBvaW50KTogYm9vbGVhbiB7XG4gICAgICByZXR1cm4gdGhpcy50ZXN0RXJyb3IodmFsdWUpID09PSB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgc3RhdGljIHJlYWQ8Uj4ocmVhZGVyOiBSZWFkZXI8Uj4sIHJhdzogUik6IF9GaXhlZFBvaW50IHtcbiAgICAgIHJldHVybiByZWFkZXIucmVhZEZsb2F0NjQocmF3LCByZWFkVmlzaXRvcih7XG4gICAgICAgIGZyb21GbG9hdDY0OiAoaW5wdXQ6IG51bWJlcik6IF9GaXhlZFBvaW50ID0+IHtcbiAgICAgICAgICBjb25zdCByZXN1bHQ6IF9GaXhlZFBvaW50ID0gRml4ZWRQb2ludC5mcm9tRXBzaWxvbnMoaW5wdXQpO1xuICAgICAgICAgIGNvbnN0IGVycm9yOiBFcnJvciB8IHVuZGVmaW5lZCA9IHRoaXMudGVzdEVycm9yKHJlc3VsdCk7XG4gICAgICAgICAgaWYgKGVycm9yICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9LFxuICAgICAgfSkpO1xuICAgIH1cblxuICAgIHN0YXRpYyB3cml0ZTxXPih3cml0ZXI6IFdyaXRlcjxXPiwgdmFsdWU6IF9GaXhlZFBvaW50KTogVyB7XG4gICAgICByZXR1cm4gd3JpdGVyLndyaXRlRmxvYXQ2NCh2YWx1ZS5lcHNpbG9ucyk7XG4gICAgfVxuXG4gICAgc3RhdGljIGZyb21FcHNpbG9ucyhlcHNpbG9uczogbnVtYmVyKTogX0ZpeGVkUG9pbnQge1xuICAgICAgcmV0dXJuIG5ldyBGaXhlZFBvaW50KGVwc2lsb25zKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZnJvbVZhbHVlKHZhbHVlOiBudW1iZXIpOiBfRml4ZWRQb2ludCB7XG4gICAgICByZXR1cm4gbmV3IEZpeGVkUG9pbnQodmFsdWUgKiBNYXRoLnBvdygyLCBmcmFjQml0cykpO1xuICAgIH1cblxuICAgIHZhbHVlT2YoKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiB0aGlzLmVwc2lsb25zICogTWF0aC5wb3coMiwgLWZyYWNCaXRzKTtcbiAgICB9XG4gIH07XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst color_space_1 = require(\"./color-space\");\nconst color_stop_1 = require(\"./color-stop\");\nconst gradient_spread_1 = require(\"./gradient-spread\");\nexports.$Gradient = new document_1.DocumentType({\n    properties: {\n        spread: { type: gradient_spread_1.$GradientSpread },\n        colorSpace: { type: color_space_1.$ColorSpace },\n        colors: { type: new array_1.ArrayType({ itemType: color_stop_1.$ColorStop, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZ3JhZGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSwrQ0FBd0Q7QUFDeEQsNkNBQXFEO0FBQ3JELHVEQUFvRTtBQVF2RCxRQUFBLFNBQVMsR0FBNkIsSUFBSSx1QkFBWSxDQUFXO0lBQzVFLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxpQ0FBZSxFQUFDO1FBQy9CLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFDO1FBQy9CLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsdUJBQVUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUMzRTtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImdyYWRpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgJENvbG9yU3BhY2UsIENvbG9yU3BhY2UgfSBmcm9tIFwiLi9jb2xvci1zcGFjZVwiO1xuaW1wb3J0IHsgJENvbG9yU3RvcCwgQ29sb3JTdG9wIH0gZnJvbSBcIi4vY29sb3Itc3RvcFwiO1xuaW1wb3J0IHsgJEdyYWRpZW50U3ByZWFkLCBHcmFkaWVudFNwcmVhZCB9IGZyb20gXCIuL2dyYWRpZW50LXNwcmVhZFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdyYWRpZW50IHtcbiAgc3ByZWFkOiBHcmFkaWVudFNwcmVhZDtcbiAgY29sb3JTcGFjZTogQ29sb3JTcGFjZTtcbiAgY29sb3JzOiBDb2xvclN0b3BbXTtcbn1cblxuZXhwb3J0IGNvbnN0ICRHcmFkaWVudDogRG9jdW1lbnRJb1R5cGU8R3JhZGllbnQ+ID0gbmV3IERvY3VtZW50VHlwZTxHcmFkaWVudD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgc3ByZWFkOiB7dHlwZTogJEdyYWRpZW50U3ByZWFkfSxcbiAgICBjb2xvclNwYWNlOiB7dHlwZTogJENvbG9yU3BhY2V9LFxuICAgIGNvbG9yczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkQ29sb3JTdG9wLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint8_1 = require(\"kryo/builtins/uint8\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst straight_s_rgba8_1 = require(\"./straight-s-rgba8\");\nexports.$ColorStop = new document_1.DocumentType({\n    properties: {\n        ratio: { type: uint8_1.$Uint8 },\n        color: { type: straight_s_rgba8_1.$StraightSRgba8 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29sb3Itc3RvcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtDQUE2QztBQUM3QyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBRW5FLHlEQUFxRTtBQU94RCxRQUFBLFVBQVUsR0FBOEIsSUFBSSx1QkFBWSxDQUFZO0lBQy9FLFVBQVUsRUFBRTtRQUNWLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxjQUFNLEVBQUM7UUFDckIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtDQUFlLEVBQUM7S0FDL0I7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJjb2xvci1zdG9wLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQ4IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDhcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgVWludDggfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRTdHJhaWdodFNSZ2JhOCwgU3RyYWlnaHRTUmdiYTggfSBmcm9tIFwiLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29sb3JTdG9wIHtcbiAgcmF0aW86IFVpbnQ4O1xuICBjb2xvcjogU3RyYWlnaHRTUmdiYTg7XG59XG5cbmV4cG9ydCBjb25zdCAkQ29sb3JTdG9wOiBEb2N1bWVudElvVHlwZTxDb2xvclN0b3A+ID0gbmV3IERvY3VtZW50VHlwZTxDb2xvclN0b3A+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHJhdGlvOiB7dHlwZTogJFVpbnQ4fSxcbiAgICBjb2xvcjoge3R5cGU6ICRTdHJhaWdodFNSZ2JhOH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lazy_properties_1 = require(\"../_helpers/lazy-properties\");\nconst invalid_float64_1 = require(\"../errors/invalid-float64\");\nconst invalid_type_1 = require(\"../errors/invalid-type\");\nconst lazy_options_1 = require(\"../errors/lazy-options\");\nconst read_visitor_1 = require(\"../readers/read-visitor\");\nexports.name = \"float64\";\nclass Float64Type {\n    constructor(options) {\n        this.name = exports.name;\n        this._options = options !== undefined ? options : {};\n        if (typeof options !== \"function\") {\n            this._applyOptions();\n        }\n        else {\n            lazy_properties_1.lazyProperties(this, this._applyOptions, [\"allowNaN\", \"allowInfinity\"]);\n        }\n    }\n    static fromJSON(options) {\n        return new Float64Type(options);\n    }\n    toJSON() {\n        return {\n            name: exports.name,\n            allowNaN: this.allowNaN,\n            allowInfinity: this.allowInfinity,\n        };\n    }\n    read(reader, raw) {\n        return reader.readFloat64(raw, read_visitor_1.readVisitor({\n            fromFloat64: (input) => {\n                const error = reader.trustInput ? undefined : this.testError(input);\n                if (error !== undefined) {\n                    throw error;\n                }\n                return input;\n            },\n        }));\n    }\n    // TODO: Dynamically add with prototype?\n    write(writer, value) {\n        return writer.writeFloat64(value);\n    }\n    testError(val) {\n        if (typeof val !== \"number\") {\n            return invalid_type_1.createInvalidTypeError(\"number\", val);\n        }\n        if (isNaN(val) && !this.allowNaN) {\n            return invalid_float64_1.createInvalidFloat64Error(val);\n        }\n        else if (Math.abs(val) === Infinity && !this.allowInfinity) {\n            return invalid_float64_1.createInvalidFloat64Error(val);\n        }\n        return undefined;\n    }\n    test(val) {\n        return typeof val === \"number\"\n            && (this.allowNaN || !isNaN(val))\n            && (this.allowInfinity || Math.abs(val) !== Infinity);\n    }\n    /**\n     * Tests the equivalence of two valid float64 values.\n     *\n     * Two values are equivalent if they are both `NaN`, both `-0`, both `+0` or non-zero and\n     * numerically equal.\n     */\n    equals(left, right) {\n        return Object.is(left, right);\n    }\n    /**\n     * Compares two valid float64 values.\n     *\n     * The values are ordered as follow:\n     * - `-Infinity`\n     * - Negative non-zero finite values\n     * - `-0`\n     * - `+0`\n     * - Positive non-zero finite values\n     * - `+Infinity`\n     * - `NaN`\n     *\n     * @param left Left operand.\n     * @param right Right operand.\n     * @return Boolean indicating if `left <= right`\n     */\n    lte(left, right) {\n        if (isNaN(right)) {\n            return true;\n        }\n        else if (isNaN(left)) {\n            return false;\n        }\n        if (left === 0 && right === 0) {\n            return Object.is(left, -0) || Object.is(right, +0);\n        }\n        return left <= right;\n    }\n    clone(value) {\n        return value;\n    }\n    diff(oldVal, newVal) {\n        // We can't use an arithmetic difference due to possible precision loss\n        return this.equals(oldVal, newVal) ? undefined : [oldVal, newVal];\n    }\n    patch(oldVal, diff) {\n        return diff === undefined ? oldVal : diff[1];\n    }\n    reverseDiff(diff) {\n        return diff === undefined ? undefined : [diff[1], diff[0]];\n    }\n    squash(diff1, diff2) {\n        if (diff1 === undefined) {\n            return diff2 === undefined ? undefined : [diff2[0], diff2[1]];\n        }\n        else if (diff2 === undefined) {\n            return [diff1[0], diff1[1]];\n        }\n        return this.equals(diff1[0], diff2[1]) ? undefined : [diff1[0], diff2[1]];\n    }\n    _applyOptions() {\n        if (this._options === undefined) {\n            throw lazy_options_1.createLazyOptionsError(this);\n        }\n        const options = typeof this._options === \"function\" ? this._options() : this._options;\n        const allowNaN = options.allowNaN !== undefined ? options.allowNaN : false;\n        const allowInfinity = options.allowInfinity !== undefined ? options.allowInfinity : false;\n        Object.assign(this, { allowNaN, allowInfinity });\n    }\n}\nexports.Float64Type = Float64Type;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar BlendMode;\n(function (BlendMode) {\n    BlendMode[BlendMode[\"Normal\"] = 0] = \"Normal\";\n    BlendMode[BlendMode[\"Layer\"] = 1] = \"Layer\";\n    BlendMode[BlendMode[\"Multiply\"] = 2] = \"Multiply\";\n    BlendMode[BlendMode[\"Screen\"] = 3] = \"Screen\";\n    BlendMode[BlendMode[\"Lighten\"] = 4] = \"Lighten\";\n    BlendMode[BlendMode[\"Darken\"] = 5] = \"Darken\";\n    BlendMode[BlendMode[\"Difference\"] = 6] = \"Difference\";\n    BlendMode[BlendMode[\"Add\"] = 7] = \"Add\";\n    BlendMode[BlendMode[\"Subtract\"] = 8] = \"Subtract\";\n    BlendMode[BlendMode[\"Invert\"] = 9] = \"Invert\";\n    BlendMode[BlendMode[\"Alpha\"] = 10] = \"Alpha\";\n    BlendMode[BlendMode[\"Erase\"] = 11] = \"Erase\";\n    BlendMode[BlendMode[\"Overlay\"] = 12] = \"Overlay\";\n    BlendMode[BlendMode[\"Hardlight\"] = 13] = \"Hardlight\";\n})(BlendMode = exports.BlendMode || (exports.BlendMode = {}));\nexports.$BlendMode = new ts_enum_1.TsEnumType({\n    enum: BlendMode,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYmxlbmQtbW9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxTQWVYO0FBZkQsV0FBWSxTQUFTO0lBQ25CLDZDQUFNLENBQUE7SUFDTiwyQ0FBSyxDQUFBO0lBQ0wsaURBQVEsQ0FBQTtJQUNSLDZDQUFNLENBQUE7SUFDTiwrQ0FBTyxDQUFBO0lBQ1AsNkNBQU0sQ0FBQTtJQUNOLHFEQUFVLENBQUE7SUFDVix1Q0FBRyxDQUFBO0lBQ0gsaURBQVEsQ0FBQTtJQUNSLDZDQUFNLENBQUE7SUFDTiw0Q0FBSyxDQUFBO0lBQ0wsNENBQUssQ0FBQTtJQUNMLGdEQUFPLENBQUE7SUFDUCxvREFBUyxDQUFBO0FBQ1gsQ0FBQyxFQWZXLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBZXBCO0FBRVksUUFBQSxVQUFVLEdBQTBCLElBQUksb0JBQVUsQ0FBWTtJQUN6RSxJQUFJLEVBQUUsU0FBUztJQUNmLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImJsZW5kLW1vZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBUc0VudW1UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdHMtZW51bVwiO1xuXG5leHBvcnQgZW51bSBCbGVuZE1vZGUge1xuICBOb3JtYWwsXG4gIExheWVyLFxuICBNdWx0aXBseSxcbiAgU2NyZWVuLFxuICBMaWdodGVuLFxuICBEYXJrZW4sXG4gIERpZmZlcmVuY2UsXG4gIEFkZCxcbiAgU3VidHJhY3QsXG4gIEludmVydCxcbiAgQWxwaGEsXG4gIEVyYXNlLFxuICBPdmVybGF5LFxuICBIYXJkbGlnaHQsXG59XG5cbmV4cG9ydCBjb25zdCAkQmxlbmRNb2RlOiBUc0VudW1UeXBlPEJsZW5kTW9kZT4gPSBuZXcgVHNFbnVtVHlwZTxCbGVuZE1vZGU+KHtcbiAgZW51bTogQmxlbmRNb2RlLFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\n\nvar inspectCustom = require('./util.inspect').custom;\nvar inspectSymbol = (inspectCustom && isSymbol(inspectCustom)) ? inspectCustom : null;\n\nmodule.exports = function inspect_ (obj, opts, depth, seen) {\n    if (!opts) opts = {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n      if (obj === 0) {\n        return Infinity / obj > 0 ? '0' : '-0';\n      }\n      return String(obj);\n    }\n    if (typeof obj === 'bigint') {\n      return String(obj) + 'n';\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') depth = 0;\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return '[Object]';\n    }\n\n    if (typeof seen === 'undefined') seen = [];\n    else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect (value, from) {\n        if (from) {\n            seen = seen.slice();\n            seen.push(from);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function') {\n        var name = nameOf(obj);\n        return '[Function' + (name ? ': ' + name : '') + ']';\n    }\n    if (isSymbol(obj)) {\n        var symString = Symbol.prototype.toString.call(obj);\n        return typeof obj === 'object' ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + String(obj.nodeName).toLowerCase();\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) s += '...';\n        s += '</' + String(obj.nodeName).toLowerCase() + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) return '[]';\n        return '[ ' + arrObjKeys(obj, inspect).join(', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (parts.length === 0) return '[' + String(obj) + ']';\n        return '{ [' + String(obj) + '] ' + parts.join(', ') + ' }';\n    }\n    if (typeof obj === 'object') {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function') {\n            return obj[inspectSymbol]();\n        } else if (typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var parts = [];\n        mapForEach.call(obj, function (value, key) {\n            parts.push(inspect(key, obj) + ' => ' + inspect(value, obj));\n        });\n        return collectionOf('Map', mapSize.call(obj), parts);\n    }\n    if (isSet(obj)) {\n        var parts = [];\n        setForEach.call(obj, function (value ) {\n            parts.push(inspect(value, obj));\n        });\n        return collectionOf('Set', setSize.call(obj), parts);\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var xs = arrObjKeys(obj, inspect);\n        if (xs.length === 0) return '{}';\n        return '{ ' + xs.join(', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes (s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote (s) {\n    return String(s).replace(/\"/g, '&quot;');\n}\n\nfunction isArray (obj) { return toStr(obj) === '[object Array]'; }\nfunction isDate (obj) { return toStr(obj) === '[object Date]'; }\nfunction isRegExp (obj) { return toStr(obj) === '[object RegExp]'; }\nfunction isError (obj) { return toStr(obj) === '[object Error]'; }\nfunction isSymbol (obj) { return toStr(obj) === '[object Symbol]'; }\nfunction isString (obj) { return toStr(obj) === '[object String]'; }\nfunction isNumber (obj) { return toStr(obj) === '[object Number]'; }\nfunction isBigInt (obj) { return toStr(obj) === '[object BigInt]'; }\nfunction isBoolean (obj) { return toStr(obj) === '[object Boolean]'; }\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has (obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr (obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf (f) {\n    if (f.name) return f.name;\n    var m = String(f).match(/^function\\s*([\\w$]+)/);\n    if (m) return m[1];\n}\n\nfunction indexOf (xs, x) {\n    if (xs.indexOf) return xs.indexOf(x);\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) return i;\n    }\n    return -1;\n}\n\nfunction isMap (x) {\n    if (!mapSize) {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet (x) {\n    if (!setSize) {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement (x) {\n    if (!x || typeof x !== 'object') return false;\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string'\n        && typeof x.getAttribute === 'function'\n    ;\n}\n\nfunction inspectString (str, opts) {\n    var s = str.replace(/(['\\\\])/g, '\\\\$1').replace(/[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte (c) {\n    var n = c.charCodeAt(0);\n    var x = { 8: 'b', 9: 't', 10: 'n', 12: 'f', 13: 'r' }[n];\n    if (x) return '\\\\' + x;\n    return '\\\\x' + (n < 0x10 ? '0' : '') + n.toString(16);\n}\n\nfunction markBoxed (str) {\n    return 'Object(' + str + ')';\n}\n\nfunction collectionOf (type, size, entries) {\n    return type + ' (' + size + ') {' + entries.join(', ') + '}';\n}\n\nfunction arrObjKeys (obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    for (var key in obj) {\n        if (!has(obj, key)) continue;\n        if (isArr && String(Number(key)) === key && key < obj.length) continue;\n        if (/[^\\w$]/.test(key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    return xs;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bitmap_1 = require(\"./bitmap\");\nexports.$Bitmap = bitmap_1.$Bitmap;\nvar focal_gradient_1 = require(\"./focal-gradient\");\nexports.$FocalGradient = focal_gradient_1.$FocalGradient;\nvar linear_gradient_1 = require(\"./linear-gradient\");\nexports.$LinearGradient = linear_gradient_1.$LinearGradient;\nvar morph_bitmap_1 = require(\"./morph-bitmap\");\nexports.$MorphBitmap = morph_bitmap_1.$MorphBitmap;\nvar morph_focal_gradient_1 = require(\"./morph-focal-gradient\");\nexports.$MorphFocalGradient = morph_focal_gradient_1.$MorphFocalGradient;\nvar morph_linear_gradient_1 = require(\"./morph-linear-gradient\");\nexports.$MorphLinearGradient = morph_linear_gradient_1.$MorphLinearGradient;\nvar morph_radial_gradient_1 = require(\"./morph-radial-gradient\");\nexports.$MorphRadialGradient = morph_radial_gradient_1.$MorphRadialGradient;\nvar morph_solid_1 = require(\"./morph-solid\");\nexports.$MorphSolid = morph_solid_1.$MorphSolid;\nvar radial_gradient_1 = require(\"./radial-gradient\");\nexports.$RadialGradient = radial_gradient_1.$RadialGradient;\nvar solid_1 = require(\"./solid\");\nexports.$Solid = solid_1.$Solid;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtQ0FBMkM7QUFBbEMsMkJBQUEsT0FBTyxDQUFBO0FBQ2hCLG1EQUFpRTtBQUF4RCwwQ0FBQSxjQUFjLENBQUE7QUFDdkIscURBQW9FO0FBQTNELDRDQUFBLGVBQWUsQ0FBQTtBQUN4QiwrQ0FBMkQ7QUFBbEQsc0NBQUEsWUFBWSxDQUFBO0FBQ3JCLCtEQUFpRjtBQUF4RSxxREFBQSxtQkFBbUIsQ0FBQTtBQUM1QixpRUFBb0Y7QUFBM0UsdURBQUEsb0JBQW9CLENBQUE7QUFDN0IsaUVBQW9GO0FBQTNFLHVEQUFBLG9CQUFvQixDQUFBO0FBQzdCLDZDQUF3RDtBQUEvQyxvQ0FBQSxXQUFXLENBQUE7QUFDcEIscURBQW9FO0FBQTNELDRDQUFBLGVBQWUsQ0FBQTtBQUN4QixpQ0FBd0M7QUFBL0IseUJBQUEsTUFBTSxDQUFBIiwiZmlsZSI6ImZpbGwtc3R5bGVzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgJEJpdG1hcCwgQml0bWFwIH0gZnJvbSBcIi4vYml0bWFwXCI7XG5leHBvcnQgeyAkRm9jYWxHcmFkaWVudCwgRm9jYWxHcmFkaWVudCB9IGZyb20gXCIuL2ZvY2FsLWdyYWRpZW50XCI7XG5leHBvcnQgeyAkTGluZWFyR3JhZGllbnQsIExpbmVhckdyYWRpZW50IH0gZnJvbSBcIi4vbGluZWFyLWdyYWRpZW50XCI7XG5leHBvcnQgeyAkTW9ycGhCaXRtYXAsIE1vcnBoQml0bWFwIH0gZnJvbSBcIi4vbW9ycGgtYml0bWFwXCI7XG5leHBvcnQgeyAkTW9ycGhGb2NhbEdyYWRpZW50LCBNb3JwaEZvY2FsR3JhZGllbnQgfSBmcm9tIFwiLi9tb3JwaC1mb2NhbC1ncmFkaWVudFwiO1xuZXhwb3J0IHsgJE1vcnBoTGluZWFyR3JhZGllbnQsIE1vcnBoTGluZWFyR3JhZGllbnQgfSBmcm9tIFwiLi9tb3JwaC1saW5lYXItZ3JhZGllbnRcIjtcbmV4cG9ydCB7ICRNb3JwaFJhZGlhbEdyYWRpZW50LCBNb3JwaFJhZGlhbEdyYWRpZW50IH0gZnJvbSBcIi4vbW9ycGgtcmFkaWFsLWdyYWRpZW50XCI7XG5leHBvcnQgeyAkTW9ycGhTb2xpZCwgTW9ycGhTb2xpZCB9IGZyb20gXCIuL21vcnBoLXNvbGlkXCI7XG5leHBvcnQgeyAkUmFkaWFsR3JhZGllbnQsIFJhZGlhbEdyYWRpZW50IH0gZnJvbSBcIi4vcmFkaWFsLWdyYWRpZW50XCI7XG5leHBvcnQgeyAkU29saWQsIFNvbGlkIH0gZnJvbSBcIi4vc29saWRcIjtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"NotImplemented\";\nfunction createNotImplementedError(message) {\n    return incident_1.Incident(exports.name, message);\n}\nexports.createNotImplementedError = createNotImplementedError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL25vdC1pbXBsZW1lbnRlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFvQztBQUd2QixRQUFBLElBQUksR0FBUyxnQkFBZ0IsQ0FBQztBQVEzQyxTQUFnQix5QkFBeUIsQ0FBQyxPQUFlO0lBQ3ZELE9BQU8sbUJBQVEsQ0FBQyxZQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDakMsQ0FBQztBQUZELDhEQUVDIiwiZmlsZSI6ImVycm9ycy9ub3QtaW1wbGVtZW50ZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmNpZGVudCB9IGZyb20gXCJpbmNpZGVudFwiO1xuXG5leHBvcnQgdHlwZSBOYW1lID0gXCJOb3RJbXBsZW1lbnRlZFwiO1xuZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcIk5vdEltcGxlbWVudGVkXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG59XG5cbmV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuZXhwb3J0IHR5cGUgTm90SW1wbGVtZW50ZWRFcnJvciA9IEluY2lkZW50PERhdGEsIE5hbWUsIENhdXNlPjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU5vdEltcGxlbWVudGVkRXJyb3IobWVzc2FnZTogc3RyaW5nKTogTm90SW1wbGVtZW50ZWRFcnJvciB7XG4gIHJldHVybiBJbmNpZGVudChuYW1lLCBtZXNzYWdlKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\n/**\n * @module kryo/builtins/sint32\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst integer_1 = require(\"../types/integer\");\nexports.$Sint32 = new integer_1.IntegerType({ min: -2147483648, max: 2147483647 });\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnVpbHRpbnMvc2ludDMyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7R0FFRzs7QUFFSCw4Q0FBK0M7QUFFbEMsUUFBQSxPQUFPLEdBQWdCLElBQUkscUJBQVcsQ0FBQyxFQUFDLEdBQUcsRUFBRSxDQUFDLFVBQVUsRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJidWlsdGlucy9zaW50MzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUga3J5by9idWlsdGlucy9zaW50MzJcbiAqL1xuXG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCIuLi90eXBlcy9pbnRlZ2VyXCI7XG5cbmV4cG9ydCBjb25zdCAkU2ludDMyOiBJbnRlZ2VyVHlwZSA9IG5ldyBJbnRlZ2VyVHlwZSh7bWluOiAtMjE0NzQ4MzY0OCwgbWF4OiAyMTQ3NDgzNjQ3fSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst gradient_1 = require(\"./gradient\");\nconst morph_color_stop_1 = require(\"./morph-color-stop\");\nexports.$MorphGradient = new document_1.DocumentType({\n    properties: {\n        spread: gradient_1.$Gradient.properties.spread,\n        colorSpace: gradient_1.$Gradient.properties.colorSpace,\n        colors: { type: new array_1.ArrayType({ itemType: morph_color_stop_1.$MorphColorStop, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtZ3JhZGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSx5Q0FBaUQ7QUFDakQseURBQXFFO0FBTXhELFFBQUEsY0FBYyxHQUFrQyxJQUFJLHVCQUFZLENBQWdCO0lBQzNGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxvQkFBUyxDQUFDLFVBQVUsQ0FBQyxNQUFNO1FBQ25DLFVBQVUsRUFBRSxvQkFBUyxDQUFDLFVBQVUsQ0FBQyxVQUFVO1FBQzNDLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsa0NBQWUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUNoRjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6Im1vcnBoLWdyYWRpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgJEdyYWRpZW50LCBHcmFkaWVudCB9IGZyb20gXCIuL2dyYWRpZW50XCI7XG5pbXBvcnQgeyAkTW9ycGhDb2xvclN0b3AsIE1vcnBoQ29sb3JTdG9wIH0gZnJvbSBcIi4vbW9ycGgtY29sb3Itc3RvcFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1vcnBoR3JhZGllbnQgZXh0ZW5kcyBHcmFkaWVudCB7XG4gIGNvbG9yczogTW9ycGhDb2xvclN0b3BbXTtcbn1cblxuZXhwb3J0IGNvbnN0ICRNb3JwaEdyYWRpZW50OiBEb2N1bWVudElvVHlwZTxNb3JwaEdyYWRpZW50PiA9IG5ldyBEb2N1bWVudFR5cGU8TW9ycGhHcmFkaWVudD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgc3ByZWFkOiAkR3JhZGllbnQucHJvcGVydGllcy5zcHJlYWQsXG4gICAgY29sb3JTcGFjZTogJEdyYWRpZW50LnByb3BlcnRpZXMuY29sb3JTcGFjZSxcbiAgICBjb2xvcnM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJE1vcnBoQ29sb3JTdG9wLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar curved_edge_1 = require(\"./curved-edge\");\nexports.$CurvedEdge = curved_edge_1.$CurvedEdge;\nvar morph_curved_edge_1 = require(\"./morph-curved-edge\");\nexports.$MorphCurvedEdge = morph_curved_edge_1.$MorphCurvedEdge;\nvar morph_straight_edge_1 = require(\"./morph-straight-edge\");\nexports.$MorphStraightEdge = morph_straight_edge_1.$MorphStraightEdge;\nvar morph_style_change_1 = require(\"./morph-style-change\");\nexports.$MorphStyleChange = morph_style_change_1.$MorphStyleChange;\nvar straight_edge_1 = require(\"./straight-edge\");\nexports.$StraightEdge = straight_edge_1.$StraightEdge;\nvar style_change_1 = require(\"./style-change\");\nexports.$StyleChange = style_change_1.$StyleChange;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3Jkcy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZDQUF3RDtBQUEvQyxvQ0FBQSxXQUFXLENBQUE7QUFDcEIseURBQXdFO0FBQS9ELCtDQUFBLGdCQUFnQixDQUFBO0FBQ3pCLDZEQUE4RTtBQUFyRSxtREFBQSxrQkFBa0IsQ0FBQTtBQUMzQiwyREFBMkU7QUFBbEUsaURBQUEsaUJBQWlCLENBQUE7QUFDMUIsaURBQThEO0FBQXJELHdDQUFBLGFBQWEsQ0FBQTtBQUN0QiwrQ0FBMkQ7QUFBbEQsc0NBQUEsWUFBWSxDQUFBIiwiZmlsZSI6InNoYXBlLXJlY29yZHMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyAkQ3VydmVkRWRnZSwgQ3VydmVkRWRnZSB9IGZyb20gXCIuL2N1cnZlZC1lZGdlXCI7XG5leHBvcnQgeyAkTW9ycGhDdXJ2ZWRFZGdlLCBNb3JwaEN1cnZlZEVkZ2UgfSBmcm9tIFwiLi9tb3JwaC1jdXJ2ZWQtZWRnZVwiO1xuZXhwb3J0IHsgJE1vcnBoU3RyYWlnaHRFZGdlLCBNb3JwaFN0cmFpZ2h0RWRnZSB9IGZyb20gXCIuL21vcnBoLXN0cmFpZ2h0LWVkZ2VcIjtcbmV4cG9ydCB7ICRNb3JwaFN0eWxlQ2hhbmdlLCBNb3JwaFN0eWxlQ2hhbmdlIH0gZnJvbSBcIi4vbW9ycGgtc3R5bGUtY2hhbmdlXCI7XG5leHBvcnQgeyAkU3RyYWlnaHRFZGdlLCBTdHJhaWdodEVkZ2UgfSBmcm9tIFwiLi9zdHJhaWdodC1lZGdlXCI7XG5leHBvcnQgeyAkU3R5bGVDaGFuZ2UsIFN0eWxlQ2hhbmdlIH0gZnJvbSBcIi4vc3R5bGUtY2hhbmdlXCI7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar CapStyle;\n(function (CapStyle) {\n    CapStyle[CapStyle[\"Round\"] = 0] = \"Round\";\n    CapStyle[CapStyle[\"None\"] = 1] = \"None\";\n    CapStyle[CapStyle[\"Square\"] = 2] = \"Square\";\n})(CapStyle = exports.CapStyle || (exports.CapStyle = {}));\nexports.$CapStyle = new ts_enum_1.TsEnumType({\n    enum: CapStyle,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY2FwLXN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGdEQUFnRDtBQUVoRCxJQUFZLFFBSVg7QUFKRCxXQUFZLFFBQVE7SUFDbEIseUNBQUssQ0FBQTtJQUNMLHVDQUFJLENBQUE7SUFDSiwyQ0FBTSxDQUFBO0FBQ1IsQ0FBQyxFQUpXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBSW5CO0FBRVksUUFBQSxTQUFTLEdBQXlCLElBQUksb0JBQVUsQ0FBVztJQUN0RSxJQUFJLEVBQUUsUUFBUTtJQUNkLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImNhcC1zdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIENhcFN0eWxlIHtcbiAgUm91bmQsXG4gIE5vbmUsXG4gIFNxdWFyZSxcbn1cblxuZXhwb3J0IGNvbnN0ICRDYXBTdHlsZTogVHNFbnVtVHlwZTxDYXBTdHlsZT4gPSBuZXcgVHNFbnVtVHlwZTxDYXBTdHlsZT4oe1xuICBlbnVtOiBDYXBTdHlsZSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst lazy_properties_1 = require(\"../_helpers/lazy-properties\");\nconst lazy_options_1 = require(\"../errors/lazy-options\");\nconst test_error_1 = require(\"../test-error\");\nexports.name = \"white-list\";\nclass WhiteListType {\n    constructor(options) {\n        this.name = exports.name;\n        this._options = options;\n        if (typeof options !== \"function\") {\n            this._applyOptions();\n        }\n        else {\n            lazy_properties_1.lazyProperties(this, this._applyOptions, [\"itemType\", \"values\"]);\n        }\n    }\n    read(reader, raw) {\n        if (this.itemType.read === undefined) {\n            throw new incident_1.Incident(\"NotReadable\", { type: this });\n        }\n        const result = this.itemType.read(reader, raw);\n        for (const allowed of this.values) {\n            if (this.itemType.equals(result, allowed)) {\n                return result;\n            }\n        }\n        throw incident_1.Incident(\"UnkownVariant\", \"Unknown variant\");\n    }\n    write(writer, value) {\n        if (this.itemType.write !== undefined) {\n            return this.itemType.write(writer, value);\n        }\n        else {\n            throw new incident_1.Incident(\"NotWritable\", { type: this });\n        }\n    }\n    testError(val) {\n        const error = test_error_1.testError(this.itemType, val);\n        if (error !== undefined) {\n            return error;\n        }\n        for (const allowed of this.values) {\n            if (this.itemType.equals(val, allowed)) {\n                return undefined;\n            }\n        }\n        return incident_1.Incident(\"UnkownVariant\", \"Unknown variant\");\n    }\n    test(value) {\n        if (!this.itemType.test(value)) {\n            return false;\n        }\n        for (const allowed of this.values) {\n            if (this.itemType.equals(value, allowed)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    equals(val1, val2) {\n        return this.itemType.equals(val1, val2);\n    }\n    clone(val) {\n        return this.itemType.clone(val);\n    }\n    diff(oldVal, newVal) {\n        return this.itemType.diff(oldVal, newVal);\n    }\n    patch(oldVal, diff) {\n        return this.itemType.patch(oldVal, diff);\n    }\n    reverseDiff(diff) {\n        return this.itemType.reverseDiff(diff);\n    }\n    squash(diff1, diff2) {\n        return this.itemType.squash(diff1, diff2);\n    }\n    _applyOptions() {\n        if (this._options === undefined) {\n            throw lazy_options_1.createLazyOptionsError(this);\n        }\n        const options = typeof this._options === \"function\" ? this._options() : this._options;\n        const itemType = options.itemType;\n        const values = options.values;\n        Object.assign(this, { itemType, values });\n    }\n}\nexports.WhiteListType = WhiteListType;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar LanguageCode;\n(function (LanguageCode) {\n    LanguageCode[LanguageCode[\"Auto\"] = 0] = \"Auto\";\n    LanguageCode[LanguageCode[\"Latin\"] = 1] = \"Latin\";\n    LanguageCode[LanguageCode[\"Japanese\"] = 2] = \"Japanese\";\n    LanguageCode[LanguageCode[\"Korean\"] = 3] = \"Korean\";\n    LanguageCode[LanguageCode[\"SimplifiedChinese\"] = 4] = \"SimplifiedChinese\";\n    LanguageCode[LanguageCode[\"TraditionalChinese\"] = 5] = \"TraditionalChinese\";\n})(LanguageCode = exports.LanguageCode || (exports.LanguageCode = {}));\nexports.$LanguageCode = new ts_enum_1.TsEnumType({\n    enum: LanguageCode,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbGFuZ3VhZ2UtY29kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxZQU9YO0FBUEQsV0FBWSxZQUFZO0lBQ3RCLCtDQUFJLENBQUE7SUFDSixpREFBSyxDQUFBO0lBQ0wsdURBQVEsQ0FBQTtJQUNSLG1EQUFNLENBQUE7SUFDTix5RUFBaUIsQ0FBQTtJQUNqQiwyRUFBa0IsQ0FBQTtBQUNwQixDQUFDLEVBUFcsWUFBWSxHQUFaLG9CQUFZLEtBQVosb0JBQVksUUFPdkI7QUFFWSxRQUFBLGFBQWEsR0FBNkIsSUFBSSxvQkFBVSxDQUFlO0lBQ2xGLElBQUksRUFBRSxZQUFZO0lBQ2xCLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6Imxhbmd1YWdlLWNvZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBUc0VudW1UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdHMtZW51bVwiO1xuXG5leHBvcnQgZW51bSBMYW5ndWFnZUNvZGUge1xuICBBdXRvLFxuICBMYXRpbixcbiAgSmFwYW5lc2UsXG4gIEtvcmVhbixcbiAgU2ltcGxpZmllZENoaW5lc2UsXG4gIFRyYWRpdGlvbmFsQ2hpbmVzZSxcbn1cblxuZXhwb3J0IGNvbnN0ICRMYW5ndWFnZUNvZGU6IFRzRW51bVR5cGU8TGFuZ3VhZ2VDb2RlPiA9IG5ldyBUc0VudW1UeXBlPExhbmd1YWdlQ29kZT4oe1xuICBlbnVtOiBMYW5ndWFnZUNvZGUsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar AudioCodingFormat;\n(function (AudioCodingFormat) {\n    AudioCodingFormat[AudioCodingFormat[\"UncompressedNativeEndian\"] = 0] = \"UncompressedNativeEndian\";\n    AudioCodingFormat[AudioCodingFormat[\"Adpcm\"] = 1] = \"Adpcm\";\n    AudioCodingFormat[AudioCodingFormat[\"Mp3\"] = 2] = \"Mp3\";\n    AudioCodingFormat[AudioCodingFormat[\"UncompressedLittleEndian\"] = 3] = \"UncompressedLittleEndian\";\n    AudioCodingFormat[AudioCodingFormat[\"Nellymoser16\"] = 4] = \"Nellymoser16\";\n    AudioCodingFormat[AudioCodingFormat[\"Nellymoser8\"] = 5] = \"Nellymoser8\";\n    AudioCodingFormat[AudioCodingFormat[\"Nellymoser\"] = 6] = \"Nellymoser\";\n    AudioCodingFormat[AudioCodingFormat[\"Speex\"] = 7] = \"Speex\";\n})(AudioCodingFormat = exports.AudioCodingFormat || (exports.AudioCodingFormat = {}));\nexports.$AudioCodingFormat = new ts_enum_1.TsEnumType({\n    enum: AudioCodingFormat,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc291bmQvYXVkaW8tY29kaW5nLWZvcm1hdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxpQkFTWDtBQVRELFdBQVksaUJBQWlCO0lBQzNCLGlHQUF3QixDQUFBO0lBQ3hCLDJEQUFLLENBQUE7SUFDTCx1REFBRyxDQUFBO0lBQ0gsaUdBQXdCLENBQUE7SUFDeEIseUVBQVksQ0FBQTtJQUNaLHVFQUFXLENBQUE7SUFDWCxxRUFBVSxDQUFBO0lBQ1YsMkRBQUssQ0FBQTtBQUNQLENBQUMsRUFUVyxpQkFBaUIsR0FBakIseUJBQWlCLEtBQWpCLHlCQUFpQixRQVM1QjtBQUVZLFFBQUEsa0JBQWtCLEdBQWtDLElBQUksb0JBQVUsQ0FBb0I7SUFDakcsSUFBSSxFQUFFLGlCQUFpQjtJQUN2QixVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJzb3VuZC9hdWRpby1jb2RpbmctZm9ybWF0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gQXVkaW9Db2RpbmdGb3JtYXQge1xuICBVbmNvbXByZXNzZWROYXRpdmVFbmRpYW4sXG4gIEFkcGNtLFxuICBNcDMsXG4gIFVuY29tcHJlc3NlZExpdHRsZUVuZGlhbixcbiAgTmVsbHltb3NlcjE2LFxuICBOZWxseW1vc2VyOCxcbiAgTmVsbHltb3NlcixcbiAgU3BlZXgsXG59XG5cbmV4cG9ydCBjb25zdCAkQXVkaW9Db2RpbmdGb3JtYXQ6IFRzRW51bVR5cGU8QXVkaW9Db2RpbmdGb3JtYXQ+ID0gbmV3IFRzRW51bVR5cGU8QXVkaW9Db2RpbmdGb3JtYXQ+KHtcbiAgZW51bTogQXVkaW9Db2RpbmdGb3JtYXQsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar SoundType;\n(function (SoundType) {\n    SoundType[SoundType[\"Mono\"] = 0] = \"Mono\";\n    SoundType[SoundType[\"Stereo\"] = 1] = \"Stereo\";\n})(SoundType = exports.SoundType || (exports.SoundType = {}));\nexports.$SoundType = new ts_enum_1.TsEnumType({\n    enum: SoundType,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc291bmQvc291bmQtdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxTQUdYO0FBSEQsV0FBWSxTQUFTO0lBQ25CLHlDQUFJLENBQUE7SUFDSiw2Q0FBTSxDQUFBO0FBQ1IsQ0FBQyxFQUhXLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBR3BCO0FBRVksUUFBQSxVQUFVLEdBQTBCLElBQUksb0JBQVUsQ0FBWTtJQUN6RSxJQUFJLEVBQUUsU0FBUztJQUNmLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InNvdW5kL3NvdW5kLXR5cGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBUc0VudW1UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdHMtZW51bVwiO1xuXG5leHBvcnQgZW51bSBTb3VuZFR5cGUge1xuICBNb25vLFxuICBTdGVyZW8sXG59XG5cbmV4cG9ydCBjb25zdCAkU291bmRUeXBlOiBUc0VudW1UeXBlPFNvdW5kVHlwZT4gPSBuZXcgVHNFbnVtVHlwZTxTb3VuZFR5cGU+KHtcbiAgZW51bTogU291bmRUeXBlLFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst swf_tree_1 = require(\"swf-tree\");\nconst basic_data_types_1 = require(\"./basic-data-types\");\nconst gradient_1 = require(\"./gradient\");\nvar ShapeVersion;\n(function (ShapeVersion) {\n    ShapeVersion[ShapeVersion[\"Shape1\"] = 1] = \"Shape1\";\n    ShapeVersion[ShapeVersion[\"Shape2\"] = 2] = \"Shape2\";\n    ShapeVersion[ShapeVersion[\"Shape3\"] = 3] = \"Shape3\";\n    ShapeVersion[ShapeVersion[\"Shape4\"] = 4] = \"Shape4\";\n})(ShapeVersion = exports.ShapeVersion || (exports.ShapeVersion = {}));\nfunction parseGlyph(byteStream) {\n    const bitStream = byteStream.asBitStream();\n    const result = parseGlyphBits(bitStream);\n    bitStream.align();\n    return result;\n}\nexports.parseGlyph = parseGlyph;\nfunction parseGlyphBits(bitStream) {\n    const fillBits = bitStream.readUint32Bits(4);\n    const lineBits = bitStream.readUint32Bits(4);\n    // TODO: Check which shape version to use\n    const records = parseShapeRecordStringBits(bitStream, fillBits, lineBits, ShapeVersion.Shape1);\n    return { records };\n}\nexports.parseGlyphBits = parseGlyphBits;\nfunction parseShape(byteStream, shapeVersion) {\n    const bitStream = byteStream.asBitStream();\n    const result = parseShapeBits(bitStream, shapeVersion);\n    bitStream.align();\n    return result;\n}\nexports.parseShape = parseShape;\nfunction parseShapeBits(bitStream, shapeVersion) {\n    const styles = parseShapeStylesBits(bitStream, shapeVersion);\n    const records = parseShapeRecordStringBits(bitStream, styles.fillBits, styles.lineBits, shapeVersion);\n    return {\n        initialStyles: { fill: styles.fill, line: styles.line },\n        records,\n    };\n}\nexports.parseShapeBits = parseShapeBits;\nfunction parseShapeStylesBits(bitStream, shapeVersion) {\n    const byteStream = bitStream.asByteStream();\n    const fill = parseFillStyleList(byteStream, shapeVersion);\n    const line = parseLineStyleList(byteStream, shapeVersion);\n    bitStream = byteStream.asBitStream();\n    const fillBits = bitStream.readUint32Bits(4);\n    const lineBits = bitStream.readUint32Bits(4);\n    return { fill, line, fillBits, lineBits };\n}\nexports.parseShapeStylesBits = parseShapeStylesBits;\nfunction parseShapeRecordStringBits(bitStream, fillBits, lineBits, shapeVersion) {\n    const result = [];\n    while (true) {\n        const bytePos = bitStream.bytePos;\n        const bitPos = bitStream.bitPos;\n        const head = bitStream.readUint16Bits(6);\n        if (head === 0) {\n            break;\n        }\n        else {\n            bitStream.bytePos = bytePos;\n            bitStream.bitPos = bitPos;\n        }\n        const isEdge = bitStream.readBoolBits();\n        if (isEdge) {\n            const isStraightEdge = bitStream.readBoolBits();\n            if (isStraightEdge) {\n                result.push(parseStraightEdgeBits(bitStream));\n            }\n            else {\n                result.push(parseCurvedEdgeBits(bitStream));\n            }\n        }\n        else {\n            let styles;\n            [styles, [fillBits, lineBits]] = parseStyleChangeBits(bitStream, fillBits, lineBits, shapeVersion);\n            result.push(styles);\n        }\n    }\n    return result;\n}\nexports.parseShapeRecordStringBits = parseShapeRecordStringBits;\nfunction parseCurvedEdgeBits(bitStream) {\n    const nBits = bitStream.readUint16Bits(4) + 2;\n    const controlX = bitStream.readSint32Bits(nBits);\n    const controlY = bitStream.readSint32Bits(nBits);\n    const deltaX = bitStream.readSint32Bits(nBits);\n    const deltaY = bitStream.readSint32Bits(nBits);\n    return {\n        type: swf_tree_1.ShapeRecordType.CurvedEdge,\n        controlDelta: { x: controlX, y: controlY },\n        anchorDelta: { x: deltaX, y: deltaY },\n    };\n}\nexports.parseCurvedEdgeBits = parseCurvedEdgeBits;\nfunction parseStraightEdgeBits(bitStream) {\n    const nBits = bitStream.readUint16Bits(4) + 2;\n    const isDiagonal = bitStream.readBoolBits();\n    const isVertical = !isDiagonal && bitStream.readBoolBits();\n    const deltaX = isDiagonal || !isVertical ? bitStream.readSint32Bits(nBits) : 0;\n    const deltaY = isDiagonal || isVertical ? bitStream.readSint32Bits(nBits) : 0;\n    return {\n        type: swf_tree_1.ShapeRecordType.StraightEdge,\n        delta: { x: deltaX, y: deltaY },\n    };\n}\nexports.parseStraightEdgeBits = parseStraightEdgeBits;\nfunction parseStyleChangeBits(bitStream, fillBits, lineBits, shapeVersion) {\n    const hasNewStyles = bitStream.readBoolBits();\n    const changeLineStyle = bitStream.readBoolBits();\n    const changeRightFill = bitStream.readBoolBits();\n    const changeLeftFill = bitStream.readBoolBits();\n    const hasMoveTo = bitStream.readBoolBits();\n    let moveTo = undefined;\n    if (hasMoveTo) {\n        const nBits = bitStream.readUint16Bits(5);\n        const x = bitStream.readSint32Bits(nBits);\n        const y = bitStream.readSint32Bits(nBits);\n        moveTo = { x, y };\n    }\n    const leftFill = changeLeftFill ? bitStream.readUint16Bits(fillBits) : undefined;\n    const rightFill = changeRightFill ? bitStream.readUint16Bits(fillBits) : undefined;\n    const lineStyle = changeLineStyle ? bitStream.readUint16Bits(lineBits) : undefined;\n    let newStyles = undefined;\n    if (hasNewStyles) {\n        // TODO: Shumway forces `hasNewStyle` to `false` if shapeVersion is `Shape1`, should we do it too?\n        // https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/swf/parser/module.ts#L851\n        const styles = parseShapeStylesBits(bitStream, shapeVersion);\n        newStyles = {\n            fill: styles.fill,\n            line: styles.line,\n        };\n        fillBits = styles.fillBits;\n        lineBits = styles.lineBits;\n    }\n    const styleChangeRecord = {\n        type: swf_tree_1.ShapeRecordType.StyleChange,\n        moveTo,\n        leftFill,\n        rightFill,\n        lineStyle,\n        newStyles,\n    };\n    return [styleChangeRecord, [fillBits, lineBits]];\n}\nexports.parseStyleChangeBits = parseStyleChangeBits;\n/**\n * Parse a fill style list length or line style list length.\n *\n * @param byteStream Stream to use to parse this list length. Will mutate its state.\n * @param allowExtended Allow extended size (`> 255`). Here are the recommended values:\n *                      - `true` for `DefineShape2`, `DefineShape3`, `DefineShape4`\n *                      - `false` for `DefineShape`\n * @returns List length\n */\nfunction parseListLength(byteStream, allowExtended) {\n    const len = byteStream.readUint8();\n    if (len === 0xff && allowExtended) {\n        return byteStream.readUint16LE();\n    }\n    else {\n        return len;\n    }\n}\nexports.parseListLength = parseListLength;\nfunction parseFillStyleList(byteStream, shapeVersion) {\n    const result = [];\n    const len = parseListLength(byteStream, shapeVersion >= ShapeVersion.Shape2);\n    for (let i = 0; i < len; i++) {\n        result.push(parseFillStyle(byteStream, shapeVersion >= ShapeVersion.Shape3));\n    }\n    return result;\n}\nexports.parseFillStyleList = parseFillStyleList;\nfunction parseFillStyle(byteStream, withAlpha) {\n    const code = byteStream.readUint8();\n    switch (code) {\n        case 0x00:\n            return parseSolidFill(byteStream, withAlpha);\n        case 0x10:\n            return parseLinearGradientFill(byteStream, withAlpha);\n        case 0x12:\n            return parseRadialGradientFill(byteStream, withAlpha);\n        case 0x13:\n            // TODO: Check if this requires shapeVersion >= Shape4\n            return parseFocalGradientFill(byteStream, withAlpha);\n        case 0x40:\n            return parseBitmapFill(byteStream, true, true);\n        case 0x41:\n            return parseBitmapFill(byteStream, false, true);\n        case 0x42:\n            return parseBitmapFill(byteStream, true, false);\n        case 0x43:\n            return parseBitmapFill(byteStream, false, false);\n        default:\n            throw new Error(`Unexpected fill style code: ${code}`);\n    }\n}\nexports.parseFillStyle = parseFillStyle;\nfunction parseBitmapFill(byteStream, repeating, smoothed) {\n    const bitmapId = byteStream.readUint16LE();\n    const matrix = basic_data_types_1.parseMatrix(byteStream);\n    return {\n        type: swf_tree_1.FillStyleType.Bitmap,\n        bitmapId,\n        matrix,\n        repeating,\n        smoothed,\n    };\n}\nexports.parseBitmapFill = parseBitmapFill;\nfunction parseFocalGradientFill(byteStream, withAlpha) {\n    const matrix = basic_data_types_1.parseMatrix(byteStream);\n    const gradient = gradient_1.parseGradient(byteStream, withAlpha);\n    const focalPoint = swf_tree_1.Sfixed8P8.fromEpsilons(byteStream.readSint16LE());\n    return {\n        type: swf_tree_1.FillStyleType.FocalGradient,\n        matrix,\n        gradient,\n        focalPoint,\n    };\n}\nexports.parseFocalGradientFill = parseFocalGradientFill;\nfunction parseLinearGradientFill(byteStream, withAlpha) {\n    const matrix = basic_data_types_1.parseMatrix(byteStream);\n    const gradient = gradient_1.parseGradient(byteStream, withAlpha);\n    return {\n        type: swf_tree_1.FillStyleType.LinearGradient,\n        matrix,\n        gradient,\n    };\n}\nexports.parseLinearGradientFill = parseLinearGradientFill;\nfunction parseRadialGradientFill(byteStream, withAlpha) {\n    const matrix = basic_data_types_1.parseMatrix(byteStream);\n    const gradient = gradient_1.parseGradient(byteStream, withAlpha);\n    return {\n        type: swf_tree_1.FillStyleType.RadialGradient,\n        matrix,\n        gradient,\n    };\n}\nexports.parseRadialGradientFill = parseRadialGradientFill;\nfunction parseSolidFill(byteStream, withAlpha) {\n    let color;\n    if (withAlpha) {\n        color = basic_data_types_1.parseStraightSRgba8(byteStream);\n    }\n    else {\n        color = Object.assign({}, basic_data_types_1.parseSRgb8(byteStream), { a: 0xff });\n    }\n    return {\n        type: swf_tree_1.FillStyleType.Solid,\n        color,\n    };\n}\nexports.parseSolidFill = parseSolidFill;\nfunction parseLineStyleList(byteStream, shapeVersion) {\n    const result = [];\n    const len = parseListLength(byteStream, shapeVersion >= ShapeVersion.Shape2);\n    for (let i = 0; i < len; i++) {\n        if (shapeVersion >= ShapeVersion.Shape4) {\n            result.push(parseLineStyle2(byteStream));\n        }\n        else {\n            result.push(parseLineStyle(byteStream, shapeVersion >= ShapeVersion.Shape3));\n        }\n    }\n    return result;\n}\nexports.parseLineStyleList = parseLineStyleList;\nfunction parseLineStyle(byteStream, withAlpha) {\n    const width = byteStream.readUint16LE();\n    const color = withAlpha ? basic_data_types_1.parseStraightSRgba8(byteStream) : Object.assign({}, basic_data_types_1.parseSRgb8(byteStream), { a: 255 });\n    return {\n        width,\n        startCap: swf_tree_1.CapStyle.Round,\n        endCap: swf_tree_1.CapStyle.Round,\n        join: { type: swf_tree_1.JoinStyleType.Round },\n        noHScale: false,\n        noVScale: false,\n        noClose: false,\n        pixelHinting: false,\n        fill: {\n            type: swf_tree_1.FillStyleType.Solid,\n            color,\n        },\n    };\n}\nexports.parseLineStyle = parseLineStyle;\nfunction parseLineStyle2(byteStream) {\n    const width = byteStream.readUint16LE();\n    const flags = byteStream.readUint16LE();\n    const pixelHinting = (flags & (1 << 0)) !== 0;\n    const noVScale = (flags & (1 << 1)) !== 0;\n    const noHScale = (flags & (1 << 2)) !== 0;\n    const hasFill = (flags & (1 << 3)) !== 0;\n    const joinStyleId = ((flags >>> 4) & 0b11);\n    const startCapStyleId = ((flags >>> 6) & 0b11);\n    const endCapStyleId = ((flags >>> 8) & 0b11);\n    const noClose = (flags & (1 << 10)) !== 0;\n    // (Skip bits [11, 15])\n    let join;\n    switch (joinStyleId) {\n        case 0:\n            join = { type: swf_tree_1.JoinStyleType.Round };\n            break;\n        case 1:\n            join = { type: swf_tree_1.JoinStyleType.Bevel };\n            break;\n        case 2:\n            join = { type: swf_tree_1.JoinStyleType.Miter, limit: swf_tree_1.Sfixed8P8.fromEpsilons(byteStream.readSint16LE()) };\n            break;\n        default:\n            throw new incident_1.Incident(\"UnexpectedJoinStyleId\", { id: joinStyleId });\n    }\n    let fill;\n    if (hasFill) {\n        fill = parseFillStyle(byteStream, true);\n    }\n    else {\n        fill = { type: swf_tree_1.FillStyleType.Solid, color: basic_data_types_1.parseStraightSRgba8(byteStream) };\n    }\n    return {\n        width,\n        fill,\n        pixelHinting,\n        noVScale,\n        noHScale,\n        noClose,\n        join,\n        startCap: capStyleFromId(startCapStyleId),\n        endCap: capStyleFromId(endCapStyleId),\n    };\n}\nexports.parseLineStyle2 = parseLineStyle2;\nfunction capStyleFromId(capStyleId) {\n    switch (capStyleId) {\n        case 0:\n            return swf_tree_1.CapStyle.Round;\n        case 1:\n            return swf_tree_1.CapStyle.None;\n        case 2:\n            return swf_tree_1.CapStyle.Square;\n        default:\n            throw new incident_1.Incident(\"UnexpectedCapStyleId\", { id: capStyleId });\n    }\n}\nexports.capStyleFromId = capStyleFromId;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nvar utils = module.exports = {};\n\n/**\n * Loops through the collection and calls the callback for each element. if the callback returns truthy, the loop is broken and returns the same value.\n * @public\n * @param {*} collection The collection to loop through. Needs to have a length property set and have indices set from 0 to length - 1.\n * @param {function} callback The callback to be called for each element. The element will be given as a parameter to the callback. If this callback returns truthy, the loop is broken and the same value is returned.\n * @returns {*} The value that a callback has returned (if truthy). Otherwise nothing.\n */\nutils.forEach = function(collection, callback) {\n    for(var i = 0; i < collection.length; i++) {\n        var result = callback(collection[i]);\n        if(result) {\n            return result;\n        }\n    }\n};\n","\"use strict\";\n\nvar detector = module.exports = {};\n\ndetector.isIE = function(version) {\n    function isAnyIeVersion() {\n        var agent = navigator.userAgent.toLowerCase();\n        return agent.indexOf(\"msie\") !== -1 || agent.indexOf(\"trident\") !== -1 || agent.indexOf(\" edge/\") !== -1;\n    }\n\n    if(!isAnyIeVersion()) {\n        return false;\n    }\n\n    if(!version) {\n        return true;\n    }\n\n    //Shamelessly stolen from https://gist.github.com/padolsey/527683\n    var ieVersion = (function(){\n        var undef,\n            v = 3,\n            div = document.createElement(\"div\"),\n            all = div.getElementsByTagName(\"i\");\n\n        do {\n            div.innerHTML = \"<!--[if gt IE \" + (++v) + \"]><i></i><![endif]-->\";\n        }\n        while (all[0]);\n\n        return v > 4 ? v : undef;\n    }());\n\n    return version === ieVersion;\n};\n\ndetector.isLegacyOpera = function() {\n    return !!window.opera;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst matrix_1 = require(\"../matrix\");\nconst _type_1 = require(\"./_type\");\nexports.$Bitmap = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$FillStyleType, value: _type_1.FillStyleType.Bitmap }) },\n        bitmapId: { type: uint16_1.$Uint16 },\n        matrix: { type: matrix_1.$Matrix },\n        repeating: { type: boolean_1.$Boolean },\n        smoothed: { type: boolean_1.$Boolean },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvYml0bWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUVqRCxzQ0FBNEM7QUFDNUMsbUNBQXdEO0FBVTNDLFFBQUEsT0FBTyxHQUEyQixJQUFJLHVCQUFZLENBQVM7SUFDdEUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxzQkFBYyxFQUFFLEtBQUssRUFBRSxxQkFBYSxDQUFDLE1BQThCLEVBQUMsQ0FBQyxFQUFDO1FBQzFHLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3pCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3ZCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzNCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO0tBQzNCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZmlsbC1zdHlsZXMvYml0bWFwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkTWF0cml4LCBNYXRyaXggfSBmcm9tIFwiLi4vbWF0cml4XCI7XG5pbXBvcnQgeyAkRmlsbFN0eWxlVHlwZSwgRmlsbFN0eWxlVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQml0bWFwIHtcbiAgdHlwZTogRmlsbFN0eWxlVHlwZS5CaXRtYXA7XG4gIGJpdG1hcElkOiBVaW50MTY7XG4gIG1hdHJpeDogTWF0cml4O1xuICByZXBlYXRpbmc6IGJvb2xlYW47XG4gIHNtb290aGVkOiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgJEJpdG1hcDogRG9jdW1lbnRJb1R5cGU8Qml0bWFwPiA9IG5ldyBEb2N1bWVudFR5cGU8Qml0bWFwPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkRmlsbFN0eWxlVHlwZSwgdmFsdWU6IEZpbGxTdHlsZVR5cGUuQml0bWFwIGFzIEZpbGxTdHlsZVR5cGUuQml0bWFwfSl9LFxuICAgIGJpdG1hcElkOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgbWF0cml4OiB7dHlwZTogJE1hdHJpeH0sXG4gICAgcmVwZWF0aW5nOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHNtb290aGVkOiB7dHlwZTogJEJvb2xlYW59LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst sfixed8p8_1 = require(\"../fixed-point/sfixed8p8\");\nconst gradient_1 = require(\"../gradient\");\nconst matrix_1 = require(\"../matrix\");\nconst _type_1 = require(\"./_type\");\nexports.$FocalGradient = new document_1.DocumentType({\n    properties: {\n        type: {\n            type: new literal_1.LiteralType({\n                type: _type_1.$FillStyleType,\n                value: _type_1.FillStyleType.FocalGradient,\n            }),\n        },\n        matrix: { type: matrix_1.$Matrix },\n        gradient: { type: gradient_1.$Gradient },\n        focalPoint: { type: sfixed8p8_1.Sfixed8P8 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvZm9jYWwtZ3JhZGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBcUQ7QUFDckQsMENBQWtEO0FBQ2xELHNDQUE0QztBQUM1QyxtQ0FBd0Q7QUFTM0MsUUFBQSxjQUFjLEdBQWtDLElBQUksdUJBQVksQ0FBZ0I7SUFDM0YsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQztnQkFDcEIsSUFBSSxFQUFFLHNCQUFjO2dCQUNwQixLQUFLLEVBQUUscUJBQWEsQ0FBQyxhQUE0QzthQUNsRSxDQUFDO1NBQ0g7UUFDRCxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN2QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsb0JBQVMsRUFBQztRQUMzQixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBQztLQUM5QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImZpbGwtc3R5bGVzL2ZvY2FsLWdyYWRpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFNmaXhlZDhQOCB9IGZyb20gXCIuLi9maXhlZC1wb2ludC9zZml4ZWQ4cDhcIjtcbmltcG9ydCB7ICRHcmFkaWVudCwgR3JhZGllbnQgfSBmcm9tIFwiLi4vZ3JhZGllbnRcIjtcbmltcG9ydCB7ICRNYXRyaXgsIE1hdHJpeCB9IGZyb20gXCIuLi9tYXRyaXhcIjtcbmltcG9ydCB7ICRGaWxsU3R5bGVUeXBlLCBGaWxsU3R5bGVUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBGb2NhbEdyYWRpZW50IHtcbiAgdHlwZTogRmlsbFN0eWxlVHlwZS5Gb2NhbEdyYWRpZW50O1xuICBtYXRyaXg6IE1hdHJpeDtcbiAgZ3JhZGllbnQ6IEdyYWRpZW50O1xuICBmb2NhbFBvaW50OiBTZml4ZWQ4UDg7XG59XG5cbmV4cG9ydCBjb25zdCAkRm9jYWxHcmFkaWVudDogRG9jdW1lbnRJb1R5cGU8Rm9jYWxHcmFkaWVudD4gPSBuZXcgRG9jdW1lbnRUeXBlPEZvY2FsR3JhZGllbnQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHtcbiAgICAgIHR5cGU6IG5ldyBMaXRlcmFsVHlwZSh7XG4gICAgICAgIHR5cGU6ICRGaWxsU3R5bGVUeXBlLFxuICAgICAgICB2YWx1ZTogRmlsbFN0eWxlVHlwZS5Gb2NhbEdyYWRpZW50IGFzIEZpbGxTdHlsZVR5cGUuRm9jYWxHcmFkaWVudCxcbiAgICAgIH0pLFxuICAgIH0sXG4gICAgbWF0cml4OiB7dHlwZTogJE1hdHJpeH0sXG4gICAgZ3JhZGllbnQ6IHt0eXBlOiAkR3JhZGllbnR9LFxuICAgIGZvY2FsUG9pbnQ6IHt0eXBlOiBTZml4ZWQ4UDh9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"MaxArrayLength\";\nfunction format({ array, max }) {\n    return `Expected array length (${array.length}) to be less than or equal to ${max}`;\n}\nexports.format = format;\nfunction createMaxArrayLengthError(array, max) {\n    return incident_1.Incident(exports.name, { array, max }, format);\n}\nexports.createMaxArrayLengthError = createMaxArrayLengthError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL21heC1hcnJheS1sZW5ndGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMsZ0JBQWdCLENBQUM7QUFVM0MsU0FBZ0IsTUFBTSxDQUFDLEVBQUMsS0FBSyxFQUFFLEdBQUcsRUFBTztJQUN2QyxPQUFPLDBCQUEwQixLQUFLLENBQUMsTUFBTSxpQ0FBaUMsR0FBRyxFQUFFLENBQUM7QUFDdEYsQ0FBQztBQUZELHdCQUVDO0FBRUQsU0FBZ0IseUJBQXlCLENBQUMsS0FBcUIsRUFBRSxHQUFXO0lBQzFFLE9BQU8sbUJBQVEsQ0FBQyxZQUFJLEVBQUUsRUFBQyxLQUFLLEVBQUUsR0FBRyxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDOUMsQ0FBQztBQUZELDhEQUVDIiwiZmlsZSI6ImVycm9ycy9tYXgtYXJyYXktbGVuZ3RoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IHR5cGUgTmFtZSA9IFwiTWF4QXJyYXlMZW5ndGhcIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJNYXhBcnJheUxlbmd0aFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICBhcnJheTogQXJyYXlMaWtlPGFueT47XG4gIG1heDogbnVtYmVyO1xufVxuXG5leHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbmV4cG9ydCB0eXBlIE1heEFycmF5TGVuZ3RoRXJyb3IgPSBJbmNpZGVudDxEYXRhLCBOYW1lLCBDYXVzZT47XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe2FycmF5LCBtYXh9OiBEYXRhKTogc3RyaW5nIHtcbiAgcmV0dXJuIGBFeHBlY3RlZCBhcnJheSBsZW5ndGggKCR7YXJyYXkubGVuZ3RofSkgdG8gYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvICR7bWF4fWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNYXhBcnJheUxlbmd0aEVycm9yKGFycmF5OiBBcnJheUxpa2U8YW55PiwgbWF4OiBudW1iZXIpOiBNYXhBcnJheUxlbmd0aEVycm9yIHtcbiAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHthcnJheSwgbWF4fSwgZm9ybWF0KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar ColorSpace;\n(function (ColorSpace) {\n    ColorSpace[ColorSpace[\"SRgb\"] = 0] = \"SRgb\";\n    ColorSpace[ColorSpace[\"LinearRgb\"] = 1] = \"LinearRgb\";\n})(ColorSpace = exports.ColorSpace || (exports.ColorSpace = {}));\nexports.$ColorSpace = new ts_enum_1.TsEnumType({\n    enum: ColorSpace,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29sb3Itc3BhY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsZ0RBQWdEO0FBRWhELElBQVksVUFHWDtBQUhELFdBQVksVUFBVTtJQUNwQiwyQ0FBSSxDQUFBO0lBQ0oscURBQVMsQ0FBQTtBQUNYLENBQUMsRUFIVyxVQUFVLEdBQVYsa0JBQVUsS0FBVixrQkFBVSxRQUdyQjtBQUVZLFFBQUEsV0FBVyxHQUEyQixJQUFJLG9CQUFVLENBQWE7SUFDNUUsSUFBSSxFQUFFLFVBQVU7SUFDaEIsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiY29sb3Itc3BhY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBUc0VudW1UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdHMtZW51bVwiO1xuXG5leHBvcnQgZW51bSBDb2xvclNwYWNlIHtcbiAgU1JnYixcbiAgTGluZWFyUmdiLFxufVxuXG5leHBvcnQgY29uc3QgJENvbG9yU3BhY2U6IFRzRW51bVR5cGU8Q29sb3JTcGFjZT4gPSBuZXcgVHNFbnVtVHlwZTxDb2xvclNwYWNlPih7XG4gIGVudW06IENvbG9yU3BhY2UsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint8_1 = require(\"kryo/builtins/uint8\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nexports.$SRgb8 = new document_1.DocumentType({\n    properties: {\n        r: { type: uint8_1.$Uint8 },\n        g: { type: uint8_1.$Uint8 },\n        b: { type: uint8_1.$Uint8 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcy1yZ2I4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0NBQTZDO0FBQzdDLGdEQUE0QztBQUM1QyxrREFBbUU7QUFNdEQsUUFBQSxNQUFNLEdBQTBCLElBQUksdUJBQVksQ0FBUTtJQUNuRSxVQUFVLEVBQUU7UUFDVixDQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUUsY0FBTSxFQUFDO1FBQ2pCLENBQUMsRUFBRSxFQUFDLElBQUksRUFBRSxjQUFNLEVBQUM7UUFDakIsQ0FBQyxFQUFFLEVBQUMsSUFBSSxFQUFFLGNBQU0sRUFBQztLQUNsQjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InMtcmdiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50OCB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQ4XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IFNSZ2IsIFVpbnQ4IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU1JnYjggZXh0ZW5kcyBTUmdiPFVpbnQ4PiB7XG59XG5cbmV4cG9ydCBjb25zdCAkU1JnYjg6IERvY3VtZW50SW9UeXBlPFNSZ2I4PiA9IG5ldyBEb2N1bWVudFR5cGU8U1JnYjg+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHI6IHt0eXBlOiAkVWludDh9LFxuICAgIGc6IHt0eXBlOiAkVWludDh9LFxuICAgIGI6IHt0eXBlOiAkVWludDh9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar GradientSpread;\n(function (GradientSpread) {\n    GradientSpread[GradientSpread[\"Pad\"] = 0] = \"Pad\";\n    GradientSpread[GradientSpread[\"Reflect\"] = 1] = \"Reflect\";\n    GradientSpread[GradientSpread[\"Repeat\"] = 2] = \"Repeat\";\n})(GradientSpread = exports.GradientSpread || (exports.GradientSpread = {}));\nexports.$GradientSpread = new ts_enum_1.TsEnumType({\n    enum: GradientSpread,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZ3JhZGllbnQtc3ByZWFkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGdEQUFnRDtBQUVoRCxJQUFZLGNBSVg7QUFKRCxXQUFZLGNBQWM7SUFDeEIsaURBQUcsQ0FBQTtJQUNILHlEQUFPLENBQUE7SUFDUCx1REFBTSxDQUFBO0FBQ1IsQ0FBQyxFQUpXLGNBQWMsR0FBZCxzQkFBYyxLQUFkLHNCQUFjLFFBSXpCO0FBRVksUUFBQSxlQUFlLEdBQStCLElBQUksb0JBQVUsQ0FBaUI7SUFDeEYsSUFBSSxFQUFFLGNBQWM7SUFDcEIsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZ3JhZGllbnQtc3ByZWFkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gR3JhZGllbnRTcHJlYWQge1xuICBQYWQsXG4gIFJlZmxlY3QsXG4gIFJlcGVhdCxcbn1cblxuZXhwb3J0IGNvbnN0ICRHcmFkaWVudFNwcmVhZDogVHNFbnVtVHlwZTxHcmFkaWVudFNwcmVhZD4gPSBuZXcgVHNFbnVtVHlwZTxHcmFkaWVudFNwcmVhZD4oe1xuICBlbnVtOiBHcmFkaWVudFNwcmVhZCxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst gradient_1 = require(\"../gradient\");\nconst matrix_1 = require(\"../matrix\");\nconst _type_1 = require(\"./_type\");\nexports.$LinearGradient = new document_1.DocumentType({\n    properties: {\n        type: {\n            type: new literal_1.LiteralType({\n                type: _type_1.$FillStyleType,\n                value: _type_1.FillStyleType.LinearGradient,\n            }),\n        },\n        matrix: { type: matrix_1.$Matrix },\n        gradient: { type: gradient_1.$Gradient },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvbGluZWFyLWdyYWRpZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsMENBQWtEO0FBQ2xELHNDQUE0QztBQUM1QyxtQ0FBd0Q7QUFRM0MsUUFBQSxlQUFlLEdBQW1DLElBQUksdUJBQVksQ0FBaUI7SUFDOUYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQztnQkFDcEIsSUFBSSxFQUFFLHNCQUFjO2dCQUNwQixLQUFLLEVBQUUscUJBQWEsQ0FBQyxjQUE4QzthQUNwRSxDQUFDO1NBQ0g7UUFDRCxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN2QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsb0JBQVMsRUFBQztLQUM1QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImZpbGwtc3R5bGVzL2xpbmVhci1ncmFkaWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkR3JhZGllbnQsIEdyYWRpZW50IH0gZnJvbSBcIi4uL2dyYWRpZW50XCI7XG5pbXBvcnQgeyAkTWF0cml4LCBNYXRyaXggfSBmcm9tIFwiLi4vbWF0cml4XCI7XG5pbXBvcnQgeyAkRmlsbFN0eWxlVHlwZSwgRmlsbFN0eWxlVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTGluZWFyR3JhZGllbnQge1xuICB0eXBlOiBGaWxsU3R5bGVUeXBlLkxpbmVhckdyYWRpZW50O1xuICBtYXRyaXg6IE1hdHJpeDtcbiAgZ3JhZGllbnQ6IEdyYWRpZW50O1xufVxuXG5leHBvcnQgY29uc3QgJExpbmVhckdyYWRpZW50OiBEb2N1bWVudElvVHlwZTxMaW5lYXJHcmFkaWVudD4gPSBuZXcgRG9jdW1lbnRUeXBlPExpbmVhckdyYWRpZW50Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7XG4gICAgICB0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe1xuICAgICAgICB0eXBlOiAkRmlsbFN0eWxlVHlwZSxcbiAgICAgICAgdmFsdWU6IEZpbGxTdHlsZVR5cGUuTGluZWFyR3JhZGllbnQgYXMgRmlsbFN0eWxlVHlwZS5MaW5lYXJHcmFkaWVudCxcbiAgICAgIH0pLFxuICAgIH0sXG4gICAgbWF0cml4OiB7dHlwZTogJE1hdHJpeH0sXG4gICAgZ3JhZGllbnQ6IHt0eXBlOiAkR3JhZGllbnR9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst gradient_1 = require(\"../gradient\");\nconst matrix_1 = require(\"../matrix\");\nconst _type_1 = require(\"./_type\");\nexports.$RadialGradient = new document_1.DocumentType({\n    properties: {\n        type: {\n            type: new literal_1.LiteralType({\n                type: _type_1.$FillStyleType,\n                value: _type_1.FillStyleType.RadialGradient,\n            }),\n        },\n        matrix: { type: matrix_1.$Matrix },\n        gradient: { type: gradient_1.$Gradient },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvcmFkaWFsLWdyYWRpZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsMENBQWtEO0FBQ2xELHNDQUE0QztBQUM1QyxtQ0FBd0Q7QUFRM0MsUUFBQSxlQUFlLEdBQW1DLElBQUksdUJBQVksQ0FBaUI7SUFDOUYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQztnQkFDcEIsSUFBSSxFQUFFLHNCQUFjO2dCQUNwQixLQUFLLEVBQUUscUJBQWEsQ0FBQyxjQUE4QzthQUNwRSxDQUFDO1NBQ0g7UUFDRCxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN2QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsb0JBQVMsRUFBQztLQUM1QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImZpbGwtc3R5bGVzL3JhZGlhbC1ncmFkaWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkR3JhZGllbnQsIEdyYWRpZW50IH0gZnJvbSBcIi4uL2dyYWRpZW50XCI7XG5pbXBvcnQgeyAkTWF0cml4LCBNYXRyaXggfSBmcm9tIFwiLi4vbWF0cml4XCI7XG5pbXBvcnQgeyAkRmlsbFN0eWxlVHlwZSwgRmlsbFN0eWxlVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmFkaWFsR3JhZGllbnQge1xuICB0eXBlOiBGaWxsU3R5bGVUeXBlLlJhZGlhbEdyYWRpZW50O1xuICBtYXRyaXg6IE1hdHJpeDtcbiAgZ3JhZGllbnQ6IEdyYWRpZW50O1xufVxuXG5leHBvcnQgY29uc3QgJFJhZGlhbEdyYWRpZW50OiBEb2N1bWVudElvVHlwZTxSYWRpYWxHcmFkaWVudD4gPSBuZXcgRG9jdW1lbnRUeXBlPFJhZGlhbEdyYWRpZW50Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7XG4gICAgICB0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe1xuICAgICAgICB0eXBlOiAkRmlsbFN0eWxlVHlwZSxcbiAgICAgICAgdmFsdWU6IEZpbGxTdHlsZVR5cGUuUmFkaWFsR3JhZGllbnQgYXMgRmlsbFN0eWxlVHlwZS5SYWRpYWxHcmFkaWVudCxcbiAgICAgIH0pLFxuICAgIH0sXG4gICAgbWF0cml4OiB7dHlwZTogJE1hdHJpeH0sXG4gICAgZ3JhZGllbnQ6IHt0eXBlOiAkR3JhZGllbnR9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst straight_s_rgba8_1 = require(\"../straight-s-rgba8\");\nconst _type_1 = require(\"./_type\");\nexports.$Solid = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$FillStyleType, value: _type_1.FillStyleType.Solid }) },\n        color: { type: straight_s_rgba8_1.$StraightSRgba8 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvc29saWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCwwREFBc0U7QUFDdEUsbUNBQXdEO0FBTzNDLFFBQUEsTUFBTSxHQUEwQixJQUFJLHVCQUFZLENBQVE7SUFDbkUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxzQkFBYyxFQUFFLEtBQUssRUFBRSxxQkFBYSxDQUFDLEtBQTRCLEVBQUMsQ0FBQyxFQUFDO1FBQ3hHLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxrQ0FBZSxFQUFDO0tBQy9CO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZmlsbC1zdHlsZXMvc29saWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJFN0cmFpZ2h0U1JnYmE4LCBTdHJhaWdodFNSZ2JhOCB9IGZyb20gXCIuLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5pbXBvcnQgeyAkRmlsbFN0eWxlVHlwZSwgRmlsbFN0eWxlVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU29saWQge1xuICB0eXBlOiBGaWxsU3R5bGVUeXBlLlNvbGlkO1xuICBjb2xvcjogU3RyYWlnaHRTUmdiYTg7XG59XG5cbmV4cG9ydCBjb25zdCAkU29saWQ6IERvY3VtZW50SW9UeXBlPFNvbGlkPiA9IG5ldyBEb2N1bWVudFR5cGU8U29saWQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRGaWxsU3R5bGVUeXBlLCB2YWx1ZTogRmlsbFN0eWxlVHlwZS5Tb2xpZCBhcyBGaWxsU3R5bGVUeXBlLlNvbGlkfSl9LFxuICAgIGNvbG9yOiB7dHlwZTogJFN0cmFpZ2h0U1JnYmE4fSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bevel_1 = require(\"./bevel\");\nexports.$Bevel = bevel_1.$Bevel;\nvar blur_1 = require(\"./blur\");\nexports.$Blur = blur_1.$Blur;\nvar color_matrix_1 = require(\"./color-matrix\");\nexports.$ColorMatrix = color_matrix_1.$ColorMatrix;\nvar convolution_1 = require(\"./convolution\");\nexports.$Convolution = convolution_1.$Convolution;\nvar drop_shadow_1 = require(\"./drop-shadow\");\nexports.$DropShadow = drop_shadow_1.$DropShadow;\nvar glow_1 = require(\"./glow\");\nexports.$Glow = glow_1.$Glow;\nvar gradient_bevel_1 = require(\"./gradient-bevel\");\nexports.$GradientBevel = gradient_bevel_1.$GradientBevel;\nvar gradient_glow_1 = require(\"./gradient-glow\");\nexports.$GradientGlow = gradient_glow_1.$GradientGlow;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlDQUF3QztBQUEvQix5QkFBQSxNQUFNLENBQUE7QUFDZiwrQkFBcUM7QUFBNUIsdUJBQUEsS0FBSyxDQUFBO0FBQ2QsK0NBQTJEO0FBQWxELHNDQUFBLFlBQVksQ0FBQTtBQUNyQiw2Q0FBMEQ7QUFBakQscUNBQUEsWUFBWSxDQUFBO0FBQ3JCLDZDQUF3RDtBQUEvQyxvQ0FBQSxXQUFXLENBQUE7QUFDcEIsK0JBQXFDO0FBQTVCLHVCQUFBLEtBQUssQ0FBQTtBQUNkLG1EQUFpRTtBQUF4RCwwQ0FBQSxjQUFjLENBQUE7QUFDdkIsaURBQThEO0FBQXJELHdDQUFBLGFBQWEsQ0FBQSIsImZpbGUiOiJmaWx0ZXJzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgJEJldmVsLCBCZXZlbCB9IGZyb20gXCIuL2JldmVsXCI7XG5leHBvcnQgeyAkQmx1ciwgQmx1ciB9IGZyb20gXCIuL2JsdXJcIjtcbmV4cG9ydCB7ICRDb2xvck1hdHJpeCwgQ29sb3JNYXRyaXggfSBmcm9tIFwiLi9jb2xvci1tYXRyaXhcIjtcbmV4cG9ydCB7ICRDb252b2x1dGlvbiwgQ29udm9sdXRpb24gfSBmcm9tIFwiLi9jb252b2x1dGlvblwiO1xuZXhwb3J0IHsgJERyb3BTaGFkb3csIERyb3BTaGFkb3cgfSBmcm9tIFwiLi9kcm9wLXNoYWRvd1wiO1xuZXhwb3J0IHsgJEdsb3csIEdsb3cgfSBmcm9tIFwiLi9nbG93XCI7XG5leHBvcnQgeyAkR3JhZGllbnRCZXZlbCwgR3JhZGllbnRCZXZlbCB9IGZyb20gXCIuL2dyYWRpZW50LWJldmVsXCI7XG5leHBvcnQgeyAkR3JhZGllbnRHbG93LCBHcmFkaWVudEdsb3cgfSBmcm9tIFwiLi9ncmFkaWVudC1nbG93XCI7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bevel_1 = require(\"./bevel\");\nexports.$Bevel = bevel_1.$Bevel;\nvar miter_1 = require(\"./miter\");\nexports.$Miter = miter_1.$Miter;\nvar round_1 = require(\"./round\");\nexports.$Round = round_1.$Round;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvam9pbi1zdHlsZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpQ0FBd0M7QUFBL0IseUJBQUEsTUFBTSxDQUFBO0FBQ2YsaUNBQXdDO0FBQS9CLHlCQUFBLE1BQU0sQ0FBQTtBQUNmLGlDQUF3QztBQUEvQix5QkFBQSxNQUFNLENBQUEiLCJmaWxlIjoiam9pbi1zdHlsZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyAkQmV2ZWwsIEJldmVsIH0gZnJvbSBcIi4vYmV2ZWxcIjtcbmV4cG9ydCB7ICRNaXRlciwgTWl0ZXIgfSBmcm9tIFwiLi9taXRlclwiO1xuZXhwb3J0IHsgJFJvdW5kLCBSb3VuZCB9IGZyb20gXCIuL3JvdW5kXCI7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst vector_2d_1 = require(\"../vector-2d\");\nconst _type_1 = require(\"./_type\");\nexports.$CurvedEdge = new document_1.DocumentType({\n    properties: {\n        type: {\n            type: new literal_1.LiteralType({\n                type: _type_1.$ShapeRecordType,\n                value: _type_1.ShapeRecordType.CurvedEdge,\n            }),\n        },\n        controlDelta: { type: vector_2d_1.$Vector2D },\n        anchorDelta: { type: vector_2d_1.$Vector2D },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3Jkcy9jdXJ2ZWQtZWRnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELDRDQUFtRDtBQUNuRCxtQ0FBNEQ7QUFRL0MsUUFBQSxXQUFXLEdBQStCLElBQUksdUJBQVksQ0FBYTtJQUNsRixVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUU7WUFDSixJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDO2dCQUNwQixJQUFJLEVBQUUsd0JBQWdCO2dCQUN0QixLQUFLLEVBQUUsdUJBQWUsQ0FBQyxVQUF3QzthQUNoRSxDQUFDO1NBQ0g7UUFDRCxZQUFZLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBQztRQUMvQixXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBQztLQUMvQjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InNoYXBlLXJlY29yZHMvY3VydmVkLWVkZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJFZlY3RvcjJELCBWZWN0b3IyRCB9IGZyb20gXCIuLi92ZWN0b3ItMmRcIjtcbmltcG9ydCB7ICRTaGFwZVJlY29yZFR5cGUsIFNoYXBlUmVjb3JkVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ3VydmVkRWRnZSB7XG4gIHR5cGU6IFNoYXBlUmVjb3JkVHlwZS5DdXJ2ZWRFZGdlO1xuICBjb250cm9sRGVsdGE6IFZlY3RvcjJEO1xuICBhbmNob3JEZWx0YTogVmVjdG9yMkQ7XG59XG5cbmV4cG9ydCBjb25zdCAkQ3VydmVkRWRnZTogRG9jdW1lbnRJb1R5cGU8Q3VydmVkRWRnZT4gPSBuZXcgRG9jdW1lbnRUeXBlPEN1cnZlZEVkZ2U+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHtcbiAgICAgIHR5cGU6IG5ldyBMaXRlcmFsVHlwZSh7XG4gICAgICAgIHR5cGU6ICRTaGFwZVJlY29yZFR5cGUsXG4gICAgICAgIHZhbHVlOiBTaGFwZVJlY29yZFR5cGUuQ3VydmVkRWRnZSBhcyBTaGFwZVJlY29yZFR5cGUuQ3VydmVkRWRnZSxcbiAgICAgIH0pLFxuICAgIH0sXG4gICAgY29udHJvbERlbHRhOiB7dHlwZTogJFZlY3RvcjJEfSxcbiAgICBhbmNob3JEZWx0YToge3R5cGU6ICRWZWN0b3IyRH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst vector_2d_1 = require(\"../vector-2d\");\nconst _type_1 = require(\"./_type\");\nexports.$StraightEdge = new document_1.DocumentType({\n    properties: {\n        type: {\n            type: new literal_1.LiteralType({\n                type: _type_1.$ShapeRecordType,\n                value: _type_1.ShapeRecordType.StraightEdge,\n            }),\n        },\n        delta: { type: vector_2d_1.$Vector2D },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3Jkcy9zdHJhaWdodC1lZGdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsNENBQW1EO0FBQ25ELG1DQUE0RDtBQU8vQyxRQUFBLGFBQWEsR0FBaUMsSUFBSSx1QkFBWSxDQUFlO0lBQ3hGLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRTtZQUNKLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUM7Z0JBQ3BCLElBQUksRUFBRSx3QkFBZ0I7Z0JBQ3RCLEtBQUssRUFBRSx1QkFBZSxDQUFDLFlBQTRDO2FBQ3BFLENBQUM7U0FDSDtRQUNELEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxxQkFBUyxFQUFDO0tBQ3pCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoic2hhcGUtcmVjb3Jkcy9zdHJhaWdodC1lZGdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRWZWN0b3IyRCwgVmVjdG9yMkQgfSBmcm9tIFwiLi4vdmVjdG9yLTJkXCI7XG5pbXBvcnQgeyAkU2hhcGVSZWNvcmRUeXBlLCBTaGFwZVJlY29yZFR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0cmFpZ2h0RWRnZSB7XG4gIHR5cGU6IFNoYXBlUmVjb3JkVHlwZS5TdHJhaWdodEVkZ2U7XG4gIGRlbHRhOiBWZWN0b3IyRDtcbn1cblxuZXhwb3J0IGNvbnN0ICRTdHJhaWdodEVkZ2U6IERvY3VtZW50SW9UeXBlPFN0cmFpZ2h0RWRnZT4gPSBuZXcgRG9jdW1lbnRUeXBlPFN0cmFpZ2h0RWRnZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge1xuICAgICAgdHlwZTogbmV3IExpdGVyYWxUeXBlKHtcbiAgICAgICAgdHlwZTogJFNoYXBlUmVjb3JkVHlwZSxcbiAgICAgICAgdmFsdWU6IFNoYXBlUmVjb3JkVHlwZS5TdHJhaWdodEVkZ2UgYXMgU2hhcGVSZWNvcmRUeXBlLlN0cmFpZ2h0RWRnZSxcbiAgICAgIH0pLFxuICAgIH0sXG4gICAgZGVsdGE6IHt0eXBlOiAkVmVjdG9yMkR9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst morph_fill_style_1 = require(\"./morph-fill-style\");\nconst morph_line_style_1 = require(\"./morph-line-style\");\nexports.$MorphShapeStyles = new document_1.DocumentType({\n    properties: {\n        fill: {\n            type: new array_1.ArrayType({ itemType: morph_fill_style_1.$MorphFillStyle, maxLength: Infinity }),\n        },\n        line: {\n            type: new array_1.ArrayType({ itemType: morph_line_style_1.$MorphLineStyle, maxLength: Infinity }),\n        },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtc2hhcGUtc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFDbkUseURBQXFFO0FBQ3JFLHlEQUFxRTtBQVF4RCxRQUFBLGlCQUFpQixHQUFxQyxJQUFJLHVCQUFZLENBQW1CO0lBQ3BHLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRTtZQUNKLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsa0NBQWUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUM7U0FDdEU7UUFDRCxJQUFJLEVBQUU7WUFDSixJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLGtDQUFlLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDO1NBQ3RFO0tBQ0Y7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJtb3JwaC1zaGFwZS1zdHlsZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyAkTW9ycGhGaWxsU3R5bGUsIE1vcnBoRmlsbFN0eWxlIH0gZnJvbSBcIi4vbW9ycGgtZmlsbC1zdHlsZVwiO1xuaW1wb3J0IHsgJE1vcnBoTGluZVN0eWxlLCBNb3JwaExpbmVTdHlsZSB9IGZyb20gXCIuL21vcnBoLWxpbmUtc3R5bGVcIjtcbmltcG9ydCB7IFNoYXBlU3R5bGVzIH0gZnJvbSBcIi4vc2hhcGUtc3R5bGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTW9ycGhTaGFwZVN0eWxlcyBleHRlbmRzIFNoYXBlU3R5bGVzIHtcbiAgZmlsbDogTW9ycGhGaWxsU3R5bGVbXTtcbiAgbGluZTogTW9ycGhMaW5lU3R5bGVbXTtcbn1cblxuZXhwb3J0IGNvbnN0ICRNb3JwaFNoYXBlU3R5bGVzOiBEb2N1bWVudElvVHlwZTxNb3JwaFNoYXBlU3R5bGVzPiA9IG5ldyBEb2N1bWVudFR5cGU8TW9ycGhTaGFwZVN0eWxlcz4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgZmlsbDoge1xuICAgICAgdHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRNb3JwaEZpbGxTdHlsZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pLFxuICAgIH0sXG4gICAgbGluZToge1xuICAgICAgdHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRNb3JwaExpbmVTdHlsZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pLFxuICAgIH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tagged_union_1 = require(\"kryo/types/tagged-union\");\nconst fillStyles = __importStar(require(\"./fill-styles/index\"));\nexports.$MorphFillStyle = new tagged_union_1.TaggedUnionType({\n    variants: [\n        fillStyles.$MorphBitmap,\n        fillStyles.$MorphFocalGradient,\n        fillStyles.$MorphLinearGradient,\n        fillStyles.$MorphRadialGradient,\n        fillStyles.$MorphSolid,\n    ],\n    tag: \"type\",\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtZmlsbC1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSwwREFBMEQ7QUFDMUQsZ0VBQWtEO0FBU3JDLFFBQUEsZUFBZSxHQUFvQyxJQUFJLDhCQUFlLENBQWlCO0lBQ2xHLFFBQVEsRUFBRTtRQUNSLFVBQVUsQ0FBQyxZQUFZO1FBQ3ZCLFVBQVUsQ0FBQyxtQkFBbUI7UUFDOUIsVUFBVSxDQUFDLG9CQUFvQjtRQUMvQixVQUFVLENBQUMsb0JBQW9CO1FBQy9CLFVBQVUsQ0FBQyxXQUFXO0tBQ3ZCO0lBQ0QsR0FBRyxFQUFFLE1BQU07Q0FDWixDQUFDLENBQUMiLCJmaWxlIjoibW9ycGgtZmlsbC1zdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhZ2dlZFVuaW9uVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RhZ2dlZC11bmlvblwiO1xuaW1wb3J0ICogYXMgZmlsbFN0eWxlcyBmcm9tIFwiLi9maWxsLXN0eWxlcy9pbmRleFwiO1xuXG5leHBvcnQgdHlwZSBNb3JwaEZpbGxTdHlsZSA9XG4gIGZpbGxTdHlsZXMuTW9ycGhCaXRtYXBcbiAgfCBmaWxsU3R5bGVzLk1vcnBoRm9jYWxHcmFkaWVudFxuICB8IGZpbGxTdHlsZXMuTW9ycGhMaW5lYXJHcmFkaWVudFxuICB8IGZpbGxTdHlsZXMuTW9ycGhSYWRpYWxHcmFkaWVudFxuICB8IGZpbGxTdHlsZXMuTW9ycGhTb2xpZDtcblxuZXhwb3J0IGNvbnN0ICRNb3JwaEZpbGxTdHlsZTogVGFnZ2VkVW5pb25UeXBlPE1vcnBoRmlsbFN0eWxlPiA9IG5ldyBUYWdnZWRVbmlvblR5cGU8TW9ycGhGaWxsU3R5bGU+KHtcbiAgdmFyaWFudHM6IFtcbiAgICBmaWxsU3R5bGVzLiRNb3JwaEJpdG1hcCxcbiAgICBmaWxsU3R5bGVzLiRNb3JwaEZvY2FsR3JhZGllbnQsXG4gICAgZmlsbFN0eWxlcy4kTW9ycGhMaW5lYXJHcmFkaWVudCxcbiAgICBmaWxsU3R5bGVzLiRNb3JwaFJhZGlhbEdyYWRpZW50LFxuICAgIGZpbGxTdHlsZXMuJE1vcnBoU29saWQsXG4gIF0sXG4gIHRhZzogXCJ0eXBlXCIsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst cap_style_1 = require(\"./cap-style\");\nconst fill_style_1 = require(\"./fill-style\");\nconst join_style_1 = require(\"./join-style\");\nexports.$LineStyle = new document_1.DocumentType({\n    properties: {\n        width: { type: uint16_1.$Uint16 },\n        startCap: { type: cap_style_1.$CapStyle },\n        endCap: { type: cap_style_1.$CapStyle },\n        join: { type: join_style_1.$JoinStyle },\n        noHScale: { type: boolean_1.$Boolean },\n        noVScale: { type: boolean_1.$Boolean },\n        noClose: { type: boolean_1.$Boolean },\n        pixelHinting: { type: boolean_1.$Boolean },\n        fill: { type: fill_style_1.$FillStyle },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbGluZS1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUVuRSwyQ0FBa0Q7QUFDbEQsNkNBQXFEO0FBQ3JELDZDQUFxRDtBQWN4QyxRQUFBLFVBQVUsR0FBOEIsSUFBSSx1QkFBWSxDQUFZO0lBQy9FLFVBQVUsRUFBRTtRQUNWLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3RCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxxQkFBUyxFQUFDO1FBQzNCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxxQkFBUyxFQUFDO1FBQ3pCLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFDO1FBQ3hCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzFCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzFCLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3pCLFlBQVksRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzlCLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFDO0tBQ3pCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoibGluZS1zdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRDYXBTdHlsZSwgQ2FwU3R5bGUgfSBmcm9tIFwiLi9jYXAtc3R5bGVcIjtcbmltcG9ydCB7ICRGaWxsU3R5bGUsIEZpbGxTdHlsZSB9IGZyb20gXCIuL2ZpbGwtc3R5bGVcIjtcbmltcG9ydCB7ICRKb2luU3R5bGUsIEpvaW5TdHlsZSB9IGZyb20gXCIuL2pvaW4tc3R5bGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBMaW5lU3R5bGUge1xuICB3aWR0aDogVWludDE2O1xuICBzdGFydENhcDogQ2FwU3R5bGU7XG4gIGVuZENhcDogQ2FwU3R5bGU7XG4gIGpvaW46IEpvaW5TdHlsZTtcbiAgbm9IU2NhbGU6IGJvb2xlYW47XG4gIG5vVlNjYWxlOiBib29sZWFuO1xuICBub0Nsb3NlOiBib29sZWFuO1xuICBwaXhlbEhpbnRpbmc6IGJvb2xlYW47XG4gIGZpbGw6IEZpbGxTdHlsZTtcbn1cblxuZXhwb3J0IGNvbnN0ICRMaW5lU3R5bGU6IERvY3VtZW50SW9UeXBlPExpbmVTdHlsZT4gPSBuZXcgRG9jdW1lbnRUeXBlPExpbmVTdHlsZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgd2lkdGg6IHt0eXBlOiAkVWludDE2fSxcbiAgICBzdGFydENhcDoge3R5cGU6ICRDYXBTdHlsZX0sXG4gICAgZW5kQ2FwOiB7dHlwZTogJENhcFN0eWxlfSxcbiAgICBqb2luOiB7dHlwZTogJEpvaW5TdHlsZX0sXG4gICAgbm9IU2NhbGU6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgbm9WU2NhbGU6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgbm9DbG9zZToge3R5cGU6ICRCb29sZWFufSxcbiAgICBwaXhlbEhpbnRpbmc6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgZmlsbDoge3R5cGU6ICRGaWxsU3R5bGV9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tagged_union_1 = require(\"kryo/types/tagged-union\");\nconst fillStyles = __importStar(require(\"./fill-styles/index\"));\nexports.$FillStyle = new tagged_union_1.TaggedUnionType({\n    variants: [\n        fillStyles.$Bitmap,\n        fillStyles.$FocalGradient,\n        fillStyles.$LinearGradient,\n        fillStyles.$RadialGradient,\n        fillStyles.$Solid,\n    ],\n    tag: \"type\",\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSwwREFBMEQ7QUFDMUQsZ0VBQWtEO0FBU3JDLFFBQUEsVUFBVSxHQUErQixJQUFJLDhCQUFlLENBQVk7SUFDbkYsUUFBUSxFQUFFO1FBQ1IsVUFBVSxDQUFDLE9BQU87UUFDbEIsVUFBVSxDQUFDLGNBQWM7UUFDekIsVUFBVSxDQUFDLGVBQWU7UUFDMUIsVUFBVSxDQUFDLGVBQWU7UUFDMUIsVUFBVSxDQUFDLE1BQU07S0FDbEI7SUFDRCxHQUFHLEVBQUUsTUFBTTtDQUNaLENBQUMsQ0FBQyIsImZpbGUiOiJmaWxsLXN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGFnZ2VkVW5pb25UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdGFnZ2VkLXVuaW9uXCI7XG5pbXBvcnQgKiBhcyBmaWxsU3R5bGVzIGZyb20gXCIuL2ZpbGwtc3R5bGVzL2luZGV4XCI7XG5cbmV4cG9ydCB0eXBlIEZpbGxTdHlsZSA9XG4gIGZpbGxTdHlsZXMuQml0bWFwXG4gIHwgZmlsbFN0eWxlcy5Gb2NhbEdyYWRpZW50XG4gIHwgZmlsbFN0eWxlcy5MaW5lYXJHcmFkaWVudFxuICB8IGZpbGxTdHlsZXMuUmFkaWFsR3JhZGllbnRcbiAgfCBmaWxsU3R5bGVzLlNvbGlkO1xuXG5leHBvcnQgY29uc3QgJEZpbGxTdHlsZTogVGFnZ2VkVW5pb25UeXBlPEZpbGxTdHlsZT4gPSBuZXcgVGFnZ2VkVW5pb25UeXBlPEZpbGxTdHlsZT4oe1xuICB2YXJpYW50czogW1xuICAgIGZpbGxTdHlsZXMuJEJpdG1hcCxcbiAgICBmaWxsU3R5bGVzLiRGb2NhbEdyYWRpZW50LFxuICAgIGZpbGxTdHlsZXMuJExpbmVhckdyYWRpZW50LFxuICAgIGZpbGxTdHlsZXMuJFJhZGlhbEdyYWRpZW50LFxuICAgIGZpbGxTdHlsZXMuJFNvbGlkLFxuICBdLFxuICB0YWc6IFwidHlwZVwiLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint32_1 = require(\"kryo/builtins/uint32\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst shape_styles_1 = require(\"../shape-styles\");\nconst vector_2d_1 = require(\"../vector-2d\");\nconst _type_1 = require(\"./_type\");\nexports.$StyleChange = new document_1.DocumentType({\n    properties: {\n        type: {\n            type: new literal_1.LiteralType({\n                type: _type_1.$ShapeRecordType,\n                value: _type_1.ShapeRecordType.StyleChange,\n            }),\n        },\n        moveTo: { type: vector_2d_1.$Vector2D, optional: true },\n        leftFill: { type: uint32_1.$Uint32, optional: true },\n        rightFill: { type: uint32_1.$Uint32, optional: true },\n        lineStyle: { type: uint32_1.$Uint32, optional: true },\n        newStyles: { type: shape_styles_1.$ShapeStyles, optional: true },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3Jkcy9zdHlsZS1jaGFuZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsa0RBQTREO0FBQzVELDRDQUFtRDtBQUNuRCxtQ0FBNEQ7QUFXL0MsUUFBQSxZQUFZLEdBQWdDLElBQUksdUJBQVksQ0FBYztJQUNyRixVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUU7WUFDSixJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDO2dCQUNwQixJQUFJLEVBQUUsd0JBQWdCO2dCQUN0QixLQUFLLEVBQUUsdUJBQWUsQ0FBQyxXQUEwQzthQUNsRSxDQUFDO1NBQ0g7UUFDRCxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQ3pDLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDekMsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUMxQyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQzFDLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSwyQkFBWSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7S0FDaEQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJzaGFwZS1yZWNvcmRzL3N0eWxlLWNoYW5nZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50MzIgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MzJcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50MzIgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRTaGFwZVN0eWxlcywgU2hhcGVTdHlsZXMgfSBmcm9tIFwiLi4vc2hhcGUtc3R5bGVzXCI7XG5pbXBvcnQgeyAkVmVjdG9yMkQsIFZlY3RvcjJEIH0gZnJvbSBcIi4uL3ZlY3Rvci0yZFwiO1xuaW1wb3J0IHsgJFNoYXBlUmVjb3JkVHlwZSwgU2hhcGVSZWNvcmRUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdHlsZUNoYW5nZSB7XG4gIHR5cGU6IFNoYXBlUmVjb3JkVHlwZS5TdHlsZUNoYW5nZTtcbiAgbW92ZVRvPzogVmVjdG9yMkQ7XG4gIGxlZnRGaWxsPzogVWludDMyO1xuICByaWdodEZpbGw/OiBVaW50MzI7XG4gIGxpbmVTdHlsZT86IFVpbnQzMjtcbiAgbmV3U3R5bGVzPzogU2hhcGVTdHlsZXM7XG59XG5cbmV4cG9ydCBjb25zdCAkU3R5bGVDaGFuZ2U6IERvY3VtZW50SW9UeXBlPFN0eWxlQ2hhbmdlPiA9IG5ldyBEb2N1bWVudFR5cGU8U3R5bGVDaGFuZ2U+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHtcbiAgICAgIHR5cGU6IG5ldyBMaXRlcmFsVHlwZSh7XG4gICAgICAgIHR5cGU6ICRTaGFwZVJlY29yZFR5cGUsXG4gICAgICAgIHZhbHVlOiBTaGFwZVJlY29yZFR5cGUuU3R5bGVDaGFuZ2UgYXMgU2hhcGVSZWNvcmRUeXBlLlN0eWxlQ2hhbmdlLFxuICAgICAgfSksXG4gICAgfSxcbiAgICBtb3ZlVG86IHt0eXBlOiAkVmVjdG9yMkQsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBsZWZ0RmlsbDoge3R5cGU6ICRVaW50MzIsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICByaWdodEZpbGw6IHt0eXBlOiAkVWludDMyLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgbGluZVN0eWxlOiB7dHlwZTogJFVpbnQzMiwgb3B0aW9uYWw6IHRydWV9LFxuICAgIG5ld1N0eWxlczoge3R5cGU6ICRTaGFwZVN0eWxlcywgb3B0aW9uYWw6IHRydWV9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst fill_style_1 = require(\"./fill-style\");\nconst line_style_1 = require(\"./line-style\");\nexports.$ShapeStyles = new document_1.DocumentType({\n    properties: {\n        fill: {\n            type: new array_1.ArrayType({ itemType: fill_style_1.$FillStyle, maxLength: Infinity }),\n        },\n        line: {\n            type: new array_1.ArrayType({ itemType: line_style_1.$LineStyle, maxLength: Infinity }),\n        },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFDbkUsNkNBQXFEO0FBQ3JELDZDQUFxRDtBQU94QyxRQUFBLFlBQVksR0FBZ0MsSUFBSSx1QkFBWSxDQUFjO0lBQ3JGLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRTtZQUNKLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsdUJBQVUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUM7U0FDakU7UUFDRCxJQUFJLEVBQUU7WUFDSixJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLHVCQUFVLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDO1NBQ2pFO0tBQ0Y7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJzaGFwZS1zdHlsZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyAkRmlsbFN0eWxlLCBGaWxsU3R5bGUgfSBmcm9tIFwiLi9maWxsLXN0eWxlXCI7XG5pbXBvcnQgeyAkTGluZVN0eWxlLCBMaW5lU3R5bGUgfSBmcm9tIFwiLi9saW5lLXN0eWxlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2hhcGVTdHlsZXMge1xuICBmaWxsOiBGaWxsU3R5bGVbXTtcbiAgbGluZTogTGluZVN0eWxlW107XG59XG5cbmV4cG9ydCBjb25zdCAkU2hhcGVTdHlsZXM6IERvY3VtZW50SW9UeXBlPFNoYXBlU3R5bGVzPiA9IG5ldyBEb2N1bWVudFR5cGU8U2hhcGVTdHlsZXM+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGZpbGw6IHtcbiAgICAgIHR5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkRmlsbFN0eWxlLCBtYXhMZW5ndGg6IEluZmluaXR5fSksXG4gICAgfSxcbiAgICBsaW5lOiB7XG4gICAgICB0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJExpbmVTdHlsZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pLFxuICAgIH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar csm_text_settings_1 = require(\"./csm-text-settings\");\nexports.$CsmTextSettings = csm_text_settings_1.$CsmTextSettings;\nvar define_binary_data_1 = require(\"./define-binary-data\");\nexports.$DefineBinaryData = define_binary_data_1.$DefineBinaryData;\nvar define_bitmap_1 = require(\"./define-bitmap\");\nexports.$DefineBitmap = define_bitmap_1.$DefineBitmap;\nvar define_button_1 = require(\"./define-button\");\nexports.$DefineButton = define_button_1.$DefineButton;\nvar define_cff_font_1 = require(\"./define-cff-font\");\nexports.$DefineCffFont = define_cff_font_1.$DefineCffFont;\nvar define_dynamic_text_1 = require(\"./define-dynamic-text\");\nexports.$DefineDynamicText = define_dynamic_text_1.$DefineDynamicText;\nvar define_font_1 = require(\"./define-font\");\nexports.$DefineFont = define_font_1.$DefineFont;\nvar define_font_align_zones_1 = require(\"./define-font-align-zones\");\nexports.$DefineFontAlignZones = define_font_align_zones_1.$DefineFontAlignZones;\nvar define_font_info_1 = require(\"./define-font-info\");\nexports.$DefineFontInfo = define_font_info_1.$DefineFontInfo;\nvar define_font_name_1 = require(\"./define-font-name\");\nexports.$DefineFontName = define_font_name_1.$DefineFontName;\nvar define_jpeg_tables_1 = require(\"./define-jpeg-tables\");\nexports.$DefineJpegTables = define_jpeg_tables_1.$DefineJpegTables;\nvar define_morph_shape_1 = require(\"./define-morph-shape\");\nexports.$DefineMorphShape = define_morph_shape_1.$DefineMorphShape;\nvar define_partial_font_1 = require(\"./define-partial-font\");\nexports.$DefinePartialFont = define_partial_font_1.$DefinePartialFont;\nvar define_scene_and_frame_label_data_1 = require(\"./define-scene-and-frame-label-data\");\nexports.$DefineSceneAndFrameLabelData = define_scene_and_frame_label_data_1.$DefineSceneAndFrameLabelData;\nvar define_shape_1 = require(\"./define-shape\");\nexports.$DefineShape = define_shape_1.$DefineShape;\nvar define_sound_1 = require(\"./define-sound\");\nexports.$DefineSound = define_sound_1.$DefineSound;\nvar define_sprite_1 = require(\"./define-sprite\");\nexports.$DefineSprite = define_sprite_1.$DefineSprite;\nvar define_text_1 = require(\"./define-text\");\nexports.$DefineText = define_text_1.$DefineText;\nvar do_action_1 = require(\"./do-action\");\nexports.$DoAction = do_action_1.$DoAction;\nvar do_init_action_1 = require(\"./do-init-action\");\nexports.$DoInitAction = do_init_action_1.$DoInitAction;\nvar enable_debugger_1 = require(\"./enable-debugger\");\nexports.$EnableDebugger = enable_debugger_1.$EnableDebugger;\nvar export_assets_1 = require(\"./export-assets\");\nexports.$ExportAssets = export_assets_1.$ExportAssets;\nvar file_attributes_1 = require(\"./file-attributes\");\nexports.$FileAttributes = file_attributes_1.$FileAttributes;\nvar frame_label_1 = require(\"./frame-label\");\nexports.$FrameLabel = frame_label_1.$FrameLabel;\nvar import_assets_1 = require(\"./import-assets\");\nexports.$ImportAssets = import_assets_1.$ImportAssets;\nvar metadata_1 = require(\"./metadata\");\nexports.$Metadata = metadata_1.$Metadata;\nvar place_object_1 = require(\"./place-object\");\nexports.$PlaceObject = place_object_1.$PlaceObject;\nvar remove_object_1 = require(\"./remove-object\");\nexports.$RemoveObject = remove_object_1.$RemoveObject;\nvar set_background_color_1 = require(\"./set-background-color\");\nexports.$SetBackgroundColor = set_background_color_1.$SetBackgroundColor;\nvar show_frame_1 = require(\"./show-frame\");\nexports.$ShowFrame = show_frame_1.$ShowFrame;\nvar sound_stream_block_1 = require(\"./sound-stream-block\");\nexports.$SoundStreamBlock = sound_stream_block_1.$SoundStreamBlock;\nvar sound_stream_head_1 = require(\"./sound-stream-head\");\nexports.$SoundStreamHead = sound_stream_head_1.$SoundStreamHead;\nvar telemetry_1 = require(\"./telemetry\");\nexports.$Telemetry = telemetry_1.$Telemetry;\nvar unknown_1 = require(\"./unknown\");\nexports.$Unknown = unknown_1.$Unknown;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlEQUF3RTtBQUEvRCwrQ0FBQSxnQkFBZ0IsQ0FBQTtBQUN6QiwyREFBMkU7QUFBbEUsaURBQUEsaUJBQWlCLENBQUE7QUFDMUIsaURBQThEO0FBQXJELHdDQUFBLGFBQWEsQ0FBQTtBQUN0QixpREFBOEQ7QUFBckQsd0NBQUEsYUFBYSxDQUFBO0FBQ3RCLHFEQUFrRTtBQUF6RCwyQ0FBQSxjQUFjLENBQUE7QUFDdkIsNkRBQThFO0FBQXJFLG1EQUFBLGtCQUFrQixDQUFBO0FBQzNCLDZDQUF3RDtBQUEvQyxvQ0FBQSxXQUFXLENBQUE7QUFDcEIscUVBQXdGO0FBQS9FLDBEQUFBLHFCQUFxQixDQUFBO0FBQzlCLHVEQUFxRTtBQUE1RCw2Q0FBQSxlQUFlLENBQUE7QUFDeEIsdURBQXFFO0FBQTVELDZDQUFBLGVBQWUsQ0FBQTtBQUN4QiwyREFBMkU7QUFBbEUsaURBQUEsaUJBQWlCLENBQUE7QUFDMUIsMkRBQTJFO0FBQWxFLGlEQUFBLGlCQUFpQixDQUFBO0FBQzFCLDZEQUE4RTtBQUFyRSxtREFBQSxrQkFBa0IsQ0FBQTtBQUMzQix5RkFBa0g7QUFBekcsNEVBQUEsNkJBQTZCLENBQUE7QUFDdEMsK0NBQTJEO0FBQWxELHNDQUFBLFlBQVksQ0FBQTtBQUNyQiwrQ0FBMkQ7QUFBbEQsc0NBQUEsWUFBWSxDQUFBO0FBQ3JCLGlEQUE4RDtBQUFyRCx3Q0FBQSxhQUFhLENBQUE7QUFDdEIsNkNBQXdEO0FBQS9DLG9DQUFBLFdBQVcsQ0FBQTtBQUNwQix5Q0FBa0Q7QUFBekMsZ0NBQUEsU0FBUyxDQUFBO0FBQ2xCLG1EQUErRDtBQUF0RCx5Q0FBQSxhQUFhLENBQUE7QUFDdEIscURBQW9FO0FBQTNELDRDQUFBLGVBQWUsQ0FBQTtBQUN4QixpREFBOEQ7QUFBckQsd0NBQUEsYUFBYSxDQUFBO0FBQ3RCLHFEQUFvRTtBQUEzRCw0Q0FBQSxlQUFlLENBQUE7QUFDeEIsNkNBQXdEO0FBQS9DLG9DQUFBLFdBQVcsQ0FBQTtBQUNwQixpREFBOEQ7QUFBckQsd0NBQUEsYUFBYSxDQUFBO0FBQ3RCLHVDQUFpRDtBQUF4QywrQkFBQSxTQUFTLENBQUE7QUFDbEIsK0NBQTJEO0FBQWxELHNDQUFBLFlBQVksQ0FBQTtBQUNyQixpREFBOEQ7QUFBckQsd0NBQUEsYUFBYSxDQUFBO0FBQ3RCLCtEQUFpRjtBQUF4RSxxREFBQSxtQkFBbUIsQ0FBQTtBQUM1QiwyQ0FBcUQ7QUFBNUMsa0NBQUEsVUFBVSxDQUFBO0FBQ25CLDJEQUEyRTtBQUFsRSxpREFBQSxpQkFBaUIsQ0FBQTtBQUMxQix5REFBd0U7QUFBL0QsK0NBQUEsZ0JBQWdCLENBQUE7QUFDekIseUNBQW9EO0FBQTNDLGlDQUFBLFVBQVUsQ0FBQTtBQUNuQixxQ0FBOEM7QUFBckMsNkJBQUEsUUFBUSxDQUFBIiwiZmlsZSI6InRhZ3MvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyAkQ3NtVGV4dFNldHRpbmdzLCBDc21UZXh0U2V0dGluZ3MgfSBmcm9tIFwiLi9jc20tdGV4dC1zZXR0aW5nc1wiO1xuZXhwb3J0IHsgJERlZmluZUJpbmFyeURhdGEsIERlZmluZUJpbmFyeURhdGEgfSBmcm9tIFwiLi9kZWZpbmUtYmluYXJ5LWRhdGFcIjtcbmV4cG9ydCB7ICREZWZpbmVCaXRtYXAsIERlZmluZUJpdG1hcCB9IGZyb20gXCIuL2RlZmluZS1iaXRtYXBcIjtcbmV4cG9ydCB7ICREZWZpbmVCdXR0b24sIERlZmluZUJ1dHRvbiB9IGZyb20gXCIuL2RlZmluZS1idXR0b25cIjtcbmV4cG9ydCB7ICREZWZpbmVDZmZGb250LCBEZWZpbmVDZmZGb250IH0gZnJvbSBcIi4vZGVmaW5lLWNmZi1mb250XCI7XG5leHBvcnQgeyAkRGVmaW5lRHluYW1pY1RleHQsIERlZmluZUR5bmFtaWNUZXh0IH0gZnJvbSBcIi4vZGVmaW5lLWR5bmFtaWMtdGV4dFwiO1xuZXhwb3J0IHsgJERlZmluZUZvbnQsIERlZmluZUZvbnQgfSBmcm9tIFwiLi9kZWZpbmUtZm9udFwiO1xuZXhwb3J0IHsgJERlZmluZUZvbnRBbGlnblpvbmVzLCBEZWZpbmVGb250QWxpZ25ab25lcyB9IGZyb20gXCIuL2RlZmluZS1mb250LWFsaWduLXpvbmVzXCI7XG5leHBvcnQgeyAkRGVmaW5lRm9udEluZm8sIERlZmluZUZvbnRJbmZvIH0gZnJvbSBcIi4vZGVmaW5lLWZvbnQtaW5mb1wiO1xuZXhwb3J0IHsgJERlZmluZUZvbnROYW1lLCBEZWZpbmVGb250TmFtZSB9IGZyb20gXCIuL2RlZmluZS1mb250LW5hbWVcIjtcbmV4cG9ydCB7ICREZWZpbmVKcGVnVGFibGVzLCBEZWZpbmVKcGVnVGFibGVzIH0gZnJvbSBcIi4vZGVmaW5lLWpwZWctdGFibGVzXCI7XG5leHBvcnQgeyAkRGVmaW5lTW9ycGhTaGFwZSwgRGVmaW5lTW9ycGhTaGFwZSB9IGZyb20gXCIuL2RlZmluZS1tb3JwaC1zaGFwZVwiO1xuZXhwb3J0IHsgJERlZmluZVBhcnRpYWxGb250LCBEZWZpbmVQYXJ0aWFsRm9udCB9IGZyb20gXCIuL2RlZmluZS1wYXJ0aWFsLWZvbnRcIjtcbmV4cG9ydCB7ICREZWZpbmVTY2VuZUFuZEZyYW1lTGFiZWxEYXRhLCBEZWZpbmVTY2VuZUFuZEZyYW1lTGFiZWxEYXRhIH0gZnJvbSBcIi4vZGVmaW5lLXNjZW5lLWFuZC1mcmFtZS1sYWJlbC1kYXRhXCI7XG5leHBvcnQgeyAkRGVmaW5lU2hhcGUsIERlZmluZVNoYXBlIH0gZnJvbSBcIi4vZGVmaW5lLXNoYXBlXCI7XG5leHBvcnQgeyAkRGVmaW5lU291bmQsIERlZmluZVNvdW5kIH0gZnJvbSBcIi4vZGVmaW5lLXNvdW5kXCI7XG5leHBvcnQgeyAkRGVmaW5lU3ByaXRlLCBEZWZpbmVTcHJpdGUgfSBmcm9tIFwiLi9kZWZpbmUtc3ByaXRlXCI7XG5leHBvcnQgeyAkRGVmaW5lVGV4dCwgRGVmaW5lVGV4dCB9IGZyb20gXCIuL2RlZmluZS10ZXh0XCI7XG5leHBvcnQgeyAkRG9BY3Rpb24sIERvQWN0aW9uIH0gZnJvbSBcIi4vZG8tYWN0aW9uXCI7XG5leHBvcnQgeyAkRG9Jbml0QWN0aW9uLCBEb0luaXRBY3Rpb24gfSBmcm9tIFwiLi9kby1pbml0LWFjdGlvblwiO1xuZXhwb3J0IHsgJEVuYWJsZURlYnVnZ2VyLCBFbmFibGVEZWJ1Z2dlciB9IGZyb20gXCIuL2VuYWJsZS1kZWJ1Z2dlclwiO1xuZXhwb3J0IHsgJEV4cG9ydEFzc2V0cywgRXhwb3J0QXNzZXRzIH0gZnJvbSBcIi4vZXhwb3J0LWFzc2V0c1wiO1xuZXhwb3J0IHsgJEZpbGVBdHRyaWJ1dGVzLCBGaWxlQXR0cmlidXRlcyB9IGZyb20gXCIuL2ZpbGUtYXR0cmlidXRlc1wiO1xuZXhwb3J0IHsgJEZyYW1lTGFiZWwsIEZyYW1lTGFiZWwgfSBmcm9tIFwiLi9mcmFtZS1sYWJlbFwiO1xuZXhwb3J0IHsgJEltcG9ydEFzc2V0cywgSW1wb3J0QXNzZXRzIH0gZnJvbSBcIi4vaW1wb3J0LWFzc2V0c1wiO1xuZXhwb3J0IHsgJE1ldGFkYXRhLCBNZXRhZGF0YSB9IGZyb20gXCIuL21ldGFkYXRhXCI7XG5leHBvcnQgeyAkUGxhY2VPYmplY3QsIFBsYWNlT2JqZWN0IH0gZnJvbSBcIi4vcGxhY2Utb2JqZWN0XCI7XG5leHBvcnQgeyAkUmVtb3ZlT2JqZWN0LCBSZW1vdmVPYmplY3QgfSBmcm9tIFwiLi9yZW1vdmUtb2JqZWN0XCI7XG5leHBvcnQgeyAkU2V0QmFja2dyb3VuZENvbG9yLCBTZXRCYWNrZ3JvdW5kQ29sb3IgfSBmcm9tIFwiLi9zZXQtYmFja2dyb3VuZC1jb2xvclwiO1xuZXhwb3J0IHsgJFNob3dGcmFtZSwgU2hvd0ZyYW1lIH0gZnJvbSBcIi4vc2hvdy1mcmFtZVwiO1xuZXhwb3J0IHsgJFNvdW5kU3RyZWFtQmxvY2ssIFNvdW5kU3RyZWFtQmxvY2sgfSBmcm9tIFwiLi9zb3VuZC1zdHJlYW0tYmxvY2tcIjtcbmV4cG9ydCB7ICRTb3VuZFN0cmVhbUhlYWQsIFNvdW5kU3RyZWFtSGVhZCB9IGZyb20gXCIuL3NvdW5kLXN0cmVhbS1oZWFkXCI7XG5leHBvcnQgeyAkVGVsZW1ldHJ5LCBUZWxlbWV0cnkgfSBmcm9tIFwiLi90ZWxlbWV0cnlcIjtcbmV4cG9ydCB7ICRVbmtub3duLCBVbmtub3duIH0gZnJvbSBcIi4vdW5rbm93blwiO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar GridFitting;\n(function (GridFitting) {\n    GridFitting[GridFitting[\"None\"] = 0] = \"None\";\n    GridFitting[GridFitting[\"Pixel\"] = 1] = \"Pixel\";\n    GridFitting[GridFitting[\"SubPixel\"] = 2] = \"SubPixel\";\n})(GridFitting = exports.GridFitting || (exports.GridFitting = {}));\nexports.$GridFitting = new ts_enum_1.TsEnumType({\n    enum: GridFitting,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9ncmlkLWZpdHRpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsZ0RBQWdEO0FBRWhELElBQVksV0FJWDtBQUpELFdBQVksV0FBVztJQUNyQiw2Q0FBSSxDQUFBO0lBQ0osK0NBQUssQ0FBQTtJQUNMLHFEQUFRLENBQUE7QUFDVixDQUFDLEVBSlcsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFJdEI7QUFFWSxRQUFBLFlBQVksR0FBNEIsSUFBSSxvQkFBVSxDQUFjO0lBQy9FLElBQUksRUFBRSxXQUFXO0lBQ2pCLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRleHQvZ3JpZC1maXR0aW5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gR3JpZEZpdHRpbmcge1xuICBOb25lLFxuICBQaXhlbCxcbiAgU3ViUGl4ZWwsXG59XG5cbmV4cG9ydCBjb25zdCAkR3JpZEZpdHRpbmc6IFRzRW51bVR5cGU8R3JpZEZpdHRpbmc+ID0gbmV3IFRzRW51bVR5cGU8R3JpZEZpdHRpbmc+KHtcbiAgZW51bTogR3JpZEZpdHRpbmcsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar TextRenderer;\n(function (TextRenderer) {\n    TextRenderer[TextRenderer[\"Normal\"] = 0] = \"Normal\";\n    TextRenderer[TextRenderer[\"Advanced\"] = 1] = \"Advanced\";\n})(TextRenderer = exports.TextRenderer || (exports.TextRenderer = {}));\nexports.$TextRenderer = new ts_enum_1.TsEnumType({\n    enum: TextRenderer,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC90ZXh0LXJlbmRlcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGdEQUFnRDtBQUVoRCxJQUFZLFlBR1g7QUFIRCxXQUFZLFlBQVk7SUFDdEIsbURBQU0sQ0FBQTtJQUNOLHVEQUFRLENBQUE7QUFDVixDQUFDLEVBSFcsWUFBWSxHQUFaLG9CQUFZLEtBQVosb0JBQVksUUFHdkI7QUFFWSxRQUFBLGFBQWEsR0FBNkIsSUFBSSxvQkFBVSxDQUFlO0lBQ2xGLElBQUksRUFBRSxZQUFZO0lBQ2xCLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRleHQvdGV4dC1yZW5kZXJlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIFRleHRSZW5kZXJlciB7XG4gIE5vcm1hbCxcbiAgQWR2YW5jZWQsXG59XG5cbmV4cG9ydCBjb25zdCAkVGV4dFJlbmRlcmVyOiBUc0VudW1UeXBlPFRleHRSZW5kZXJlcj4gPSBuZXcgVHNFbnVtVHlwZTxUZXh0UmVuZGVyZXI+KHtcbiAgZW51bTogVGV4dFJlbmRlcmVyLFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sint16_1 = require(\"kryo/builtins/sint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst color_transform_1 = require(\"./color-transform\");\nconst sfixed8p8_1 = require(\"./fixed-point/sfixed8p8\");\n// tslint:disable-next-line:max-line-length\nexports.$ColorTransformWithAlpha = new document_1.DocumentType({\n    properties: {\n        redMult: color_transform_1.$ColorTransform.properties.redMult,\n        greenMult: color_transform_1.$ColorTransform.properties.greenMult,\n        blueMult: color_transform_1.$ColorTransform.properties.blueMult,\n        alphaMult: { type: sfixed8p8_1.Sfixed8P8 },\n        redAdd: color_transform_1.$ColorTransform.properties.redAdd,\n        greenAdd: color_transform_1.$ColorTransform.properties.greenAdd,\n        blueAdd: color_transform_1.$ColorTransform.properties.blueAdd,\n        alphaAdd: { type: sint16_1.$Sint16 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29sb3ItdHJhbnNmb3JtLXdpdGgtYWxwaGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUVuRSx1REFBb0U7QUFDcEUsdURBQW9EO0FBT3BELDJDQUEyQztBQUM5QixRQUFBLHdCQUF3QixHQUE0QyxJQUFJLHVCQUFZLENBQTBCO0lBQ3pILFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxpQ0FBZSxDQUFDLFVBQVUsQ0FBQyxPQUFPO1FBQzNDLFNBQVMsRUFBRSxpQ0FBZSxDQUFDLFVBQVUsQ0FBQyxTQUFTO1FBQy9DLFFBQVEsRUFBRSxpQ0FBZSxDQUFDLFVBQVUsQ0FBQyxRQUFRO1FBQzdDLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxxQkFBUyxFQUFDO1FBQzVCLE1BQU0sRUFBRSxpQ0FBZSxDQUFDLFVBQVUsQ0FBQyxNQUFNO1FBQ3pDLFFBQVEsRUFBRSxpQ0FBZSxDQUFDLFVBQVUsQ0FBQyxRQUFRO1FBQzdDLE9BQU8sRUFBRSxpQ0FBZSxDQUFDLFVBQVUsQ0FBQyxPQUFPO1FBQzNDLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO0tBQzFCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiY29sb3ItdHJhbnNmb3JtLXdpdGgtYWxwaGEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkU2ludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvc2ludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IFNpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJENvbG9yVHJhbnNmb3JtLCBDb2xvclRyYW5zZm9ybSB9IGZyb20gXCIuL2NvbG9yLXRyYW5zZm9ybVwiO1xuaW1wb3J0IHsgU2ZpeGVkOFA4IH0gZnJvbSBcIi4vZml4ZWQtcG9pbnQvc2ZpeGVkOHA4XCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29sb3JUcmFuc2Zvcm1XaXRoQWxwaGEgZXh0ZW5kcyBDb2xvclRyYW5zZm9ybSB7XG4gIGFscGhhTXVsdDogU2ZpeGVkOFA4O1xuICBhbHBoYUFkZDogU2ludDE2O1xufVxuXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bWF4LWxpbmUtbGVuZ3RoXG5leHBvcnQgY29uc3QgJENvbG9yVHJhbnNmb3JtV2l0aEFscGhhOiBEb2N1bWVudElvVHlwZTxDb2xvclRyYW5zZm9ybVdpdGhBbHBoYT4gPSBuZXcgRG9jdW1lbnRUeXBlPENvbG9yVHJhbnNmb3JtV2l0aEFscGhhPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICByZWRNdWx0OiAkQ29sb3JUcmFuc2Zvcm0ucHJvcGVydGllcy5yZWRNdWx0LFxuICAgIGdyZWVuTXVsdDogJENvbG9yVHJhbnNmb3JtLnByb3BlcnRpZXMuZ3JlZW5NdWx0LFxuICAgIGJsdWVNdWx0OiAkQ29sb3JUcmFuc2Zvcm0ucHJvcGVydGllcy5ibHVlTXVsdCxcbiAgICBhbHBoYU11bHQ6IHt0eXBlOiBTZml4ZWQ4UDh9LFxuICAgIHJlZEFkZDogJENvbG9yVHJhbnNmb3JtLnByb3BlcnRpZXMucmVkQWRkLFxuICAgIGdyZWVuQWRkOiAkQ29sb3JUcmFuc2Zvcm0ucHJvcGVydGllcy5ncmVlbkFkZCxcbiAgICBibHVlQWRkOiAkQ29sb3JUcmFuc2Zvcm0ucHJvcGVydGllcy5ibHVlQWRkLFxuICAgIGFscGhhQWRkOiB7dHlwZTogJFNpbnQxNn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tagged_union_1 = require(\"kryo/types/tagged-union\");\nconst filters = __importStar(require(\"./filters/index\"));\nexports.$Filter = new tagged_union_1.TaggedUnionType({\n    variants: [\n        filters.$Bevel,\n        filters.$Blur,\n        filters.$ColorMatrix,\n        filters.$Convolution,\n        filters.$DropShadow,\n        filters.$Glow,\n        filters.$GradientBevel,\n        filters.$GradientGlow,\n    ],\n    tag: \"filter\",\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLDBEQUEwRDtBQUMxRCx5REFBMkM7QUFZOUIsUUFBQSxPQUFPLEdBQTRCLElBQUksOEJBQWUsQ0FBUztJQUMxRSxRQUFRLEVBQUU7UUFDUixPQUFPLENBQUMsTUFBTTtRQUNkLE9BQU8sQ0FBQyxLQUFLO1FBQ2IsT0FBTyxDQUFDLFlBQVk7UUFDcEIsT0FBTyxDQUFDLFlBQVk7UUFDcEIsT0FBTyxDQUFDLFdBQVc7UUFDbkIsT0FBTyxDQUFDLEtBQUs7UUFDYixPQUFPLENBQUMsY0FBYztRQUN0QixPQUFPLENBQUMsYUFBYTtLQUN0QjtJQUNELEdBQUcsRUFBRSxRQUFRO0NBQ2QsQ0FBQyxDQUFDIiwiZmlsZSI6ImZpbHRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhZ2dlZFVuaW9uVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RhZ2dlZC11bmlvblwiO1xuaW1wb3J0ICogYXMgZmlsdGVycyBmcm9tIFwiLi9maWx0ZXJzL2luZGV4XCI7XG5cbmV4cG9ydCB0eXBlIEZpbHRlciA9XG4gIGZpbHRlcnMuQmV2ZWxcbiAgfCBmaWx0ZXJzLkJsdXJcbiAgfCBmaWx0ZXJzLkNvbG9yTWF0cml4XG4gIHwgZmlsdGVycy5Db252b2x1dGlvblxuICB8IGZpbHRlcnMuRHJvcFNoYWRvd1xuICB8IGZpbHRlcnMuR2xvd1xuICB8IGZpbHRlcnMuR3JhZGllbnRCZXZlbFxuICB8IGZpbHRlcnMuR3JhZGllbnRHbG93O1xuXG5leHBvcnQgY29uc3QgJEZpbHRlcjogVGFnZ2VkVW5pb25UeXBlPEZpbHRlcj4gPSBuZXcgVGFnZ2VkVW5pb25UeXBlPEZpbHRlcj4oe1xuICB2YXJpYW50czogW1xuICAgIGZpbHRlcnMuJEJldmVsLFxuICAgIGZpbHRlcnMuJEJsdXIsXG4gICAgZmlsdGVycy4kQ29sb3JNYXRyaXgsXG4gICAgZmlsdGVycy4kQ29udm9sdXRpb24sXG4gICAgZmlsdGVycy4kRHJvcFNoYWRvdyxcbiAgICBmaWx0ZXJzLiRHbG93LFxuICAgIGZpbHRlcnMuJEdyYWRpZW50QmV2ZWwsXG4gICAgZmlsdGVycy4kR3JhZGllbnRHbG93LFxuICBdLFxuICB0YWc6IFwiZmlsdGVyXCIsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar TextAlignment;\n(function (TextAlignment) {\n    TextAlignment[TextAlignment[\"Left\"] = 0] = \"Left\";\n    TextAlignment[TextAlignment[\"Right\"] = 1] = \"Right\";\n    TextAlignment[TextAlignment[\"Center\"] = 2] = \"Center\";\n    TextAlignment[TextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(TextAlignment = exports.TextAlignment || (exports.TextAlignment = {}));\nexports.$TextAlignment = new ts_enum_1.TsEnumType({\n    enum: TextAlignment,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC90ZXh0LWFsaWdubWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxhQUtYO0FBTEQsV0FBWSxhQUFhO0lBQ3ZCLGlEQUFJLENBQUE7SUFDSixtREFBSyxDQUFBO0lBQ0wscURBQU0sQ0FBQTtJQUNOLHVEQUFPLENBQUE7QUFDVCxDQUFDLEVBTFcsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFLeEI7QUFFWSxRQUFBLGNBQWMsR0FBOEIsSUFBSSxvQkFBVSxDQUFnQjtJQUNyRixJQUFJLEVBQUUsYUFBYTtJQUNuQixVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXh0L3RleHQtYWxpZ25tZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gVGV4dEFsaWdubWVudCB7XG4gIExlZnQsXG4gIFJpZ2h0LFxuICBDZW50ZXIsXG4gIEp1c3RpZnksXG59XG5cbmV4cG9ydCBjb25zdCAkVGV4dEFsaWdubWVudDogVHNFbnVtVHlwZTxUZXh0QWxpZ25tZW50PiA9IG5ldyBUc0VudW1UeXBlPFRleHRBbGlnbm1lbnQ+KHtcbiAgZW51bTogVGV4dEFsaWdubWVudCxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst shape_record_1 = require(\"./shape-record\");\nexports.$Glyph = new document_1.DocumentType({\n    properties: {\n        records: { type: new array_1.ArrayType({ itemType: shape_record_1.$ShapeRecord, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZ2x5cGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxpREFBMkQ7QUFNOUMsUUFBQSxNQUFNLEdBQTBCLElBQUksdUJBQVksQ0FBUTtJQUNuRSxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLDJCQUFZLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDOUU7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJnbHlwaC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEFycmF5VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2FycmF5XCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7ICRTaGFwZVJlY29yZCwgU2hhcGVSZWNvcmQgfSBmcm9tIFwiLi9zaGFwZS1yZWNvcmRcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHbHlwaCB7XG4gIHJlY29yZHM6IFNoYXBlUmVjb3JkW107XG59XG5cbmV4cG9ydCBjb25zdCAkR2x5cGg6IERvY3VtZW50SW9UeXBlPEdseXBoPiA9IG5ldyBEb2N1bWVudFR5cGU8R2x5cGg+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHJlY29yZHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJFNoYXBlUmVjb3JkLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tagged_union_1 = require(\"kryo/types/tagged-union\");\nconst shape_records_1 = require(\"./shape-records\");\nexports.$ShapeRecord = new tagged_union_1.TaggedUnionType({\n    variants: [\n        shape_records_1.$CurvedEdge,\n        shape_records_1.$StraightEdge,\n        shape_records_1.$StyleChange,\n    ],\n    tag: \"type\",\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3JkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMERBQTBEO0FBQzFELG1EQUEyRTtBQVU5RCxRQUFBLFlBQVksR0FBaUMsSUFBSSw4QkFBZSxDQUFjO0lBQ3pGLFFBQVEsRUFBRTtRQUNSLDJCQUFXO1FBQ1gsNkJBQWE7UUFDYiw0QkFBWTtLQUNiO0lBQ0QsR0FBRyxFQUFFLE1BQU07Q0FDWixDQUFDLENBQUMiLCJmaWxlIjoic2hhcGUtcmVjb3JkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGFnZ2VkVW5pb25UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdGFnZ2VkLXVuaW9uXCI7XG5pbXBvcnQgeyAkQ3VydmVkRWRnZSwgJFN0cmFpZ2h0RWRnZSwgJFN0eWxlQ2hhbmdlIH0gZnJvbSBcIi4vc2hhcGUtcmVjb3Jkc1wiO1xuaW1wb3J0IHsgQ3VydmVkRWRnZSB9IGZyb20gXCIuL3NoYXBlLXJlY29yZHMvY3VydmVkLWVkZ2VcIjtcbmltcG9ydCB7IFN0cmFpZ2h0RWRnZSB9IGZyb20gXCIuL3NoYXBlLXJlY29yZHMvc3RyYWlnaHQtZWRnZVwiO1xuaW1wb3J0IHsgU3R5bGVDaGFuZ2UgfSBmcm9tIFwiLi9zaGFwZS1yZWNvcmRzL3N0eWxlLWNoYW5nZVwiO1xuXG5leHBvcnQgdHlwZSBTaGFwZVJlY29yZCA9XG4gIEN1cnZlZEVkZ2VcbiAgfCBTdHJhaWdodEVkZ2VcbiAgfCBTdHlsZUNoYW5nZTtcblxuZXhwb3J0IGNvbnN0ICRTaGFwZVJlY29yZDogVGFnZ2VkVW5pb25UeXBlPFNoYXBlUmVjb3JkPiA9IG5ldyBUYWdnZWRVbmlvblR5cGU8U2hhcGVSZWNvcmQ+KHtcbiAgdmFyaWFudHM6IFtcbiAgICAkQ3VydmVkRWRnZSxcbiAgICAkU3RyYWlnaHRFZGdlLFxuICAgICRTdHlsZUNoYW5nZSxcbiAgXSxcbiAgdGFnOiBcInR5cGVcIixcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar CsmTableHint;\n(function (CsmTableHint) {\n    CsmTableHint[CsmTableHint[\"Thin\"] = 0] = \"Thin\";\n    CsmTableHint[CsmTableHint[\"Medium\"] = 1] = \"Medium\";\n    CsmTableHint[CsmTableHint[\"Thick\"] = 2] = \"Thick\";\n})(CsmTableHint = exports.CsmTableHint || (exports.CsmTableHint = {}));\nexports.$CsmTableHint = new ts_enum_1.TsEnumType({\n    enum: CsmTableHint,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9jc20tdGFibGUtaGludC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxZQUlYO0FBSkQsV0FBWSxZQUFZO0lBQ3RCLCtDQUFJLENBQUE7SUFDSixtREFBTSxDQUFBO0lBQ04saURBQUssQ0FBQTtBQUNQLENBQUMsRUFKVyxZQUFZLEdBQVosb0JBQVksS0FBWixvQkFBWSxRQUl2QjtBQUVZLFFBQUEsYUFBYSxHQUE2QixJQUFJLG9CQUFVLENBQWU7SUFDbEYsSUFBSSxFQUFFLFlBQVk7SUFDbEIsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGV4dC9jc20tdGFibGUtaGludC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIENzbVRhYmxlSGludCB7XG4gIFRoaW4sXG4gIE1lZGl1bSxcbiAgVGhpY2ssXG59XG5cbmV4cG9ydCBjb25zdCAkQ3NtVGFibGVIaW50OiBUc0VudW1UeXBlPENzbVRhYmxlSGludD4gPSBuZXcgVHNFbnVtVHlwZTxDc21UYWJsZUhpbnQ+KHtcbiAgZW51bTogQ3NtVGFibGVIaW50LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint32_1 = require(\"kryo/builtins/uint32\");\nconst white_list_1 = require(\"kryo/types/white-list\");\nexports.$SoundRate = new white_list_1.WhiteListType({\n    itemType: uint32_1.$Uint32,\n    values: [5500, 11000, 22000, 44000],\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc291bmQvc291bmQtcmF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxzREFBc0Q7QUFJekMsUUFBQSxVQUFVLEdBQTZCLElBQUksMEJBQWEsQ0FBWTtJQUMvRSxRQUFRLEVBQUUsZ0JBQU87SUFDakIsTUFBTSxFQUFFLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDO0NBQ3BDLENBQUMsQ0FBQyIsImZpbGUiOiJzb3VuZC9zb3VuZC1yYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQzMiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQzMlwiO1xuaW1wb3J0IHsgV2hpdGVMaXN0VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3doaXRlLWxpc3RcIjtcblxuZXhwb3J0IHR5cGUgU291bmRSYXRlID0gNTUwMCB8IDExMDAwIHwgMjIwMDAgfCA0NDAwMDtcblxuZXhwb3J0IGNvbnN0ICRTb3VuZFJhdGU6IFdoaXRlTGlzdFR5cGU8U291bmRSYXRlPiA9IG5ldyBXaGl0ZUxpc3RUeXBlPFNvdW5kUmF0ZT4oe1xuICBpdGVtVHlwZTogJFVpbnQzMixcbiAgdmFsdWVzOiBbNTUwMCwgMTEwMDAsIDIyMDAwLCA0NDAwMF0sXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint32_1 = require(\"kryo/builtins/uint32\");\nconst white_list_1 = require(\"kryo/types/white-list\");\nexports.$SoundSize = new white_list_1.WhiteListType({\n    itemType: uint32_1.$Uint32,\n    values: [8, 16],\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc291bmQvc291bmQtc2l6ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxzREFBc0Q7QUFJekMsUUFBQSxVQUFVLEdBQTZCLElBQUksMEJBQWEsQ0FBWTtJQUMvRSxRQUFRLEVBQUUsZ0JBQU87SUFDakIsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQztDQUNoQixDQUFDLENBQUMiLCJmaWxlIjoic291bmQvc291bmQtc2l6ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50MzIgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MzJcIjtcbmltcG9ydCB7IFdoaXRlTGlzdFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy93aGl0ZS1saXN0XCI7XG5cbmV4cG9ydCB0eXBlIFNvdW5kU2l6ZSA9IDggfCAxNjtcblxuZXhwb3J0IGNvbnN0ICRTb3VuZFNpemU6IFdoaXRlTGlzdFR5cGU8U291bmRTaXplPiA9IG5ldyBXaGl0ZUxpc3RUeXBlPFNvdW5kU2l6ZT4oe1xuICBpdGVtVHlwZTogJFVpbnQzMixcbiAgdmFsdWVzOiBbOCwgMTZdLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst ucs2_string_1 = require(\"kryo/types/ucs2-string\");\nexports.$NamedId = new document_1.DocumentType({\n    properties: {\n        id: { type: uint16_1.$Uint16 },\n        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbmFtZWQtaWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSx3REFBd0Q7QUFRM0MsUUFBQSxRQUFRLEdBQTRCLElBQUksdUJBQVksQ0FBVTtJQUN6RSxVQUFVLEVBQUU7UUFDVixFQUFFLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUNuQixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSw0QkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDeEQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJuYW1lZC1pZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgVWNzMlN0cmluZ1R5cGUgfSBmcm9tIFwia3J5by90eXBlcy91Y3MyLXN0cmluZ1wiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmFtZWRJZCB7XG4gIGlkOiBVaW50MTY7XG4gIG5hbWU6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0ICROYW1lZElkOiBEb2N1bWVudElvVHlwZTxOYW1lZElkPiA9IG5ldyBEb2N1bWVudFR5cGU8TmFtZWRJZD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgaWQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBuYW1lOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst swf_tree_1 = require(\"swf-tree\");\nconst fill_style_1 = require(\"./fill-style\");\nconst line_style_1 = require(\"./line-style\");\nconst path_1 = require(\"./path\");\n/**\n * Converts a space-optimized shape definition to a list of simpler paths for easier processing/rendering\n */\nfunction decodeSwfShape(tag) {\n    const converter = new SwfShapeDecoder(tag.shape.initialStyles.fill, tag.shape.initialStyles.line);\n    for (const record of tag.shape.records) {\n        switch (record.type) {\n            case swf_tree_1.ShapeRecordType.CurvedEdge:\n                converter.applyCurvedEdge(record);\n                break;\n            case swf_tree_1.ShapeRecordType.StraightEdge:\n                converter.applyStraightEdge(record);\n                break;\n            case swf_tree_1.ShapeRecordType.StyleChange:\n                converter.applyStyleChange(record);\n                break;\n            default:\n                throw new incident_1.Incident(\"UnreachableCode\");\n        }\n    }\n    return converter.getShape();\n}\nexports.decodeSwfShape = decodeSwfShape;\nvar SegmentType;\n(function (SegmentType) {\n    SegmentType[SegmentType[\"Straight\"] = 0] = \"Straight\";\n    SegmentType[SegmentType[\"Curved\"] = 1] = \"Curved\";\n})(SegmentType || (SegmentType = {}));\nfunction createStraightSegment(startX, startY, endX, endY) {\n    return { type: SegmentType.Straight, startX, startY, endX, endY };\n}\nfunction createCurvedSegment(startX, startY, controlX, controlY, endX, endY) {\n    return { type: SegmentType.Curved, startX, startY, controlX, controlY, endX, endY };\n}\n// TODO: Move out of this module\nfunction normalizeStraightSRgba(color) {\n    return {\n        r: color.r / 255,\n        g: color.g / 255,\n        b: color.b / 255,\n        a: color.a / 255,\n    };\n}\nexports.normalizeStraightSRgba = normalizeStraightSRgba;\nfunction decodeGradient(swfGradient) {\n    const colors = [];\n    for (const colorStop of swfGradient.colors) {\n        colors.push({ ratio: colorStop.ratio / 0xff, color: normalizeStraightSRgba(colorStop.color) });\n    }\n    return Object.assign({}, swfGradient, { colors });\n}\n/**\n * Normalize the fill style from the SWF format to the renderer format\n */\nfunction decodeFillStyle(swfStyle) {\n    switch (swfStyle.type) {\n        case swf_tree_1.FillStyleType.Bitmap:\n            return Object.assign({}, swfStyle, { type: fill_style_1.FillStyleType.Bitmap });\n        case swf_tree_1.FillStyleType.FocalGradient:\n            return {\n                type: fill_style_1.FillStyleType.FocalGradient,\n                matrix: swfStyle.matrix,\n                gradient: decodeGradient(swfStyle.gradient),\n                focalPoint: swfStyle.focalPoint.valueOf(),\n            };\n        case swf_tree_1.FillStyleType.LinearGradient:\n            return { type: fill_style_1.FillStyleType.LinearGradient, matrix: swfStyle.matrix, gradient: decodeGradient(swfStyle.gradient) };\n        case swf_tree_1.FillStyleType.RadialGradient:\n            return {\n                type: fill_style_1.FillStyleType.FocalGradient,\n                matrix: swfStyle.matrix,\n                gradient: decodeGradient(swfStyle.gradient),\n                focalPoint: 0,\n            };\n        case swf_tree_1.FillStyleType.Solid:\n            return { type: fill_style_1.FillStyleType.Solid, color: normalizeStraightSRgba(swfStyle.color) };\n        default:\n            throw new incident_1.Incident(\"UnknownFillStyle\", { style: swfStyle });\n    }\n}\n/**\n * Normalize the line style from the SWF format to the renderer format\n */\nfunction decodeLineStyle(swfStyle) {\n    // TODO...\n    return { type: line_style_1.LineStyleType.Solid, color: { r: 0, g: 0, b: 0, a: 1 }, width: swfStyle.width };\n}\n/**\n * Create a new layer with the supplied styles.\n */\nfunction createStyleLayer(swfFillStyles, swfLineStyles) {\n    const fills = [];\n    for (const swfFillStyle of swfFillStyles) {\n        fills.push({\n            style: decodeFillStyle(swfFillStyle),\n            segments: [],\n        });\n    }\n    const lines = [];\n    for (const swfLineStyle of swfLineStyles) {\n        lines.push({\n            style: decodeLineStyle(swfLineStyle),\n            segments: [],\n        });\n    }\n    return { fills, lines };\n}\n/**\n * Extract a sequence of continuous segments, removes them from openSet.\n */\nfunction extractContinuous(openSet) {\n    const first = openSet.shift();\n    if (first === undefined) {\n        throw new Error(\"FailedAssertion: openSet should not be empty\");\n    }\n    const result = [first];\n    let startX = first.startX;\n    let startY = first.startY;\n    let endX = first.endX;\n    let endY = first.endY;\n    for (let i = 0, len = openSet.length; i < len; i++) {\n        const current = openSet[i];\n        if (current.startX === endX && current.startY === endY) {\n            openSet.splice(i, 1);\n            i--;\n            len--;\n            endX = current.endX;\n            endY = current.endY;\n            result.push(current);\n        }\n        else if (current.endX === startX && current.endY === startY) {\n            openSet.splice(i, 1);\n            i--;\n            len--;\n            startX = current.startX;\n            startY = current.startY;\n            result.unshift(current);\n        }\n    }\n    // TODO: Repeat until reaching fixed point? Currently there are some cases when a continuous path is not collected\n    // if its segments are disordered.\n    return result;\n}\n/**\n * Converts a list of segments (in their definition order) to a list of path commands.\n */\nfunction segmentsToCommands(segments) {\n    const openSet = [...segments];\n    const result = [];\n    while (openSet.length > 0) {\n        const sequence = extractContinuous(openSet);\n        result.push({\n            type: path_1.CommandType.MoveTo,\n            x: sequence[0].startX,\n            y: sequence[0].startY,\n        });\n        for (const segment of sequence) {\n            switch (segment.type) {\n                case SegmentType.Straight:\n                    result.push({\n                        type: path_1.CommandType.LineTo,\n                        endX: segment.endX,\n                        endY: segment.endY,\n                    });\n                    break;\n                case SegmentType.Curved:\n                    result.push({\n                        type: path_1.CommandType.CurveTo,\n                        controlX: segment.controlX,\n                        controlY: segment.controlY,\n                        endX: segment.endX,\n                        endY: segment.endY,\n                    });\n                    break;\n                default:\n                    throw new Error(\"Failed assertion: unexpected segment type\");\n            }\n        }\n    }\n    return result;\n}\n/**\n * Converts a layer to a list of paths with style\n */\nfunction layerToPaths(layer) {\n    const paths = [];\n    for (const fillSet of layer.fills) {\n        const commands = segmentsToCommands(fillSet.segments);\n        if (commands.length > 0) {\n            paths.push({ commands, fill: fillSet.style });\n        }\n    }\n    for (const lineSet of layer.lines) {\n        const commands = segmentsToCommands(lineSet.segments);\n        if (commands.length > 0) {\n            paths.push({ commands, line: lineSet.style });\n        }\n    }\n    return paths;\n}\n/**\n * Maintains the state of the decoder while it consumes shape records.\n */\nclass SwfShapeDecoder {\n    constructor(swfFillStyles, swfLineStyles) {\n        this.x = 0;\n        this.y = 0;\n        this.layers = [];\n        this.leftFill = undefined;\n        this.rightFill = undefined;\n        this.lineFill = undefined;\n        this.setNewStyles(swfFillStyles, swfLineStyles);\n    }\n    applyStyleChange(record) {\n        if (record.newStyles !== undefined) {\n            const newFills = record.newStyles.fill;\n            const newLines = record.newStyles.line;\n            this.setNewStyles(newFills, newLines);\n        }\n        if (record.leftFill !== undefined) {\n            this.setLeftFillById(record.leftFill);\n        }\n        if (record.rightFill !== undefined) {\n            this.setRightFillById(record.rightFill);\n        }\n        if (record.lineStyle !== undefined) {\n            this.setLineFillById(record.lineStyle);\n        }\n        if (record.moveTo !== undefined) {\n            this.x = record.moveTo.x;\n            this.y = record.moveTo.y;\n        }\n    }\n    applyStraightEdge(record) {\n        const endX = this.x + record.delta.x;\n        const endY = this.y + record.delta.y;\n        if (this.leftFill !== undefined) {\n            this.leftFill.segments.push(createStraightSegment(this.x, this.y, endX, endY));\n        }\n        if (this.rightFill !== undefined) {\n            this.rightFill.segments.push(createStraightSegment(endX, endY, this.x, this.y));\n        }\n        if (this.lineFill !== undefined) {\n            this.lineFill.segments.push(createStraightSegment(this.x, this.y, endX, endY));\n        }\n        this.x = endX;\n        this.y = endY;\n    }\n    applyCurvedEdge(record) {\n        const controlX = this.x + record.controlDelta.x;\n        const controlY = this.y + record.controlDelta.y;\n        const endX = controlX + record.anchorDelta.x;\n        const endY = controlY + record.anchorDelta.y;\n        if (this.leftFill !== undefined) {\n            this.leftFill.segments.push(createCurvedSegment(this.x, this.y, controlX, controlY, endX, endY));\n        }\n        if (this.rightFill !== undefined) {\n            this.rightFill.segments.push(createCurvedSegment(endX, endY, controlX, controlY, this.x, this.y));\n        }\n        if (this.lineFill !== undefined) {\n            this.lineFill.segments.push(createCurvedSegment(this.x, this.y, controlX, controlY, endX, endY));\n        }\n        this.x = endX;\n        this.y = endY;\n    }\n    getShape() {\n        const paths = [];\n        for (const layer of this.layers) {\n            for (const path of layerToPaths(layer)) {\n                paths.push(path);\n            }\n        }\n        return { paths };\n    }\n    setNewStyles(swfFillStyles, swfLineStyles) {\n        const layer = createStyleLayer(swfFillStyles, swfLineStyles);\n        this.layers.push(layer);\n        this.leftFill = undefined;\n        this.rightFill = undefined;\n        this.lineFill = undefined;\n    }\n    setLeftFillById(fillId) {\n        if (fillId === 0) {\n            this.leftFill = undefined;\n            return;\n        }\n        const currentLayer = this.layers[this.layers.length - 1];\n        const fillIndex = fillId - 1;\n        this.leftFill = currentLayer.fills[fillIndex];\n        if (this.leftFill === undefined) {\n            throw new Error(\"Invalid fill ID\");\n        }\n    }\n    setRightFillById(fillId) {\n        if (fillId === 0) {\n            this.rightFill = undefined;\n            return;\n        }\n        const currentLayer = this.layers[this.layers.length - 1];\n        const fillIndex = fillId - 1;\n        this.rightFill = currentLayer.fills[fillIndex];\n        if (this.rightFill === undefined) {\n            throw new Error(\"Invalid fill ID\");\n        }\n    }\n    setLineFillById(fillId) {\n        if (fillId === 0) {\n            this.lineFill = undefined;\n            return;\n        }\n        const currentLayer = this.layers[this.layers.length - 1];\n        const fillIndex = fillId - 1;\n        this.lineFill = currentLayer.lines[fillIndex];\n        if (this.lineFill === undefined) {\n            throw new Error(\"Invalid fill ID\");\n        }\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FillStyleType;\n(function (FillStyleType) {\n    FillStyleType[FillStyleType[\"Bitmap\"] = 0] = \"Bitmap\";\n    FillStyleType[FillStyleType[\"FocalGradient\"] = 1] = \"FocalGradient\";\n    FillStyleType[FillStyleType[\"LinearGradient\"] = 2] = \"LinearGradient\";\n    FillStyleType[FillStyleType[\"Solid\"] = 3] = \"Solid\";\n})(FillStyleType = exports.FillStyleType || (exports.FillStyleType = {}));\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUvZmlsbC1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUlBLElBQVksYUFLWDtBQUxELFdBQVksYUFBYTtJQUN2QixxREFBTSxDQUFBO0lBQ04sbUVBQWEsQ0FBQTtJQUNiLHFFQUFjLENBQUE7SUFDZCxtREFBSyxDQUFBO0FBQ1AsQ0FBQyxFQUxXLGFBQWEsR0FBYixxQkFBYSxLQUFiLHFCQUFhLFFBS3hCIiwiZmlsZSI6InNoYXBlL2ZpbGwtc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdHJhaWdodFNSZ2JhLCBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IE1hdHJpeCB9IGZyb20gXCJzd2YtdHJlZS9tYXRyaXhcIjtcbmltcG9ydCB7IEdyYWRpZW50IH0gZnJvbSBcIi4vZ3JhZGllbnRcIjtcblxuZXhwb3J0IGVudW0gRmlsbFN0eWxlVHlwZSB7XG4gIEJpdG1hcCxcbiAgRm9jYWxHcmFkaWVudCxcbiAgTGluZWFyR3JhZGllbnQsXG4gIFNvbGlkLFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEJpdG1hcEZpbGwge1xuICByZWFkb25seSB0eXBlOiBGaWxsU3R5bGVUeXBlLkJpdG1hcDtcblxuICByZWFkb25seSBiaXRtYXBJZDogVWludDE2O1xuXG4gIHJlYWRvbmx5IG1hdHJpeDogTWF0cml4O1xuXG4gIHJlYWRvbmx5IHJlcGVhdGluZzogYm9vbGVhbjtcblxuICByZWFkb25seSBzbW9vdGhlZDogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGb2NhbEdyYWRpZW50RmlsbCB7XG4gIHJlYWRvbmx5IHR5cGU6IEZpbGxTdHlsZVR5cGUuRm9jYWxHcmFkaWVudDtcblxuICByZWFkb25seSBtYXRyaXg6IE1hdHJpeDtcblxuICByZWFkb25seSBncmFkaWVudDogR3JhZGllbnQ7XG5cbiAgLyoqXG4gICAqIEZvY2FsIHBvaW50IGxlZnQtcmlnaHQgcG9zaXRpb24gaW4gdGhlIFstMSwgMV0gaW5jbHVzaXZlIHJhbmdlLlxuICAgKiBgLTFgIG1lYW5zIHRoZSBmb2NhbCBwb2ludCBpcyBvbiB0aGUgbGVmdCBzaWRlLCBgMGAgaXMgdGhlIGNlbnRlciBhbmQgYDFgIGlzIHRoZSByaWdodC5cbiAgICovXG4gIHJlYWRvbmx5IGZvY2FsUG9pbnQ6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMaW5lYXJHcmFkaWVudEZpbGwge1xuICByZWFkb25seSB0eXBlOiBGaWxsU3R5bGVUeXBlLkxpbmVhckdyYWRpZW50O1xuXG4gIHJlYWRvbmx5IG1hdHJpeDogTWF0cml4O1xuXG4gIHJlYWRvbmx5IGdyYWRpZW50OiBHcmFkaWVudDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTb2xpZEZpbGwge1xuICByZWFkb25seSB0eXBlOiBGaWxsU3R5bGVUeXBlLlNvbGlkO1xuICAvKipcbiAgICogTm9ybWFsaXplZCBjb2xvcnMsIGluIHRoZSByYW5nZSBbMCwgMV1cbiAgICovXG4gIHJlYWRvbmx5IGNvbG9yOiBSZWFkb25seTxTdHJhaWdodFNSZ2JhPG51bWJlcj4+O1xufVxuXG5leHBvcnQgdHlwZSBGaWxsU3R5bGUgPSBCaXRtYXBGaWxsIHwgRm9jYWxHcmFkaWVudEZpbGwgfCBMaW5lYXJHcmFkaWVudEZpbGwgfCBTb2xpZEZpbGw7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LineStyleType;\n(function (LineStyleType) {\n    LineStyleType[LineStyleType[\"Solid\"] = 0] = \"Solid\";\n})(LineStyleType = exports.LineStyleType || (exports.LineStyleType = {}));\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUvbGluZS1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLElBQVksYUFFWDtBQUZELFdBQVksYUFBYTtJQUN2QixtREFBSyxDQUFBO0FBQ1AsQ0FBQyxFQUZXLGFBQWEsR0FBYixxQkFBYSxLQUFiLHFCQUFhLFFBRXhCIiwiZmlsZSI6InNoYXBlL2xpbmUtc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdHJhaWdodFNSZ2JhIH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBlbnVtIExpbmVTdHlsZVR5cGUge1xuICBTb2xpZCxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTb2xpZExpbmUge1xuICByZWFkb25seSB0eXBlOiBMaW5lU3R5bGVUeXBlLlNvbGlkO1xuICByZWFkb25seSBjb2xvcjogUmVhZG9ubHk8U3RyYWlnaHRTUmdiYTxudW1iZXI+PjtcbiAgcmVhZG9ubHkgd2lkdGg6IG51bWJlcjtcbn1cblxuZXhwb3J0IHR5cGUgTGluZVN0eWxlID0gU29saWRMaW5lO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CommandType;\n(function (CommandType) {\n    CommandType[CommandType[\"LineTo\"] = 0] = \"LineTo\";\n    CommandType[CommandType[\"CurveTo\"] = 1] = \"CurveTo\";\n    CommandType[CommandType[\"MoveTo\"] = 2] = \"MoveTo\";\n})(CommandType = exports.CommandType || (exports.CommandType = {}));\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUvcGF0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUdBLElBQVksV0FJWDtBQUpELFdBQVksV0FBVztJQUNyQixpREFBTSxDQUFBO0lBQ04sbURBQU8sQ0FBQTtJQUNQLGlEQUFNLENBQUE7QUFDUixDQUFDLEVBSlcsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFJdEIiLCJmaWxlIjoic2hhcGUvcGF0aC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZpbGxTdHlsZSB9IGZyb20gXCIuL2ZpbGwtc3R5bGVcIjtcbmltcG9ydCB7IExpbmVTdHlsZSB9IGZyb20gXCIuL2xpbmUtc3R5bGVcIjtcblxuZXhwb3J0IGVudW0gQ29tbWFuZFR5cGUge1xuICBMaW5lVG8sXG4gIEN1cnZlVG8sXG4gIE1vdmVUbyxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDdXJ2ZVRvIHtcbiAgcmVhZG9ubHkgdHlwZTogQ29tbWFuZFR5cGUuQ3VydmVUbztcbiAgcmVhZG9ubHkgY29udHJvbFg6IG51bWJlcjtcbiAgcmVhZG9ubHkgY29udHJvbFk6IG51bWJlcjtcbiAgcmVhZG9ubHkgZW5kWDogbnVtYmVyO1xuICByZWFkb25seSBlbmRZOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTGluZVRvIHtcbiAgcmVhZG9ubHkgdHlwZTogQ29tbWFuZFR5cGUuTGluZVRvO1xuICByZWFkb25seSBlbmRYOiBudW1iZXI7XG4gIHJlYWRvbmx5IGVuZFk6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNb3ZlVG8ge1xuICByZWFkb25seSB0eXBlOiBDb21tYW5kVHlwZS5Nb3ZlVG87XG4gIHJlYWRvbmx5IHg6IG51bWJlcjtcbiAgcmVhZG9ubHkgeTogbnVtYmVyO1xufVxuXG5leHBvcnQgdHlwZSBDb21tYW5kID0gQ3VydmVUbyB8IExpbmVUbyB8IE1vdmVUbztcblxuZXhwb3J0IGludGVyZmFjZSBQYXRoIHtcbiAgcmVhZG9ubHkgY29tbWFuZHM6IENvbW1hbmRbXTtcbiAgcmVhZG9ubHkgZmlsbD86IEZpbGxTdHlsZTtcbiAgcmVhZG9ubHkgbGluZT86IExpbmVTdHlsZTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MorphFillStyleType;\n(function (MorphFillStyleType) {\n    MorphFillStyleType[MorphFillStyleType[\"Solid\"] = 0] = \"Solid\";\n})(MorphFillStyleType = exports.MorphFillStyleType || (exports.MorphFillStyleType = {}));\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUvbW9ycGgtZmlsbC1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLElBQVksa0JBRVg7QUFGRCxXQUFZLGtCQUFrQjtJQUM1Qiw2REFBSyxDQUFBO0FBQ1AsQ0FBQyxFQUZXLGtCQUFrQixHQUFsQiwwQkFBa0IsS0FBbEIsMEJBQWtCLFFBRTdCIiwiZmlsZSI6InNoYXBlL21vcnBoLWZpbGwtc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdHJhaWdodFNSZ2JhIH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBlbnVtIE1vcnBoRmlsbFN0eWxlVHlwZSB7XG4gIFNvbGlkLFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIE1vcnBoU29saWRGaWxsIHtcbiAgcmVhZG9ubHkgdHlwZTogTW9ycGhGaWxsU3R5bGVUeXBlLlNvbGlkO1xuICAvKipcbiAgICogTm9ybWFsaXplZCBjb2xvcnMsIGluIHRoZSByYW5nZSBbMCwgMV1cbiAgICovXG4gIHJlYWRvbmx5IHN0YXJ0Q29sb3I6IFJlYWRvbmx5PFN0cmFpZ2h0U1JnYmE8bnVtYmVyPj47XG4gIHJlYWRvbmx5IGVuZENvbG9yOiBSZWFkb25seTxTdHJhaWdodFNSZ2JhPG51bWJlcj4+O1xufVxuXG5leHBvcnQgdHlwZSBNb3JwaEZpbGxTdHlsZSA9IE1vcnBoU29saWRGaWxsO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MorphLineStyleType;\n(function (MorphLineStyleType) {\n    MorphLineStyleType[MorphLineStyleType[\"Solid\"] = 0] = \"Solid\";\n})(MorphLineStyleType = exports.MorphLineStyleType || (exports.MorphLineStyleType = {}));\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUvbW9ycGgtbGluZS1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLElBQVksa0JBRVg7QUFGRCxXQUFZLGtCQUFrQjtJQUM1Qiw2REFBSyxDQUFBO0FBQ1AsQ0FBQyxFQUZXLGtCQUFrQixHQUFsQiwwQkFBa0IsS0FBbEIsMEJBQWtCLFFBRTdCIiwiZmlsZSI6InNoYXBlL21vcnBoLWxpbmUtc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdHJhaWdodFNSZ2JhIH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBlbnVtIE1vcnBoTGluZVN0eWxlVHlwZSB7XG4gIFNvbGlkLFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIE1vcnBoU29saWRMaW5lIHtcbiAgcmVhZG9ubHkgdHlwZTogTW9ycGhMaW5lU3R5bGVUeXBlLlNvbGlkO1xuICByZWFkb25seSBzdGFydENvbG9yOiBSZWFkb25seTxTdHJhaWdodFNSZ2JhPG51bWJlcj4+O1xuICByZWFkb25seSBlbmRDb2xvcjogUmVhZG9ubHk8U3RyYWlnaHRTUmdiYTxudW1iZXI+PjtcbiAgcmVhZG9ubHkgd2lkdGg6IFtudW1iZXIsIG51bWJlcl07XG59XG5cbmV4cG9ydCB0eXBlIE1vcnBoTGluZVN0eWxlID0gTW9ycGhTb2xpZExpbmU7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MorphCommandType;\n(function (MorphCommandType) {\n    MorphCommandType[MorphCommandType[\"LineTo\"] = 0] = \"LineTo\";\n    MorphCommandType[MorphCommandType[\"CurveTo\"] = 1] = \"CurveTo\";\n    MorphCommandType[MorphCommandType[\"MoveTo\"] = 2] = \"MoveTo\";\n})(MorphCommandType = exports.MorphCommandType || (exports.MorphCommandType = {}));\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUvbW9ycGgtcGF0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUdBLElBQVksZ0JBSVg7QUFKRCxXQUFZLGdCQUFnQjtJQUMxQiwyREFBTSxDQUFBO0lBQ04sNkRBQU8sQ0FBQTtJQUNQLDJEQUFNLENBQUE7QUFDUixDQUFDLEVBSlcsZ0JBQWdCLEdBQWhCLHdCQUFnQixLQUFoQix3QkFBZ0IsUUFJM0IiLCJmaWxlIjoic2hhcGUvbW9ycGgtcGF0aC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vcnBoRmlsbFN0eWxlIH0gZnJvbSBcIi4vbW9ycGgtZmlsbC1zdHlsZVwiO1xuaW1wb3J0IHsgTW9ycGhMaW5lU3R5bGUgfSBmcm9tIFwiLi9tb3JwaC1saW5lLXN0eWxlXCI7XG5cbmV4cG9ydCBlbnVtIE1vcnBoQ29tbWFuZFR5cGUge1xuICBMaW5lVG8sXG4gIEN1cnZlVG8sXG4gIE1vdmVUbyxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNb3JwaEN1cnZlVG8ge1xuICByZWFkb25seSB0eXBlOiBNb3JwaENvbW1hbmRUeXBlLkN1cnZlVG87XG4gIHJlYWRvbmx5IGNvbnRyb2xYOiBbbnVtYmVyLCBudW1iZXJdO1xuICByZWFkb25seSBjb250cm9sWTogW251bWJlciwgbnVtYmVyXTtcbiAgcmVhZG9ubHkgZW5kWDogW251bWJlciwgbnVtYmVyXTtcbiAgcmVhZG9ubHkgZW5kWTogW251bWJlciwgbnVtYmVyXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNb3JwaExpbmVUbyB7XG4gIHJlYWRvbmx5IHR5cGU6IE1vcnBoQ29tbWFuZFR5cGUuTGluZVRvO1xuICByZWFkb25seSBlbmRYOiBbbnVtYmVyLCBudW1iZXJdO1xuICByZWFkb25seSBlbmRZOiBbbnVtYmVyLCBudW1iZXJdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE1vcnBoTW92ZVRvIHtcbiAgcmVhZG9ubHkgdHlwZTogTW9ycGhDb21tYW5kVHlwZS5Nb3ZlVG87XG4gIHJlYWRvbmx5IHg6IFtudW1iZXIsIG51bWJlcl07XG4gIHJlYWRvbmx5IHk6IFtudW1iZXIsIG51bWJlcl07XG59XG5cbmV4cG9ydCB0eXBlIE1vcnBoQ29tbWFuZCA9IE1vcnBoQ3VydmVUbyB8IE1vcnBoTGluZVRvIHwgTW9ycGhNb3ZlVG87XG5cbmV4cG9ydCBpbnRlcmZhY2UgTW9ycGhQYXRoIHtcbiAgcmVhZG9ubHkgY29tbWFuZHM6IE1vcnBoQ29tbWFuZFtdO1xuICByZWFkb25seSBmaWxsPzogTW9ycGhGaWxsU3R5bGU7XG4gIHJlYWRvbmx5IGxpbmU/OiBNb3JwaExpbmVTdHlsZTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font')\n\nexports.parseFont = parseFont\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), { width, height })\n}\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0: return new ImageData()\n    case 1: return new ImageData(array)\n    case 2: return new ImageData(array, width)\n    default: return new ImageData(array, width, height)\n  }\n}\n\nexports.loadImage = function (src) {\n  return new Promise((resolve, reject) => {\n    const image = document.createElement('img')\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = () => { cleanup(); resolve(image) }\n    image.onerror = () => { cleanup(); reject(new Error(`Failed to load the image \"${src}\"`)) }\n\n    image.src = src\n  })\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nvar Buffer = require('buffer').Buffer;\nvar Transform = require('stream').Transform;\nvar binding = require('./binding');\nvar util = require('util');\nvar assert = require('assert').ok;\nvar kMaxLength = require('buffer').kMaxLength;\nvar kRangeErrorMessage = 'Cannot create final Buffer. It would be larger ' + 'than 0x' + kMaxLength.toString(16) + ' bytes';\n\n// zlib doesn't provide these, so kludge them in following the same\n// const naming scheme zlib uses.\nbinding.Z_MIN_WINDOWBITS = 8;\nbinding.Z_MAX_WINDOWBITS = 15;\nbinding.Z_DEFAULT_WINDOWBITS = 15;\n\n// fewer than 64 bytes per chunk is stupid.\n// technically it could work with as few as 8, but even 64 bytes\n// is absurdly low.  Usually a MB or more is best.\nbinding.Z_MIN_CHUNK = 64;\nbinding.Z_MAX_CHUNK = Infinity;\nbinding.Z_DEFAULT_CHUNK = 16 * 1024;\n\nbinding.Z_MIN_MEMLEVEL = 1;\nbinding.Z_MAX_MEMLEVEL = 9;\nbinding.Z_DEFAULT_MEMLEVEL = 8;\n\nbinding.Z_MIN_LEVEL = -1;\nbinding.Z_MAX_LEVEL = 9;\nbinding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;\n\n// expose all the zlib constants\nvar bkeys = Object.keys(binding);\nfor (var bk = 0; bk < bkeys.length; bk++) {\n  var bkey = bkeys[bk];\n  if (bkey.match(/^Z/)) {\n    Object.defineProperty(exports, bkey, {\n      enumerable: true, value: binding[bkey], writable: false\n    });\n  }\n}\n\n// translation table for return codes.\nvar codes = {\n  Z_OK: binding.Z_OK,\n  Z_STREAM_END: binding.Z_STREAM_END,\n  Z_NEED_DICT: binding.Z_NEED_DICT,\n  Z_ERRNO: binding.Z_ERRNO,\n  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,\n  Z_DATA_ERROR: binding.Z_DATA_ERROR,\n  Z_MEM_ERROR: binding.Z_MEM_ERROR,\n  Z_BUF_ERROR: binding.Z_BUF_ERROR,\n  Z_VERSION_ERROR: binding.Z_VERSION_ERROR\n};\n\nvar ckeys = Object.keys(codes);\nfor (var ck = 0; ck < ckeys.length; ck++) {\n  var ckey = ckeys[ck];\n  codes[codes[ckey]] = ckey;\n}\n\nObject.defineProperty(exports, 'codes', {\n  enumerable: true, value: Object.freeze(codes), writable: false\n});\n\nexports.Deflate = Deflate;\nexports.Inflate = Inflate;\nexports.Gzip = Gzip;\nexports.Gunzip = Gunzip;\nexports.DeflateRaw = DeflateRaw;\nexports.InflateRaw = InflateRaw;\nexports.Unzip = Unzip;\n\nexports.createDeflate = function (o) {\n  return new Deflate(o);\n};\n\nexports.createInflate = function (o) {\n  return new Inflate(o);\n};\n\nexports.createDeflateRaw = function (o) {\n  return new DeflateRaw(o);\n};\n\nexports.createInflateRaw = function (o) {\n  return new InflateRaw(o);\n};\n\nexports.createGzip = function (o) {\n  return new Gzip(o);\n};\n\nexports.createGunzip = function (o) {\n  return new Gunzip(o);\n};\n\nexports.createUnzip = function (o) {\n  return new Unzip(o);\n};\n\n// Convenience methods.\n// compress/decompress a string or buffer in one step.\nexports.deflate = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Deflate(opts), buffer, callback);\n};\n\nexports.deflateSync = function (buffer, opts) {\n  return zlibBufferSync(new Deflate(opts), buffer);\n};\n\nexports.gzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gzip(opts), buffer, callback);\n};\n\nexports.gzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Gzip(opts), buffer);\n};\n\nexports.deflateRaw = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new DeflateRaw(opts), buffer, callback);\n};\n\nexports.deflateRawSync = function (buffer, opts) {\n  return zlibBufferSync(new DeflateRaw(opts), buffer);\n};\n\nexports.unzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Unzip(opts), buffer, callback);\n};\n\nexports.unzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Unzip(opts), buffer);\n};\n\nexports.inflate = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Inflate(opts), buffer, callback);\n};\n\nexports.inflateSync = function (buffer, opts) {\n  return zlibBufferSync(new Inflate(opts), buffer);\n};\n\nexports.gunzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gunzip(opts), buffer, callback);\n};\n\nexports.gunzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Gunzip(opts), buffer);\n};\n\nexports.inflateRaw = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new InflateRaw(opts), buffer, callback);\n};\n\nexports.inflateRawSync = function (buffer, opts) {\n  return zlibBufferSync(new InflateRaw(opts), buffer);\n};\n\nfunction zlibBuffer(engine, buffer, callback) {\n  var buffers = [];\n  var nread = 0;\n\n  engine.on('error', onError);\n  engine.on('end', onEnd);\n\n  engine.end(buffer);\n  flow();\n\n  function flow() {\n    var chunk;\n    while (null !== (chunk = engine.read())) {\n      buffers.push(chunk);\n      nread += chunk.length;\n    }\n    engine.once('readable', flow);\n  }\n\n  function onError(err) {\n    engine.removeListener('end', onEnd);\n    engine.removeListener('readable', flow);\n    callback(err);\n  }\n\n  function onEnd() {\n    var buf;\n    var err = null;\n\n    if (nread >= kMaxLength) {\n      err = new RangeError(kRangeErrorMessage);\n    } else {\n      buf = Buffer.concat(buffers, nread);\n    }\n\n    buffers = [];\n    engine.close();\n    callback(err, buf);\n  }\n}\n\nfunction zlibBufferSync(engine, buffer) {\n  if (typeof buffer === 'string') buffer = Buffer.from(buffer);\n\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('Not a string or buffer');\n\n  var flushFlag = engine._finishFlushFlag;\n\n  return engine._processChunk(buffer, flushFlag);\n}\n\n// generic zlib\n// minimal 2-byte header\nfunction Deflate(opts) {\n  if (!(this instanceof Deflate)) return new Deflate(opts);\n  Zlib.call(this, opts, binding.DEFLATE);\n}\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate)) return new Inflate(opts);\n  Zlib.call(this, opts, binding.INFLATE);\n}\n\n// gzip - bigger header, same deflate compression\nfunction Gzip(opts) {\n  if (!(this instanceof Gzip)) return new Gzip(opts);\n  Zlib.call(this, opts, binding.GZIP);\n}\n\nfunction Gunzip(opts) {\n  if (!(this instanceof Gunzip)) return new Gunzip(opts);\n  Zlib.call(this, opts, binding.GUNZIP);\n}\n\n// raw - no header\nfunction DeflateRaw(opts) {\n  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);\n  Zlib.call(this, opts, binding.DEFLATERAW);\n}\n\nfunction InflateRaw(opts) {\n  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);\n  Zlib.call(this, opts, binding.INFLATERAW);\n}\n\n// auto-detect header.\nfunction Unzip(opts) {\n  if (!(this instanceof Unzip)) return new Unzip(opts);\n  Zlib.call(this, opts, binding.UNZIP);\n}\n\nfunction isValidFlushFlag(flag) {\n  return flag === binding.Z_NO_FLUSH || flag === binding.Z_PARTIAL_FLUSH || flag === binding.Z_SYNC_FLUSH || flag === binding.Z_FULL_FLUSH || flag === binding.Z_FINISH || flag === binding.Z_BLOCK;\n}\n\n// the Zlib class they all inherit from\n// This thing manages the queue of requests, and returns\n// true or false if there is anything in the queue when\n// you call the .write() method.\n\nfunction Zlib(opts, mode) {\n  var _this = this;\n\n  this._opts = opts = opts || {};\n  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;\n\n  Transform.call(this, opts);\n\n  if (opts.flush && !isValidFlushFlag(opts.flush)) {\n    throw new Error('Invalid flush flag: ' + opts.flush);\n  }\n  if (opts.finishFlush && !isValidFlushFlag(opts.finishFlush)) {\n    throw new Error('Invalid flush flag: ' + opts.finishFlush);\n  }\n\n  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;\n  this._finishFlushFlag = typeof opts.finishFlush !== 'undefined' ? opts.finishFlush : binding.Z_FINISH;\n\n  if (opts.chunkSize) {\n    if (opts.chunkSize < exports.Z_MIN_CHUNK || opts.chunkSize > exports.Z_MAX_CHUNK) {\n      throw new Error('Invalid chunk size: ' + opts.chunkSize);\n    }\n  }\n\n  if (opts.windowBits) {\n    if (opts.windowBits < exports.Z_MIN_WINDOWBITS || opts.windowBits > exports.Z_MAX_WINDOWBITS) {\n      throw new Error('Invalid windowBits: ' + opts.windowBits);\n    }\n  }\n\n  if (opts.level) {\n    if (opts.level < exports.Z_MIN_LEVEL || opts.level > exports.Z_MAX_LEVEL) {\n      throw new Error('Invalid compression level: ' + opts.level);\n    }\n  }\n\n  if (opts.memLevel) {\n    if (opts.memLevel < exports.Z_MIN_MEMLEVEL || opts.memLevel > exports.Z_MAX_MEMLEVEL) {\n      throw new Error('Invalid memLevel: ' + opts.memLevel);\n    }\n  }\n\n  if (opts.strategy) {\n    if (opts.strategy != exports.Z_FILTERED && opts.strategy != exports.Z_HUFFMAN_ONLY && opts.strategy != exports.Z_RLE && opts.strategy != exports.Z_FIXED && opts.strategy != exports.Z_DEFAULT_STRATEGY) {\n      throw new Error('Invalid strategy: ' + opts.strategy);\n    }\n  }\n\n  if (opts.dictionary) {\n    if (!Buffer.isBuffer(opts.dictionary)) {\n      throw new Error('Invalid dictionary: it should be a Buffer instance');\n    }\n  }\n\n  this._handle = new binding.Zlib(mode);\n\n  var self = this;\n  this._hadError = false;\n  this._handle.onerror = function (message, errno) {\n    // there is no way to cleanly recover.\n    // continuing only obscures problems.\n    _close(self);\n    self._hadError = true;\n\n    var error = new Error(message);\n    error.errno = errno;\n    error.code = exports.codes[errno];\n    self.emit('error', error);\n  };\n\n  var level = exports.Z_DEFAULT_COMPRESSION;\n  if (typeof opts.level === 'number') level = opts.level;\n\n  var strategy = exports.Z_DEFAULT_STRATEGY;\n  if (typeof opts.strategy === 'number') strategy = opts.strategy;\n\n  this._handle.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS, level, opts.memLevel || exports.Z_DEFAULT_MEMLEVEL, strategy, opts.dictionary);\n\n  this._buffer = Buffer.allocUnsafe(this._chunkSize);\n  this._offset = 0;\n  this._level = level;\n  this._strategy = strategy;\n\n  this.once('end', this.close);\n\n  Object.defineProperty(this, '_closed', {\n    get: function () {\n      return !_this._handle;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n\nutil.inherits(Zlib, Transform);\n\nZlib.prototype.params = function (level, strategy, callback) {\n  if (level < exports.Z_MIN_LEVEL || level > exports.Z_MAX_LEVEL) {\n    throw new RangeError('Invalid compression level: ' + level);\n  }\n  if (strategy != exports.Z_FILTERED && strategy != exports.Z_HUFFMAN_ONLY && strategy != exports.Z_RLE && strategy != exports.Z_FIXED && strategy != exports.Z_DEFAULT_STRATEGY) {\n    throw new TypeError('Invalid strategy: ' + strategy);\n  }\n\n  if (this._level !== level || this._strategy !== strategy) {\n    var self = this;\n    this.flush(binding.Z_SYNC_FLUSH, function () {\n      assert(self._handle, 'zlib binding closed');\n      self._handle.params(level, strategy);\n      if (!self._hadError) {\n        self._level = level;\n        self._strategy = strategy;\n        if (callback) callback();\n      }\n    });\n  } else {\n    process.nextTick(callback);\n  }\n};\n\nZlib.prototype.reset = function () {\n  assert(this._handle, 'zlib binding closed');\n  return this._handle.reset();\n};\n\n// This is the _flush function called by the transform class,\n// internally, when the last chunk has been written.\nZlib.prototype._flush = function (callback) {\n  this._transform(Buffer.alloc(0), '', callback);\n};\n\nZlib.prototype.flush = function (kind, callback) {\n  var _this2 = this;\n\n  var ws = this._writableState;\n\n  if (typeof kind === 'function' || kind === undefined && !callback) {\n    callback = kind;\n    kind = binding.Z_FULL_FLUSH;\n  }\n\n  if (ws.ended) {\n    if (callback) process.nextTick(callback);\n  } else if (ws.ending) {\n    if (callback) this.once('end', callback);\n  } else if (ws.needDrain) {\n    if (callback) {\n      this.once('drain', function () {\n        return _this2.flush(kind, callback);\n      });\n    }\n  } else {\n    this._flushFlag = kind;\n    this.write(Buffer.alloc(0), '', callback);\n  }\n};\n\nZlib.prototype.close = function (callback) {\n  _close(this, callback);\n  process.nextTick(emitCloseNT, this);\n};\n\nfunction _close(engine, callback) {\n  if (callback) process.nextTick(callback);\n\n  // Caller may invoke .close after a zlib error (which will null _handle).\n  if (!engine._handle) return;\n\n  engine._handle.close();\n  engine._handle = null;\n}\n\nfunction emitCloseNT(self) {\n  self.emit('close');\n}\n\nZlib.prototype._transform = function (chunk, encoding, cb) {\n  var flushFlag;\n  var ws = this._writableState;\n  var ending = ws.ending || ws.ended;\n  var last = ending && (!chunk || ws.length === chunk.length);\n\n  if (chunk !== null && !Buffer.isBuffer(chunk)) return cb(new Error('invalid input'));\n\n  if (!this._handle) return cb(new Error('zlib binding closed'));\n\n  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag\n  // (or whatever flag was provided using opts.finishFlush).\n  // If it's explicitly flushing at some other time, then we use\n  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression\n  // goodness.\n  if (last) flushFlag = this._finishFlushFlag;else {\n    flushFlag = this._flushFlag;\n    // once we've flushed the last of the queue, stop flushing and\n    // go back to the normal behavior.\n    if (chunk.length >= ws.length) {\n      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;\n    }\n  }\n\n  this._processChunk(chunk, flushFlag, cb);\n};\n\nZlib.prototype._processChunk = function (chunk, flushFlag, cb) {\n  var availInBefore = chunk && chunk.length;\n  var availOutBefore = this._chunkSize - this._offset;\n  var inOff = 0;\n\n  var self = this;\n\n  var async = typeof cb === 'function';\n\n  if (!async) {\n    var buffers = [];\n    var nread = 0;\n\n    var error;\n    this.on('error', function (er) {\n      error = er;\n    });\n\n    assert(this._handle, 'zlib binding closed');\n    do {\n      var res = this._handle.writeSync(flushFlag, chunk, // in\n      inOff, // in_off\n      availInBefore, // in_len\n      this._buffer, // out\n      this._offset, //out_off\n      availOutBefore); // out_len\n    } while (!this._hadError && callback(res[0], res[1]));\n\n    if (this._hadError) {\n      throw error;\n    }\n\n    if (nread >= kMaxLength) {\n      _close(this);\n      throw new RangeError(kRangeErrorMessage);\n    }\n\n    var buf = Buffer.concat(buffers, nread);\n    _close(this);\n\n    return buf;\n  }\n\n  assert(this._handle, 'zlib binding closed');\n  var req = this._handle.write(flushFlag, chunk, // in\n  inOff, // in_off\n  availInBefore, // in_len\n  this._buffer, // out\n  this._offset, //out_off\n  availOutBefore); // out_len\n\n  req.buffer = chunk;\n  req.callback = callback;\n\n  function callback(availInAfter, availOutAfter) {\n    // When the callback is used in an async write, the callback's\n    // context is the `req` object that was created. The req object\n    // is === this._handle, and that's why it's important to null\n    // out the values after they are done being used. `this._handle`\n    // can stay in memory longer than the callback and buffer are needed.\n    if (this) {\n      this.buffer = null;\n      this.callback = null;\n    }\n\n    if (self._hadError) return;\n\n    var have = availOutBefore - availOutAfter;\n    assert(have >= 0, 'have should not go down');\n\n    if (have > 0) {\n      var out = self._buffer.slice(self._offset, self._offset + have);\n      self._offset += have;\n      // serve some output to the consumer.\n      if (async) {\n        self.push(out);\n      } else {\n        buffers.push(out);\n        nread += out.length;\n      }\n    }\n\n    // exhausted the output buffer, or used all the input create a new one.\n    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n      availOutBefore = self._chunkSize;\n      self._offset = 0;\n      self._buffer = Buffer.allocUnsafe(self._chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done.  Need to reprocess.\n      // Also, update the availInBefore to the availInAfter value,\n      // so that if we have to hit it a third (fourth, etc.) time,\n      // it'll have the correct byte counts.\n      inOff += availInBefore - availInAfter;\n      availInBefore = availInAfter;\n\n      if (!async) return true;\n\n      var newReq = self._handle.write(flushFlag, chunk, inOff, availInBefore, self._buffer, self._offset, self._chunkSize);\n      newReq.callback = callback; // this same function\n      newReq.buffer = chunk;\n      return;\n    }\n\n    if (!async) return false;\n\n    // finished with the chunk.\n    cb();\n  }\n};\n\nutil.inherits(Deflate, Zlib);\nutil.inherits(Inflate, Zlib);\nutil.inherits(Gzip, Zlib);\nutil.inherits(Gunzip, Zlib);\nutil.inherits(DeflateRaw, Zlib);\nutil.inherits(InflateRaw, Zlib);\nutil.inherits(Unzip, Zlib);","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","module.exports = require('events').EventEmitter;\n","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"IncompleteStream\";\nfunction format({ needed }) {\n    return `Need ${needed === undefined ? \"\" : needed} more bytes to process the stream`;\n}\nexports.format = format;\nfunction createIncompleteStreamError(needed) {\n    return new incident_1.Incident(exports.name, { needed }, format);\n}\nexports.createIncompleteStreamError = createIncompleteStreamError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2luY29tcGxldGUtc3RyZWFtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQW9DO0FBR3ZCLFFBQUEsSUFBSSxHQUFTLGtCQUFrQixDQUFDO0FBUzdDLFNBQWdCLE1BQU0sQ0FBQyxFQUFDLE1BQU0sRUFBTztJQUNuQyxPQUFPLFFBQVEsTUFBTSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLG1DQUFtQyxDQUFDO0FBQ3ZGLENBQUM7QUFGRCx3QkFFQztBQUVELFNBQWdCLDJCQUEyQixDQUFDLE1BQWU7SUFDekQsT0FBTyxJQUFJLG1CQUFRLENBQUMsWUFBSSxFQUFFLEVBQUMsTUFBTSxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDOUMsQ0FBQztBQUZELGtFQUVDIiwiZmlsZSI6ImVycm9ycy9pbmNvbXBsZXRlLXN0cmVhbS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluY2lkZW50IH0gZnJvbSBcImluY2lkZW50XCI7XG5cbmV4cG9ydCB0eXBlIE5hbWUgPSBcIkluY29tcGxldGVTdHJlYW1cIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJJbmNvbXBsZXRlU3RyZWFtXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gIG5lZWRlZD86IG51bWJlcjtcbn1cblxuZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG5leHBvcnQgdHlwZSBJbmNvbXBsZXRlU3RyZWFtRXJyb3IgPSBJbmNpZGVudDxEYXRhLCBOYW1lLCBDYXVzZT47XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe25lZWRlZH06IERhdGEpIHtcbiAgcmV0dXJuIGBOZWVkICR7bmVlZGVkID09PSB1bmRlZmluZWQgPyBcIlwiIDogbmVlZGVkfSBtb3JlIGJ5dGVzIHRvIHByb2Nlc3MgdGhlIHN0cmVhbWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbmNvbXBsZXRlU3RyZWFtRXJyb3IobmVlZGVkPzogbnVtYmVyKTogSW5jb21wbGV0ZVN0cmVhbUVycm9yIHtcbiAgcmV0dXJuIG5ldyBJbmNpZGVudChuYW1lLCB7bmVlZGVkfSwgZm9ybWF0KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst swf_tree_1 = require(\"swf-tree\");\nconst basic_data_types_1 = require(\"./basic-data-types\");\nfunction parseBlendMode(byteStream) {\n    switch (byteStream.readUint8()) {\n        case 0:\n        case 1:\n            return swf_tree_1.BlendMode.Normal;\n        case 2:\n            return swf_tree_1.BlendMode.Layer;\n        case 3:\n            return swf_tree_1.BlendMode.Multiply;\n        case 4:\n            return swf_tree_1.BlendMode.Screen;\n        case 5:\n            return swf_tree_1.BlendMode.Lighten;\n        case 6:\n            return swf_tree_1.BlendMode.Darken;\n        case 7:\n            return swf_tree_1.BlendMode.Difference;\n        case 8:\n            return swf_tree_1.BlendMode.Add;\n        case 9:\n            return swf_tree_1.BlendMode.Subtract;\n        case 10:\n            return swf_tree_1.BlendMode.Invert;\n        case 11:\n            return swf_tree_1.BlendMode.Alpha;\n        case 12:\n            return swf_tree_1.BlendMode.Erase;\n        case 13:\n            return swf_tree_1.BlendMode.Overlay;\n        case 14:\n            return swf_tree_1.BlendMode.Hardlight;\n        default:\n            throw new incident_1.Incident(\"UnreachableCode\");\n    }\n}\nexports.parseBlendMode = parseBlendMode;\nfunction parseClipActionsString(byteStream, extendedEvents) {\n    byteStream.skip(2); // Reserved\n    byteStream.skip(4); // All events (union of the events)\n    const result = [];\n    while (true) {\n        const savedPos = byteStream.bytePos;\n        const peek = extendedEvents ? byteStream.readUint32BE() : byteStream.readUint32BE();\n        if (peek === 0) {\n            break;\n        }\n        else {\n            byteStream.bytePos = savedPos;\n        }\n        result.push(parseClipActions(byteStream, extendedEvents));\n    }\n    return result;\n}\nexports.parseClipActionsString = parseClipActionsString;\nfunction parseClipEventFlags(byteStream, extendedEvents) {\n    const flags = extendedEvents ? byteStream.readFloat32LE() : byteStream.readUint16LE();\n    const load = (flags & (1 << 0)) !== 0;\n    const enterFrame = (flags & (1 << 1)) !== 0;\n    const unload = (flags & (1 << 2)) !== 0;\n    const mouseMove = (flags & (1 << 3)) !== 0;\n    const mouseDown = (flags & (1 << 4)) !== 0;\n    const mouseUp = (flags & (1 << 5)) !== 0;\n    const keyDown = (flags & (1 << 6)) !== 0;\n    const keyUp = (flags & (1 << 7)) !== 0;\n    const data = (flags & (1 << 8)) !== 0;\n    const initialize = (flags & (1 << 9)) !== 0;\n    const press = (flags & (1 << 10)) !== 0;\n    const release = (flags & (1 << 11)) !== 0;\n    const releaseOutside = (flags & (1 << 12)) !== 0;\n    const rollOver = (flags & (1 << 13)) !== 0;\n    const rollOut = (flags & (1 << 14)) !== 0;\n    const dragOver = (flags & (1 << 15)) !== 0;\n    const dragOut = (flags & (1 << 16)) !== 0;\n    const keyPress = (flags & (1 << 17)) !== 0;\n    const construct = (flags & (1 << 18)) !== 0;\n    return {\n        load,\n        enterFrame,\n        unload,\n        mouseMove,\n        mouseDown,\n        mouseUp,\n        keyDown,\n        keyUp,\n        data,\n        initialize,\n        press,\n        release,\n        releaseOutside,\n        rollOver,\n        rollOut,\n        dragOver,\n        dragOut,\n        keyPress,\n        construct,\n    };\n}\nexports.parseClipEventFlags = parseClipEventFlags;\nfunction parseClipActions(byteStream, extendedEvents) {\n    const events = parseClipEventFlags(byteStream, extendedEvents);\n    let actionsSize = byteStream.readUint32LE();\n    let keyCode = undefined;\n    if (events.keyPress) {\n        keyCode = byteStream.readUint8();\n        actionsSize -= 1;\n    }\n    const actions = Uint8Array.from(byteStream.takeBytes(actionsSize));\n    return { events, keyCode, actions };\n}\nexports.parseClipActions = parseClipActions;\nfunction parseFilterList(byteStream) {\n    const filterCount = byteStream.readUint8();\n    const result = [];\n    for (let i = 0; i < filterCount; i++) {\n        result.push(parseFilter(byteStream));\n    }\n    return result;\n}\nexports.parseFilterList = parseFilterList;\nfunction parseFilter(byteStream) {\n    switch (byteStream.readUint8()) {\n        case 0:\n            return parseDropShadowFilter(byteStream);\n        case 1:\n            return parseBlurFilter(byteStream);\n        case 2:\n            return parseGlowFilter(byteStream);\n        case 3:\n            return parseBevelFilter(byteStream);\n        case 4:\n            return parseGradientGlowFilter(byteStream);\n        case 5:\n            return parseConvolutionFilter(byteStream);\n        case 6:\n            return parseColorMatrixFilter(byteStream);\n        case 7:\n            return parseGradientBevelFilter(byteStream);\n        default:\n            throw new incident_1.Incident(\"UnreachableCode\");\n    }\n}\nexports.parseFilter = parseFilter;\nfunction parseBevelFilter(byteStream) {\n    const shadowColor = basic_data_types_1.parseStraightSRgba8(byteStream);\n    const highlightColor = basic_data_types_1.parseStraightSRgba8(byteStream);\n    const blurX = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const blurY = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const angle = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const distance = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const strength = swf_tree_1.Sfixed8P8.fromEpsilons(byteStream.readSint16LE());\n    const flags = byteStream.readUint8();\n    const passes = (flags & 0b1111);\n    const onTop = (flags & (1 << 4)) !== 0;\n    const compositeSource = (flags & (1 << 5)) !== 0;\n    const knockout = (flags & (1 << 6)) !== 0;\n    const inner = (flags & (1 << 7)) !== 0;\n    return {\n        filter: swf_tree_1.FilterType.Bevel,\n        shadowColor,\n        highlightColor,\n        blurX,\n        blurY,\n        angle,\n        distance,\n        strength,\n        inner,\n        knockout,\n        compositeSource,\n        onTop,\n        passes,\n    };\n}\nexports.parseBevelFilter = parseBevelFilter;\nfunction parseBlurFilter(byteStream) {\n    const blurX = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const blurY = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const flags = byteStream.readUint8();\n    // Skip bits [0, 2]\n    const passes = ((flags >>> 3) & 0x1f);\n    return {\n        filter: swf_tree_1.FilterType.Blur,\n        blurX,\n        blurY,\n        passes,\n    };\n}\nexports.parseBlurFilter = parseBlurFilter;\nfunction parseColorMatrixFilter(byteStream) {\n    const matrix = [];\n    for (let i = 0; i < 20; i++) {\n        matrix.push(byteStream.readFloat32LE());\n    }\n    return {\n        filter: swf_tree_1.FilterType.ColorMatrix,\n        matrix,\n    };\n}\nexports.parseColorMatrixFilter = parseColorMatrixFilter;\nfunction parseConvolutionFilter(byteStream) {\n    const matrixWidth = byteStream.readUint8();\n    const matrixHeight = byteStream.readUint8();\n    const divisor = byteStream.readFloat32LE();\n    const bias = byteStream.readFloat32LE();\n    const matrix = [];\n    for (let i = 0; i < matrixWidth * matrixHeight; i++) {\n        matrix.push(byteStream.readFloat32LE());\n    }\n    const defaultColor = basic_data_types_1.parseStraightSRgba8(byteStream);\n    const flags = byteStream.readUint8();\n    const preserveAlpha = (flags & (1 << 0)) !== 0;\n    const clamp = (flags & (1 << 1)) !== 0;\n    // Skip bits [2, 7]\n    return {\n        filter: swf_tree_1.FilterType.Convolution,\n        matrixWidth,\n        matrixHeight,\n        divisor,\n        bias,\n        matrix,\n        defaultColor,\n        clamp,\n        preserveAlpha,\n    };\n}\nexports.parseConvolutionFilter = parseConvolutionFilter;\nfunction parseDropShadowFilter(byteStream) {\n    const color = basic_data_types_1.parseStraightSRgba8(byteStream);\n    const blurX = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const blurY = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const angle = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const distance = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const strength = swf_tree_1.Sfixed8P8.fromEpsilons(byteStream.readSint16LE());\n    const flags = byteStream.readUint8();\n    const passes = flags & ((1 << 5) - 1);\n    const compositeSource = (flags & (1 << 5)) !== 0;\n    const knockout = (flags & (1 << 6)) !== 0;\n    const inner = (flags & (1 << 7)) !== 0;\n    return {\n        filter: swf_tree_1.FilterType.DropShadow,\n        color,\n        blurX,\n        blurY,\n        angle,\n        distance,\n        strength,\n        inner,\n        knockout,\n        compositeSource,\n        passes,\n    };\n}\nexports.parseDropShadowFilter = parseDropShadowFilter;\nfunction parseGlowFilter(byteStream) {\n    const color = basic_data_types_1.parseStraightSRgba8(byteStream);\n    const blurX = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const blurY = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const strength = swf_tree_1.Sfixed8P8.fromEpsilons(byteStream.readSint16LE());\n    const flags = byteStream.readUint8();\n    const passes = flags & ((1 << 5) - 1);\n    const compositeSource = (flags & (1 << 5)) !== 0;\n    const knockout = (flags & (1 << 6)) !== 0;\n    const inner = (flags & (1 << 7)) !== 0;\n    return {\n        filter: swf_tree_1.FilterType.Glow,\n        color,\n        blurX,\n        blurY,\n        strength,\n        inner,\n        knockout,\n        compositeSource,\n        passes,\n    };\n}\nexports.parseGlowFilter = parseGlowFilter;\nfunction parseGradientBevelFilter(byteStream) {\n    const colorCount = byteStream.readUint8();\n    const gradient = [];\n    for (let i = 0; i < colorCount; i++) {\n        gradient.push({ ratio: 0, color: basic_data_types_1.parseStraightSRgba8(byteStream) });\n    }\n    for (let i = 0; i < colorCount; i++) {\n        gradient[i].ratio = byteStream.readUint8();\n    }\n    const blurX = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const blurY = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const angle = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const distance = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const strength = swf_tree_1.Sfixed8P8.fromEpsilons(byteStream.readSint16LE());\n    const flags = byteStream.readUint8();\n    const passes = (flags & ((1 << 4) - 1));\n    const onTop = (flags & (1 << 4)) !== 0;\n    const compositeSource = (flags & (1 << 5)) !== 0;\n    const knockout = (flags & (1 << 6)) !== 0;\n    const inner = (flags & (1 << 7)) !== 0;\n    return {\n        filter: swf_tree_1.FilterType.GradientBevel,\n        gradient,\n        blurX,\n        blurY,\n        angle,\n        distance,\n        strength,\n        inner,\n        knockout,\n        compositeSource,\n        onTop,\n        passes,\n    };\n}\nexports.parseGradientBevelFilter = parseGradientBevelFilter;\nfunction parseGradientGlowFilter(byteStream) {\n    const colorCount = byteStream.readUint8();\n    const gradient = [];\n    for (let i = 0; i < colorCount; i++) {\n        gradient.push({ ratio: 0, color: basic_data_types_1.parseStraightSRgba8(byteStream) });\n    }\n    for (let i = 0; i < colorCount; i++) {\n        gradient[i].ratio = byteStream.readUint8();\n    }\n    const blurX = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const blurY = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const angle = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const distance = swf_tree_1.Sfixed16P16.fromEpsilons(byteStream.readSint32LE());\n    const strength = swf_tree_1.Sfixed8P8.fromEpsilons(byteStream.readSint16LE());\n    const flags = byteStream.readUint8();\n    const passes = (flags & ((1 << 4) - 1));\n    const onTop = (flags & (1 << 4)) !== 0;\n    const compositeSource = (flags & (1 << 5)) !== 0;\n    const knockout = (flags & (1 << 6)) !== 0;\n    const inner = (flags & (1 << 7)) !== 0;\n    return {\n        filter: swf_tree_1.FilterType.GradientGlow,\n        gradient,\n        blurX,\n        blurY,\n        angle,\n        distance,\n        strength,\n        inner,\n        knockout,\n        compositeSource,\n        onTop,\n        passes,\n    };\n}\nexports.parseGradientGlowFilter = parseGradientGlowFilter;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst swf_tree_1 = require(\"swf-tree\");\nconst basic_data_types_1 = require(\"./basic-data-types\");\nfunction parseColorStop(byteStream, withAlpha) {\n    const ratio = byteStream.readUint8();\n    let color;\n    if (withAlpha) {\n        color = basic_data_types_1.parseStraightSRgba8(byteStream);\n    }\n    else {\n        color = Object.assign({}, basic_data_types_1.parseSRgb8(byteStream), { a: 255 });\n    }\n    return { ratio, color };\n}\nexports.parseColorStop = parseColorStop;\nfunction parseGradient(byteStream, withAlpha) {\n    const flags = byteStream.readUint8();\n    // The spec says that spreadId and colorSpaceId should be ignored for shapeVersion < Shape4\n    // and color count should be capped at 8. We're ignoring it for the moment.\n    const spreadId = ((flags & ((1 << 8) - 1)) >>> 6);\n    const colorSpaceId = ((flags & ((1 << 6) - 1)) >>> 4);\n    const colorCount = (flags & ((1 << 4) - 1));\n    let spread;\n    switch (spreadId) {\n        case 0:\n            spread = swf_tree_1.GradientSpread.Pad;\n            break;\n        case 1:\n            spread = swf_tree_1.GradientSpread.Reflect;\n            break;\n        case 2:\n            spread = swf_tree_1.GradientSpread.Repeat;\n            break;\n        default:\n            throw new Error(\"Unexpected gradient spread\");\n    }\n    let colorSpace;\n    switch (colorSpaceId) {\n        case 0:\n            colorSpace = swf_tree_1.ColorSpace.SRgb;\n            break;\n        case 1:\n            colorSpace = swf_tree_1.ColorSpace.LinearRgb;\n            break;\n        default:\n            throw new Error(\"Unexpected gradient spread\");\n    }\n    const colors = [];\n    for (let i = 0; i < colorCount; i++) {\n        colors.push(parseColorStop(byteStream, withAlpha));\n    }\n    return {\n        spread,\n        colorSpace,\n        colors,\n    };\n}\nexports.parseGradient = parseGradient;\nfunction parseMorphColorStop(byteStream, withAlpha) {\n    const { ratio, color } = parseColorStop(byteStream, withAlpha);\n    const { ratio: morphRatio, color: morphColor } = parseColorStop(byteStream, withAlpha);\n    return { ratio, color, morphRatio, morphColor };\n}\nexports.parseMorphColorStop = parseMorphColorStop;\nfunction parseMorphGradient(byteStream, withAlpha) {\n    const flags = byteStream.readUint8();\n    const spreadId = ((flags & ((1 << 8) - 1)) >>> 6);\n    const colorSpaceId = ((flags & ((1 << 6) - 1)) >>> 4);\n    const colorCount = (flags & ((1 << 4) - 1));\n    let spread;\n    switch (spreadId) {\n        case 0:\n            spread = swf_tree_1.GradientSpread.Pad;\n            break;\n        case 1:\n            spread = swf_tree_1.GradientSpread.Reflect;\n            break;\n        case 2:\n            spread = swf_tree_1.GradientSpread.Repeat;\n            break;\n        default:\n            throw new Error(\"Unexpected gradient spread\");\n    }\n    let colorSpace;\n    switch (colorSpaceId) {\n        case 0:\n            colorSpace = swf_tree_1.ColorSpace.SRgb;\n            break;\n        case 1:\n            colorSpace = swf_tree_1.ColorSpace.LinearRgb;\n            break;\n        default:\n            throw new Error(\"Unexpected gradient spread\");\n    }\n    const colors = [];\n    for (let i = 0; i < colorCount; i++) {\n        colors.push(parseMorphColorStop(byteStream, withAlpha));\n    }\n    return {\n        spread,\n        colorSpace,\n        colors,\n    };\n}\nexports.parseMorphGradient = parseMorphGradient;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar ActionType;\n(function (ActionType) {\n    ActionType[ActionType[\"Unknown\"] = 0] = \"Unknown\";\n    ActionType[ActionType[\"Add\"] = 10] = \"Add\";\n    ActionType[ActionType[\"Add2\"] = 71] = \"Add2\";\n    ActionType[ActionType[\"And\"] = 16] = \"And\";\n    ActionType[ActionType[\"AsciiToChar\"] = 51] = \"AsciiToChar\";\n    ActionType[ActionType[\"BitAnd\"] = 96] = \"BitAnd\";\n    ActionType[ActionType[\"BitLShift\"] = 99] = \"BitLShift\";\n    ActionType[ActionType[\"BitOr\"] = 97] = \"BitOr\";\n    ActionType[ActionType[\"BitRShift\"] = 100] = \"BitRShift\";\n    ActionType[ActionType[\"BitURShift\"] = 101] = \"BitURShift\";\n    ActionType[ActionType[\"BitXor\"] = 98] = \"BitXor\";\n    ActionType[ActionType[\"Call\"] = 158] = \"Call\";\n    ActionType[ActionType[\"CallFunction\"] = 61] = \"CallFunction\";\n    ActionType[ActionType[\"CallMethod\"] = 82] = \"CallMethod\";\n    ActionType[ActionType[\"CastOp\"] = 43] = \"CastOp\";\n    ActionType[ActionType[\"CharToAscii\"] = 50] = \"CharToAscii\";\n    ActionType[ActionType[\"CloneSprite\"] = 36] = \"CloneSprite\";\n    ActionType[ActionType[\"ConstantPool\"] = 136] = \"ConstantPool\";\n    ActionType[ActionType[\"Decrement\"] = 81] = \"Decrement\";\n    ActionType[ActionType[\"DefineFunction\"] = 155] = \"DefineFunction\";\n    ActionType[ActionType[\"DefineFunction2\"] = 142] = \"DefineFunction2\";\n    ActionType[ActionType[\"DefineLocal\"] = 60] = \"DefineLocal\";\n    ActionType[ActionType[\"DefineLocal2\"] = 65] = \"DefineLocal2\";\n    ActionType[ActionType[\"Delete\"] = 58] = \"Delete\";\n    ActionType[ActionType[\"Delete2\"] = 59] = \"Delete2\";\n    ActionType[ActionType[\"Divide\"] = 13] = \"Divide\";\n    ActionType[ActionType[\"EndDrag\"] = 40] = \"EndDrag\";\n    ActionType[ActionType[\"Enumerate\"] = 70] = \"Enumerate\";\n    ActionType[ActionType[\"Enumerate2\"] = 85] = \"Enumerate2\";\n    ActionType[ActionType[\"Equals\"] = 14] = \"Equals\";\n    ActionType[ActionType[\"Equals2\"] = 73] = \"Equals2\";\n    ActionType[ActionType[\"Extends\"] = 105] = \"Extends\";\n    ActionType[ActionType[\"FsCommand2\"] = 45] = \"FsCommand2\";\n    ActionType[ActionType[\"GetMember\"] = 78] = \"GetMember\";\n    ActionType[ActionType[\"GetProperty\"] = 34] = \"GetProperty\";\n    ActionType[ActionType[\"GetTime\"] = 52] = \"GetTime\";\n    ActionType[ActionType[\"GetUrl\"] = 131] = \"GetUrl\";\n    ActionType[ActionType[\"GetUrl2\"] = 154] = \"GetUrl2\";\n    ActionType[ActionType[\"GetVariable\"] = 28] = \"GetVariable\";\n    ActionType[ActionType[\"GotoFrame\"] = 129] = \"GotoFrame\";\n    ActionType[ActionType[\"GotoFrame2\"] = 159] = \"GotoFrame2\";\n    ActionType[ActionType[\"GotoLabel\"] = 140] = \"GotoLabel\";\n    ActionType[ActionType[\"Greater\"] = 103] = \"Greater\";\n    ActionType[ActionType[\"If\"] = 157] = \"If\";\n    ActionType[ActionType[\"ImplementsOp\"] = 44] = \"ImplementsOp\";\n    ActionType[ActionType[\"Increment\"] = 80] = \"Increment\";\n    ActionType[ActionType[\"InitArray\"] = 66] = \"InitArray\";\n    ActionType[ActionType[\"InitObject\"] = 67] = \"InitObject\";\n    ActionType[ActionType[\"InstanceOf\"] = 84] = \"InstanceOf\";\n    ActionType[ActionType[\"Jump\"] = 153] = \"Jump\";\n    ActionType[ActionType[\"Less\"] = 15] = \"Less\";\n    ActionType[ActionType[\"Less2\"] = 72] = \"Less2\";\n    ActionType[ActionType[\"MbAsciiToChar\"] = 55] = \"MbAsciiToChar\";\n    ActionType[ActionType[\"MbCharToAscii\"] = 54] = \"MbCharToAscii\";\n    ActionType[ActionType[\"MbStringExtract\"] = 53] = \"MbStringExtract\";\n    ActionType[ActionType[\"MbStringLength\"] = 49] = \"MbStringLength\";\n    ActionType[ActionType[\"Modulo\"] = 63] = \"Modulo\";\n    ActionType[ActionType[\"Multiply\"] = 12] = \"Multiply\";\n    ActionType[ActionType[\"NewMethod\"] = 83] = \"NewMethod\";\n    ActionType[ActionType[\"NewObject\"] = 64] = \"NewObject\";\n    ActionType[ActionType[\"NextFrame\"] = 4] = \"NextFrame\";\n    ActionType[ActionType[\"Not\"] = 18] = \"Not\";\n    ActionType[ActionType[\"Or\"] = 17] = \"Or\";\n    ActionType[ActionType[\"Play\"] = 6] = \"Play\";\n    ActionType[ActionType[\"Pop\"] = 23] = \"Pop\";\n    ActionType[ActionType[\"PreviousFrame\"] = 5] = \"PreviousFrame\";\n    ActionType[ActionType[\"Push\"] = 150] = \"Push\";\n    ActionType[ActionType[\"PushDuplicate\"] = 76] = \"PushDuplicate\";\n    ActionType[ActionType[\"RandomNumber\"] = 48] = \"RandomNumber\";\n    ActionType[ActionType[\"Return\"] = 62] = \"Return\";\n    ActionType[ActionType[\"RemoveSprite\"] = 37] = \"RemoveSprite\";\n    ActionType[ActionType[\"SetMember\"] = 79] = \"SetMember\";\n    ActionType[ActionType[\"SetProperty\"] = 35] = \"SetProperty\";\n    ActionType[ActionType[\"SetTarget\"] = 139] = \"SetTarget\";\n    ActionType[ActionType[\"SetTarget2\"] = 32] = \"SetTarget2\";\n    ActionType[ActionType[\"SetVariable\"] = 29] = \"SetVariable\";\n    ActionType[ActionType[\"StackSwap\"] = 77] = \"StackSwap\";\n    ActionType[ActionType[\"StartDrag\"] = 39] = \"StartDrag\";\n    ActionType[ActionType[\"Stop\"] = 7] = \"Stop\";\n    ActionType[ActionType[\"StopSounds\"] = 9] = \"StopSounds\";\n    ActionType[ActionType[\"StoreRegister\"] = 135] = \"StoreRegister\";\n    ActionType[ActionType[\"StrictEquals\"] = 102] = \"StrictEquals\";\n    ActionType[ActionType[\"StringAdd\"] = 33] = \"StringAdd\";\n    ActionType[ActionType[\"StringEquals\"] = 19] = \"StringEquals\";\n    ActionType[ActionType[\"StringExtract\"] = 21] = \"StringExtract\";\n    ActionType[ActionType[\"StringGreater\"] = 104] = \"StringGreater\";\n    ActionType[ActionType[\"StringLength\"] = 20] = \"StringLength\";\n    ActionType[ActionType[\"StringLess\"] = 41] = \"StringLess\";\n    ActionType[ActionType[\"Subtract\"] = 11] = \"Subtract\";\n    ActionType[ActionType[\"TargetPath\"] = 69] = \"TargetPath\";\n    ActionType[ActionType[\"Throw\"] = 42] = \"Throw\";\n    ActionType[ActionType[\"ToInteger\"] = 24] = \"ToInteger\";\n    ActionType[ActionType[\"ToNumber\"] = 74] = \"ToNumber\";\n    ActionType[ActionType[\"ToString\"] = 75] = \"ToString\";\n    ActionType[ActionType[\"ToggleQuality\"] = 8] = \"ToggleQuality\";\n    ActionType[ActionType[\"Trace\"] = 38] = \"Trace\";\n    ActionType[ActionType[\"Try\"] = 143] = \"Try\";\n    ActionType[ActionType[\"TypeOf\"] = 68] = \"TypeOf\";\n    ActionType[ActionType[\"WaitForFrame\"] = 138] = \"WaitForFrame\";\n    ActionType[ActionType[\"WaitForFrame2\"] = 141] = \"WaitForFrame2\";\n    ActionType[ActionType[\"With\"] = 148] = \"With\";\n})(ActionType = exports.ActionType || (exports.ActionType = {}));\nexports.$ActionType = new ts_enum_1.TsEnumType({\n    enum: ActionType,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,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QUNWLGdEQUFhLENBQUE7SUFDYiw2REFBbUIsQ0FBQTtJQUNuQiwrREFBb0IsQ0FBQTtJQUNwQiw2Q0FBVyxDQUFBO0FBQ2IsQ0FBQyxFQXRHVyxVQUFVLEdBQVYsa0JBQVUsS0FBVixrQkFBVSxRQXNHckI7QUFFWSxRQUFBLFdBQVcsR0FBMkIsSUFBSSxvQkFBVSxDQUFhO0lBQzVFLElBQUksRUFBRSxVQUFVO0lBQ2hCLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImFjdGlvbi10eXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gQWN0aW9uVHlwZSB7XG4gIFVua25vd24gPSAweDAwLFxuICBBZGQgPSAweDBhLFxuICBBZGQyID0gMHg0NyxcbiAgQW5kID0gMHgxMCxcbiAgQXNjaWlUb0NoYXIgPSAweDMzLFxuICBCaXRBbmQgPSAweDYwLFxuICBCaXRMU2hpZnQgPSAweDYzLFxuICBCaXRPciA9IDB4NjEsXG4gIEJpdFJTaGlmdCA9IDB4NjQsXG4gIEJpdFVSU2hpZnQgPSAweDY1LFxuICBCaXRYb3IgPSAweDYyLFxuICBDYWxsID0gMHg5ZSxcbiAgQ2FsbEZ1bmN0aW9uID0gMHgzZCxcbiAgQ2FsbE1ldGhvZCA9IDB4NTIsXG4gIENhc3RPcCA9IDB4MmIsXG4gIENoYXJUb0FzY2lpID0gMHgzMixcbiAgQ2xvbmVTcHJpdGUgPSAweDI0LFxuICBDb25zdGFudFBvb2wgPSAweDg4LFxuICBEZWNyZW1lbnQgPSAweDUxLFxuICBEZWZpbmVGdW5jdGlvbiA9IDB4OWIsXG4gIERlZmluZUZ1bmN0aW9uMiA9IDB4OGUsXG4gIERlZmluZUxvY2FsID0gMHgzYyxcbiAgRGVmaW5lTG9jYWwyID0gMHg0MSxcbiAgRGVsZXRlID0gMHgzYSxcbiAgRGVsZXRlMiA9IDB4M2IsXG4gIERpdmlkZSA9IDB4MGQsXG4gIEVuZERyYWcgPSAweDI4LFxuICBFbnVtZXJhdGUgPSAweDQ2LFxuICBFbnVtZXJhdGUyID0gMHg1NSxcbiAgRXF1YWxzID0gMHgwZSxcbiAgRXF1YWxzMiA9IDB4NDksXG4gIEV4dGVuZHMgPSAweDY5LFxuICBGc0NvbW1hbmQyID0gMHgyZCxcbiAgR2V0TWVtYmVyID0gMHg0ZSxcbiAgR2V0UHJvcGVydHkgPSAweDIyLFxuICBHZXRUaW1lID0gMHgzNCxcbiAgR2V0VXJsID0gMHg4MyxcbiAgR2V0VXJsMiA9IDB4OWEsXG4gIEdldFZhcmlhYmxlID0gMHgxYyxcbiAgR290b0ZyYW1lID0gMHg4MSxcbiAgR290b0ZyYW1lMiA9IDB4OWYsXG4gIEdvdG9MYWJlbCA9IDB4OGMsXG4gIEdyZWF0ZXIgPSAweDY3LFxuICBJZiA9IDB4OWQsXG4gIEltcGxlbWVudHNPcCA9IDB4MmMsXG4gIEluY3JlbWVudCA9IDB4NTAsXG4gIEluaXRBcnJheSA9IDB4NDIsXG4gIEluaXRPYmplY3QgPSAweDQzLFxuICBJbnN0YW5jZU9mID0gMHg1NCxcbiAgSnVtcCA9IDB4OTksXG4gIExlc3MgPSAweDBmLFxuICBMZXNzMiA9IDB4NDgsXG4gIE1iQXNjaWlUb0NoYXIgPSAweDM3LFxuICBNYkNoYXJUb0FzY2lpID0gMHgzNixcbiAgTWJTdHJpbmdFeHRyYWN0ID0gMHgzNSxcbiAgTWJTdHJpbmdMZW5ndGggPSAweDMxLFxuICBNb2R1bG8gPSAweDNmLFxuICBNdWx0aXBseSA9IDB4MGMsXG4gIE5ld01ldGhvZCA9IDB4NTMsXG4gIE5ld09iamVjdCA9IDB4NDAsXG4gIE5leHRGcmFtZSA9IDB4MDQsXG4gIE5vdCA9IDB4MTIsXG4gIE9yID0gMHgxMSxcbiAgUGxheSA9IDB4MDYsXG4gIFBvcCA9IDB4MTcsXG4gIFByZXZpb3VzRnJhbWUgPSAweDA1LFxuICBQdXNoID0gMHg5NixcbiAgUHVzaER1cGxpY2F0ZSA9IDB4NGMsXG4gIFJhbmRvbU51bWJlciA9IDB4MzAsXG4gIFJldHVybiA9IDB4M2UsXG4gIFJlbW92ZVNwcml0ZSA9IDB4MjUsXG4gIFNldE1lbWJlciA9IDB4NGYsXG4gIFNldFByb3BlcnR5ID0gMHgyMyxcbiAgU2V0VGFyZ2V0ID0gMHg4YixcbiAgU2V0VGFyZ2V0MiA9IDB4MjAsXG4gIFNldFZhcmlhYmxlID0gMHgxZCxcbiAgU3RhY2tTd2FwID0gMHg0ZCxcbiAgU3RhcnREcmFnID0gMHgyNyxcbiAgU3RvcCA9IDB4MDcsXG4gIFN0b3BTb3VuZHMgPSAweDA5LFxuICBTdG9yZVJlZ2lzdGVyID0gMHg4NyxcbiAgU3RyaWN0RXF1YWxzID0gMHg2NixcbiAgU3RyaW5nQWRkID0gMHgyMSxcbiAgU3RyaW5nRXF1YWxzID0gMHgxMyxcbiAgU3RyaW5nRXh0cmFjdCA9IDB4MTUsXG4gIFN0cmluZ0dyZWF0ZXIgPSAweDY4LFxuICBTdHJpbmdMZW5ndGggPSAweDE0LFxuICBTdHJpbmdMZXNzID0gMHgyOSxcbiAgU3VidHJhY3QgPSAweDBiLFxuICBUYXJnZXRQYXRoID0gMHg0NSxcbiAgVGhyb3cgPSAweDJhLFxuICBUb0ludGVnZXIgPSAweDE4LFxuICBUb051bWJlciA9IDB4NGEsXG4gIFRvU3RyaW5nID0gMHg0YixcbiAgVG9nZ2xlUXVhbGl0eSA9IDB4MDgsXG4gIFRyYWNlID0gMHgyNixcbiAgVHJ5ID0gMHg4ZixcbiAgVHlwZU9mID0gMHg0NCxcbiAgV2FpdEZvckZyYW1lID0gMHg4YSxcbiAgV2FpdEZvckZyYW1lMiA9IDB4OGQsXG4gIFdpdGggPSAweDk0LFxufVxuXG5leHBvcnQgY29uc3QgJEFjdGlvblR5cGU6IFRzRW51bVR5cGU8QWN0aW9uVHlwZT4gPSBuZXcgVHNFbnVtVHlwZTxBY3Rpb25UeXBlPih7XG4gIGVudW06IEFjdGlvblR5cGUsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar ValueType;\n(function (ValueType) {\n    ValueType[ValueType[\"Boolean\"] = 0] = \"Boolean\";\n    ValueType[ValueType[\"Constant\"] = 1] = \"Constant\";\n    ValueType[ValueType[\"Float32\"] = 2] = \"Float32\";\n    ValueType[ValueType[\"Float64\"] = 3] = \"Float64\";\n    ValueType[ValueType[\"Null\"] = 4] = \"Null\";\n    ValueType[ValueType[\"Register\"] = 5] = \"Register\";\n    ValueType[ValueType[\"Sint32\"] = 6] = \"Sint32\";\n    ValueType[ValueType[\"String\"] = 7] = \"String\";\n    ValueType[ValueType[\"Undefined\"] = 8] = \"Undefined\";\n})(ValueType = exports.ValueType || (exports.ValueType = {}));\nexports.$ValueType = new ts_enum_1.TsEnumType({\n    enum: ValueType,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdmFsdWUtdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxTQVVYO0FBVkQsV0FBWSxTQUFTO0lBQ25CLCtDQUFPLENBQUE7SUFDUCxpREFBUSxDQUFBO0lBQ1IsK0NBQU8sQ0FBQTtJQUNQLCtDQUFPLENBQUE7SUFDUCx5Q0FBSSxDQUFBO0lBQ0osaURBQVEsQ0FBQTtJQUNSLDZDQUFNLENBQUE7SUFDTiw2Q0FBTSxDQUFBO0lBQ04sbURBQVMsQ0FBQTtBQUNYLENBQUMsRUFWVyxTQUFTLEdBQVQsaUJBQVMsS0FBVCxpQkFBUyxRQVVwQjtBQUVZLFFBQUEsVUFBVSxHQUEwQixJQUFJLG9CQUFVLENBQVk7SUFDekUsSUFBSSxFQUFFLFNBQVM7SUFDZixVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ2YWx1ZS10eXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gVmFsdWVUeXBlIHtcbiAgQm9vbGVhbixcbiAgQ29uc3RhbnQsXG4gIEZsb2F0MzIsXG4gIEZsb2F0NjQsXG4gIE51bGwsXG4gIFJlZ2lzdGVyLFxuICBTaW50MzIsXG4gIFN0cmluZyxcbiAgVW5kZWZpbmVkLFxufVxuXG5leHBvcnQgY29uc3QgJFZhbHVlVHlwZTogVHNFbnVtVHlwZTxWYWx1ZVR5cGU+ID0gbmV3IFRzRW51bVR5cGU8VmFsdWVUeXBlPih7XG4gIGVudW06IFZhbHVlVHlwZSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","\"use strict\";\n\nvar forEach                 = require(\"./collection-utils\").forEach;\nvar elementUtilsMaker       = require(\"./element-utils\");\nvar listenerHandlerMaker    = require(\"./listener-handler\");\nvar idGeneratorMaker        = require(\"./id-generator\");\nvar idHandlerMaker          = require(\"./id-handler\");\nvar reporterMaker           = require(\"./reporter\");\nvar browserDetector         = require(\"./browser-detector\");\nvar batchProcessorMaker     = require(\"batch-processor\");\nvar stateHandler            = require(\"./state-handler\");\n\n//Detection strategies.\nvar objectStrategyMaker     = require(\"./detection-strategy/object.js\");\nvar scrollStrategyMaker     = require(\"./detection-strategy/scroll.js\");\n\nfunction isCollection(obj) {\n    return Array.isArray(obj) || obj.length !== undefined;\n}\n\nfunction toArray(collection) {\n    if (!Array.isArray(collection)) {\n        var array = [];\n        forEach(collection, function (obj) {\n            array.push(obj);\n        });\n        return array;\n    } else {\n        return collection;\n    }\n}\n\nfunction isElement(obj) {\n    return obj && obj.nodeType === 1;\n}\n\n/**\n * @typedef idHandler\n * @type {object}\n * @property {function} get Gets the resize detector id of the element.\n * @property {function} set Generate and sets the resize detector id of the element.\n */\n\n/**\n * @typedef Options\n * @type {object}\n * @property {boolean} callOnAdd    Determines if listeners should be called when they are getting added.\n                                    Default is true. If true, the listener is guaranteed to be called when it has been added.\n                                    If false, the listener will not be guarenteed to be called when it has been added (does not prevent it from being called).\n * @property {idHandler} idHandler  A custom id handler that is responsible for generating, setting and retrieving id's for elements.\n                                    If not provided, a default id handler will be used.\n * @property {reporter} reporter    A custom reporter that handles reporting logs, warnings and errors.\n                                    If not provided, a default id handler will be used.\n                                    If set to false, then nothing will be reported.\n * @property {boolean} debug        If set to true, the the system will report debug messages as default for the listenTo method.\n */\n\n/**\n * Creates an element resize detector instance.\n * @public\n * @param {Options?} options Optional global options object that will decide how this instance will work.\n */\nmodule.exports = function(options) {\n    options = options || {};\n\n    //idHandler is currently not an option to the listenTo function, so it should not be added to globalOptions.\n    var idHandler;\n\n    if (options.idHandler) {\n        // To maintain compatability with idHandler.get(element, readonly), make sure to wrap the given idHandler\n        // so that readonly flag always is true when it's used here. This may be removed next major version bump.\n        idHandler = {\n            get: function (element) { return options.idHandler.get(element, true); },\n            set: options.idHandler.set\n        };\n    } else {\n        var idGenerator = idGeneratorMaker();\n        var defaultIdHandler = idHandlerMaker({\n            idGenerator: idGenerator,\n            stateHandler: stateHandler\n        });\n        idHandler = defaultIdHandler;\n    }\n\n    //reporter is currently not an option to the listenTo function, so it should not be added to globalOptions.\n    var reporter = options.reporter;\n\n    if(!reporter) {\n        //If options.reporter is false, then the reporter should be quiet.\n        var quiet = reporter === false;\n        reporter = reporterMaker(quiet);\n    }\n\n    //batchProcessor is currently not an option to the listenTo function, so it should not be added to globalOptions.\n    var batchProcessor = getOption(options, \"batchProcessor\", batchProcessorMaker({ reporter: reporter }));\n\n    //Options to be used as default for the listenTo function.\n    var globalOptions = {};\n    globalOptions.callOnAdd     = !!getOption(options, \"callOnAdd\", true);\n    globalOptions.debug         = !!getOption(options, \"debug\", false);\n\n    var eventListenerHandler    = listenerHandlerMaker(idHandler);\n    var elementUtils            = elementUtilsMaker({\n        stateHandler: stateHandler\n    });\n\n    //The detection strategy to be used.\n    var detectionStrategy;\n    var desiredStrategy = getOption(options, \"strategy\", \"object\");\n    var strategyOptions = {\n        reporter: reporter,\n        batchProcessor: batchProcessor,\n        stateHandler: stateHandler,\n        idHandler: idHandler\n    };\n\n    if(desiredStrategy === \"scroll\") {\n        if (browserDetector.isLegacyOpera()) {\n            reporter.warn(\"Scroll strategy is not supported on legacy Opera. Changing to object strategy.\");\n            desiredStrategy = \"object\";\n        } else if (browserDetector.isIE(9)) {\n            reporter.warn(\"Scroll strategy is not supported on IE9. Changing to object strategy.\");\n            desiredStrategy = \"object\";\n        }\n    }\n\n    if(desiredStrategy === \"scroll\") {\n        detectionStrategy = scrollStrategyMaker(strategyOptions);\n    } else if(desiredStrategy === \"object\") {\n        detectionStrategy = objectStrategyMaker(strategyOptions);\n    } else {\n        throw new Error(\"Invalid strategy name: \" + desiredStrategy);\n    }\n\n    //Calls can be made to listenTo with elements that are still being installed.\n    //Also, same elements can occur in the elements list in the listenTo function.\n    //With this map, the ready callbacks can be synchronized between the calls\n    //so that the ready callback can always be called when an element is ready - even if\n    //it wasn't installed from the function itself.\n    var onReadyCallbacks = {};\n\n    /**\n     * Makes the given elements resize-detectable and starts listening to resize events on the elements. Calls the event callback for each event for each element.\n     * @public\n     * @param {Options?} options Optional options object. These options will override the global options. Some options may not be overriden, such as idHandler.\n     * @param {element[]|element} elements The given array of elements to detect resize events of. Single element is also valid.\n     * @param {function} listener The callback to be executed for each resize event for each element.\n     */\n    function listenTo(options, elements, listener) {\n        function onResizeCallback(element) {\n            var listeners = eventListenerHandler.get(element);\n            forEach(listeners, function callListenerProxy(listener) {\n                listener(element);\n            });\n        }\n\n        function addListener(callOnAdd, element, listener) {\n            eventListenerHandler.add(element, listener);\n\n            if(callOnAdd) {\n                listener(element);\n            }\n        }\n\n        //Options object may be omitted.\n        if(!listener) {\n            listener = elements;\n            elements = options;\n            options = {};\n        }\n\n        if(!elements) {\n            throw new Error(\"At least one element required.\");\n        }\n\n        if(!listener) {\n            throw new Error(\"Listener required.\");\n        }\n\n        if (isElement(elements)) {\n            // A single element has been passed in.\n            elements = [elements];\n        } else if (isCollection(elements)) {\n            // Convert collection to array for plugins.\n            // TODO: May want to check so that all the elements in the collection are valid elements.\n            elements = toArray(elements);\n        } else {\n            return reporter.error(\"Invalid arguments. Must be a DOM element or a collection of DOM elements.\");\n        }\n\n        var elementsReady = 0;\n\n        var callOnAdd = getOption(options, \"callOnAdd\", globalOptions.callOnAdd);\n        var onReadyCallback = getOption(options, \"onReady\", function noop() {});\n        var debug = getOption(options, \"debug\", globalOptions.debug);\n\n        forEach(elements, function attachListenerToElement(element) {\n            if (!stateHandler.getState(element)) {\n                stateHandler.initState(element);\n                idHandler.set(element);\n            }\n\n            var id = idHandler.get(element);\n\n            debug && reporter.log(\"Attaching listener to element\", id, element);\n\n            if(!elementUtils.isDetectable(element)) {\n                debug && reporter.log(id, \"Not detectable.\");\n                if(elementUtils.isBusy(element)) {\n                    debug && reporter.log(id, \"System busy making it detectable\");\n\n                    //The element is being prepared to be detectable. Do not make it detectable.\n                    //Just add the listener, because the element will soon be detectable.\n                    addListener(callOnAdd, element, listener);\n                    onReadyCallbacks[id] = onReadyCallbacks[id] || [];\n                    onReadyCallbacks[id].push(function onReady() {\n                        elementsReady++;\n\n                        if(elementsReady === elements.length) {\n                            onReadyCallback();\n                        }\n                    });\n                    return;\n                }\n\n                debug && reporter.log(id, \"Making detectable...\");\n                //The element is not prepared to be detectable, so do prepare it and add a listener to it.\n                elementUtils.markBusy(element, true);\n                return detectionStrategy.makeDetectable({ debug: debug }, element, function onElementDetectable(element) {\n                    debug && reporter.log(id, \"onElementDetectable\");\n\n                    if (stateHandler.getState(element)) {\n                        elementUtils.markAsDetectable(element);\n                        elementUtils.markBusy(element, false);\n                        detectionStrategy.addListener(element, onResizeCallback);\n                        addListener(callOnAdd, element, listener);\n\n                        // Since the element size might have changed since the call to \"listenTo\", we need to check for this change,\n                        // so that a resize event may be emitted.\n                        // Having the startSize object is optional (since it does not make sense in some cases such as unrendered elements), so check for its existance before.\n                        // Also, check the state existance before since the element may have been uninstalled in the installation process.\n                        var state = stateHandler.getState(element);\n                        if (state && state.startSize) {\n                            var width = element.offsetWidth;\n                            var height = element.offsetHeight;\n                            if (state.startSize.width !== width || state.startSize.height !== height) {\n                                onResizeCallback(element);\n                            }\n                        }\n\n                        if(onReadyCallbacks[id]) {\n                            forEach(onReadyCallbacks[id], function(callback) {\n                                callback();\n                            });\n                        }\n                    } else {\n                        // The element has been unisntalled before being detectable.\n                        debug && reporter.log(id, \"Element uninstalled before being detectable.\");\n                    }\n\n                    delete onReadyCallbacks[id];\n\n                    elementsReady++;\n                    if(elementsReady === elements.length) {\n                        onReadyCallback();\n                    }\n                });\n            }\n\n            debug && reporter.log(id, \"Already detecable, adding listener.\");\n\n            //The element has been prepared to be detectable and is ready to be listened to.\n            addListener(callOnAdd, element, listener);\n            elementsReady++;\n        });\n\n        if(elementsReady === elements.length) {\n            onReadyCallback();\n        }\n    }\n\n    function uninstall(elements) {\n        if(!elements) {\n            return reporter.error(\"At least one element is required.\");\n        }\n\n        if (isElement(elements)) {\n            // A single element has been passed in.\n            elements = [elements];\n        } else if (isCollection(elements)) {\n            // Convert collection to array for plugins.\n            // TODO: May want to check so that all the elements in the collection are valid elements.\n            elements = toArray(elements);\n        } else {\n            return reporter.error(\"Invalid arguments. Must be a DOM element or a collection of DOM elements.\");\n        }\n\n        forEach(elements, function (element) {\n            eventListenerHandler.removeAllListeners(element);\n            detectionStrategy.uninstall(element);\n            stateHandler.cleanState(element);\n        });\n    }\n\n    return {\n        listenTo: listenTo,\n        removeListener: eventListenerHandler.removeListener,\n        removeAllListeners: eventListenerHandler.removeAllListeners,\n        uninstall: uninstall\n    };\n};\n\nfunction getOption(options, name, defaultValue) {\n    var value = options[name];\n\n    if((value === undefined || value === null) && defaultValue !== undefined) {\n        return defaultValue;\n    }\n\n    return value;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst css_color_1 = require(\"../css-color\");\nconst display_object_type_1 = require(\"../display/display-object-type\");\nconst decode_swf_morph_shape_1 = require(\"../shape/decode-swf-morph-shape\");\nconst decode_swf_shape_1 = require(\"../shape/decode-swf-shape\");\nconst fill_style_1 = require(\"../shape/fill-style\");\nconst line_style_1 = require(\"../shape/line-style\");\nconst morph_fill_style_1 = require(\"../shape/morph-fill-style\");\nconst morph_line_style_1 = require(\"../shape/morph-line-style\");\nconst morph_path_1 = require(\"../shape/morph-path\");\nconst path_1 = require(\"../shape/path\");\nconst node_canvas_bitmap_service_1 = require(\"./node-canvas-bitmap-service\");\nfunction lerp(start, end, ratio) {\n    return end * ratio + start * (1 - ratio);\n}\nfunction lerpRgba(start, end, ratio) {\n    return {\n        r: lerp(start.r, end.r, ratio),\n        g: lerp(start.g, end.g, ratio),\n        b: lerp(start.b, end.b, ratio),\n        a: lerp(start.a, end.a, ratio),\n    };\n}\n// function clamp(x: number, min: number, max: number): number {\n//   return Math.min(Math.max(x, min), max);\n// }\nclass CanvasRenderer {\n    constructor(context) {\n        this.bitmapService = new node_canvas_bitmap_service_1.NodeCanvasBitmapService();\n        this.context = context;\n        this.morphShapeCache = new WeakMap();\n        this.shapeCache = new WeakMap();\n    }\n    render(stage) {\n        this.renderStage(stage);\n    }\n    async addBitmap(tag) {\n        this.bitmapService.addBitmap(tag);\n    }\n    renderStage(stage) {\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\n        this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height);\n        // TODO: FillRect with background color?\n        this.context.scale(1 / 20, 1 / 20);\n        for (const child of stage.children) {\n            this.drawDisplayObject(child);\n        }\n    }\n    drawDisplayObject(displayObject) {\n        switch (displayObject.type) {\n            case display_object_type_1.DisplayObjectType.Container:\n                this.drawContainer(displayObject);\n                break;\n            case display_object_type_1.DisplayObjectType.Shape:\n                this.drawShape(displayObject);\n                break;\n            case display_object_type_1.DisplayObjectType.MorphShape:\n                this.drawMorphShape(displayObject);\n                break;\n            default:\n                throw new Error(\"UnexpectedDisplayObjectType\");\n        }\n    }\n    getCompiledMorphShape(swfShape) {\n        let compiled = this.morphShapeCache.get(swfShape);\n        if (compiled === undefined) {\n            compiled = decode_swf_morph_shape_1.decodeSwfMorphShape(swfShape);\n            this.morphShapeCache.set(swfShape, compiled);\n        }\n        return compiled;\n    }\n    getCompiledShape(swfShape) {\n        let compiled = this.shapeCache.get(swfShape);\n        if (compiled === undefined) {\n            compiled = decode_swf_shape_1.decodeSwfShape(swfShape);\n            this.shapeCache.set(swfShape, compiled);\n        }\n        return compiled;\n    }\n    drawShape(shape) {\n        this.context.save();\n        try {\n            if (shape.matrix !== undefined) {\n                this.applyMatrix(shape.matrix);\n            }\n            const compiled = this.getCompiledShape(shape.definition);\n            for (const path of compiled.paths) {\n                this.drawPath(path);\n            }\n        }\n        catch (err) {\n            throw err;\n        }\n        finally {\n            this.context.restore();\n        }\n    }\n    drawContainer(container) {\n        this.context.save();\n        try {\n            if (container.matrix !== undefined) {\n                this.applyMatrix(container.matrix);\n            }\n            for (const child of container.children) {\n                this.drawDisplayObject(child);\n            }\n        }\n        catch (err) {\n            throw err;\n        }\n        finally {\n            this.context.restore();\n        }\n    }\n    //\n    // private renderSimpleButton(simpleButton: SimpleButton): void {\n    //   switch (simpleButton.state) {\n    //     case ButtonState.Up:\n    //       if (simpleButton.upState !== undefined) {\n    //         this.renderDisplayObject(simpleButton.upState);\n    //       }\n    //       break;\n    //     case ButtonState.Down:\n    //       if (simpleButton.downState !== undefined) {\n    //         this.renderDisplayObject(simpleButton.downState);\n    //       }\n    //       break;\n    //     case ButtonState.Over:\n    //       if (simpleButton.overState !== undefined) {\n    //         this.renderDisplayObject(simpleButton.overState);\n    //       }\n    //       break;\n    //     case ButtonState.HitTest:\n    //       if (simpleButton.hitTestState !== undefined) {\n    //         this.renderDisplayObject(simpleButton.hitTestState);\n    //       }\n    //       break;\n    //     default:\n    //       throw new Incident(\"UnexpectedSwitchVariant\", simpleButton.state);\n    //   }\n    // }\n    // private renderLoader(loader: SwfLoader): void {\n    // console.log(\"Rendering loader\");\n    // }\n    applyMatrix(matrix) {\n        this.context.transform(matrix.scaleX.valueOf(), matrix.rotateSkew0.valueOf(), matrix.rotateSkew1.valueOf(), matrix.scaleY.valueOf(), matrix.translateX, matrix.translateY);\n    }\n    drawMorphShape(shape) {\n        this.context.save();\n        try {\n            if (shape.matrix !== undefined) {\n                this.applyMatrix(shape.matrix);\n            }\n            const compiled = this.getCompiledMorphShape(shape.definition);\n            for (const path of compiled.paths) {\n                this.drawMorphPath(path, shape.ratio);\n            }\n        }\n        catch (err) {\n            throw err;\n        }\n        finally {\n            this.context.restore();\n        }\n    }\n    drawMorphPath(path, ratio) {\n        if (path.fill === undefined && path.line === undefined || path.commands.length === 0) {\n            return;\n        }\n        this.context.beginPath();\n        for (const command of path.commands) {\n            switch (command.type) {\n                case morph_path_1.MorphCommandType.CurveTo:\n                    this.context.quadraticCurveTo(lerp(command.controlX[0], command.controlX[1], ratio), lerp(command.controlY[0], command.controlY[1], ratio), lerp(command.endX[0], command.endX[1], ratio), lerp(command.endY[0], command.endY[1], ratio));\n                    break;\n                case morph_path_1.MorphCommandType.LineTo:\n                    this.context.lineTo(lerp(command.endX[0], command.endX[1], ratio), lerp(command.endY[0], command.endY[1], ratio));\n                    break;\n                case morph_path_1.MorphCommandType.MoveTo:\n                    this.context.moveTo(lerp(command.x[0], command.x[1], ratio), lerp(command.y[0], command.y[1], ratio));\n                    break;\n                default:\n                    throw new incident_1.Incident(\"UnexpectedMorphCommand\", { command });\n            }\n        }\n        if (path.fill !== undefined) {\n            switch (path.fill.type) {\n                case morph_fill_style_1.MorphFillStyleType.Solid:\n                    this.context.fillStyle = css_color_1.fromNormalizedColor(lerpRgba(path.fill.startColor, path.fill.endColor, ratio));\n                    break;\n                default:\n                    throw new incident_1.Incident(\"NotImplementedFillStyle\", { style: path.fill });\n            }\n            this.context.fill();\n        }\n        if (path.line !== undefined) {\n            switch (path.line.type) {\n                case morph_line_style_1.MorphLineStyleType.Solid:\n                    this.context.lineWidth = lerp(path.line.width[0], path.line.width[1], ratio);\n                    this.context.strokeStyle = css_color_1.fromNormalizedColor(lerpRgba(path.line.startColor, path.line.endColor, ratio));\n                    break;\n                default:\n                    throw new incident_1.Incident(\"NotImplementedLineStyle\", { style: path.line });\n            }\n            this.context.lineCap = \"round\";\n            this.context.lineJoin = \"round\";\n            this.context.stroke();\n        }\n    }\n    drawPath(path) {\n        if (path.fill === undefined && path.line === undefined || path.commands.length === 0) {\n            return;\n        }\n        this.context.beginPath();\n        for (const command of path.commands) {\n            switch (command.type) {\n                case path_1.CommandType.CurveTo:\n                    this.context.quadraticCurveTo(command.controlX, command.controlY, command.endX, command.endY);\n                    break;\n                case path_1.CommandType.LineTo:\n                    this.context.lineTo(command.endX, command.endY);\n                    break;\n                case path_1.CommandType.MoveTo:\n                    this.context.moveTo(command.x, command.y);\n                    break;\n                default:\n                    throw new incident_1.Incident(\"UnexpectedCommand\", { command });\n            }\n        }\n        if (path.fill !== undefined) {\n            this.context.save();\n            switch (path.fill.type) {\n                case fill_style_1.FillStyleType.Bitmap:\n                    const bitmapId = path.fill.bitmapId;\n                    const bitmap = this.bitmapService.getById(bitmapId);\n                    if (bitmap.bitmap === undefined) {\n                        this.context.fillStyle = css_color_1.fromNormalizedColor({\n                            r: 0.2,\n                            g: 0.6,\n                            b: 0.8,\n                            a: 0.9,\n                        });\n                    }\n                    else {\n                        const pattern = this.context.createPattern(bitmap.bitmap, path.fill.repeating ? \"repeat\" : \"no-repeat\");\n                        if (pattern === null) {\n                            throw new Error(\"CannotCreatePattern\");\n                        }\n                        this.applyMatrix(path.fill.matrix);\n                        this.context.fillStyle = pattern;\n                    }\n                    break;\n                case fill_style_1.FillStyleType.Solid:\n                    this.context.fillStyle = css_color_1.fromNormalizedColor(path.fill.color);\n                    break;\n                case fill_style_1.FillStyleType.FocalGradient:\n                    this.applyMatrix(path.fill.matrix);\n                    const GRAD_RADIUS = 16384;\n                    const gradient = this.context.createRadialGradient(lerp(0, GRAD_RADIUS, path.fill.focalPoint), 0, 0, 0, 0, GRAD_RADIUS);\n                    for (const colorStop of path.fill.gradient.colors) {\n                        gradient.addColorStop(colorStop.ratio, css_color_1.fromNormalizedColor(colorStop.color));\n                    }\n                    this.context.fillStyle = gradient;\n                    break;\n                default:\n                    throw new incident_1.Incident(\"NotImplementedFillStyle\", { style: path.fill });\n            }\n            this.context.fill();\n            this.context.restore();\n        }\n        if (path.line !== undefined) {\n            switch (path.line.type) {\n                case line_style_1.LineStyleType.Solid:\n                    this.context.lineWidth = path.line.width;\n                    this.context.strokeStyle = css_color_1.fromNormalizedColor(path.line.color);\n                    break;\n                default:\n                    throw new incident_1.Incident(\"NotImplementedLineStyle\", { style: path.line });\n            }\n            this.context.stroke();\n        }\n    }\n}\nexports.CanvasRenderer = CanvasRenderer;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"@open-flash/stream\");\nconst ast = __importStar(require(\"swf-tree\"));\nexports.ast = ast;\nconst movie_1 = require(\"./parsers/movie\");\nfunction movieFromBytes(bytes) {\n    const byteStream = new stream_1.ReadableStream(bytes);\n    return movie_1.parseMovie(byteStream);\n}\nexports.movieFromBytes = movieFromBytes;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsK0NBQW9EO0FBQ3BELDhDQUFnQztBQUd2QixrQkFBRztBQUZaLDJDQUE2QztBQUk3QyxTQUFnQixjQUFjLENBQUMsS0FBaUI7SUFDOUMsTUFBTSxVQUFVLEdBQW1CLElBQUksdUJBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM3RCxPQUFPLGtCQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDaEMsQ0FBQztBQUhELHdDQUdDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVhZGFibGVTdHJlYW0gfSBmcm9tIFwiQG9wZW4tZmxhc2gvc3RyZWFtXCI7XG5pbXBvcnQgKiBhcyBhc3QgZnJvbSBcInN3Zi10cmVlXCI7XG5pbXBvcnQgeyBwYXJzZU1vdmllIH0gZnJvbSBcIi4vcGFyc2Vycy9tb3ZpZVwiO1xuXG5leHBvcnQgeyBhc3QgfTtcblxuZXhwb3J0IGZ1bmN0aW9uIG1vdmllRnJvbUJ5dGVzKGJ5dGVzOiBVaW50OEFycmF5KTogYXN0Lk1vdmllIHtcbiAgY29uc3QgYnl0ZVN0cmVhbTogUmVhZGFibGVTdHJlYW0gPSBuZXcgUmVhZGFibGVTdHJlYW0oYnl0ZXMpO1xuICByZXR1cm4gcGFyc2VNb3ZpZShieXRlU3RyZWFtKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass NativeHost {\n    trace(message) {\n        console.log(message);\n    }\n    getTarget() {\n        return;\n    }\n}\nexports.NativeHost = NativeHost;\nclass NoopHost {\n    trace() {\n    }\n    getTarget() {\n        return;\n    }\n}\nexports.NoopHost = NoopHost;\nclass LoggedHost {\n    constructor() {\n        this.logs = [];\n    }\n    trace(message) {\n        this.logs.push(message);\n    }\n    getTarget() {\n        return;\n    }\n}\nexports.LoggedHost = LoggedHost;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvaG9zdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQVlBLE1BQWEsVUFBVTtJQUNyQixLQUFLLENBQUMsT0FBZTtRQUNuQixPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxTQUFTO1FBQ1AsT0FBTztJQUNULENBQUM7Q0FDRjtBQVJELGdDQVFDO0FBRUQsTUFBYSxRQUFRO0lBQ25CLEtBQUs7SUFDTCxDQUFDO0lBRUQsU0FBUztRQUNQLE9BQU87SUFDVCxDQUFDO0NBQ0Y7QUFQRCw0QkFPQztBQUVELE1BQWEsVUFBVTtJQUdyQjtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDO0lBQ2pCLENBQUM7SUFFRCxLQUFLLENBQUMsT0FBZTtRQUNuQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBRUQsU0FBUztRQUNQLE9BQU87SUFDVCxDQUFDO0NBQ0Y7QUFkRCxnQ0FjQyIsImZpbGUiOiJob3N0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGFyZ2V0SWQgfSBmcm9tIFwiLi92bVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEhvc3Qge1xuICB0cmFjZShtZXNzYWdlOiBzdHJpbmcpOiB2b2lkO1xuXG4gIGdldFRhcmdldCh0YXJnZXRJZDogVGFyZ2V0SWQpOiBUYXJnZXQgfCB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGFyZ2V0IHtcbiAgc3RvcCgpOiB2b2lkO1xufVxuXG5leHBvcnQgY2xhc3MgTmF0aXZlSG9zdCBpbXBsZW1lbnRzIEhvc3Qge1xuICB0cmFjZShtZXNzYWdlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICBjb25zb2xlLmxvZyhtZXNzYWdlKTtcbiAgfVxuXG4gIGdldFRhcmdldCgpOiB1bmRlZmluZWQge1xuICAgIHJldHVybjtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTm9vcEhvc3QgaW1wbGVtZW50cyBIb3N0IHtcbiAgdHJhY2UoKTogdm9pZCB7XG4gIH1cblxuICBnZXRUYXJnZXQoKTogdW5kZWZpbmVkIHtcbiAgICByZXR1cm47XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIExvZ2dlZEhvc3QgaW1wbGVtZW50cyBIb3N0IHtcbiAgcHVibGljIHJlYWRvbmx5IGxvZ3M6IHN0cmluZ1tdO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMubG9ncyA9IFtdO1xuICB9XG5cbiAgdHJhY2UobWVzc2FnZTogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5sb2dzLnB1c2gobWVzc2FnZSk7XG4gIH1cblxuICBnZXRUYXJnZXQoKTogdW5kZWZpbmVkIHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst avm1_parser_1 = require(\"avm1-parser\");\nconst action_type_1 = require(\"avm1-tree/action-type\");\nconst value_type_1 = require(\"avm1-tree/value-type\");\nconst avm_value_1 = require(\"./avm-value\");\nconst scope_1 = require(\"./scope\");\nconst SWF_VERSION = 8;\nclass Vm {\n    constructor() {\n        this.nextScriptId = 0;\n        this.scriptsById = new Map();\n    }\n    createAvm1Script(avm1Bytes, target, rootScope) {\n        const id = this.nextScriptId++;\n        const script = { id, bytes: avm1Bytes, target, rootScope };\n        this.scriptsById.set(id, script);\n        return id;\n    }\n    runToCompletion(scriptId, host, maxActions = 1000) {\n        const script = this.scriptsById.get(scriptId);\n        if (script === undefined) {\n            throw new Error(`ScriptNotFound: ${scriptId}`);\n        }\n        const scope = script.rootScope !== null ? new scope_1.DynamicScope(script.rootScope) : new scope_1.StaticScope();\n        const ectx = new ExecutionContext(this, host, script.target, scope);\n        const parser = new avm1_parser_1.Avm1Parser(script.bytes);\n        let actionCount = 0;\n        while (actionCount < maxActions) {\n            const action = parser.readNext();\n            if (action === undefined) {\n                break;\n            }\n            ectx.exec(action);\n            actionCount++;\n        }\n        if (actionCount === maxActions) {\n            throw new Error(\"ActionTimeout\");\n        }\n    }\n    newExternal(handler) {\n        return {\n            type: avm_value_1.AvmValueType.External,\n            handler,\n        };\n    }\n    newObject() {\n        return {\n            type: avm_value_1.AvmValueType.Object,\n            prototype: avm_value_1.AVM_NULL,\n            ownProperties: new Map(),\n        };\n    }\n    setMember(target, key, value) {\n        switch (target.type) {\n            case avm_value_1.AvmValueType.External: {\n                target.handler.set(key, value);\n                break;\n            }\n            case avm_value_1.AvmValueType.Object: {\n                target.ownProperties.set(key, { value });\n                break;\n            }\n            default:\n                throw new Error(\"InvalidSetMemberTarget\");\n        }\n    }\n    getMember(target, key) {\n        const value = this.tryGetMember(target, key);\n        return value !== undefined ? value : avm_value_1.AVM_UNDEFINED;\n    }\n    tryGetMember(target, key) {\n        switch (target.type) {\n            case avm_value_1.AvmValueType.External: {\n                return target.handler.get(key);\n            }\n            case avm_value_1.AvmValueType.Object: {\n                const prop = target.ownProperties.get(key);\n                if (prop !== undefined) {\n                    return prop.value;\n                }\n                if (target.prototype.type === avm_value_1.AvmValueType.External || target.prototype.type === avm_value_1.AvmValueType.Object) {\n                    return this.tryGetMember(target.prototype, key);\n                }\n                return undefined;\n            }\n            default:\n                throw new Error(\"CannotGetMember\");\n        }\n    }\n}\nexports.Vm = Vm;\nclass AvmStack {\n    constructor() {\n        this.stack = [];\n    }\n    push(value) {\n        this.stack.push(value);\n    }\n    pop() {\n        return this.stack.length > 0 ? this.stack.pop() : avm_value_1.AVM_UNDEFINED;\n    }\n}\nclass AvmConstantPool {\n    constructor() {\n        this.pool = [];\n    }\n    set(pool) {\n        this.pool.splice(0, this.pool.length, ...pool);\n    }\n    get(index) {\n        // TODO: Warn on out-of-bound pool access?\n        // TODO: Mimick unitialized pool with the values used by Adobe's player?\n        return index < this.pool.length ? this.pool[index] : avm_value_1.AVM_UNDEFINED;\n    }\n}\nclass ExecutionContext {\n    constructor(vm, host, defaultTarget, scope) {\n        this.vm = vm;\n        this.constantPool = new AvmConstantPool();\n        this.stack = new AvmStack();\n        this.scope = scope;\n        this.host = host;\n        this.target = defaultTarget;\n        this.defaultTarget = defaultTarget;\n    }\n    apply(fn, thisArg, args) {\n        switch (fn.type) {\n            case avm_value_1.AvmValueType.External: {\n                if (fn.handler.apply === undefined) {\n                    throw new Error(\"CannotApplyExternal\");\n                }\n                return fn.handler.apply(thisArg, args);\n            }\n            default:\n                throw new Error(\"CannotApply\");\n        }\n    }\n    exec(action) {\n        switch (action.action) {\n            case action_type_1.ActionType.CallMethod:\n                this.execCallMethod();\n                break;\n            case action_type_1.ActionType.ConstantPool:\n                this.execConstantPool(action);\n                break;\n            case action_type_1.ActionType.DefineLocal:\n                this.execDefineLocal();\n                break;\n            case action_type_1.ActionType.GetMember:\n                this.execGetMember();\n                break;\n            case action_type_1.ActionType.GetVariable:\n                this.execGetVariable();\n                break;\n            case action_type_1.ActionType.InitObject:\n                this.execInitObject();\n                break;\n            case action_type_1.ActionType.Pop:\n                this.execPop();\n                break;\n            case action_type_1.ActionType.Push:\n                this.execPush(action);\n                break;\n            case action_type_1.ActionType.SetTarget:\n                this.execSetTarget(action);\n                break;\n            case action_type_1.ActionType.SetVariable:\n                this.execSetVariable();\n                break;\n            case action_type_1.ActionType.Stop:\n                this.execStop();\n                break;\n            case action_type_1.ActionType.Trace:\n                this.execTrace();\n                break;\n            default:\n                console.error(action);\n                throw new Error(`UnknownAction: ${action.action} (${action_type_1.ActionType[action.action]})`);\n        }\n    }\n    execCallMethod() {\n        const avmKey = this.stack.pop();\n        if (avmKey.type === avm_value_1.AvmValueType.Undefined) {\n            throw new Error(\"NotImplemented: undefined key for execCallMethod\");\n        }\n        const key = this.toAvmString(avmKey).value;\n        const obj = this.stack.pop();\n        const method = this.vm.getMember(obj, key);\n        const avmArgCount = this.stack.pop();\n        const argCount = this.toUintSize(avmArgCount);\n        const args = [];\n        for (let _ = 0; _ < argCount; _++) {\n            args.push(this.stack.pop());\n        }\n        const result = this.apply(method, obj, args);\n        this.stack.push(result);\n    }\n    execConstantPool(action) {\n        const pool = [];\n        for (const value of action.constantPool) {\n            pool.push({ type: avm_value_1.AvmValueType.String, value });\n        }\n        this.constantPool.set(pool);\n    }\n    execDefineLocal() {\n        const value = this.stack.pop();\n        const name = this.toAvmString(this.stack.pop()).value;\n        this.scope.set(name, value, this);\n    }\n    execGetMember() {\n        const key = this.toAvmString(this.stack.pop()).value;\n        const target = this.stack.pop();\n        this.stack.push(this.vm.getMember(target, key));\n    }\n    execGetVariable() {\n        const name = this.toAvmString(this.stack.pop()).value;\n        const value = this.scope.get(name, this);\n        this.stack.push(value !== undefined ? value : avm_value_1.AVM_UNDEFINED);\n    }\n    execInitObject() {\n        const avmPropertyCount = this.stack.pop();\n        const propertyCount = this.toUintSize(avmPropertyCount);\n        const obj = this.vm.newObject();\n        for (let _ = 0; _ < propertyCount; _++) {\n            const value = this.stack.pop();\n            const key = this.toAvmString(this.stack.pop()).value;\n            obj.ownProperties.set(key, { value });\n        }\n        this.stack.push(obj);\n    }\n    execPop() {\n        this.stack.pop();\n    }\n    execPush(action) {\n        for (const value of action.values) {\n            switch (value.type) {\n                case value_type_1.ValueType.Constant:\n                    this.stack.push(this.constantPool.get(value.value));\n                    break;\n                case value_type_1.ValueType.Sint32:\n                    this.stack.push({ type: avm_value_1.AvmValueType.Number, value: value.value });\n                    break;\n                case value_type_1.ValueType.String:\n                    this.stack.push({ type: avm_value_1.AvmValueType.String, value: value.value });\n                    break;\n                default:\n                    throw new Error(`UnknownValueType ${value.type} (${value_type_1.ValueType[value.type]})`);\n            }\n        }\n    }\n    execSetTarget(action) {\n        if (action.targetName === \"\") {\n            this.target = this.defaultTarget;\n        }\n        else {\n            throw new Error(\"NotImplemented: execSetTarget(targetName !== \\\"\\\")\");\n        }\n    }\n    execSetVariable() {\n        // TODO: Check/fix scope selection (not always the closest one)\n        const value = this.stack.pop();\n        const path = this.toAvmString(this.stack.pop()).value;\n        if (path.indexOf(\":\") >= 0) {\n            throw new Error(\"NotImplemented: SetVariableInRemoteTarget\");\n        }\n        const name = path;\n        this.scope.set(name, value, this);\n    }\n    execStop() {\n        if (this.target === null) {\n            console.warn(\"NoCurrentTarget\");\n            return;\n        }\n        const target = this.host.getTarget(this.target);\n        if (target !== undefined) {\n            target.stop();\n        }\n        else {\n            console.warn(\"TargetNotFound\");\n        }\n    }\n    execTrace() {\n        const message = this.stack.pop();\n        const messageStr = message.type === avm_value_1.AvmValueType.Undefined\n            ? { type: avm_value_1.AvmValueType.String, value: \"undefined\" }\n            : avm_value_1.AvmValue.toAvmString(message, SWF_VERSION);\n        this.host.trace(messageStr.value);\n    }\n    toAvmString(avmValue) {\n        if (avmValue.type === avm_value_1.AvmValueType.String) {\n            return avmValue;\n        }\n        throw new Error(\"InvalidAvmString\");\n    }\n    toUintSize(avmValue) {\n        if (avmValue.type === avm_value_1.AvmValueType.Number && avmValue.value >= 0 && Math.floor(avmValue.value) === avmValue.value) {\n            return avmValue.value;\n        }\n        throw new Error(\"InvalidUintSize\");\n    }\n}\nexports.ExecutionContext = ExecutionContext;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst object_inspect_1 = __importDefault(require(\"object-inspect\"));\n/**\n * Default message formatter.\n *\n * This uses `object-inspect` to print the `data` object.\n *\n * @param data Data object associated with the error.\n * @return String representation of the data object.\n */\nfunction format(data) {\n    return object_inspect_1.default(data, { depth: 30 });\n}\nexports.format = format;\n/**\n * Define a hidden property.\n *\n * @param obj\n * @param propertyName\n * @param value\n */\nfunction defineHiddenProperty(obj, propertyName, value) {\n    Object.defineProperty(obj, propertyName, {\n        value,\n        configurable: true,\n        enumerable: false,\n        writable: true,\n    });\n}\n/**\n * Define a normal property.\n *\n * @param obj\n * @param propertyName\n * @param value\n */\nfunction defineSimpleProperty(obj, propertyName, value) {\n    Object.defineProperty(obj, propertyName, {\n        value,\n        configurable: true,\n        enumerable: true,\n        writable: true,\n    });\n}\n/**\n * A symbol used internally to prevent the capture of the call stack.\n */\nconst noStackSymbol = {};\n// Incident factory, allows a fine control over the getter / setters\n// and will eventually allow to have TypeError, SyntaxError, etc. as super classes.\nfunction createIncident(_super) {\n    Object.setPrototypeOf(Incident, _super);\n    function __() {\n        this.constructor = Incident;\n    }\n    __.prototype = _super.prototype;\n    Incident.prototype = new __();\n    function Incident(\n    // tslint:disable-next-line:trailing-comma\n    ...args) {\n        if (!(this instanceof Incident)) {\n            switch (args.length) {\n                case 0:\n                    return new Incident(noStackSymbol);\n                case 1:\n                    if (args[0] instanceof Error) {\n                        const err = args[0];\n                        let converted;\n                        const name = err.name;\n                        const message = typeof err._message === \"function\"\n                            ? err._message\n                            : err.message;\n                        if (err.cause instanceof Error) {\n                            if (typeof err.data === \"object\") {\n                                converted = new Incident(noStackSymbol, err.cause, name, err.data, message);\n                            }\n                            else {\n                                converted = new Incident(noStackSymbol, err.cause, name, message);\n                            }\n                        }\n                        else {\n                            if (typeof err.data === \"object\") {\n                                converted = new Incident(noStackSymbol, name, err.data, message);\n                            }\n                            else {\n                                converted = new Incident(noStackSymbol, name, message);\n                            }\n                        }\n                        if (err._stackContainer !== undefined) {\n                            converted._stackContainer = args[0]._stackContainer;\n                        }\n                        else if (err._stack === undefined) {\n                            converted._stackContainer = args[0];\n                            converted._stack = null; // Use the stack as-is\n                        }\n                        else {\n                            converted._stack = err._stack;\n                        }\n                        return converted;\n                    }\n                    return new Incident(noStackSymbol, args[0]);\n                case 2:\n                    return new Incident(noStackSymbol, args[0], args[1]);\n                case 3:\n                    return new Incident(noStackSymbol, args[0], args[1], args[2]);\n                default:\n                    return new Incident(noStackSymbol, args[0], args[1], args[2], args[3]);\n            }\n        }\n        let noStack = false;\n        let name;\n        let data = undefined;\n        let cause = undefined;\n        let message;\n        const argCount = args.length;\n        let argIndex = 0;\n        if (argCount > 0 && args[0] === noStackSymbol) {\n            noStack = true;\n            argIndex++;\n        }\n        if (argIndex < argCount && args[argIndex] instanceof Error) {\n            cause = args[argIndex++];\n        }\n        if (typeof args[argIndex] !== \"string\") {\n            throw new TypeError(\"Missing required `name` argument to `Incident`.\");\n        }\n        name = args[argIndex++];\n        if (argIndex < argCount && typeof args[argIndex] === \"object\") {\n            data = args[argIndex++];\n        }\n        if (argIndex < argCount && (typeof args[argCount - 1] === \"string\" || typeof args[argCount - 1] === \"function\")) {\n            message = args[argIndex];\n        }\n        else {\n            if (data !== undefined) {\n                message = format;\n            }\n            else {\n                message = \"\";\n            }\n        }\n        if (data === undefined) {\n            data = {};\n        }\n        _super.call(this, typeof message === \"function\" ? \"<non-evaluated lazy message>\" : message);\n        this.name = name;\n        defineHiddenProperty(this, \"_message\", message);\n        this.data = data;\n        if (cause !== undefined) {\n            this.cause = cause;\n        }\n        defineHiddenProperty(this, \"_stack\", undefined);\n        defineHiddenProperty(this, \"_stackContainer\", noStack ? undefined : new Error());\n    }\n    Incident.prototype.toString = Error.prototype.toString;\n    function getMessage() {\n        if (typeof this._message === \"function\") {\n            this._message = this._message(this.data);\n        }\n        defineSimpleProperty(this, \"message\", this._message);\n        return this._message;\n    }\n    function setMessage(message) {\n        this._message = message;\n    }\n    function getStack() {\n        if (this._stack === undefined || this._stack === null) {\n            if (this._stackContainer !== undefined && this._stackContainer.stack !== undefined) {\n                // This removes the firs lines corresponding to: \"Error\\n    at new Incident [...]\"\n                if (this._stack === null) {\n                    // `null` indicates that the stack has to be used without any transformation\n                    // This usually occurs when the stack container is an error that was converted\n                    this._stack = this._stackContainer.stack;\n                }\n                else {\n                    const stack = this._stackContainer.stack.replace(/^[^\\n]+\\n[^\\n]+\\n/, \"\");\n                    this._stack = this.message === \"\" ?\n                        `${this.name}\\n${stack}` :\n                        `${this.name}: ${this.message}\\n${stack}`;\n                }\n            }\n            else {\n                this._stack = this.message === \"\" ? this.name : `${this.name}: ${this.message}`;\n            }\n            if (this.cause !== undefined && this.cause.stack !== undefined) {\n                this._stack = `${this._stack}\\n  caused by ${this.cause.stack}`;\n            }\n        }\n        Object.defineProperty(this, \"stack\", {\n            configurable: true,\n            value: this._stack,\n            writable: true,\n        });\n        return this._stack;\n    }\n    function setStack(stack) {\n        this._stackContainer = undefined;\n        this._stack = stack;\n    }\n    Object.defineProperty(Incident.prototype, \"message\", {\n        get: getMessage,\n        set: setMessage,\n        enumerable: true,\n        configurable: true,\n    });\n    Object.defineProperty(Incident.prototype, \"stack\", {\n        get: getStack,\n        set: setStack,\n        enumerable: true,\n        configurable: true,\n    });\n    return Incident;\n}\n// tslint:disable-next-line:variable-name\nexports.Incident = createIncident(Error);\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nmodule.exports = function(options) {\n    var getState = options.stateHandler.getState;\n\n    /**\n     * Tells if the element has been made detectable and ready to be listened for resize events.\n     * @public\n     * @param {element} The element to check.\n     * @returns {boolean} True or false depending on if the element is detectable or not.\n     */\n    function isDetectable(element) {\n        var state = getState(element);\n        return state && !!state.isDetectable;\n    }\n\n    /**\n     * Marks the element that it has been made detectable and ready to be listened for resize events.\n     * @public\n     * @param {element} The element to mark.\n     */\n    function markAsDetectable(element) {\n        getState(element).isDetectable = true;\n    }\n\n    /**\n     * Tells if the element is busy or not.\n     * @public\n     * @param {element} The element to check.\n     * @returns {boolean} True or false depending on if the element is busy or not.\n     */\n    function isBusy(element) {\n        return !!getState(element).busy;\n    }\n\n    /**\n     * Marks the object is busy and should not be made detectable.\n     * @public\n     * @param {element} element The element to mark.\n     * @param {boolean} busy If the element is busy or not.\n     */\n    function markBusy(element, busy) {\n        getState(element).busy = !!busy;\n    }\n\n    return {\n        isDetectable: isDetectable,\n        markAsDetectable: markAsDetectable,\n        isBusy: isBusy,\n        markBusy: markBusy\n    };\n};\n","\"use strict\";\n\nmodule.exports = function(idHandler) {\n    var eventListeners = {};\n\n    /**\n     * Gets all listeners for the given element.\n     * @public\n     * @param {element} element The element to get all listeners for.\n     * @returns All listeners for the given element.\n     */\n    function getListeners(element) {\n        var id = idHandler.get(element);\n\n        if (id === undefined) {\n            return [];\n        }\n\n        return eventListeners[id] || [];\n    }\n\n    /**\n     * Stores the given listener for the given element. Will not actually add the listener to the element.\n     * @public\n     * @param {element} element The element that should have the listener added.\n     * @param {function} listener The callback that the element has added.\n     */\n    function addListener(element, listener) {\n        var id = idHandler.get(element);\n\n        if(!eventListeners[id]) {\n            eventListeners[id] = [];\n        }\n\n        eventListeners[id].push(listener);\n    }\n\n    function removeListener(element, listener) {\n        var listeners = getListeners(element);\n        for (var i = 0, len = listeners.length; i < len; ++i) {\n            if (listeners[i] === listener) {\n              listeners.splice(i, 1);\n              break;\n            }\n        }\n    }\n\n    function removeAllListeners(element) {\n      var listeners = getListeners(element);\n      if (!listeners) { return; }\n      listeners.length = 0;\n    }\n\n    return {\n        get: getListeners,\n        add: addListener,\n        removeListener: removeListener,\n        removeAllListeners: removeAllListeners\n    };\n};\n","\"use strict\";\n\nmodule.exports = function() {\n    var idCount = 1;\n\n    /**\n     * Generates a new unique id in the context.\n     * @public\n     * @returns {number} A unique id in the context.\n     */\n    function generate() {\n        return idCount++;\n    }\n\n    return {\n        generate: generate\n    };\n};\n","\"use strict\";\n\nmodule.exports = function(options) {\n    var idGenerator     = options.idGenerator;\n    var getState        = options.stateHandler.getState;\n\n    /**\n     * Gets the resize detector id of the element.\n     * @public\n     * @param {element} element The target element to get the id of.\n     * @returns {string|number|null} The id of the element. Null if it has no id.\n     */\n    function getId(element) {\n        var state = getState(element);\n\n        if (state && state.id !== undefined) {\n            return state.id;\n        }\n\n        return null;\n    }\n\n    /**\n     * Sets the resize detector id of the element. Requires the element to have a resize detector state initialized.\n     * @public\n     * @param {element} element The target element to set the id of.\n     * @returns {string|number|null} The id of the element.\n     */\n    function setId(element) {\n        var state = getState(element);\n\n        if (!state) {\n            throw new Error(\"setId required the element to have a resize detection state.\");\n        }\n\n        var id = idGenerator.generate();\n\n        state.id = id;\n\n        return id;\n    }\n\n    return {\n        get: getId,\n        set: setId\n    };\n};\n","\"use strict\";\n\n/* global console: false */\n\n/**\n * Reporter that handles the reporting of logs, warnings and errors.\n * @public\n * @param {boolean} quiet Tells if the reporter should be quiet or not.\n */\nmodule.exports = function(quiet) {\n    function noop() {\n        //Does nothing.\n    }\n\n    var reporter = {\n        log: noop,\n        warn: noop,\n        error: noop\n    };\n\n    if(!quiet && window.console) {\n        var attachFunction = function(reporter, name) {\n            //The proxy is needed to be able to call the method with the console context,\n            //since we cannot use bind.\n            reporter[name] = function reporterProxy() {\n                var f = console[name];\n                if (f.apply) { //IE9 does not support console.log.apply :)\n                    f.apply(console, arguments);\n                } else {\n                    for (var i = 0; i < arguments.length; i++) {\n                        f(arguments[i]);\n                    }\n                }\n            };\n        };\n\n        attachFunction(reporter, \"log\");\n        attachFunction(reporter, \"warn\");\n        attachFunction(reporter, \"error\");\n    }\n\n    return reporter;\n};","\"use strict\";\n\nvar utils = require(\"./utils\");\n\nmodule.exports = function batchProcessorMaker(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var asyncProcess    = utils.getOption(options, \"async\", true);\n    var autoProcess     = utils.getOption(options, \"auto\", true);\n\n    if(autoProcess && !asyncProcess) {\n        reporter && reporter.warn(\"Invalid options combination. auto=true and async=false is invalid. Setting async=true.\");\n        asyncProcess = true;\n    }\n\n    var batch = Batch();\n    var asyncFrameHandler;\n    var isProcessing = false;\n\n    function addFunction(level, fn) {\n        if(!isProcessing && autoProcess && asyncProcess && batch.size() === 0) {\n            // Since this is async, it is guaranteed to be executed after that the fn is added to the batch.\n            // This needs to be done before, since we're checking the size of the batch to be 0.\n            processBatchAsync();\n        }\n\n        batch.add(level, fn);\n    }\n\n    function processBatch() {\n        // Save the current batch, and create a new batch so that incoming functions are not added into the currently processing batch.\n        // Continue processing until the top-level batch is empty (functions may be added to the new batch while processing, and so on).\n        isProcessing = true;\n        while (batch.size()) {\n            var processingBatch = batch;\n            batch = Batch();\n            processingBatch.process();\n        }\n        isProcessing = false;\n    }\n\n    function forceProcessBatch(localAsyncProcess) {\n        if (isProcessing) {\n            return;\n        }\n\n        if(localAsyncProcess === undefined) {\n            localAsyncProcess = asyncProcess;\n        }\n\n        if(asyncFrameHandler) {\n            cancelFrame(asyncFrameHandler);\n            asyncFrameHandler = null;\n        }\n\n        if(localAsyncProcess) {\n            processBatchAsync();\n        } else {\n            processBatch();\n        }\n    }\n\n    function processBatchAsync() {\n        asyncFrameHandler = requestFrame(processBatch);\n    }\n\n    function clearBatch() {\n        batch           = {};\n        batchSize       = 0;\n        topLevel        = 0;\n        bottomLevel     = 0;\n    }\n\n    function cancelFrame(listener) {\n        // var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;\n        var cancel = clearTimeout;\n        return cancel(listener);\n    }\n\n    function requestFrame(callback) {\n        // var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) { return window.setTimeout(fn, 20); };\n        var raf = function(fn) { return setTimeout(fn, 0); };\n        return raf(callback);\n    }\n\n    return {\n        add: addFunction,\n        force: forceProcessBatch\n    };\n};\n\nfunction Batch() {\n    var batch       = {};\n    var size        = 0;\n    var topLevel    = 0;\n    var bottomLevel = 0;\n\n    function add(level, fn) {\n        if(!fn) {\n            fn = level;\n            level = 0;\n        }\n\n        if(level > topLevel) {\n            topLevel = level;\n        } else if(level < bottomLevel) {\n            bottomLevel = level;\n        }\n\n        if(!batch[level]) {\n            batch[level] = [];\n        }\n\n        batch[level].push(fn);\n        size++;\n    }\n\n    function process() {\n        for(var level = bottomLevel; level <= topLevel; level++) {\n            var fns = batch[level];\n\n            for(var i = 0; i < fns.length; i++) {\n                var fn = fns[i];\n                fn();\n            }\n        }\n    }\n\n    function getSize() {\n        return size;\n    }\n\n    return {\n        add: add,\n        process: process,\n        size: getSize\n    };\n}\n","\"use strict\";\n\nvar utils = module.exports = {};\n\nutils.getOption = getOption;\n\nfunction getOption(options, name, defaultValue) {\n    var value = options[name];\n\n    if((value === undefined || value === null) && defaultValue !== undefined) {\n        return defaultValue;\n    }\n\n    return value;\n}\n","\"use strict\";\n\nvar prop = \"_erd\";\n\nfunction initState(element) {\n    element[prop] = {};\n    return getState(element);\n}\n\nfunction getState(element) {\n    return element[prop];\n}\n\nfunction cleanState(element) {\n    delete element[prop];\n}\n\nmodule.exports = {\n    initState: initState,\n    getState: getState,\n    cleanState: cleanState\n};\n","/**\n * Resize detection strategy that injects objects to elements in order to detect resize events.\n * Heavily inspired by: http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/\n */\n\n\"use strict\";\n\nvar browserDetector = require(\"../browser-detector\");\n\nmodule.exports = function(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var batchProcessor  = options.batchProcessor;\n    var getState        = options.stateHandler.getState;\n\n    if(!reporter) {\n        throw new Error(\"Missing required dependency: reporter.\");\n    }\n\n    /**\n     * Adds a resize event listener to the element.\n     * @public\n     * @param {element} element The element that should have the listener added.\n     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.\n     */\n    function addListener(element, listener) {\n        if(!getObject(element)) {\n            throw new Error(\"Element is not detectable by this strategy.\");\n        }\n\n        function listenerProxy() {\n            listener(element);\n        }\n\n        if(browserDetector.isIE(8)) {\n            //IE 8 does not support object, but supports the resize event directly on elements.\n            getState(element).object = {\n                proxy: listenerProxy\n            };\n            element.attachEvent(\"onresize\", listenerProxy);\n        } else {\n            var object = getObject(element);\n            object.contentDocument.defaultView.addEventListener(\"resize\", listenerProxy);\n        }\n    }\n\n    /**\n     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.\n     * @private\n     * @param {object} options Optional options object.\n     * @param {element} element The element to make detectable\n     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.\n     */\n    function makeDetectable(options, element, callback) {\n        if (!callback) {\n            callback = element;\n            element = options;\n            options = null;\n        }\n\n        options = options || {};\n        var debug = options.debug;\n\n        function injectObject(element, callback) {\n            var OBJECT_STYLE = \"display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none; padding: 0; margin: 0; opacity: 0; z-index: -1000; pointer-events: none;\";\n\n            //The target element needs to be positioned (everything except static) so the absolute positioned object will be positioned relative to the target element.\n\n            // Position altering may be performed directly or on object load, depending on if style resolution is possible directly or not.\n            var positionCheckPerformed = false;\n\n            // The element may not yet be attached to the DOM, and therefore the style object may be empty in some browsers.\n            // Since the style object is a reference, it will be updated as soon as the element is attached to the DOM.\n            var style = window.getComputedStyle(element);\n            var width = element.offsetWidth;\n            var height = element.offsetHeight;\n\n            getState(element).startSize = {\n                width: width,\n                height: height\n            };\n\n            function mutateDom() {\n                function alterPositionStyles() {\n                    if(style.position === \"static\") {\n                        element.style.position = \"relative\";\n\n                        var removeRelativeStyles = function(reporter, element, style, property) {\n                            function getNumericalValue(value) {\n                                return value.replace(/[^-\\d\\.]/g, \"\");\n                            }\n\n                            var value = style[property];\n\n                            if(value !== \"auto\" && getNumericalValue(value) !== \"0\") {\n                                reporter.warn(\"An element that is positioned static has style.\" + property + \"=\" + value + \" which is ignored due to the static positioning. The element will need to be positioned relative, so the style.\" + property + \" will be set to 0. Element: \", element);\n                                element.style[property] = 0;\n                            }\n                        };\n\n                        //Check so that there are no accidental styles that will make the element styled differently now that is is relative.\n                        //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).\n                        removeRelativeStyles(reporter, element, style, \"top\");\n                        removeRelativeStyles(reporter, element, style, \"right\");\n                        removeRelativeStyles(reporter, element, style, \"bottom\");\n                        removeRelativeStyles(reporter, element, style, \"left\");\n                    }\n                }\n\n                function onObjectLoad() {\n                    // The object has been loaded, which means that the element now is guaranteed to be attached to the DOM.\n                    if (!positionCheckPerformed) {\n                        alterPositionStyles();\n                    }\n\n                    /*jshint validthis: true */\n\n                    function getDocument(element, callback) {\n                        //Opera 12 seem to call the object.onload before the actual document has been created.\n                        //So if it is not present, poll it with an timeout until it is present.\n                        //TODO: Could maybe be handled better with object.onreadystatechange or similar.\n                        if(!element.contentDocument) {\n                            setTimeout(function checkForObjectDocument() {\n                                getDocument(element, callback);\n                            }, 100);\n\n                            return;\n                        }\n\n                        callback(element.contentDocument);\n                    }\n\n                    //Mutating the object element here seems to fire another load event.\n                    //Mutating the inner document of the object element is fine though.\n                    var objectElement = this;\n\n                    //Create the style element to be added to the object.\n                    getDocument(objectElement, function onObjectDocumentReady(objectDocument) {\n                        //Notify that the element is ready to be listened to.\n                        callback(element);\n                    });\n                }\n\n                // The element may be detached from the DOM, and some browsers does not support style resolving of detached elements.\n                // The alterPositionStyles needs to be delayed until we know the element has been attached to the DOM (which we are sure of when the onObjectLoad has been fired), if style resolution is not possible.\n                if (style.position !== \"\") {\n                    alterPositionStyles(style);\n                    positionCheckPerformed = true;\n                }\n\n                //Add an object element as a child to the target element that will be listened to for resize events.\n                var object = document.createElement(\"object\");\n                object.style.cssText = OBJECT_STYLE;\n                object.tabIndex = -1;\n                object.type = \"text/html\";\n                object.setAttribute(\"aria-hidden\", \"true\");\n                object.onload = onObjectLoad;\n\n                //Safari: This must occur before adding the object to the DOM.\n                //IE: Does not like that this happens before, even if it is also added after.\n                if(!browserDetector.isIE()) {\n                    object.data = \"about:blank\";\n                }\n\n                element.appendChild(object);\n                getState(element).object = object;\n\n                //IE: This must occur after adding the object to the DOM.\n                if(browserDetector.isIE()) {\n                    object.data = \"about:blank\";\n                }\n            }\n\n            if(batchProcessor) {\n                batchProcessor.add(mutateDom);\n            } else {\n                mutateDom();\n            }\n        }\n\n        if(browserDetector.isIE(8)) {\n            //IE 8 does not support objects properly. Luckily they do support the resize event.\n            //So do not inject the object and notify that the element is already ready to be listened to.\n            //The event handler for the resize event is attached in the utils.addListener instead.\n            callback(element);\n        } else {\n            injectObject(element, callback);\n        }\n    }\n\n    /**\n     * Returns the child object of the target element.\n     * @private\n     * @param {element} element The target element.\n     * @returns The object element of the target.\n     */\n    function getObject(element) {\n        return getState(element).object;\n    }\n\n    function uninstall(element) {\n        if(browserDetector.isIE(8)) {\n            element.detachEvent(\"onresize\", getState(element).object.proxy);\n        } else {\n            element.removeChild(getObject(element));\n        }\n        delete getState(element).object;\n    }\n\n    return {\n        makeDetectable: makeDetectable,\n        addListener: addListener,\n        uninstall: uninstall\n    };\n};\n","/**\n * Resize detection strategy that injects divs to elements in order to detect resize events on scroll events.\n * Heavily inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js\n */\n\n\"use strict\";\n\nvar forEach = require(\"../collection-utils\").forEach;\n\nmodule.exports = function(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var batchProcessor  = options.batchProcessor;\n    var getState        = options.stateHandler.getState;\n    var hasState        = options.stateHandler.hasState;\n    var idHandler       = options.idHandler;\n\n    if (!batchProcessor) {\n        throw new Error(\"Missing required dependency: batchProcessor\");\n    }\n\n    if (!reporter) {\n        throw new Error(\"Missing required dependency: reporter.\");\n    }\n\n    //TODO: Could this perhaps be done at installation time?\n    var scrollbarSizes = getScrollbarSizes();\n\n    // Inject the scrollbar styling that prevents them from appearing sometimes in Chrome.\n    // The injected container needs to have a class, so that it may be styled with CSS (pseudo elements).\n    var styleId = \"erd_scroll_detection_scrollbar_style\";\n    var detectionContainerClass = \"erd_scroll_detection_container\";\n    injectScrollStyle(styleId, detectionContainerClass);\n\n    function getScrollbarSizes() {\n        var width = 500;\n        var height = 500;\n\n        var child = document.createElement(\"div\");\n        child.style.cssText = \"position: absolute; width: \" + width*2 + \"px; height: \" + height*2 + \"px; visibility: hidden; margin: 0; padding: 0;\";\n\n        var container = document.createElement(\"div\");\n        container.style.cssText = \"position: absolute; width: \" + width + \"px; height: \" + height + \"px; overflow: scroll; visibility: none; top: \" + -width*3 + \"px; left: \" + -height*3 + \"px; visibility: hidden; margin: 0; padding: 0;\";\n\n        container.appendChild(child);\n\n        document.body.insertBefore(container, document.body.firstChild);\n\n        var widthSize = width - container.clientWidth;\n        var heightSize = height - container.clientHeight;\n\n        document.body.removeChild(container);\n\n        return {\n            width: widthSize,\n            height: heightSize\n        };\n    }\n\n    function injectScrollStyle(styleId, containerClass) {\n        function injectStyle(style, method) {\n            method = method || function (element) {\n                document.head.appendChild(element);\n            };\n\n            var styleElement = document.createElement(\"style\");\n            styleElement.innerHTML = style;\n            styleElement.id = styleId;\n            method(styleElement);\n            return styleElement;\n        }\n\n        if (!document.getElementById(styleId)) {\n            var containerAnimationClass = containerClass + \"_animation\";\n            var containerAnimationActiveClass = containerClass + \"_animation_active\";\n            var style = \"/* Created by the element-resize-detector library. */\\n\";\n            style += \".\" + containerClass + \" > div::-webkit-scrollbar { display: none; }\\n\\n\";\n            style += \".\" + containerAnimationActiveClass + \" { -webkit-animation-duration: 0.1s; animation-duration: 0.1s; -webkit-animation-name: \" + containerAnimationClass + \"; animation-name: \" + containerAnimationClass + \"; }\\n\";\n            style += \"@-webkit-keyframes \" + containerAnimationClass +  \" { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }\\n\";\n            style += \"@keyframes \" + containerAnimationClass +          \" { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }\";\n            injectStyle(style);\n        }\n    }\n\n    function addAnimationClass(element) {\n        element.className += \" \" + detectionContainerClass + \"_animation_active\";\n    }\n\n    function addEvent(el, name, cb) {\n        if (el.addEventListener) {\n            el.addEventListener(name, cb);\n        } else if(el.attachEvent) {\n            el.attachEvent(\"on\" + name, cb);\n        } else {\n            return reporter.error(\"[scroll] Don't know how to add event listeners.\");\n        }\n    }\n\n    function removeEvent(el, name, cb) {\n        if (el.removeEventListener) {\n            el.removeEventListener(name, cb);\n        } else if(el.detachEvent) {\n            el.detachEvent(\"on\" + name, cb);\n        } else {\n            return reporter.error(\"[scroll] Don't know how to remove event listeners.\");\n        }\n    }\n\n    function getExpandElement(element) {\n        return getState(element).container.childNodes[0].childNodes[0].childNodes[0];\n    }\n\n    function getShrinkElement(element) {\n        return getState(element).container.childNodes[0].childNodes[0].childNodes[1];\n    }\n\n    /**\n     * Adds a resize event listener to the element.\n     * @public\n     * @param {element} element The element that should have the listener added.\n     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.\n     */\n    function addListener(element, listener) {\n        var listeners = getState(element).listeners;\n\n        if (!listeners.push) {\n            throw new Error(\"Cannot add listener to an element that is not detectable.\");\n        }\n\n        getState(element).listeners.push(listener);\n    }\n\n    /**\n     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.\n     * @private\n     * @param {object} options Optional options object.\n     * @param {element} element The element to make detectable\n     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.\n     */\n    function makeDetectable(options, element, callback) {\n        if (!callback) {\n            callback = element;\n            element = options;\n            options = null;\n        }\n\n        options = options || {};\n\n        function debug() {\n            if (options.debug) {\n                var args = Array.prototype.slice.call(arguments);\n                args.unshift(idHandler.get(element), \"Scroll: \");\n                if (reporter.log.apply) {\n                    reporter.log.apply(null, args);\n                } else {\n                    for (var i = 0; i < args.length; i++) {\n                        reporter.log(args[i]);\n                    }\n                }\n            }\n        }\n\n        function isDetached(element) {\n            function isInDocument(element) {\n                return element === element.ownerDocument.body || element.ownerDocument.body.contains(element);\n            }\n\n            if (!isInDocument(element)) {\n                return true;\n            }\n\n            // FireFox returns null style in hidden iframes. See https://github.com/wnr/element-resize-detector/issues/68 and https://bugzilla.mozilla.org/show_bug.cgi?id=795520\n            if (window.getComputedStyle(element) === null) {\n                return true;\n            }\n\n            return false;\n        }\n\n        function isUnrendered(element) {\n            // Check the absolute positioned container since the top level container is display: inline.\n            var container = getState(element).container.childNodes[0];\n            var style = window.getComputedStyle(container);\n            return !style.width || style.width.indexOf(\"px\") === -1; //Can only compute pixel value when rendered.\n        }\n\n        function getStyle() {\n            // Some browsers only force layouts when actually reading the style properties of the style object, so make sure that they are all read here,\n            // so that the user of the function can be sure that it will perform the layout here, instead of later (important for batching).\n            var elementStyle            = window.getComputedStyle(element);\n            var style                   = {};\n            style.position              = elementStyle.position;\n            style.width                 = element.offsetWidth;\n            style.height                = element.offsetHeight;\n            style.top                   = elementStyle.top;\n            style.right                 = elementStyle.right;\n            style.bottom                = elementStyle.bottom;\n            style.left                  = elementStyle.left;\n            style.widthCSS              = elementStyle.width;\n            style.heightCSS             = elementStyle.height;\n            return style;\n        }\n\n        function storeStartSize() {\n            var style = getStyle();\n            getState(element).startSize = {\n                width: style.width,\n                height: style.height\n            };\n            debug(\"Element start size\", getState(element).startSize);\n        }\n\n        function initListeners() {\n            getState(element).listeners = [];\n        }\n\n        function storeStyle() {\n            debug(\"storeStyle invoked.\");\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            var style = getStyle();\n            getState(element).style = style;\n        }\n\n        function storeCurrentSize(element, width, height) {\n            getState(element).lastWidth = width;\n            getState(element).lastHeight  = height;\n        }\n\n        function getExpandChildElement(element) {\n            return getExpandElement(element).childNodes[0];\n        }\n\n        function getWidthOffset() {\n            return 2 * scrollbarSizes.width + 1;\n        }\n\n        function getHeightOffset() {\n            return 2 * scrollbarSizes.height + 1;\n        }\n\n        function getExpandWidth(width) {\n            return width + 10 + getWidthOffset();\n        }\n\n        function getExpandHeight(height) {\n            return height + 10 + getHeightOffset();\n        }\n\n        function getShrinkWidth(width) {\n            return width * 2 + getWidthOffset();\n        }\n\n        function getShrinkHeight(height) {\n            return height * 2 + getHeightOffset();\n        }\n\n        function positionScrollbars(element, width, height) {\n            var expand          = getExpandElement(element);\n            var shrink          = getShrinkElement(element);\n            var expandWidth     = getExpandWidth(width);\n            var expandHeight    = getExpandHeight(height);\n            var shrinkWidth     = getShrinkWidth(width);\n            var shrinkHeight    = getShrinkHeight(height);\n            expand.scrollLeft   = expandWidth;\n            expand.scrollTop    = expandHeight;\n            shrink.scrollLeft   = shrinkWidth;\n            shrink.scrollTop    = shrinkHeight;\n        }\n\n        function injectContainerElement() {\n            var container = getState(element).container;\n\n            if (!container) {\n                container                   = document.createElement(\"div\");\n                container.className         = detectionContainerClass;\n                container.style.cssText     = \"visibility: hidden; display: inline; width: 0px; height: 0px; z-index: -1; overflow: hidden; margin: 0; padding: 0;\";\n                getState(element).container = container;\n                addAnimationClass(container);\n                element.appendChild(container);\n\n                var onAnimationStart = function () {\n                    getState(element).onRendered && getState(element).onRendered();\n                };\n\n                addEvent(container, \"animationstart\", onAnimationStart);\n\n                // Store the event handler here so that they may be removed when uninstall is called.\n                // See uninstall function for an explanation why it is needed.\n                getState(element).onAnimationStart = onAnimationStart;\n            }\n\n            return container;\n        }\n\n        function injectScrollElements() {\n            function alterPositionStyles() {\n                var style = getState(element).style;\n\n                if(style.position === \"static\") {\n                    element.style.position = \"relative\";\n\n                    var removeRelativeStyles = function(reporter, element, style, property) {\n                        function getNumericalValue(value) {\n                            return value.replace(/[^-\\d\\.]/g, \"\");\n                        }\n\n                        var value = style[property];\n\n                        if(value !== \"auto\" && getNumericalValue(value) !== \"0\") {\n                            reporter.warn(\"An element that is positioned static has style.\" + property + \"=\" + value + \" which is ignored due to the static positioning. The element will need to be positioned relative, so the style.\" + property + \" will be set to 0. Element: \", element);\n                            element.style[property] = 0;\n                        }\n                    };\n\n                    //Check so that there are no accidental styles that will make the element styled differently now that is is relative.\n                    //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).\n                    removeRelativeStyles(reporter, element, style, \"top\");\n                    removeRelativeStyles(reporter, element, style, \"right\");\n                    removeRelativeStyles(reporter, element, style, \"bottom\");\n                    removeRelativeStyles(reporter, element, style, \"left\");\n                }\n            }\n\n            function getLeftTopBottomRightCssText(left, top, bottom, right) {\n                left = (!left ? \"0\" : (left + \"px\"));\n                top = (!top ? \"0\" : (top + \"px\"));\n                bottom = (!bottom ? \"0\" : (bottom + \"px\"));\n                right = (!right ? \"0\" : (right + \"px\"));\n\n                return \"left: \" + left + \"; top: \" + top + \"; right: \" + right + \"; bottom: \" + bottom + \";\";\n            }\n\n            debug(\"Injecting elements\");\n\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            alterPositionStyles();\n\n            var rootContainer = getState(element).container;\n\n            if (!rootContainer) {\n                rootContainer = injectContainerElement();\n            }\n\n            // Due to this WebKit bug https://bugs.webkit.org/show_bug.cgi?id=80808 (currently fixed in Blink, but still present in WebKit browsers such as Safari),\n            // we need to inject two containers, one that is width/height 100% and another that is left/top -1px so that the final container always is 1x1 pixels bigger than\n            // the targeted element.\n            // When the bug is resolved, \"containerContainer\" may be removed.\n\n            // The outer container can occasionally be less wide than the targeted when inside inline elements element in WebKit (see https://bugs.webkit.org/show_bug.cgi?id=152980).\n            // This should be no problem since the inner container either way makes sure the injected scroll elements are at least 1x1 px.\n\n            var scrollbarWidth          = scrollbarSizes.width;\n            var scrollbarHeight         = scrollbarSizes.height;\n            var containerContainerStyle = \"position: absolute; flex: none; overflow: hidden; z-index: -1; visibility: hidden; width: 100%; height: 100%; left: 0px; top: 0px;\";\n            var containerStyle          = \"position: absolute; flex: none; overflow: hidden; z-index: -1; visibility: hidden; \" + getLeftTopBottomRightCssText(-(1 + scrollbarWidth), -(1 + scrollbarHeight), -scrollbarHeight, -scrollbarWidth);\n            var expandStyle             = \"position: absolute; flex: none; overflow: scroll; z-index: -1; visibility: hidden; width: 100%; height: 100%;\";\n            var shrinkStyle             = \"position: absolute; flex: none; overflow: scroll; z-index: -1; visibility: hidden; width: 100%; height: 100%;\";\n            var expandChildStyle        = \"position: absolute; left: 0; top: 0;\";\n            var shrinkChildStyle        = \"position: absolute; width: 200%; height: 200%;\";\n\n            var containerContainer      = document.createElement(\"div\");\n            var container               = document.createElement(\"div\");\n            var expand                  = document.createElement(\"div\");\n            var expandChild             = document.createElement(\"div\");\n            var shrink                  = document.createElement(\"div\");\n            var shrinkChild             = document.createElement(\"div\");\n\n            // Some browsers choke on the resize system being rtl, so force it to ltr. https://github.com/wnr/element-resize-detector/issues/56\n            // However, dir should not be set on the top level container as it alters the dimensions of the target element in some browsers.\n            containerContainer.dir              = \"ltr\";\n\n            containerContainer.style.cssText    = containerContainerStyle;\n            containerContainer.className        = detectionContainerClass;\n            container.className                 = detectionContainerClass;\n            container.style.cssText             = containerStyle;\n            expand.style.cssText                = expandStyle;\n            expandChild.style.cssText           = expandChildStyle;\n            shrink.style.cssText                = shrinkStyle;\n            shrinkChild.style.cssText           = shrinkChildStyle;\n\n            expand.appendChild(expandChild);\n            shrink.appendChild(shrinkChild);\n            container.appendChild(expand);\n            container.appendChild(shrink);\n            containerContainer.appendChild(container);\n            rootContainer.appendChild(containerContainer);\n\n            function onExpandScroll() {\n                getState(element).onExpand && getState(element).onExpand();\n            }\n\n            function onShrinkScroll() {\n                getState(element).onShrink && getState(element).onShrink();\n            }\n\n            addEvent(expand, \"scroll\", onExpandScroll);\n            addEvent(shrink, \"scroll\", onShrinkScroll);\n\n            // Store the event handlers here so that they may be removed when uninstall is called.\n            // See uninstall function for an explanation why it is needed.\n            getState(element).onExpandScroll = onExpandScroll;\n            getState(element).onShrinkScroll = onShrinkScroll;\n        }\n\n        function registerListenersAndPositionElements() {\n            function updateChildSizes(element, width, height) {\n                var expandChild             = getExpandChildElement(element);\n                var expandWidth             = getExpandWidth(width);\n                var expandHeight            = getExpandHeight(height);\n                expandChild.style.width     = expandWidth + \"px\";\n                expandChild.style.height    = expandHeight + \"px\";\n            }\n\n            function updateDetectorElements(done) {\n                var width           = element.offsetWidth;\n                var height          = element.offsetHeight;\n\n                debug(\"Storing current size\", width, height);\n\n                // Store the size of the element sync here, so that multiple scroll events may be ignored in the event listeners.\n                // Otherwise the if-check in handleScroll is useless.\n                storeCurrentSize(element, width, height);\n\n                // Since we delay the processing of the batch, there is a risk that uninstall has been called before the batch gets to execute.\n                // Since there is no way to cancel the fn executions, we need to add an uninstall guard to all fns of the batch.\n\n                batchProcessor.add(0, function performUpdateChildSizes() {\n                    if (!getState(element)) {\n                        debug(\"Aborting because element has been uninstalled\");\n                        return;\n                    }\n\n                    if (!areElementsInjected()) {\n                        debug(\"Aborting because element container has not been initialized\");\n                        return;\n                    }\n\n                    if (options.debug) {\n                        var w = element.offsetWidth;\n                        var h = element.offsetHeight;\n\n                        if (w !== width || h !== height) {\n                            reporter.warn(idHandler.get(element), \"Scroll: Size changed before updating detector elements.\");\n                        }\n                    }\n\n                    updateChildSizes(element, width, height);\n                });\n\n                batchProcessor.add(1, function updateScrollbars() {\n                    if (!getState(element)) {\n                        debug(\"Aborting because element has been uninstalled\");\n                        return;\n                    }\n\n                    if (!areElementsInjected()) {\n                        debug(\"Aborting because element container has not been initialized\");\n                        return;\n                    }\n\n                    positionScrollbars(element, width, height);\n                });\n\n                if (done) {\n                    batchProcessor.add(2, function () {\n                        if (!getState(element)) {\n                            debug(\"Aborting because element has been uninstalled\");\n                            return;\n                        }\n\n                        if (!areElementsInjected()) {\n                          debug(\"Aborting because element container has not been initialized\");\n                          return;\n                        }\n\n                        done();\n                    });\n                }\n            }\n\n            function areElementsInjected() {\n                return !!getState(element).container;\n            }\n\n            function notifyListenersIfNeeded() {\n                function isFirstNotify() {\n                    return getState(element).lastNotifiedWidth === undefined;\n                }\n\n                debug(\"notifyListenersIfNeeded invoked\");\n\n                var state = getState(element);\n\n                // Don't notify the if the current size is the start size, and this is the first notification.\n                if (isFirstNotify() && state.lastWidth === state.startSize.width && state.lastHeight === state.startSize.height) {\n                    return debug(\"Not notifying: Size is the same as the start size, and there has been no notification yet.\");\n                }\n\n                // Don't notify if the size already has been notified.\n                if (state.lastWidth === state.lastNotifiedWidth && state.lastHeight === state.lastNotifiedHeight) {\n                    return debug(\"Not notifying: Size already notified\");\n                }\n\n\n                debug(\"Current size not notified, notifying...\");\n                state.lastNotifiedWidth = state.lastWidth;\n                state.lastNotifiedHeight = state.lastHeight;\n                forEach(getState(element).listeners, function (listener) {\n                    listener(element);\n                });\n            }\n\n            function handleRender() {\n                debug(\"startanimation triggered.\");\n\n                if (isUnrendered(element)) {\n                    debug(\"Ignoring since element is still unrendered...\");\n                    return;\n                }\n\n                debug(\"Element rendered.\");\n                var expand = getExpandElement(element);\n                var shrink = getShrinkElement(element);\n                if (expand.scrollLeft === 0 || expand.scrollTop === 0 || shrink.scrollLeft === 0 || shrink.scrollTop === 0) {\n                    debug(\"Scrollbars out of sync. Updating detector elements...\");\n                    updateDetectorElements(notifyListenersIfNeeded);\n                }\n            }\n\n            function handleScroll() {\n                debug(\"Scroll detected.\");\n\n                if (isUnrendered(element)) {\n                    // Element is still unrendered. Skip this scroll event.\n                    debug(\"Scroll event fired while unrendered. Ignoring...\");\n                    return;\n                }\n\n                var width = element.offsetWidth;\n                var height = element.offsetHeight;\n\n                if (width !== getState(element).lastWidth || height !== getState(element).lastHeight) {\n                    debug(\"Element size changed.\");\n                    updateDetectorElements(notifyListenersIfNeeded);\n                } else {\n                    debug(\"Element size has not changed (\" + width + \"x\" + height + \").\");\n                }\n            }\n\n            debug(\"registerListenersAndPositionElements invoked.\");\n\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            getState(element).onRendered = handleRender;\n            getState(element).onExpand = handleScroll;\n            getState(element).onShrink = handleScroll;\n\n            var style = getState(element).style;\n            updateChildSizes(element, style.width, style.height);\n        }\n\n        function finalizeDomMutation() {\n            debug(\"finalizeDomMutation invoked.\");\n\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            var style = getState(element).style;\n            storeCurrentSize(element, style.width, style.height);\n            positionScrollbars(element, style.width, style.height);\n        }\n\n        function ready() {\n            callback(element);\n        }\n\n        function install() {\n            debug(\"Installing...\");\n            initListeners();\n            storeStartSize();\n\n            batchProcessor.add(0, storeStyle);\n            batchProcessor.add(1, injectScrollElements);\n            batchProcessor.add(2, registerListenersAndPositionElements);\n            batchProcessor.add(3, finalizeDomMutation);\n            batchProcessor.add(4, ready);\n        }\n\n        debug(\"Making detectable...\");\n\n        if (isDetached(element)) {\n            debug(\"Element is detached\");\n\n            injectContainerElement();\n\n            debug(\"Waiting until element is attached...\");\n\n            getState(element).onRendered = function () {\n                debug(\"Element is now attached\");\n                install();\n            };\n        } else {\n            install();\n        }\n    }\n\n    function uninstall(element) {\n        var state = getState(element);\n\n        if (!state) {\n            // Uninstall has been called on a non-erd element.\n            return;\n        }\n\n        // Uninstall may have been called in the following scenarios:\n        // (1) Right between the sync code and async batch (here state.busy = true, but nothing have been registered or injected).\n        // (2) In the ready callback of the last level of the batch by another element (here, state.busy = true, but all the stuff has been injected).\n        // (3) After the installation process (here, state.busy = false and all the stuff has been injected).\n        // So to be on the safe side, let's check for each thing before removing.\n\n        // We need to remove the event listeners, because otherwise the event might fire on an uninstall element which results in an error when trying to get the state of the element.\n        state.onExpandScroll && removeEvent(getExpandElement(element), \"scroll\", state.onExpandScroll);\n        state.onShrinkScroll && removeEvent(getShrinkElement(element), \"scroll\", state.onShrinkScroll);\n        state.onAnimationStart && removeEvent(state.container, \"animationstart\", state.onAnimationStart);\n\n        state.container && element.removeChild(state.container);\n    }\n\n    return {\n        makeDetectable: makeDetectable,\n        addListener: addListener,\n        uninstall: uninstall\n    };\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Converts a normalized color to a CSS color\n */\nfunction fromNormalizedColor(color) {\n    return `rgba(${(color.r * 0xff) & 0xff}, ${color.g * 255}, ${color.b * 255}, ${color.a})`;\n}\nexports.fromNormalizedColor = fromNormalizedColor;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY3NzLWNvbG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBT0E7O0dBRUc7QUFDSCxTQUFnQixtQkFBbUIsQ0FBQyxLQUE0QjtJQUM5RCxPQUFPLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLElBQUksS0FBSyxLQUFLLENBQUMsQ0FBQyxHQUFHLEdBQUcsS0FBSyxLQUFLLENBQUMsQ0FBQyxHQUFHLEdBQUcsS0FBSyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUM7QUFDNUYsQ0FBQztBQUZELGtEQUVDIiwiZmlsZSI6ImNzcy1jb2xvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0cmFpZ2h0U1JnYmEgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgdmFsaWQgQ1NTIGNvbG9yIHN1Y2ggYXMgYFwicmdiYSgyMDAsIDEzLCA1MywgMC41KVwiYCBvciBgXCJ0cmFuc3BhcmVudFwiYC5cbiAqL1xuZXhwb3J0IHR5cGUgQ3NzQ29sb3IgPSBzdHJpbmc7XG5cbi8qKlxuICogQ29udmVydHMgYSBub3JtYWxpemVkIGNvbG9yIHRvIGEgQ1NTIGNvbG9yXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmcm9tTm9ybWFsaXplZENvbG9yKGNvbG9yOiBTdHJhaWdodFNSZ2JhPG51bWJlcj4pOiBDc3NDb2xvciB7XG4gIHJldHVybiBgcmdiYSgkeyhjb2xvci5yICogMHhmZikgJiAweGZmfSwgJHtjb2xvci5nICogMjU1fSwgJHtjb2xvci5iICogMjU1fSwgJHtjb2xvci5hfSlgO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst swf_tree_1 = require(\"swf-tree\");\nconst decode_swf_shape_1 = require(\"./decode-swf-shape\");\nconst morph_fill_style_1 = require(\"./morph-fill-style\");\nconst morph_line_style_1 = require(\"./morph-line-style\");\nconst morph_path_1 = require(\"./morph-path\");\n/**\n * Converts a space-optimized morph shape definition to a list of simpler paths for easier processing/rendering\n */\nfunction decodeSwfMorphShape(tag) {\n    const converter = new SwfMorphShapeDecoder(tag.shape.initialStyles.fill, tag.shape.initialStyles.line);\n    for (const record of tag.shape.records) {\n        switch (record.type) {\n            case swf_tree_1.ShapeRecordType.CurvedEdge:\n                converter.applyCurvedEdge(record);\n                break;\n            case swf_tree_1.ShapeRecordType.StraightEdge:\n                converter.applyStraightEdge(record);\n                break;\n            case swf_tree_1.ShapeRecordType.StyleChange:\n                converter.applyStyleChange(record);\n                break;\n            default:\n                throw new incident_1.Incident(\"UnreachableCode\");\n        }\n    }\n    return converter.getShape();\n}\nexports.decodeSwfMorphShape = decodeSwfMorphShape;\nvar SegmentType;\n(function (SegmentType) {\n    SegmentType[SegmentType[\"Straight\"] = 0] = \"Straight\";\n    SegmentType[SegmentType[\"Curved\"] = 1] = \"Curved\";\n})(SegmentType || (SegmentType = {}));\nfunction createStraightSegment(startX, startY, endX, endY) {\n    return { type: SegmentType.Straight, startX, startY, endX, endY };\n}\nfunction createCurvedSegment(startX, startY, controlX, controlY, endX, endY) {\n    return { type: SegmentType.Curved, startX, startY, controlX, controlY, endX, endY };\n}\n/**\n * Normalize the fill style from the SWF format to the renderer format\n */\nfunction decodeFillStyle(old) {\n    switch (old.type) {\n        case swf_tree_1.FillStyleType.Solid:\n            return {\n                type: morph_fill_style_1.MorphFillStyleType.Solid,\n                startColor: decode_swf_shape_1.normalizeStraightSRgba(old.color),\n                endColor: decode_swf_shape_1.normalizeStraightSRgba(old.morphColor),\n            };\n        default:\n            console.warn(old);\n            throw new Error(\"Unknown fill type\");\n    }\n}\n/**\n * Normalize the line style from the SWF format to the renderer format\n */\nfunction decodeLineStyle(swfStyle) {\n    // TODO...\n    return {\n        type: morph_line_style_1.MorphLineStyleType.Solid,\n        startColor: { r: 0, g: 0, b: 0, a: 1 },\n        endColor: { r: 0, g: 0, b: 0, a: 1 },\n        width: [swfStyle.width, swfStyle.morphWidth],\n    };\n}\n/**\n * Create a new layer with the supplied styles.\n */\nfunction createStyleLayer(swfFillStyles, swfLineStyles) {\n    const fills = [];\n    for (const swfFillStyle of swfFillStyles) {\n        fills.push({\n            style: decodeFillStyle(swfFillStyle),\n            segments: [],\n        });\n    }\n    const lines = [];\n    for (const swfLineStyle of swfLineStyles) {\n        lines.push({\n            style: decodeLineStyle(swfLineStyle),\n            segments: [],\n        });\n    }\n    return { fills, lines };\n}\n/**\n * Extract a sequence of continuous segments, removes them from openSet.\n */\nfunction extractContinuous(openSet) {\n    const first = openSet.shift();\n    if (first === undefined) {\n        throw new Error(\"FailedAssertion: openSet should not be empty\");\n    }\n    const result = [first];\n    let startX = first.startX[0];\n    let startY = first.startY[0];\n    let endX = first.endX[0];\n    let endY = first.endY[0];\n    for (let i = 0, len = openSet.length; i < len; i++) {\n        const current = openSet[i];\n        if (current.startX[0] === endX && current.startY[0] === endY) {\n            openSet.splice(i, 1);\n            i--;\n            len--;\n            endX = current.endX[0];\n            endY = current.endY[0];\n            result.push(current);\n        }\n        else if (current.endX[0] === startX && current.endY[0] === startY) {\n            openSet.splice(i, 1);\n            i--;\n            len--;\n            startX = current.startX[0];\n            startY = current.startY[0];\n            result.unshift(current);\n        }\n    }\n    // TODO: Repeat until reaching fixed point? Currently there are some cases when a continuous path is not collected\n    // if its segments are disordered.\n    return result;\n}\n/**\n * Converts a list of segments (in their definition order) to a list of path commands.\n */\nfunction segmentsToCommands(segments) {\n    const openSet = [...segments];\n    const result = [];\n    while (openSet.length > 0) {\n        const sequence = extractContinuous(openSet);\n        result.push({\n            type: morph_path_1.MorphCommandType.MoveTo,\n            x: sequence[0].startX,\n            y: sequence[0].startY,\n        });\n        for (const segment of sequence) {\n            switch (segment.type) {\n                case SegmentType.Straight:\n                    result.push({\n                        type: morph_path_1.MorphCommandType.LineTo,\n                        endX: segment.endX,\n                        endY: segment.endY,\n                    });\n                    break;\n                case SegmentType.Curved:\n                    result.push({\n                        type: morph_path_1.MorphCommandType.CurveTo,\n                        controlX: segment.controlX,\n                        controlY: segment.controlY,\n                        endX: segment.endX,\n                        endY: segment.endY,\n                    });\n                    break;\n                default:\n                    throw new Error(\"Failed assertion: unexpected segment type\");\n            }\n        }\n    }\n    return result;\n}\n/**\n * Converts a layer to a list of paths with style\n */\nfunction layerToPaths(layer) {\n    const paths = [];\n    for (const fillSet of layer.fills) {\n        const commands = segmentsToCommands(fillSet.segments);\n        if (commands.length > 0) {\n            paths.push({ commands, fill: fillSet.style });\n        }\n    }\n    for (const lineSet of layer.lines) {\n        const commands = segmentsToCommands(lineSet.segments);\n        if (commands.length > 0) {\n            paths.push({ commands, line: lineSet.style });\n        }\n    }\n    return paths;\n}\n/**\n * Maintains the state of the decoder while it consumes morph shape records.\n */\nclass SwfMorphShapeDecoder {\n    constructor(swfFillStyles, swfLineStyles) {\n        this.x = [0, 0];\n        this.y = [0, 0];\n        this.layers = [];\n        this.leftFill = undefined;\n        this.rightFill = undefined;\n        this.lineFill = undefined;\n        this.setNewStyles(swfFillStyles, swfLineStyles);\n    }\n    applyStyleChange(record) {\n        if (record.leftFill !== undefined) {\n            this.setLeftFillById(record.leftFill);\n        }\n        if (record.rightFill !== undefined) {\n            this.setRightFillById(record.rightFill);\n        }\n        if (record.lineStyle !== undefined) {\n            this.setLineFillById(record.lineStyle);\n        }\n        if (record.moveTo !== undefined) {\n            if (record.morphMoveTo === undefined) {\n                // TODO: Use Incident\n                throw new Error(\"Expected morphMoveTo to be defined\");\n            }\n            this.x = [record.moveTo.x, record.morphMoveTo.x];\n            this.y = [record.moveTo.y, record.morphMoveTo.y];\n        }\n    }\n    applyStraightEdge(record) {\n        const endX = [this.x[0] + record.delta.x, this.x[1] + record.morphDelta.x];\n        const endY = [this.y[0] + record.delta.y, this.y[1] + record.morphDelta.y];\n        if (this.leftFill !== undefined) {\n            this.leftFill.segments.push(createStraightSegment(this.x, this.y, endX, endY));\n        }\n        if (this.rightFill !== undefined) {\n            this.rightFill.segments.push(createStraightSegment(endX, endY, this.x, this.y));\n        }\n        if (this.lineFill !== undefined) {\n            this.lineFill.segments.push(createStraightSegment(this.x, this.y, endX, endY));\n        }\n        this.x = endX;\n        this.y = endY;\n    }\n    applyCurvedEdge(record) {\n        const controlX = [this.x[0] + record.controlDelta.x, this.x[1] + record.morphControlDelta.x];\n        const controlY = [this.y[0] + record.controlDelta.y, this.y[1] + record.morphControlDelta.y];\n        const endX = [controlX[0] + record.anchorDelta.x, controlX[1] + record.morphAnchorDelta.x];\n        const endY = [controlY[0] + record.anchorDelta.y, controlY[1] + record.morphAnchorDelta.y];\n        if (this.leftFill !== undefined) {\n            this.leftFill.segments.push(createCurvedSegment(this.x, this.y, controlX, controlY, endX, endY));\n        }\n        if (this.rightFill !== undefined) {\n            this.rightFill.segments.push(createCurvedSegment(endX, endY, controlX, controlY, this.x, this.y));\n        }\n        if (this.lineFill !== undefined) {\n            this.lineFill.segments.push(createCurvedSegment(this.x, this.y, controlX, controlY, endX, endY));\n        }\n        this.x = endX;\n        this.y = endY;\n    }\n    getShape() {\n        const paths = [];\n        for (const layer of this.layers) {\n            for (const path of layerToPaths(layer)) {\n                paths.push(path);\n            }\n        }\n        return { paths };\n    }\n    setNewStyles(swfFillStyles, swfLineStyles) {\n        const layer = createStyleLayer(swfFillStyles, swfLineStyles);\n        this.layers.push(layer);\n        this.leftFill = undefined;\n        this.rightFill = undefined;\n        this.lineFill = undefined;\n    }\n    setLeftFillById(fillId) {\n        if (fillId === 0) {\n            this.leftFill = undefined;\n            return;\n        }\n        const currentLayer = this.layers[this.layers.length - 1];\n        const fillIndex = fillId - 1;\n        this.leftFill = currentLayer.fills[fillIndex];\n        if (this.leftFill === undefined) {\n            throw new Error(\"Invalid fill ID\");\n        }\n    }\n    setRightFillById(fillId) {\n        if (fillId === 0) {\n            this.rightFill = undefined;\n            return;\n        }\n        const currentLayer = this.layers[this.layers.length - 1];\n        const fillIndex = fillId - 1;\n        this.rightFill = currentLayer.fills[fillIndex];\n        if (this.rightFill === undefined) {\n            throw new Error(\"Invalid fill ID\");\n        }\n    }\n    setLineFillById(fillId) {\n        if (fillId === 0) {\n            this.lineFill = undefined;\n            return;\n        }\n        const currentLayer = this.layers[this.layers.length - 1];\n        const fillIndex = fillId - 1;\n        this.lineFill = currentLayer.lines[fillIndex];\n        if (this.lineFill === undefined) {\n            throw new Error(\"Invalid fill ID\");\n        }\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst invalid_type_1 = require(\"../errors/invalid-type\");\nconst read_visitor_1 = require(\"../readers/read-visitor\");\nexports.name = \"boolean\";\nclass BooleanType {\n    constructor() {\n        this.name = exports.name;\n    }\n    // TODO: Dynamically add with prototype?\n    read(reader, raw) {\n        return reader.readBoolean(raw, read_visitor_1.readVisitor({\n            fromBoolean(input) {\n                return input;\n            },\n        }));\n    }\n    // TODO: Dynamically add with prototype?\n    write(writer, value) {\n        return writer.writeBoolean(value);\n    }\n    testError(val) {\n        if (typeof val !== \"boolean\") {\n            return invalid_type_1.createInvalidTypeError(\"boolean\", val);\n        }\n        return undefined;\n    }\n    test(value) {\n        return typeof value === \"boolean\";\n    }\n    equals(left, right) {\n        return left === right;\n    }\n    lte(left, right) {\n        return left <= right;\n    }\n    clone(val) {\n        return val;\n    }\n    /**\n     * @param oldVal\n     * @param newVal\n     * @returns `true` if there is a difference, `undefined` otherwise\n     */\n    diff(oldVal, newVal) {\n        /* tslint:disable-next-line:strict-boolean-expressions */\n        return (oldVal !== newVal) || undefined;\n    }\n    patch(oldVal, diff) {\n        return oldVal === (diff === undefined);\n    }\n    reverseDiff(diff) {\n        return diff;\n    }\n    squash(diff1, diff2) {\n        /* tslint:disable-next-line:strict-boolean-expressions */\n        return (diff1 !== diff2) && undefined;\n    }\n}\nexports.BooleanType = BooleanType;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdHlwZXMvYm9vbGVhbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHlEQUFnRTtBQUNoRSwwREFBc0Q7QUFHekMsUUFBQSxJQUFJLEdBQVMsU0FBUyxDQUFDO0FBSXBDLE1BQWEsV0FBVztJQUF4QjtRQUNXLFNBQUksR0FBUyxZQUFJLENBQUM7SUE2RDdCLENBQUM7SUEzREMsd0NBQXdDO0lBQ3hDLElBQUksQ0FBSSxNQUFpQixFQUFFLEdBQU07UUFDL0IsT0FBTyxNQUFNLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSwwQkFBVyxDQUFDO1lBQ3pDLFdBQVcsQ0FBQyxLQUFjO2dCQUN4QixPQUFPLEtBQUssQ0FBQztZQUNmLENBQUM7U0FDRixDQUFDLENBQUMsQ0FBQztJQUNOLENBQUM7SUFFRCx3Q0FBd0M7SUFDeEMsS0FBSyxDQUFJLE1BQWlCLEVBQUUsS0FBYztRQUN4QyxPQUFPLE1BQU0sQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELFNBQVMsQ0FBQyxHQUFZO1FBQ3BCLElBQUksT0FBTyxHQUFHLEtBQUssU0FBUyxFQUFFO1lBQzVCLE9BQU8scUNBQXNCLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1NBQy9DO1FBQ0QsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUVELElBQUksQ0FBQyxLQUFjO1FBQ2pCLE9BQU8sT0FBTyxLQUFLLEtBQUssU0FBUyxDQUFDO0lBQ3BDLENBQUM7SUFFRCxNQUFNLENBQUMsSUFBYSxFQUFFLEtBQWM7UUFDbEMsT0FBTyxJQUFJLEtBQUssS0FBSyxDQUFDO0lBQ3hCLENBQUM7SUFFRCxHQUFHLENBQUMsSUFBYSxFQUFFLEtBQWM7UUFDL0IsT0FBTyxJQUFJLElBQUksS0FBSyxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxLQUFLLENBQUMsR0FBWTtRQUNoQixPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsSUFBSSxDQUFDLE1BQWUsRUFBRSxNQUFlO1FBQ25DLHlEQUF5RDtRQUN6RCxPQUFPLENBQUMsTUFBTSxLQUFLLE1BQU0sQ0FBQyxJQUFJLFNBQVMsQ0FBQztJQUMxQyxDQUFDO0lBRUQsS0FBSyxDQUFDLE1BQWUsRUFBRSxJQUFzQjtRQUMzQyxPQUFPLE1BQU0sS0FBSyxDQUFDLElBQUksS0FBSyxTQUFTLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRUQsV0FBVyxDQUFDLElBQXNCO1FBQ2hDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELE1BQU0sQ0FBQyxLQUF1QixFQUFFLEtBQXVCO1FBQ3JELHlEQUF5RDtRQUN6RCxPQUFPLENBQUMsS0FBSyxLQUFLLEtBQUssQ0FBQyxJQUFJLFNBQVMsQ0FBQztJQUN4QyxDQUFDO0NBQ0Y7QUE5REQsa0NBOERDIiwiZmlsZSI6InR5cGVzL2Jvb2xlYW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJb1R5cGUsIE9yZCwgUmVhZGVyLCBWZXJzaW9uZWRUeXBlLCBXcml0ZXIgfSBmcm9tIFwiLi4vY29yZVwiO1xuaW1wb3J0IHsgY3JlYXRlSW52YWxpZFR5cGVFcnJvciB9IGZyb20gXCIuLi9lcnJvcnMvaW52YWxpZC10eXBlXCI7XG5pbXBvcnQgeyByZWFkVmlzaXRvciB9IGZyb20gXCIuLi9yZWFkZXJzL3JlYWQtdmlzaXRvclwiO1xuXG5leHBvcnQgdHlwZSBOYW1lID0gXCJib29sZWFuXCI7XG5leHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiYm9vbGVhblwiO1xuXG5leHBvcnQgdHlwZSBEaWZmID0gYm9vbGVhbjtcblxuZXhwb3J0IGNsYXNzIEJvb2xlYW5UeXBlIGltcGxlbWVudHMgSW9UeXBlPGJvb2xlYW4+LCBWZXJzaW9uZWRUeXBlPGJvb2xlYW4sIERpZmY+LCBPcmQ8Ym9vbGVhbj4ge1xuICByZWFkb25seSBuYW1lOiBOYW1lID0gbmFtZTtcblxuICAvLyBUT0RPOiBEeW5hbWljYWxseSBhZGQgd2l0aCBwcm90b3R5cGU/XG4gIHJlYWQ8Uj4ocmVhZGVyOiBSZWFkZXI8Uj4sIHJhdzogUik6IGJvb2xlYW4ge1xuICAgIHJldHVybiByZWFkZXIucmVhZEJvb2xlYW4ocmF3LCByZWFkVmlzaXRvcih7XG4gICAgICBmcm9tQm9vbGVhbihpbnB1dDogYm9vbGVhbik6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gaW5wdXQ7XG4gICAgICB9LFxuICAgIH0pKTtcbiAgfVxuXG4gIC8vIFRPRE86IER5bmFtaWNhbGx5IGFkZCB3aXRoIHByb3RvdHlwZT9cbiAgd3JpdGU8Vz4od3JpdGVyOiBXcml0ZXI8Vz4sIHZhbHVlOiBib29sZWFuKTogVyB7XG4gICAgcmV0dXJuIHdyaXRlci53cml0ZUJvb2xlYW4odmFsdWUpO1xuICB9XG5cbiAgdGVzdEVycm9yKHZhbDogYm9vbGVhbik6IEVycm9yIHwgdW5kZWZpbmVkIHtcbiAgICBpZiAodHlwZW9mIHZhbCAhPT0gXCJib29sZWFuXCIpIHtcbiAgICAgIHJldHVybiBjcmVhdGVJbnZhbGlkVHlwZUVycm9yKFwiYm9vbGVhblwiLCB2YWwpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgdGVzdCh2YWx1ZTogYm9vbGVhbik6IHZhbHVlIGlzIGJvb2xlYW4ge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09IFwiYm9vbGVhblwiO1xuICB9XG5cbiAgZXF1YWxzKGxlZnQ6IGJvb2xlYW4sIHJpZ2h0OiBib29sZWFuKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGxlZnQgPT09IHJpZ2h0O1xuICB9XG5cbiAgbHRlKGxlZnQ6IGJvb2xlYW4sIHJpZ2h0OiBib29sZWFuKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGxlZnQgPD0gcmlnaHQ7XG4gIH1cblxuICBjbG9uZSh2YWw6IGJvb2xlYW4pOiBib29sZWFuIHtcbiAgICByZXR1cm4gdmFsO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSBvbGRWYWxcbiAgICogQHBhcmFtIG5ld1ZhbFxuICAgKiBAcmV0dXJucyBgdHJ1ZWAgaWYgdGhlcmUgaXMgYSBkaWZmZXJlbmNlLCBgdW5kZWZpbmVkYCBvdGhlcndpc2VcbiAgICovXG4gIGRpZmYob2xkVmFsOiBib29sZWFuLCBuZXdWYWw6IGJvb2xlYW4pOiBEaWZmIHwgdW5kZWZpbmVkIHtcbiAgICAvKiB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6c3RyaWN0LWJvb2xlYW4tZXhwcmVzc2lvbnMgKi9cbiAgICByZXR1cm4gKG9sZFZhbCAhPT0gbmV3VmFsKSB8fCB1bmRlZmluZWQ7XG4gIH1cblxuICBwYXRjaChvbGRWYWw6IGJvb2xlYW4sIGRpZmY6IERpZmYgfCB1bmRlZmluZWQpOiBib29sZWFuIHtcbiAgICByZXR1cm4gb2xkVmFsID09PSAoZGlmZiA9PT0gdW5kZWZpbmVkKTtcbiAgfVxuXG4gIHJldmVyc2VEaWZmKGRpZmY6IERpZmYgfCB1bmRlZmluZWQpOiBEaWZmIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gZGlmZjtcbiAgfVxuXG4gIHNxdWFzaChkaWZmMTogRGlmZiB8IHVuZGVmaW5lZCwgZGlmZjI6IERpZmYgfCB1bmRlZmluZWQpOiBEaWZmIHwgdW5kZWZpbmVkIHtcbiAgICAvKiB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6c3RyaWN0LWJvb2xlYW4tZXhwcmVzc2lvbnMgKi9cbiAgICByZXR1cm4gKGRpZmYxICE9PSBkaWZmMikgJiYgdW5kZWZpbmVkO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"InvalidInteger\";\nfunction format({ value, source }) {\n    return `Invalid integer: ${value}` + (source === undefined ? \"\" : `, from ${source}`);\n}\nexports.format = format;\nfunction createInvalidIntegerError(value, source) {\n    return incident_1.Incident(exports.name, { value, source }, format);\n}\nexports.createInvalidIntegerError = createInvalidIntegerError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2ludmFsaWQtaW50ZWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFvQztBQUd2QixRQUFBLElBQUksR0FBUyxnQkFBZ0IsQ0FBQztBQVUzQyxTQUFnQixNQUFNLENBQUMsRUFBQyxLQUFLLEVBQUUsTUFBTSxFQUFPO0lBQzFDLE9BQU8sb0JBQW9CLEtBQUssRUFBRSxHQUFHLENBQUMsTUFBTSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxVQUFVLE1BQU0sRUFBRSxDQUFDLENBQUM7QUFDeEYsQ0FBQztBQUZELHdCQUVDO0FBRUQsU0FBZ0IseUJBQXlCLENBQUMsS0FBYSxFQUFFLE1BQVk7SUFDbkUsT0FBTyxtQkFBUSxDQUFDLFlBQUksRUFBRSxFQUFDLEtBQUssRUFBRSxNQUFNLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUNqRCxDQUFDO0FBRkQsOERBRUMiLCJmaWxlIjoiZXJyb3JzL2ludmFsaWQtaW50ZWdlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluY2lkZW50IH0gZnJvbSBcImluY2lkZW50XCI7XG5cbmV4cG9ydCB0eXBlIE5hbWUgPSBcIkludmFsaWRJbnRlZ2VyXCI7XG5leHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiSW52YWxpZEludGVnZXJcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEYXRhIHtcbiAgdmFsdWU6IGFueTtcbiAgc291cmNlPzogYW55O1xufVxuXG5leHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbmV4cG9ydCB0eXBlIEludmFsaWRJbnRlZ2VyRXJyb3IgPSBJbmNpZGVudDxEYXRhLCBOYW1lLCBDYXVzZT47XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe3ZhbHVlLCBzb3VyY2V9OiBEYXRhKTogc3RyaW5nIHtcbiAgcmV0dXJuIGBJbnZhbGlkIGludGVnZXI6ICR7dmFsdWV9YCArIChzb3VyY2UgPT09IHVuZGVmaW5lZCA/IFwiXCIgOiBgLCBmcm9tICR7c291cmNlfWApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSW52YWxpZEludGVnZXJFcnJvcih2YWx1ZTogbnVtYmVyLCBzb3VyY2U/OiBhbnkpOiBJbnZhbGlkSW50ZWdlckVycm9yIHtcbiAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHt2YWx1ZSwgc291cmNlfSwgZm9ybWF0KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"InvalidDocument\";\nfunction createInvalidDocumentError(data) {\n    if (data.extra === undefined) {\n        Reflect.deleteProperty(data, \"extra\");\n    }\n    return incident_1.Incident(exports.name, data);\n}\nexports.createInvalidDocumentError = createInvalidDocumentError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2ludmFsaWQtZG9jdW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMsaUJBQWlCLENBQUM7QUF3QjVDLFNBQWdCLDBCQUEwQixDQUFDLElBQVU7SUFDbkQsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLFNBQVMsRUFBRTtRQUM1QixPQUFPLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztLQUN2QztJQUNELE9BQU8sbUJBQVEsQ0FBQyxZQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDOUIsQ0FBQztBQUxELGdFQUtDIiwiZmlsZSI6ImVycm9ycy9pbnZhbGlkLWRvY3VtZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IHR5cGUgTmFtZSA9IFwiSW52YWxpZERvY3VtZW50XCI7XG5leHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiSW52YWxpZERvY3VtZW50XCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gIC8qKlxuICAgKiBFeHRyYSBwcm9wZXJ0aWVzLlxuICAgKiBJZiB0aGlzIGVycm9yIGlzIHRocm93biBkdXJpbmcgYSByZWFkIG9wZXJhdGlvbiwgdGhlIGtleXMgaW4gdGhpcyBzZXQgY29ycmVzcG9uZCB0byB0aGVcbiAgICogcmF3IGtleXMgb2YgdGhlIGlucHV0IGRvY3VtZW50IChldmVuIGlmIGEgYHJlbmFtZWAgaXMgYXBwbGllZCkuXG4gICAqL1xuICBleHRyYT86IFNldDxzdHJpbmc+O1xuXG4gIC8qKlxuICAgKiBNaXNzaW5nIHByb3BlcnRpZXMuXG4gICAqL1xuICBtaXNzaW5nOiBTZXQ8c3RyaW5nPjtcblxuICAvKipcbiAgICogSW52YWxpZCBwcm9wZXJ0aWVzIChhbmQgYXNzb2NpYXRlZCBlcnJvcikuXG4gICAqL1xuICBpbnZhbGlkOiBNYXA8c3RyaW5nLCBFcnJvcj47XG59XG5cbmV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuZXhwb3J0IHR5cGUgSW52YWxpZERvY3VtZW50RXJyb3IgPSBJbmNpZGVudDxEYXRhLCBOYW1lLCBDYXVzZT47XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbnZhbGlkRG9jdW1lbnRFcnJvcihkYXRhOiBEYXRhKTogSW52YWxpZERvY3VtZW50RXJyb3Ige1xuICBpZiAoZGF0YS5leHRyYSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgUmVmbGVjdC5kZWxldGVQcm9wZXJ0eShkYXRhLCBcImV4dHJhXCIpO1xuICB9XG4gIHJldHVybiBJbmNpZGVudChuYW1lLCBkYXRhKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"InvalidValue\";\nfunction createInvalidValueError(type, value) {\n    return new incident_1.Incident(exports.name, { type, value });\n}\nexports.createInvalidValueError = createInvalidValueError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2ludmFsaWQtdmFsdWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFJdkIsUUFBQSxJQUFJLEdBQVMsY0FBYyxDQUFDO0FBVXpDLFNBQWdCLHVCQUF1QixDQUFDLElBQWUsRUFBRSxLQUFVO0lBQ2pFLE9BQU8sSUFBSSxtQkFBUSxDQUFDLFlBQUksRUFBRSxFQUFDLElBQUksRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUM7QUFGRCwwREFFQyIsImZpbGUiOiJlcnJvcnMvaW52YWxpZC12YWx1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluY2lkZW50IH0gZnJvbSBcImluY2lkZW50XCI7XG5pbXBvcnQgeyBUeXBlIH0gZnJvbSBcIi4uL2NvcmVcIjtcblxuZXhwb3J0IHR5cGUgTmFtZSA9IFwiSW52YWxpZFZhbHVlXCI7XG5leHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiSW52YWxpZFZhbHVlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gIHR5cGU6IFR5cGU8YW55PjtcbiAgdmFsdWU6IGFueTtcbn1cblxuZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG5leHBvcnQgdHlwZSBJbnZhbGlkVmFsdWVFcnJvciA9IEluY2lkZW50PERhdGEsIE5hbWUsIENhdXNlPjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUludmFsaWRWYWx1ZUVycm9yKHR5cGU6IFR5cGU8YW55PiwgdmFsdWU6IGFueSk6IEludmFsaWRWYWx1ZUVycm9yIHtcbiAgcmV0dXJuIG5ldyBJbmNpZGVudChuYW1lLCB7dHlwZSwgdmFsdWV9KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"InvalidArrayItems\";\nfunction createInvalidArrayItemsError(invalid) {\n    return incident_1.Incident(exports.name, { invalid });\n}\nexports.createInvalidArrayItemsError = createInvalidArrayItemsError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2ludmFsaWQtYXJyYXktaXRlbXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMsbUJBQW1CLENBQUM7QUFZOUMsU0FBZ0IsNEJBQTRCLENBQUMsT0FBMkI7SUFDdEUsT0FBTyxtQkFBUSxDQUFDLFlBQUksRUFBRSxFQUFDLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFDbkMsQ0FBQztBQUZELG9FQUVDIiwiZmlsZSI6ImVycm9ycy9pbnZhbGlkLWFycmF5LWl0ZW1zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IHR5cGUgTmFtZSA9IFwiSW52YWxpZEFycmF5SXRlbXNcIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJJbnZhbGlkQXJyYXlJdGVtc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICAvKipcbiAgICogTWFwIGZyb20gaXRlbSBpbmRleCB0byBlcnJvci5cbiAgICovXG4gIGludmFsaWQ6IE1hcDxudW1iZXIsIEVycm9yPjtcbn1cblxuZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG5leHBvcnQgdHlwZSBJbnZhbGlkQXJyYXlJdGVtc0Vycm9yID0gSW5jaWRlbnQ8RGF0YSwgTmFtZSwgQ2F1c2U+O1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSW52YWxpZEFycmF5SXRlbXNFcnJvcihpbnZhbGlkOiBNYXA8bnVtYmVyLCBFcnJvcj4pOiBJbnZhbGlkQXJyYXlJdGVtc0Vycm9yIHtcbiAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHtpbnZhbGlkfSk7XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"MinArrayLength\";\nfunction format({ array, min }) {\n    return `Expected array length (${array.length}) to be greater than or equal to ${min}`;\n}\nexports.format = format;\nfunction createMinArrayLengthError(array, min) {\n    return incident_1.Incident(exports.name, { array, min }, format);\n}\nexports.createMinArrayLengthError = createMinArrayLengthError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL21pbi1hcnJheS1sZW5ndGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMsZ0JBQWdCLENBQUM7QUFVM0MsU0FBZ0IsTUFBTSxDQUFDLEVBQUMsS0FBSyxFQUFFLEdBQUcsRUFBTztJQUN2QyxPQUFPLDBCQUEwQixLQUFLLENBQUMsTUFBTSxvQ0FBb0MsR0FBRyxFQUFFLENBQUM7QUFDekYsQ0FBQztBQUZELHdCQUVDO0FBRUQsU0FBZ0IseUJBQXlCLENBQUMsS0FBcUIsRUFBRSxHQUFXO0lBQzFFLE9BQU8sbUJBQVEsQ0FBQyxZQUFJLEVBQUUsRUFBQyxLQUFLLEVBQUUsR0FBRyxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDOUMsQ0FBQztBQUZELDhEQUVDIiwiZmlsZSI6ImVycm9ycy9taW4tYXJyYXktbGVuZ3RoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IHR5cGUgTmFtZSA9IFwiTWluQXJyYXlMZW5ndGhcIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJNaW5BcnJheUxlbmd0aFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICBhcnJheTogQXJyYXlMaWtlPGFueT47XG4gIG1pbjogbnVtYmVyO1xufVxuXG5leHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbmV4cG9ydCB0eXBlIE1pbkFycmF5TGVuZ3RoRXJyb3IgPSBJbmNpZGVudDxEYXRhLCBOYW1lLCBDYXVzZT47XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe2FycmF5LCBtaW59OiBEYXRhKTogc3RyaW5nIHtcbiAgcmV0dXJuIGBFeHBlY3RlZCBhcnJheSBsZW5ndGggKCR7YXJyYXkubGVuZ3RofSkgdG8gYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvICR7bWlufWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNaW5BcnJheUxlbmd0aEVycm9yKGFycmF5OiBBcnJheUxpa2U8YW55PiwgbWluOiBudW1iZXIpOiBNaW5BcnJheUxlbmd0aEVycm9yIHtcbiAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHthcnJheSwgbWlufSwgZm9ybWF0KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst matrix_1 = require(\"../matrix\");\nconst bitmap_1 = require(\"./bitmap\");\nexports.$MorphBitmap = new document_1.DocumentType({\n    properties: {\n        type: bitmap_1.$Bitmap.properties.type,\n        bitmapId: bitmap_1.$Bitmap.properties.bitmapId,\n        matrix: bitmap_1.$Bitmap.properties.matrix,\n        morphMatrix: { type: matrix_1.$Matrix },\n        repeating: bitmap_1.$Bitmap.properties.repeating,\n        smoothed: bitmap_1.$Bitmap.properties.smoothed,\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvbW9ycGgtYml0bWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxzQ0FBNEM7QUFDNUMscUNBQTJDO0FBTTlCLFFBQUEsWUFBWSxHQUFnQyxJQUFJLHVCQUFZLENBQWM7SUFDckYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLGdCQUFPLENBQUMsVUFBVSxDQUFDLElBQUk7UUFDN0IsUUFBUSxFQUFFLGdCQUFPLENBQUMsVUFBVSxDQUFDLFFBQVE7UUFDckMsTUFBTSxFQUFFLGdCQUFPLENBQUMsVUFBVSxDQUFDLE1BQU07UUFDakMsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDNUIsU0FBUyxFQUFFLGdCQUFPLENBQUMsVUFBVSxDQUFDLFNBQVM7UUFDdkMsUUFBUSxFQUFFLGdCQUFPLENBQUMsVUFBVSxDQUFDLFFBQVE7S0FDdEM7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJmaWxsLXN0eWxlcy9tb3JwaC1iaXRtYXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7ICRNYXRyaXgsIE1hdHJpeCB9IGZyb20gXCIuLi9tYXRyaXhcIjtcbmltcG9ydCB7ICRCaXRtYXAsIEJpdG1hcCB9IGZyb20gXCIuL2JpdG1hcFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1vcnBoQml0bWFwIGV4dGVuZHMgQml0bWFwIHtcbiAgbW9ycGhNYXRyaXg6IE1hdHJpeDtcbn1cblxuZXhwb3J0IGNvbnN0ICRNb3JwaEJpdG1hcDogRG9jdW1lbnRJb1R5cGU8TW9ycGhCaXRtYXA+ID0gbmV3IERvY3VtZW50VHlwZTxNb3JwaEJpdG1hcD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZTogJEJpdG1hcC5wcm9wZXJ0aWVzLnR5cGUsXG4gICAgYml0bWFwSWQ6ICRCaXRtYXAucHJvcGVydGllcy5iaXRtYXBJZCxcbiAgICBtYXRyaXg6ICRCaXRtYXAucHJvcGVydGllcy5tYXRyaXgsXG4gICAgbW9ycGhNYXRyaXg6IHt0eXBlOiAkTWF0cml4fSxcbiAgICByZXBlYXRpbmc6ICRCaXRtYXAucHJvcGVydGllcy5yZXBlYXRpbmcsXG4gICAgc21vb3RoZWQ6ICRCaXRtYXAucHJvcGVydGllcy5zbW9vdGhlZCxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst sfixed8p8_1 = require(\"../fixed-point/sfixed8p8\");\nconst matrix_1 = require(\"../matrix\");\nconst morph_gradient_1 = require(\"../morph-gradient\");\nconst focal_gradient_1 = require(\"./focal-gradient\");\nexports.$MorphFocalGradient = new document_1.DocumentType({\n    properties: {\n        type: focal_gradient_1.$FocalGradient.properties.type,\n        matrix: focal_gradient_1.$FocalGradient.properties.matrix,\n        morphMatrix: { type: matrix_1.$Matrix },\n        gradient: { type: morph_gradient_1.$MorphGradient },\n        focalPoint: focal_gradient_1.$FocalGradient.properties.focalPoint,\n        morphFocalPoint: { type: sfixed8p8_1.Sfixed8P8 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvbW9ycGgtZm9jYWwtZ3JhZGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLHdEQUFxRDtBQUNyRCxzQ0FBNEM7QUFDNUMsc0RBQWtFO0FBQ2xFLHFEQUFpRTtBQVFwRCxRQUFBLG1CQUFtQixHQUF1QyxJQUFJLHVCQUFZLENBQXFCO0lBQzFHLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSwrQkFBYyxDQUFDLFVBQVUsQ0FBQyxJQUFJO1FBQ3BDLE1BQU0sRUFBRSwrQkFBYyxDQUFDLFVBQVUsQ0FBQyxNQUFNO1FBQ3hDLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzVCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSwrQkFBYyxFQUFDO1FBQ2hDLFVBQVUsRUFBRSwrQkFBYyxDQUFDLFVBQVUsQ0FBQyxVQUFVO1FBQ2hELGVBQWUsRUFBRSxFQUFDLElBQUksRUFBRSxxQkFBUyxFQUFDO0tBQ25DO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZmlsbC1zdHlsZXMvbW9ycGgtZm9jYWwtZ3JhZGllbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IFNmaXhlZDhQOCB9IGZyb20gXCIuLi9maXhlZC1wb2ludC9zZml4ZWQ4cDhcIjtcbmltcG9ydCB7ICRNYXRyaXgsIE1hdHJpeCB9IGZyb20gXCIuLi9tYXRyaXhcIjtcbmltcG9ydCB7ICRNb3JwaEdyYWRpZW50LCBNb3JwaEdyYWRpZW50IH0gZnJvbSBcIi4uL21vcnBoLWdyYWRpZW50XCI7XG5pbXBvcnQgeyAkRm9jYWxHcmFkaWVudCwgRm9jYWxHcmFkaWVudCB9IGZyb20gXCIuL2ZvY2FsLWdyYWRpZW50XCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTW9ycGhGb2NhbEdyYWRpZW50IGV4dGVuZHMgRm9jYWxHcmFkaWVudCB7XG4gIG1vcnBoTWF0cml4OiBNYXRyaXg7XG4gIGdyYWRpZW50OiBNb3JwaEdyYWRpZW50O1xuICBtb3JwaEZvY2FsUG9pbnQ6IFNmaXhlZDhQODtcbn1cblxuZXhwb3J0IGNvbnN0ICRNb3JwaEZvY2FsR3JhZGllbnQ6IERvY3VtZW50SW9UeXBlPE1vcnBoRm9jYWxHcmFkaWVudD4gPSBuZXcgRG9jdW1lbnRUeXBlPE1vcnBoRm9jYWxHcmFkaWVudD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZTogJEZvY2FsR3JhZGllbnQucHJvcGVydGllcy50eXBlLFxuICAgIG1hdHJpeDogJEZvY2FsR3JhZGllbnQucHJvcGVydGllcy5tYXRyaXgsXG4gICAgbW9ycGhNYXRyaXg6IHt0eXBlOiAkTWF0cml4fSxcbiAgICBncmFkaWVudDoge3R5cGU6ICRNb3JwaEdyYWRpZW50fSxcbiAgICBmb2NhbFBvaW50OiAkRm9jYWxHcmFkaWVudC5wcm9wZXJ0aWVzLmZvY2FsUG9pbnQsXG4gICAgbW9ycGhGb2NhbFBvaW50OiB7dHlwZTogU2ZpeGVkOFA4fSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint8_1 = require(\"kryo/builtins/uint8\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst color_stop_1 = require(\"./color-stop\");\nconst straight_s_rgba8_1 = require(\"./straight-s-rgba8\");\nexports.$MorphColorStop = new document_1.DocumentType({\n    properties: {\n        ratio: color_stop_1.$ColorStop.properties.ratio,\n        morphRatio: { type: uint8_1.$Uint8 },\n        color: color_stop_1.$ColorStop.properties.color,\n        morphColor: { type: straight_s_rgba8_1.$StraightSRgba8 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtY29sb3Itc3RvcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtDQUE2QztBQUM3QyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBRW5FLDZDQUFxRDtBQUNyRCx5REFBcUU7QUFPeEQsUUFBQSxlQUFlLEdBQW1DLElBQUksdUJBQVksQ0FBaUI7SUFDOUYsVUFBVSxFQUFFO1FBQ1YsS0FBSyxFQUFFLHVCQUFVLENBQUMsVUFBVSxDQUFDLEtBQUs7UUFDbEMsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLGNBQU0sRUFBQztRQUMxQixLQUFLLEVBQUUsdUJBQVUsQ0FBQyxVQUFVLENBQUMsS0FBSztRQUNsQyxVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0NBQWUsRUFBQztLQUNwQztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6Im1vcnBoLWNvbG9yLXN0b3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkVWludDggfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50OFwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBVaW50OCB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJENvbG9yU3RvcCwgQ29sb3JTdG9wIH0gZnJvbSBcIi4vY29sb3Itc3RvcFwiO1xuaW1wb3J0IHsgJFN0cmFpZ2h0U1JnYmE4LCBTdHJhaWdodFNSZ2JhOCB9IGZyb20gXCIuL3N0cmFpZ2h0LXMtcmdiYThcIjtcblxuZXhwb3J0IGludGVyZmFjZSBNb3JwaENvbG9yU3RvcCBleHRlbmRzIENvbG9yU3RvcCB7XG4gIG1vcnBoUmF0aW86IFVpbnQ4O1xuICBtb3JwaENvbG9yOiBTdHJhaWdodFNSZ2JhODtcbn1cblxuZXhwb3J0IGNvbnN0ICRNb3JwaENvbG9yU3RvcDogRG9jdW1lbnRJb1R5cGU8TW9ycGhDb2xvclN0b3A+ID0gbmV3IERvY3VtZW50VHlwZTxNb3JwaENvbG9yU3RvcD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgcmF0aW86ICRDb2xvclN0b3AucHJvcGVydGllcy5yYXRpbyxcbiAgICBtb3JwaFJhdGlvOiB7dHlwZTogJFVpbnQ4fSxcbiAgICBjb2xvcjogJENvbG9yU3RvcC5wcm9wZXJ0aWVzLmNvbG9yLFxuICAgIG1vcnBoQ29sb3I6IHt0eXBlOiAkU3RyYWlnaHRTUmdiYTh9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst matrix_1 = require(\"../matrix\");\nconst morph_gradient_1 = require(\"../morph-gradient\");\nconst linear_gradient_1 = require(\"./linear-gradient\");\nexports.$MorphLinearGradient = new document_1.DocumentType({\n    properties: {\n        type: linear_gradient_1.$LinearGradient.properties.type,\n        matrix: linear_gradient_1.$LinearGradient.properties.matrix,\n        morphMatrix: { type: matrix_1.$Matrix },\n        gradient: { type: morph_gradient_1.$MorphGradient },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvbW9ycGgtbGluZWFyLWdyYWRpZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxzQ0FBNEM7QUFDNUMsc0RBQWtFO0FBQ2xFLHVEQUFvRTtBQU92RCxRQUFBLG9CQUFvQixHQUF3QyxJQUFJLHVCQUFZLENBQXNCO0lBQzdHLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxpQ0FBZSxDQUFDLFVBQVUsQ0FBQyxJQUFJO1FBQ3JDLE1BQU0sRUFBRSxpQ0FBZSxDQUFDLFVBQVUsQ0FBQyxNQUFNO1FBQ3pDLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzVCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSwrQkFBYyxFQUFDO0tBQ2pDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZmlsbC1zdHlsZXMvbW9ycGgtbGluZWFyLWdyYWRpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyAkTWF0cml4LCBNYXRyaXggfSBmcm9tIFwiLi4vbWF0cml4XCI7XG5pbXBvcnQgeyAkTW9ycGhHcmFkaWVudCwgTW9ycGhHcmFkaWVudCB9IGZyb20gXCIuLi9tb3JwaC1ncmFkaWVudFwiO1xuaW1wb3J0IHsgJExpbmVhckdyYWRpZW50LCBMaW5lYXJHcmFkaWVudCB9IGZyb20gXCIuL2xpbmVhci1ncmFkaWVudFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1vcnBoTGluZWFyR3JhZGllbnQgZXh0ZW5kcyBMaW5lYXJHcmFkaWVudCB7XG4gIG1vcnBoTWF0cml4OiBNYXRyaXg7XG4gIGdyYWRpZW50OiBNb3JwaEdyYWRpZW50O1xufVxuXG5leHBvcnQgY29uc3QgJE1vcnBoTGluZWFyR3JhZGllbnQ6IERvY3VtZW50SW9UeXBlPE1vcnBoTGluZWFyR3JhZGllbnQ+ID0gbmV3IERvY3VtZW50VHlwZTxNb3JwaExpbmVhckdyYWRpZW50Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiAkTGluZWFyR3JhZGllbnQucHJvcGVydGllcy50eXBlLFxuICAgIG1hdHJpeDogJExpbmVhckdyYWRpZW50LnByb3BlcnRpZXMubWF0cml4LFxuICAgIG1vcnBoTWF0cml4OiB7dHlwZTogJE1hdHJpeH0sXG4gICAgZ3JhZGllbnQ6IHt0eXBlOiAkTW9ycGhHcmFkaWVudH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst matrix_1 = require(\"../matrix\");\nconst morph_gradient_1 = require(\"../morph-gradient\");\nconst radial_gradient_1 = require(\"./radial-gradient\");\nexports.$MorphRadialGradient = new document_1.DocumentType({\n    properties: {\n        type: radial_gradient_1.$RadialGradient.properties.type,\n        matrix: radial_gradient_1.$RadialGradient.properties.matrix,\n        morphMatrix: { type: matrix_1.$Matrix },\n        gradient: { type: morph_gradient_1.$MorphGradient },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvbW9ycGgtcmFkaWFsLWdyYWRpZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxzQ0FBNEM7QUFDNUMsc0RBQWtFO0FBQ2xFLHVEQUFvRTtBQU92RCxRQUFBLG9CQUFvQixHQUF3QyxJQUFJLHVCQUFZLENBQXNCO0lBQzdHLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxpQ0FBZSxDQUFDLFVBQVUsQ0FBQyxJQUFJO1FBQ3JDLE1BQU0sRUFBRSxpQ0FBZSxDQUFDLFVBQVUsQ0FBQyxNQUFNO1FBQ3pDLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzVCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSwrQkFBYyxFQUFDO0tBQ2pDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZmlsbC1zdHlsZXMvbW9ycGgtcmFkaWFsLWdyYWRpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyAkTWF0cml4LCBNYXRyaXggfSBmcm9tIFwiLi4vbWF0cml4XCI7XG5pbXBvcnQgeyAkTW9ycGhHcmFkaWVudCwgTW9ycGhHcmFkaWVudCB9IGZyb20gXCIuLi9tb3JwaC1ncmFkaWVudFwiO1xuaW1wb3J0IHsgJFJhZGlhbEdyYWRpZW50LCBSYWRpYWxHcmFkaWVudCB9IGZyb20gXCIuL3JhZGlhbC1ncmFkaWVudFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1vcnBoUmFkaWFsR3JhZGllbnQgZXh0ZW5kcyBSYWRpYWxHcmFkaWVudCB7XG4gIG1vcnBoTWF0cml4OiBNYXRyaXg7XG4gIGdyYWRpZW50OiBNb3JwaEdyYWRpZW50O1xufVxuXG5leHBvcnQgY29uc3QgJE1vcnBoUmFkaWFsR3JhZGllbnQ6IERvY3VtZW50SW9UeXBlPE1vcnBoUmFkaWFsR3JhZGllbnQ+ID0gbmV3IERvY3VtZW50VHlwZTxNb3JwaFJhZGlhbEdyYWRpZW50Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiAkUmFkaWFsR3JhZGllbnQucHJvcGVydGllcy50eXBlLFxuICAgIG1hdHJpeDogJFJhZGlhbEdyYWRpZW50LnByb3BlcnRpZXMubWF0cml4LFxuICAgIG1vcnBoTWF0cml4OiB7dHlwZTogJE1hdHJpeH0sXG4gICAgZ3JhZGllbnQ6IHt0eXBlOiAkTW9ycGhHcmFkaWVudH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst straight_s_rgba8_1 = require(\"../straight-s-rgba8\");\nconst solid_1 = require(\"./solid\");\nexports.$MorphSolid = new document_1.DocumentType({\n    properties: {\n        type: solid_1.$Solid.properties.type,\n        color: solid_1.$Solid.properties.color,\n        morphColor: { type: straight_s_rgba8_1.$StraightSRgba8 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvbW9ycGgtc29saWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLDBEQUFzRTtBQUN0RSxtQ0FBd0M7QUFNM0IsUUFBQSxXQUFXLEdBQStCLElBQUksdUJBQVksQ0FBYTtJQUNsRixVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsY0FBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJO1FBQzVCLEtBQUssRUFBRSxjQUFNLENBQUMsVUFBVSxDQUFDLEtBQUs7UUFDOUIsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtDQUFlLEVBQUM7S0FDcEM7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJmaWxsLXN0eWxlcy9tb3JwaC1zb2xpZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgJFN0cmFpZ2h0U1JnYmE4LCBTdHJhaWdodFNSZ2JhOCB9IGZyb20gXCIuLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5pbXBvcnQgeyAkU29saWQsIFNvbGlkIH0gZnJvbSBcIi4vc29saWRcIjtcblxuZXhwb3J0IGludGVyZmFjZSBNb3JwaFNvbGlkIGV4dGVuZHMgU29saWQge1xuICBtb3JwaENvbG9yOiBTdHJhaWdodFNSZ2JhODtcbn1cblxuZXhwb3J0IGNvbnN0ICRNb3JwaFNvbGlkOiBEb2N1bWVudElvVHlwZTxNb3JwaFNvbGlkPiA9IG5ldyBEb2N1bWVudFR5cGU8TW9ycGhTb2xpZD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZTogJFNvbGlkLnByb3BlcnRpZXMudHlwZSxcbiAgICBjb2xvcjogJFNvbGlkLnByb3BlcnRpZXMuY29sb3IsXG4gICAgbW9ycGhDb2xvcjoge3R5cGU6ICRTdHJhaWdodFNSZ2JhOH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst integer_1 = require(\"kryo/types/integer\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst sfixed16p16_1 = require(\"../fixed-point/sfixed16p16\");\nconst sfixed8p8_1 = require(\"../fixed-point/sfixed8p8\");\nconst straight_s_rgba8_1 = require(\"../straight-s-rgba8\");\nconst _type_1 = require(\"./_type\");\nexports.$Bevel = new document_1.DocumentType({\n    properties: {\n        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.Bevel }) },\n        shadowColor: { type: straight_s_rgba8_1.$StraightSRgba8 },\n        highlightColor: { type: straight_s_rgba8_1.$StraightSRgba8 },\n        blurX: { type: sfixed16p16_1.Sfixed16P16 },\n        blurY: { type: sfixed16p16_1.Sfixed16P16 },\n        angle: { type: sfixed16p16_1.Sfixed16P16 },\n        distance: { type: sfixed16p16_1.Sfixed16P16 },\n        strength: { type: sfixed8p8_1.Sfixed8P8 },\n        inner: { type: boolean_1.$Boolean },\n        knockout: { type: boolean_1.$Boolean },\n        compositeSource: { type: boolean_1.$Boolean },\n        onTop: { type: boolean_1.$Boolean },\n        passes: { type: new integer_1.IntegerType({ min: 0, max: 15 }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9iZXZlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxnREFBNEM7QUFFNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBaUQ7QUFFakQsNERBQXlEO0FBQ3pELHdEQUFxRDtBQUNyRCwwREFBc0U7QUFDdEUsbUNBQWtEO0FBa0JyQyxRQUFBLE1BQU0sR0FBMEIsSUFBSSx1QkFBWSxDQUFRO0lBQ25FLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsbUJBQVcsRUFBRSxLQUFLLEVBQUUsa0JBQVUsQ0FBQyxLQUF5QixFQUFDLENBQUMsRUFBQztRQUNqRyxXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0NBQWUsRUFBQztRQUNwQyxjQUFjLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0NBQWUsRUFBQztRQUN2QyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztRQUMxQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztRQUMxQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztRQUMxQixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztRQUM3QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBQztRQUMzQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN2QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixlQUFlLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUNqQyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN2QixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFDLENBQWtCLEVBQUM7S0FDcEU7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJmaWx0ZXJzL2JldmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBJb1R5cGUgfSBmcm9tIFwia3J5by9jb3JlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IEludGVnZXJUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvaW50ZWdlclwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50NCB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgU2ZpeGVkMTZQMTYgfSBmcm9tIFwiLi4vZml4ZWQtcG9pbnQvc2ZpeGVkMTZwMTZcIjtcbmltcG9ydCB7IFNmaXhlZDhQOCB9IGZyb20gXCIuLi9maXhlZC1wb2ludC9zZml4ZWQ4cDhcIjtcbmltcG9ydCB7ICRTdHJhaWdodFNSZ2JhOCwgU3RyYWlnaHRTUmdiYTggfSBmcm9tIFwiLi4vc3RyYWlnaHQtcy1yZ2JhOFwiO1xuaW1wb3J0IHsgJEZpbHRlclR5cGUsIEZpbHRlclR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEJldmVsIHtcbiAgZmlsdGVyOiBGaWx0ZXJUeXBlLkJldmVsO1xuICBzaGFkb3dDb2xvcjogU3RyYWlnaHRTUmdiYTg7XG4gIGhpZ2hsaWdodENvbG9yOiBTdHJhaWdodFNSZ2JhODtcbiAgYmx1clg6IFNmaXhlZDE2UDE2O1xuICBibHVyWTogU2ZpeGVkMTZQMTY7XG4gIGFuZ2xlOiBTZml4ZWQxNlAxNjtcbiAgZGlzdGFuY2U6IFNmaXhlZDE2UDE2O1xuICBzdHJlbmd0aDogU2ZpeGVkOFA4O1xuICBpbm5lcjogYm9vbGVhbjtcbiAga25vY2tvdXQ6IGJvb2xlYW47XG4gIGNvbXBvc2l0ZVNvdXJjZTogYm9vbGVhbjtcbiAgb25Ub3A6IGJvb2xlYW47XG4gIHBhc3NlczogVWludDQ7XG59XG5cbmV4cG9ydCBjb25zdCAkQmV2ZWw6IERvY3VtZW50SW9UeXBlPEJldmVsPiA9IG5ldyBEb2N1bWVudFR5cGU8QmV2ZWw+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGZpbHRlcjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEZpbHRlclR5cGUsIHZhbHVlOiBGaWx0ZXJUeXBlLkJldmVsIGFzIEZpbHRlclR5cGUuQmV2ZWx9KX0sXG4gICAgc2hhZG93Q29sb3I6IHt0eXBlOiAkU3RyYWlnaHRTUmdiYTh9LFxuICAgIGhpZ2hsaWdodENvbG9yOiB7dHlwZTogJFN0cmFpZ2h0U1JnYmE4fSxcbiAgICBibHVyWDoge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICBibHVyWToge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICBhbmdsZToge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICBkaXN0YW5jZToge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICBzdHJlbmd0aDoge3R5cGU6IFNmaXhlZDhQOH0sXG4gICAgaW5uZXI6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAga25vY2tvdXQ6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgY29tcG9zaXRlU291cmNlOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIG9uVG9wOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHBhc3Nlczoge3R5cGU6IG5ldyBJbnRlZ2VyVHlwZSh7bWluOiAwLCBtYXg6IDE1fSkgYXMgSW9UeXBlPFVpbnQ0Pn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst integer_1 = require(\"kryo/types/integer\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst sfixed16p16_1 = require(\"../fixed-point/sfixed16p16\");\nconst _type_1 = require(\"./_type\");\nexports.$Blur = new document_1.DocumentType({\n    properties: {\n        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.Blur }) },\n        blurX: { type: sfixed16p16_1.Sfixed16P16 },\n        blurY: { type: sfixed16p16_1.Sfixed16P16 },\n        passes: { type: new integer_1.IntegerType({ min: 0, max: 31 }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9ibHVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQWlEO0FBRWpELDREQUF5RDtBQUN6RCxtQ0FBa0Q7QUFTckMsUUFBQSxLQUFLLEdBQXlCLElBQUksdUJBQVksQ0FBTztJQUNoRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLG1CQUFXLEVBQUUsS0FBSyxFQUFFLGtCQUFVLENBQUMsSUFBdUIsRUFBQyxDQUFDLEVBQUM7UUFDL0YsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUM7UUFDMUIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUM7UUFDMUIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBQyxDQUFDLEVBQUM7S0FDbkQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJmaWx0ZXJzL2JsdXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IEludGVnZXJUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvaW50ZWdlclwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50NSB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgU2ZpeGVkMTZQMTYgfSBmcm9tIFwiLi4vZml4ZWQtcG9pbnQvc2ZpeGVkMTZwMTZcIjtcbmltcG9ydCB7ICRGaWx0ZXJUeXBlLCBGaWx0ZXJUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBCbHVyIHtcbiAgZmlsdGVyOiBGaWx0ZXJUeXBlLkJsdXI7XG4gIGJsdXJYOiBTZml4ZWQxNlAxNjtcbiAgYmx1clk6IFNmaXhlZDE2UDE2O1xuICBwYXNzZXM6IFVpbnQ1O1xufVxuXG5leHBvcnQgY29uc3QgJEJsdXI6IERvY3VtZW50SW9UeXBlPEJsdXI+ID0gbmV3IERvY3VtZW50VHlwZTxCbHVyPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBmaWx0ZXI6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRGaWx0ZXJUeXBlLCB2YWx1ZTogRmlsdGVyVHlwZS5CbHVyIGFzIEZpbHRlclR5cGUuQmx1cn0pfSxcbiAgICBibHVyWDoge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICBibHVyWToge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICBwYXNzZXM6IHt0eXBlOiBuZXcgSW50ZWdlclR5cGUoe21pbjogMCwgbWF4OiAzMX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst float64_1 = require(\"kryo/types/float64\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst _type_1 = require(\"./_type\");\nexports.$ColorMatrix = new document_1.DocumentType({\n    properties: {\n        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.ColorMatrix }) },\n        matrix: { type: new array_1.ArrayType({ itemType: new float64_1.Float64Type(), /* minLength: 20, */ maxLength: 20 }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9jb2xvci1tYXRyaXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQWlEO0FBRWpELG1DQUFrRDtBQU9yQyxRQUFBLFlBQVksR0FBZ0MsSUFBSSx1QkFBWSxDQUFjO0lBQ3JGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsbUJBQVcsRUFBRSxLQUFLLEVBQUUsa0JBQVUsQ0FBQyxXQUFxQyxFQUFDLENBQUMsRUFBQztRQUM3RyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLElBQUkscUJBQVcsRUFBRSxFQUFFLG9CQUFvQixDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUMsQ0FBQyxFQUFDO0tBQ2pHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZmlsdGVycy9jb2xvci1tYXRyaXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBGbG9hdDY0VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2Zsb2F0NjRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgRmxvYXQzMiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJEZpbHRlclR5cGUsIEZpbHRlclR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbG9yTWF0cml4IHtcbiAgZmlsdGVyOiBGaWx0ZXJUeXBlLkNvbG9yTWF0cml4O1xuICBtYXRyaXg6IEZsb2F0MzJbXTtcbn1cblxuZXhwb3J0IGNvbnN0ICRDb2xvck1hdHJpeDogRG9jdW1lbnRJb1R5cGU8Q29sb3JNYXRyaXg+ID0gbmV3IERvY3VtZW50VHlwZTxDb2xvck1hdHJpeD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgZmlsdGVyOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkRmlsdGVyVHlwZSwgdmFsdWU6IEZpbHRlclR5cGUuQ29sb3JNYXRyaXggYXMgRmlsdGVyVHlwZS5Db2xvck1hdHJpeH0pfSxcbiAgICBtYXRyaXg6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogbmV3IEZsb2F0NjRUeXBlKCksIC8qIG1pbkxlbmd0aDogMjAsICovIG1heExlbmd0aDogMjB9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"InvalidFloat64\";\nfunction format({ value, source }) {\n    return `Invalid float64: ${value}` + (source === undefined ? \"\" : `, from ${source}`);\n}\nexports.format = format;\nfunction createInvalidFloat64Error(value, source) {\n    return incident_1.Incident(exports.name, { value, source }, format);\n}\nexports.createInvalidFloat64Error = createInvalidFloat64Error;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2ludmFsaWQtZmxvYXQ2NC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFvQztBQUd2QixRQUFBLElBQUksR0FBUyxnQkFBZ0IsQ0FBQztBQVUzQyxTQUFnQixNQUFNLENBQUMsRUFBQyxLQUFLLEVBQUUsTUFBTSxFQUFPO0lBQzFDLE9BQU8sb0JBQW9CLEtBQUssRUFBRSxHQUFHLENBQUMsTUFBTSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxVQUFVLE1BQU0sRUFBRSxDQUFDLENBQUM7QUFDeEYsQ0FBQztBQUZELHdCQUVDO0FBRUQsU0FBZ0IseUJBQXlCLENBQUMsS0FBVSxFQUFFLE1BQVk7SUFDaEUsT0FBTyxtQkFBUSxDQUFDLFlBQUksRUFBRSxFQUFDLEtBQUssRUFBRSxNQUFNLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUNqRCxDQUFDO0FBRkQsOERBRUMiLCJmaWxlIjoiZXJyb3JzL2ludmFsaWQtZmxvYXQ2NC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluY2lkZW50IH0gZnJvbSBcImluY2lkZW50XCI7XG5cbmV4cG9ydCB0eXBlIE5hbWUgPSBcIkludmFsaWRGbG9hdDY0XCI7XG5leHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiSW52YWxpZEZsb2F0NjRcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEYXRhIHtcbiAgdmFsdWU6IGFueTtcbiAgc291cmNlPzogYW55O1xufVxuXG5leHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbmV4cG9ydCB0eXBlIEludmFsaWRGbG9hdDY0RXJyb3IgPSBJbmNpZGVudDxEYXRhLCBOYW1lLCBDYXVzZT47XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe3ZhbHVlLCBzb3VyY2V9OiBEYXRhKTogc3RyaW5nIHtcbiAgcmV0dXJuIGBJbnZhbGlkIGZsb2F0NjQ6ICR7dmFsdWV9YCArIChzb3VyY2UgPT09IHVuZGVmaW5lZCA/IFwiXCIgOiBgLCBmcm9tICR7c291cmNlfWApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSW52YWxpZEZsb2F0NjRFcnJvcih2YWx1ZTogYW55LCBzb3VyY2U/OiBhbnkpOiBJbnZhbGlkRmxvYXQ2NEVycm9yIHtcbiAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHt2YWx1ZSwgc291cmNlfSwgZm9ybWF0KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst float64_1 = require(\"kryo/types/float64\");\nconst integer_1 = require(\"kryo/types/integer\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst straight_s_rgba8_1 = require(\"../straight-s-rgba8\");\nconst _type_1 = require(\"./_type\");\nexports.$Convolution = new document_1.DocumentType({\n    properties: {\n        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.Convolution }) },\n        matrixWidth: { type: new integer_1.IntegerType() },\n        matrixHeight: { type: new integer_1.IntegerType() },\n        divisor: { type: new float64_1.Float64Type() },\n        bias: { type: new float64_1.Float64Type() },\n        matrix: { type: new array_1.ArrayType({ itemType: new float64_1.Float64Type(), /* minLength: 20, */ maxLength: 20 }) },\n        defaultColor: { type: straight_s_rgba8_1.$StraightSRgba8 },\n        clamp: { type: boolean_1.$Boolean },\n        preserveAlpha: { type: boolean_1.$Boolean },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9jb252b2x1dGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQWlEO0FBQ2pELGdEQUFpRDtBQUVqRCwwREFBc0U7QUFDdEUsbUNBQWtEO0FBY3JDLFFBQUEsWUFBWSxHQUFnQyxJQUFJLHVCQUFZLENBQWM7SUFDckYsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxtQkFBVyxFQUFFLEtBQUssRUFBRSxrQkFBVSxDQUFDLFdBQXFDLEVBQUMsQ0FBQyxFQUFDO1FBQzdHLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBQztRQUN0QyxZQUFZLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxFQUFFLEVBQUM7UUFDdkMsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsRUFBRSxFQUFDO1FBQ2xDLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBQztRQUMvQixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLElBQUkscUJBQVcsRUFBRSxFQUFFLG9CQUFvQixDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUMsQ0FBQyxFQUFDO1FBQ2hHLFlBQVksRUFBRSxFQUFDLElBQUksRUFBRSxrQ0FBZSxFQUFDO1FBQ3JDLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3ZCLGFBQWEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO0tBQ2hDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZmlsdGVycy9jb252b2x1dGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgRmxvYXQ2NFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9mbG9hdDY0XCI7XG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2ludGVnZXJcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgRmxvYXQzMiwgVWludFNpemUgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRTdHJhaWdodFNSZ2JhOCwgU3RyYWlnaHRTUmdiYTggfSBmcm9tIFwiLi4vc3RyYWlnaHQtcy1yZ2JhOFwiO1xuaW1wb3J0IHsgJEZpbHRlclR5cGUsIEZpbHRlclR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbnZvbHV0aW9uIHtcbiAgZmlsdGVyOiBGaWx0ZXJUeXBlLkNvbnZvbHV0aW9uO1xuICBtYXRyaXhXaWR0aDogVWludFNpemU7XG4gIG1hdHJpeEhlaWdodDogVWludFNpemU7XG4gIGRpdmlzb3I6IEZsb2F0MzI7XG4gIGJpYXM6IEZsb2F0MzI7XG4gIG1hdHJpeDogRmxvYXQzMltdO1xuICBkZWZhdWx0Q29sb3I6IFN0cmFpZ2h0U1JnYmE4O1xuICBjbGFtcDogYm9vbGVhbjtcbiAgcHJlc2VydmVBbHBoYTogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNvbnN0ICRDb252b2x1dGlvbjogRG9jdW1lbnRJb1R5cGU8Q29udm9sdXRpb24+ID0gbmV3IERvY3VtZW50VHlwZTxDb252b2x1dGlvbj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgZmlsdGVyOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkRmlsdGVyVHlwZSwgdmFsdWU6IEZpbHRlclR5cGUuQ29udm9sdXRpb24gYXMgRmlsdGVyVHlwZS5Db252b2x1dGlvbn0pfSxcbiAgICBtYXRyaXhXaWR0aDoge3R5cGU6IG5ldyBJbnRlZ2VyVHlwZSgpfSxcbiAgICBtYXRyaXhIZWlnaHQ6IHt0eXBlOiBuZXcgSW50ZWdlclR5cGUoKX0sXG4gICAgZGl2aXNvcjoge3R5cGU6IG5ldyBGbG9hdDY0VHlwZSgpfSxcbiAgICBiaWFzOiB7dHlwZTogbmV3IEZsb2F0NjRUeXBlKCl9LFxuICAgIG1hdHJpeDoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBuZXcgRmxvYXQ2NFR5cGUoKSwgLyogbWluTGVuZ3RoOiAyMCwgKi8gbWF4TGVuZ3RoOiAyMH0pfSxcbiAgICBkZWZhdWx0Q29sb3I6IHt0eXBlOiAkU3RyYWlnaHRTUmdiYTh9LFxuICAgIGNsYW1wOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHByZXNlcnZlQWxwaGE6IHt0eXBlOiAkQm9vbGVhbn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst integer_1 = require(\"kryo/types/integer\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst sfixed16p16_1 = require(\"../fixed-point/sfixed16p16\");\nconst sfixed8p8_1 = require(\"../fixed-point/sfixed8p8\");\nconst straight_s_rgba8_1 = require(\"../straight-s-rgba8\");\nconst _type_1 = require(\"./_type\");\nexports.$DropShadow = new document_1.DocumentType({\n    properties: {\n        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.DropShadow }) },\n        color: { type: straight_s_rgba8_1.$StraightSRgba8 },\n        blurX: { type: sfixed16p16_1.Sfixed16P16 },\n        blurY: { type: sfixed16p16_1.Sfixed16P16 },\n        angle: { type: sfixed16p16_1.Sfixed16P16 },\n        distance: { type: sfixed16p16_1.Sfixed16P16 },\n        strength: { type: sfixed8p8_1.Sfixed8P8 },\n        inner: { type: boolean_1.$Boolean },\n        knockout: { type: boolean_1.$Boolean },\n        compositeSource: { type: boolean_1.$Boolean },\n        passes: { type: new integer_1.IntegerType({ min: 0, max: 31 }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9kcm9wLXNoYWRvdy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBaUQ7QUFFakQsNERBQXlEO0FBQ3pELHdEQUFxRDtBQUNyRCwwREFBc0U7QUFDdEUsbUNBQWtEO0FBZ0JyQyxRQUFBLFdBQVcsR0FBK0IsSUFBSSx1QkFBWSxDQUFhO0lBQ2xGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsbUJBQVcsRUFBRSxLQUFLLEVBQUUsa0JBQVUsQ0FBQyxVQUFtQyxFQUFDLENBQUMsRUFBQztRQUMzRyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0NBQWUsRUFBQztRQUM5QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztRQUMxQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztRQUMxQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztRQUMxQixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztRQUM3QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBQztRQUMzQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN2QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixlQUFlLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUNqQyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFDLENBQUMsRUFBQztLQUNuRDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImZpbHRlcnMvZHJvcC1zaGFkb3cuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQm9vbGVhbiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2Jvb2xlYW5cIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgSW50ZWdlclR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9pbnRlZ2VyXCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQ1IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyBTZml4ZWQxNlAxNiB9IGZyb20gXCIuLi9maXhlZC1wb2ludC9zZml4ZWQxNnAxNlwiO1xuaW1wb3J0IHsgU2ZpeGVkOFA4IH0gZnJvbSBcIi4uL2ZpeGVkLXBvaW50L3NmaXhlZDhwOFwiO1xuaW1wb3J0IHsgJFN0cmFpZ2h0U1JnYmE4LCBTdHJhaWdodFNSZ2JhOCB9IGZyb20gXCIuLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5pbXBvcnQgeyAkRmlsdGVyVHlwZSwgRmlsdGVyVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRHJvcFNoYWRvdyB7XG4gIGZpbHRlcjogRmlsdGVyVHlwZS5Ecm9wU2hhZG93O1xuICBjb2xvcjogU3RyYWlnaHRTUmdiYTg7XG4gIGJsdXJYOiBTZml4ZWQxNlAxNjtcbiAgYmx1clk6IFNmaXhlZDE2UDE2O1xuICBhbmdsZTogU2ZpeGVkMTZQMTY7XG4gIGRpc3RhbmNlOiBTZml4ZWQxNlAxNjtcbiAgc3RyZW5ndGg6IFNmaXhlZDhQODtcbiAgaW5uZXI6IGJvb2xlYW47XG4gIGtub2Nrb3V0OiBib29sZWFuO1xuICBjb21wb3NpdGVTb3VyY2U6IGJvb2xlYW47XG4gIHBhc3NlczogVWludDU7XG59XG5cbmV4cG9ydCBjb25zdCAkRHJvcFNoYWRvdzogRG9jdW1lbnRJb1R5cGU8RHJvcFNoYWRvdz4gPSBuZXcgRG9jdW1lbnRUeXBlPERyb3BTaGFkb3c+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGZpbHRlcjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEZpbHRlclR5cGUsIHZhbHVlOiBGaWx0ZXJUeXBlLkRyb3BTaGFkb3cgYXMgRmlsdGVyVHlwZS5Ecm9wU2hhZG93fSl9LFxuICAgIGNvbG9yOiB7dHlwZTogJFN0cmFpZ2h0U1JnYmE4fSxcbiAgICBibHVyWDoge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICBibHVyWToge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICBhbmdsZToge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICBkaXN0YW5jZToge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICBzdHJlbmd0aDoge3R5cGU6IFNmaXhlZDhQOH0sXG4gICAgaW5uZXI6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAga25vY2tvdXQ6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgY29tcG9zaXRlU291cmNlOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHBhc3Nlczoge3R5cGU6IG5ldyBJbnRlZ2VyVHlwZSh7bWluOiAwLCBtYXg6IDMxfSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst integer_1 = require(\"kryo/types/integer\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst sfixed16p16_1 = require(\"../fixed-point/sfixed16p16\");\nconst sfixed8p8_1 = require(\"../fixed-point/sfixed8p8\");\nconst straight_s_rgba8_1 = require(\"../straight-s-rgba8\");\nconst _type_1 = require(\"./_type\");\nexports.$Glow = new document_1.DocumentType({\n    properties: {\n        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.Glow }) },\n        color: { type: straight_s_rgba8_1.$StraightSRgba8 },\n        blurX: { type: sfixed16p16_1.Sfixed16P16 },\n        blurY: { type: sfixed16p16_1.Sfixed16P16 },\n        strength: { type: sfixed8p8_1.Sfixed8P8 },\n        inner: { type: boolean_1.$Boolean },\n        knockout: { type: boolean_1.$Boolean },\n        compositeSource: { type: boolean_1.$Boolean },\n        passes: { type: new integer_1.IntegerType({ min: 0, max: 31 }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9nbG93LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUFpRDtBQUVqRCw0REFBeUQ7QUFDekQsd0RBQXFEO0FBQ3JELDBEQUFzRTtBQUN0RSxtQ0FBa0Q7QUFjckMsUUFBQSxLQUFLLEdBQXlCLElBQUksdUJBQVksQ0FBTztJQUNoRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLG1CQUFXLEVBQUUsS0FBSyxFQUFFLGtCQUFVLENBQUMsSUFBdUIsRUFBQyxDQUFDLEVBQUM7UUFDL0YsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtDQUFlLEVBQUM7UUFDOUIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUM7UUFDMUIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUM7UUFDMUIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLHFCQUFTLEVBQUM7UUFDM0IsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDdkIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDMUIsZUFBZSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDakMsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBQyxDQUFDLEVBQUM7S0FDbkQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJmaWx0ZXJzL2dsb3cuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQm9vbGVhbiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2Jvb2xlYW5cIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgSW50ZWdlclR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9pbnRlZ2VyXCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQ1IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyBTZml4ZWQxNlAxNiB9IGZyb20gXCIuLi9maXhlZC1wb2ludC9zZml4ZWQxNnAxNlwiO1xuaW1wb3J0IHsgU2ZpeGVkOFA4IH0gZnJvbSBcIi4uL2ZpeGVkLXBvaW50L3NmaXhlZDhwOFwiO1xuaW1wb3J0IHsgJFN0cmFpZ2h0U1JnYmE4LCBTdHJhaWdodFNSZ2JhOCB9IGZyb20gXCIuLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5pbXBvcnQgeyAkRmlsdGVyVHlwZSwgRmlsdGVyVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR2xvdyB7XG4gIGZpbHRlcjogRmlsdGVyVHlwZS5HbG93O1xuICBjb2xvcjogU3RyYWlnaHRTUmdiYTg7XG4gIGJsdXJYOiBTZml4ZWQxNlAxNjtcbiAgYmx1clk6IFNmaXhlZDE2UDE2O1xuICBzdHJlbmd0aDogU2ZpeGVkOFA4O1xuICBpbm5lcjogYm9vbGVhbjtcbiAga25vY2tvdXQ6IGJvb2xlYW47XG4gIGNvbXBvc2l0ZVNvdXJjZTogYm9vbGVhbjtcbiAgcGFzc2VzOiBVaW50NTtcbn1cblxuZXhwb3J0IGNvbnN0ICRHbG93OiBEb2N1bWVudElvVHlwZTxHbG93PiA9IG5ldyBEb2N1bWVudFR5cGU8R2xvdz4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgZmlsdGVyOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkRmlsdGVyVHlwZSwgdmFsdWU6IEZpbHRlclR5cGUuR2xvdyBhcyBGaWx0ZXJUeXBlLkdsb3d9KX0sXG4gICAgY29sb3I6IHt0eXBlOiAkU3RyYWlnaHRTUmdiYTh9LFxuICAgIGJsdXJYOiB7dHlwZTogU2ZpeGVkMTZQMTZ9LFxuICAgIGJsdXJZOiB7dHlwZTogU2ZpeGVkMTZQMTZ9LFxuICAgIHN0cmVuZ3RoOiB7dHlwZTogU2ZpeGVkOFA4fSxcbiAgICBpbm5lcjoge3R5cGU6ICRCb29sZWFufSxcbiAgICBrbm9ja291dDoge3R5cGU6ICRCb29sZWFufSxcbiAgICBjb21wb3NpdGVTb3VyY2U6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgcGFzc2VzOiB7dHlwZTogbmV3IEludGVnZXJUeXBlKHttaW46IDAsIG1heDogMzF9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst integer_1 = require(\"kryo/types/integer\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst color_stop_1 = require(\"../color-stop\");\nconst sfixed16p16_1 = require(\"../fixed-point/sfixed16p16\");\nconst sfixed8p8_1 = require(\"../fixed-point/sfixed8p8\");\nconst _type_1 = require(\"./_type\");\nexports.$GradientBevel = new document_1.DocumentType({\n    properties: {\n        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.GradientBevel }) },\n        gradient: { type: new array_1.ArrayType({ itemType: color_stop_1.$ColorStop, maxLength: Infinity }) },\n        blurX: { type: sfixed16p16_1.Sfixed16P16 },\n        blurY: { type: sfixed16p16_1.Sfixed16P16 },\n        angle: { type: sfixed16p16_1.Sfixed16P16 },\n        distance: { type: sfixed16p16_1.Sfixed16P16 },\n        strength: { type: sfixed8p8_1.Sfixed8P8 },\n        inner: { type: boolean_1.$Boolean },\n        knockout: { type: boolean_1.$Boolean },\n        compositeSource: { type: boolean_1.$Boolean },\n        onTop: { type: boolean_1.$Boolean },\n        passes: { type: new integer_1.IntegerType({ min: 0, max: 15 }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9ncmFkaWVudC1iZXZlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxnREFBNEM7QUFFNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQWlEO0FBRWpELDhDQUFzRDtBQUN0RCw0REFBeUQ7QUFDekQsd0RBQXFEO0FBQ3JELG1DQUFrRDtBQWlCckMsUUFBQSxjQUFjLEdBQWtDLElBQUksdUJBQVksQ0FBZ0I7SUFDM0YsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxtQkFBVyxFQUFFLEtBQUssRUFBRSxrQkFBVSxDQUFDLGFBQXlDLEVBQUMsQ0FBQyxFQUFDO1FBQ2pILFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsdUJBQVUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUM1RSxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztRQUMxQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztRQUMxQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztRQUMxQixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztRQUM3QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBQztRQUMzQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN2QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixlQUFlLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUNqQyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN2QixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFDLENBQWtCLEVBQUM7S0FDcEU7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJmaWx0ZXJzL2dyYWRpZW50LWJldmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBJb1R5cGUgfSBmcm9tIFwia3J5by9jb3JlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2ludGVnZXJcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDQgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRDb2xvclN0b3AsIENvbG9yU3RvcCB9IGZyb20gXCIuLi9jb2xvci1zdG9wXCI7XG5pbXBvcnQgeyBTZml4ZWQxNlAxNiB9IGZyb20gXCIuLi9maXhlZC1wb2ludC9zZml4ZWQxNnAxNlwiO1xuaW1wb3J0IHsgU2ZpeGVkOFA4IH0gZnJvbSBcIi4uL2ZpeGVkLXBvaW50L3NmaXhlZDhwOFwiO1xuaW1wb3J0IHsgJEZpbHRlclR5cGUsIEZpbHRlclR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdyYWRpZW50QmV2ZWwge1xuICBmaWx0ZXI6IEZpbHRlclR5cGUuR3JhZGllbnRCZXZlbDtcbiAgZ3JhZGllbnQ6IENvbG9yU3RvcFtdO1xuICBibHVyWDogU2ZpeGVkMTZQMTY7XG4gIGJsdXJZOiBTZml4ZWQxNlAxNjtcbiAgYW5nbGU6IFNmaXhlZDE2UDE2O1xuICBkaXN0YW5jZTogU2ZpeGVkMTZQMTY7XG4gIHN0cmVuZ3RoOiBTZml4ZWQ4UDg7XG4gIGlubmVyOiBib29sZWFuO1xuICBrbm9ja291dDogYm9vbGVhbjtcbiAgY29tcG9zaXRlU291cmNlOiBib29sZWFuO1xuICBvblRvcDogYm9vbGVhbjtcbiAgcGFzc2VzOiBVaW50NDtcbn1cblxuZXhwb3J0IGNvbnN0ICRHcmFkaWVudEJldmVsOiBEb2N1bWVudElvVHlwZTxHcmFkaWVudEJldmVsPiA9IG5ldyBEb2N1bWVudFR5cGU8R3JhZGllbnRCZXZlbD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgZmlsdGVyOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkRmlsdGVyVHlwZSwgdmFsdWU6IEZpbHRlclR5cGUuR3JhZGllbnRCZXZlbCBhcyBGaWx0ZXJUeXBlLkdyYWRpZW50QmV2ZWx9KX0sXG4gICAgZ3JhZGllbnQ6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJENvbG9yU3RvcCwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBibHVyWDoge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICBibHVyWToge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICBhbmdsZToge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICBkaXN0YW5jZToge3R5cGU6IFNmaXhlZDE2UDE2fSxcbiAgICBzdHJlbmd0aDoge3R5cGU6IFNmaXhlZDhQOH0sXG4gICAgaW5uZXI6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAga25vY2tvdXQ6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgY29tcG9zaXRlU291cmNlOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIG9uVG9wOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHBhc3Nlczoge3R5cGU6IG5ldyBJbnRlZ2VyVHlwZSh7bWluOiAwLCBtYXg6IDE1fSkgYXMgSW9UeXBlPFVpbnQ0Pn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst integer_1 = require(\"kryo/types/integer\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst color_stop_1 = require(\"../color-stop\");\nconst sfixed16p16_1 = require(\"../fixed-point/sfixed16p16\");\nconst sfixed8p8_1 = require(\"../fixed-point/sfixed8p8\");\nconst _type_1 = require(\"./_type\");\nexports.$GradientGlow = new document_1.DocumentType({\n    properties: {\n        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.GradientGlow }) },\n        gradient: { type: new array_1.ArrayType({ itemType: color_stop_1.$ColorStop, maxLength: Infinity }) },\n        blurX: { type: sfixed16p16_1.Sfixed16P16 },\n        blurY: { type: sfixed16p16_1.Sfixed16P16 },\n        angle: { type: sfixed16p16_1.Sfixed16P16 },\n        distance: { type: sfixed16p16_1.Sfixed16P16 },\n        strength: { type: sfixed8p8_1.Sfixed8P8 },\n        inner: { type: boolean_1.$Boolean },\n        knockout: { type: boolean_1.$Boolean },\n        compositeSource: { type: boolean_1.$Boolean },\n        onTop: { type: boolean_1.$Boolean },\n        passes: { type: new integer_1.IntegerType({ min: 0, max: 15 }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9ncmFkaWVudC1nbG93LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGdEQUE0QztBQUU1Qyw0Q0FBNkM7QUFDN0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBaUQ7QUFFakQsOENBQXNEO0FBQ3RELDREQUF5RDtBQUN6RCx3REFBcUQ7QUFDckQsbUNBQWtEO0FBaUJyQyxRQUFBLGFBQWEsR0FBaUMsSUFBSSx1QkFBWSxDQUFlO0lBQ3hGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsbUJBQVcsRUFBRSxLQUFLLEVBQUUsa0JBQVUsQ0FBQyxZQUF1QyxFQUFDLENBQUMsRUFBQztRQUMvRyxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLHVCQUFVLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7UUFDNUUsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUM7UUFDMUIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUM7UUFDMUIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUM7UUFDMUIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUM7UUFDN0IsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLHFCQUFTLEVBQUM7UUFDM0IsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDdkIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDMUIsZUFBZSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDakMsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDdkIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBQyxDQUFrQixFQUFDO0tBQ3BFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZmlsdGVycy9ncmFkaWVudC1nbG93LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBJb1R5cGUgfSBmcm9tIFwia3J5by9jb3JlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2ludGVnZXJcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDQgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRDb2xvclN0b3AsIENvbG9yU3RvcCB9IGZyb20gXCIuLi9jb2xvci1zdG9wXCI7XG5pbXBvcnQgeyBTZml4ZWQxNlAxNiB9IGZyb20gXCIuLi9maXhlZC1wb2ludC9zZml4ZWQxNnAxNlwiO1xuaW1wb3J0IHsgU2ZpeGVkOFA4IH0gZnJvbSBcIi4uL2ZpeGVkLXBvaW50L3NmaXhlZDhwOFwiO1xuaW1wb3J0IHsgJEZpbHRlclR5cGUsIEZpbHRlclR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdyYWRpZW50R2xvdyB7XG4gIGZpbHRlcjogRmlsdGVyVHlwZS5HcmFkaWVudEdsb3c7XG4gIGdyYWRpZW50OiBDb2xvclN0b3BbXTtcbiAgYmx1clg6IFNmaXhlZDE2UDE2O1xuICBibHVyWTogU2ZpeGVkMTZQMTY7XG4gIGFuZ2xlOiBTZml4ZWQxNlAxNjtcbiAgZGlzdGFuY2U6IFNmaXhlZDE2UDE2O1xuICBzdHJlbmd0aDogU2ZpeGVkOFA4O1xuICBpbm5lcjogYm9vbGVhbjtcbiAga25vY2tvdXQ6IGJvb2xlYW47XG4gIGNvbXBvc2l0ZVNvdXJjZTogYm9vbGVhbjtcbiAgb25Ub3A6IGJvb2xlYW47XG4gIHBhc3NlczogVWludDQ7XG59XG5cbmV4cG9ydCBjb25zdCAkR3JhZGllbnRHbG93OiBEb2N1bWVudElvVHlwZTxHcmFkaWVudEdsb3c+ID0gbmV3IERvY3VtZW50VHlwZTxHcmFkaWVudEdsb3c+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGZpbHRlcjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEZpbHRlclR5cGUsIHZhbHVlOiBGaWx0ZXJUeXBlLkdyYWRpZW50R2xvdyBhcyBGaWx0ZXJUeXBlLkdyYWRpZW50R2xvd30pfSxcbiAgICBncmFkaWVudDoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkQ29sb3JTdG9wLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIGJsdXJYOiB7dHlwZTogU2ZpeGVkMTZQMTZ9LFxuICAgIGJsdXJZOiB7dHlwZTogU2ZpeGVkMTZQMTZ9LFxuICAgIGFuZ2xlOiB7dHlwZTogU2ZpeGVkMTZQMTZ9LFxuICAgIGRpc3RhbmNlOiB7dHlwZTogU2ZpeGVkMTZQMTZ9LFxuICAgIHN0cmVuZ3RoOiB7dHlwZTogU2ZpeGVkOFA4fSxcbiAgICBpbm5lcjoge3R5cGU6ICRCb29sZWFufSxcbiAgICBrbm9ja291dDoge3R5cGU6ICRCb29sZWFufSxcbiAgICBjb21wb3NpdGVTb3VyY2U6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgb25Ub3A6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgcGFzc2VzOiB7dHlwZTogbmV3IEludGVnZXJUeXBlKHttaW46IDAsIG1heDogMTV9KSBhcyBJb1R5cGU8VWludDQ+fSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst _type_1 = require(\"./_type\");\nexports.$Bevel = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$JoinStyleType, value: _type_1.JoinStyleType.Bevel }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvam9pbi1zdHlsZXMvYmV2ZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxtQ0FBd0Q7QUFNM0MsUUFBQSxNQUFNLEdBQTBCLElBQUksdUJBQVksQ0FBUTtJQUNuRSxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHNCQUFjLEVBQUUsS0FBSyxFQUFFLHFCQUFhLENBQUMsS0FBNEIsRUFBQyxDQUFDLEVBQUM7S0FDekc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJqb2luLXN0eWxlcy9iZXZlbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkSm9pblN0eWxlVHlwZSwgSm9pblN0eWxlVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmV2ZWwge1xuICB0eXBlOiBKb2luU3R5bGVUeXBlLkJldmVsO1xufVxuXG5leHBvcnQgY29uc3QgJEJldmVsOiBEb2N1bWVudElvVHlwZTxCZXZlbD4gPSBuZXcgRG9jdW1lbnRUeXBlPEJldmVsPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkSm9pblN0eWxlVHlwZSwgdmFsdWU6IEpvaW5TdHlsZVR5cGUuQmV2ZWwgYXMgSm9pblN0eWxlVHlwZS5CZXZlbH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst sfixed8p8_1 = require(\"../fixed-point/sfixed8p8\");\nconst _type_1 = require(\"./_type\");\nexports.$Miter = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$JoinStyleType, value: _type_1.JoinStyleType.Miter }) },\n        limit: { type: sfixed8p8_1.Sfixed8P8 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvam9pbi1zdHlsZXMvbWl0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBcUQ7QUFDckQsbUNBQXdEO0FBTzNDLFFBQUEsTUFBTSxHQUEwQixJQUFJLHVCQUFZLENBQVE7SUFDbkUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxzQkFBYyxFQUFFLEtBQUssRUFBRSxxQkFBYSxDQUFDLEtBQTRCLEVBQUMsQ0FBQyxFQUFDO1FBQ3hHLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxxQkFBUyxFQUFDO0tBQ3pCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiam9pbi1zdHlsZXMvbWl0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgU2ZpeGVkOFA4IH0gZnJvbSBcIi4uL2ZpeGVkLXBvaW50L3NmaXhlZDhwOFwiO1xuaW1wb3J0IHsgJEpvaW5TdHlsZVR5cGUsIEpvaW5TdHlsZVR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1pdGVyIHtcbiAgdHlwZTogSm9pblN0eWxlVHlwZS5NaXRlcjtcbiAgbGltaXQ6IFNmaXhlZDhQODtcbn1cblxuZXhwb3J0IGNvbnN0ICRNaXRlcjogRG9jdW1lbnRJb1R5cGU8TWl0ZXI+ID0gbmV3IERvY3VtZW50VHlwZTxNaXRlcj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEpvaW5TdHlsZVR5cGUsIHZhbHVlOiBKb2luU3R5bGVUeXBlLk1pdGVyIGFzIEpvaW5TdHlsZVR5cGUuTWl0ZXJ9KX0sXG4gICAgbGltaXQ6IHt0eXBlOiBTZml4ZWQ4UDh9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst _type_1 = require(\"./_type\");\nexports.$Round = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$JoinStyleType, value: _type_1.JoinStyleType.Round }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvam9pbi1zdHlsZXMvcm91bmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxtQ0FBd0Q7QUFNM0MsUUFBQSxNQUFNLEdBQTBCLElBQUksdUJBQVksQ0FBUTtJQUNuRSxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHNCQUFjLEVBQUUsS0FBSyxFQUFFLHFCQUFhLENBQUMsS0FBNEIsRUFBQyxDQUFDLEVBQUM7S0FDekc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJqb2luLXN0eWxlcy9yb3VuZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkSm9pblN0eWxlVHlwZSwgSm9pblN0eWxlVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUm91bmQge1xuICB0eXBlOiBKb2luU3R5bGVUeXBlLlJvdW5kO1xufVxuXG5leHBvcnQgY29uc3QgJFJvdW5kOiBEb2N1bWVudElvVHlwZTxSb3VuZD4gPSBuZXcgRG9jdW1lbnRUeXBlPFJvdW5kPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkSm9pblN0eWxlVHlwZSwgdmFsdWU6IEpvaW5TdHlsZVR5cGUuUm91bmQgYXMgSm9pblN0eWxlVHlwZS5Sb3VuZH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst vector_2d_1 = require(\"../vector-2d\");\nconst curved_edge_1 = require(\"./curved-edge\");\nexports.$MorphCurvedEdge = new document_1.DocumentType({\n    properties: {\n        type: curved_edge_1.$CurvedEdge.properties.type,\n        controlDelta: curved_edge_1.$CurvedEdge.properties.controlDelta,\n        morphControlDelta: { type: vector_2d_1.$Vector2D },\n        anchorDelta: curved_edge_1.$CurvedEdge.properties.anchorDelta,\n        morphAnchorDelta: { type: vector_2d_1.$Vector2D },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3Jkcy9tb3JwaC1jdXJ2ZWQtZWRnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsNENBQW1EO0FBQ25ELCtDQUF3RDtBQU8zQyxRQUFBLGdCQUFnQixHQUFvQyxJQUFJLHVCQUFZLENBQWtCO0lBQ2pHLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSx5QkFBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJO1FBQ2pDLFlBQVksRUFBRSx5QkFBVyxDQUFDLFVBQVUsQ0FBQyxZQUFZO1FBQ2pELGlCQUFpQixFQUFFLEVBQUMsSUFBSSxFQUFFLHFCQUFTLEVBQUM7UUFDcEMsV0FBVyxFQUFFLHlCQUFXLENBQUMsVUFBVSxDQUFDLFdBQVc7UUFDL0MsZ0JBQWdCLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBQztLQUNwQztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InNoYXBlLXJlY29yZHMvbW9ycGgtY3VydmVkLWVkZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7ICRWZWN0b3IyRCwgVmVjdG9yMkQgfSBmcm9tIFwiLi4vdmVjdG9yLTJkXCI7XG5pbXBvcnQgeyAkQ3VydmVkRWRnZSwgQ3VydmVkRWRnZSB9IGZyb20gXCIuL2N1cnZlZC1lZGdlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTW9ycGhDdXJ2ZWRFZGdlIGV4dGVuZHMgQ3VydmVkRWRnZSB7XG4gIG1vcnBoQ29udHJvbERlbHRhOiBWZWN0b3IyRDtcbiAgbW9ycGhBbmNob3JEZWx0YTogVmVjdG9yMkQ7XG59XG5cbmV4cG9ydCBjb25zdCAkTW9ycGhDdXJ2ZWRFZGdlOiBEb2N1bWVudElvVHlwZTxNb3JwaEN1cnZlZEVkZ2U+ID0gbmV3IERvY3VtZW50VHlwZTxNb3JwaEN1cnZlZEVkZ2U+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6ICRDdXJ2ZWRFZGdlLnByb3BlcnRpZXMudHlwZSxcbiAgICBjb250cm9sRGVsdGE6ICRDdXJ2ZWRFZGdlLnByb3BlcnRpZXMuY29udHJvbERlbHRhLFxuICAgIG1vcnBoQ29udHJvbERlbHRhOiB7dHlwZTogJFZlY3RvcjJEfSxcbiAgICBhbmNob3JEZWx0YTogJEN1cnZlZEVkZ2UucHJvcGVydGllcy5hbmNob3JEZWx0YSxcbiAgICBtb3JwaEFuY2hvckRlbHRhOiB7dHlwZTogJFZlY3RvcjJEfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst vector_2d_1 = require(\"../vector-2d\");\nconst straight_edge_1 = require(\"./straight-edge\");\nexports.$MorphStraightEdge = new document_1.DocumentType({\n    properties: {\n        type: straight_edge_1.$StraightEdge.properties.type,\n        delta: straight_edge_1.$StraightEdge.properties.delta,\n        morphDelta: { type: vector_2d_1.$Vector2D },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3Jkcy9tb3JwaC1zdHJhaWdodC1lZGdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSw0Q0FBbUQ7QUFDbkQsbURBQThEO0FBTWpELFFBQUEsa0JBQWtCLEdBQXNDLElBQUksdUJBQVksQ0FBb0I7SUFDdkcsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLDZCQUFhLENBQUMsVUFBVSxDQUFDLElBQUk7UUFDbkMsS0FBSyxFQUFFLDZCQUFhLENBQUMsVUFBVSxDQUFDLEtBQUs7UUFDckMsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLHFCQUFTLEVBQUM7S0FDOUI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJzaGFwZS1yZWNvcmRzL21vcnBoLXN0cmFpZ2h0LWVkZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7ICRWZWN0b3IyRCwgVmVjdG9yMkQgfSBmcm9tIFwiLi4vdmVjdG9yLTJkXCI7XG5pbXBvcnQgeyAkU3RyYWlnaHRFZGdlLCBTdHJhaWdodEVkZ2UgfSBmcm9tIFwiLi9zdHJhaWdodC1lZGdlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTW9ycGhTdHJhaWdodEVkZ2UgZXh0ZW5kcyBTdHJhaWdodEVkZ2Uge1xuICBtb3JwaERlbHRhOiBWZWN0b3IyRDtcbn1cblxuZXhwb3J0IGNvbnN0ICRNb3JwaFN0cmFpZ2h0RWRnZTogRG9jdW1lbnRJb1R5cGU8TW9ycGhTdHJhaWdodEVkZ2U+ID0gbmV3IERvY3VtZW50VHlwZTxNb3JwaFN0cmFpZ2h0RWRnZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZTogJFN0cmFpZ2h0RWRnZS5wcm9wZXJ0aWVzLnR5cGUsXG4gICAgZGVsdGE6ICRTdHJhaWdodEVkZ2UucHJvcGVydGllcy5kZWx0YSxcbiAgICBtb3JwaERlbHRhOiB7dHlwZTogJFZlY3RvcjJEfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst morph_shape_styles_1 = require(\"../morph-shape-styles\");\nconst vector_2d_1 = require(\"../vector-2d\");\nconst style_change_1 = require(\"./style-change\");\nexports.$MorphStyleChange = new document_1.DocumentType({\n    properties: {\n        type: style_change_1.$StyleChange.properties.type,\n        moveTo: style_change_1.$StyleChange.properties.moveTo,\n        morphMoveTo: { type: vector_2d_1.$Vector2D, optional: true },\n        leftFill: style_change_1.$StyleChange.properties.leftFill,\n        rightFill: style_change_1.$StyleChange.properties.rightFill,\n        lineStyle: style_change_1.$StyleChange.properties.lineStyle,\n        newStyles: { type: morph_shape_styles_1.$MorphShapeStyles, optional: true },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3Jkcy9tb3JwaC1zdHlsZS1jaGFuZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLDhEQUE0RTtBQUM1RSw0Q0FBbUQ7QUFDbkQsaURBQTJEO0FBTzlDLFFBQUEsaUJBQWlCLEdBQXFDLElBQUksdUJBQVksQ0FBbUI7SUFDcEcsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLDJCQUFZLENBQUMsVUFBVSxDQUFDLElBQUk7UUFDbEMsTUFBTSxFQUFFLDJCQUFZLENBQUMsVUFBVSxDQUFDLE1BQU07UUFDdEMsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLHFCQUFTLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUM5QyxRQUFRLEVBQUUsMkJBQVksQ0FBQyxVQUFVLENBQUMsUUFBUTtRQUMxQyxTQUFTLEVBQUUsMkJBQVksQ0FBQyxVQUFVLENBQUMsU0FBUztRQUM1QyxTQUFTLEVBQUUsMkJBQVksQ0FBQyxVQUFVLENBQUMsU0FBUztRQUM1QyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsc0NBQWlCLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztLQUNyRDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InNoYXBlLXJlY29yZHMvbW9ycGgtc3R5bGUtY2hhbmdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyAkTW9ycGhTaGFwZVN0eWxlcywgTW9ycGhTaGFwZVN0eWxlcyB9IGZyb20gXCIuLi9tb3JwaC1zaGFwZS1zdHlsZXNcIjtcbmltcG9ydCB7ICRWZWN0b3IyRCwgVmVjdG9yMkQgfSBmcm9tIFwiLi4vdmVjdG9yLTJkXCI7XG5pbXBvcnQgeyAkU3R5bGVDaGFuZ2UsIFN0eWxlQ2hhbmdlIH0gZnJvbSBcIi4vc3R5bGUtY2hhbmdlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTW9ycGhTdHlsZUNoYW5nZSBleHRlbmRzIFN0eWxlQ2hhbmdlIHtcbiAgbW9ycGhNb3ZlVG8/OiBWZWN0b3IyRDtcbiAgbmV3U3R5bGVzPzogTW9ycGhTaGFwZVN0eWxlcztcbn1cblxuZXhwb3J0IGNvbnN0ICRNb3JwaFN0eWxlQ2hhbmdlOiBEb2N1bWVudElvVHlwZTxNb3JwaFN0eWxlQ2hhbmdlPiA9IG5ldyBEb2N1bWVudFR5cGU8TW9ycGhTdHlsZUNoYW5nZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZTogJFN0eWxlQ2hhbmdlLnByb3BlcnRpZXMudHlwZSxcbiAgICBtb3ZlVG86ICRTdHlsZUNoYW5nZS5wcm9wZXJ0aWVzLm1vdmVUbyxcbiAgICBtb3JwaE1vdmVUbzoge3R5cGU6ICRWZWN0b3IyRCwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGxlZnRGaWxsOiAkU3R5bGVDaGFuZ2UucHJvcGVydGllcy5sZWZ0RmlsbCxcbiAgICByaWdodEZpbGw6ICRTdHlsZUNoYW5nZS5wcm9wZXJ0aWVzLnJpZ2h0RmlsbCxcbiAgICBsaW5lU3R5bGU6ICRTdHlsZUNoYW5nZS5wcm9wZXJ0aWVzLmxpbmVTdHlsZSxcbiAgICBuZXdTdHlsZXM6IHt0eXBlOiAkTW9ycGhTaGFwZVN0eWxlcywgb3B0aW9uYWw6IHRydWV9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst line_style_1 = require(\"./line-style\");\nconst morph_fill_style_1 = require(\"./morph-fill-style\");\nexports.$MorphLineStyle = new document_1.DocumentType({\n    properties: {\n        width: line_style_1.$LineStyle.properties.width,\n        morphWidth: { type: uint16_1.$Uint16 },\n        startCap: line_style_1.$LineStyle.properties.startCap,\n        endCap: line_style_1.$LineStyle.properties.endCap,\n        join: line_style_1.$LineStyle.properties.join,\n        noHScale: line_style_1.$LineStyle.properties.noHScale,\n        noVScale: line_style_1.$LineStyle.properties.noVScale,\n        noClose: line_style_1.$LineStyle.properties.noClose,\n        pixelHinting: line_style_1.$LineStyle.properties.pixelHinting,\n        fill: { type: morph_fill_style_1.$MorphFillStyle },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtbGluZS1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBRW5FLDZDQUFxRDtBQUNyRCx5REFBcUU7QUFPeEQsUUFBQSxlQUFlLEdBQW1DLElBQUksdUJBQVksQ0FBaUI7SUFDOUYsVUFBVSxFQUFFO1FBQ1YsS0FBSyxFQUFFLHVCQUFVLENBQUMsVUFBVSxDQUFDLEtBQUs7UUFDbEMsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDM0IsUUFBUSxFQUFFLHVCQUFVLENBQUMsVUFBVSxDQUFDLFFBQVE7UUFDeEMsTUFBTSxFQUFFLHVCQUFVLENBQUMsVUFBVSxDQUFDLE1BQU07UUFDcEMsSUFBSSxFQUFFLHVCQUFVLENBQUMsVUFBVSxDQUFDLElBQUk7UUFDaEMsUUFBUSxFQUFFLHVCQUFVLENBQUMsVUFBVSxDQUFDLFFBQVE7UUFDeEMsUUFBUSxFQUFFLHVCQUFVLENBQUMsVUFBVSxDQUFDLFFBQVE7UUFDeEMsT0FBTyxFQUFFLHVCQUFVLENBQUMsVUFBVSxDQUFDLE9BQU87UUFDdEMsWUFBWSxFQUFFLHVCQUFVLENBQUMsVUFBVSxDQUFDLFlBQVk7UUFDaEQsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtDQUFlLEVBQUM7S0FDOUI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJtb3JwaC1saW5lLXN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRMaW5lU3R5bGUsIExpbmVTdHlsZSB9IGZyb20gXCIuL2xpbmUtc3R5bGVcIjtcbmltcG9ydCB7ICRNb3JwaEZpbGxTdHlsZSwgTW9ycGhGaWxsU3R5bGUgfSBmcm9tIFwiLi9tb3JwaC1maWxsLXN0eWxlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTW9ycGhMaW5lU3R5bGUgZXh0ZW5kcyBMaW5lU3R5bGUge1xuICBtb3JwaFdpZHRoOiBVaW50MTY7XG4gIGZpbGw6IE1vcnBoRmlsbFN0eWxlO1xufVxuXG5leHBvcnQgY29uc3QgJE1vcnBoTGluZVN0eWxlOiBEb2N1bWVudElvVHlwZTxNb3JwaExpbmVTdHlsZT4gPSBuZXcgRG9jdW1lbnRUeXBlPE1vcnBoTGluZVN0eWxlPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB3aWR0aDogJExpbmVTdHlsZS5wcm9wZXJ0aWVzLndpZHRoLFxuICAgIG1vcnBoV2lkdGg6IHt0eXBlOiAkVWludDE2fSxcbiAgICBzdGFydENhcDogJExpbmVTdHlsZS5wcm9wZXJ0aWVzLnN0YXJ0Q2FwLFxuICAgIGVuZENhcDogJExpbmVTdHlsZS5wcm9wZXJ0aWVzLmVuZENhcCxcbiAgICBqb2luOiAkTGluZVN0eWxlLnByb3BlcnRpZXMuam9pbixcbiAgICBub0hTY2FsZTogJExpbmVTdHlsZS5wcm9wZXJ0aWVzLm5vSFNjYWxlLFxuICAgIG5vVlNjYWxlOiAkTGluZVN0eWxlLnByb3BlcnRpZXMubm9WU2NhbGUsXG4gICAgbm9DbG9zZTogJExpbmVTdHlsZS5wcm9wZXJ0aWVzLm5vQ2xvc2UsXG4gICAgcGl4ZWxIaW50aW5nOiAkTGluZVN0eWxlLnByb3BlcnRpZXMucGl4ZWxIaW50aW5nLFxuICAgIGZpbGw6IHt0eXBlOiAkTW9ycGhGaWxsU3R5bGV9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tagged_union_1 = require(\"kryo/types/tagged-union\");\nconst joinStyles = __importStar(require(\"./join-styles/index\"));\nexports.$JoinStyle = new tagged_union_1.TaggedUnionType({\n    variants: [\n        joinStyles.$Bevel,\n        joinStyles.$Miter,\n        joinStyles.$Round,\n    ],\n    tag: \"type\",\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvam9pbi1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSwwREFBMEQ7QUFDMUQsZ0VBQWtEO0FBT3JDLFFBQUEsVUFBVSxHQUErQixJQUFJLDhCQUFlLENBQVk7SUFDbkYsUUFBUSxFQUFFO1FBQ1IsVUFBVSxDQUFDLE1BQU07UUFDakIsVUFBVSxDQUFDLE1BQU07UUFDakIsVUFBVSxDQUFDLE1BQU07S0FDbEI7SUFDRCxHQUFHLEVBQUUsTUFBTTtDQUNaLENBQUMsQ0FBQyIsImZpbGUiOiJqb2luLXN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGFnZ2VkVW5pb25UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdGFnZ2VkLXVuaW9uXCI7XG5pbXBvcnQgKiBhcyBqb2luU3R5bGVzIGZyb20gXCIuL2pvaW4tc3R5bGVzL2luZGV4XCI7XG5cbmV4cG9ydCB0eXBlIEpvaW5TdHlsZSA9XG4gIGpvaW5TdHlsZXMuQmV2ZWxcbiAgfCBqb2luU3R5bGVzLk1pdGVyXG4gIHwgam9pblN0eWxlcy5Sb3VuZDtcblxuZXhwb3J0IGNvbnN0ICRKb2luU3R5bGU6IFRhZ2dlZFVuaW9uVHlwZTxKb2luU3R5bGU+ID0gbmV3IFRhZ2dlZFVuaW9uVHlwZTxKb2luU3R5bGU+KHtcbiAgdmFyaWFudHM6IFtcbiAgICBqb2luU3R5bGVzLiRCZXZlbCxcbiAgICBqb2luU3R5bGVzLiRNaXRlcixcbiAgICBqb2luU3R5bGVzLiRSb3VuZCxcbiAgXSxcbiAgdGFnOiBcInR5cGVcIixcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst float64_1 = require(\"kryo/types/float64\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst grid_fitting_1 = require(\"../text/grid-fitting\");\nconst text_renderer_1 = require(\"../text/text-renderer\");\nconst _type_1 = require(\"./_type\");\nexports.$CsmTextSettings = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.CsmTextSettings }) },\n        textId: { type: uint16_1.$Uint16 },\n        renderer: { type: text_renderer_1.$TextRenderer },\n        fitting: { type: grid_fitting_1.$GridFitting },\n        thickness: { type: new float64_1.Float64Type() },\n        sharpness: { type: new float64_1.Float64Type() },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9jc20tdGV4dC1zZXR0aW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBaUQ7QUFFakQsdURBQWlFO0FBQ2pFLHlEQUFvRTtBQUVwRSxtQ0FBNEM7QUFXL0IsUUFBQSxnQkFBZ0IsR0FBb0MsSUFBSSx1QkFBWSxDQUFrQjtJQUNqRyxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxlQUEwQyxFQUFDLENBQUMsRUFBQztRQUMxRyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN2QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsNkJBQWEsRUFBQztRQUMvQixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsMkJBQVksRUFBQztRQUM3QixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxFQUFFLEVBQUM7UUFDcEMsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsRUFBRSxFQUFDO0tBQ3JDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9jc20tdGV4dC1zZXR0aW5ncy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgRmxvYXQ2NFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9mbG9hdDY0XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IEZsb2F0MzIsIFVpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJEdyaWRGaXR0aW5nLCBHcmlkRml0dGluZyB9IGZyb20gXCIuLi90ZXh0L2dyaWQtZml0dGluZ1wiO1xuaW1wb3J0IHsgJFRleHRSZW5kZXJlciwgVGV4dFJlbmRlcmVyIH0gZnJvbSBcIi4uL3RleHQvdGV4dC1yZW5kZXJlclwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDc21UZXh0U2V0dGluZ3MgZXh0ZW5kcyBfVGFnIHtcbiAgcmVhZG9ubHkgdHlwZTogVGFnVHlwZS5Dc21UZXh0U2V0dGluZ3M7XG4gIHJlYWRvbmx5IHRleHRJZDogVWludDE2O1xuICByZWFkb25seSByZW5kZXJlcjogVGV4dFJlbmRlcmVyO1xuICByZWFkb25seSBmaXR0aW5nOiBHcmlkRml0dGluZztcbiAgcmVhZG9ubHkgdGhpY2tuZXNzOiBGbG9hdDMyO1xuICByZWFkb25seSBzaGFycG5lc3M6IEZsb2F0MzI7XG59XG5cbmV4cG9ydCBjb25zdCAkQ3NtVGV4dFNldHRpbmdzOiBEb2N1bWVudElvVHlwZTxDc21UZXh0U2V0dGluZ3M+ID0gbmV3IERvY3VtZW50VHlwZTxDc21UZXh0U2V0dGluZ3M+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5Dc21UZXh0U2V0dGluZ3MgYXMgVGFnVHlwZS5Dc21UZXh0U2V0dGluZ3N9KX0sXG4gICAgdGV4dElkOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgcmVuZGVyZXI6IHt0eXBlOiAkVGV4dFJlbmRlcmVyfSxcbiAgICBmaXR0aW5nOiB7dHlwZTogJEdyaWRGaXR0aW5nfSxcbiAgICB0aGlja25lc3M6IHt0eXBlOiBuZXcgRmxvYXQ2NFR5cGUoKX0sXG4gICAgc2hhcnBuZXNzOiB7dHlwZTogbmV3IEZsb2F0NjRUeXBlKCl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bytes_1 = require(\"kryo/builtins/bytes\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst _type_1 = require(\"./_type\");\nexports.$DefineBinaryData = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineBinaryData }) },\n        id: { type: uint16_1.$Uint16 },\n        data: { type: bytes_1.$Bytes },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtYmluYXJ5LWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQ0FBNkM7QUFDN0MsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBR2pELG1DQUE0QztBQVEvQixRQUFBLGlCQUFpQixHQUFxQyxJQUFJLHVCQUFZLENBQW1CO0lBQ3BHLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZ0JBQVEsRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLGdCQUE0QyxFQUFDLENBQUMsRUFBQztRQUM1RyxFQUFFLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUNuQixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsY0FBTSxFQUFDO0tBQ3JCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9kZWZpbmUtYmluYXJ5LWRhdGEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQnl0ZXMgfSBmcm9tIFwia3J5by9idWlsdGlucy9ieXRlc1wiO1xuaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVCaW5hcnlEYXRhIGV4dGVuZHMgX1RhZyB7XG4gIHJlYWRvbmx5IHR5cGU6IFRhZ1R5cGUuRGVmaW5lQmluYXJ5RGF0YTtcbiAgcmVhZG9ubHkgaWQ6IFVpbnQxNjtcbiAgcmVhZG9ubHkgZGF0YTogVWludDhBcnJheTtcbn1cblxuZXhwb3J0IGNvbnN0ICREZWZpbmVCaW5hcnlEYXRhOiBEb2N1bWVudElvVHlwZTxEZWZpbmVCaW5hcnlEYXRhPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lQmluYXJ5RGF0YT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZUJpbmFyeURhdGEgYXMgVGFnVHlwZS5EZWZpbmVCaW5hcnlEYXRhfSl9LFxuICAgIGlkOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgZGF0YToge3R5cGU6ICRCeXRlc30sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lazy_properties_1 = require(\"../_helpers/lazy-properties\");\nconst invalid_type_1 = require(\"../errors/invalid-type\");\nconst lazy_options_1 = require(\"../errors/lazy-options\");\nconst max_array_length_1 = require(\"../errors/max-array-length\");\nconst not_implemented_1 = require(\"../errors/not-implemented\");\nconst read_visitor_1 = require(\"../readers/read-visitor\");\nclass BytesType {\n    constructor(options) {\n        this._options = options;\n        if (typeof options !== \"function\") {\n            this._applyOptions();\n        }\n        else {\n            lazy_properties_1.lazyProperties(this, this._applyOptions, [\"maxLength\"]);\n        }\n    }\n    // TODO: Dynamically add with prototype?\n    read(reader, raw) {\n        return reader.readBytes(raw, read_visitor_1.readVisitor({\n            fromBytes(input) {\n                return input;\n            },\n        }));\n    }\n    // TODO: Dynamically add with prototype?\n    write(writer, value) {\n        return writer.writeBytes(value);\n    }\n    testError(val) {\n        if (!(val instanceof Uint8Array)) {\n            return invalid_type_1.createInvalidTypeError(\"Uint8Array\", val);\n        }\n        if (this.maxLength !== undefined && val.length > this.maxLength) {\n            return max_array_length_1.createMaxArrayLengthError(val, this.maxLength);\n        }\n        return undefined;\n    }\n    test(val) {\n        return this.testError(val) === undefined;\n    }\n    equals(left, right) {\n        if (left.length !== right.length) {\n            return false;\n        }\n        for (let i = 0; i < left.length; i++) {\n            if (left[i] !== right[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    lte(left, right) {\n        const minLength = Math.min(left.length, right.length);\n        for (let i = 0; i < minLength; i++) {\n            if (left[i] > right[i]) {\n                return false;\n            }\n        }\n        return left.length <= right.length;\n    }\n    clone(val) {\n        return Uint8Array.from(val);\n    }\n    /**\n     * @param _oldVal\n     * @param _newVal\n     * @returns `true` if there is a difference, `undefined` otherwise\n     */\n    diff(_oldVal, _newVal) {\n        throw not_implemented_1.createNotImplementedError(\"BufferType#diff\");\n    }\n    patch(_oldVal, _diff) {\n        throw not_implemented_1.createNotImplementedError(\"BufferType#patch\");\n    }\n    reverseDiff(_diff) {\n        throw not_implemented_1.createNotImplementedError(\"BufferType#reverseDiff\");\n    }\n    squash(_diff1, _diff2) {\n        throw not_implemented_1.createNotImplementedError(\"BufferType#squash\");\n    }\n    _applyOptions() {\n        if (this._options === undefined) {\n            throw lazy_options_1.createLazyOptionsError(this);\n        }\n        const options = typeof this._options === \"function\" ? this._options() : this._options;\n        const maxLength = options.maxLength;\n        Object.assign(this, { maxLength });\n    }\n}\nexports.BytesType = BytesType;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bytes_1 = require(\"kryo/builtins/bytes\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst image_type_1 = require(\"../image-type\");\nconst _type_1 = require(\"./_type\");\nexports.$DefineBitmap = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineBitmap }) },\n        id: { type: uint16_1.$Uint16 },\n        width: { type: uint16_1.$Uint16 },\n        height: { type: uint16_1.$Uint16 },\n        mediaType: { type: image_type_1.$ImageType },\n        data: { type: bytes_1.$Bytes },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtYml0bWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0NBQTZDO0FBQzdDLGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUVqRCw4Q0FBc0Q7QUFFdEQsbUNBQTRDO0FBVy9CLFFBQUEsYUFBYSxHQUFpQyxJQUFJLHVCQUFZLENBQWU7SUFDeEYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsWUFBb0MsRUFBQyxDQUFDLEVBQUM7UUFDcEcsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDbkIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDdEIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDdkIsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDN0IsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGNBQU0sRUFBQztLQUNyQjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZGVmaW5lLWJpdG1hcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCeXRlcyB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2J5dGVzXCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkSW1hZ2VUeXBlLCBJbWFnZVR5cGUgfSBmcm9tIFwiLi4vaW1hZ2UtdHlwZVwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVCaXRtYXAgZXh0ZW5kcyBfVGFnIHtcbiAgcmVhZG9ubHkgdHlwZTogVGFnVHlwZS5EZWZpbmVCaXRtYXA7XG4gIHJlYWRvbmx5IGlkOiBVaW50MTY7XG4gIHJlYWRvbmx5IHdpZHRoOiBVaW50MTY7XG4gIHJlYWRvbmx5IGhlaWdodDogVWludDE2O1xuICByZWFkb25seSBtZWRpYVR5cGU6IEltYWdlVHlwZTtcbiAgcmVhZG9ubHkgZGF0YTogVWludDhBcnJheTtcbn1cblxuZXhwb3J0IGNvbnN0ICREZWZpbmVCaXRtYXA6IERvY3VtZW50SW9UeXBlPERlZmluZUJpdG1hcD4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZUJpdG1hcD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZUJpdG1hcCBhcyBUYWdUeXBlLkRlZmluZUJpdG1hcH0pfSxcbiAgICBpZDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIHdpZHRoOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgaGVpZ2h0OiB7dHlwZTogJFVpbnQxNn0sXG4gICAgbWVkaWFUeXBlOiB7dHlwZTogJEltYWdlVHlwZX0sXG4gICAgZGF0YToge3R5cGU6ICRCeXRlc30sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ucs2_string_1 = require(\"kryo/types/ucs2-string\");\nconst white_list_1 = require(\"kryo/types/white-list\");\nexports.$ImageType = new white_list_1.WhiteListType({\n    itemType: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }),\n    values: [\n        \"image/jpeg\",\n        \"image/gif\",\n        \"image/png\",\n        \"image/x-partial-jpeg\",\n        \"image/x-ajpeg\",\n        \"image/x-swf-bmp\",\n        \"image/x-swf-abmp\",\n    ],\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvaW1hZ2UtdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHdEQUF3RDtBQUN4RCxzREFBc0Q7QUFpQnpDLFFBQUEsVUFBVSxHQUE2QixJQUFJLDBCQUFhLENBQUM7SUFDcEUsUUFBUSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQztJQUNuRCxNQUFNLEVBQUU7UUFDTSxZQUFZO1FBQ1osV0FBVztRQUNYLFdBQVc7UUFDWCxzQkFBc0I7UUFDdEIsZUFBZTtRQUNmLGlCQUFpQjtRQUNqQixrQkFBa0I7S0FDL0I7Q0FDRixDQUFDLENBQUMiLCJmaWxlIjoiaW1hZ2UtdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7IFdoaXRlTGlzdFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy93aGl0ZS1saXN0XCI7XG5cbi8qKlxuICogLSBgeC1wYXJ0aWFsLWpwZWdgOiBKUEVHIGZpbGUgd2l0aG91dCAgVGFibGVzL01pc2MgY2h1bmsuIEl0IGhhcyB0byBiZSBkZWZpbmVkIGluIGFcbiAqICAgYERlZmluZUpwZWdUYWJsZXNgIHRhZyBhbmQgaW5qZWN0ZWQgaW4gdGhlIGZpcnN0IFN0YXJ0IE9mIEZyYW1lIChTT0YpIEpQRUcgY2h1bmsuXG4gKiAtIGB4LWFqcGVnYDogSlBFRyB3aXRoIGFscGhhIG1hc2sgKHNlZSBEZWZpbmVKUEVHMyk6XG4gKiAgIGB4LWFqcGVnYCA6OiBganBlZ19zaXplKHVpbnQxNmJlKWAgYGpwZWdgIGBhbHBoYWBcbiAqL1xuZXhwb3J0IHR5cGUgSW1hZ2VUeXBlID1cbiAgXCJpbWFnZS9qcGVnXCJcbiAgfCBcImltYWdlL2dpZlwiXG4gIHwgXCJpbWFnZS9wbmdcIlxuICB8IFwiaW1hZ2UveC1wYXJ0aWFsLWpwZWdcIlxuICB8IFwiaW1hZ2UveC1hanBlZ1wiXG4gIHwgXCJpbWFnZS94LXN3Zi1ibXBcIlxuICB8IFwiaW1hZ2UveC1zd2YtYWJtcFwiO1xuXG5leHBvcnQgY29uc3QgJEltYWdlVHlwZTogV2hpdGVMaXN0VHlwZTxJbWFnZVR5cGU+ID0gbmV3IFdoaXRlTGlzdFR5cGUoe1xuICBpdGVtVHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSksXG4gIHZhbHVlczogW1xuICAgIDxJbWFnZVR5cGU+IFwiaW1hZ2UvanBlZ1wiLFxuICAgIDxJbWFnZVR5cGU+IFwiaW1hZ2UvZ2lmXCIsXG4gICAgPEltYWdlVHlwZT4gXCJpbWFnZS9wbmdcIixcbiAgICA8SW1hZ2VUeXBlPiBcImltYWdlL3gtcGFydGlhbC1qcGVnXCIsXG4gICAgPEltYWdlVHlwZT4gXCJpbWFnZS94LWFqcGVnXCIsXG4gICAgPEltYWdlVHlwZT4gXCJpbWFnZS94LXN3Zi1ibXBcIixcbiAgICA8SW1hZ2VUeXBlPiBcImltYWdlL3gtc3dmLWFibXBcIixcbiAgXSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"LowerCase\";\nfunction format({ string }) {\n    return `Expected the following string to be lowercase: ${JSON.stringify(string)}`;\n}\nexports.format = format;\nfunction createLowerCaseError(string) {\n    return incident_1.Incident(exports.name, { string }, format);\n}\nexports.createLowerCaseError = createLowerCaseError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2xvd2VyLWNhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMsV0FBVyxDQUFDO0FBU3RDLFNBQWdCLE1BQU0sQ0FBQyxFQUFDLE1BQU0sRUFBTztJQUNuQyxPQUFPLGtEQUFrRCxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7QUFDcEYsQ0FBQztBQUZELHdCQUVDO0FBRUQsU0FBZ0Isb0JBQW9CLENBQUMsTUFBYztJQUNqRCxPQUFPLG1CQUFRLENBQUMsWUFBSSxFQUFFLEVBQUMsTUFBTSxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDMUMsQ0FBQztBQUZELG9EQUVDIiwiZmlsZSI6ImVycm9ycy9sb3dlci1jYXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IHR5cGUgTmFtZSA9IFwiTG93ZXJDYXNlXCI7XG5leHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiTG93ZXJDYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gIHN0cmluZzogc3RyaW5nO1xufVxuXG5leHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbmV4cG9ydCB0eXBlIExvd2VyQ2FzZUVycm9yID0gSW5jaWRlbnQ8RGF0YSwgTmFtZSwgQ2F1c2U+O1xuXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0KHtzdHJpbmd9OiBEYXRhKTogc3RyaW5nIHtcbiAgcmV0dXJuIGBFeHBlY3RlZCB0aGUgZm9sbG93aW5nIHN0cmluZyB0byBiZSBsb3dlcmNhc2U6ICR7SlNPTi5zdHJpbmdpZnkoc3RyaW5nKX1gO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTG93ZXJDYXNlRXJyb3Ioc3RyaW5nOiBzdHJpbmcpOiBMb3dlckNhc2VFcnJvciB7XG4gIHJldHVybiBJbmNpZGVudChuYW1lLCB7c3RyaW5nfSwgZm9ybWF0KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"MaxUcs2StringLength\";\nfunction format({ string, max }) {\n    return `Expected length of UCS2 string (${string.length}) to be less than or equal to ${max}`;\n}\nexports.format = format;\nfunction createMaxUcs2StringLengthError(string, max) {\n    return incident_1.Incident(exports.name, { string, max }, format);\n}\nexports.createMaxUcs2StringLengthError = createMaxUcs2StringLengthError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL21heC11Y3MyLXN0cmluZy1sZW5ndGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMscUJBQXFCLENBQUM7QUFVaEQsU0FBZ0IsTUFBTSxDQUFDLEVBQUMsTUFBTSxFQUFFLEdBQUcsRUFBTztJQUN4QyxPQUFPLG1DQUFtQyxNQUFNLENBQUMsTUFBTSxpQ0FBaUMsR0FBRyxFQUFFLENBQUM7QUFDaEcsQ0FBQztBQUZELHdCQUVDO0FBRUQsU0FBZ0IsOEJBQThCLENBQUMsTUFBYyxFQUFFLEdBQVc7SUFDeEUsT0FBTyxtQkFBUSxDQUFDLFlBQUksRUFBRSxFQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUMvQyxDQUFDO0FBRkQsd0VBRUMiLCJmaWxlIjoiZXJyb3JzL21heC11Y3MyLXN0cmluZy1sZW5ndGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmNpZGVudCB9IGZyb20gXCJpbmNpZGVudFwiO1xuXG5leHBvcnQgdHlwZSBOYW1lID0gXCJNYXhVY3MyU3RyaW5nTGVuZ3RoXCI7XG5leHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiTWF4VWNzMlN0cmluZ0xlbmd0aFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICBzdHJpbmc6IHN0cmluZztcbiAgbWF4OiBudW1iZXI7XG59XG5cbmV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuZXhwb3J0IHR5cGUgTWF4VWNzMlN0cmluZ0xlbmd0aEVycm9yID0gSW5jaWRlbnQ8RGF0YSwgTmFtZSwgQ2F1c2U+O1xuXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0KHtzdHJpbmcsIG1heH06IERhdGEpOiBzdHJpbmcge1xuICByZXR1cm4gYEV4cGVjdGVkIGxlbmd0aCBvZiBVQ1MyIHN0cmluZyAoJHtzdHJpbmcubGVuZ3RofSkgdG8gYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvICR7bWF4fWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNYXhVY3MyU3RyaW5nTGVuZ3RoRXJyb3Ioc3RyaW5nOiBzdHJpbmcsIG1heDogbnVtYmVyKTogTWF4VWNzMlN0cmluZ0xlbmd0aEVycm9yIHtcbiAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHtzdHJpbmcsIG1heH0sIGZvcm1hdCk7XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"MinUcs2StringLength\";\nfunction format({ string, min }) {\n    return `Expected length of UCS2 string (${string.length}) to be greater than or equal to ${min}`;\n}\nexports.format = format;\nfunction createMinUcs2StringLengthError(string, min) {\n    return incident_1.Incident(exports.name, { string, min }, format);\n}\nexports.createMinUcs2StringLengthError = createMinUcs2StringLengthError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL21pbi11Y3MyLXN0cmluZy1sZW5ndGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMscUJBQXFCLENBQUM7QUFVaEQsU0FBZ0IsTUFBTSxDQUFDLEVBQUMsTUFBTSxFQUFFLEdBQUcsRUFBTztJQUN4QyxPQUFPLG1DQUFtQyxNQUFNLENBQUMsTUFBTSxvQ0FBb0MsR0FBRyxFQUFFLENBQUM7QUFDbkcsQ0FBQztBQUZELHdCQUVDO0FBRUQsU0FBZ0IsOEJBQThCLENBQUMsTUFBYyxFQUFFLEdBQVc7SUFDeEUsT0FBTyxtQkFBUSxDQUFDLFlBQUksRUFBRSxFQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUMvQyxDQUFDO0FBRkQsd0VBRUMiLCJmaWxlIjoiZXJyb3JzL21pbi11Y3MyLXN0cmluZy1sZW5ndGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmNpZGVudCB9IGZyb20gXCJpbmNpZGVudFwiO1xuXG5leHBvcnQgdHlwZSBOYW1lID0gXCJNaW5VY3MyU3RyaW5nTGVuZ3RoXCI7XG5leHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiTWluVWNzMlN0cmluZ0xlbmd0aFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICBzdHJpbmc6IHN0cmluZztcbiAgbWluOiBudW1iZXI7XG59XG5cbmV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuZXhwb3J0IHR5cGUgTWluVWNzMlN0cmluZ0xlbmd0aEVycm9yID0gSW5jaWRlbnQ8RGF0YSwgTmFtZSwgQ2F1c2U+O1xuXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0KHtzdHJpbmcsIG1pbn06IERhdGEpOiBzdHJpbmcge1xuICByZXR1cm4gYEV4cGVjdGVkIGxlbmd0aCBvZiBVQ1MyIHN0cmluZyAoJHtzdHJpbmcubGVuZ3RofSkgdG8gYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvICR7bWlufWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNaW5VY3MyU3RyaW5nTGVuZ3RoRXJyb3Ioc3RyaW5nOiBzdHJpbmcsIG1pbjogbnVtYmVyKTogTWluVWNzMlN0cmluZ0xlbmd0aEVycm9yIHtcbiAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHtzdHJpbmcsIG1pbn0sIGZvcm1hdCk7XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"NotTrimmed\";\nfunction format({ string }) {\n    return `Expected the following string to be trimmed: ${JSON.stringify(string)}`;\n}\nexports.format = format;\nfunction createNotTrimmedError(string) {\n    return incident_1.Incident(exports.name, { string }, format);\n}\nexports.createNotTrimmedError = createNotTrimmedError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL25vdC10cmltbWVkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQW9DO0FBR3ZCLFFBQUEsSUFBSSxHQUFTLFlBQVksQ0FBQztBQVN2QyxTQUFnQixNQUFNLENBQUMsRUFBQyxNQUFNLEVBQU87SUFDbkMsT0FBTyxnREFBZ0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDO0FBQ2xGLENBQUM7QUFGRCx3QkFFQztBQUVELFNBQWdCLHFCQUFxQixDQUFDLE1BQWM7SUFDbEQsT0FBTyxtQkFBUSxDQUFDLFlBQUksRUFBRSxFQUFDLE1BQU0sRUFBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQzFDLENBQUM7QUFGRCxzREFFQyIsImZpbGUiOiJlcnJvcnMvbm90LXRyaW1tZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmNpZGVudCB9IGZyb20gXCJpbmNpZGVudFwiO1xuXG5leHBvcnQgdHlwZSBOYW1lID0gXCJOb3RUcmltbWVkXCI7XG5leHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiTm90VHJpbW1lZFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICBzdHJpbmc6IHN0cmluZztcbn1cblxuZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG5leHBvcnQgdHlwZSBOb3RUcmltbWVkRXJyb3IgPSBJbmNpZGVudDxEYXRhLCBOYW1lLCBDYXVzZT47XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe3N0cmluZ306IERhdGEpOiBzdHJpbmcge1xuICByZXR1cm4gYEV4cGVjdGVkIHRoZSBmb2xsb3dpbmcgc3RyaW5nIHRvIGJlIHRyaW1tZWQ6ICR7SlNPTi5zdHJpbmdpZnkoc3RyaW5nKX1gO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTm90VHJpbW1lZEVycm9yKHN0cmluZzogc3RyaW5nKTogTm90VHJpbW1lZEVycm9yIHtcbiAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHtzdHJpbmd9LCBmb3JtYXQpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"PatternNotMatched\";\nfunction format({ pattern, string }) {\n    return `The regular expression ${pattern} does not match the string ${JSON.stringify(string)}`;\n}\nexports.format = format;\nfunction createPatternNotMatchedError(pattern, string) {\n    return incident_1.Incident(exports.name, { pattern, string }, format);\n}\nexports.createPatternNotMatchedError = createPatternNotMatchedError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL3BhdHRlcm4tbm90LW1hdGNoZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMsbUJBQW1CLENBQUM7QUFVOUMsU0FBZ0IsTUFBTSxDQUFDLEVBQUMsT0FBTyxFQUFFLE1BQU0sRUFBTztJQUM1QyxPQUFPLDBCQUEwQixPQUFPLDhCQUE4QixJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7QUFDakcsQ0FBQztBQUZELHdCQUVDO0FBRUQsU0FBZ0IsNEJBQTRCLENBQUMsT0FBZSxFQUFFLE1BQWM7SUFDMUUsT0FBTyxtQkFBUSxDQUFDLFlBQUksRUFBRSxFQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUNuRCxDQUFDO0FBRkQsb0VBRUMiLCJmaWxlIjoiZXJyb3JzL3BhdHRlcm4tbm90LW1hdGNoZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmNpZGVudCB9IGZyb20gXCJpbmNpZGVudFwiO1xuXG5leHBvcnQgdHlwZSBOYW1lID0gXCJQYXR0ZXJuTm90TWF0Y2hlZFwiO1xuZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcIlBhdHRlcm5Ob3RNYXRjaGVkXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gIHN0cmluZzogc3RyaW5nO1xuICBwYXR0ZXJuOiBSZWdFeHA7XG59XG5cbmV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuZXhwb3J0IHR5cGUgUGF0dGVybk5vdE1hdGNoZWRFcnJvciA9IEluY2lkZW50PERhdGEsIE5hbWUsIENhdXNlPjtcblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7cGF0dGVybiwgc3RyaW5nfTogRGF0YSk6IHN0cmluZyB7XG4gIHJldHVybiBgVGhlIHJlZ3VsYXIgZXhwcmVzc2lvbiAke3BhdHRlcm59IGRvZXMgbm90IG1hdGNoIHRoZSBzdHJpbmcgJHtKU09OLnN0cmluZ2lmeShzdHJpbmcpfWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQYXR0ZXJuTm90TWF0Y2hlZEVycm9yKHBhdHRlcm46IFJlZ0V4cCwgc3RyaW5nOiBzdHJpbmcpOiBQYXR0ZXJuTm90TWF0Y2hlZEVycm9yIHtcbiAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHtwYXR0ZXJuLCBzdHJpbmd9LCBmb3JtYXQpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst button_cond_action_1 = require(\"../button/button-cond-action\");\nconst button_record_1 = require(\"../button/button-record\");\nconst _type_1 = require(\"./_type\");\nexports.$DefineButton = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineButton }) },\n        id: { type: uint16_1.$Uint16 },\n        trackAsMenu: { type: boolean_1.$Boolean },\n        characters: { type: new array_1.ArrayType({ itemType: button_record_1.$ButtonRecord, maxLength: Infinity }) },\n        actions: { type: new array_1.ArrayType({ itemType: button_cond_action_1.$ButtonCondAction, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtYnV0dG9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQscUVBQW1GO0FBQ25GLDJEQUFzRTtBQUV0RSxtQ0FBNEM7QUFXL0IsUUFBQSxhQUFhLEdBQWlDLElBQUksdUJBQVksQ0FBZTtJQUN4RixVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxZQUFvQyxFQUFDLENBQUMsRUFBQztRQUNwRyxFQUFFLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUNuQixXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUM3QixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLDZCQUFhLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7UUFDakYsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxzQ0FBaUIsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUNuRjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZGVmaW5lLWJ1dHRvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRCdXR0b25Db25kQWN0aW9uLCBCdXR0b25Db25kQWN0aW9uIH0gZnJvbSBcIi4uL2J1dHRvbi9idXR0b24tY29uZC1hY3Rpb25cIjtcbmltcG9ydCB7ICRCdXR0b25SZWNvcmQsIEJ1dHRvblJlY29yZCB9IGZyb20gXCIuLi9idXR0b24vYnV0dG9uLXJlY29yZFwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVCdXR0b24gZXh0ZW5kcyBfVGFnIHtcbiAgcmVhZG9ubHkgdHlwZTogVGFnVHlwZS5EZWZpbmVCdXR0b247XG4gIHJlYWRvbmx5IGlkOiBVaW50MTY7XG4gIHJlYWRvbmx5IHRyYWNrQXNNZW51OiBib29sZWFuO1xuICAvLyBUT0RPOiBSZW5hbWUgdG8gcmVjb3JkcyAodG8gbWF0Y2ggRGVmaW5lU2hhcGUpXG4gIHJlYWRvbmx5IGNoYXJhY3RlcnM6IFJlYWRvbmx5QXJyYXk8QnV0dG9uUmVjb3JkPjtcbiAgcmVhZG9ubHkgYWN0aW9uczogUmVhZG9ubHlBcnJheTxCdXR0b25Db25kQWN0aW9uPjtcbn1cblxuZXhwb3J0IGNvbnN0ICREZWZpbmVCdXR0b246IERvY3VtZW50SW9UeXBlPERlZmluZUJ1dHRvbj4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZUJ1dHRvbj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZUJ1dHRvbiBhcyBUYWdUeXBlLkRlZmluZUJ1dHRvbn0pfSxcbiAgICBpZDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIHRyYWNrQXNNZW51OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGNoYXJhY3RlcnM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJEJ1dHRvblJlY29yZCwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBhY3Rpb25zOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRCdXR0b25Db25kQWN0aW9uLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bytes_1 = require(\"kryo/builtins/bytes\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst button_cond_1 = require(\"./button-cond\");\nexports.$ButtonCondAction = new document_1.DocumentType({\n    properties: {\n        conditions: { type: button_cond_1.$ButtonCond, optional: true },\n        actions: { type: bytes_1.$Bytes },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnV0dG9uL2J1dHRvbi1jb25kLWFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtDQUE2QztBQUM3QyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLCtDQUF3RDtBQU8zQyxRQUFBLGlCQUFpQixHQUFxQyxJQUFJLHVCQUFZLENBQW1CO0lBQ3BHLFVBQVUsRUFBRTtRQUNWLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDL0MsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLGNBQU0sRUFBQztLQUN4QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImJ1dHRvbi9idXR0b24tY29uZC1hY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQnl0ZXMgfSBmcm9tIFwia3J5by9idWlsdGlucy9ieXRlc1wiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyAkQnV0dG9uQ29uZCwgQnV0dG9uQ29uZCB9IGZyb20gXCIuL2J1dHRvbi1jb25kXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQnV0dG9uQ29uZEFjdGlvbiB7XG4gIHJlYWRvbmx5IGNvbmRpdGlvbnM/OiBCdXR0b25Db25kO1xuICByZWFkb25seSBhY3Rpb25zOiBVaW50OEFycmF5O1xufVxuXG5leHBvcnQgY29uc3QgJEJ1dHRvbkNvbmRBY3Rpb246IERvY3VtZW50SW9UeXBlPEJ1dHRvbkNvbmRBY3Rpb24+ID0gbmV3IERvY3VtZW50VHlwZTxCdXR0b25Db25kQWN0aW9uPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBjb25kaXRpb25zOiB7dHlwZTogJEJ1dHRvbkNvbmQsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBhY3Rpb25zOiB7dHlwZTogJEJ5dGVzfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst uint32_1 = require(\"kryo/builtins/uint32\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nexports.$ButtonCond = new document_1.DocumentType({\n    properties: {\n        idleToOverDown: { type: boolean_1.$Boolean },\n        outDownToIdle: { type: boolean_1.$Boolean },\n        outDownToOverDown: { type: boolean_1.$Boolean },\n        overDownToOutDown: { type: boolean_1.$Boolean },\n        overDownToOverUp: { type: boolean_1.$Boolean },\n        overUpToOverDown: { type: boolean_1.$Boolean },\n        overUpToIdle: { type: boolean_1.$Boolean },\n        idleToOverUp: { type: boolean_1.$Boolean },\n        overDownToIdle: { type: boolean_1.$Boolean },\n        keyPress: { type: uint32_1.$Uint32, optional: true },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnV0dG9uL2J1dHRvbi1jb25kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBZ0J0RCxRQUFBLFdBQVcsR0FBK0IsSUFBSSx1QkFBWSxDQUFhO0lBQ2xGLFVBQVUsRUFBRTtRQUNWLGNBQWMsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ2hDLGFBQWEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQy9CLGlCQUFpQixFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDbkMsaUJBQWlCLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUNuQyxnQkFBZ0IsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ2xDLGdCQUFnQixFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDbEMsWUFBWSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDOUIsWUFBWSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDOUIsY0FBYyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDaEMsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztLQUMxQztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImJ1dHRvbi9idXR0b24tY29uZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgJFVpbnQzMiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQzMlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBVaW50MzIgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBCdXR0b25Db25kIHtcbiAgaWRsZVRvT3ZlckRvd246IGJvb2xlYW47XG4gIG91dERvd25Ub0lkbGU6IGJvb2xlYW47XG4gIG91dERvd25Ub092ZXJEb3duOiBib29sZWFuO1xuICBvdmVyRG93blRvT3V0RG93bjogYm9vbGVhbjtcbiAgb3ZlckRvd25Ub092ZXJVcDogYm9vbGVhbjtcbiAgb3ZlclVwVG9PdmVyRG93bjogYm9vbGVhbjtcbiAgb3ZlclVwVG9JZGxlOiBib29sZWFuO1xuICBpZGxlVG9PdmVyVXA6IGJvb2xlYW47XG4gIG92ZXJEb3duVG9JZGxlOiBib29sZWFuO1xuICBrZXlQcmVzcz86IFVpbnQzMjtcbn1cblxuZXhwb3J0IGNvbnN0ICRCdXR0b25Db25kOiBEb2N1bWVudElvVHlwZTxCdXR0b25Db25kPiA9IG5ldyBEb2N1bWVudFR5cGU8QnV0dG9uQ29uZD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgaWRsZVRvT3ZlckRvd246IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgb3V0RG93blRvSWRsZToge3R5cGU6ICRCb29sZWFufSxcbiAgICBvdXREb3duVG9PdmVyRG93bjoge3R5cGU6ICRCb29sZWFufSxcbiAgICBvdmVyRG93blRvT3V0RG93bjoge3R5cGU6ICRCb29sZWFufSxcbiAgICBvdmVyRG93blRvT3ZlclVwOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIG92ZXJVcFRvT3ZlckRvd246IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgb3ZlclVwVG9JZGxlOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGlkbGVUb092ZXJVcDoge3R5cGU6ICRCb29sZWFufSxcbiAgICBvdmVyRG93blRvSWRsZToge3R5cGU6ICRCb29sZWFufSxcbiAgICBrZXlQcmVzczoge3R5cGU6ICRVaW50MzIsIG9wdGlvbmFsOiB0cnVlfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst blend_mode_1 = require(\"../blend-mode\");\nconst color_transform_with_alpha_1 = require(\"../color-transform-with-alpha\");\nconst filter_1 = require(\"../filter\");\nconst matrix_1 = require(\"../matrix\");\nexports.$ButtonRecord = new document_1.DocumentType({\n    properties: {\n        stateHitTest: { type: boolean_1.$Boolean },\n        stateDown: { type: boolean_1.$Boolean },\n        stateOver: { type: boolean_1.$Boolean },\n        stateUp: { type: boolean_1.$Boolean },\n        characterId: { type: uint16_1.$Uint16 },\n        depth: { type: uint16_1.$Uint16 },\n        matrix: { type: matrix_1.$Matrix },\n        colorTransform: { type: color_transform_with_alpha_1.$ColorTransformWithAlpha, optional: true },\n        filters: { type: new array_1.ArrayType({ itemType: filter_1.$Filter, maxLength: Infinity }) },\n        blendMode: { type: blend_mode_1.$BlendMode },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnV0dG9uL2J1dHRvbi1yZWNvcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtREFBaUQ7QUFDakQsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1Qyw0Q0FBNkM7QUFDN0Msa0RBQW1FO0FBRW5FLDhDQUFzRDtBQUN0RCw4RUFBa0c7QUFDbEcsc0NBQTRDO0FBQzVDLHNDQUE0QztBQWUvQixRQUFBLGFBQWEsR0FBaUMsSUFBSSx1QkFBWSxDQUFlO0lBQ3hGLFVBQVUsRUFBRTtRQUNWLFlBQVksRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzlCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzNCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzNCLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3pCLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzVCLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3RCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3ZCLGNBQWMsRUFBRSxFQUFDLElBQUksRUFBRSxxREFBd0IsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQ2hFLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsZ0JBQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUN4RSxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztLQUM5QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImJ1dHRvbi9idXR0b24tcmVjb3JkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRCbGVuZE1vZGUsIEJsZW5kTW9kZSB9IGZyb20gXCIuLi9ibGVuZC1tb2RlXCI7XG5pbXBvcnQgeyAkQ29sb3JUcmFuc2Zvcm1XaXRoQWxwaGEsIENvbG9yVHJhbnNmb3JtV2l0aEFscGhhIH0gZnJvbSBcIi4uL2NvbG9yLXRyYW5zZm9ybS13aXRoLWFscGhhXCI7XG5pbXBvcnQgeyAkRmlsdGVyLCBGaWx0ZXIgfSBmcm9tIFwiLi4vZmlsdGVyXCI7XG5pbXBvcnQgeyAkTWF0cml4LCBNYXRyaXggfSBmcm9tIFwiLi4vbWF0cml4XCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQnV0dG9uUmVjb3JkIHtcbiAgc3RhdGVIaXRUZXN0OiBib29sZWFuO1xuICBzdGF0ZURvd246IGJvb2xlYW47XG4gIHN0YXRlT3ZlcjogYm9vbGVhbjtcbiAgc3RhdGVVcDogYm9vbGVhbjtcbiAgY2hhcmFjdGVySWQ6IFVpbnQxNjtcbiAgZGVwdGg6IFVpbnQxNjtcbiAgbWF0cml4OiBNYXRyaXg7XG4gIGNvbG9yVHJhbnNmb3JtPzogQ29sb3JUcmFuc2Zvcm1XaXRoQWxwaGE7XG4gIGZpbHRlcnM6IEZpbHRlcltdO1xuICBibGVuZE1vZGU6IEJsZW5kTW9kZTtcbn1cblxuZXhwb3J0IGNvbnN0ICRCdXR0b25SZWNvcmQ6IERvY3VtZW50SW9UeXBlPEJ1dHRvblJlY29yZD4gPSBuZXcgRG9jdW1lbnRUeXBlPEJ1dHRvblJlY29yZD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgc3RhdGVIaXRUZXN0OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHN0YXRlRG93bjoge3R5cGU6ICRCb29sZWFufSxcbiAgICBzdGF0ZU92ZXI6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgc3RhdGVVcDoge3R5cGU6ICRCb29sZWFufSxcbiAgICBjaGFyYWN0ZXJJZDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIGRlcHRoOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgbWF0cml4OiB7dHlwZTogJE1hdHJpeH0sXG4gICAgY29sb3JUcmFuc2Zvcm06IHt0eXBlOiAkQ29sb3JUcmFuc2Zvcm1XaXRoQWxwaGEsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBmaWx0ZXJzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRGaWx0ZXIsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgYmxlbmRNb2RlOiB7dHlwZTogJEJsZW5kTW9kZX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sint16_1 = require(\"kryo/builtins/sint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst sfixed8p8_1 = require(\"./fixed-point/sfixed8p8\");\nexports.$ColorTransform = new document_1.DocumentType(() => ({\n    properties: {\n        redMult: { type: sfixed8p8_1.Sfixed8P8 },\n        greenMult: { type: sfixed8p8_1.Sfixed8P8 },\n        blueMult: { type: sfixed8p8_1.Sfixed8P8 },\n        redAdd: { type: sint16_1.$Sint16 },\n        greenAdd: { type: sint16_1.$Sint16 },\n        blueAdd: { type: sint16_1.$Sint16 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n}));\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29sb3ItdHJhbnNmb3JtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFFbkUsdURBQW9EO0FBV3ZDLFFBQUEsZUFBZSxHQUFtQyxJQUFJLHVCQUFZLENBQWlCLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDckcsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLHFCQUFTLEVBQUM7UUFDMUIsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLHFCQUFTLEVBQUM7UUFDNUIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLHFCQUFTLEVBQUM7UUFDM0IsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDdkIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDekIsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7S0FDekI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImNvbG9yLXRyYW5zZm9ybS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRTaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy9zaW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgU2ludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyBTZml4ZWQ4UDggfSBmcm9tIFwiLi9maXhlZC1wb2ludC9zZml4ZWQ4cDhcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDb2xvclRyYW5zZm9ybSB7XG4gIHJlZE11bHQ6IFNmaXhlZDhQODtcbiAgZ3JlZW5NdWx0OiBTZml4ZWQ4UDg7XG4gIGJsdWVNdWx0OiBTZml4ZWQ4UDg7XG4gIHJlZEFkZDogU2ludDE2O1xuICBncmVlbkFkZDogU2ludDE2O1xuICBibHVlQWRkOiBTaW50MTY7XG59XG5cbmV4cG9ydCBjb25zdCAkQ29sb3JUcmFuc2Zvcm06IERvY3VtZW50SW9UeXBlPENvbG9yVHJhbnNmb3JtPiA9IG5ldyBEb2N1bWVudFR5cGU8Q29sb3JUcmFuc2Zvcm0+KCgpID0+ICh7XG4gIHByb3BlcnRpZXM6IHtcbiAgICByZWRNdWx0OiB7dHlwZTogU2ZpeGVkOFA4fSxcbiAgICBncmVlbk11bHQ6IHt0eXBlOiBTZml4ZWQ4UDh9LFxuICAgIGJsdWVNdWx0OiB7dHlwZTogU2ZpeGVkOFA4fSxcbiAgICByZWRBZGQ6IHt0eXBlOiAkU2ludDE2fSxcbiAgICBncmVlbkFkZDoge3R5cGU6ICRTaW50MTZ9LFxuICAgIGJsdWVBZGQ6IHt0eXBlOiAkU2ludDE2fSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst bytes_1 = require(\"kryo/builtins/bytes\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst ucs2_string_1 = require(\"kryo/types/ucs2-string\");\nconst _type_1 = require(\"./_type\");\nexports.$DefineCffFont = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineCffFont }) },\n        id: { type: uint16_1.$Uint16 },\n        fontName: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },\n        isItalic: { type: boolean_1.$Boolean },\n        isBold: { type: boolean_1.$Boolean },\n        data: { type: bytes_1.$Bytes, optional: true },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtY2ZmLWZvbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtREFBaUQ7QUFDakQsK0NBQTZDO0FBQzdDLGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBd0Q7QUFHeEQsbUNBQTRDO0FBVy9CLFFBQUEsY0FBYyxHQUFrQyxJQUFJLHVCQUFZLENBQWdCO0lBQzNGLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZ0JBQVEsRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLGFBQXNDLEVBQUMsQ0FBQyxFQUFDO1FBQ3RHLEVBQUUsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ25CLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUMzRCxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN4QixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsY0FBTSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7S0FDckM7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2RlZmluZS1jZmYtZm9udC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgJEJ5dGVzIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYnl0ZXNcIjtcbmltcG9ydCB7ICRVaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVY3MyU3RyaW5nVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3VjczItc3RyaW5nXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lQ2ZmRm9udCBleHRlbmRzIF9UYWcge1xuICByZWFkb25seSB0eXBlOiBUYWdUeXBlLkRlZmluZUNmZkZvbnQ7XG4gIHJlYWRvbmx5IGlkOiBVaW50MTY7XG4gIHJlYWRvbmx5IGZvbnROYW1lOiBzdHJpbmc7XG4gIHJlYWRvbmx5IGlzSXRhbGljOiBib29sZWFuO1xuICByZWFkb25seSBpc0JvbGQ6IGJvb2xlYW47XG4gIHJlYWRvbmx5IGRhdGE/OiBVaW50OEFycmF5O1xufVxuXG5leHBvcnQgY29uc3QgJERlZmluZUNmZkZvbnQ6IERvY3VtZW50SW9UeXBlPERlZmluZUNmZkZvbnQ+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVDZmZGb250Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lQ2ZmRm9udCBhcyBUYWdUeXBlLkRlZmluZUNmZkZvbnR9KX0sXG4gICAgaWQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBmb250TmFtZToge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBpc0l0YWxpYzoge3R5cGU6ICRCb29sZWFufSxcbiAgICBpc0JvbGQ6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgZGF0YToge3R5cGU6ICRCeXRlcywgb3B0aW9uYWw6IHRydWV9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst sint16_1 = require(\"kryo/builtins/sint16\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst integer_1 = require(\"kryo/types/integer\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst ucs2_string_1 = require(\"kryo/types/ucs2-string\");\nconst rect_1 = require(\"../rect\");\nconst straight_s_rgba8_1 = require(\"../straight-s-rgba8\");\nconst text_alignment_1 = require(\"../text/text-alignment\");\nconst _type_1 = require(\"./_type\");\nexports.$DefineDynamicText = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineDynamicText }) },\n        id: { type: uint16_1.$Uint16 },\n        bounds: { type: rect_1.$Rect },\n        wordWrap: { type: boolean_1.$Boolean },\n        multiline: { type: boolean_1.$Boolean },\n        password: { type: boolean_1.$Boolean },\n        readonly: { type: boolean_1.$Boolean },\n        autoSize: { type: boolean_1.$Boolean },\n        noSelect: { type: boolean_1.$Boolean },\n        border: { type: boolean_1.$Boolean },\n        wasStatic: { type: boolean_1.$Boolean },\n        html: { type: boolean_1.$Boolean },\n        useGlyphFont: { type: boolean_1.$Boolean },\n        fontId: { type: uint16_1.$Uint16, optional: true },\n        fontClass: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }), optional: true },\n        fontSize: { type: new integer_1.IntegerType(), optional: true },\n        color: { type: straight_s_rgba8_1.$StraightSRgba8, optional: true },\n        maxLength: { type: new integer_1.IntegerType(), optional: true },\n        align: { type: text_alignment_1.$TextAlignment, optional: true },\n        marginLeft: { type: uint16_1.$Uint16 },\n        marginRight: { type: uint16_1.$Uint16 },\n        indent: { type: uint16_1.$Uint16 },\n        leading: { type: sint16_1.$Sint16 },\n        variableName: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }), optional: true },\n        text: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }), optional: true },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtZHluYW1pYy10ZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGlEQUErQztBQUMvQyxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQWlEO0FBQ2pELHdEQUF3RDtBQUV4RCxrQ0FBc0M7QUFDdEMsMERBQXNFO0FBQ3RFLDJEQUF1RTtBQUV2RSxtQ0FBNEM7QUE4Qi9CLFFBQUEsa0JBQWtCLEdBQXNDLElBQUksdUJBQVksQ0FBb0I7SUFDdkcsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsaUJBQThDLEVBQUMsQ0FBQyxFQUFDO1FBQzlHLEVBQUUsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ25CLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxZQUFLLEVBQUM7UUFDckIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDMUIsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDM0IsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDMUIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDMUIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDMUIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDMUIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDeEIsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDM0IsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDdEIsWUFBWSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDOUIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUN2QyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSw0QkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUM1RSxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUNuRCxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0NBQWUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQzlDLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQ3BELEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSwrQkFBYyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDN0MsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDM0IsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDNUIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDdkIsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDeEIsWUFBWSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDL0UsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7S0FDeEU7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2RlZmluZS1keW5hbWljLXRleHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQm9vbGVhbiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2Jvb2xlYW5cIjtcbmltcG9ydCB7ICRTaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy9zaW50MTZcIjtcbmltcG9ydCB7ICRVaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgSW50ZWdlclR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9pbnRlZ2VyXCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7IFNpbnQxNiwgVWludDE2LCBVaW50U2l6ZSB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJFJlY3QsIFJlY3QgfSBmcm9tIFwiLi4vcmVjdFwiO1xuaW1wb3J0IHsgJFN0cmFpZ2h0U1JnYmE4LCBTdHJhaWdodFNSZ2JhOCB9IGZyb20gXCIuLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5pbXBvcnQgeyAkVGV4dEFsaWdubWVudCwgVGV4dEFsaWdubWVudCB9IGZyb20gXCIuLi90ZXh0L3RleHQtYWxpZ25tZW50XCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZUR5bmFtaWNUZXh0IGV4dGVuZHMgX1RhZyB7XG4gIHJlYWRvbmx5IHR5cGU6IFRhZ1R5cGUuRGVmaW5lRHluYW1pY1RleHQ7XG4gIHJlYWRvbmx5IGlkOiBVaW50MTY7XG4gIHJlYWRvbmx5IGJvdW5kczogUmVjdDtcbiAgcmVhZG9ubHkgd29yZFdyYXA6IGJvb2xlYW47XG4gIHJlYWRvbmx5IG11bHRpbGluZTogYm9vbGVhbjtcbiAgcmVhZG9ubHkgcGFzc3dvcmQ6IGJvb2xlYW47XG4gIHJlYWRvbmx5IHJlYWRvbmx5OiBib29sZWFuO1xuICByZWFkb25seSBhdXRvU2l6ZTogYm9vbGVhbjtcbiAgcmVhZG9ubHkgbm9TZWxlY3Q6IGJvb2xlYW47XG4gIHJlYWRvbmx5IGJvcmRlcjogYm9vbGVhbjtcbiAgcmVhZG9ubHkgd2FzU3RhdGljOiBib29sZWFuO1xuICByZWFkb25seSBodG1sOiBib29sZWFuO1xuICByZWFkb25seSB1c2VHbHlwaEZvbnQ6IGJvb2xlYW47XG4gIHJlYWRvbmx5IGZvbnRJZD86IFVpbnQxNjtcbiAgcmVhZG9ubHkgZm9udENsYXNzPzogc3RyaW5nO1xuICByZWFkb25seSBmb250U2l6ZT86IFVpbnQxNjtcbiAgcmVhZG9ubHkgY29sb3I/OiBTdHJhaWdodFNSZ2JhODtcbiAgcmVhZG9ubHkgbWF4TGVuZ3RoPzogVWludFNpemU7XG4gIHJlYWRvbmx5IGFsaWduPzogVGV4dEFsaWdubWVudDtcbiAgcmVhZG9ubHkgbWFyZ2luTGVmdDogVWludDE2O1xuICByZWFkb25seSBtYXJnaW5SaWdodDogVWludDE2O1xuICByZWFkb25seSBpbmRlbnQ6IFVpbnQxNjtcbiAgcmVhZG9ubHkgbGVhZGluZzogU2ludDE2O1xuICByZWFkb25seSB2YXJpYWJsZU5hbWU/OiBzdHJpbmc7XG4gIHJlYWRvbmx5IHRleHQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCAkRGVmaW5lRHluYW1pY1RleHQ6IERvY3VtZW50SW9UeXBlPERlZmluZUR5bmFtaWNUZXh0PiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lRHluYW1pY1RleHQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5EZWZpbmVEeW5hbWljVGV4dCBhcyBUYWdUeXBlLkRlZmluZUR5bmFtaWNUZXh0fSl9LFxuICAgIGlkOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgYm91bmRzOiB7dHlwZTogJFJlY3R9LFxuICAgIHdvcmRXcmFwOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIG11bHRpbGluZToge3R5cGU6ICRCb29sZWFufSxcbiAgICBwYXNzd29yZDoge3R5cGU6ICRCb29sZWFufSxcbiAgICByZWFkb25seToge3R5cGU6ICRCb29sZWFufSxcbiAgICBhdXRvU2l6ZToge3R5cGU6ICRCb29sZWFufSxcbiAgICBub1NlbGVjdDoge3R5cGU6ICRCb29sZWFufSxcbiAgICBib3JkZXI6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgd2FzU3RhdGljOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGh0bWw6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgdXNlR2x5cGhGb250OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGZvbnRJZDoge3R5cGU6ICRVaW50MTYsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBmb250Q2xhc3M6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KSwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGZvbnRTaXplOiB7dHlwZTogbmV3IEludGVnZXJUeXBlKCksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBjb2xvcjoge3R5cGU6ICRTdHJhaWdodFNSZ2JhOCwgb3B0aW9uYWw6IHRydWV9LFxuICAgIG1heExlbmd0aDoge3R5cGU6IG5ldyBJbnRlZ2VyVHlwZSgpLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgYWxpZ246IHt0eXBlOiAkVGV4dEFsaWdubWVudCwgb3B0aW9uYWw6IHRydWV9LFxuICAgIG1hcmdpbkxlZnQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBtYXJnaW5SaWdodDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIGluZGVudDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIGxlYWRpbmc6IHt0eXBlOiAkU2ludDE2fSxcbiAgICB2YXJpYWJsZU5hbWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KSwgb3B0aW9uYWw6IHRydWV9LFxuICAgIHRleHQ6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KSwgb3B0aW9uYWw6IHRydWV9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst ucs2_string_1 = require(\"kryo/types/ucs2-string\");\nconst glyph_1 = require(\"../glyph\");\nconst language_code_1 = require(\"../language-code\");\nconst font_layout_1 = require(\"../text/font-layout\");\nconst _type_1 = require(\"./_type\");\nexports.$DefineFont = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineFont }) },\n        id: { type: uint16_1.$Uint16 },\n        fontName: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },\n        isBold: { type: boolean_1.$Boolean },\n        isItalic: { type: boolean_1.$Boolean },\n        isAnsi: { type: boolean_1.$Boolean },\n        isSmall: { type: boolean_1.$Boolean },\n        isShiftJis: { type: boolean_1.$Boolean },\n        language: { type: language_code_1.$LanguageCode },\n        glyphs: { type: new array_1.ArrayType({ itemType: glyph_1.$Glyph, maxLength: Infinity }), optional: true },\n        codeUnits: { type: new array_1.ArrayType({ itemType: uint16_1.$Uint16, maxLength: Infinity }), optional: true },\n        layout: { type: font_layout_1.$FontLayout, optional: true },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtZm9udC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELHdEQUF3RDtBQUV4RCxvQ0FBeUM7QUFDekMsb0RBQStEO0FBQy9ELHFEQUE4RDtBQUU5RCxtQ0FBNEM7QUFpQi9CLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsVUFBZ0MsRUFBQyxDQUFDLEVBQUM7UUFDaEcsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDbkIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQzNELE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3hCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzFCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3hCLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3pCLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzVCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSw2QkFBYSxFQUFDO1FBQy9CLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsY0FBTSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDdEYsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxnQkFBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDMUYsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztLQUM1QztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZGVmaW5lLWZvbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQm9vbGVhbiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2Jvb2xlYW5cIjtcbmltcG9ydCB7ICRVaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEFycmF5VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2FycmF5XCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWNzMlN0cmluZ1R5cGUgfSBmcm9tIFwia3J5by90eXBlcy91Y3MyLXN0cmluZ1wiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkR2x5cGgsIEdseXBoIH0gZnJvbSBcIi4uL2dseXBoXCI7XG5pbXBvcnQgeyAkTGFuZ3VhZ2VDb2RlLCBMYW5ndWFnZUNvZGUgfSBmcm9tIFwiLi4vbGFuZ3VhZ2UtY29kZVwiO1xuaW1wb3J0IHsgJEZvbnRMYXlvdXQsIEZvbnRMYXlvdXQgfSBmcm9tIFwiLi4vdGV4dC9mb250LWxheW91dFwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVGb250IGV4dGVuZHMgX1RhZyB7XG4gIHJlYWRvbmx5IHR5cGU6IFRhZ1R5cGUuRGVmaW5lRm9udDtcbiAgcmVhZG9ubHkgaWQ6IFVpbnQxNjtcbiAgcmVhZG9ubHkgZm9udE5hbWU6IHN0cmluZztcbiAgcmVhZG9ubHkgaXNCb2xkOiBib29sZWFuO1xuICByZWFkb25seSBpc0l0YWxpYzogYm9vbGVhbjtcbiAgcmVhZG9ubHkgaXNBbnNpOiBib29sZWFuO1xuICByZWFkb25seSBpc1NtYWxsOiBib29sZWFuO1xuICByZWFkb25seSBpc1NoaWZ0SmlzOiBib29sZWFuO1xuICByZWFkb25seSBsYW5ndWFnZTogTGFuZ3VhZ2VDb2RlO1xuICByZWFkb25seSBnbHlwaHM/OiBSZWFkb25seUFycmF5PEdseXBoPjtcbiAgcmVhZG9ubHkgY29kZVVuaXRzPzogUmVhZG9ubHlBcnJheTxVaW50MTY+O1xuICByZWFkb25seSBsYXlvdXQ/OiBGb250TGF5b3V0O1xufVxuXG5leHBvcnQgY29uc3QgJERlZmluZUZvbnQ6IERvY3VtZW50SW9UeXBlPERlZmluZUZvbnQ+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVGb250Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lRm9udCBhcyBUYWdUeXBlLkRlZmluZUZvbnR9KX0sXG4gICAgaWQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBmb250TmFtZToge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBpc0JvbGQ6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgaXNJdGFsaWM6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgaXNBbnNpOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGlzU21hbGw6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgaXNTaGlmdEppczoge3R5cGU6ICRCb29sZWFufSxcbiAgICBsYW5ndWFnZToge3R5cGU6ICRMYW5ndWFnZUNvZGV9LFxuICAgIGdseXBoczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkR2x5cGgsIG1heExlbmd0aDogSW5maW5pdHl9KSwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGNvZGVVbml0czoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkVWludDE2LCBtYXhMZW5ndGg6IEluZmluaXR5fSksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBsYXlvdXQ6IHt0eXBlOiAkRm9udExheW91dCwgb3B0aW9uYWw6IHRydWV9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sint16_1 = require(\"kryo/builtins/sint16\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst rect_1 = require(\"../rect\");\nconst kerning_record_1 = require(\"./kerning-record\");\nexports.$FontLayout = new document_1.DocumentType({\n    properties: {\n        ascent: { type: uint16_1.$Uint16 },\n        descent: { type: uint16_1.$Uint16 },\n        leading: { type: sint16_1.$Sint16 },\n        advances: { type: new array_1.ArrayType({ itemType: sint16_1.$Sint16, maxLength: Infinity }) },\n        bounds: { type: new array_1.ArrayType({ itemType: rect_1.$Rect, maxLength: Infinity }) },\n        kerning: { type: new array_1.ArrayType({ itemType: kerning_record_1.$KerningRecord, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9mb250LWxheW91dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFFbkUsa0NBQXNDO0FBQ3RDLHFEQUFpRTtBQVdwRCxRQUFBLFdBQVcsR0FBK0IsSUFBSSx1QkFBWSxDQUFhO0lBQ2xGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3ZCLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3hCLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3hCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsZ0JBQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUN6RSxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLFlBQUssRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUNyRSxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLCtCQUFjLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDaEY7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXh0L2ZvbnQtbGF5b3V0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFNpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3NpbnQxNlwiO1xuaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgU2ludDE2LCBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRSZWN0LCBSZWN0IH0gZnJvbSBcIi4uL3JlY3RcIjtcbmltcG9ydCB7ICRLZXJuaW5nUmVjb3JkLCBLZXJuaW5nUmVjb3JkIH0gZnJvbSBcIi4va2VybmluZy1yZWNvcmRcIjtcblxuZXhwb3J0IGludGVyZmFjZSBGb250TGF5b3V0IHtcbiAgYXNjZW50OiBVaW50MTY7XG4gIGRlc2NlbnQ6IFVpbnQxNjtcbiAgbGVhZGluZzogU2ludDE2O1xuICBhZHZhbmNlczogU2ludDE2W107XG4gIGJvdW5kczogUmVjdFtdO1xuICBrZXJuaW5nOiBLZXJuaW5nUmVjb3JkW107XG59XG5cbmV4cG9ydCBjb25zdCAkRm9udExheW91dDogRG9jdW1lbnRJb1R5cGU8Rm9udExheW91dD4gPSBuZXcgRG9jdW1lbnRUeXBlPEZvbnRMYXlvdXQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFzY2VudDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIGRlc2NlbnQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBsZWFkaW5nOiB7dHlwZTogJFNpbnQxNn0sXG4gICAgYWR2YW5jZXM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJFNpbnQxNiwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBib3VuZHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJFJlY3QsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAga2VybmluZzoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkS2VybmluZ1JlY29yZCwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sint16_1 = require(\"kryo/builtins/sint16\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nexports.$KerningRecord = new document_1.DocumentType({\n    properties: {\n        left: { type: uint16_1.$Uint16 },\n        right: { type: uint16_1.$Uint16 },\n        adjustment: { type: sint16_1.$Sint16 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9rZXJuaW5nLXJlY29yZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQVN0RCxRQUFBLGNBQWMsR0FBa0MsSUFBSSx1QkFBWSxDQUFnQjtJQUMzRixVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUNyQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN0QixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztLQUM1QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRleHQva2VybmluZy1yZWNvcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkU2ludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvc2ludDE2XCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IFNpbnQxNiwgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2VybmluZ1JlY29yZCB7XG4gIGxlZnQ6IFVpbnQxNjtcbiAgcmlnaHQ6IFVpbnQxNjtcbiAgYWRqdXN0bWVudDogU2ludDE2O1xufVxuXG5leHBvcnQgY29uc3QgJEtlcm5pbmdSZWNvcmQ6IERvY3VtZW50SW9UeXBlPEtlcm5pbmdSZWNvcmQ+ID0gbmV3IERvY3VtZW50VHlwZTxLZXJuaW5nUmVjb3JkPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBsZWZ0OiB7dHlwZTogJFVpbnQxNn0sXG4gICAgcmlnaHQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBhZGp1c3RtZW50OiB7dHlwZTogJFNpbnQxNn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst csm_table_hint_1 = require(\"../text/csm-table-hint\");\nconst font_alignment_zone_1 = require(\"../text/font-alignment-zone\");\nconst _type_1 = require(\"./_type\");\nexports.$DefineFontAlignZones = new document_1.DocumentType({\n    properties: {\n        type: {\n            type: new literal_1.LiteralType({\n                type: _type_1.$TagType,\n                value: _type_1.TagType.DefineFontAlignZones,\n            }),\n        },\n        fontId: { type: uint16_1.$Uint16 },\n        csmTableHint: { type: csm_table_hint_1.$CsmTableHint },\n        zones: { type: new array_1.ArrayType({ itemType: font_alignment_zone_1.$FontAlignmentZone, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtZm9udC1hbGlnbi16b25lcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsMkRBQXFFO0FBQ3JFLHFFQUFvRjtBQUVwRixtQ0FBNEM7QUFTL0IsUUFBQSxxQkFBcUIsR0FBeUMsSUFBSSx1QkFBWSxDQUF1QjtJQUNoSCxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUU7WUFDSixJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDO2dCQUNwQixJQUFJLEVBQUUsZ0JBQVE7Z0JBQ2QsS0FBSyxFQUFFLGVBQU8sQ0FBQyxvQkFBb0Q7YUFDcEUsQ0FBQztTQUNIO1FBQ0QsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDdkIsWUFBWSxFQUFFLEVBQUMsSUFBSSxFQUFFLDhCQUFhLEVBQUM7UUFDbkMsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSx3Q0FBa0IsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUNsRjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZGVmaW5lLWZvbnQtYWxpZ24tem9uZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJENzbVRhYmxlSGludCwgQ3NtVGFibGVIaW50IH0gZnJvbSBcIi4uL3RleHQvY3NtLXRhYmxlLWhpbnRcIjtcbmltcG9ydCB7ICRGb250QWxpZ25tZW50Wm9uZSwgRm9udEFsaWdubWVudFpvbmUgfSBmcm9tIFwiLi4vdGV4dC9mb250LWFsaWdubWVudC16b25lXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZUZvbnRBbGlnblpvbmVzIGV4dGVuZHMgX1RhZyB7XG4gIHJlYWRvbmx5IHR5cGU6IFRhZ1R5cGUuRGVmaW5lRm9udEFsaWduWm9uZXM7XG4gIHJlYWRvbmx5IGZvbnRJZDogVWludDE2O1xuICByZWFkb25seSBjc21UYWJsZUhpbnQ6IENzbVRhYmxlSGludDtcbiAgcmVhZG9ubHkgem9uZXM6IFJlYWRvbmx5QXJyYXk8Rm9udEFsaWdubWVudFpvbmU+O1xufVxuXG5leHBvcnQgY29uc3QgJERlZmluZUZvbnRBbGlnblpvbmVzOiBEb2N1bWVudElvVHlwZTxEZWZpbmVGb250QWxpZ25ab25lcz4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZUZvbnRBbGlnblpvbmVzPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7XG4gICAgICB0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe1xuICAgICAgICB0eXBlOiAkVGFnVHlwZSxcbiAgICAgICAgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lRm9udEFsaWduWm9uZXMgYXMgVGFnVHlwZS5EZWZpbmVGb250QWxpZ25ab25lcyxcbiAgICAgIH0pLFxuICAgIH0sXG4gICAgZm9udElkOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgY3NtVGFibGVIaW50OiB7dHlwZTogJENzbVRhYmxlSGludH0sXG4gICAgem9uZXM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJEZvbnRBbGlnbm1lbnRab25lLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst font_alignment_zone_data_1 = require(\"./font-alignment-zone-data\");\nexports.$FontAlignmentZone = new document_1.DocumentType({\n    properties: {\n        data: { type: new array_1.ArrayType({ itemType: font_alignment_zone_data_1.$FontAlignmentZoneData, maxLength: Infinity }) },\n        hasX: { type: boolean_1.$Boolean },\n        hasY: { type: boolean_1.$Boolean },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9mb250LWFsaWdubWVudC16b25lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGdEQUE0QztBQUM1Qyw0Q0FBNkM7QUFDN0Msa0RBQW1FO0FBQ25FLHlFQUEyRjtBQVE5RSxRQUFBLGtCQUFrQixHQUFzQyxJQUFJLHVCQUFZLENBQW9CO0lBQ3ZHLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsaURBQXNCLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7UUFDcEYsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDdEIsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7S0FDdkI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXh0L2ZvbnQtYWxpZ25tZW50LXpvbmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQm9vbGVhbiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2Jvb2xlYW5cIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEFycmF5VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2FycmF5XCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7ICRGb250QWxpZ25tZW50Wm9uZURhdGEsIEZvbnRBbGlnbm1lbnRab25lRGF0YSB9IGZyb20gXCIuL2ZvbnQtYWxpZ25tZW50LXpvbmUtZGF0YVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEZvbnRBbGlnbm1lbnRab25lIHtcbiAgZGF0YTogRm9udEFsaWdubWVudFpvbmVEYXRhW107XG4gIGhhc1g6IGJvb2xlYW47XG4gIGhhc1k6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjb25zdCAkRm9udEFsaWdubWVudFpvbmU6IERvY3VtZW50SW9UeXBlPEZvbnRBbGlnbm1lbnRab25lPiA9IG5ldyBEb2N1bWVudFR5cGU8Rm9udEFsaWdubWVudFpvbmU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGRhdGE6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJEZvbnRBbGlnbm1lbnRab25lRGF0YSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBoYXNYOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGhhc1k6IHt0eXBlOiAkQm9vbGVhbn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst float64_1 = require(\"kryo/types/float64\");\nexports.$FontAlignmentZoneData = new document_1.DocumentType({\n    properties: {\n        origin: { type: new float64_1.Float64Type() },\n        size: { type: new float64_1.Float64Type() },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9mb250LWFsaWdubWVudC16b25lLWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQVFwQyxRQUFBLHNCQUFzQixHQUEwQyxJQUFJLHVCQUFZLENBQXdCO0lBQ25ILFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBQztRQUNqQyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxFQUFFLEVBQUM7S0FDaEM7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXh0L2ZvbnQtYWxpZ25tZW50LXpvbmUtZGF0YS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgRmxvYXQ2NFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9mbG9hdDY0XCI7XG5pbXBvcnQgeyBGbG9hdDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9udEFsaWdubWVudFpvbmVEYXRhIHtcbiAgb3JpZ2luOiBGbG9hdDE2O1xuICBzaXplOiBGbG9hdDE2O1xufVxuXG5leHBvcnQgY29uc3QgJEZvbnRBbGlnbm1lbnRab25lRGF0YTogRG9jdW1lbnRJb1R5cGU8Rm9udEFsaWdubWVudFpvbmVEYXRhPiA9IG5ldyBEb2N1bWVudFR5cGU8Rm9udEFsaWdubWVudFpvbmVEYXRhPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBvcmlnaW46IHt0eXBlOiBuZXcgRmxvYXQ2NFR5cGUoKX0sXG4gICAgc2l6ZToge3R5cGU6IG5ldyBGbG9hdDY0VHlwZSgpfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst ucs2_string_1 = require(\"kryo/types/ucs2-string\");\nconst language_code_1 = require(\"../language-code\");\nconst _type_1 = require(\"../tags/_type\");\nexports.$DefineFontInfo = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineFontInfo }) },\n        fontId: { type: uint16_1.$Uint16 },\n        fontName: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },\n        isSmall: { type: boolean_1.$Boolean },\n        isShiftJis: { type: boolean_1.$Boolean },\n        isAnsi: { type: boolean_1.$Boolean },\n        isItalic: { type: boolean_1.$Boolean },\n        isBold: { type: boolean_1.$Boolean },\n        language: { type: language_code_1.$LanguageCode, optional: true },\n        codeUnits: { type: new array_1.ArrayType({ itemType: uint16_1.$Uint16, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtZm9udC1pbmZvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsd0RBQXdEO0FBRXhELG9EQUErRDtBQUUvRCx5Q0FBa0Q7QUFlckMsUUFBQSxlQUFlLEdBQW1DLElBQUksdUJBQVksQ0FBaUI7SUFDOUYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsY0FBd0MsRUFBQyxDQUFDLEVBQUM7UUFDeEcsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDdkIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQzNELE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3pCLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzVCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3hCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzFCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3hCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSw2QkFBYSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDL0MsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxnQkFBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQzNFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9kZWZpbmUtZm9udC1pbmZvLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7IFVpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJExhbmd1YWdlQ29kZSwgTGFuZ3VhZ2VDb2RlIH0gZnJvbSBcIi4uL2xhbmd1YWdlLWNvZGVcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi4vdGFncy9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuLi90YWdzL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lRm9udEluZm8gZXh0ZW5kcyBfVGFnIHtcbiAgcmVhZG9ubHkgdHlwZTogVGFnVHlwZS5EZWZpbmVGb250SW5mbztcbiAgcmVhZG9ubHkgZm9udElkOiBVaW50MTY7XG4gIHJlYWRvbmx5IGZvbnROYW1lOiBzdHJpbmc7XG4gIHJlYWRvbmx5IGlzU21hbGw6IGJvb2xlYW47XG4gIHJlYWRvbmx5IGlzU2hpZnRKaXM6IGJvb2xlYW47XG4gIHJlYWRvbmx5IGlzQW5zaTogYm9vbGVhbjtcbiAgcmVhZG9ubHkgaXNJdGFsaWM6IGJvb2xlYW47XG4gIHJlYWRvbmx5IGlzQm9sZDogYm9vbGVhbjtcbiAgcmVhZG9ubHkgbGFuZ3VhZ2U/OiBMYW5ndWFnZUNvZGU7XG4gIHJlYWRvbmx5IGNvZGVVbml0czogUmVhZG9ubHlBcnJheTxVaW50MTY+O1xufVxuXG5leHBvcnQgY29uc3QgJERlZmluZUZvbnRJbmZvOiBEb2N1bWVudElvVHlwZTxEZWZpbmVGb250SW5mbz4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZUZvbnRJbmZvPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lRm9udEluZm8gYXMgVGFnVHlwZS5EZWZpbmVGb250SW5mb30pfSxcbiAgICBmb250SWQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBmb250TmFtZToge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBpc1NtYWxsOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGlzU2hpZnRKaXM6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgaXNBbnNpOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGlzSXRhbGljOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGlzQm9sZDoge3R5cGU6ICRCb29sZWFufSxcbiAgICBsYW5ndWFnZToge3R5cGU6ICRMYW5ndWFnZUNvZGUsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBjb2RlVW5pdHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJFVpbnQxNiwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst ucs2_string_1 = require(\"kryo/types/ucs2-string\");\nconst _type_1 = require(\"./_type\");\nexports.$DefineFontName = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineFontName }) },\n        fontId: { type: uint16_1.$Uint16 },\n        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },\n        copyright: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtZm9udC1uYW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELHdEQUF3RDtBQUd4RCxtQ0FBNEM7QUFTL0IsUUFBQSxlQUFlLEdBQW1DLElBQUksdUJBQVksQ0FBaUI7SUFDOUYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsY0FBd0MsRUFBQyxDQUFDLEVBQUM7UUFDeEcsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDdkIsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQ3ZELFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUM3RDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZGVmaW5lLWZvbnQtbmFtZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVY3MyU3RyaW5nVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3VjczItc3RyaW5nXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lRm9udE5hbWUgZXh0ZW5kcyBfVGFnIHtcbiAgcmVhZG9ubHkgdHlwZTogVGFnVHlwZS5EZWZpbmVGb250TmFtZTtcbiAgcmVhZG9ubHkgZm9udElkOiBVaW50MTY7XG4gIHJlYWRvbmx5IG5hbWU6IHN0cmluZztcbiAgcmVhZG9ubHkgY29weXJpZ2h0OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCAkRGVmaW5lRm9udE5hbWU6IERvY3VtZW50SW9UeXBlPERlZmluZUZvbnROYW1lPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lRm9udE5hbWU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5EZWZpbmVGb250TmFtZSBhcyBUYWdUeXBlLkRlZmluZUZvbnROYW1lfSl9LFxuICAgIGZvbnRJZDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIG5hbWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgY29weXJpZ2h0OiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bytes_1 = require(\"kryo/builtins/bytes\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst _type_1 = require(\"./_type\");\nexports.$DefineJpegTables = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineJpegTables }) },\n        data: { type: bytes_1.$Bytes },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtanBlZy10YWJsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQ0FBNkM7QUFDN0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsbUNBQTRDO0FBTy9CLFFBQUEsaUJBQWlCLEdBQXFDLElBQUksdUJBQVksQ0FBbUI7SUFDcEcsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsZ0JBQTRDLEVBQUMsQ0FBQyxFQUFDO1FBQzVHLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxjQUFNLEVBQUM7S0FDckI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2RlZmluZS1qcGVnLXRhYmxlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCeXRlcyB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2J5dGVzXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVKcGVnVGFibGVzIGV4dGVuZHMgX1RhZyB7XG4gIHJlYWRvbmx5IHR5cGU6IFRhZ1R5cGUuRGVmaW5lSnBlZ1RhYmxlcztcbiAgcmVhZG9ubHkgZGF0YTogVWludDhBcnJheTtcbn1cblxuZXhwb3J0IGNvbnN0ICREZWZpbmVKcGVnVGFibGVzOiBEb2N1bWVudElvVHlwZTxEZWZpbmVKcGVnVGFibGVzPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lSnBlZ1RhYmxlcz4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZUpwZWdUYWJsZXMgYXMgVGFnVHlwZS5EZWZpbmVKcGVnVGFibGVzfSl9LFxuICAgIGRhdGE6IHt0eXBlOiAkQnl0ZXN9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst morph_shape_1 = require(\"../morph-shape\");\nconst rect_1 = require(\"../rect\");\nconst _type_1 = require(\"./_type\");\nexports.$DefineMorphShape = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineMorphShape }) },\n        id: { type: uint16_1.$Uint16 },\n        bounds: { type: rect_1.$Rect },\n        morphBounds: { type: rect_1.$Rect },\n        edgeBounds: { type: rect_1.$Rect, optional: true },\n        morphEdgeBounds: { type: rect_1.$Rect, optional: true },\n        hasNonScalingStrokes: { type: boolean_1.$Boolean },\n        hasScalingStrokes: { type: boolean_1.$Boolean },\n        shape: { type: morph_shape_1.$MorphShape },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtbW9ycGgtc2hhcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtREFBaUQ7QUFDakQsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBRWpELGdEQUF5RDtBQUN6RCxrQ0FBc0M7QUFFdEMsbUNBQTRDO0FBZS9CLFFBQUEsaUJBQWlCLEdBQXFDLElBQUksdUJBQVksQ0FBbUI7SUFDcEcsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsZ0JBQTRDLEVBQUMsQ0FBQyxFQUFDO1FBQzVHLEVBQUUsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ25CLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxZQUFLLEVBQUM7UUFDckIsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLFlBQUssRUFBQztRQUMxQixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsWUFBSyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDekMsZUFBZSxFQUFFLEVBQUMsSUFBSSxFQUFFLFlBQUssRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQzlDLG9CQUFvQixFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDdEMsaUJBQWlCLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUNuQyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztLQUMzQjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZGVmaW5lLW1vcnBoLXNoYXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkTW9ycGhTaGFwZSwgTW9ycGhTaGFwZSB9IGZyb20gXCIuLi9tb3JwaC1zaGFwZVwiO1xuaW1wb3J0IHsgJFJlY3QsIFJlY3QgfSBmcm9tIFwiLi4vcmVjdFwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVNb3JwaFNoYXBlIGV4dGVuZHMgX1RhZyB7XG4gIHJlYWRvbmx5IHR5cGU6IFRhZ1R5cGUuRGVmaW5lTW9ycGhTaGFwZTtcbiAgcmVhZG9ubHkgaWQ6IFVpbnQxNjtcbiAgcmVhZG9ubHkgYm91bmRzOiBSZWN0O1xuICByZWFkb25seSBtb3JwaEJvdW5kczogUmVjdDtcbiAgLy8gVE9ETzogQ29tYmluZSBlZGdlQm91bmRzIGFuZCBtb3JwaEVkZ2VCb3VuZHMgaW4gc29tZXRoaW5nIGxpa2UgTW9ycGhSZWN0XG4gIHJlYWRvbmx5IGVkZ2VCb3VuZHM/OiBSZWN0O1xuICByZWFkb25seSBtb3JwaEVkZ2VCb3VuZHM/OiBSZWN0O1xuICByZWFkb25seSBoYXNOb25TY2FsaW5nU3Ryb2tlczogYm9vbGVhbjtcbiAgcmVhZG9ubHkgaGFzU2NhbGluZ1N0cm9rZXM6IGJvb2xlYW47XG4gIHJlYWRvbmx5IHNoYXBlOiBNb3JwaFNoYXBlO1xufVxuXG5leHBvcnQgY29uc3QgJERlZmluZU1vcnBoU2hhcGU6IERvY3VtZW50SW9UeXBlPERlZmluZU1vcnBoU2hhcGU+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVNb3JwaFNoYXBlPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lTW9ycGhTaGFwZSBhcyBUYWdUeXBlLkRlZmluZU1vcnBoU2hhcGV9KX0sXG4gICAgaWQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBib3VuZHM6IHt0eXBlOiAkUmVjdH0sXG4gICAgbW9ycGhCb3VuZHM6IHt0eXBlOiAkUmVjdH0sXG4gICAgZWRnZUJvdW5kczoge3R5cGU6ICRSZWN0LCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgbW9ycGhFZGdlQm91bmRzOiB7dHlwZTogJFJlY3QsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBoYXNOb25TY2FsaW5nU3Ryb2tlczoge3R5cGU6ICRCb29sZWFufSxcbiAgICBoYXNTY2FsaW5nU3Ryb2tlczoge3R5cGU6ICRCb29sZWFufSxcbiAgICBzaGFwZToge3R5cGU6ICRNb3JwaFNoYXBlfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst morph_shape_record_1 = require(\"./morph-shape-record\");\nconst morph_shape_styles_1 = require(\"./morph-shape-styles\");\nexports.$MorphShape = new document_1.DocumentType({\n    properties: {\n        initialStyles: { type: morph_shape_styles_1.$MorphShapeStyles },\n        records: { type: new array_1.ArrayType({ itemType: morph_shape_record_1.$MorphShapeRecord, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtc2hhcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSw2REFBMkU7QUFDM0UsNkRBQTJFO0FBUTlELFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsYUFBYSxFQUFFLEVBQUMsSUFBSSxFQUFFLHNDQUFpQixFQUFDO1FBQ3hDLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsc0NBQWlCLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDbkY7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJtb3JwaC1zaGFwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEFycmF5VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2FycmF5XCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7ICRNb3JwaFNoYXBlUmVjb3JkLCBNb3JwaFNoYXBlUmVjb3JkIH0gZnJvbSBcIi4vbW9ycGgtc2hhcGUtcmVjb3JkXCI7XG5pbXBvcnQgeyAkTW9ycGhTaGFwZVN0eWxlcywgTW9ycGhTaGFwZVN0eWxlcyB9IGZyb20gXCIuL21vcnBoLXNoYXBlLXN0eWxlc1wiO1xuaW1wb3J0IHsgU2hhcGUgfSBmcm9tIFwiLi9zaGFwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1vcnBoU2hhcGUgZXh0ZW5kcyBTaGFwZSB7XG4gIGluaXRpYWxTdHlsZXM6IE1vcnBoU2hhcGVTdHlsZXM7XG4gIHJlY29yZHM6IE1vcnBoU2hhcGVSZWNvcmRbXTtcbn1cblxuZXhwb3J0IGNvbnN0ICRNb3JwaFNoYXBlOiBEb2N1bWVudElvVHlwZTxNb3JwaFNoYXBlPiA9IG5ldyBEb2N1bWVudFR5cGU8TW9ycGhTaGFwZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgaW5pdGlhbFN0eWxlczoge3R5cGU6ICRNb3JwaFNoYXBlU3R5bGVzfSxcbiAgICByZWNvcmRzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRNb3JwaFNoYXBlUmVjb3JkLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tagged_union_1 = require(\"kryo/types/tagged-union\");\nconst shapeRecords = __importStar(require(\"./shape-records\"));\nexports.$MorphShapeRecord = new tagged_union_1.TaggedUnionType({\n    variants: [\n        shapeRecords.$MorphCurvedEdge,\n        shapeRecords.$MorphStraightEdge,\n        shapeRecords.$MorphStyleChange,\n    ],\n    tag: \"type\",\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtc2hhcGUtcmVjb3JkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLDBEQUEwRDtBQUMxRCw4REFBZ0Q7QUFPbkMsUUFBQSxpQkFBaUIsR0FBc0MsSUFBSSw4QkFBZSxDQUFtQjtJQUN4RyxRQUFRLEVBQUU7UUFDUixZQUFZLENBQUMsZ0JBQWdCO1FBQzdCLFlBQVksQ0FBQyxrQkFBa0I7UUFDL0IsWUFBWSxDQUFDLGlCQUFpQjtLQUMvQjtJQUNELEdBQUcsRUFBRSxNQUFNO0NBQ1osQ0FBQyxDQUFDIiwiZmlsZSI6Im1vcnBoLXNoYXBlLXJlY29yZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhZ2dlZFVuaW9uVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RhZ2dlZC11bmlvblwiO1xuaW1wb3J0ICogYXMgc2hhcGVSZWNvcmRzIGZyb20gXCIuL3NoYXBlLXJlY29yZHNcIjtcblxuZXhwb3J0IHR5cGUgTW9ycGhTaGFwZVJlY29yZCA9XG4gIHNoYXBlUmVjb3Jkcy5Nb3JwaEN1cnZlZEVkZ2VcbiAgfCBzaGFwZVJlY29yZHMuTW9ycGhTdHJhaWdodEVkZ2VcbiAgfCBzaGFwZVJlY29yZHMuTW9ycGhTdHlsZUNoYW5nZTtcblxuZXhwb3J0IGNvbnN0ICRNb3JwaFNoYXBlUmVjb3JkOiBUYWdnZWRVbmlvblR5cGU8TW9ycGhTaGFwZVJlY29yZD4gPSBuZXcgVGFnZ2VkVW5pb25UeXBlPE1vcnBoU2hhcGVSZWNvcmQ+KHtcbiAgdmFyaWFudHM6IFtcbiAgICBzaGFwZVJlY29yZHMuJE1vcnBoQ3VydmVkRWRnZSxcbiAgICBzaGFwZVJlY29yZHMuJE1vcnBoU3RyYWlnaHRFZGdlLFxuICAgIHNoYXBlUmVjb3Jkcy4kTW9ycGhTdHlsZUNoYW5nZSxcbiAgXSxcbiAgdGFnOiBcInR5cGVcIixcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst glyph_1 = require(\"../glyph\");\nconst _type_1 = require(\"./_type\");\nexports.$DefinePartialFont = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefinePartialFont }) },\n        id: { type: uint16_1.$Uint16 },\n        glyphs: { type: new array_1.ArrayType({ itemType: glyph_1.$Glyph, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtcGFydGlhbC1mb250LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1Qyw0Q0FBNkM7QUFDN0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUVqRCxvQ0FBeUM7QUFFekMsbUNBQTRDO0FBUS9CLFFBQUEsa0JBQWtCLEdBQXNDLElBQUksdUJBQVksQ0FBb0I7SUFDdkcsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsaUJBQThDLEVBQUMsQ0FBQyxFQUFDO1FBQzlHLEVBQUUsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ25CLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsY0FBTSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQ3ZFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9kZWZpbmUtcGFydGlhbC1mb250LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRHbHlwaCwgR2x5cGggfSBmcm9tIFwiLi4vZ2x5cGhcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lUGFydGlhbEZvbnQgZXh0ZW5kcyBfVGFnIHtcbiAgcmVhZG9ubHkgdHlwZTogVGFnVHlwZS5EZWZpbmVQYXJ0aWFsRm9udDtcbiAgcmVhZG9ubHkgaWQ6IFVpbnQxNjtcbiAgcmVhZG9ubHkgZ2x5cGhzOiBSZWFkb25seUFycmF5PEdseXBoPjtcbn1cblxuZXhwb3J0IGNvbnN0ICREZWZpbmVQYXJ0aWFsRm9udDogRG9jdW1lbnRJb1R5cGU8RGVmaW5lUGFydGlhbEZvbnQ+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVQYXJ0aWFsRm9udD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZVBhcnRpYWxGb250IGFzIFRhZ1R5cGUuRGVmaW5lUGFydGlhbEZvbnR9KX0sXG4gICAgaWQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBnbHlwaHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJEdseXBoLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst label_1 = require(\"../control/label\");\nconst scene_1 = require(\"../control/scene\");\nconst _type_1 = require(\"./_type\");\n// tslint:disable-next-line:max-line-length\nexports.$DefineSceneAndFrameLabelData = new document_1.DocumentType({\n    properties: {\n        type: {\n            type: new literal_1.LiteralType({\n                type: _type_1.$TagType,\n                value: _type_1.TagType.DefineSceneAndFrameLabelData,\n            }),\n        },\n        scenes: { type: new array_1.ArrayType({ itemType: scene_1.$Scene, maxLength: Infinity }) },\n        labels: { type: new array_1.ArrayType({ itemType: label_1.$Label, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtc2NlbmUtYW5kLWZyYW1lLWxhYmVsLWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsNENBQWlEO0FBQ2pELDRDQUFpRDtBQUVqRCxtQ0FBNEM7QUFRNUMsMkNBQTJDO0FBQzlCLFFBQUEsNkJBQTZCLEdBQWlELElBQUksdUJBQVksQ0FBK0I7SUFDeEksVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQztnQkFDcEIsSUFBSSxFQUFFLGdCQUFRO2dCQUNkLEtBQUssRUFBRSxlQUFPLENBQUMsNEJBQW9FO2FBQ3BGLENBQUM7U0FDSDtRQUNELE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsY0FBTSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQ3RFLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsY0FBTSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQ3ZFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9kZWZpbmUtc2NlbmUtYW5kLWZyYW1lLWxhYmVsLWRhdGEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRMYWJlbCwgTGFiZWwgfSBmcm9tIFwiLi4vY29udHJvbC9sYWJlbFwiO1xuaW1wb3J0IHsgJFNjZW5lLCBTY2VuZSB9IGZyb20gXCIuLi9jb250cm9sL3NjZW5lXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZVNjZW5lQW5kRnJhbWVMYWJlbERhdGEgZXh0ZW5kcyBfVGFnIHtcbiAgcmVhZG9ubHkgdHlwZTogVGFnVHlwZS5EZWZpbmVTY2VuZUFuZEZyYW1lTGFiZWxEYXRhO1xuICByZWFkb25seSBzY2VuZXM6IFJlYWRvbmx5QXJyYXk8U2NlbmU+O1xuICByZWFkb25seSBsYWJlbHM6IFJlYWRvbmx5QXJyYXk8TGFiZWw+O1xufVxuXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bWF4LWxpbmUtbGVuZ3RoXG5leHBvcnQgY29uc3QgJERlZmluZVNjZW5lQW5kRnJhbWVMYWJlbERhdGE6IERvY3VtZW50SW9UeXBlPERlZmluZVNjZW5lQW5kRnJhbWVMYWJlbERhdGE+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVTY2VuZUFuZEZyYW1lTGFiZWxEYXRhPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7XG4gICAgICB0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe1xuICAgICAgICB0eXBlOiAkVGFnVHlwZSxcbiAgICAgICAgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lU2NlbmVBbmRGcmFtZUxhYmVsRGF0YSBhcyBUYWdUeXBlLkRlZmluZVNjZW5lQW5kRnJhbWVMYWJlbERhdGEsXG4gICAgICB9KSxcbiAgICB9LFxuICAgIHNjZW5lczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkU2NlbmUsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgbGFiZWxzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRMYWJlbCwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst integer_1 = require(\"kryo/types/integer\");\nconst ucs2_string_1 = require(\"kryo/types/ucs2-string\");\nexports.$Label = new document_1.DocumentType({\n    properties: {\n        frame: { type: new integer_1.IntegerType() },\n        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29udHJvbC9sYWJlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELHdEQUF3RDtBQU8zQyxRQUFBLE1BQU0sR0FBMEIsSUFBSSx1QkFBWSxDQUFRO0lBQ25FLFVBQVUsRUFBRTtRQUNWLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBQztRQUNoQyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSw0QkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDeEQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJjb250cm9sL2xhYmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2ludGVnZXJcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcblxuZXhwb3J0IGludGVyZmFjZSBMYWJlbCB7XG4gIGZyYW1lOiBudW1iZXI7XG4gIG5hbWU6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0ICRMYWJlbDogRG9jdW1lbnRJb1R5cGU8TGFiZWw+ID0gbmV3IERvY3VtZW50VHlwZTxMYWJlbD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgZnJhbWU6IHt0eXBlOiBuZXcgSW50ZWdlclR5cGUoKX0sXG4gICAgbmFtZToge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst integer_1 = require(\"kryo/types/integer\");\nconst ucs2_string_1 = require(\"kryo/types/ucs2-string\");\nexports.$Scene = new document_1.DocumentType({\n    properties: {\n        offset: { type: new integer_1.IntegerType() },\n        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29udHJvbC9zY2VuZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELHdEQUF3RDtBQU8zQyxRQUFBLE1BQU0sR0FBMEIsSUFBSSx1QkFBWSxDQUFRO0lBQ25FLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBQztRQUNqQyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSw0QkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDeEQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJjb250cm9sL3NjZW5lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2ludGVnZXJcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTY2VuZSB7XG4gIG9mZnNldDogbnVtYmVyO1xuICBuYW1lOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCAkU2NlbmU6IERvY3VtZW50SW9UeXBlPFNjZW5lPiA9IG5ldyBEb2N1bWVudFR5cGU8U2NlbmU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIG9mZnNldDoge3R5cGU6IG5ldyBJbnRlZ2VyVHlwZSgpfSxcbiAgICBuYW1lOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst rect_1 = require(\"../rect\");\nconst shape_1 = require(\"../shape\");\nconst _type_1 = require(\"./_type\");\nexports.$DefineShape = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineShape }) },\n        id: { type: uint16_1.$Uint16 },\n        bounds: { type: rect_1.$Rect },\n        edgeBounds: { type: rect_1.$Rect, optional: true },\n        hasFillWinding: { type: boolean_1.$Boolean },\n        hasNonScalingStrokes: { type: boolean_1.$Boolean },\n        hasScalingStrokes: { type: boolean_1.$Boolean },\n        shape: { type: shape_1.$Shape },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtc2hhcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtREFBaUQ7QUFDakQsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBRWpELGtDQUFzQztBQUN0QyxvQ0FBeUM7QUFFekMsbUNBQTRDO0FBYS9CLFFBQUEsWUFBWSxHQUFnQyxJQUFJLHVCQUFZLENBQWM7SUFDckYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsV0FBa0MsRUFBQyxDQUFDLEVBQUM7UUFDbEcsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDbkIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLFlBQUssRUFBQztRQUNyQixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsWUFBSyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDekMsY0FBYyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDaEMsb0JBQW9CLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN0QyxpQkFBaUIsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ25DLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxjQUFNLEVBQUM7S0FDdEI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2RlZmluZS1zaGFwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJFJlY3QsIFJlY3QgfSBmcm9tIFwiLi4vcmVjdFwiO1xuaW1wb3J0IHsgJFNoYXBlLCBTaGFwZSB9IGZyb20gXCIuLi9zaGFwZVwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVTaGFwZSBleHRlbmRzIF9UYWcge1xuICByZWFkb25seSB0eXBlOiBUYWdUeXBlLkRlZmluZVNoYXBlO1xuICByZWFkb25seSBpZDogVWludDE2O1xuICByZWFkb25seSBib3VuZHM6IFJlY3Q7XG4gIHJlYWRvbmx5IGVkZ2VCb3VuZHM/OiBSZWN0O1xuICByZWFkb25seSBoYXNGaWxsV2luZGluZzogYm9vbGVhbjtcbiAgcmVhZG9ubHkgaGFzTm9uU2NhbGluZ1N0cm9rZXM6IGJvb2xlYW47XG4gIHJlYWRvbmx5IGhhc1NjYWxpbmdTdHJva2VzOiBib29sZWFuO1xuICByZWFkb25seSBzaGFwZTogU2hhcGU7XG59XG5cbmV4cG9ydCBjb25zdCAkRGVmaW5lU2hhcGU6IERvY3VtZW50SW9UeXBlPERlZmluZVNoYXBlPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lU2hhcGU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5EZWZpbmVTaGFwZSBhcyBUYWdUeXBlLkRlZmluZVNoYXBlfSl9LFxuICAgIGlkOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgYm91bmRzOiB7dHlwZTogJFJlY3R9LFxuICAgIGVkZ2VCb3VuZHM6IHt0eXBlOiAkUmVjdCwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGhhc0ZpbGxXaW5kaW5nOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGhhc05vblNjYWxpbmdTdHJva2VzOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGhhc1NjYWxpbmdTdHJva2VzOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHNoYXBlOiB7dHlwZTogJFNoYXBlfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst shape_record_1 = require(\"./shape-record\");\nconst shape_styles_1 = require(\"./shape-styles\");\nexports.$Shape = new document_1.DocumentType({\n    properties: {\n        initialStyles: { type: shape_styles_1.$ShapeStyles },\n        records: { type: new array_1.ArrayType({ itemType: shape_record_1.$ShapeRecord, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxpREFBMkQ7QUFDM0QsaURBQTJEO0FBTzlDLFFBQUEsTUFBTSxHQUEwQixJQUFJLHVCQUFZLENBQVE7SUFDbkUsVUFBVSxFQUFFO1FBQ1YsYUFBYSxFQUFFLEVBQUMsSUFBSSxFQUFFLDJCQUFZLEVBQUM7UUFDbkMsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSwyQkFBWSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQzlFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoic2hhcGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyAkU2hhcGVSZWNvcmQsIFNoYXBlUmVjb3JkIH0gZnJvbSBcIi4vc2hhcGUtcmVjb3JkXCI7XG5pbXBvcnQgeyAkU2hhcGVTdHlsZXMsIFNoYXBlU3R5bGVzIH0gZnJvbSBcIi4vc2hhcGUtc3R5bGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2hhcGUge1xuICBpbml0aWFsU3R5bGVzOiBTaGFwZVN0eWxlcztcbiAgcmVjb3JkczogU2hhcGVSZWNvcmRbXTtcbn1cblxuZXhwb3J0IGNvbnN0ICRTaGFwZTogRG9jdW1lbnRJb1R5cGU8U2hhcGU+ID0gbmV3IERvY3VtZW50VHlwZTxTaGFwZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgaW5pdGlhbFN0eWxlczoge3R5cGU6ICRTaGFwZVN0eWxlc30sXG4gICAgcmVjb3Jkczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkU2hhcGVSZWNvcmQsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bytes_1 = require(\"kryo/builtins/bytes\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst uint32_1 = require(\"kryo/builtins/uint32\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst audio_coding_format_1 = require(\"../sound/audio-coding-format\");\nconst sound_rate_1 = require(\"../sound/sound-rate\");\nconst sound_size_1 = require(\"../sound/sound-size\");\nconst sound_type_1 = require(\"../sound/sound-type\");\nconst _type_1 = require(\"../tags/_type\");\nexports.$DefineSound = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineSound }) },\n        id: { type: uint16_1.$Uint16 },\n        format: { type: audio_coding_format_1.$AudioCodingFormat },\n        soundRate: { type: sound_rate_1.$SoundRate },\n        soundSize: { type: sound_size_1.$SoundSize },\n        soundType: { type: sound_type_1.$SoundType },\n        sampleCount: { type: uint32_1.$Uint32 },\n        data: { type: bytes_1.$Bytes },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtc291bmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQ0FBNkM7QUFDN0MsaURBQStDO0FBQy9DLGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUVqRCxzRUFBcUY7QUFDckYsb0RBQTREO0FBQzVELG9EQUE0RDtBQUM1RCxvREFBNEQ7QUFFNUQseUNBQWtEO0FBYXJDLFFBQUEsWUFBWSxHQUFnQyxJQUFJLHVCQUFZLENBQWM7SUFDckYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsV0FBa0MsRUFBQyxDQUFDLEVBQUM7UUFDbEcsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDbkIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLHdDQUFrQixFQUFDO1FBQ2xDLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFDO1FBQzdCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFDO1FBQzdCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFDO1FBQzdCLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzVCLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxjQUFNLEVBQUM7S0FDckI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2RlZmluZS1zb3VuZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCeXRlcyB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2J5dGVzXCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyAkVWludDMyIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDMyXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDE2LCBVaW50MzIgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRBdWRpb0NvZGluZ0Zvcm1hdCwgQXVkaW9Db2RpbmdGb3JtYXQgfSBmcm9tIFwiLi4vc291bmQvYXVkaW8tY29kaW5nLWZvcm1hdFwiO1xuaW1wb3J0IHsgJFNvdW5kUmF0ZSwgU291bmRSYXRlIH0gZnJvbSBcIi4uL3NvdW5kL3NvdW5kLXJhdGVcIjtcbmltcG9ydCB7ICRTb3VuZFNpemUsIFNvdW5kU2l6ZSB9IGZyb20gXCIuLi9zb3VuZC9zb3VuZC1zaXplXCI7XG5pbXBvcnQgeyAkU291bmRUeXBlLCBTb3VuZFR5cGUgfSBmcm9tIFwiLi4vc291bmQvc291bmQtdHlwZVwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuLi90YWdzL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4uL3RhZ3MvX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVTb3VuZCBleHRlbmRzIF9UYWcge1xuICByZWFkb25seSB0eXBlOiBUYWdUeXBlLkRlZmluZVNvdW5kO1xuICByZWFkb25seSBpZDogVWludDE2O1xuICByZWFkb25seSBmb3JtYXQ6IEF1ZGlvQ29kaW5nRm9ybWF0O1xuICByZWFkb25seSBzb3VuZFJhdGU6IFNvdW5kUmF0ZTtcbiAgcmVhZG9ubHkgc291bmRTaXplOiBTb3VuZFNpemU7XG4gIHJlYWRvbmx5IHNvdW5kVHlwZTogU291bmRUeXBlO1xuICByZWFkb25seSBzYW1wbGVDb3VudDogVWludDMyO1xuICByZWFkb25seSBkYXRhOiBVaW50OEFycmF5O1xufVxuXG5leHBvcnQgY29uc3QgJERlZmluZVNvdW5kOiBEb2N1bWVudElvVHlwZTxEZWZpbmVTb3VuZD4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZVNvdW5kPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lU291bmQgYXMgVGFnVHlwZS5EZWZpbmVTb3VuZH0pfSxcbiAgICBpZDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIGZvcm1hdDoge3R5cGU6ICRBdWRpb0NvZGluZ0Zvcm1hdH0sXG4gICAgc291bmRSYXRlOiB7dHlwZTogJFNvdW5kUmF0ZX0sXG4gICAgc291bmRTaXplOiB7dHlwZTogJFNvdW5kU2l6ZX0sXG4gICAgc291bmRUeXBlOiB7dHlwZTogJFNvdW5kVHlwZX0sXG4gICAgc2FtcGxlQ291bnQ6IHt0eXBlOiAkVWludDMyfSxcbiAgICBkYXRhOiB7dHlwZTogJEJ5dGVzfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst sprite_tag_1 = require(\"../sprite-tag\");\nconst _type_1 = require(\"./_type\");\nexports.$DefineSprite = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineSprite }) },\n        id: { type: uint16_1.$Uint16 },\n        frameCount: { type: uint16_1.$Uint16 },\n        tags: { type: new array_1.ArrayType({ itemType: sprite_tag_1.$SpriteTag, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtc3ByaXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1Qyw0Q0FBNkM7QUFDN0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUVqRCw4Q0FBc0Q7QUFFdEQsbUNBQTRDO0FBUy9CLFFBQUEsYUFBYSxHQUFpQyxJQUFJLHVCQUFZLENBQWU7SUFDeEYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsWUFBb0MsRUFBQyxDQUFDLEVBQUM7UUFDcEcsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDbkIsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDM0IsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSx1QkFBVSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQ3pFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9kZWZpbmUtc3ByaXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRTcHJpdGVUYWcsIFNwcml0ZVRhZyB9IGZyb20gXCIuLi9zcHJpdGUtdGFnXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZVNwcml0ZSBleHRlbmRzIF9UYWcge1xuICByZWFkb25seSB0eXBlOiBUYWdUeXBlLkRlZmluZVNwcml0ZTtcbiAgcmVhZG9ubHkgaWQ6IFVpbnQxNjtcbiAgcmVhZG9ubHkgZnJhbWVDb3VudDogVWludDE2O1xuICByZWFkb25seSB0YWdzOiBSZWFkb25seUFycmF5PFNwcml0ZVRhZz47XG59XG5cbmV4cG9ydCBjb25zdCAkRGVmaW5lU3ByaXRlOiBEb2N1bWVudElvVHlwZTxEZWZpbmVTcHJpdGU+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVTcHJpdGU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5EZWZpbmVTcHJpdGUgYXMgVGFnVHlwZS5EZWZpbmVTcHJpdGV9KX0sXG4gICAgaWQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBmcmFtZUNvdW50OiB7dHlwZTogJFVpbnQxNn0sXG4gICAgdGFnczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkU3ByaXRlVGFnLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tagged_union_1 = require(\"kryo/types/tagged-union\");\nconst tags = __importStar(require(\"./tags/index\"));\nexports.$SpriteTag = new tagged_union_1.TaggedUnionType(() => ({\n    variants: [\n        tags.$DoAction,\n        tags.$DoInitAction,\n        tags.$FrameLabel,\n        tags.$PlaceObject,\n        tags.$RemoveObject,\n        tags.$ShowFrame,\n        tags.$SoundStreamBlock,\n        tags.$SoundStreamHead,\n        tags.$Unknown,\n    ],\n    tag: \"type\",\n}));\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc3ByaXRlLXRhZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSwwREFBMEQ7QUFDMUQsbURBQXFDO0FBYXhCLFFBQUEsVUFBVSxHQUErQixJQUFJLDhCQUFlLENBQVksR0FBRyxFQUFFLENBQUMsQ0FBQztJQUMxRixRQUFRLEVBQUU7UUFDUixJQUFJLENBQUMsU0FBUztRQUNkLElBQUksQ0FBQyxhQUFhO1FBQ2xCLElBQUksQ0FBQyxXQUFXO1FBQ2hCLElBQUksQ0FBQyxZQUFZO1FBQ2pCLElBQUksQ0FBQyxhQUFhO1FBQ2xCLElBQUksQ0FBQyxVQUFVO1FBQ2YsSUFBSSxDQUFDLGlCQUFpQjtRQUN0QixJQUFJLENBQUMsZ0JBQWdCO1FBQ3JCLElBQUksQ0FBQyxRQUFRO0tBQ2Q7SUFDRCxHQUFHLEVBQUUsTUFBTTtDQUNaLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6InNwcml0ZS10YWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUYWdnZWRVbmlvblR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90YWdnZWQtdW5pb25cIjtcbmltcG9ydCAqIGFzIHRhZ3MgZnJvbSBcIi4vdGFncy9pbmRleFwiO1xuXG5leHBvcnQgdHlwZSBTcHJpdGVUYWcgPVxuICB0YWdzLkRvQWN0aW9uXG4gIHwgdGFncy5Eb0luaXRBY3Rpb25cbiAgfCB0YWdzLkZyYW1lTGFiZWxcbiAgfCB0YWdzLlBsYWNlT2JqZWN0XG4gIHwgdGFncy5SZW1vdmVPYmplY3RcbiAgfCB0YWdzLlNob3dGcmFtZVxuICB8IHRhZ3MuU291bmRTdHJlYW1IZWFkXG4gIHwgdGFncy5Tb3VuZFN0cmVhbUJsb2NrXG4gIHwgdGFncy5Vbmtub3duO1xuXG5leHBvcnQgY29uc3QgJFNwcml0ZVRhZzogVGFnZ2VkVW5pb25UeXBlPFNwcml0ZVRhZz4gPSBuZXcgVGFnZ2VkVW5pb25UeXBlPFNwcml0ZVRhZz4oKCkgPT4gKHtcbiAgdmFyaWFudHM6IFtcbiAgICB0YWdzLiREb0FjdGlvbixcbiAgICB0YWdzLiREb0luaXRBY3Rpb24sXG4gICAgdGFncy4kRnJhbWVMYWJlbCxcbiAgICB0YWdzLiRQbGFjZU9iamVjdCxcbiAgICB0YWdzLiRSZW1vdmVPYmplY3QsXG4gICAgdGFncy4kU2hvd0ZyYW1lLFxuICAgIHRhZ3MuJFNvdW5kU3RyZWFtQmxvY2ssXG4gICAgdGFncy4kU291bmRTdHJlYW1IZWFkLFxuICAgIHRhZ3MuJFVua25vd24sXG4gIF0sXG4gIHRhZzogXCJ0eXBlXCIsXG59KSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst matrix_1 = require(\"../matrix\");\nconst rect_1 = require(\"../rect\");\nconst text_record_1 = require(\"../text/text-record\");\nconst _type_1 = require(\"./_type\");\nexports.$DefineText = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineText }) },\n        id: { type: uint16_1.$Uint16 },\n        bounds: { type: rect_1.$Rect },\n        matrix: { type: matrix_1.$Matrix },\n        records: { type: new array_1.ArrayType({ itemType: text_record_1.$TextRecord, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtdGV4dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsc0NBQTRDO0FBQzVDLGtDQUFzQztBQUN0QyxxREFBOEQ7QUFFOUQsbUNBQTRDO0FBVS9CLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsVUFBZ0MsRUFBQyxDQUFDLEVBQUM7UUFDaEcsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDbkIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLFlBQUssRUFBQztRQUNyQixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN2QixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLHlCQUFXLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDN0U7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2RlZmluZS10ZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRNYXRyaXgsIE1hdHJpeCB9IGZyb20gXCIuLi9tYXRyaXhcIjtcbmltcG9ydCB7ICRSZWN0LCBSZWN0IH0gZnJvbSBcIi4uL3JlY3RcIjtcbmltcG9ydCB7ICRUZXh0UmVjb3JkLCBUZXh0UmVjb3JkIH0gZnJvbSBcIi4uL3RleHQvdGV4dC1yZWNvcmRcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lVGV4dCBleHRlbmRzIF9UYWcge1xuICByZWFkb25seSB0eXBlOiBUYWdUeXBlLkRlZmluZVRleHQ7XG4gIHJlYWRvbmx5IGlkOiBVaW50MTY7XG4gIHJlYWRvbmx5IGJvdW5kczogUmVjdDtcbiAgcmVhZG9ubHkgbWF0cml4OiBNYXRyaXg7XG4gIHJlYWRvbmx5IHJlY29yZHM6IFJlYWRvbmx5QXJyYXk8VGV4dFJlY29yZD47XG59XG5cbmV4cG9ydCBjb25zdCAkRGVmaW5lVGV4dDogRG9jdW1lbnRJb1R5cGU8RGVmaW5lVGV4dD4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZVRleHQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5EZWZpbmVUZXh0IGFzIFRhZ1R5cGUuRGVmaW5lVGV4dH0pfSxcbiAgICBpZDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIGJvdW5kczoge3R5cGU6ICRSZWN0fSxcbiAgICBtYXRyaXg6IHt0eXBlOiAkTWF0cml4fSxcbiAgICByZWNvcmRzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRUZXh0UmVjb3JkLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sint16_1 = require(\"kryo/builtins/sint16\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst straight_s_rgba8_1 = require(\"../straight-s-rgba8\");\nconst glyph_entry_1 = require(\"./glyph-entry\");\nexports.$TextRecord = new document_1.DocumentType({\n    properties: {\n        fontId: { type: uint16_1.$Uint16, optional: true },\n        color: { type: straight_s_rgba8_1.$StraightSRgba8, optional: true },\n        offsetX: { type: sint16_1.$Sint16 },\n        offsetY: { type: sint16_1.$Sint16 },\n        fontSize: { type: uint16_1.$Uint16, optional: true },\n        entries: { type: new array_1.ArrayType({ itemType: glyph_entry_1.$GlyphEntry, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC90ZXh0LXJlY29yZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFFbkUsMERBQXNFO0FBQ3RFLCtDQUF3RDtBQVczQyxRQUFBLFdBQVcsR0FBK0IsSUFBSSx1QkFBWSxDQUFhO0lBQ2xGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDdkMsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtDQUFlLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUM5QyxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN4QixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN4QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQ3pDLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUseUJBQVcsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUM3RTtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRleHQvdGV4dC1yZWNvcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkU2ludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvc2ludDE2XCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBTaW50MTYsIFVpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJFN0cmFpZ2h0U1JnYmE4LCBTdHJhaWdodFNSZ2JhOCB9IGZyb20gXCIuLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5pbXBvcnQgeyAkR2x5cGhFbnRyeSwgR2x5cGhFbnRyeSB9IGZyb20gXCIuL2dseXBoLWVudHJ5XCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGV4dFJlY29yZCB7XG4gIGZvbnRJZD86IFVpbnQxNjtcbiAgY29sb3I/OiBTdHJhaWdodFNSZ2JhODtcbiAgb2Zmc2V0WDogU2ludDE2O1xuICBvZmZzZXRZOiBTaW50MTY7XG4gIGZvbnRTaXplPzogVWludDE2O1xuICBlbnRyaWVzOiBHbHlwaEVudHJ5W107XG59XG5cbmV4cG9ydCBjb25zdCAkVGV4dFJlY29yZDogRG9jdW1lbnRJb1R5cGU8VGV4dFJlY29yZD4gPSBuZXcgRG9jdW1lbnRUeXBlPFRleHRSZWNvcmQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGZvbnRJZDoge3R5cGU6ICRVaW50MTYsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBjb2xvcjoge3R5cGU6ICRTdHJhaWdodFNSZ2JhOCwgb3B0aW9uYWw6IHRydWV9LFxuICAgIG9mZnNldFg6IHt0eXBlOiAkU2ludDE2fSxcbiAgICBvZmZzZXRZOiB7dHlwZTogJFNpbnQxNn0sXG4gICAgZm9udFNpemU6IHt0eXBlOiAkVWludDE2LCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgZW50cmllczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkR2x5cGhFbnRyeSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sint32_1 = require(\"kryo/builtins/sint32\");\nconst uint32_1 = require(\"kryo/builtins/uint32\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nexports.$GlyphEntry = new document_1.DocumentType({\n    properties: {\n        index: { type: uint32_1.$Uint32 },\n        advance: { type: sint32_1.$Sint32 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9nbHlwaC1lbnRyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQVF0RCxRQUFBLFdBQVcsR0FBK0IsSUFBSSx1QkFBWSxDQUFhO0lBQ2xGLFVBQVUsRUFBRTtRQUNWLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3RCLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO0tBQ3pCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGV4dC9nbHlwaC1lbnRyeS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRTaW50MzIgfSBmcm9tIFwia3J5by9idWlsdGlucy9zaW50MzJcIjtcbmltcG9ydCB7ICRVaW50MzIgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MzJcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgU2ludDMyLCBVaW50MzIgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHbHlwaEVudHJ5IHtcbiAgaW5kZXg6IFVpbnQzMjtcbiAgYWR2YW5jZTogU2ludDMyO1xufVxuXG5leHBvcnQgY29uc3QgJEdseXBoRW50cnk6IERvY3VtZW50SW9UeXBlPEdseXBoRW50cnk+ID0gbmV3IERvY3VtZW50VHlwZTxHbHlwaEVudHJ5Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBpbmRleDoge3R5cGU6ICRVaW50MzJ9LFxuICAgIGFkdmFuY2U6IHt0eXBlOiAkU2ludDMyfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bytes_1 = require(\"kryo/builtins/bytes\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst _type_1 = require(\"./_type\");\nexports.$DoAction = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DoAction }) },\n        actions: { type: bytes_1.$Bytes },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kby1hY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQ0FBNkM7QUFDN0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsbUNBQTRDO0FBTy9CLFFBQUEsU0FBUyxHQUE2QixJQUFJLHVCQUFZLENBQVc7SUFDNUUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsUUFBNEIsRUFBQyxDQUFDLEVBQUM7UUFDNUYsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLGNBQU0sRUFBQztLQUN4QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZG8tYWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJ5dGVzIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYnl0ZXNcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERvQWN0aW9uIGV4dGVuZHMgX1RhZyB7XG4gIHJlYWRvbmx5IHR5cGU6IFRhZ1R5cGUuRG9BY3Rpb247XG4gIHJlYWRvbmx5IGFjdGlvbnM6IFVpbnQ4QXJyYXk7XG59XG5cbmV4cG9ydCBjb25zdCAkRG9BY3Rpb246IERvY3VtZW50SW9UeXBlPERvQWN0aW9uPiA9IG5ldyBEb2N1bWVudFR5cGU8RG9BY3Rpb24+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5Eb0FjdGlvbiBhcyBUYWdUeXBlLkRvQWN0aW9ufSl9LFxuICAgIGFjdGlvbnM6IHt0eXBlOiAkQnl0ZXN9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bytes_1 = require(\"kryo/builtins/bytes\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst _type_1 = require(\"./_type\");\nexports.$DoInitAction = new document_1.DocumentType(() => ({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DoInitAction }) },\n        spriteId: { type: uint16_1.$Uint16 },\n        actions: { type: bytes_1.$Bytes },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n}));\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kby1pbml0LWFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtDQUE2QztBQUM3QyxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFHakQsbUNBQTRDO0FBUS9CLFFBQUEsYUFBYSxHQUFpQyxJQUFJLHVCQUFZLENBQWUsR0FBRyxFQUFFLENBQUMsQ0FBQztJQUMvRixVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxZQUFvQyxFQUFDLENBQUMsRUFBQztRQUNwRyxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN6QixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsY0FBTSxFQUFDO0tBQ3hCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2RvLWluaXQtYWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJ5dGVzIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYnl0ZXNcIjtcbmltcG9ydCB7ICRVaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRG9Jbml0QWN0aW9uIGV4dGVuZHMgX1RhZyB7XG4gIHJlYWRvbmx5IHR5cGU6IFRhZ1R5cGUuRG9Jbml0QWN0aW9uO1xuICByZWFkb25seSBzcHJpdGVJZDogVWludDE2O1xuICByZWFkb25seSBhY3Rpb25zOiBVaW50OEFycmF5O1xufVxuXG5leHBvcnQgY29uc3QgJERvSW5pdEFjdGlvbjogRG9jdW1lbnRJb1R5cGU8RG9Jbml0QWN0aW9uPiA9IG5ldyBEb2N1bWVudFR5cGU8RG9Jbml0QWN0aW9uPigoKSA9PiAoe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLkRvSW5pdEFjdGlvbiBhcyBUYWdUeXBlLkRvSW5pdEFjdGlvbn0pfSxcbiAgICBzcHJpdGVJZDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIGFjdGlvbnM6IHt0eXBlOiAkQnl0ZXN9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSkpO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst ucs2_string_1 = require(\"kryo/types/ucs2-string\");\nconst _type_1 = require(\"./_type\");\nexports.$EnableDebugger = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.EnableDebugger }) },\n        password: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9lbmFibGUtZGVidWdnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBd0Q7QUFFeEQsbUNBQTRDO0FBTy9CLFFBQUEsZUFBZSxHQUFtQyxJQUFJLHVCQUFZLENBQWlCO0lBQzlGLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZ0JBQVEsRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLGNBQXdDLEVBQUMsQ0FBQyxFQUFDO1FBQ3hHLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUM1RDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZW5hYmxlLWRlYnVnZ2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRW5hYmxlRGVidWdnZXIgZXh0ZW5kcyBfVGFnIHtcbiAgcmVhZG9ubHkgdHlwZTogVGFnVHlwZS5FbmFibGVEZWJ1Z2dlcjtcbiAgcmVhZG9ubHkgcGFzc3dvcmQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0ICRFbmFibGVEZWJ1Z2dlcjogRG9jdW1lbnRJb1R5cGU8RW5hYmxlRGVidWdnZXI+ID0gbmV3IERvY3VtZW50VHlwZTxFbmFibGVEZWJ1Z2dlcj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLkVuYWJsZURlYnVnZ2VyIGFzIFRhZ1R5cGUuRW5hYmxlRGVidWdnZXJ9KX0sXG4gICAgcGFzc3dvcmQ6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst named_id_1 = require(\"../named-id\");\nconst _type_1 = require(\"./_type\");\nexports.$ExportAssets = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.ExportAssets }) },\n        assets: { type: new array_1.ArrayType({ itemType: named_id_1.$NamedId, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9leHBvcnQtYXNzZXRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELDBDQUFnRDtBQUVoRCxtQ0FBNEM7QUFPL0IsUUFBQSxhQUFhLEdBQWlDLElBQUksdUJBQVksQ0FBZTtJQUN4RixVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxZQUFvQyxFQUFDLENBQUMsRUFBQztRQUNwRyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLG1CQUFRLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDekU7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2V4cG9ydC1hc3NldHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICROYW1lZElkLCBOYW1lZElkIH0gZnJvbSBcIi4uL25hbWVkLWlkXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEV4cG9ydEFzc2V0cyBleHRlbmRzIF9UYWcge1xuICByZWFkb25seSB0eXBlOiBUYWdUeXBlLkV4cG9ydEFzc2V0cztcbiAgcmVhZG9ubHkgYXNzZXRzOiBSZWFkb25seUFycmF5PE5hbWVkSWQ+O1xufVxuXG5leHBvcnQgY29uc3QgJEV4cG9ydEFzc2V0czogRG9jdW1lbnRJb1R5cGU8RXhwb3J0QXNzZXRzPiA9IG5ldyBEb2N1bWVudFR5cGU8RXhwb3J0QXNzZXRzPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuRXhwb3J0QXNzZXRzIGFzIFRhZ1R5cGUuRXhwb3J0QXNzZXRzfSl9LFxuICAgIGFzc2V0czoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkTmFtZWRJZCwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst _type_1 = require(\"./_type\");\nexports.$FileAttributes = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.FileAttributes }) },\n        useDirectBlit: { type: boolean_1.$Boolean },\n        useGpu: { type: boolean_1.$Boolean },\n        hasMetadata: { type: boolean_1.$Boolean },\n        useAs3: { type: boolean_1.$Boolean },\n        noCrossDomainCaching: { type: boolean_1.$Boolean },\n        useRelativeUrls: { type: boolean_1.$Boolean },\n        useNetwork: { type: boolean_1.$Boolean },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9maWxlLWF0dHJpYnV0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtREFBaUQ7QUFDakQsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsbUNBQTRDO0FBYS9CLFFBQUEsZUFBZSxHQUFtQyxJQUFJLHVCQUFZLENBQWlCO0lBQzlGLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZ0JBQVEsRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLGNBQXdDLEVBQUMsQ0FBQyxFQUFDO1FBQ3hHLGFBQWEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQy9CLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3hCLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzdCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3hCLG9CQUFvQixFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDdEMsZUFBZSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDakMsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7S0FDN0I7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2ZpbGUtYXR0cmlidXRlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRmlsZUF0dHJpYnV0ZXMgZXh0ZW5kcyBfVGFnIHtcbiAgcmVhZG9ubHkgdHlwZTogVGFnVHlwZS5GaWxlQXR0cmlidXRlcztcbiAgcmVhZG9ubHkgdXNlRGlyZWN0QmxpdDogYm9vbGVhbjtcbiAgcmVhZG9ubHkgdXNlR3B1OiBib29sZWFuO1xuICByZWFkb25seSBoYXNNZXRhZGF0YTogYm9vbGVhbjtcbiAgcmVhZG9ubHkgdXNlQXMzOiBib29sZWFuO1xuICByZWFkb25seSBub0Nyb3NzRG9tYWluQ2FjaGluZzogYm9vbGVhbjtcbiAgcmVhZG9ubHkgdXNlUmVsYXRpdmVVcmxzOiBib29sZWFuO1xuICByZWFkb25seSB1c2VOZXR3b3JrOiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgJEZpbGVBdHRyaWJ1dGVzOiBEb2N1bWVudElvVHlwZTxGaWxlQXR0cmlidXRlcz4gPSBuZXcgRG9jdW1lbnRUeXBlPEZpbGVBdHRyaWJ1dGVzPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuRmlsZUF0dHJpYnV0ZXMgYXMgVGFnVHlwZS5GaWxlQXR0cmlidXRlc30pfSxcbiAgICB1c2VEaXJlY3RCbGl0OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHVzZUdwdToge3R5cGU6ICRCb29sZWFufSxcbiAgICBoYXNNZXRhZGF0YToge3R5cGU6ICRCb29sZWFufSxcbiAgICB1c2VBczM6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgbm9Dcm9zc0RvbWFpbkNhY2hpbmc6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgdXNlUmVsYXRpdmVVcmxzOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHVzZU5ldHdvcms6IHt0eXBlOiAkQm9vbGVhbn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst ucs2_string_1 = require(\"kryo/types/ucs2-string\");\nconst _type_1 = require(\"./_type\");\nexports.$FrameLabel = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.FrameLabel }) },\n        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },\n        isAnchor: { type: boolean_1.$Boolean },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9mcmFtZS1sYWJlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBd0Q7QUFFeEQsbUNBQTRDO0FBUS9CLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsVUFBZ0MsRUFBQyxDQUFDLEVBQUM7UUFDaEcsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQ3ZELFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO0tBQzNCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9mcmFtZS1sYWJlbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRnJhbWVMYWJlbCBleHRlbmRzIF9UYWcge1xuICByZWFkb25seSB0eXBlOiBUYWdUeXBlLkZyYW1lTGFiZWw7XG4gIHJlYWRvbmx5IG5hbWU6IHN0cmluZztcbiAgcmVhZG9ubHkgaXNBbmNob3I6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjb25zdCAkRnJhbWVMYWJlbDogRG9jdW1lbnRJb1R5cGU8RnJhbWVMYWJlbD4gPSBuZXcgRG9jdW1lbnRUeXBlPEZyYW1lTGFiZWw+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5GcmFtZUxhYmVsIGFzIFRhZ1R5cGUuRnJhbWVMYWJlbH0pfSxcbiAgICBuYW1lOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIGlzQW5jaG9yOiB7dHlwZTogJEJvb2xlYW59LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst ucs2_string_1 = require(\"kryo/types/ucs2-string\");\nconst named_id_1 = require(\"../named-id\");\nconst _type_1 = require(\"./_type\");\nexports.$ImportAssets = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.ImportAssets }) },\n        url: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },\n        assets: { type: new array_1.ArrayType({ itemType: named_id_1.$NamedId, maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9pbXBvcnQtYXNzZXRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELHdEQUF3RDtBQUN4RCwwQ0FBZ0Q7QUFFaEQsbUNBQTRDO0FBUS9CLFFBQUEsYUFBYSxHQUFpQyxJQUFJLHVCQUFZLENBQWU7SUFDeEYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsWUFBb0MsRUFBQyxDQUFDLEVBQUM7UUFDcEcsR0FBRyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQ3RELE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsbUJBQVEsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUN6RTtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvaW1wb3J0LWFzc2V0cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEFycmF5VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2FycmF5XCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWNzMlN0cmluZ1R5cGUgfSBmcm9tIFwia3J5by90eXBlcy91Y3MyLXN0cmluZ1wiO1xuaW1wb3J0IHsgJE5hbWVkSWQsIE5hbWVkSWQgfSBmcm9tIFwiLi4vbmFtZWQtaWRcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW1wb3J0QXNzZXRzIGV4dGVuZHMgX1RhZyB7XG4gIHJlYWRvbmx5IHR5cGU6IFRhZ1R5cGUuSW1wb3J0QXNzZXRzO1xuICByZWFkb25seSB1cmw6IHN0cmluZztcbiAgcmVhZG9ubHkgYXNzZXRzOiBSZWFkb25seUFycmF5PE5hbWVkSWQ+O1xufVxuXG5leHBvcnQgY29uc3QgJEltcG9ydEFzc2V0czogRG9jdW1lbnRJb1R5cGU8SW1wb3J0QXNzZXRzPiA9IG5ldyBEb2N1bWVudFR5cGU8SW1wb3J0QXNzZXRzPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuSW1wb3J0QXNzZXRzIGFzIFRhZ1R5cGUuSW1wb3J0QXNzZXRzfSl9LFxuICAgIHVybDoge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBhc3NldHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJE5hbWVkSWQsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst ucs2_string_1 = require(\"kryo/types/ucs2-string\");\nconst _type_1 = require(\"./_type\");\nexports.$Metadata = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.Metadata }) },\n        metadata: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9tZXRhZGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELHdEQUF3RDtBQUV4RCxtQ0FBNEM7QUFPL0IsUUFBQSxTQUFTLEdBQTZCLElBQUksdUJBQVksQ0FBVztJQUM1RSxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxRQUE0QixFQUFDLENBQUMsRUFBQztRQUM1RixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSw0QkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDNUQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL21ldGFkYXRhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWV0YWRhdGEgZXh0ZW5kcyBfVGFnIHtcbiAgcmVhZG9ubHkgdHlwZTogVGFnVHlwZS5NZXRhZGF0YTtcbiAgcmVhZG9ubHkgbWV0YWRhdGE6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0ICRNZXRhZGF0YTogRG9jdW1lbnRJb1R5cGU8TWV0YWRhdGE+ID0gbmV3IERvY3VtZW50VHlwZTxNZXRhZGF0YT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLk1ldGFkYXRhIGFzIFRhZ1R5cGUuTWV0YWRhdGF9KX0sXG4gICAgbWV0YWRhdGE6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst array_1 = require(\"kryo/types/array\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst ucs2_string_1 = require(\"kryo/types/ucs2-string\");\nconst blend_mode_1 = require(\"../blend-mode\");\nconst clip_actions_1 = require(\"../clip-actions\");\nconst color_transform_with_alpha_1 = require(\"../color-transform-with-alpha\");\nconst filter_1 = require(\"../filter\");\nconst matrix_1 = require(\"../matrix\");\nconst straight_s_rgba8_1 = require(\"../straight-s-rgba8\");\nconst _type_1 = require(\"./_type\");\nexports.$PlaceObject = new document_1.DocumentType(() => ({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.PlaceObject }) },\n        isUpdate: { type: boolean_1.$Boolean },\n        depth: { type: uint16_1.$Uint16 },\n        characterId: { type: uint16_1.$Uint16, optional: true },\n        matrix: { type: matrix_1.$Matrix, optional: true },\n        colorTransform: { type: color_transform_with_alpha_1.$ColorTransformWithAlpha, optional: true },\n        ratio: { type: uint16_1.$Uint16, optional: true },\n        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }), optional: true },\n        clipDepth: { type: uint16_1.$Uint16, optional: true },\n        filters: { type: new array_1.ArrayType({ itemType: filter_1.$Filter, maxLength: Infinity }), optional: true },\n        blendMode: { type: blend_mode_1.$BlendMode, optional: true },\n        bitmapCache: { type: boolean_1.$Boolean, optional: true },\n        visible: { type: boolean_1.$Boolean, optional: true },\n        backgroundColor: { type: straight_s_rgba8_1.$StraightSRgba8, optional: true },\n        clipActions: { type: new array_1.ArrayType({ itemType: clip_actions_1.$ClipActions, maxLength: Infinity }), optional: true },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n}));\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9wbGFjZS1vYmplY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtREFBaUQ7QUFDakQsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1Qyw0Q0FBNkM7QUFDN0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBd0Q7QUFFeEQsOENBQXNEO0FBQ3RELGtEQUE0RDtBQUM1RCw4RUFBa0c7QUFDbEcsc0NBQTRDO0FBQzVDLHNDQUE0QztBQUM1QywwREFBc0U7QUFFdEUsbUNBQTRDO0FBc0IvQixRQUFBLFlBQVksR0FBZ0MsSUFBSSx1QkFBWSxDQUFjLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDNUYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsV0FBa0MsRUFBQyxDQUFDLEVBQUM7UUFDbEcsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDMUIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDdEIsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUM1QyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQ3ZDLGNBQWMsRUFBRSxFQUFDLElBQUksRUFBRSxxREFBd0IsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQ2hFLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDdEMsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDdkUsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUMxQyxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLGdCQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUN4RixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQzdDLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDN0MsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUN6QyxlQUFlLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0NBQWUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQ3hELFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsMkJBQVksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO0tBQ2xHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL3BsYWNlLW9iamVjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVY3MyU3RyaW5nVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3VjczItc3RyaW5nXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRCbGVuZE1vZGUsIEJsZW5kTW9kZSB9IGZyb20gXCIuLi9ibGVuZC1tb2RlXCI7XG5pbXBvcnQgeyAkQ2xpcEFjdGlvbnMsIENsaXBBY3Rpb25zIH0gZnJvbSBcIi4uL2NsaXAtYWN0aW9uc1wiO1xuaW1wb3J0IHsgJENvbG9yVHJhbnNmb3JtV2l0aEFscGhhLCBDb2xvclRyYW5zZm9ybVdpdGhBbHBoYSB9IGZyb20gXCIuLi9jb2xvci10cmFuc2Zvcm0td2l0aC1hbHBoYVwiO1xuaW1wb3J0IHsgJEZpbHRlciwgRmlsdGVyIH0gZnJvbSBcIi4uL2ZpbHRlclwiO1xuaW1wb3J0IHsgJE1hdHJpeCwgTWF0cml4IH0gZnJvbSBcIi4uL21hdHJpeFwiO1xuaW1wb3J0IHsgJFN0cmFpZ2h0U1JnYmE4LCBTdHJhaWdodFNSZ2JhOCB9IGZyb20gXCIuLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBsYWNlT2JqZWN0IGV4dGVuZHMgX1RhZyB7XG4gIHJlYWRvbmx5IHR5cGU6IFRhZ1R5cGUuUGxhY2VPYmplY3Q7XG4gIHJlYWRvbmx5IGlzVXBkYXRlOiBib29sZWFuO1xuICByZWFkb25seSBkZXB0aDogVWludDE2O1xuICByZWFkb25seSBjaGFyYWN0ZXJJZD86IFVpbnQxNjtcbiAgcmVhZG9ubHkgY2xhc3NOYW1lPzogc3RyaW5nO1xuICByZWFkb25seSBtYXRyaXg/OiBNYXRyaXg7XG4gIHJlYWRvbmx5IGNvbG9yVHJhbnNmb3JtPzogQ29sb3JUcmFuc2Zvcm1XaXRoQWxwaGE7XG4gIC8vIFRPRE86IEJldHRlciB0eXBlPyBUaGUgcmF0aW8gaXMgYHJhdGlvIC8gKDEgPDwgMTYpYFxuICByZWFkb25seSByYXRpbz86IFVpbnQxNjtcbiAgcmVhZG9ubHkgbmFtZT86IHN0cmluZztcbiAgcmVhZG9ubHkgY2xpcERlcHRoPzogVWludDE2O1xuICByZWFkb25seSBmaWx0ZXJzPzogUmVhZG9ubHlBcnJheTxGaWx0ZXI+O1xuICByZWFkb25seSBibGVuZE1vZGU/OiBCbGVuZE1vZGU7XG4gIHJlYWRvbmx5IGJpdG1hcENhY2hlPzogYm9vbGVhbjtcbiAgcmVhZG9ubHkgdmlzaWJsZT86IGJvb2xlYW47XG4gIHJlYWRvbmx5IGJhY2tncm91bmRDb2xvcj86IFN0cmFpZ2h0U1JnYmE4O1xuICByZWFkb25seSBjbGlwQWN0aW9ucz86IFJlYWRvbmx5QXJyYXk8Q2xpcEFjdGlvbnM+O1xufVxuXG5leHBvcnQgY29uc3QgJFBsYWNlT2JqZWN0OiBEb2N1bWVudElvVHlwZTxQbGFjZU9iamVjdD4gPSBuZXcgRG9jdW1lbnRUeXBlPFBsYWNlT2JqZWN0PigoKSA9PiAoe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLlBsYWNlT2JqZWN0IGFzIFRhZ1R5cGUuUGxhY2VPYmplY3R9KX0sXG4gICAgaXNVcGRhdGU6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgZGVwdGg6IHt0eXBlOiAkVWludDE2fSxcbiAgICBjaGFyYWN0ZXJJZDoge3R5cGU6ICRVaW50MTYsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBtYXRyaXg6IHt0eXBlOiAkTWF0cml4LCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgY29sb3JUcmFuc2Zvcm06IHt0eXBlOiAkQ29sb3JUcmFuc2Zvcm1XaXRoQWxwaGEsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICByYXRpbzoge3R5cGU6ICRVaW50MTYsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBuYW1lOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBjbGlwRGVwdGg6IHt0eXBlOiAkVWludDE2LCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgZmlsdGVyczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkRmlsdGVyLCBtYXhMZW5ndGg6IEluZmluaXR5fSksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBibGVuZE1vZGU6IHt0eXBlOiAkQmxlbmRNb2RlLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgYml0bWFwQ2FjaGU6IHt0eXBlOiAkQm9vbGVhbiwgb3B0aW9uYWw6IHRydWV9LFxuICAgIHZpc2libGU6IHt0eXBlOiAkQm9vbGVhbiwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGJhY2tncm91bmRDb2xvcjoge3R5cGU6ICRTdHJhaWdodFNSZ2JhOCwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGNsaXBBY3Rpb25zOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRDbGlwQWN0aW9ucywgbWF4TGVuZ3RoOiBJbmZpbml0eX0pLCBvcHRpb25hbDogdHJ1ZX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bytes_1 = require(\"kryo/builtins/bytes\");\nconst uint8_1 = require(\"kryo/builtins/uint8\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst clip_event_flags_1 = require(\"./clip-event-flags\");\nexports.$ClipActions = new document_1.DocumentType({\n    properties: {\n        events: { type: clip_event_flags_1.$ClipEventFlags },\n        keyCode: { type: uint8_1.$Uint8, optional: true },\n        actions: { type: bytes_1.$Bytes },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY2xpcC1hY3Rpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0NBQTZDO0FBQzdDLCtDQUE2QztBQUM3QyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBRW5FLHlEQUFxRTtBQVF4RCxRQUFBLFlBQVksR0FBZ0MsSUFBSSx1QkFBWSxDQUFjO0lBQ3JGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxrQ0FBZSxFQUFDO1FBQy9CLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxjQUFNLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUN2QyxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsY0FBTSxFQUFDO0tBQ3hCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiY2xpcC1hY3Rpb25zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJ5dGVzIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYnl0ZXNcIjtcbmltcG9ydCB7ICRVaW50OCB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQ4XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IFVpbnQ4IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkQ2xpcEV2ZW50RmxhZ3MsIENsaXBFdmVudEZsYWdzIH0gZnJvbSBcIi4vY2xpcC1ldmVudC1mbGFnc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENsaXBBY3Rpb25zIHtcbiAgZXZlbnRzOiBDbGlwRXZlbnRGbGFncztcbiAga2V5Q29kZT86IFVpbnQ4O1xuICBhY3Rpb25zOiBVaW50OEFycmF5O1xufVxuXG5leHBvcnQgY29uc3QgJENsaXBBY3Rpb25zOiBEb2N1bWVudElvVHlwZTxDbGlwQWN0aW9ucz4gPSBuZXcgRG9jdW1lbnRUeXBlPENsaXBBY3Rpb25zPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBldmVudHM6IHt0eXBlOiAkQ2xpcEV2ZW50RmxhZ3N9LFxuICAgIGtleUNvZGU6IHt0eXBlOiAkVWludDgsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBhY3Rpb25zOiB7dHlwZTogJEJ5dGVzfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boolean_1 = require(\"kryo/builtins/boolean\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nexports.$ClipEventFlags = new document_1.DocumentType({\n    properties: {\n        keyUp: { type: boolean_1.$Boolean },\n        keyDown: { type: boolean_1.$Boolean },\n        mouseUp: { type: boolean_1.$Boolean },\n        mouseDown: { type: boolean_1.$Boolean },\n        mouseMove: { type: boolean_1.$Boolean },\n        unload: { type: boolean_1.$Boolean },\n        enterFrame: { type: boolean_1.$Boolean },\n        load: { type: boolean_1.$Boolean },\n        dragOver: { type: boolean_1.$Boolean },\n        rollOut: { type: boolean_1.$Boolean },\n        rollOver: { type: boolean_1.$Boolean },\n        releaseOutside: { type: boolean_1.$Boolean },\n        release: { type: boolean_1.$Boolean },\n        press: { type: boolean_1.$Boolean },\n        initialize: { type: boolean_1.$Boolean },\n        data: { type: boolean_1.$Boolean },\n        construct: { type: boolean_1.$Boolean },\n        keyPress: { type: boolean_1.$Boolean },\n        dragOut: { type: boolean_1.$Boolean },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY2xpcC1ldmVudC1mbGFncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxnREFBNEM7QUFDNUMsa0RBQW1FO0FBd0J0RCxRQUFBLGVBQWUsR0FBbUMsSUFBSSx1QkFBWSxDQUFpQjtJQUM5RixVQUFVLEVBQUU7UUFDVixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN2QixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN6QixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN6QixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMzQixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMzQixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN4QixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUM1QixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN0QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN6QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixjQUFjLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUNoQyxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN6QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN2QixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUM1QixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN0QixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMzQixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztLQUMxQjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImNsaXAtZXZlbnQtZmxhZ3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQm9vbGVhbiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2Jvb2xlYW5cIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENsaXBFdmVudEZsYWdzIHtcbiAgbG9hZDogYm9vbGVhbjtcbiAgZW50ZXJGcmFtZTogYm9vbGVhbjtcbiAgdW5sb2FkOiBib29sZWFuO1xuICBtb3VzZU1vdmU6IGJvb2xlYW47XG4gIG1vdXNlRG93bjogYm9vbGVhbjtcbiAgbW91c2VVcDogYm9vbGVhbjtcbiAga2V5RG93bjogYm9vbGVhbjtcbiAga2V5VXA6IGJvb2xlYW47XG4gIGRhdGE6IGJvb2xlYW47XG4gIGluaXRpYWxpemU6IGJvb2xlYW47XG4gIHByZXNzOiBib29sZWFuO1xuICByZWxlYXNlOiBib29sZWFuO1xuICByZWxlYXNlT3V0c2lkZTogYm9vbGVhbjtcbiAgcm9sbE92ZXI6IGJvb2xlYW47XG4gIHJvbGxPdXQ6IGJvb2xlYW47XG4gIGRyYWdPdmVyOiBib29sZWFuO1xuICBkcmFnT3V0OiBib29sZWFuO1xuICBrZXlQcmVzczogYm9vbGVhbjtcbiAgY29uc3RydWN0OiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgJENsaXBFdmVudEZsYWdzOiBEb2N1bWVudElvVHlwZTxDbGlwRXZlbnRGbGFncz4gPSBuZXcgRG9jdW1lbnRUeXBlPENsaXBFdmVudEZsYWdzPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBrZXlVcDoge3R5cGU6ICRCb29sZWFufSxcbiAgICBrZXlEb3duOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIG1vdXNlVXA6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgbW91c2VEb3duOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIG1vdXNlTW92ZToge3R5cGU6ICRCb29sZWFufSxcbiAgICB1bmxvYWQ6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgZW50ZXJGcmFtZToge3R5cGU6ICRCb29sZWFufSxcbiAgICBsb2FkOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGRyYWdPdmVyOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHJvbGxPdXQ6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgcm9sbE92ZXI6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgcmVsZWFzZU91dHNpZGU6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgcmVsZWFzZToge3R5cGU6ICRCb29sZWFufSxcbiAgICBwcmVzczoge3R5cGU6ICRCb29sZWFufSxcbiAgICBpbml0aWFsaXplOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGRhdGE6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgY29uc3RydWN0OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGtleVByZXNzOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGRyYWdPdXQ6IHt0eXBlOiAkQm9vbGVhbn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst _type_1 = require(\"./_type\");\nexports.$RemoveObject = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.RemoveObject }) },\n        characterId: { type: uint16_1.$Uint16, optional: true },\n        depth: { type: uint16_1.$Uint16 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9yZW1vdmUtb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBR2pELG1DQUE0QztBQVEvQixRQUFBLGFBQWEsR0FBaUMsSUFBSSx1QkFBWSxDQUFlO0lBQ3hGLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZ0JBQVEsRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLFlBQW9DLEVBQUMsQ0FBQyxFQUFDO1FBQ3BHLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDNUMsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7S0FDdkI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL3JlbW92ZS1vYmplY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlbW92ZU9iamVjdCBleHRlbmRzIF9UYWcge1xuICByZWFkb25seSB0eXBlOiBUYWdUeXBlLlJlbW92ZU9iamVjdDtcbiAgcmVhZG9ubHkgY2hhcmFjdGVySWQ/OiBVaW50MTY7XG4gIHJlYWRvbmx5IGRlcHRoOiBVaW50MTY7XG59XG5cbmV4cG9ydCBjb25zdCAkUmVtb3ZlT2JqZWN0OiBEb2N1bWVudElvVHlwZTxSZW1vdmVPYmplY3Q+ID0gbmV3IERvY3VtZW50VHlwZTxSZW1vdmVPYmplY3Q+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5SZW1vdmVPYmplY3QgYXMgVGFnVHlwZS5SZW1vdmVPYmplY3R9KX0sXG4gICAgY2hhcmFjdGVySWQ6IHt0eXBlOiAkVWludDE2LCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgZGVwdGg6IHt0eXBlOiAkVWludDE2fSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst s_rgb8_1 = require(\"../s-rgb8\");\nconst _type_1 = require(\"./_type\");\nexports.$SetBackgroundColor = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.SetBackgroundColor }) },\n        color: { type: s_rgb8_1.$SRgb8 },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9zZXQtYmFja2dyb3VuZC1jb2xvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELHNDQUEwQztBQUUxQyxtQ0FBNEM7QUFPL0IsUUFBQSxtQkFBbUIsR0FBdUMsSUFBSSx1QkFBWSxDQUFxQjtJQUMxRyxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxrQkFBZ0QsRUFBQyxDQUFDLEVBQUM7UUFDaEgsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGVBQU0sRUFBQztLQUN0QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3Mvc2V0LWJhY2tncm91bmQtY29sb3IuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJFNSZ2I4LCBTUmdiOCB9IGZyb20gXCIuLi9zLXJnYjhcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2V0QmFja2dyb3VuZENvbG9yIGV4dGVuZHMgX1RhZyB7XG4gIHJlYWRvbmx5IHR5cGU6IFRhZ1R5cGUuU2V0QmFja2dyb3VuZENvbG9yO1xuICByZWFkb25seSBjb2xvcjogU1JnYjg7XG59XG5cbmV4cG9ydCBjb25zdCAkU2V0QmFja2dyb3VuZENvbG9yOiBEb2N1bWVudElvVHlwZTxTZXRCYWNrZ3JvdW5kQ29sb3I+ID0gbmV3IERvY3VtZW50VHlwZTxTZXRCYWNrZ3JvdW5kQ29sb3I+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5TZXRCYWNrZ3JvdW5kQ29sb3IgYXMgVGFnVHlwZS5TZXRCYWNrZ3JvdW5kQ29sb3J9KX0sXG4gICAgY29sb3I6IHt0eXBlOiAkU1JnYjh9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst _type_1 = require(\"./_type\");\nexports.$ShowFrame = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.ShowFrame }) },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9zaG93LWZyYW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsbUNBQTRDO0FBTS9CLFFBQUEsVUFBVSxHQUE4QixJQUFJLHVCQUFZLENBQVk7SUFDL0UsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsU0FBOEIsRUFBQyxDQUFDLEVBQUM7S0FDL0Y7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL3Nob3ctZnJhbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTaG93RnJhbWUgZXh0ZW5kcyBfVGFnIHtcbiAgcmVhZG9ubHkgdHlwZTogVGFnVHlwZS5TaG93RnJhbWU7XG59XG5cbmV4cG9ydCBjb25zdCAkU2hvd0ZyYW1lOiBEb2N1bWVudElvVHlwZTxTaG93RnJhbWU+ID0gbmV3IERvY3VtZW50VHlwZTxTaG93RnJhbWU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5TaG93RnJhbWUgYXMgVGFnVHlwZS5TaG93RnJhbWV9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bytes_1 = require(\"kryo/builtins/bytes\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst _type_1 = require(\"./_type\");\nexports.$SoundStreamBlock = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.SoundStreamBlock }) },\n        data: { type: bytes_1.$Bytes },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9zb3VuZC1zdHJlYW0tYmxvY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQ0FBNkM7QUFDN0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsbUNBQTRDO0FBTy9CLFFBQUEsaUJBQWlCLEdBQXFDLElBQUksdUJBQVksQ0FBbUI7SUFDcEcsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsZ0JBQTRDLEVBQUMsQ0FBQyxFQUFDO1FBQzVHLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxjQUFNLEVBQUM7S0FDckI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL3NvdW5kLXN0cmVhbS1ibG9jay5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCeXRlcyB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2J5dGVzXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTb3VuZFN0cmVhbUJsb2NrIGV4dGVuZHMgX1RhZyB7XG4gIHJlYWRvbmx5IHR5cGU6IFRhZ1R5cGUuU291bmRTdHJlYW1CbG9jaztcbiAgcmVhZG9ubHkgZGF0YTogVWludDhBcnJheTtcbn1cblxuZXhwb3J0IGNvbnN0ICRTb3VuZFN0cmVhbUJsb2NrOiBEb2N1bWVudElvVHlwZTxTb3VuZFN0cmVhbUJsb2NrPiA9IG5ldyBEb2N1bWVudFR5cGU8U291bmRTdHJlYW1CbG9jaz4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLlNvdW5kU3RyZWFtQmxvY2sgYXMgVGFnVHlwZS5Tb3VuZFN0cmVhbUJsb2NrfSl9LFxuICAgIGRhdGE6IHt0eXBlOiAkQnl0ZXN9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sint16_1 = require(\"kryo/builtins/sint16\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst audio_coding_format_1 = require(\"../sound/audio-coding-format\");\nconst sound_rate_1 = require(\"../sound/sound-rate\");\nconst sound_size_1 = require(\"../sound/sound-size\");\nconst sound_type_1 = require(\"../sound/sound-type\");\nconst _type_1 = require(\"./_type\");\nexports.$SoundStreamHead = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.SoundStreamHead }) },\n        playbackSoundRate: { type: sound_rate_1.$SoundRate },\n        playbackSoundSize: { type: sound_size_1.$SoundSize },\n        playbackSoundType: { type: sound_type_1.$SoundType },\n        streamSoundCompression: { type: audio_coding_format_1.$AudioCodingFormat },\n        streamSoundRate: { type: sound_rate_1.$SoundRate },\n        streamSoundSize: { type: new literal_1.LiteralType({ type: sound_size_1.$SoundSize, value: 16 }) },\n        streamSoundType: { type: sound_type_1.$SoundType },\n        streamSoundSampleCount: { type: uint16_1.$Uint16 },\n        latencySeek: { type: sint16_1.$Sint16, optional: true },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9zb3VuZC1zdHJlYW0taGVhZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsc0VBQXFGO0FBQ3JGLG9EQUE0RDtBQUM1RCxvREFBNEQ7QUFDNUQsb0RBQTREO0FBRTVELG1DQUE0QztBQWUvQixRQUFBLGdCQUFnQixHQUFvQyxJQUFJLHVCQUFZLENBQWtCO0lBQ2pHLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZ0JBQVEsRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLGVBQTBDLEVBQUMsQ0FBQyxFQUFDO1FBQzFHLGlCQUFpQixFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDckMsaUJBQWlCLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUNyQyxpQkFBaUIsRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFDO1FBQ3JDLHNCQUFzQixFQUFFLEVBQUMsSUFBSSxFQUFFLHdDQUFrQixFQUFDO1FBQ2xELGVBQWUsRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFDO1FBQ25DLGVBQWUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBRSxLQUFLLEVBQUUsRUFBUSxFQUFDLENBQUMsRUFBQztRQUM3RSxlQUFlLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUNuQyxzQkFBc0IsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3ZDLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7S0FDN0M7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL3NvdW5kLXN0cmVhbS1oZWFkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFNpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3NpbnQxNlwiO1xuaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFNpbnQxNiwgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkQXVkaW9Db2RpbmdGb3JtYXQsIEF1ZGlvQ29kaW5nRm9ybWF0IH0gZnJvbSBcIi4uL3NvdW5kL2F1ZGlvLWNvZGluZy1mb3JtYXRcIjtcbmltcG9ydCB7ICRTb3VuZFJhdGUsIFNvdW5kUmF0ZSB9IGZyb20gXCIuLi9zb3VuZC9zb3VuZC1yYXRlXCI7XG5pbXBvcnQgeyAkU291bmRTaXplLCBTb3VuZFNpemUgfSBmcm9tIFwiLi4vc291bmQvc291bmQtc2l6ZVwiO1xuaW1wb3J0IHsgJFNvdW5kVHlwZSwgU291bmRUeXBlIH0gZnJvbSBcIi4uL3NvdW5kL3NvdW5kLXR5cGVcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU291bmRTdHJlYW1IZWFkIGV4dGVuZHMgX1RhZyB7XG4gIHJlYWRvbmx5IHR5cGU6IFRhZ1R5cGUuU291bmRTdHJlYW1IZWFkO1xuICByZWFkb25seSBwbGF5YmFja1NvdW5kUmF0ZTogU291bmRSYXRlO1xuICByZWFkb25seSBwbGF5YmFja1NvdW5kU2l6ZTogU291bmRTaXplO1xuICByZWFkb25seSBwbGF5YmFja1NvdW5kVHlwZTogU291bmRUeXBlO1xuICByZWFkb25seSBzdHJlYW1Tb3VuZENvbXByZXNzaW9uOiBBdWRpb0NvZGluZ0Zvcm1hdDtcbiAgcmVhZG9ubHkgc3RyZWFtU291bmRSYXRlOiBTb3VuZFJhdGU7XG4gIHJlYWRvbmx5IHN0cmVhbVNvdW5kU2l6ZTogU291bmRTaXplO1xuICByZWFkb25seSBzdHJlYW1Tb3VuZFR5cGU6IFNvdW5kVHlwZTtcbiAgcmVhZG9ubHkgc3RyZWFtU291bmRTYW1wbGVDb3VudDogVWludDE2O1xuICByZWFkb25seSBsYXRlbmN5U2Vlaz86IFNpbnQxNjtcbn1cblxuZXhwb3J0IGNvbnN0ICRTb3VuZFN0cmVhbUhlYWQ6IERvY3VtZW50SW9UeXBlPFNvdW5kU3RyZWFtSGVhZD4gPSBuZXcgRG9jdW1lbnRUeXBlPFNvdW5kU3RyZWFtSGVhZD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLlNvdW5kU3RyZWFtSGVhZCBhcyBUYWdUeXBlLlNvdW5kU3RyZWFtSGVhZH0pfSxcbiAgICBwbGF5YmFja1NvdW5kUmF0ZToge3R5cGU6ICRTb3VuZFJhdGV9LFxuICAgIHBsYXliYWNrU291bmRTaXplOiB7dHlwZTogJFNvdW5kU2l6ZX0sXG4gICAgcGxheWJhY2tTb3VuZFR5cGU6IHt0eXBlOiAkU291bmRUeXBlfSxcbiAgICBzdHJlYW1Tb3VuZENvbXByZXNzaW9uOiB7dHlwZTogJEF1ZGlvQ29kaW5nRm9ybWF0fSxcbiAgICBzdHJlYW1Tb3VuZFJhdGU6IHt0eXBlOiAkU291bmRSYXRlfSxcbiAgICBzdHJlYW1Tb3VuZFNpemU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRTb3VuZFNpemUsIHZhbHVlOiAxNiBhcyAxNn0pfSxcbiAgICBzdHJlYW1Tb3VuZFR5cGU6IHt0eXBlOiAkU291bmRUeXBlfSxcbiAgICBzdHJlYW1Tb3VuZFNhbXBsZUNvdW50OiB7dHlwZTogJFVpbnQxNn0sXG4gICAgbGF0ZW5jeVNlZWs6IHt0eXBlOiAkU2ludDE2LCBvcHRpb25hbDogdHJ1ZX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bytes_1 = require(\"kryo/builtins/bytes\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst _type_1 = require(\"./_type\");\nexports.$Telemetry = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.Telemetry }) },\n        password: { type: bytes_1.$Bytes, optional: true },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy90ZWxlbWV0cnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQ0FBNkM7QUFDN0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsbUNBQTRDO0FBTy9CLFFBQUEsVUFBVSxHQUE4QixJQUFJLHVCQUFZLENBQVk7SUFDL0UsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsU0FBOEIsRUFBQyxDQUFDLEVBQUM7UUFDOUYsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGNBQU0sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO0tBQ3pDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy90ZWxlbWV0cnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQnl0ZXMgfSBmcm9tIFwia3J5by9idWlsdGlucy9ieXRlc1wiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGVsZW1ldHJ5IGV4dGVuZHMgX1RhZyB7XG4gIHJlYWRvbmx5IHR5cGU6IFRhZ1R5cGUuVGVsZW1ldHJ5O1xuICByZWFkb25seSBwYXNzd29yZD86IFVpbnQ4QXJyYXk7XG59XG5cbmV4cG9ydCBjb25zdCAkVGVsZW1ldHJ5OiBEb2N1bWVudElvVHlwZTxUZWxlbWV0cnk+ID0gbmV3IERvY3VtZW50VHlwZTxUZWxlbWV0cnk+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5UZWxlbWV0cnkgYXMgVGFnVHlwZS5UZWxlbWV0cnl9KX0sXG4gICAgcGFzc3dvcmQ6IHt0eXBlOiAkQnl0ZXMsIG9wdGlvbmFsOiB0cnVlfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bytes_1 = require(\"kryo/builtins/bytes\");\nconst uint16_1 = require(\"kryo/builtins/uint16\");\nconst case_style_1 = require(\"kryo/case-style\");\nconst document_1 = require(\"kryo/types/document\");\nconst literal_1 = require(\"kryo/types/literal\");\nconst _type_1 = require(\"./_type\");\nexports.$Unknown = new document_1.DocumentType({\n    properties: {\n        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.Unknown }) },\n        code: { type: uint16_1.$Uint16 },\n        data: { type: bytes_1.$Bytes },\n    },\n    changeCase: case_style_1.CaseStyle.SnakeCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy91bmtub3duLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0NBQTZDO0FBQzdDLGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUdqRCxtQ0FBNEM7QUFRL0IsUUFBQSxRQUFRLEdBQTRCLElBQUksdUJBQVksQ0FBVTtJQUN6RSxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxPQUEwQixFQUFDLENBQUMsRUFBQztRQUMxRixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUNyQixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsY0FBTSxFQUFDO0tBQ3JCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy91bmtub3duLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJ5dGVzIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYnl0ZXNcIjtcbmltcG9ydCB7ICRVaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVW5rbm93biBleHRlbmRzIF9UYWcge1xuICByZWFkb25seSB0eXBlOiBUYWdUeXBlLlVua25vd247XG4gIHJlYWRvbmx5IGNvZGU6IFVpbnQxNjtcbiAgcmVhZG9ubHkgZGF0YTogVWludDhBcnJheTtcbn1cblxuZXhwb3J0IGNvbnN0ICRVbmtub3duOiBEb2N1bWVudElvVHlwZTxVbmtub3duPiA9IG5ldyBEb2N1bWVudFR5cGU8VW5rbm93bj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLlVua25vd24gYXMgVGFnVHlwZS5Vbmtub3dufSl9LFxuICAgIGNvZGU6IHt0eXBlOiAkVWludDE2fSxcbiAgICBkYXRhOiB7dHlwZTogJEJ5dGVzfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar csm_table_hint_1 = require(\"./csm-table-hint\");\nexports.CsmTableHint = csm_table_hint_1.CsmTableHint;\nvar grid_fitting_1 = require(\"./grid-fitting\");\nexports.GridFitting = grid_fitting_1.GridFitting;\nvar text_alignment_1 = require(\"./text-alignment\");\nexports.TextAlignment = text_alignment_1.TextAlignment;\nvar text_renderer_1 = require(\"./text-renderer\");\nexports.TextRenderer = text_renderer_1.TextRenderer;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUE4QztBQUF0Qyx3Q0FBQSxZQUFZLENBQUE7QUFLcEIsK0NBQTJDO0FBQW5DLHFDQUFBLFdBQVcsQ0FBQTtBQUVuQixtREFBK0M7QUFBdkMseUNBQUEsYUFBYSxDQUFBO0FBRXJCLGlEQUE2QztBQUFyQyx1Q0FBQSxZQUFZLENBQUEiLCJmaWxlIjoidGV4dC9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7Q3NtVGFibGVIaW50fSBmcm9tIFwiLi9jc20tdGFibGUtaGludFwiO1xuZXhwb3J0IHtGb250QWxpZ25tZW50Wm9uZX0gZnJvbSBcIi4vZm9udC1hbGlnbm1lbnQtem9uZVwiO1xuZXhwb3J0IHtGb250QWxpZ25tZW50Wm9uZURhdGF9IGZyb20gXCIuL2ZvbnQtYWxpZ25tZW50LXpvbmUtZGF0YVwiO1xuZXhwb3J0IHtGb250TGF5b3V0fSBmcm9tIFwiLi9mb250LWxheW91dFwiO1xuZXhwb3J0IHtHbHlwaEVudHJ5fSBmcm9tIFwiLi9nbHlwaC1lbnRyeVwiO1xuZXhwb3J0IHtHcmlkRml0dGluZ30gZnJvbSBcIi4vZ3JpZC1maXR0aW5nXCI7XG5leHBvcnQge0tlcm5pbmdSZWNvcmR9IGZyb20gXCIuL2tlcm5pbmctcmVjb3JkXCI7XG5leHBvcnQge1RleHRBbGlnbm1lbnR9IGZyb20gXCIuL3RleHQtYWxpZ25tZW50XCI7XG5leHBvcnQge1RleHRSZWNvcmR9IGZyb20gXCIuL3RleHQtcmVjb3JkXCI7XG5leHBvcnQge1RleHRSZW5kZXJlcn0gZnJvbSBcIi4vdGV4dC1yZW5kZXJlclwiO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar CompressionMethod;\n(function (CompressionMethod) {\n    CompressionMethod[CompressionMethod[\"None\"] = 0] = \"None\";\n    CompressionMethod[CompressionMethod[\"Deflate\"] = 1] = \"Deflate\";\n    CompressionMethod[CompressionMethod[\"Lzma\"] = 2] = \"Lzma\";\n})(CompressionMethod = exports.CompressionMethod || (exports.CompressionMethod = {}));\nexports.$CompressionMethod = new ts_enum_1.TsEnumType({\n    enum: CompressionMethod,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29tcHJlc3Npb24tbWV0aG9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGdEQUFnRDtBQUVoRCxJQUFZLGlCQUlYO0FBSkQsV0FBWSxpQkFBaUI7SUFDM0IseURBQUksQ0FBQTtJQUNKLCtEQUFPLENBQUE7SUFDUCx5REFBSSxDQUFBO0FBQ04sQ0FBQyxFQUpXLGlCQUFpQixHQUFqQix5QkFBaUIsS0FBakIseUJBQWlCLFFBSTVCO0FBRVksUUFBQSxrQkFBa0IsR0FBa0MsSUFBSSxvQkFBVSxDQUFvQjtJQUNqRyxJQUFJLEVBQUUsaUJBQWlCO0lBQ3ZCLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImNvbXByZXNzaW9uLW1ldGhvZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIENvbXByZXNzaW9uTWV0aG9kIHtcbiAgTm9uZSxcbiAgRGVmbGF0ZSxcbiAgTHptYSxcbn1cblxuZXhwb3J0IGNvbnN0ICRDb21wcmVzc2lvbk1ldGhvZDogVHNFbnVtVHlwZTxDb21wcmVzc2lvbk1ldGhvZD4gPSBuZXcgVHNFbnVtVHlwZTxDb21wcmVzc2lvbk1ldGhvZD4oe1xuICBlbnVtOiBDb21wcmVzc2lvbk1ldGhvZCxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fixed_point_1 = require(\"./fixed-point\");\n// tslint:disable-next-line:variable-name\nexports.Ufixed8P8 = fixed_point_1.createFixedPoint({\n    signed: false,\n    intBits: 8,\n    fracBits: 8,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZml4ZWQtcG9pbnQvdWZpeGVkOHA4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsK0NBQW9GO0FBSXBGLHlDQUF5QztBQUM1QixRQUFBLFNBQVMsR0FBMEIsOEJBQWdCLENBQUM7SUFDL0QsTUFBTSxFQUFFLEtBQUs7SUFDYixPQUFPLEVBQUUsQ0FBQztJQUNWLFFBQVEsRUFBRSxDQUFDO0NBQ1osQ0FBQyxDQUFDIiwiZmlsZSI6ImZpeGVkLXBvaW50L3VmaXhlZDhwOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhZ2dlZCB9IGZyb20gXCJ0cy10YWdnZWRcIjtcbmltcG9ydCB7IGNyZWF0ZUZpeGVkUG9pbnQsIEZpeGVkUG9pbnQsIEZpeGVkUG9pbnRDb25zdHJ1Y3RvciB9IGZyb20gXCIuL2ZpeGVkLXBvaW50XCI7XG5cbmV4cG9ydCB0eXBlIFVmaXhlZDhQOCA9IFRhZ2dlZDxGaXhlZFBvaW50LCBcIlVmaXhlZDhQOFwiPjtcblxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOnZhcmlhYmxlLW5hbWVcbmV4cG9ydCBjb25zdCBVZml4ZWQ4UDg6IEZpeGVkUG9pbnRDb25zdHJ1Y3RvciA9IGNyZWF0ZUZpeGVkUG9pbnQoe1xuICBzaWduZWQ6IGZhbHNlLFxuICBpbnRCaXRzOiA4LFxuICBmcmFjQml0czogOCxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fixed_point_1 = require(\"./fixed-point\");\n// tslint:disable-next-line:variable-name\nexports.Ufixed16P16 = fixed_point_1.createFixedPoint({\n    signed: false,\n    intBits: 16,\n    fracBits: 16,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZml4ZWQtcG9pbnQvdWZpeGVkMTZwMTYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSwrQ0FBb0Y7QUFJcEYseUNBQXlDO0FBQzVCLFFBQUEsV0FBVyxHQUEwQiw4QkFBZ0IsQ0FBQztJQUNqRSxNQUFNLEVBQUUsS0FBSztJQUNiLE9BQU8sRUFBRSxFQUFFO0lBQ1gsUUFBUSxFQUFFLEVBQUU7Q0FDYixDQUFDLENBQUMiLCJmaWxlIjoiZml4ZWQtcG9pbnQvdWZpeGVkMTZwMTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUYWdnZWQgfSBmcm9tIFwidHMtdGFnZ2VkXCI7XG5pbXBvcnQgeyBjcmVhdGVGaXhlZFBvaW50LCBGaXhlZFBvaW50LCBGaXhlZFBvaW50Q29uc3RydWN0b3IgfSBmcm9tIFwiLi9maXhlZC1wb2ludFwiO1xuXG5leHBvcnQgdHlwZSBVZml4ZWQxNlAxNiA9IFRhZ2dlZDxGaXhlZFBvaW50LCBcIlVmaXhlZDE2UDE2XCI+O1xuXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6dmFyaWFibGUtbmFtZVxuZXhwb3J0IGNvbnN0IFVmaXhlZDE2UDE2OiBGaXhlZFBvaW50Q29uc3RydWN0b3IgPSBjcmVhdGVGaXhlZFBvaW50KHtcbiAgc2lnbmVkOiBmYWxzZSxcbiAgaW50Qml0czogMTYsXG4gIGZyYWNCaXRzOiAxNixcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst canvas_1 = __importDefault(require(\"canvas\"));\nconst decode_x_swf_bmp_1 = require(\"../decode-x-swf-bmp\");\nclass NodeCanvasBitmapService {\n    constructor() {\n        this.bitmaps = new Map();\n    }\n    addBitmap(tag) {\n        let bitmap;\n        switch (tag.mediaType) {\n            case \"image/x-swf-bmp\": {\n                const decoded = decode_x_swf_bmp_1.decodeXSwfBmpSync(tag.data);\n                const cvs = canvas_1.default.createCanvas(decoded.width, decoded.height);\n                const ctx = cvs.getContext(\"2d\");\n                ctx.putImageData(decoded, 0, 0);\n                bitmap = {\n                    width: decoded.width,\n                    height: decoded.height,\n                    bitmap: cvs,\n                    bitmap$: Promise.resolve(cvs),\n                };\n                break;\n            }\n            default:\n                throw new Error(`NotImplemented: Support for ${tag.mediaType} images`);\n        }\n        this.bitmaps.set(tag.id, bitmap);\n    }\n    getById(id) {\n        const bitmap = this.bitmaps.get(id);\n        if (bitmap === undefined) {\n            throw new Error(`BitmapNotFound: ${id}`);\n        }\n        return bitmap;\n    }\n}\nexports.NodeCanvasBitmapService = NodeCanvasBitmapService;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcmVuZGVyZXJzL25vZGUtY2FudmFzLWJpdG1hcC1zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsb0RBQTRCO0FBSTVCLDBEQUF3RDtBQUV4RCxNQUFhLHVCQUF1QjtJQUdsQztRQUNFLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRUQsU0FBUyxDQUFDLEdBQWlCO1FBQ3pCLElBQUksTUFBNEMsQ0FBQztRQUVqRCxRQUFRLEdBQUcsQ0FBQyxTQUFTLEVBQUU7WUFDckIsS0FBSyxpQkFBaUIsQ0FBQyxDQUFDO2dCQUN0QixNQUFNLE9BQU8sR0FBcUIsb0NBQWlCLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUM5RCxNQUFNLEdBQUcsR0FBa0IsZ0JBQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQzlFLE1BQU0sR0FBRyxHQUFvQyxHQUFHLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUVsRSxHQUFHLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hDLE1BQU0sR0FBRztvQkFDUCxLQUFLLEVBQUUsT0FBTyxDQUFDLEtBQUs7b0JBQ3BCLE1BQU0sRUFBRSxPQUFPLENBQUMsTUFBTTtvQkFDdEIsTUFBTSxFQUFFLEdBQUc7b0JBQ1gsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO2lCQUM5QixDQUFDO2dCQUNGLE1BQU07YUFDUDtZQUNEO2dCQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMsK0JBQStCLEdBQUcsQ0FBQyxTQUFTLFNBQVMsQ0FBQyxDQUFDO1NBQzFFO1FBRUQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsT0FBTyxDQUFDLEVBQVk7UUFDbEIsTUFBTSxNQUFNLEdBQXFELElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3RGLElBQUksTUFBTSxLQUFLLFNBQVMsRUFBRTtZQUN4QixNQUFNLElBQUksS0FBSyxDQUFDLG1CQUFtQixFQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQzFDO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztDQUNGO0FBdkNELDBEQXVDQyIsImZpbGUiOiJyZW5kZXJlcnMvbm9kZS1jYW52YXMtYml0bWFwLXNlcnZpY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2FudmFzIGZyb20gXCJjYW52YXNcIjtcbmltcG9ydCB7IFVpbnRTaXplIH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyBEZWZpbmVCaXRtYXAgfSBmcm9tIFwic3dmLXRyZWUvdGFnc1wiO1xuaW1wb3J0IHsgQml0bWFwLCBCaXRtYXBDb25zdW1lciwgQml0bWFwUHJvdmlkZXIgfSBmcm9tIFwiLi4vYml0bWFwLXNlcnZpY2VcIjtcbmltcG9ydCB7IGRlY29kZVhTd2ZCbXBTeW5jIH0gZnJvbSBcIi4uL2RlY29kZS14LXN3Zi1ibXBcIjtcblxuZXhwb3J0IGNsYXNzIE5vZGVDYW52YXNCaXRtYXBTZXJ2aWNlIGltcGxlbWVudHMgQml0bWFwQ29uc3VtZXIsIEJpdG1hcFByb3ZpZGVyPGNhbnZhcy5DYW52YXMgfCBjYW52YXMuSW1hZ2U+IHtcbiAgcHJpdmF0ZSByZWFkb25seSBiaXRtYXBzOiBNYXA8VWludFNpemUsIEJpdG1hcDxjYW52YXMuQ2FudmFzIHwgY2FudmFzLkltYWdlPj47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5iaXRtYXBzID0gbmV3IE1hcCgpO1xuICB9XG5cbiAgYWRkQml0bWFwKHRhZzogRGVmaW5lQml0bWFwKTogdm9pZCB7XG4gICAgbGV0IGJpdG1hcDogQml0bWFwPGNhbnZhcy5DYW52YXMgfCBjYW52YXMuSW1hZ2U+O1xuXG4gICAgc3dpdGNoICh0YWcubWVkaWFUeXBlKSB7XG4gICAgICBjYXNlIFwiaW1hZ2UveC1zd2YtYm1wXCI6IHtcbiAgICAgICAgY29uc3QgZGVjb2RlZDogY2FudmFzLkltYWdlRGF0YSA9IGRlY29kZVhTd2ZCbXBTeW5jKHRhZy5kYXRhKTtcbiAgICAgICAgY29uc3QgY3ZzOiBjYW52YXMuQ2FudmFzID0gY2FudmFzLmNyZWF0ZUNhbnZhcyhkZWNvZGVkLndpZHRoLCBkZWNvZGVkLmhlaWdodCk7XG4gICAgICAgIGNvbnN0IGN0eDogY2FudmFzLkNhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCA9IGN2cy5nZXRDb250ZXh0KFwiMmRcIik7XG5cbiAgICAgICAgY3R4LnB1dEltYWdlRGF0YShkZWNvZGVkLCAwLCAwKTtcbiAgICAgICAgYml0bWFwID0ge1xuICAgICAgICAgIHdpZHRoOiBkZWNvZGVkLndpZHRoLFxuICAgICAgICAgIGhlaWdodDogZGVjb2RlZC5oZWlnaHQsXG4gICAgICAgICAgYml0bWFwOiBjdnMsXG4gICAgICAgICAgYml0bWFwJDogUHJvbWlzZS5yZXNvbHZlKGN2cyksXG4gICAgICAgIH07XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBOb3RJbXBsZW1lbnRlZDogU3VwcG9ydCBmb3IgJHt0YWcubWVkaWFUeXBlfSBpbWFnZXNgKTtcbiAgICB9XG5cbiAgICB0aGlzLmJpdG1hcHMuc2V0KHRhZy5pZCwgYml0bWFwKTtcbiAgfVxuXG4gIGdldEJ5SWQoaWQ6IFVpbnRTaXplKTogQml0bWFwPGNhbnZhcy5DYW52YXMgfCBjYW52YXMuSW1hZ2U+IHtcbiAgICBjb25zdCBiaXRtYXA6IEJpdG1hcDxjYW52YXMuQ2FudmFzIHwgY2FudmFzLkltYWdlPiB8IHVuZGVmaW5lZCA9IHRoaXMuYml0bWFwcy5nZXQoaWQpO1xuICAgIGlmIChiaXRtYXAgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBCaXRtYXBOb3RGb3VuZDogJHtpZH1gKTtcbiAgICB9XG4gICAgcmV0dXJuIGJpdG1hcDtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","'use strict'\n\n/**\n * Font RegExp helpers.\n */\n\nconst weights = 'bold|bolder|lighter|[1-9]00'\n  , styles = 'italic|oblique'\n  , variants = 'small-caps'\n  , stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded'\n  , units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q'\n  , string = '\\'([^\\']+)\\'|\"([^\"]+)\"|[\\\\w\\\\s-]+'\n\n// [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]?\n//    <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ]\n// https://drafts.csswg.org/css-fonts-3/#font-prop\nconst weightRe = new RegExp(`(${weights}) +`, 'i')\nconst styleRe = new RegExp(`(${styles}) +`, 'i')\nconst variantRe = new RegExp(`(${variants}) +`, 'i')\nconst stretchRe = new RegExp(`(${stretches}) +`, 'i')\nconst sizeFamilyRe = new RegExp(\n  '([\\\\d\\\\.]+)(' + units + ') *'\n  + '((?:' + string + ')( *, *(?:' + string + '))*)')\n\n/**\n * Cache font parsing.\n */\n\nconst cache = {}\n\nconst defaultHeight = 16 // pt, common browser default\n\n/**\n * Parse font `str`.\n *\n * @param {String} str\n * @return {Object} Parsed font. `size` is in device units. `unit` is the unit\n *   appearing in the input string.\n * @api private\n */\n\nmodule.exports = function (str) {\n  // Cached\n  if (cache[str]) return cache[str]\n\n  // Try for required properties first.\n  const sizeFamily = sizeFamilyRe.exec(str)\n  if (!sizeFamily) return // invalid\n\n  // Default values and required properties\n  const font = {\n    weight: 'normal',\n    style: 'normal',\n    stretch: 'normal',\n    variant: 'normal',\n    size: parseFloat(sizeFamily[1]),\n    unit: sizeFamily[2],\n    family: sizeFamily[3].replace(/[\"']/g, '').replace(/ *, */g, ',')\n  }\n\n  // Optional, unordered properties.\n  let weight, style, variant, stretch\n  // Stop search at `sizeFamily.index`\n  let substr = str.substring(0, sizeFamily.index)\n  if ((weight = weightRe.exec(substr))) font.weight = weight[1]\n  if ((style = styleRe.exec(substr))) font.style = style[1]\n  if ((variant = variantRe.exec(substr))) font.variant = variant[1]\n  if ((stretch = stretchRe.exec(substr))) font.stretch = stretch[1]\n\n  // Convert to device units. (`font.unit` is the original unit)\n  // TODO: ch, ex\n  switch (font.unit) {\n    case 'pt':\n      font.size /= 0.75\n      break\n    case 'pc':\n      font.size *= 16\n      break\n    case 'in':\n      font.size *= 96\n      break\n    case 'cm':\n      font.size *= 96.0 / 2.54\n      break\n    case 'mm':\n      font.size *= 96.0 / 25.4\n      break\n    case '%':\n      // TODO disabled because existing unit tests assume 100\n      // font.size *= defaultHeight / 100 / 0.75\n      break\n    case 'em':\n    case 'rem':\n      font.size *= defaultHeight / 0.75\n      break\n    case 'q':\n      font.size *= 96 / 25.4 / 4\n      break\n  }\n\n  return (cache[str] = font)\n}\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"@open-flash/stream\");\nconst canvas = __importStar(require(\"canvas\"));\nconst zlib = __importStar(require(\"zlib\"));\nconst RGB_SIZE = 3;\nconst RGBA_SIZE = 4;\nfunction decodeXSwfBmpSync(bytes) {\n    const stream = new stream_1.ReadableStream(bytes);\n    const formatId = stream.readUint8();\n    if (formatId !== 3) {\n        throw new Error(`UnsupportedXSwfBmpFormatId: ${formatId}`);\n    }\n    const width = stream.readUint16LE();\n    const height = stream.readUint16LE();\n    const paddedWidth = width + ((4 - (width % 4)) % 4);\n    const colorCount = stream.readUint8() + 1;\n    const colors = [];\n    const compressedData = stream.tailBytes();\n    // `new Buffer` is a workaround to get zlib to work in the browser: TODO, make `zlib` accept Uint8Array\n    const srcData = zlib.inflateSync(new Buffer(compressedData));\n    const data = new Uint8ClampedArray(width * height * RGBA_SIZE);\n    const dataView = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    const colorTableSize = RGB_SIZE * colorCount;\n    for (let i = 0; i < colorTableSize; i += 3) {\n        const r = srcData[i];\n        const g = srcData[i + 1];\n        const b = srcData[i + 2];\n        colors.push((r * 2 ** 24) + (g << 16) + (b << 8) + 0xff);\n    }\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            const ci = srcData[colorTableSize + y * paddedWidth + x];\n            // TODO: Check how to handle out-of-bounds color indexes (currently we default to opaque black)\n            const c = ci < colors.length ? colors[ci] : 0x000000ff;\n            dataView.setUint32(RGBA_SIZE * (y * width + x), c, false);\n        }\n    }\n    return canvas.createImageData(data, width, height);\n}\nexports.decodeXSwfBmpSync = decodeXSwfBmpSync;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZGVjb2RlLXgtc3dmLWJtcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSwrQ0FBd0U7QUFDeEUsK0NBQWlDO0FBRWpDLDJDQUE2QjtBQUU3QixNQUFNLFFBQVEsR0FBYSxDQUFDLENBQUM7QUFDN0IsTUFBTSxTQUFTLEdBQWEsQ0FBQyxDQUFDO0FBRTlCLFNBQWdCLGlCQUFpQixDQUFDLEtBQWlCO0lBQ2pELE1BQU0sTUFBTSxHQUF1QixJQUFJLHVCQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDN0QsTUFBTSxRQUFRLEdBQVUsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQzNDLElBQUksUUFBUSxLQUFLLENBQUMsRUFBRTtRQUNsQixNQUFNLElBQUksS0FBSyxDQUFDLCtCQUErQixRQUFRLEVBQUUsQ0FBQyxDQUFDO0tBQzVEO0lBQ0QsTUFBTSxLQUFLLEdBQWEsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzlDLE1BQU0sTUFBTSxHQUFhLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUMvQyxNQUFNLFdBQVcsR0FBYSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzlELE1BQU0sVUFBVSxHQUFhLE1BQU0sQ0FBQyxTQUFTLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDcEQsTUFBTSxNQUFNLEdBQWEsRUFBRSxDQUFDO0lBQzVCLE1BQU0sY0FBYyxHQUFlLE1BQU0sQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUN0RCx1R0FBdUc7SUFDdkcsTUFBTSxPQUFPLEdBQVcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO0lBQ3JFLE1BQU0sSUFBSSxHQUFzQixJQUFJLGlCQUFpQixDQUFDLEtBQUssR0FBRyxNQUFNLEdBQUcsU0FBUyxDQUFDLENBQUM7SUFDbEYsTUFBTSxRQUFRLEdBQWEsSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUN2RixNQUFNLGNBQWMsR0FBYSxRQUFRLEdBQUcsVUFBVSxDQUFDO0lBQ3ZELEtBQUssSUFBSSxDQUFDLEdBQWEsQ0FBQyxFQUFFLENBQUMsR0FBRyxjQUFjLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNwRCxNQUFNLENBQUMsR0FBVSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDNUIsTUFBTSxDQUFDLEdBQVUsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNoQyxNQUFNLENBQUMsR0FBVSxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2hDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO0tBQzFEO0lBQ0QsS0FBSyxJQUFJLENBQUMsR0FBYSxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN6QyxLQUFLLElBQUksQ0FBQyxHQUFhLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3hDLE1BQU0sRUFBRSxHQUFVLE9BQU8sQ0FBQyxjQUFjLEdBQUcsQ0FBQyxHQUFHLFdBQVcsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNoRSwrRkFBK0Y7WUFDL0YsTUFBTSxDQUFDLEdBQVcsRUFBRSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDO1lBQy9ELFFBQVEsQ0FBQyxTQUFTLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxHQUFHLEtBQUssR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDM0Q7S0FDRjtJQUNELE9BQU8sTUFBTSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQ3JELENBQUM7QUFoQ0QsOENBZ0NDIiwiZmlsZSI6ImRlY29kZS14LXN3Zi1ibXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFkYWJsZUJ5dGVTdHJlYW0sIFJlYWRhYmxlU3RyZWFtIH0gZnJvbSBcIkBvcGVuLWZsYXNoL3N0cmVhbVwiO1xuaW1wb3J0ICogYXMgY2FudmFzIGZyb20gXCJjYW52YXNcIjtcbmltcG9ydCB7IFVpbnQzMiwgVWludDgsIFVpbnRTaXplIH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgKiBhcyB6bGliIGZyb20gXCJ6bGliXCI7XG5cbmNvbnN0IFJHQl9TSVpFOiBVaW50U2l6ZSA9IDM7XG5jb25zdCBSR0JBX1NJWkU6IFVpbnRTaXplID0gNDtcblxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVhTd2ZCbXBTeW5jKGJ5dGVzOiBVaW50OEFycmF5KTogY2FudmFzLkltYWdlRGF0YSB7XG4gIGNvbnN0IHN0cmVhbTogUmVhZGFibGVCeXRlU3RyZWFtID0gbmV3IFJlYWRhYmxlU3RyZWFtKGJ5dGVzKTtcbiAgY29uc3QgZm9ybWF0SWQ6IFVpbnQ4ID0gc3RyZWFtLnJlYWRVaW50OCgpO1xuICBpZiAoZm9ybWF0SWQgIT09IDMpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkWFN3ZkJtcEZvcm1hdElkOiAke2Zvcm1hdElkfWApO1xuICB9XG4gIGNvbnN0IHdpZHRoOiBVaW50U2l6ZSA9IHN0cmVhbS5yZWFkVWludDE2TEUoKTtcbiAgY29uc3QgaGVpZ2h0OiBVaW50U2l6ZSA9IHN0cmVhbS5yZWFkVWludDE2TEUoKTtcbiAgY29uc3QgcGFkZGVkV2lkdGg6IFVpbnRTaXplID0gd2lkdGggKyAoKDQgLSAod2lkdGggJSA0KSkgJSA0KTtcbiAgY29uc3QgY29sb3JDb3VudDogVWludFNpemUgPSBzdHJlYW0ucmVhZFVpbnQ4KCkgKyAxO1xuICBjb25zdCBjb2xvcnM6IFVpbnQzMltdID0gW107XG4gIGNvbnN0IGNvbXByZXNzZWREYXRhOiBVaW50OEFycmF5ID0gc3RyZWFtLnRhaWxCeXRlcygpO1xuICAvLyBgbmV3IEJ1ZmZlcmAgaXMgYSB3b3JrYXJvdW5kIHRvIGdldCB6bGliIHRvIHdvcmsgaW4gdGhlIGJyb3dzZXI6IFRPRE8sIG1ha2UgYHpsaWJgIGFjY2VwdCBVaW50OEFycmF5XG4gIGNvbnN0IHNyY0RhdGE6IEJ1ZmZlciA9IHpsaWIuaW5mbGF0ZVN5bmMobmV3IEJ1ZmZlcihjb21wcmVzc2VkRGF0YSkpO1xuICBjb25zdCBkYXRhOiBVaW50OENsYW1wZWRBcnJheSA9IG5ldyBVaW50OENsYW1wZWRBcnJheSh3aWR0aCAqIGhlaWdodCAqIFJHQkFfU0laRSk7XG4gIGNvbnN0IGRhdGFWaWV3OiBEYXRhVmlldyA9IG5ldyBEYXRhVmlldyhkYXRhLmJ1ZmZlciwgZGF0YS5ieXRlT2Zmc2V0LCBkYXRhLmJ5dGVMZW5ndGgpO1xuICBjb25zdCBjb2xvclRhYmxlU2l6ZTogVWludFNpemUgPSBSR0JfU0laRSAqIGNvbG9yQ291bnQ7XG4gIGZvciAobGV0IGk6IFVpbnRTaXplID0gMDsgaSA8IGNvbG9yVGFibGVTaXplOyBpICs9IDMpIHtcbiAgICBjb25zdCByOiBVaW50OCA9IHNyY0RhdGFbaV07XG4gICAgY29uc3QgZzogVWludDggPSBzcmNEYXRhW2kgKyAxXTtcbiAgICBjb25zdCBiOiBVaW50OCA9IHNyY0RhdGFbaSArIDJdO1xuICAgIGNvbG9ycy5wdXNoKChyICogMiAqKiAyNCkgKyAoZyA8PCAxNikgKyAoYiA8PCA4KSArIDB4ZmYpO1xuICB9XG4gIGZvciAobGV0IHk6IFVpbnRTaXplID0gMDsgeSA8IGhlaWdodDsgeSsrKSB7XG4gICAgZm9yIChsZXQgeDogVWludFNpemUgPSAwOyB4IDwgd2lkdGg7IHgrKykge1xuICAgICAgY29uc3QgY2k6IFVpbnQ4ID0gc3JjRGF0YVtjb2xvclRhYmxlU2l6ZSArIHkgKiBwYWRkZWRXaWR0aCArIHhdO1xuICAgICAgLy8gVE9ETzogQ2hlY2sgaG93IHRvIGhhbmRsZSBvdXQtb2YtYm91bmRzIGNvbG9yIGluZGV4ZXMgKGN1cnJlbnRseSB3ZSBkZWZhdWx0IHRvIG9wYXF1ZSBibGFjaylcbiAgICAgIGNvbnN0IGM6IFVpbnQzMiA9IGNpIDwgY29sb3JzLmxlbmd0aCA/IGNvbG9yc1tjaV0gOiAweDAwMDAwMGZmO1xuICAgICAgZGF0YVZpZXcuc2V0VWludDMyKFJHQkFfU0laRSAqICh5ICogd2lkdGggKyB4KSwgYywgZmFsc2UpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gY2FudmFzLmNyZWF0ZUltYWdlRGF0YShkYXRhLCB3aWR0aCwgaGVpZ2h0KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst incomplete_stream_1 = require(\"./errors/incomplete-stream\");\nclass ReadableStream {\n    constructor(bytes, _byteOffset = 0, bitOffset = 0) {\n        this.bytes = bytes;\n        this.view = new DataView(bytes.buffer, bytes.byteOffset, bytes.length);\n        this.bytePos = 0;\n        this.bitPos = bitOffset;\n        this.byteEnd = bytes.length;\n    }\n    static equals(left, right) {\n        if (left.bitPos !== right.bitPos) {\n            return false;\n        }\n        const leftLen = left.byteEnd - left.bytePos;\n        const rightLen = right.byteEnd - right.bytePos;\n        if (leftLen !== rightLen) {\n            return false;\n        }\n        else if (leftLen === 0) {\n            return true;\n        }\n        let i = 0;\n        if (left.bitPos !== 0) {\n            i = 1;\n            const leftPartialByte = left.bytes[left.bytePos];\n            const rightPartialByte = right.bytes[right.bytePos];\n            const mask = (1 << (8 - left.bitPos)) - 1;\n            if ((leftPartialByte & mask) !== (rightPartialByte & mask)) {\n                return false;\n            }\n        }\n        for (; i < leftLen; i++) {\n            if (left.bytes[left.bytePos + i] !== right.bytes[right.bytePos + i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    asBitStream() {\n        return this;\n    }\n    asByteStream() {\n        this.align();\n        return this;\n    }\n    align() {\n        if (this.bitPos !== 0) {\n            this.bitPos = 0;\n            this.bytePos++;\n        }\n    }\n    tail() {\n        return new ReadableStream(this.tailBytes(), 0, this.bitPos);\n    }\n    tailBytes() {\n        const result = this.bytes.subarray(this.bytePos);\n        this.bytePos = this.byteEnd;\n        this.bitPos = 0;\n        return result;\n    }\n    available() {\n        return this.byteEnd - this.bytePos;\n    }\n    take(length) {\n        return new ReadableStream(this.takeBytes(length), 0, 0);\n    }\n    takeBytes(length) {\n        const result = this.bytes.subarray(this.bytePos, this.bytePos + length);\n        this.bytePos += length;\n        this.bitPos = 0;\n        return result;\n    }\n    readSint8() {\n        return this.view.getInt8(this.bytePos++);\n    }\n    readSint16LE() {\n        const result = this.view.getInt16(this.bytePos, true);\n        this.bytePos += 2;\n        return result;\n    }\n    readSint32LE() {\n        const result = this.view.getInt32(this.bytePos, true);\n        this.bytePos += 4;\n        return result;\n    }\n    readUint8() {\n        return this.view.getUint8(this.bytePos++);\n    }\n    peekUint8() {\n        return this.view.getUint8(this.bytePos);\n    }\n    readUint16BE() {\n        const result = this.view.getUint16(this.bytePos, false);\n        this.bytePos += 2;\n        return result;\n    }\n    readUint16LE() {\n        const result = this.view.getUint16(this.bytePos, true);\n        this.bytePos += 2;\n        return result;\n    }\n    readUint32BE() {\n        const result = this.view.getUint32(this.bytePos, false);\n        this.bytePos += 4;\n        return result;\n    }\n    readUint32LE() {\n        const result = this.view.getUint32(this.bytePos, true);\n        this.bytePos += 4;\n        return result;\n    }\n    readFloat16BE() {\n        const u16 = this.view.getUint16(this.bytePos, false);\n        this.bytePos += 2;\n        return reinterpretUint16AsFloat16(u16);\n    }\n    readFloat16LE() {\n        const u16 = this.view.getUint16(this.bytePos, true);\n        this.bytePos += 2;\n        return reinterpretUint16AsFloat16(u16);\n    }\n    readFloat32BE() {\n        const result = this.view.getFloat32(this.bytePos, false);\n        this.bytePos += 4;\n        return result;\n    }\n    readFloat32LE() {\n        const result = this.view.getFloat32(this.bytePos, true);\n        this.bytePos += 4;\n        return result;\n    }\n    readFloat64BE() {\n        const result = this.view.getFloat64(this.bytePos, false);\n        this.bytePos += 8;\n        return result;\n    }\n    readFloat64LE() {\n        const result = this.view.getFloat64(this.bytePos, true);\n        this.bytePos += 8;\n        return result;\n    }\n    skip(size) {\n        this.bytePos += size;\n    }\n    skipBits(n) {\n        this.readUintBits(n);\n    }\n    readBoolBits() {\n        return this.readUintBits(1) > 0;\n    }\n    readSint16Bits(n) {\n        return this.readIntBits(n);\n    }\n    /**\n     * SB[n]\n     */\n    readSint32Bits(n) {\n        return this.readIntBits(n);\n    }\n    readUint16Bits(n) {\n        return this.readUintBits(n);\n    }\n    /**\n     * UB[n]\n     */\n    readUint32Bits(n) {\n        return this.readUintBits(n);\n    }\n    /**\n     * LEB128-encoded Uint32 (1 to 5 bytes)\n     */\n    readUint32Leb128() {\n        let result = 0;\n        for (let i = 0; i < 5; i++) {\n            const nextByte = this.bytes[this.bytePos++];\n            if (i < 4) {\n                // Bit-shift is safe\n                result += (nextByte & 0x7f) << (7 * i);\n            }\n            else {\n                // Bit-shift is unsafe, use `* Math.pow`\n                result += (nextByte & 0x0f) * Math.pow(2, 28);\n            }\n            if ((nextByte & (1 << 7)) === 0) {\n                return result;\n            }\n        }\n        return result;\n    }\n    readString(byteLength) {\n        const endOfString = this.bytePos + byteLength;\n        if (endOfString > this.bytes.length) {\n            throw incomplete_stream_1.createIncompleteStreamError();\n        }\n        // TODO(demurgos): Remove type cast\n        const strBuffer = Buffer.from(this.bytes.subarray(this.bytePos, endOfString));\n        const result = strBuffer.toString(\"utf8\");\n        this.bytePos = endOfString;\n        return result;\n    }\n    readCString() {\n        const endOfString = this.bytes.indexOf(0, this.bytePos);\n        if (endOfString < 0) {\n            throw incomplete_stream_1.createIncompleteStreamError();\n        }\n        // TODO(demurgos): Remove type cast\n        const strBuffer = Buffer.from(this.bytes.subarray(this.bytePos, endOfString));\n        const result = strBuffer.toString(\"utf8\");\n        this.bytePos = endOfString + 1;\n        return result;\n    }\n    readUintBits(n) {\n        if (n > 32) {\n            // Even if we could read up to 53 bits, we restrict it to 32 bits (which is already unsafe\n            // if we consider that the max positive number safe regarding bit operations is 2^31 - 1)\n            throw new incident_1.Incident(\"BitOverflow\", \"Cannot read above 32 bits without overflow\");\n        }\n        let result = 0;\n        while (n > 0) {\n            if (this.bitPos + n < 8) {\n                const endBitPos = this.bitPos + n;\n                const shift = 1 << (endBitPos - this.bitPos);\n                const cur = (this.bytes[this.bytePos] >>> 8 - endBitPos) & (shift - 1);\n                result = result * shift + cur;\n                n = 0;\n                this.bitPos = endBitPos;\n            }\n            else {\n                const shift = 1 << (8 - this.bitPos);\n                const cur = this.bytes[this.bytePos] & (shift - 1);\n                result = result * shift + cur;\n                n -= (8 - this.bitPos);\n                this.bitPos = 0;\n                this.bytePos++;\n            }\n        }\n        return result;\n    }\n    readIntBits(n) {\n        if (n === 0) {\n            return 0;\n        }\n        const unsigned = this.readUintBits(n);\n        if (unsigned < Math.pow(2, n - 1)) {\n            return unsigned;\n        }\n        else {\n            return -Math.pow(2, n) + unsigned;\n        }\n    }\n}\nexports.ReadableStream = ReadableStream;\nfunction reinterpretUint16AsFloat16(u16) {\n    const sign = (u16 & (1 << 15)) !== 0 ? -1 : 1;\n    const exponent = (u16 & 0x7c00) >>> 10; // 0x7c00: bits 10 to 14 (inclusive)\n    const fraction = u16 & 0x03ff; // 0x03ff: bits 0 to 9 (inclusive)\n    if (exponent === 0) {\n        return sign * Math.pow(2, -14) * (fraction / 1024);\n    }\n    else if (exponent === 0x1f) { // 0x1f: bits 0 to 4 (inclusive)\n        return fraction === 0 ? sign * Infinity : NaN;\n    }\n    else {\n        return sign * Math.pow(2, exponent - 15) * (1 + (fraction / 1024));\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nexports.name = \"IncompleteStream\";\nfunction format({ needed }) {\n    return `Need ${needed === undefined ? \"\" : needed} more bytes to process the stream`;\n}\nexports.format = format;\nfunction createIncompleteStreamError(needed) {\n    return new incident_1.Incident(exports.name, { needed }, format);\n}\nexports.createIncompleteStreamError = createIncompleteStreamError;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2luY29tcGxldGUtc3RyZWFtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQW9DO0FBR3ZCLFFBQUEsSUFBSSxHQUFTLGtCQUFrQixDQUFDO0FBUzdDLFNBQWdCLE1BQU0sQ0FBQyxFQUFDLE1BQU0sRUFBTztJQUNuQyxPQUFPLFFBQVEsTUFBTSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLG1DQUFtQyxDQUFDO0FBQ3ZGLENBQUM7QUFGRCx3QkFFQztBQUVELFNBQWdCLDJCQUEyQixDQUFDLE1BQWU7SUFDekQsT0FBTyxJQUFJLG1CQUFRLENBQUMsWUFBSSxFQUFFLEVBQUMsTUFBTSxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDOUMsQ0FBQztBQUZELGtFQUVDIiwiZmlsZSI6ImVycm9ycy9pbmNvbXBsZXRlLXN0cmVhbS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluY2lkZW50IH0gZnJvbSBcImluY2lkZW50XCI7XG5cbmV4cG9ydCB0eXBlIE5hbWUgPSBcIkluY29tcGxldGVTdHJlYW1cIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJJbmNvbXBsZXRlU3RyZWFtXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gIG5lZWRlZD86IG51bWJlcjtcbn1cblxuZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG5leHBvcnQgdHlwZSBJbmNvbXBsZXRlU3RyZWFtRXJyb3IgPSBJbmNpZGVudDxEYXRhLCBOYW1lLCBDYXVzZT47XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe25lZWRlZH06IERhdGEpIHtcbiAgcmV0dXJuIGBOZWVkICR7bmVlZGVkID09PSB1bmRlZmluZWQgPyBcIlwiIDogbmVlZGVkfSBtb3JlIGJ5dGVzIHRvIHByb2Nlc3MgdGhlIHN0cmVhbWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbmNvbXBsZXRlU3RyZWFtRXJyb3IobmVlZGVkPzogbnVtYmVyKTogSW5jb21wbGV0ZVN0cmVhbUVycm9yIHtcbiAgcmV0dXJuIG5ldyBJbmNpZGVudChuYW1lLCB7bmVlZGVkfSwgZm9ybWF0KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst concat_bytes_1 = require(\"./concat-bytes\");\nconst TMP_BUFFER = new ArrayBuffer(8);\nconst TMP_DATA_VIEW = new DataView(TMP_BUFFER);\nclass WritableStream {\n    constructor() {\n        this.bytePos = 0;\n        this.bitPos = 0;\n        this.bitsBuffer = 0;\n        this.chunks = [];\n    }\n    asBitStream() {\n        return this;\n    }\n    asByteStream() {\n        this.align();\n        return this;\n    }\n    align() {\n        if (this.bitPos !== 0) {\n            this.writeUint8(this.bitsBuffer); // Increments `this.bytePos`\n            this.bitPos = 0;\n            this.bitsBuffer = 0;\n        }\n    }\n    write(value) {\n        this.writeBytes(value.getBytes());\n    }\n    writeBytes(value) {\n        this.chunks.push(value);\n        this.bytePos += value.length;\n    }\n    writeZeros(size) {\n        this.chunks.push(new Uint8Array(size));\n        this.bytePos += size;\n    }\n    writeZerosBits(size) {\n        if (this.bitPos + size < 8) {\n            this.bitPos += size;\n            return;\n        }\n        this.writeUint8(this.bitsBuffer);\n        this.bitsBuffer = 0;\n        size -= 8 - this.bitPos;\n        const bitPos = size % 8;\n        this.writeZeros((size - bitPos) / 8);\n        this.bitPos = bitPos;\n    }\n    writeSint8(value) {\n        this.writeUint8(value < 0 ? (1 << 8) + value : value);\n    }\n    writeSint16LE(value) {\n        this.writeUint16LE(value < 0 ? (1 << 16) + value : value);\n    }\n    writeSint32LE(value) {\n        this.chunks.push(Buffer.from([\n            (value >>> 0) & 0xff,\n            (value >>> 8) & 0xff,\n            (value >>> 16) & 0xff,\n            (value >>> 24) & 0xff,\n        ]));\n        this.bytePos += 4;\n    }\n    writeUint8(value) {\n        this.chunks.push(Buffer.from([value & 0xff]));\n        this.bytePos++;\n    }\n    writeUint16BE(value) {\n        this.chunks.push(Buffer.from([\n            (value >>> 8) & 0xff,\n            (value >>> 0) & 0xff,\n        ]));\n        this.bytePos += 2;\n    }\n    writeUint16LE(value) {\n        this.chunks.push(Buffer.from([\n            (value >>> 0) & 0xff,\n            (value >>> 8) & 0xff,\n        ]));\n        this.bytePos += 2;\n    }\n    writeUint32BE(value) {\n        this.chunks.push(Buffer.from([\n            (value >>> 24) & 0xff,\n            (value >>> 16) & 0xff,\n            (value >>> 8) & 0xff,\n            (value >>> 0) & 0xff,\n        ]));\n        this.bytePos += 4;\n    }\n    writeUint32LE(value) {\n        this.writeSint32LE(value | 0);\n    }\n    writeFloat16BE(value) {\n        this.writeUint16BE(reinterpretFloat16AsUint16(value));\n    }\n    writeFloat16LE(value) {\n        this.writeUint16LE(reinterpretFloat16AsUint16(value));\n    }\n    writeFloat32BE(value) {\n        TMP_DATA_VIEW.setFloat32(0, value, false);\n        this.chunks.push(new Uint8Array(TMP_BUFFER.slice(0, 4)));\n        this.bytePos += 4;\n    }\n    writeFloat32LE(value) {\n        TMP_DATA_VIEW.setFloat32(0, value, true);\n        this.chunks.push(new Uint8Array(TMP_BUFFER.slice(0, 4)));\n        this.bytePos += 4;\n    }\n    writeFloat64BE(value) {\n        TMP_DATA_VIEW.setFloat64(0, value, false);\n        this.chunks.push(new Uint8Array(TMP_BUFFER.slice(0, 8)));\n        this.bytePos += 8;\n    }\n    writeFloat64LE(value) {\n        TMP_DATA_VIEW.setFloat64(0, value, true);\n        this.chunks.push(new Uint8Array(TMP_BUFFER.slice(0, 8)));\n        this.bytePos += 8;\n    }\n    writeBoolBits(value) {\n        return this.writeUintBits(1, value ? 1 : 0);\n    }\n    writeSint16Bits(n, value) {\n        return this.writeSintBits(n, value);\n    }\n    /**\n     * SB[n]\n     */\n    writeSint32Bits(n, value) {\n        return this.writeSintBits(n, value);\n    }\n    writeUint16Bits(n, value) {\n        return this.writeUintBits(n, value);\n    }\n    /**\n     * UB[n]\n     */\n    writeUint32Bits(n, value) {\n        this.writeUintBits(n, value);\n    }\n    writeUint32Leb128(value) {\n        const chunk = [];\n        do {\n            let nextByte = value & 0x7f;\n            value = value >> 7;\n            if (value !== 0) {\n                nextByte |= 0x80;\n            }\n            chunk.push(nextByte);\n        } while (value !== 0);\n        this.chunks.push(new Uint8Array(chunk));\n        this.bytePos += chunk.length;\n    }\n    writeString(value) {\n        this.writeBytes(Buffer.from(value, \"utf8\"));\n    }\n    writeCString(value) {\n        this.writeBytes(Buffer.from(value, \"utf8\"));\n        this.writeUint8(0);\n    }\n    getBytes() {\n        const bytes = concat_bytes_1.concatBytes(this.chunks);\n        this.chunks = [bytes];\n        return bytes;\n    }\n    writeUintBits(bits, value) {\n        if (bits > 32) {\n            // Even if we could read up to 53 bits, we restrict it to 32 bits (which is already unsafe\n            // if we consider that the max positive number safe regarding bit operations is 2^31 - 1)\n            throw new incident_1.Incident(\"BitOverflow\", \"Cannot read above 32 bits without overflow\");\n        }\n        while (bits > 0) {\n            const availableBits = 8 - this.bitPos;\n            const consumedBits = Math.min(availableBits, bits);\n            const chunk = (value >>> (bits - consumedBits)) & ((1 << consumedBits) - 1);\n            this.bitsBuffer = this.bitsBuffer | (chunk << (availableBits - consumedBits));\n            bits -= consumedBits;\n            this.bitPos += consumedBits;\n            if (this.bitPos === 8) {\n                this.writeUint8(this.bitsBuffer);\n                this.bitsBuffer = 0;\n                this.bitPos = 0;\n            }\n        }\n    }\n    writeSintBits(bits, value) {\n        if (value < 0) {\n            this.writeUintBits(bits, 2 ** bits + value);\n        }\n        else {\n            this.writeUintBits(bits, value);\n        }\n    }\n}\nexports.WritableStream = WritableStream;\n/**\n * Float16:\n * 1 sign bit (S)\n * 5 exponent bits (E)\n * 10 fraction bits (F)\n *\n * Format: SEEEEEFFFFFFFFFF\n */\nfunction reinterpretFloat16AsUint16(value) {\n    if (isNaN(value)) {\n        return 0xffff;\n    }\n    const signBit = (value < 0 || Object.is(value, -0)) ? 1 : 0;\n    value = Math.abs(value);\n    if (value < Math.pow(2, -14)) {\n        const fraction = Math.floor(value / Math.pow(2, -24));\n        return (signBit << 15) | (fraction & 0x03ff);\n    }\n    const MAX_EXPONENT = 0x1f;\n    let exponent = 1;\n    while (exponent < MAX_EXPONENT && value >= Math.pow(2, exponent - 14)) {\n        exponent++;\n    }\n    if (exponent === MAX_EXPONENT) {\n        return (signBit << 15) | (MAX_EXPONENT << 10); // Infinity\n    }\n    else {\n        const fraction = Math.floor((value - Math.pow(2, exponent - 15)) / Math.pow(2, exponent - 25));\n        return (signBit << 15) | (exponent << 10) | (fraction & 0x03ff);\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction concatBytes(chunks) {\n    let totalSize = 0;\n    for (const chunk of chunks) {\n        totalSize += chunk.length;\n    }\n    const result = new Uint8Array(totalSize);\n    let offset = 0;\n    for (const chunk of chunks) {\n        result.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29uY2F0LWJ5dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsU0FBZ0IsV0FBVyxDQUFDLE1BQW9CO0lBQzlDLElBQUksU0FBUyxHQUFhLENBQUMsQ0FBQztJQUM1QixLQUFLLE1BQU0sS0FBSyxJQUFJLE1BQU0sRUFBRTtRQUMxQixTQUFTLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQztLQUMzQjtJQUNELE1BQU0sTUFBTSxHQUFlLElBQUksVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3JELElBQUksTUFBTSxHQUFhLENBQUMsQ0FBQztJQUN6QixLQUFLLE1BQU0sS0FBSyxJQUFJLE1BQU0sRUFBRTtRQUMxQixNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztRQUMxQixNQUFNLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQztLQUN4QjtJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFaRCxrQ0FZQyIsImZpbGUiOiJjb25jYXQtYnl0ZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVaW50U2l6ZSB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0Qnl0ZXMoY2h1bmtzOiBVaW50OEFycmF5W10pOiBVaW50OEFycmF5IHtcbiAgbGV0IHRvdGFsU2l6ZTogVWludFNpemUgPSAwO1xuICBmb3IgKGNvbnN0IGNodW5rIG9mIGNodW5rcykge1xuICAgIHRvdGFsU2l6ZSArPSBjaHVuay5sZW5ndGg7XG4gIH1cbiAgY29uc3QgcmVzdWx0OiBVaW50OEFycmF5ID0gbmV3IFVpbnQ4QXJyYXkodG90YWxTaXplKTtcbiAgbGV0IG9mZnNldDogVWludFNpemUgPSAwO1xuICBmb3IgKGNvbnN0IGNodW5rIG9mIGNodW5rcykge1xuICAgIHJlc3VsdC5zZXQoY2h1bmssIG9mZnNldCk7XG4gICAgb2Zmc2V0ICs9IGNodW5rLmxlbmd0aDtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","'use strict';\n/* eslint camelcase: \"off\" */\n\nvar assert = require('assert');\n\nvar Zstream = require('pako/lib/zlib/zstream');\nvar zlib_deflate = require('pako/lib/zlib/deflate.js');\nvar zlib_inflate = require('pako/lib/zlib/inflate.js');\nvar constants = require('pako/lib/zlib/constants');\n\nfor (var key in constants) {\n  exports[key] = constants[key];\n}\n\n// zlib modes\nexports.NONE = 0;\nexports.DEFLATE = 1;\nexports.INFLATE = 2;\nexports.GZIP = 3;\nexports.GUNZIP = 4;\nexports.DEFLATERAW = 5;\nexports.INFLATERAW = 6;\nexports.UNZIP = 7;\n\nvar GZIP_HEADER_ID1 = 0x1f;\nvar GZIP_HEADER_ID2 = 0x8b;\n\n/**\n * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n */\nfunction Zlib(mode) {\n  if (typeof mode !== 'number' || mode < exports.DEFLATE || mode > exports.UNZIP) {\n    throw new TypeError('Bad argument');\n  }\n\n  this.dictionary = null;\n  this.err = 0;\n  this.flush = 0;\n  this.init_done = false;\n  this.level = 0;\n  this.memLevel = 0;\n  this.mode = mode;\n  this.strategy = 0;\n  this.windowBits = 0;\n  this.write_in_progress = false;\n  this.pending_close = false;\n  this.gzip_id_bytes_read = 0;\n}\n\nZlib.prototype.close = function () {\n  if (this.write_in_progress) {\n    this.pending_close = true;\n    return;\n  }\n\n  this.pending_close = false;\n\n  assert(this.init_done, 'close before init');\n  assert(this.mode <= exports.UNZIP);\n\n  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {\n    zlib_deflate.deflateEnd(this.strm);\n  } else if (this.mode === exports.INFLATE || this.mode === exports.GUNZIP || this.mode === exports.INFLATERAW || this.mode === exports.UNZIP) {\n    zlib_inflate.inflateEnd(this.strm);\n  }\n\n  this.mode = exports.NONE;\n\n  this.dictionary = null;\n};\n\nZlib.prototype.write = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(true, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype.writeSync = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(false, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype._write = function (async, flush, input, in_off, in_len, out, out_off, out_len) {\n  assert.equal(arguments.length, 8);\n\n  assert(this.init_done, 'write before init');\n  assert(this.mode !== exports.NONE, 'already finalized');\n  assert.equal(false, this.write_in_progress, 'write already in progress');\n  assert.equal(false, this.pending_close, 'close is pending');\n\n  this.write_in_progress = true;\n\n  assert.equal(false, flush === undefined, 'must provide flush value');\n\n  this.write_in_progress = true;\n\n  if (flush !== exports.Z_NO_FLUSH && flush !== exports.Z_PARTIAL_FLUSH && flush !== exports.Z_SYNC_FLUSH && flush !== exports.Z_FULL_FLUSH && flush !== exports.Z_FINISH && flush !== exports.Z_BLOCK) {\n    throw new Error('Invalid flush value');\n  }\n\n  if (input == null) {\n    input = Buffer.alloc(0);\n    in_len = 0;\n    in_off = 0;\n  }\n\n  this.strm.avail_in = in_len;\n  this.strm.input = input;\n  this.strm.next_in = in_off;\n  this.strm.avail_out = out_len;\n  this.strm.output = out;\n  this.strm.next_out = out_off;\n  this.flush = flush;\n\n  if (!async) {\n    // sync version\n    this._process();\n\n    if (this._checkError()) {\n      return this._afterSync();\n    }\n    return;\n  }\n\n  // async version\n  var self = this;\n  process.nextTick(function () {\n    self._process();\n    self._after();\n  });\n\n  return this;\n};\n\nZlib.prototype._afterSync = function () {\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  return [avail_in, avail_out];\n};\n\nZlib.prototype._process = function () {\n  var next_expected_header_byte = null;\n\n  // If the avail_out is left at 0, then it means that it ran out\n  // of room.  If there was avail_out left over, then it means\n  // that all of the input was consumed.\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflate(this.strm, this.flush);\n      break;\n    case exports.UNZIP:\n      if (this.strm.avail_in > 0) {\n        next_expected_header_byte = this.strm.next_in;\n      }\n\n      switch (this.gzip_id_bytes_read) {\n        case 0:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID1) {\n            this.gzip_id_bytes_read = 1;\n            next_expected_header_byte++;\n\n            if (this.strm.avail_in === 1) {\n              // The only available byte was already read.\n              break;\n            }\n          } else {\n            this.mode = exports.INFLATE;\n            break;\n          }\n\n        // fallthrough\n        case 1:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID2) {\n            this.gzip_id_bytes_read = 2;\n            this.mode = exports.GUNZIP;\n          } else {\n            // There is no actual difference between INFLATE and INFLATERAW\n            // (after initialization).\n            this.mode = exports.INFLATE;\n          }\n\n          break;\n        default:\n          throw new Error('invalid number of gzip magic number bytes read');\n      }\n\n    // fallthrough\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n      this.err = zlib_inflate.inflate(this.strm, this.flush\n\n      // If data was encoded with dictionary\n      );if (this.err === exports.Z_NEED_DICT && this.dictionary) {\n        // Load it\n        this.err = zlib_inflate.inflateSetDictionary(this.strm, this.dictionary);\n        if (this.err === exports.Z_OK) {\n          // And try to decode again\n          this.err = zlib_inflate.inflate(this.strm, this.flush);\n        } else if (this.err === exports.Z_DATA_ERROR) {\n          // Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.\n          // Make it possible for After() to tell a bad dictionary from bad\n          // input.\n          this.err = exports.Z_NEED_DICT;\n        }\n      }\n      while (this.strm.avail_in > 0 && this.mode === exports.GUNZIP && this.err === exports.Z_STREAM_END && this.strm.next_in[0] !== 0x00) {\n        // Bytes remain in input buffer. Perhaps this is another compressed\n        // member in the same archive, or just trailing garbage.\n        // Trailing zero bytes are okay, though, since they are frequently\n        // used for padding.\n\n        this.reset();\n        this.err = zlib_inflate.inflate(this.strm, this.flush);\n      }\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n};\n\nZlib.prototype._checkError = function () {\n  // Acceptable error states depend on the type of zlib stream.\n  switch (this.err) {\n    case exports.Z_OK:\n    case exports.Z_BUF_ERROR:\n      if (this.strm.avail_out !== 0 && this.flush === exports.Z_FINISH) {\n        this._error('unexpected end of file');\n        return false;\n      }\n      break;\n    case exports.Z_STREAM_END:\n      // normal statuses, not fatal\n      break;\n    case exports.Z_NEED_DICT:\n      if (this.dictionary == null) {\n        this._error('Missing dictionary');\n      } else {\n        this._error('Bad dictionary');\n      }\n      return false;\n    default:\n      // something else.\n      this._error('Zlib error');\n      return false;\n  }\n\n  return true;\n};\n\nZlib.prototype._after = function () {\n  if (!this._checkError()) {\n    return;\n  }\n\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  // call the write() cb\n  this.callback(avail_in, avail_out);\n\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype._error = function (message) {\n  if (this.strm.msg) {\n    message = this.strm.msg;\n  }\n  this.onerror(message, this.err\n\n  // no hope of rescue.\n  );this.write_in_progress = false;\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype.init = function (windowBits, level, memLevel, strategy, dictionary) {\n  assert(arguments.length === 4 || arguments.length === 5, 'init(windowBits, level, memLevel, strategy, [dictionary])');\n\n  assert(windowBits >= 8 && windowBits <= 15, 'invalid windowBits');\n  assert(level >= -1 && level <= 9, 'invalid compression level');\n\n  assert(memLevel >= 1 && memLevel <= 9, 'invalid memlevel');\n\n  assert(strategy === exports.Z_FILTERED || strategy === exports.Z_HUFFMAN_ONLY || strategy === exports.Z_RLE || strategy === exports.Z_FIXED || strategy === exports.Z_DEFAULT_STRATEGY, 'invalid strategy');\n\n  this._init(level, windowBits, memLevel, strategy, dictionary);\n  this._setDictionary();\n};\n\nZlib.prototype.params = function () {\n  throw new Error('deflateParams Not supported');\n};\n\nZlib.prototype.reset = function () {\n  this._reset();\n  this._setDictionary();\n};\n\nZlib.prototype._init = function (level, windowBits, memLevel, strategy, dictionary) {\n  this.level = level;\n  this.windowBits = windowBits;\n  this.memLevel = memLevel;\n  this.strategy = strategy;\n\n  this.flush = exports.Z_NO_FLUSH;\n\n  this.err = exports.Z_OK;\n\n  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP) {\n    this.windowBits += 16;\n  }\n\n  if (this.mode === exports.UNZIP) {\n    this.windowBits += 32;\n  }\n\n  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW) {\n    this.windowBits = -1 * this.windowBits;\n  }\n\n  this.strm = new Zstream();\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateInit2(this.strm, this.level, exports.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);\n      break;\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n    case exports.UNZIP:\n      this.err = zlib_inflate.inflateInit2(this.strm, this.windowBits);\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Init error');\n  }\n\n  this.dictionary = dictionary;\n\n  this.write_in_progress = false;\n  this.init_done = true;\n};\n\nZlib.prototype._setDictionary = function () {\n  if (this.dictionary == null) {\n    return;\n  }\n\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateSetDictionary(this.strm, this.dictionary);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to set dictionary');\n  }\n};\n\nZlib.prototype._reset = function () {\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n    case exports.GZIP:\n      this.err = zlib_deflate.deflateReset(this.strm);\n      break;\n    case exports.INFLATE:\n    case exports.INFLATERAW:\n    case exports.GUNZIP:\n      this.err = zlib_inflate.inflateReset(this.strm);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to reset stream');\n  }\n};\n\nexports.Zlib = Zlib;","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"@open-flash/stream\");\nconst incident_1 = require(\"incident\");\nconst swf_tree_1 = require(\"swf-tree\");\nconst zlib = __importStar(require(\"zlib\"));\nconst concat_bytes_1 = require(\"../concat-bytes\");\nconst parse_context_1 = require(\"../parse-context\");\nconst header_1 = require(\"./header\");\nconst tags_1 = require(\"./tags\");\nfunction parseDecompressedMovie(byteStream, swfVersion) {\n    const context = new parse_context_1.DefaultParseContext(swfVersion);\n    const header = header_1.parseHeader(byteStream);\n    const tags = tags_1.parseTagBlockString(byteStream, context);\n    // const tags: Tag[] = [];\n    // while (byteStream.available() > 0) {\n    // A null byte indicates the end-of-tags\n    // if (byteStream.peekUint8() === 0) {\n    //   byteStream.skip(1);\n    //   break;\n    // }\n    // tags.push(parseTag(byteStream, context));\n    // }\n    return { header, tags };\n}\nexports.parseDecompressedMovie = parseDecompressedMovie;\nfunction parseMovie(byteStream) {\n    const startPos = byteStream.bytePos;\n    const headerSignature = header_1.parseSwfSignature(byteStream);\n    switch (headerSignature.compressionMethod) {\n        case swf_tree_1.CompressionMethod.None:\n            byteStream.bytePos = startPos;\n            return parseDecompressedMovie(byteStream, headerSignature.swfVersion);\n        case swf_tree_1.CompressionMethod.Deflate:\n            const curPos = byteStream.bytePos;\n            byteStream.bytePos = startPos;\n            const signature = byteStream.takeBytes(curPos - startPos);\n            const tail = byteStream.tailBytes();\n            const tailBuffer = Buffer.from(tail);\n            // TODO: remove cast\n            const deflated = zlib.inflateSync(tailBuffer);\n            const decompressed = concat_bytes_1.concatBytes([signature, deflated]);\n            return parseDecompressedMovie(new stream_1.ReadableStream(decompressed), headerSignature.swfVersion);\n        case swf_tree_1.CompressionMethod.Lzma:\n            throw new incident_1.Incident(\"NotImplemented\", \"Support for LZMA compression is not implemented yet\");\n        default:\n            throw new incident_1.Incident(\"UnknownCompressionMethod\", \"Unknown compression method\");\n    }\n}\nexports.parseMovie = parseMovie;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcGFyc2Vycy9tb3ZpZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSwrQ0FBb0Q7QUFDcEQsdUNBQW9DO0FBRXBDLHVDQUErRTtBQUMvRSwyQ0FBNkI7QUFDN0Isa0RBQThDO0FBQzlDLG9EQUFxRTtBQUNyRSxxQ0FBMEQ7QUFDMUQsaUNBQTZDO0FBRTdDLFNBQWdCLHNCQUFzQixDQUFDLFVBQTBCLEVBQUUsVUFBaUI7SUFDbEYsTUFBTSxPQUFPLEdBQWlCLElBQUksbUNBQW1CLENBQUMsVUFBVSxDQUFDLENBQUM7SUFFbEUsTUFBTSxNQUFNLEdBQVcsb0JBQVcsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUMvQyxNQUFNLElBQUksR0FBVSwwQkFBbUIsQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFFN0QsMEJBQTBCO0lBQzFCLHVDQUF1QztJQUN2Qyx3Q0FBd0M7SUFDeEMsc0NBQXNDO0lBQ3RDLHdCQUF3QjtJQUN4QixXQUFXO0lBQ1gsSUFBSTtJQUNKLDRDQUE0QztJQUM1QyxJQUFJO0lBQ0osT0FBTyxFQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUMsQ0FBQztBQUN4QixDQUFDO0FBaEJELHdEQWdCQztBQUVELFNBQWdCLFVBQVUsQ0FBQyxVQUEwQjtJQUNuRCxNQUFNLFFBQVEsR0FBYSxVQUFVLENBQUMsT0FBTyxDQUFDO0lBQzlDLE1BQU0sZUFBZSxHQUFpQiwwQkFBaUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNwRSxRQUFRLGVBQWUsQ0FBQyxpQkFBaUIsRUFBRTtRQUN6QyxLQUFLLDRCQUFpQixDQUFDLElBQUk7WUFDekIsVUFBVSxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUM7WUFDOUIsT0FBTyxzQkFBc0IsQ0FBQyxVQUFVLEVBQUUsZUFBZSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3hFLEtBQUssNEJBQWlCLENBQUMsT0FBTztZQUM1QixNQUFNLE1BQU0sR0FBYSxVQUFVLENBQUMsT0FBTyxDQUFDO1lBQzVDLFVBQVUsQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDO1lBQzlCLE1BQU0sU0FBUyxHQUFlLFVBQVUsQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLFFBQVEsQ0FBQyxDQUFDO1lBQ3RFLE1BQU0sSUFBSSxHQUFlLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUNoRCxNQUFNLFVBQVUsR0FBVyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQWMsQ0FBQyxDQUFDO1lBQ3ZELG9CQUFvQjtZQUNwQixNQUFNLFFBQVEsR0FBVyxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3RELE1BQU0sWUFBWSxHQUFlLDBCQUFXLENBQUMsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNwRSxPQUFPLHNCQUFzQixDQUFDLElBQUksdUJBQWMsQ0FBQyxZQUFZLENBQUMsRUFBRSxlQUFlLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDOUYsS0FBSyw0QkFBaUIsQ0FBQyxJQUFJO1lBQ3pCLE1BQU0sSUFBSSxtQkFBUSxDQUFDLGdCQUFnQixFQUFFLHFEQUFxRCxDQUFDLENBQUM7UUFDOUY7WUFDRSxNQUFNLElBQUksbUJBQVEsQ0FBQywwQkFBMEIsRUFBRSw0QkFBNEIsQ0FBQyxDQUFDO0tBQ2hGO0FBQ0gsQ0FBQztBQXRCRCxnQ0FzQkMiLCJmaWxlIjoicGFyc2Vycy9tb3ZpZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlYWRhYmxlU3RyZWFtIH0gZnJvbSBcIkBvcGVuLWZsYXNoL3N0cmVhbVwiO1xuaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcbmltcG9ydCB7IFVpbnQ4LCBVaW50U2l6ZSB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgQ29tcHJlc3Npb25NZXRob2QsIEhlYWRlciwgTW92aWUsIFN3ZlNpZ25hdHVyZSwgVGFnIH0gZnJvbSBcInN3Zi10cmVlXCI7XG5pbXBvcnQgKiBhcyB6bGliIGZyb20gXCJ6bGliXCI7XG5pbXBvcnQgeyBjb25jYXRCeXRlcyB9IGZyb20gXCIuLi9jb25jYXQtYnl0ZXNcIjtcbmltcG9ydCB7IERlZmF1bHRQYXJzZUNvbnRleHQsIFBhcnNlQ29udGV4dCB9IGZyb20gXCIuLi9wYXJzZS1jb250ZXh0XCI7XG5pbXBvcnQgeyBwYXJzZUhlYWRlciwgcGFyc2VTd2ZTaWduYXR1cmUgfSBmcm9tIFwiLi9oZWFkZXJcIjtcbmltcG9ydCB7IHBhcnNlVGFnQmxvY2tTdHJpbmcgfSBmcm9tIFwiLi90YWdzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZURlY29tcHJlc3NlZE1vdmllKGJ5dGVTdHJlYW06IFJlYWRhYmxlU3RyZWFtLCBzd2ZWZXJzaW9uOiBVaW50OCk6IE1vdmllIHtcbiAgY29uc3QgY29udGV4dDogUGFyc2VDb250ZXh0ID0gbmV3IERlZmF1bHRQYXJzZUNvbnRleHQoc3dmVmVyc2lvbik7XG5cbiAgY29uc3QgaGVhZGVyOiBIZWFkZXIgPSBwYXJzZUhlYWRlcihieXRlU3RyZWFtKTtcbiAgY29uc3QgdGFnczogVGFnW10gPSBwYXJzZVRhZ0Jsb2NrU3RyaW5nKGJ5dGVTdHJlYW0sIGNvbnRleHQpO1xuXG4gIC8vIGNvbnN0IHRhZ3M6IFRhZ1tdID0gW107XG4gIC8vIHdoaWxlIChieXRlU3RyZWFtLmF2YWlsYWJsZSgpID4gMCkge1xuICAvLyBBIG51bGwgYnl0ZSBpbmRpY2F0ZXMgdGhlIGVuZC1vZi10YWdzXG4gIC8vIGlmIChieXRlU3RyZWFtLnBlZWtVaW50OCgpID09PSAwKSB7XG4gIC8vICAgYnl0ZVN0cmVhbS5za2lwKDEpO1xuICAvLyAgIGJyZWFrO1xuICAvLyB9XG4gIC8vIHRhZ3MucHVzaChwYXJzZVRhZyhieXRlU3RyZWFtLCBjb250ZXh0KSk7XG4gIC8vIH1cbiAgcmV0dXJuIHtoZWFkZXIsIHRhZ3N9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VNb3ZpZShieXRlU3RyZWFtOiBSZWFkYWJsZVN0cmVhbSk6IE1vdmllIHtcbiAgY29uc3Qgc3RhcnRQb3M6IFVpbnRTaXplID0gYnl0ZVN0cmVhbS5ieXRlUG9zO1xuICBjb25zdCBoZWFkZXJTaWduYXR1cmU6IFN3ZlNpZ25hdHVyZSA9IHBhcnNlU3dmU2lnbmF0dXJlKGJ5dGVTdHJlYW0pO1xuICBzd2l0Y2ggKGhlYWRlclNpZ25hdHVyZS5jb21wcmVzc2lvbk1ldGhvZCkge1xuICAgIGNhc2UgQ29tcHJlc3Npb25NZXRob2QuTm9uZTpcbiAgICAgIGJ5dGVTdHJlYW0uYnl0ZVBvcyA9IHN0YXJ0UG9zO1xuICAgICAgcmV0dXJuIHBhcnNlRGVjb21wcmVzc2VkTW92aWUoYnl0ZVN0cmVhbSwgaGVhZGVyU2lnbmF0dXJlLnN3ZlZlcnNpb24pO1xuICAgIGNhc2UgQ29tcHJlc3Npb25NZXRob2QuRGVmbGF0ZTpcbiAgICAgIGNvbnN0IGN1clBvczogVWludFNpemUgPSBieXRlU3RyZWFtLmJ5dGVQb3M7XG4gICAgICBieXRlU3RyZWFtLmJ5dGVQb3MgPSBzdGFydFBvcztcbiAgICAgIGNvbnN0IHNpZ25hdHVyZTogVWludDhBcnJheSA9IGJ5dGVTdHJlYW0udGFrZUJ5dGVzKGN1clBvcyAtIHN0YXJ0UG9zKTtcbiAgICAgIGNvbnN0IHRhaWw6IFVpbnQ4QXJyYXkgPSBieXRlU3RyZWFtLnRhaWxCeXRlcygpO1xuICAgICAgY29uc3QgdGFpbEJ1ZmZlcjogQnVmZmVyID0gQnVmZmVyLmZyb20odGFpbCBhcyBCdWZmZXIpO1xuICAgICAgLy8gVE9ETzogcmVtb3ZlIGNhc3RcbiAgICAgIGNvbnN0IGRlZmxhdGVkOiBCdWZmZXIgPSB6bGliLmluZmxhdGVTeW5jKHRhaWxCdWZmZXIpO1xuICAgICAgY29uc3QgZGVjb21wcmVzc2VkOiBVaW50OEFycmF5ID0gY29uY2F0Qnl0ZXMoW3NpZ25hdHVyZSwgZGVmbGF0ZWRdKTtcbiAgICAgIHJldHVybiBwYXJzZURlY29tcHJlc3NlZE1vdmllKG5ldyBSZWFkYWJsZVN0cmVhbShkZWNvbXByZXNzZWQpLCBoZWFkZXJTaWduYXR1cmUuc3dmVmVyc2lvbik7XG4gICAgY2FzZSBDb21wcmVzc2lvbk1ldGhvZC5Mem1hOlxuICAgICAgdGhyb3cgbmV3IEluY2lkZW50KFwiTm90SW1wbGVtZW50ZWRcIiwgXCJTdXBwb3J0IGZvciBMWk1BIGNvbXByZXNzaW9uIGlzIG5vdCBpbXBsZW1lbnRlZCB5ZXRcIik7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBJbmNpZGVudChcIlVua25vd25Db21wcmVzc2lvbk1ldGhvZFwiLCBcIlVua25vd24gY29tcHJlc3Npb24gbWV0aG9kXCIpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction concatBytes(chunks) {\n    let totalSize = 0;\n    for (const chunk of chunks) {\n        totalSize += chunk.length;\n    }\n    const result = new Uint8Array(totalSize);\n    let offset = 0;\n    for (const chunk of chunks) {\n        result.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29uY2F0LWJ5dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsU0FBZ0IsV0FBVyxDQUFDLE1BQW9CO0lBQzlDLElBQUksU0FBUyxHQUFhLENBQUMsQ0FBQztJQUM1QixLQUFLLE1BQU0sS0FBSyxJQUFJLE1BQU0sRUFBRTtRQUMxQixTQUFTLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQztLQUMzQjtJQUNELE1BQU0sTUFBTSxHQUFlLElBQUksVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3JELElBQUksTUFBTSxHQUFhLENBQUMsQ0FBQztJQUN6QixLQUFLLE1BQU0sS0FBSyxJQUFJLE1BQU0sRUFBRTtRQUMxQixNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztRQUMxQixNQUFNLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQztLQUN4QjtJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFaRCxrQ0FZQyIsImZpbGUiOiJjb25jYXQtYnl0ZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVaW50U2l6ZSB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0Qnl0ZXMoY2h1bmtzOiBVaW50OEFycmF5W10pOiBVaW50OEFycmF5IHtcbiAgbGV0IHRvdGFsU2l6ZTogVWludFNpemUgPSAwO1xuICBmb3IgKGNvbnN0IGNodW5rIG9mIGNodW5rcykge1xuICAgIHRvdGFsU2l6ZSArPSBjaHVuay5sZW5ndGg7XG4gIH1cbiAgY29uc3QgcmVzdWx0OiBVaW50OEFycmF5ID0gbmV3IFVpbnQ4QXJyYXkodG90YWxTaXplKTtcbiAgbGV0IG9mZnNldDogVWludFNpemUgPSAwO1xuICBmb3IgKGNvbnN0IGNodW5rIG9mIGNodW5rcykge1xuICAgIHJlc3VsdC5zZXQoY2h1bmssIG9mZnNldCk7XG4gICAgb2Zmc2V0ICs9IGNodW5rLmxlbmd0aDtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DefaultParseContext {\n    constructor(version) {\n        this.version = version;\n        this.glyphCounts = new Map();\n    }\n    getVersion() {\n        return this.version;\n    }\n    setGlyphCount(fontId, glyphCount) {\n        this.glyphCounts.set(fontId, glyphCount);\n    }\n    getGlyphCount(fontId) {\n        return this.glyphCounts.get(fontId);\n    }\n}\nexports.DefaultParseContext = DefaultParseContext;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcGFyc2UtY29udGV4dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQW9CQSxNQUFhLG1CQUFtQjtJQUk5QixZQUFZLE9BQWM7UUFDeEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDO0lBQy9CLENBQUM7SUFFRCxVQUFVO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFRCxhQUFhLENBQUMsTUFBYyxFQUFFLFVBQW9CO1FBQ2hELElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsYUFBYSxDQUFDLE1BQWM7UUFDMUIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN0QyxDQUFDO0NBQ0Y7QUFwQkQsa0RBb0JDIiwiZmlsZSI6InBhcnNlLWNvbnRleHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVaW50MTYsIFVpbnQ4LCBVaW50U2l6ZSB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuXG4vKipcbiAqIFJldHVybiB0aGUgbWFqb3IgU1dGIHZlcnNpb24gb3IgdW5kZWZpbmVkIGlmIHRoZSB2ZXJzaW9uIGlzIHVua25vd24uXG4gKi9cbmV4cG9ydCB0eXBlIFZlcnNpb25Qcm92aWRlciA9ICgpID0+IFVpbnQ4O1xuXG4vKipcbiAqIFR5cGUgcmVwcmVzZW50aW5nIGEgZnVuY3Rpb24gcmV0dXJuaW5nIHRoZSBudW1iZXIgb2YgZ2x5cGhzIGluIHRoZSBmb250IHdpdGggSUQgYGZvbnRJZGAuXG4gKiBJZiB0aGUgZm9udCBpcyBub3Qga25vd24sIHJldHVybnMgdW5kZWZpbmVkLlxuICovXG5leHBvcnQgdHlwZSBHbHlwaENvdW50UHJvdmlkZXIgPSAoZm9udElkOiBVaW50MTYpID0+IFVpbnRTaXplIHwgdW5kZWZpbmVkO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBhcnNlQ29udGV4dCB7XG4gIHJlYWRvbmx5IGdldFZlcnNpb246IFZlcnNpb25Qcm92aWRlcjtcbiAgcmVhZG9ubHkgZ2V0R2x5cGhDb3VudDogR2x5cGhDb3VudFByb3ZpZGVyO1xuXG4gIHNldEdseXBoQ291bnQoZm9udElkOiBVaW50MTYsIGdseXBoQ291bnQ6IFVpbnRTaXplKTogdm9pZDtcbn1cblxuZXhwb3J0IGNsYXNzIERlZmF1bHRQYXJzZUNvbnRleHQgaW1wbGVtZW50cyBQYXJzZUNvbnRleHQge1xuICBwcml2YXRlIHJlYWRvbmx5IHZlcnNpb246IFVpbnQ4O1xuICBwcml2YXRlIHJlYWRvbmx5IGdseXBoQ291bnRzOiBNYXA8VWludDE2LCBVaW50U2l6ZT47XG5cbiAgY29uc3RydWN0b3IodmVyc2lvbjogVWludDgpIHtcbiAgICB0aGlzLnZlcnNpb24gPSB2ZXJzaW9uO1xuICAgIHRoaXMuZ2x5cGhDb3VudHMgPSBuZXcgTWFwKCk7XG4gIH1cblxuICBnZXRWZXJzaW9uKCk6IFVpbnQ4IHtcbiAgICByZXR1cm4gdGhpcy52ZXJzaW9uO1xuICB9XG5cbiAgc2V0R2x5cGhDb3VudChmb250SWQ6IFVpbnQxNiwgZ2x5cGhDb3VudDogVWludFNpemUpOiB2b2lkIHtcbiAgICB0aGlzLmdseXBoQ291bnRzLnNldChmb250SWQsIGdseXBoQ291bnQpO1xuICB9XG5cbiAgZ2V0R2x5cGhDb3VudChmb250SWQ6IFVpbnQxNik6IFVpbnRTaXplIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5nbHlwaENvdW50cy5nZXQoZm9udElkKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst swf_tree_1 = require(\"swf-tree\");\nconst incomplete_stream_1 = require(\"../errors/incomplete-stream\");\nconst basic_data_types_1 = require(\"./basic-data-types\");\n// TODO: Move to `movie.ts`\nfunction parseCompressionMethod(byteStream) {\n    if (byteStream.byteEnd < 3) {\n        throw incomplete_stream_1.createIncompleteStreamError(3);\n    }\n    // Read FWS, CWS or ZWS\n    if (byteStream.bytes[byteStream.bytePos + 1] !== \"W\".charCodeAt(0)\n        || byteStream.bytes[byteStream.bytePos + 2] !== \"S\".charCodeAt(0)) {\n        throw incident_1.Incident(\"InvalidCompressionMethod\", \"Invalid compression method\");\n    }\n    let result;\n    switch (byteStream.bytes[byteStream.bytePos]) {\n        case \"F\".charCodeAt(0):\n            result = swf_tree_1.CompressionMethod.None;\n            break;\n        case \"C\".charCodeAt(0):\n            result = swf_tree_1.CompressionMethod.Deflate;\n            break;\n        case \"Z\".charCodeAt(0):\n            result = swf_tree_1.CompressionMethod.Lzma;\n            break;\n        default:\n            throw incident_1.Incident(\"InvalidCompressionMethod\", \"Invalid compression method\");\n    }\n    byteStream.bytePos += 3;\n    return result;\n}\nexports.parseCompressionMethod = parseCompressionMethod;\nfunction parseSwfSignature(byteStream) {\n    if (byteStream.byteEnd < 8) {\n        throw incomplete_stream_1.createIncompleteStreamError(8);\n    }\n    const compressionMethod = parseCompressionMethod(byteStream);\n    const swfVersion = byteStream.readUint8();\n    const uncompressedFileLength = byteStream.readUint32LE();\n    return { compressionMethod, swfVersion, uncompressedFileLength };\n}\nexports.parseSwfSignature = parseSwfSignature;\nfunction parseHeader(byteStream) {\n    const signature = parseSwfSignature(byteStream);\n    const frameSize = basic_data_types_1.parseRect(byteStream);\n    const frameRate = swf_tree_1.Ufixed8P8.fromEpsilons(byteStream.readUint16LE());\n    const frameCount = byteStream.readUint16LE();\n    return { swfVersion: signature.swfVersion, frameSize, frameRate, frameCount };\n}\nexports.parseHeader = parseHeader;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcGFyc2Vycy9oZWFkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSx1Q0FBb0M7QUFFcEMsdUNBQW9GO0FBQ3BGLG1FQUEwRTtBQUMxRSx5REFBK0M7QUFFL0MsMkJBQTJCO0FBQzNCLFNBQWdCLHNCQUFzQixDQUFDLFVBQTBCO0lBQy9ELElBQUksVUFBVSxDQUFDLE9BQU8sR0FBRyxDQUFDLEVBQUU7UUFDMUIsTUFBTSwrQ0FBMkIsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUN0QztJQUNELHVCQUF1QjtJQUN2QixJQUNFLFVBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztXQUMzRCxVQUFVLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFDakU7UUFDQSxNQUFNLG1CQUFRLENBQUMsMEJBQTBCLEVBQUUsNEJBQTRCLENBQUMsQ0FBQztLQUMxRTtJQUVELElBQUksTUFBeUIsQ0FBQztJQUM5QixRQUFRLFVBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQzVDLEtBQUssR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDcEIsTUFBTSxHQUFHLDRCQUFpQixDQUFDLElBQUksQ0FBQztZQUNoQyxNQUFNO1FBQ1IsS0FBSyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUNwQixNQUFNLEdBQUcsNEJBQWlCLENBQUMsT0FBTyxDQUFDO1lBQ25DLE1BQU07UUFDUixLQUFLLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3BCLE1BQU0sR0FBRyw0QkFBaUIsQ0FBQyxJQUFJLENBQUM7WUFDaEMsTUFBTTtRQUNSO1lBQ0UsTUFBTSxtQkFBUSxDQUFDLDBCQUEwQixFQUFFLDRCQUE0QixDQUFDLENBQUM7S0FDNUU7SUFDRCxVQUFVLENBQUMsT0FBTyxJQUFJLENBQUMsQ0FBQztJQUN4QixPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBNUJELHdEQTRCQztBQUVELFNBQWdCLGlCQUFpQixDQUFDLFVBQTBCO0lBQzFELElBQUksVUFBVSxDQUFDLE9BQU8sR0FBRyxDQUFDLEVBQUU7UUFDMUIsTUFBTSwrQ0FBMkIsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUN0QztJQUVELE1BQU0saUJBQWlCLEdBQXNCLHNCQUFzQixDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ2hGLE1BQU0sVUFBVSxHQUFVLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNqRCxNQUFNLHNCQUFzQixHQUFXLFVBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUVqRSxPQUFPLEVBQUMsaUJBQWlCLEVBQUUsVUFBVSxFQUFFLHNCQUFzQixFQUFDLENBQUM7QUFDakUsQ0FBQztBQVZELDhDQVVDO0FBRUQsU0FBZ0IsV0FBVyxDQUFDLFVBQTBCO0lBQ3BELE1BQU0sU0FBUyxHQUFpQixpQkFBaUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUM5RCxNQUFNLFNBQVMsR0FBUyw0QkFBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzlDLE1BQU0sU0FBUyxHQUFjLG9CQUFTLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDO0lBQy9FLE1BQU0sVUFBVSxHQUFXLFVBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNyRCxPQUFPLEVBQUMsVUFBVSxFQUFFLFNBQVMsQ0FBQyxVQUFVLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUMsQ0FBQztBQUM5RSxDQUFDO0FBTkQsa0NBTUMiLCJmaWxlIjoicGFyc2Vycy9oZWFkZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFkYWJsZVN0cmVhbSB9IGZyb20gXCJAb3Blbi1mbGFzaC9zdHJlYW1cIjtcbmltcG9ydCB7IEluY2lkZW50IH0gZnJvbSBcImluY2lkZW50XCI7XG5pbXBvcnQgeyBVaW50MTYsIFVpbnQzMiwgVWludDggfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IENvbXByZXNzaW9uTWV0aG9kLCBIZWFkZXIsIFJlY3QsIFN3ZlNpZ25hdHVyZSwgVWZpeGVkOFA4IH0gZnJvbSBcInN3Zi10cmVlXCI7XG5pbXBvcnQgeyBjcmVhdGVJbmNvbXBsZXRlU3RyZWFtRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JzL2luY29tcGxldGUtc3RyZWFtXCI7XG5pbXBvcnQgeyBwYXJzZVJlY3QgfSBmcm9tIFwiLi9iYXNpYy1kYXRhLXR5cGVzXCI7XG5cbi8vIFRPRE86IE1vdmUgdG8gYG1vdmllLnRzYFxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ29tcHJlc3Npb25NZXRob2QoYnl0ZVN0cmVhbTogUmVhZGFibGVTdHJlYW0pOiBDb21wcmVzc2lvbk1ldGhvZCB7XG4gIGlmIChieXRlU3RyZWFtLmJ5dGVFbmQgPCAzKSB7XG4gICAgdGhyb3cgY3JlYXRlSW5jb21wbGV0ZVN0cmVhbUVycm9yKDMpO1xuICB9XG4gIC8vIFJlYWQgRldTLCBDV1Mgb3IgWldTXG4gIGlmIChcbiAgICBieXRlU3RyZWFtLmJ5dGVzW2J5dGVTdHJlYW0uYnl0ZVBvcyArIDFdICE9PSBcIldcIi5jaGFyQ29kZUF0KDApXG4gICAgfHwgYnl0ZVN0cmVhbS5ieXRlc1tieXRlU3RyZWFtLmJ5dGVQb3MgKyAyXSAhPT0gXCJTXCIuY2hhckNvZGVBdCgwKVxuICApIHtcbiAgICB0aHJvdyBJbmNpZGVudChcIkludmFsaWRDb21wcmVzc2lvbk1ldGhvZFwiLCBcIkludmFsaWQgY29tcHJlc3Npb24gbWV0aG9kXCIpO1xuICB9XG5cbiAgbGV0IHJlc3VsdDogQ29tcHJlc3Npb25NZXRob2Q7XG4gIHN3aXRjaCAoYnl0ZVN0cmVhbS5ieXRlc1tieXRlU3RyZWFtLmJ5dGVQb3NdKSB7XG4gICAgY2FzZSBcIkZcIi5jaGFyQ29kZUF0KDApOlxuICAgICAgcmVzdWx0ID0gQ29tcHJlc3Npb25NZXRob2QuTm9uZTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJDXCIuY2hhckNvZGVBdCgwKTpcbiAgICAgIHJlc3VsdCA9IENvbXByZXNzaW9uTWV0aG9kLkRlZmxhdGU7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwiWlwiLmNoYXJDb2RlQXQoMCk6XG4gICAgICByZXN1bHQgPSBDb21wcmVzc2lvbk1ldGhvZC5Mem1hO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IEluY2lkZW50KFwiSW52YWxpZENvbXByZXNzaW9uTWV0aG9kXCIsIFwiSW52YWxpZCBjb21wcmVzc2lvbiBtZXRob2RcIik7XG4gIH1cbiAgYnl0ZVN0cmVhbS5ieXRlUG9zICs9IDM7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVN3ZlNpZ25hdHVyZShieXRlU3RyZWFtOiBSZWFkYWJsZVN0cmVhbSk6IFN3ZlNpZ25hdHVyZSB7XG4gIGlmIChieXRlU3RyZWFtLmJ5dGVFbmQgPCA4KSB7XG4gICAgdGhyb3cgY3JlYXRlSW5jb21wbGV0ZVN0cmVhbUVycm9yKDgpO1xuICB9XG5cbiAgY29uc3QgY29tcHJlc3Npb25NZXRob2Q6IENvbXByZXNzaW9uTWV0aG9kID0gcGFyc2VDb21wcmVzc2lvbk1ldGhvZChieXRlU3RyZWFtKTtcbiAgY29uc3Qgc3dmVmVyc2lvbjogVWludDggPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuICBjb25zdCB1bmNvbXByZXNzZWRGaWxlTGVuZ3RoOiBVaW50MzIgPSBieXRlU3RyZWFtLnJlYWRVaW50MzJMRSgpO1xuXG4gIHJldHVybiB7Y29tcHJlc3Npb25NZXRob2QsIHN3ZlZlcnNpb24sIHVuY29tcHJlc3NlZEZpbGVMZW5ndGh9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VIZWFkZXIoYnl0ZVN0cmVhbTogUmVhZGFibGVTdHJlYW0pOiBIZWFkZXIge1xuICBjb25zdCBzaWduYXR1cmU6IFN3ZlNpZ25hdHVyZSA9IHBhcnNlU3dmU2lnbmF0dXJlKGJ5dGVTdHJlYW0pO1xuICBjb25zdCBmcmFtZVNpemU6IFJlY3QgPSBwYXJzZVJlY3QoYnl0ZVN0cmVhbSk7XG4gIGNvbnN0IGZyYW1lUmF0ZTogVWZpeGVkOFA4ID0gVWZpeGVkOFA4LmZyb21FcHNpbG9ucyhieXRlU3RyZWFtLnJlYWRVaW50MTZMRSgpKTtcbiAgY29uc3QgZnJhbWVDb3VudDogVWludDE2ID0gYnl0ZVN0cmVhbS5yZWFkVWludDE2TEUoKTtcbiAgcmV0dXJuIHtzd2ZWZXJzaW9uOiBzaWduYXR1cmUuc3dmVmVyc2lvbiwgZnJhbWVTaXplLCBmcmFtZVJhdGUsIGZyYW1lQ291bnR9O1xufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"@open-flash/stream\");\nconst incident_1 = require(\"incident\");\nconst swf_tree_1 = require(\"swf-tree\");\nconst sound_type_1 = require(\"swf-tree/sound/sound-type\");\nconst basic_data_types_1 = require(\"./basic-data-types\");\nconst button_1 = require(\"./button\");\nconst display_1 = require(\"./display\");\nconst image_1 = require(\"./image\");\nconst morph_shape_1 = require(\"./morph-shape\");\nconst shape_1 = require(\"./shape\");\nconst sound_1 = require(\"./sound\");\nconst text_1 = require(\"./text\");\n/**\n * Read tags until the end of the stream or \"end-of-tags\".\n */\nfunction parseTagBlockString(byteStream, context) {\n    const tags = [];\n    while (byteStream.available() >= 2) {\n        // A null byte indicates the end-of-tags\n        // TODO: This is false. Example: empty `DoAction`. We should peek an Uint16.\n        if (byteStream.peekUint8() === 0) {\n            const oldBytePos = byteStream.bytePos;\n            byteStream.skip(1);\n            if (byteStream.peekUint8() === 0) {\n                byteStream.skip(1);\n                break;\n            }\n            else {\n                byteStream.bytePos = oldBytePos;\n            }\n        }\n        tags.push(parseTag(byteStream, context));\n    }\n    return tags;\n}\nexports.parseTagBlockString = parseTagBlockString;\nfunction parseTag(byteStream, context) {\n    const { code, length } = parseTagHeader(byteStream);\n    const tag = parseTagBody(byteStream.take(length), code, context);\n    switch (tag.type) {\n        case swf_tree_1.TagType.DefineFont:\n            if (tag.glyphs !== undefined) {\n                context.setGlyphCount(tag.id, tag.glyphs.length);\n            }\n            else {\n                // TODO: Explain why we are using 0: does it make sense? Maybe `undefined` is better?\n                context.setGlyphCount(tag.id, 0);\n            }\n            break;\n        default:\n            break;\n    }\n    return tag;\n}\nexports.parseTag = parseTag;\nfunction parseTagHeader(byteStream) {\n    const codeAndLength = byteStream.readUint16LE();\n    const code = codeAndLength >>> 6;\n    const maxLength = (1 << 6) - 1;\n    const length = codeAndLength & maxLength;\n    if (length === maxLength) {\n        return { code, length: byteStream.readUint32LE() };\n    }\n    else {\n        return { code, length };\n    }\n}\n// tslint:disable-next-line:cyclomatic-complexity\nfunction parseTagBody(byteStream, tagCode, context) {\n    switch (tagCode) {\n        case 1:\n            return { type: swf_tree_1.TagType.ShowFrame };\n        case 2:\n            return parseDefineShape(byteStream);\n        case 4:\n            return parsePlaceObject(byteStream);\n        case 5:\n            return parseRemoveObject(byteStream);\n        case 6:\n            return parseDefineBits(byteStream, context.getVersion());\n        case 8:\n            return parseDefineJpegTables(byteStream, context.getVersion());\n        case 9:\n            return parseSetBackgroundColor(byteStream);\n        case 11:\n            return parseDefineText(byteStream);\n        case 12:\n            // TODO: Ignore DoAction if version >= 9 && use_as3\n            return parseDoAction(byteStream);\n        case 14:\n            return parseDefineSound(byteStream);\n        case 20:\n            return parseDefineBitsLossless(byteStream);\n        case 21:\n            return parseDefineBitsJpeg2(byteStream, context.getVersion());\n        case 22:\n            return parseDefineShape2(byteStream);\n        case 26:\n            return parsePlaceObject2(byteStream, context.getVersion());\n        case 28:\n            return parseRemoveObject2(byteStream);\n        case 32:\n            return parseDefineShape3(byteStream);\n        case 34:\n            return parseDefineButton2(byteStream);\n        case 35:\n            return parseDefineBitsJpeg3(byteStream, context.getVersion());\n        case 36:\n            return parseDefineBitsLossless2(byteStream);\n        case 37:\n            return parseDefineEditText(byteStream);\n        case 39:\n            return parseDefineSprite(byteStream, context);\n        case 43:\n            return parseFrameLabel(byteStream);\n        case 46:\n            return parseDefineMorphShape(byteStream);\n        case 56:\n            return parseExportAssets(byteStream);\n        case 57:\n            return parseImportAssets(byteStream);\n        case 59:\n            return parseDoInitAction(byteStream);\n        case 69:\n            return parseFileAttributes(byteStream);\n        case 70:\n            return parsePlaceObject3(byteStream, context.getVersion());\n        case 71:\n            return parseImportAssets2(byteStream);\n        case 73:\n            return parseDefineFontAlignZones(byteStream, context.getGlyphCount.bind(context));\n        case 74:\n            return parseCsmTextSettings(byteStream);\n        case 75:\n            return parseDefineFont3(byteStream);\n        case 77:\n            return parseMetadata(byteStream);\n        case 83:\n            return parseDefineShape4(byteStream);\n        case 84:\n            return parseDefineMorphShape2(byteStream);\n        case 86:\n            return parseDefineSceneAndFrameLabelData(byteStream);\n        case 88:\n            return parseDefineFontName(byteStream);\n        case 90:\n            return parseDefineBitsJpeg4(byteStream, context.getVersion());\n        default:\n            console.warn(`UnknownTagType: Code ${tagCode}`);\n            return { type: swf_tree_1.TagType.Unknown, code: tagCode, data: Uint8Array.from(byteStream.tailBytes()) };\n    }\n}\nfunction parseCsmTextSettings(byteStream) {\n    const textId = byteStream.readUint16LE();\n    const bitStream = byteStream.asBitStream();\n    const renderer = text_1.parseTextRendererBits(bitStream);\n    const fitting = text_1.parseGridFittingBits(bitStream);\n    bitStream.align();\n    const thickness = byteStream.readFloat32LE();\n    const sharpness = byteStream.readFloat32LE();\n    byteStream.skip(1);\n    return { type: swf_tree_1.TagType.CsmTextSettings, textId, renderer, fitting, thickness, sharpness };\n}\nexports.parseCsmTextSettings = parseCsmTextSettings;\nfunction parseDefineBits(byteStream, swfVersion) {\n    const id = byteStream.readUint16LE();\n    const data = byteStream.tailBytes();\n    let imageDimensions;\n    if (image_1.testImageStart(data, image_1.JPEG_START) || (swfVersion < 8 && image_1.testImageStart(data, image_1.ERRONEOUS_JPEG_START))) {\n        imageDimensions = image_1.getJpegImageDimensions(new stream_1.ReadableStream(data));\n    }\n    else {\n        throw new incident_1.Incident(\"UnknownBitmapType\");\n    }\n    return Object.assign({ type: swf_tree_1.TagType.DefineBitmap, id }, imageDimensions, { mediaType: \"image/x-partial-jpeg\", data });\n}\nexports.parseDefineBits = parseDefineBits;\nfunction parseDefineBitsJpeg2(byteStream, swfVersion) {\n    const id = byteStream.readUint16LE();\n    const data = byteStream.tailBytes();\n    let mediaType;\n    let imageDimensions;\n    if (image_1.testImageStart(data, image_1.JPEG_START) || (swfVersion < 8 && image_1.testImageStart(data, image_1.ERRONEOUS_JPEG_START))) {\n        mediaType = \"image/jpeg\";\n        imageDimensions = image_1.getJpegImageDimensions(new stream_1.ReadableStream(data));\n    }\n    else if (image_1.testImageStart(data, image_1.PNG_START)) {\n        mediaType = \"image/png\";\n        imageDimensions = image_1.getPngImageDimensions(new stream_1.ReadableStream(data));\n    }\n    else if (image_1.testImageStart(data, image_1.GIF_START)) {\n        mediaType = \"image/gif\";\n        imageDimensions = image_1.getGifImageDimensions(new stream_1.ReadableStream(data));\n    }\n    else {\n        throw new incident_1.Incident(\"UnknownBitmapType\");\n    }\n    return Object.assign({ type: swf_tree_1.TagType.DefineBitmap, id }, imageDimensions, { mediaType, data });\n}\nexports.parseDefineBitsJpeg2 = parseDefineBitsJpeg2;\nfunction parseDefineBitsJpeg3(byteStream, swfVersion) {\n    const id = byteStream.readUint16LE();\n    const bytePos = byteStream.bytePos;\n    const dataLen = byteStream.readUint32LE();\n    let data = byteStream.takeBytes(dataLen);\n    let mediaType;\n    let imageDimensions;\n    if (image_1.testImageStart(data, image_1.JPEG_START) || (swfVersion < 8 && image_1.testImageStart(data, image_1.ERRONEOUS_JPEG_START))) {\n        mediaType = \"image/jpeg\";\n        imageDimensions = image_1.getJpegImageDimensions(new stream_1.ReadableStream(data));\n        if (byteStream.available() > 0) {\n            mediaType = \"image/x-ajpeg\";\n            byteStream.bytePos = bytePos;\n            data = byteStream.tailBytes();\n        }\n    }\n    else if (image_1.testImageStart(data, image_1.PNG_START)) {\n        mediaType = \"image/png\";\n        imageDimensions = image_1.getPngImageDimensions(new stream_1.ReadableStream(data));\n    }\n    else if (image_1.testImageStart(data, image_1.GIF_START)) {\n        mediaType = \"image/gif\";\n        imageDimensions = image_1.getGifImageDimensions(new stream_1.ReadableStream(data));\n    }\n    else {\n        throw new incident_1.Incident(\"UnknownBitmapType\");\n    }\n    return Object.assign({ type: swf_tree_1.TagType.DefineBitmap, id }, imageDimensions, { mediaType, data });\n}\nexports.parseDefineBitsJpeg3 = parseDefineBitsJpeg3;\n// TODO: Merge defineBitsJpegX functions into defineBitsJpegAny\nfunction parseDefineBitsJpeg4(_byteStream, _swfVersion) {\n    throw new incident_1.Incident(\"Unsupported DefineBitsJpeg4\");\n}\nexports.parseDefineBitsJpeg4 = parseDefineBitsJpeg4;\nfunction parseDefineBitsLossless(byteStream) {\n    return parseDefineBitsLosslessAny(byteStream, \"image/x-swf-bmp\");\n}\nexports.parseDefineBitsLossless = parseDefineBitsLossless;\nfunction parseDefineBitsLossless2(byteStream) {\n    return parseDefineBitsLosslessAny(byteStream, \"image/x-swf-abmp\");\n}\nexports.parseDefineBitsLossless2 = parseDefineBitsLossless2;\nfunction parseDefineBitsLosslessAny(byteStream, mediaType) {\n    const id = byteStream.readUint16LE();\n    const startPos = byteStream.bytePos;\n    byteStream.skip(1); // BitmapFormat\n    const width = byteStream.readUint16LE();\n    const height = byteStream.readUint16LE();\n    byteStream.bytePos = startPos;\n    const data = byteStream.tailBytes();\n    return { type: swf_tree_1.TagType.DefineBitmap, id, width, height, mediaType, data };\n}\nfunction parseDefineButton2(byteStream) {\n    const id = byteStream.readUint16LE();\n    const flags = byteStream.readUint8();\n    const trackAsMenu = (flags & (1 << 0)) !== 0;\n    // Skip bits [1, 7]\n    // TODO: Assert action offset matches\n    const actionOffset = byteStream.readUint16LE();\n    const characters = button_1.parseButtonRecordString(byteStream, button_1.ButtonVersion.Button2);\n    const actions = actionOffset === 0 ? [] : button_1.parseButton2CondActionString(byteStream);\n    return { type: swf_tree_1.TagType.DefineButton, id, trackAsMenu, characters, actions };\n}\nexports.parseDefineButton2 = parseDefineButton2;\nfunction parseDefineEditText(byteStream) {\n    const id = byteStream.readUint16LE();\n    const bounds = basic_data_types_1.parseRect(byteStream);\n    const flags = byteStream.readUint16LE();\n    const hasFont = (flags & (1 << 0)) !== 0;\n    const hasMaxLength = (flags & (1 << 1)) !== 0;\n    const hasColor = (flags & (1 << 2)) !== 0;\n    const readonly = (flags & (1 << 3)) !== 0;\n    const password = (flags & (1 << 4)) !== 0;\n    const multiline = (flags & (1 << 5)) !== 0;\n    const wordWrap = (flags & (1 << 6)) !== 0;\n    const hasText = (flags & (1 << 7)) !== 0;\n    const useGlyphFont = (flags & (1 << 8)) !== 0;\n    const html = (flags & (1 << 9)) !== 0;\n    const wasStatic = (flags & (1 << 10)) !== 0;\n    const border = (flags & (1 << 11)) !== 0;\n    const noSelect = (flags & (1 << 12)) !== 0;\n    const hasLayout = (flags & (1 << 13)) !== 0;\n    const autoSize = (flags & (1 << 14)) !== 0;\n    const hasFontClass = (flags & (1 << 15)) !== 0;\n    // TODO: Assert that !(hasFont && hasFontClass) (mutual exclusion)\n    const fontId = hasFont ? byteStream.readUint16LE() : undefined;\n    const fontClass = hasFontClass ? byteStream.readCString() : undefined;\n    const fontSize = (hasFont || hasFontClass) ? byteStream.readUint16LE() : undefined;\n    const color = hasColor ? basic_data_types_1.parseStraightSRgba8(byteStream) : undefined;\n    const maxLength = hasMaxLength ? byteStream.readUint16LE() : undefined;\n    const align = hasLayout ? text_1.parseTextAlignment(byteStream) : undefined;\n    const marginLeft = hasLayout ? byteStream.readUint16LE() : 0;\n    const marginRight = hasLayout ? byteStream.readUint16LE() : 0;\n    const indent = hasLayout ? byteStream.readUint16LE() : 0;\n    const leading = hasLayout ? byteStream.readSint16LE() : 0;\n    const rawVariableName = byteStream.readCString();\n    const variableName = rawVariableName.length > 0 ? rawVariableName : undefined;\n    const text = hasText ? byteStream.readCString() : undefined;\n    return {\n        type: swf_tree_1.TagType.DefineDynamicText,\n        id,\n        bounds,\n        wordWrap,\n        multiline,\n        password,\n        readonly,\n        autoSize,\n        noSelect,\n        border,\n        wasStatic,\n        html,\n        useGlyphFont,\n        fontId,\n        fontClass,\n        fontSize,\n        color,\n        maxLength,\n        align,\n        marginLeft,\n        marginRight,\n        indent,\n        leading,\n        variableName,\n        text,\n    };\n}\nexports.parseDefineEditText = parseDefineEditText;\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/swf/parser/module.ts#L632\nfunction parseDefineFont3(byteStream) {\n    const id = byteStream.readUint16LE();\n    const flags = byteStream.readUint8();\n    const isBold = (flags & (1 << 0)) !== 0;\n    const isItalic = (flags & (1 << 1)) !== 0;\n    const useWideCodes = (flags & (1 << 2)) !== 0;\n    const useWideOffsets = (flags & (1 << 3)) !== 0;\n    const isAnsi = (flags & (1 << 4)) !== 0;\n    const isSmall = (flags & (1 << 5)) !== 0;\n    const isShiftJis = (flags & (1 << 6)) !== 0;\n    const hasLayout = (flags & (1 << 7)) !== 0;\n    const language = text_1.parseLanguageCode(byteStream);\n    const fontNameLength = byteStream.readUint8();\n    // TODO: Check for `NUL` terminators in font name\n    const fontName = byteStream.readString(fontNameLength);\n    const glyphCount = byteStream.readUint16LE();\n    if (glyphCount === 0) {\n        // According to Shumway:\n        // > The SWF format docs doesn't say that, but the DefineFont{2,3} tag ends here for device fonts.\n        // Counter-example: mt/hammerfest/game.swf, has still 2 bytes for Verdana\n        // System font\n        return {\n            type: swf_tree_1.TagType.DefineFont,\n            id,\n            fontName,\n            isBold,\n            isItalic,\n            isAnsi,\n            isSmall,\n            isShiftJis,\n            language,\n        };\n    }\n    const glyphs = text_1.parseOffsetGlyphs(byteStream, glyphCount, useWideOffsets);\n    const codeUnits = new Array(glyphCount);\n    for (let i = 0; i < codeUnits.length; i++) {\n        codeUnits[i] = useWideCodes ? byteStream.readUint16LE() : byteStream.readUint8();\n    }\n    const layout = hasLayout ? text_1.parseFontLayout(byteStream, glyphCount) : undefined;\n    return {\n        type: swf_tree_1.TagType.DefineFont,\n        id,\n        fontName,\n        isBold,\n        isItalic,\n        isAnsi,\n        isSmall,\n        isShiftJis,\n        language,\n        glyphs,\n        codeUnits,\n        layout,\n    };\n}\nexports.parseDefineFont3 = parseDefineFont3;\nfunction parseDefineFontAlignZones(byteStream, glyphCountProvider) {\n    const fontId = byteStream.readUint16LE();\n    const glyphCount = glyphCountProvider(fontId);\n    if (glyphCount === undefined) {\n        throw new incident_1.Incident(\"ParseError\", `ParseDefineFontAlignZones: Unknown font for id: ${fontId}`);\n    }\n    const bitStream = byteStream.asBitStream();\n    const csmTableHint = text_1.parseCsmTableHintBits(bitStream);\n    bitStream.align();\n    const zones = [];\n    for (let i = 0; i < glyphCount; i++) {\n        zones.push(text_1.parseFontAlignmentZone(byteStream));\n    }\n    return { type: swf_tree_1.TagType.DefineFontAlignZones, fontId, csmTableHint, zones };\n}\nexports.parseDefineFontAlignZones = parseDefineFontAlignZones;\nfunction parseDefineFontName(byteStream) {\n    const fontId = byteStream.readUint16LE();\n    const name = byteStream.readCString();\n    const copyright = byteStream.readCString();\n    return { type: swf_tree_1.TagType.DefineFontName, fontId, name, copyright };\n}\nexports.parseDefineFontName = parseDefineFontName;\nfunction parseDefineJpegTables(byteStream, swfVersion) {\n    const data = byteStream.tailBytes();\n    if (!(image_1.testImageStart(data, image_1.JPEG_START) || (swfVersion < 8 && image_1.testImageStart(data, image_1.ERRONEOUS_JPEG_START)))) {\n        throw new incident_1.Incident(\"UnknownBitmapType\");\n    }\n    return { type: swf_tree_1.TagType.DefineJpegTables, data };\n}\nexports.parseDefineJpegTables = parseDefineJpegTables;\nfunction parseDefineMorphShape(byteStream) {\n    return parseDefineMorphShapeAny(byteStream, morph_shape_1.MorphShapeVersion.MorphShape1);\n}\nexports.parseDefineMorphShape = parseDefineMorphShape;\nfunction parseDefineMorphShape2(byteStream) {\n    return parseDefineMorphShapeAny(byteStream, morph_shape_1.MorphShapeVersion.MorphShape2);\n}\nexports.parseDefineMorphShape2 = parseDefineMorphShape2;\nfunction parseDefineMorphShapeAny(byteStream, morphShapeVersion) {\n    const id = byteStream.readUint16LE();\n    const bounds = basic_data_types_1.parseRect(byteStream);\n    const morphBounds = basic_data_types_1.parseRect(byteStream);\n    const edgeBounds = morphShapeVersion >= morph_shape_1.MorphShapeVersion.MorphShape2\n        ? basic_data_types_1.parseRect(byteStream)\n        : undefined;\n    const morphEdgeBounds = morphShapeVersion >= morph_shape_1.MorphShapeVersion.MorphShape2\n        ? basic_data_types_1.parseRect(byteStream)\n        : undefined;\n    const flags = morphShapeVersion >= morph_shape_1.MorphShapeVersion.MorphShape2 ? byteStream.readUint8() : 0;\n    const hasScalingStrokes = (flags & (1 << 0)) !== 0;\n    const hasNonScalingStrokes = (flags & (1 << 1)) !== 0;\n    const shape = morph_shape_1.parseMorphShape(byteStream, morphShapeVersion);\n    // TODO: Use this property order in swf-tree\n    return {\n        type: swf_tree_1.TagType.DefineMorphShape,\n        id,\n        bounds,\n        morphBounds,\n        edgeBounds,\n        morphEdgeBounds,\n        hasScalingStrokes,\n        hasNonScalingStrokes,\n        shape,\n    };\n}\nexports.parseDefineMorphShapeAny = parseDefineMorphShapeAny;\nfunction parseDefineSceneAndFrameLabelData(byteStream) {\n    const sceneCount = byteStream.readUint32Leb128();\n    const scenes = [];\n    for (let i = 0; i < sceneCount; i++) {\n        const offset = byteStream.readUint32Leb128();\n        const name = byteStream.readCString();\n        scenes.push({ offset, name });\n    }\n    const labelCount = byteStream.readUint32Leb128();\n    const labels = [];\n    for (let i = 0; i < labelCount; i++) {\n        const frame = byteStream.readUint32Leb128();\n        const name = byteStream.readCString();\n        labels.push({ frame, name });\n    }\n    return {\n        type: swf_tree_1.TagType.DefineSceneAndFrameLabelData,\n        scenes,\n        labels,\n    };\n}\nexports.parseDefineSceneAndFrameLabelData = parseDefineSceneAndFrameLabelData;\nfunction parseDefineShape(byteStream) {\n    return parseDefineShapeAny(byteStream, shape_1.ShapeVersion.Shape1);\n}\nexports.parseDefineShape = parseDefineShape;\nfunction parseDefineShape2(byteStream) {\n    return parseDefineShapeAny(byteStream, shape_1.ShapeVersion.Shape2);\n}\nexports.parseDefineShape2 = parseDefineShape2;\nfunction parseDefineShape3(byteStream) {\n    return parseDefineShapeAny(byteStream, shape_1.ShapeVersion.Shape3);\n}\nexports.parseDefineShape3 = parseDefineShape3;\nfunction parseDefineShape4(byteStream) {\n    return parseDefineShapeAny(byteStream, shape_1.ShapeVersion.Shape4);\n}\nexports.parseDefineShape4 = parseDefineShape4;\nfunction parseDefineShapeAny(byteStream, shapeVersion) {\n    const id = byteStream.readUint16LE();\n    const bounds = basic_data_types_1.parseRect(byteStream);\n    const edgeBounds = shapeVersion >= shape_1.ShapeVersion.Shape4 ? basic_data_types_1.parseRect(byteStream) : undefined;\n    const flags = shapeVersion >= shape_1.ShapeVersion.Shape4 ? byteStream.readUint8() : 0;\n    const hasScalingStrokes = (flags & (1 << 0)) !== 0;\n    const hasNonScalingStrokes = (flags & (1 << 1)) !== 0;\n    const hasFillWinding = (flags & (1 << 2)) !== 0;\n    // (Skip bits [3, 7])\n    const shape = shape_1.parseShape(byteStream, shapeVersion);\n    // TODO: Update swf-tree to use this order for the properties\n    return {\n        type: swf_tree_1.TagType.DefineShape,\n        id,\n        bounds,\n        edgeBounds,\n        hasScalingStrokes,\n        hasNonScalingStrokes,\n        hasFillWinding,\n        shape,\n    };\n}\nfunction parseDefineSound(byteStream) {\n    const id = byteStream.readUint16LE();\n    const flags = byteStream.readUint8();\n    const soundType = (flags & (1 << 0)) !== 0 ? sound_type_1.SoundType.Stereo : sound_type_1.SoundType.Mono;\n    const soundSize = (flags & (1 << 1)) !== 0 ? 16 : 8;\n    const soundRate = sound_1.getSoundRateFromCode(((flags >>> 2) & 0b11));\n    const format = sound_1.getAudioCodingFormatFromCode(((flags >>> 4) & 0b1111));\n    const sampleCount = byteStream.readUint32LE();\n    const data = byteStream.tailBytes();\n    // TODO: Use this order in swf-tree\n    return { type: swf_tree_1.TagType.DefineSound, id, format, soundType, soundSize, soundRate, sampleCount, data };\n}\nfunction parseDefineSprite(byteStream, context) {\n    const id = byteStream.readUint16LE();\n    const frameCount = byteStream.readUint16LE();\n    const tags = parseTagBlockString(byteStream, context);\n    return {\n        type: swf_tree_1.TagType.DefineSprite,\n        id,\n        frameCount,\n        // TODO: Check validity of the tags\n        tags: tags,\n    };\n}\nexports.parseDefineSprite = parseDefineSprite;\nfunction parseDefineText(byteStream) {\n    const id = byteStream.readUint16LE();\n    const bounds = basic_data_types_1.parseRect(byteStream);\n    const matrix = basic_data_types_1.parseMatrix(byteStream);\n    const indexBits = byteStream.readUint8();\n    const advanceBits = byteStream.readUint8();\n    const records = text_1.parseTextRecordString(byteStream, false, indexBits, advanceBits);\n    return { type: swf_tree_1.TagType.DefineText, id, bounds, matrix, records };\n}\nexports.parseDefineText = parseDefineText;\nfunction parseDoAction(byteStream) {\n    const actions = Uint8Array.from(byteStream.tailBytes());\n    return { type: swf_tree_1.TagType.DoAction, actions };\n}\nexports.parseDoAction = parseDoAction;\nfunction parseDoInitAction(byteStream) {\n    const spriteId = byteStream.readUint16LE();\n    const actions = Uint8Array.from(byteStream.tailBytes());\n    return { type: swf_tree_1.TagType.DoInitAction, spriteId, actions };\n}\nexports.parseDoInitAction = parseDoInitAction;\nfunction parseExportAssets(byteStream) {\n    const assetCount = byteStream.readUint16LE();\n    const assets = [];\n    for (let i = 0; i < assetCount; i++) {\n        const id = byteStream.readUint16LE();\n        const name = byteStream.readCString();\n        assets.push({ id, name });\n    }\n    return {\n        type: swf_tree_1.TagType.ExportAssets,\n        assets,\n    };\n}\nexports.parseExportAssets = parseExportAssets;\nfunction parseFileAttributes(byteStream) {\n    const flags = byteStream.readUint8();\n    return {\n        type: swf_tree_1.TagType.FileAttributes,\n        useDirectBlit: (flags & (1 << 6)) !== 0,\n        useGpu: (flags & (1 << 5)) !== 0,\n        hasMetadata: (flags & (1 << 4)) !== 0,\n        useAs3: (flags & (1 << 3)) !== 0,\n        noCrossDomainCaching: (flags & (1 << 2)) !== 0,\n        useRelativeUrls: (flags & (1 << 1)) !== 0,\n        useNetwork: (flags & (1 << 0)) !== 0,\n    };\n}\nexports.parseFileAttributes = parseFileAttributes;\nfunction parseFrameLabel(byteStream) {\n    const name = byteStream.readCString();\n    // The isAnchor was introduced in SWF6, check version before reading?\n    const isAnchor = byteStream.available() > 0 && byteStream.readUint8() !== 0;\n    return {\n        type: swf_tree_1.TagType.FrameLabel,\n        name,\n        isAnchor,\n    };\n}\nexports.parseFrameLabel = parseFrameLabel;\nfunction parseImportAssets(byteStream) {\n    const url = byteStream.readCString();\n    const assetCount = byteStream.readUint16LE();\n    const assets = [];\n    for (let i = 0; i < assetCount; i++) {\n        const id = byteStream.readUint16LE();\n        const name = byteStream.readCString();\n        assets.push({ id, name });\n    }\n    return {\n        type: swf_tree_1.TagType.ImportAssets,\n        url,\n        assets,\n    };\n}\nexports.parseImportAssets = parseImportAssets;\nfunction parseImportAssets2(byteStream) {\n    const url = byteStream.readCString();\n    byteStream.skip(2);\n    const assetCount = byteStream.readUint16LE();\n    const assets = [];\n    for (let i = 0; i < assetCount; i++) {\n        const id = byteStream.readUint16LE();\n        const name = byteStream.readCString();\n        assets.push({ id, name });\n    }\n    return {\n        type: swf_tree_1.TagType.ImportAssets,\n        url,\n        assets,\n    };\n}\nexports.parseImportAssets2 = parseImportAssets2;\nfunction parseMetadata(byteStream) {\n    return { type: swf_tree_1.TagType.Metadata, metadata: byteStream.readCString() };\n}\nexports.parseMetadata = parseMetadata;\nfunction parsePlaceObject(byteStream) {\n    const characterId = byteStream.readUint16LE();\n    const depth = byteStream.readUint16LE();\n    const matrix = basic_data_types_1.parseMatrix(byteStream);\n    let colorTransform = undefined;\n    if (byteStream.available() > 0) {\n        colorTransform = Object.assign({}, basic_data_types_1.parseColorTransform(byteStream), { alphaMult: swf_tree_1.Sfixed8P8.fromValue(1), alphaAdd: 0 });\n    }\n    return {\n        type: swf_tree_1.TagType.PlaceObject,\n        isUpdate: false,\n        depth,\n        characterId,\n        matrix,\n        colorTransform,\n        filters: undefined,\n        blendMode: undefined,\n        visible: undefined,\n        clipActions: undefined,\n    };\n}\nexports.parsePlaceObject = parsePlaceObject;\nfunction parsePlaceObject2(byteStream, swfVersion) {\n    const flags = byteStream.readUint8();\n    const isUpdate = (flags & (1 << 0)) !== 0;\n    const hasCharacterId = (flags & (1 << 1)) !== 0;\n    const hasMatrix = (flags & (1 << 2)) !== 0;\n    const hasColorTransform = (flags & (1 << 3)) !== 0;\n    const hasRatio = (flags & (1 << 4)) !== 0;\n    const hasName = (flags & (1 << 5)) !== 0;\n    const hasClipDepth = (flags & (1 << 6)) !== 0;\n    const hasClipActions = (flags & (1 << 7)) !== 0;\n    const depth = byteStream.readUint16LE();\n    const characterId = hasCharacterId ? byteStream.readUint16LE() : undefined;\n    const matrix = hasMatrix ? basic_data_types_1.parseMatrix(byteStream) : undefined;\n    const colorTransform = hasColorTransform ?\n        basic_data_types_1.parseColorTransformWithAlpha(byteStream) :\n        undefined;\n    const ratio = hasRatio ? byteStream.readUint16LE() : undefined;\n    const name = hasName ? byteStream.readCString() : undefined;\n    const clipDepth = hasClipDepth ? byteStream.readUint16LE() : undefined;\n    const clipActions = hasClipActions ?\n        display_1.parseClipActionsString(byteStream, swfVersion >= 6) :\n        undefined;\n    return {\n        type: swf_tree_1.TagType.PlaceObject,\n        isUpdate,\n        depth,\n        characterId,\n        matrix,\n        colorTransform,\n        ratio,\n        name,\n        clipDepth,\n        filters: undefined,\n        blendMode: undefined,\n        visible: undefined,\n        clipActions,\n    };\n}\nexports.parsePlaceObject2 = parsePlaceObject2;\nfunction parsePlaceObject3(byteStream, swfVersion) {\n    const flags = byteStream.readUint16LE();\n    const isUpdate = (flags & (1 << 0)) !== 0;\n    const hasCharacterId = (flags & (1 << 1)) !== 0;\n    const hasMatrix = (flags & (1 << 2)) !== 0;\n    const hasColorTransform = (flags & (1 << 3)) !== 0;\n    const hasRatio = (flags & (1 << 4)) !== 0;\n    const hasName = (flags & (1 << 5)) !== 0;\n    const hasClipDepth = (flags & (1 << 6)) !== 0;\n    const hasClipActions = (flags & (1 << 7)) !== 0;\n    const hasFilters = (flags & (1 << 8)) !== 0;\n    const hasBlendMode = (flags & (1 << 9)) !== 0;\n    const hasCacheHint = (flags & (1 << 10)) !== 0;\n    const hasClassName = (flags & (1 << 11)) !== 0;\n    const hasImage = (flags & (1 << 12)) !== 0;\n    const hasVisibility = (flags & (1 << 13)) !== 0;\n    // TODO: Check whether this should rather be `hasOpaqueBackground`\n    const hasBackgroundColor = (flags & (1 << 14)) !== 0;\n    // Skip bit 15\n    const depth = byteStream.readUint16LE();\n    const className = hasClassName || (hasImage && hasCharacterId)\n        ? byteStream.readCString()\n        : undefined;\n    const characterId = hasCharacterId ? byteStream.readUint16LE() : undefined;\n    const matrix = hasMatrix ? basic_data_types_1.parseMatrix(byteStream) : undefined;\n    const colorTransform = hasColorTransform\n        ? basic_data_types_1.parseColorTransformWithAlpha(byteStream)\n        : undefined;\n    const ratio = hasRatio ? byteStream.readUint16LE() : undefined;\n    const name = hasName ? byteStream.readCString() : undefined;\n    const clipDepth = hasClipDepth ? byteStream.readUint16LE() : undefined;\n    const filters = hasFilters ? display_1.parseFilterList(byteStream) : undefined;\n    const blendMode = hasBlendMode ? display_1.parseBlendMode(byteStream) : undefined;\n    const useBitmapCache = hasCacheHint ? byteStream.readUint8() !== 0 : undefined;\n    const isVisible = hasVisibility ? byteStream.readUint8() !== 0 : undefined;\n    // This does not match the spec, see Shumway\n    // https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/swf/parser/module.ts#L158\n    // TODO(demurgos): Check if it is RGBA or ARGB\n    const backgroundColor = hasBackgroundColor ? basic_data_types_1.parseStraightSRgba8(byteStream) : undefined;\n    const clipActions = hasClipActions\n        ? display_1.parseClipActionsString(byteStream, swfVersion >= 6)\n        : undefined;\n    return {\n        type: swf_tree_1.TagType.PlaceObject,\n        isUpdate,\n        depth,\n        characterId,\n        matrix,\n        colorTransform,\n        ratio,\n        name,\n        className,\n        clipDepth,\n        filters,\n        blendMode,\n        bitmapCache: useBitmapCache,\n        visible: isVisible,\n        backgroundColor,\n        clipActions,\n    };\n}\nexports.parsePlaceObject3 = parsePlaceObject3;\nfunction parseRemoveObject(byteStream) {\n    const characterId = byteStream.readUint16LE();\n    const depth = byteStream.readUint16LE();\n    return { type: swf_tree_1.TagType.RemoveObject, characterId, depth };\n}\nexports.parseRemoveObject = parseRemoveObject;\nfunction parseRemoveObject2(byteStream) {\n    const depth = byteStream.readUint16LE();\n    return { type: swf_tree_1.TagType.RemoveObject, depth };\n}\nexports.parseRemoveObject2 = parseRemoveObject2;\nfunction parseSetBackgroundColor(byteStream) {\n    return { type: swf_tree_1.TagType.SetBackgroundColor, color: basic_data_types_1.parseSRgb8(byteStream) };\n}\nexports.parseSetBackgroundColor = parseSetBackgroundColor;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst blend_mode_1 = require(\"swf-tree/blend-mode\");\nconst incomplete_stream_1 = require(\"../errors/incomplete-stream\");\nconst basic_data_types_1 = require(\"./basic-data-types\");\nconst display_1 = require(\"./display\");\nvar ButtonVersion;\n(function (ButtonVersion) {\n    ButtonVersion[ButtonVersion[\"Button1\"] = 1] = \"Button1\";\n    ButtonVersion[ButtonVersion[\"Button2\"] = 2] = \"Button2\";\n})(ButtonVersion = exports.ButtonVersion || (exports.ButtonVersion = {}));\nfunction parseButtonRecordString(byteStream, buttonVersion) {\n    const result = [];\n    while (true) {\n        if (byteStream.available() === 0) {\n            throw incomplete_stream_1.createIncompleteStreamError();\n        }\n        if (byteStream.peekUint8() === 0) {\n            // Consume end of string\n            byteStream.skip(1);\n            break;\n        }\n        result.push(parseButtonRecord(byteStream, buttonVersion));\n    }\n    return result;\n}\nexports.parseButtonRecordString = parseButtonRecordString;\nfunction parseButtonRecord(byteStream, buttonVersion) {\n    const flags = byteStream.readUint8();\n    const stateUp = (flags & (1 << 0)) !== 0;\n    const stateOver = (flags & (1 << 1)) !== 0;\n    const stateDown = (flags & (1 << 2)) !== 0;\n    const stateHitTest = (flags & (1 << 3)) !== 0;\n    const hasFilterList = (flags & (1 << 4)) !== 0;\n    const hasBlendMode = (flags & (1 << 5)) !== 0;\n    // (Skip bits [6, 7])\n    const characterId = byteStream.readUint16LE();\n    const depth = byteStream.readUint16LE();\n    const matrix = basic_data_types_1.parseMatrix(byteStream);\n    let colorTransform = undefined;\n    let filters = [];\n    let blendMode = blend_mode_1.BlendMode.Normal;\n    if (buttonVersion >= ButtonVersion.Button2) {\n        colorTransform = basic_data_types_1.parseColorTransformWithAlpha(byteStream);\n        if (hasFilterList) {\n            filters = display_1.parseFilterList(byteStream);\n        }\n        if (hasBlendMode) {\n            blendMode = display_1.parseBlendMode(byteStream);\n        }\n    }\n    return {\n        stateUp,\n        stateOver,\n        stateDown,\n        stateHitTest,\n        characterId,\n        depth,\n        matrix,\n        colorTransform,\n        filters,\n        blendMode,\n    };\n}\nexports.parseButtonRecord = parseButtonRecord;\n/**\n * Reads a string of at least one Button2 cond actions\n */\nfunction parseButton2CondActionString(byteStream) {\n    const result = [];\n    let nextActionOffset;\n    do {\n        nextActionOffset = byteStream.readUint16LE();\n        result.push(parseButton2CondAction(byteStream));\n    } while (nextActionOffset !== 0);\n    return result;\n}\nexports.parseButton2CondActionString = parseButton2CondActionString;\nfunction parseButton2CondAction(byteStream) {\n    const conditions = parseButtonCond(byteStream);\n    const actions = Uint8Array.from(byteStream.tailBytes());\n    return { conditions, actions };\n}\nexports.parseButton2CondAction = parseButton2CondAction;\nfunction parseButtonCond(byteStream) {\n    const flags = byteStream.readUint16LE();\n    let keyPress = (flags >> 0) & 0x7f;\n    if (keyPress === 0) {\n        keyPress = undefined;\n    }\n    else if (keyPress === 7\n        || (9 <= keyPress && keyPress <= 12)\n        || (20 <= keyPress && keyPress <= 31)\n        || keyPress > 126) {\n        throw new incident_1.Incident(\"InvalidKeyCode\", { code: keyPress });\n    }\n    const overDownToIdle = (flags & (1 << 7)) !== 0;\n    const idleToOverUp = (flags & (1 << 8)) !== 0;\n    const overUpToIdle = (flags & (1 << 9)) !== 0;\n    const overUpToOverDown = (flags & (1 << 10)) !== 0;\n    const overDownToOverUp = (flags & (1 << 11)) !== 0;\n    const overDownToOutDown = (flags & (1 << 12)) !== 0;\n    const outDownToOverDown = (flags & (1 << 13)) !== 0;\n    const outDownToIdle = (flags & (1 << 14)) !== 0;\n    const idleToOverDown = (flags & (1 << 15)) !== 0;\n    return {\n        keyPress,\n        overDownToIdle,\n        idleToOverUp,\n        overUpToIdle,\n        overUpToOverDown,\n        overDownToOverUp,\n        overDownToOutDown,\n        outDownToOverDown,\n        outDownToIdle,\n        idleToOverDown,\n    };\n}\nexports.parseButtonCond = parseButtonCond;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\n// SWF and PNG spec (5.2 PNG Signature)\nexports.PNG_START = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\nexports.GIF_START = new Uint8Array([0x47, 0x49, 0x46, 0x38, 0x39, 0x61]); // \"GIF89a\"\nexports.JPEG_START = new Uint8Array([0xff, 0xd8]); // SOI marker\nexports.ERRONEOUS_JPEG_START = new Uint8Array([0xff, 0xd9, 0xff, 0xd8, 0xff, 0xd8]);\n/**\n * Reads image properties from a byte stream with the content of a PNG image.\n * It trusts that the image has a valid PNG signature (first 8 bytes).\n *\n * @see https://www.w3.org/TR/PNG/#5Chunk-layout\n * @see https://www.w3.org/TR/PNG/#5ChunkOrdering\n * @see https://www.w3.org/TR/PNG/#11IHDR\n */\nfunction getPngImageDimensions(byteStream) {\n    // Skip signature (8 bytes) and size of chunk (4 bytes)\n    byteStream.skip(12);\n    const chunkType = byteStream.readUint32BE();\n    const IHDR_CHUNK_TYPE = 0x49484452;\n    if (chunkType !== IHDR_CHUNK_TYPE) {\n        throw new incident_1.Incident(\"InvalidPngFile\", { byteStream }, \"Expected first chunk to be `IHDR`\");\n    }\n    const width = byteStream.readUint32LE();\n    const height = byteStream.readUint32LE();\n    return { width, height };\n}\nexports.getPngImageDimensions = getPngImageDimensions;\n// export function readJpeg(byteStream: ReadableByteStream, fixJpeg: boolean): [Uint8Array, ImageProperties] {\n//   let height: Uint16 | undefined = undefined;\n//   let width: Uint16 | undefined = undefined;\n//\n//   const JPEG_SOI = new Uint8Array([0xff, 0xd8]);\n//   const JPEG_EOI = new Uint8Array([0xff, 0xd9]);\n//   const chunks: Uint8Array[] = [];\n//   if (fixJpeg) {\n//     chunks.push(JPEG_SOI);\n//   }\n//   for (const chunk of readJpegChunks(byteStream)) {\n//     const code: Uint8 = chunk[1];\n//     if (fixJpeg) {\n//       if (code === 0xd8 || code === 0xd9) { // SOI or EOI\n//         continue;\n//       }\n//     }\n//     chunks.push(chunk);\n//     if ((code & 0xfc) === 0xc0 && chunk.length >= 9) { // SOF: 0b110000xx\n//       const frameHeight: Uint16 = (chunk[5] << 8) + chunk[6];\n//       const frameWidth: Uint16 = (chunk[5] << 8) + chunk[6];\n//       if (height === undefined) {\n//         height = frameHeight;\n//       } else if (height !== frameHeight) {\n//         // TODO: console.warn or error\n//       }\n//       if (width === undefined) {\n//         width = frameWidth;\n//       } else if (width !== frameWidth) {\n//         // TODO: console.warn or error\n//       }\n//       // TODO: Inject JPEG table in first SOF if needed?\n//     }\n//   }\n//   if (fixJpeg) {\n//     chunks.push(JPEG_EOI);\n//   }\n//   if (width === undefined || height === undefined) {\n//     throw new Incident(\"InvalidJpeg\", \"Frame dimensions not found\");\n//   }\n//   return [concatBytes(chunks), {width, height, hasAlpha: false}];\n// }\nfunction getJpegImageDimensions(byteStream) {\n    let height = undefined;\n    let width = undefined;\n    for (const chunk of readJpegChunks(byteStream)) {\n        const code = chunk[1];\n        // SOF: 0b110000xx\n        if ((code & 0xfc) === 0xc0 && chunk.length >= 9) {\n            // TODO: Check why TSLint is confused here\n            // tslint:disable-next-line:restrict-plus-operands\n            const frameHeight = (chunk[5] << 8) + chunk[6];\n            // tslint:disable-next-line:restrict-plus-operands\n            const frameWidth = (chunk[7] << 8) + chunk[8];\n            if (height === undefined || width === undefined) {\n                height = frameHeight;\n                width = frameWidth;\n            }\n            else if (height !== frameHeight || width !== frameWidth) {\n                // TODO: console.warn or error\n            }\n        }\n    }\n    if (width === undefined || height === undefined) {\n        throw new incident_1.Incident(\"InvalidJpeg\", \"Frame dimensions not found\");\n    }\n    return { width, height };\n}\nexports.getJpegImageDimensions = getJpegImageDimensions;\n/**\n * Returns the JPEG chunks: assumes all the chunks are complete.\n */\nfunction* readJpegChunks(byteStream) {\n    const bytes = byteStream.takeBytes(byteStream.available());\n    let i = 0;\n    const byteCount = bytes.length;\n    function getNextChunkIndex(search) {\n        // A chunk marker starts with `0xff` followed by any byte except:\n        // - `0x00` (ff 00 is escaped ff)\n        // - `0xff` (padding)\n        while ((search + 1) < byteCount) {\n            if (bytes[search] === 0xff && (bytes[search + 1] !== 0x00 && bytes[search + 1] !== 0xff)) {\n                return search;\n            }\n            else {\n                search++;\n            }\n        }\n        return undefined;\n    }\n    let chunkStart = getNextChunkIndex(i);\n    while (chunkStart !== undefined) {\n        const code = bytes[chunkStart + 1];\n        i += 2;\n        // Check if this chunk has a `size` field\n        if ((code >= 0xc0 && code <= 0xc7)\n            || (code >= 0xc9 && code <= 0xcf)\n            || (code >= 0xda && code <= 0xef)\n            || code === 0xfe) {\n            // Advance by `size` (stored as an Uint16LE)\n            i += (bytes[chunkStart + 2] << 8) + bytes[chunkStart + 3];\n        }\n        const nextChunkStart = getNextChunkIndex(i);\n        yield bytes.subarray(chunkStart, nextChunkStart);\n        chunkStart = nextChunkStart;\n    }\n}\nfunction getGifImageDimensions(byteStream) {\n    byteStream.skip(6); // GIF header: \"GIF89a\" in ASCII for SWF\n    const width = byteStream.readUint16BE();\n    const height = byteStream.readUint16BE();\n    return { width, height };\n}\nexports.getGifImageDimensions = getGifImageDimensions;\n/**\n * Returns a boolean indicating if `imageData` starts with `startBytes`\n */\nfunction testImageStart(imageData, startBytes) {\n    if (imageData.length < startBytes.length) {\n        return false;\n    }\n    for (let i = 0; i < startBytes.length; i++) {\n        if (imageData[i] !== startBytes[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.testImageStart = testImageStart;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst swf_tree_1 = require(\"swf-tree\");\nconst cap_style_1 = require(\"swf-tree/cap-style\");\nconst _type_1 = require(\"swf-tree/join-styles/_type\");\nconst _type_2 = require(\"swf-tree/shape-records/_type\");\nconst basic_data_types_1 = require(\"./basic-data-types\");\nconst gradient_1 = require(\"./gradient\");\nconst shape_1 = require(\"./shape\");\nvar MorphShapeVersion;\n(function (MorphShapeVersion) {\n    MorphShapeVersion[MorphShapeVersion[\"MorphShape1\"] = 1] = \"MorphShape1\";\n    MorphShapeVersion[MorphShapeVersion[\"MorphShape2\"] = 2] = \"MorphShape2\";\n})(MorphShapeVersion = exports.MorphShapeVersion || (exports.MorphShapeVersion = {}));\nfunction parseMorphShape(byteStream, morphShapeVersion) {\n    byteStream.skip(4); // Skip offset (uint32) (TODO: Read this and use it to assert the shape is OK)\n    const bitStream = byteStream.asBitStream();\n    const result = parseMorphShapeBits(bitStream, morphShapeVersion);\n    bitStream.align();\n    return result;\n}\nexports.parseMorphShape = parseMorphShape;\nfunction parseMorphShapeBits(bitStream, morphShapeVersion) {\n    const styles = parseMorphShapeStylesBits(bitStream, morphShapeVersion);\n    const startRecords = parseMorphShapeStartRecordStringBits(bitStream, styles.fillBits, styles.lineBits, morphShapeVersion);\n    bitStream.align();\n    // TODO: We should be able to skip these bits (no styles used for the endRecords)\n    const fillBits = bitStream.readUint32Bits(4);\n    const lineBits = bitStream.readUint32Bits(4);\n    const records = parseMorphShapeEndRecordStringBits(bitStream, startRecords, fillBits, lineBits, morphShapeVersion);\n    return {\n        initialStyles: { fill: styles.fill, line: styles.line },\n        records,\n    };\n}\nexports.parseMorphShapeBits = parseMorphShapeBits;\nfunction parseMorphShapeStylesBits(bitStream, morphShapeVersion) {\n    const byteStream = bitStream.asByteStream();\n    const fill = parseMorphFillStyleList(byteStream);\n    const line = parseMorphLineStyleList(byteStream, morphShapeVersion);\n    bitStream = byteStream.asBitStream();\n    const fillBits = bitStream.readUint32Bits(4);\n    const lineBits = bitStream.readUint32Bits(4);\n    return { fill, line, fillBits, lineBits };\n}\nexports.parseMorphShapeStylesBits = parseMorphShapeStylesBits;\nfunction parseMorphShapeStartRecordStringBits(bitStream, fillBits, lineBits, morphShapeVersion) {\n    const result = [];\n    while (true) {\n        const bytePos = bitStream.bytePos;\n        const bitPos = bitStream.bitPos;\n        const head = bitStream.readUint16Bits(6);\n        if (head === 0) {\n            break;\n        }\n        else {\n            bitStream.bytePos = bytePos;\n            bitStream.bitPos = bitPos;\n        }\n        const isEdge = bitStream.readBoolBits();\n        if (isEdge) {\n            const isStraightEdge = bitStream.readBoolBits();\n            if (isStraightEdge) {\n                result.push(shape_1.parseStraightEdgeBits(bitStream));\n            }\n            else {\n                result.push(shape_1.parseCurvedEdgeBits(bitStream));\n            }\n        }\n        else {\n            let styles;\n            [styles, [fillBits, lineBits]] = parseMorphStyleChangeBits(bitStream, fillBits, lineBits, morphShapeVersion);\n            result.push(styles);\n        }\n    }\n    return result;\n}\nexports.parseMorphShapeStartRecordStringBits = parseMorphShapeStartRecordStringBits;\nfunction asCurvedEdge(edge) {\n    if (edge.type === _type_2.ShapeRecordType.CurvedEdge) {\n        return edge;\n    }\n    return {\n        type: _type_2.ShapeRecordType.CurvedEdge,\n        controlDelta: { x: edge.delta.x / 2, y: edge.delta.y / 2 },\n        anchorDelta: { x: edge.delta.x / 2, y: edge.delta.y / 2 },\n    };\n}\nfunction asMorphEdge(startEdge, endEdge) {\n    if (startEdge.type === _type_2.ShapeRecordType.StraightEdge && endEdge.type === _type_2.ShapeRecordType.StraightEdge) {\n        return {\n            type: _type_2.ShapeRecordType.StraightEdge,\n            delta: startEdge.delta,\n            morphDelta: endEdge.delta,\n        };\n    }\n    const startCurve = asCurvedEdge(startEdge);\n    const endCurve = asCurvedEdge(endEdge);\n    return {\n        type: _type_2.ShapeRecordType.CurvedEdge,\n        controlDelta: startCurve.controlDelta,\n        anchorDelta: startCurve.anchorDelta,\n        morphControlDelta: endCurve.controlDelta,\n        morphAnchorDelta: endCurve.anchorDelta,\n    };\n}\nfunction parseMorphShapeEndRecordStringBits(bitStream, startRecords, fillBits, lineBits, morphShapeVersion) {\n    const result = [];\n    for (const startRecord of startRecords) {\n        if (startRecord.type === _type_2.ShapeRecordType.StyleChange && startRecord.moveTo === undefined) {\n            // The end shape contains only edge (straight or curved) or moveTo records, it matches the start records\n            result.push(startRecord);\n            continue;\n        }\n        const bytePos = bitStream.bytePos;\n        const bitPos = bitStream.bitPos;\n        const head = bitStream.readUint16Bits(6);\n        if (head === 0) {\n            throw new incident_1.Incident(\"MissingMorphShapeEndRecords\");\n        }\n        else {\n            bitStream.bytePos = bytePos;\n            bitStream.bitPos = bitPos;\n        }\n        const isEdge = bitStream.readBoolBits();\n        if (isEdge) {\n            if (startRecord.type !== _type_2.ShapeRecordType.StraightEdge && startRecord.type !== _type_2.ShapeRecordType.CurvedEdge) {\n                throw new incident_1.Incident(\"UnexpectedEdge\");\n            }\n            const startEdge = startRecord;\n            const isStraightEdge = bitStream.readBoolBits();\n            // tslint:disable-next-line:max-line-length\n            const endEdge = isStraightEdge ? shape_1.parseStraightEdgeBits(bitStream) : shape_1.parseCurvedEdgeBits(bitStream);\n            result.push(asMorphEdge(startEdge, endEdge));\n        }\n        else {\n            if (startRecord.type !== _type_2.ShapeRecordType.StyleChange) {\n                throw new incident_1.Incident(\"UnexpectedStyleChange\");\n            }\n            const startStyle = startRecord;\n            let styleChange;\n            [styleChange, [fillBits, lineBits]] = parseMorphStyleChangeBits(bitStream, fillBits, lineBits, morphShapeVersion);\n            if (styleChange.moveTo === undefined) {\n                throw new incident_1.Incident(\"ExpectedMoveTo\");\n            }\n            result.push(Object.assign({}, startStyle, { morphMoveTo: styleChange.moveTo }));\n        }\n    }\n    const head = bitStream.readUint16Bits(6);\n    if (head !== 0) {\n        throw new incident_1.Incident(\"ExtraMorphShapeEndRecords\");\n    }\n    return result;\n}\nexports.parseMorphShapeEndRecordStringBits = parseMorphShapeEndRecordStringBits;\nfunction parseMorphStyleChangeBits(bitStream, fillBits, lineBits, morphShapeVersion) {\n    const hasNewStyles = bitStream.readBoolBits();\n    const changeLineStyle = bitStream.readBoolBits();\n    const changeRightFill = bitStream.readBoolBits();\n    const changeLeftFill = bitStream.readBoolBits();\n    const hasMoveTo = bitStream.readBoolBits();\n    let moveTo = undefined;\n    if (hasMoveTo) {\n        const nBits = bitStream.readUint16Bits(5);\n        const x = bitStream.readSint32Bits(nBits);\n        const y = bitStream.readSint32Bits(nBits);\n        moveTo = { x, y };\n    }\n    const leftFill = changeLeftFill ? bitStream.readUint16Bits(fillBits) : undefined;\n    const rightFill = changeRightFill ? bitStream.readUint16Bits(fillBits) : undefined;\n    const lineStyle = changeLineStyle ? bitStream.readUint16Bits(lineBits) : undefined;\n    let newStyles = undefined;\n    if (hasNewStyles) {\n        const styles = parseMorphShapeStylesBits(bitStream, morphShapeVersion);\n        newStyles = {\n            fill: styles.fill,\n            line: styles.line,\n        };\n        fillBits = styles.fillBits;\n        lineBits = styles.lineBits;\n    }\n    const styleChangeRecord = {\n        type: _type_2.ShapeRecordType.StyleChange,\n        moveTo,\n        morphMoveTo: undefined,\n        leftFill,\n        rightFill,\n        lineStyle,\n        newStyles,\n    };\n    return [styleChangeRecord, [fillBits, lineBits]];\n}\nexports.parseMorphStyleChangeBits = parseMorphStyleChangeBits;\nfunction parseMorphFillStyleList(byteStream) {\n    const result = [];\n    const len = shape_1.parseListLength(byteStream, true);\n    for (let i = 0; i < len; i++) {\n        result.push(parseMorphFillStyle(byteStream));\n    }\n    return result;\n}\nexports.parseMorphFillStyleList = parseMorphFillStyleList;\nfunction parseMorphFillStyle(byteStream) {\n    switch (byteStream.readUint8()) {\n        case 0x00:\n            return parseMorphSolidFill(byteStream);\n        case 0x10:\n            return parseMorphLinearGradientFill(byteStream);\n        case 0x12:\n            return parseMorphRadialGradientFill(byteStream);\n        case 0x13:\n            // TODO: Check if this requires shapeVersion >= Shape4\n            return parseMorphFocalGradientFill(byteStream);\n        case 0x40:\n            return parseMorphBitmapFill(byteStream, true, true);\n        case 0x41:\n            return parseMorphBitmapFill(byteStream, false, true);\n        case 0x42:\n            return parseMorphBitmapFill(byteStream, true, false);\n        case 0x43:\n            return parseMorphBitmapFill(byteStream, false, false);\n        default:\n            throw new Error(\"Unexpected morph fill style\");\n    }\n}\nexports.parseMorphFillStyle = parseMorphFillStyle;\nfunction parseMorphBitmapFill(byteStream, repeating, smoothed) {\n    const bitmapId = byteStream.readUint16LE();\n    const matrix = basic_data_types_1.parseMatrix(byteStream);\n    const morphMatrix = basic_data_types_1.parseMatrix(byteStream);\n    return {\n        type: swf_tree_1.FillStyleType.Bitmap,\n        bitmapId,\n        matrix,\n        morphMatrix,\n        repeating,\n        smoothed,\n    };\n}\nexports.parseMorphBitmapFill = parseMorphBitmapFill;\nfunction parseMorphFocalGradientFill(byteStream) {\n    const matrix = basic_data_types_1.parseMatrix(byteStream);\n    const morphMatrix = basic_data_types_1.parseMatrix(byteStream);\n    const gradient = gradient_1.parseMorphGradient(byteStream, true);\n    const focalPoint = swf_tree_1.Sfixed8P8.fromEpsilons(byteStream.readSint16LE());\n    const morphFocalPoint = swf_tree_1.Sfixed8P8.fromEpsilons(byteStream.readSint16LE());\n    return {\n        type: swf_tree_1.FillStyleType.FocalGradient,\n        matrix,\n        morphMatrix,\n        gradient,\n        focalPoint,\n        morphFocalPoint,\n    };\n}\nexports.parseMorphFocalGradientFill = parseMorphFocalGradientFill;\nfunction parseMorphLinearGradientFill(byteStream) {\n    const matrix = basic_data_types_1.parseMatrix(byteStream);\n    const morphMatrix = basic_data_types_1.parseMatrix(byteStream);\n    const gradient = gradient_1.parseMorphGradient(byteStream, true);\n    return {\n        type: swf_tree_1.FillStyleType.LinearGradient,\n        matrix,\n        morphMatrix,\n        gradient,\n    };\n}\nexports.parseMorphLinearGradientFill = parseMorphLinearGradientFill;\nfunction parseMorphRadialGradientFill(byteStream) {\n    const matrix = basic_data_types_1.parseMatrix(byteStream);\n    const morphMatrix = basic_data_types_1.parseMatrix(byteStream);\n    const gradient = gradient_1.parseMorphGradient(byteStream, true);\n    return {\n        type: swf_tree_1.FillStyleType.RadialGradient,\n        matrix,\n        morphMatrix,\n        gradient,\n    };\n}\nexports.parseMorphRadialGradientFill = parseMorphRadialGradientFill;\nfunction parseMorphSolidFill(byteStream) {\n    const color = basic_data_types_1.parseStraightSRgba8(byteStream);\n    const morphColor = basic_data_types_1.parseStraightSRgba8(byteStream);\n    return {\n        type: swf_tree_1.FillStyleType.Solid,\n        color,\n        morphColor,\n    };\n}\nexports.parseMorphSolidFill = parseMorphSolidFill;\nfunction parseMorphLineStyleList(byteStream, morphShapeVersion) {\n    const result = [];\n    const len = shape_1.parseListLength(byteStream, true);\n    for (let i = 0; i < len; i++) {\n        if (morphShapeVersion >= MorphShapeVersion.MorphShape2) {\n            result.push(parseMorphLineStyle2(byteStream));\n        }\n        else {\n            result.push(parseMorphLineStyle1(byteStream));\n        }\n    }\n    return result;\n}\nexports.parseMorphLineStyleList = parseMorphLineStyleList;\nfunction parseMorphLineStyle1(byteStream) {\n    const width = byteStream.readUint16LE();\n    const morphWidth = byteStream.readUint16LE();\n    const color = basic_data_types_1.parseStraightSRgba8(byteStream);\n    const morphColor = basic_data_types_1.parseStraightSRgba8(byteStream);\n    return {\n        width,\n        morphWidth,\n        startCap: cap_style_1.CapStyle.Round,\n        endCap: cap_style_1.CapStyle.Round,\n        join: { type: _type_1.JoinStyleType.Round },\n        noHScale: false,\n        noVScale: false,\n        noClose: false,\n        pixelHinting: false,\n        fill: {\n            type: swf_tree_1.FillStyleType.Solid,\n            color,\n            morphColor,\n        },\n    };\n}\nexports.parseMorphLineStyle1 = parseMorphLineStyle1;\nfunction parseMorphLineStyle2(byteStream) {\n    const width = byteStream.readUint16LE();\n    const morphWidth = byteStream.readUint16LE();\n    const flags = byteStream.readUint16LE();\n    const pixelHinting = (flags & (1 << 0)) !== 0;\n    const noVScale = (flags & (1 << 1)) !== 0;\n    const noHScale = (flags & (1 << 2)) !== 0;\n    const hasFill = (flags & (1 << 3)) !== 0;\n    const joinStyleId = ((flags >>> 4) & 0b11);\n    const startCapStyleId = ((flags >>> 6) & 0b11);\n    const endCapStyleId = ((flags >>> 8) & 0b11);\n    const noClose = (flags & (1 << 10)) !== 0;\n    // (Skip bits [11, 15])\n    let join;\n    switch (joinStyleId) {\n        case 0:\n            join = { type: _type_1.JoinStyleType.Round };\n            break;\n        case 1:\n            join = { type: _type_1.JoinStyleType.Bevel };\n            break;\n        case 2:\n            join = { type: _type_1.JoinStyleType.Miter, limit: swf_tree_1.Sfixed8P8.fromEpsilons(byteStream.readSint16LE()) };\n            break;\n        default:\n            throw new incident_1.Incident(\"UnexpectedJoinStyleId\", { id: joinStyleId });\n    }\n    let fill;\n    if (hasFill) {\n        fill = parseMorphFillStyle(byteStream);\n    }\n    else {\n        const color = basic_data_types_1.parseStraightSRgba8(byteStream);\n        const morphColor = basic_data_types_1.parseStraightSRgba8(byteStream);\n        fill = { type: swf_tree_1.FillStyleType.Solid, color, morphColor };\n    }\n    return {\n        width,\n        morphWidth,\n        startCap: shape_1.capStyleFromId(startCapStyleId),\n        endCap: shape_1.capStyleFromId(endCapStyleId),\n        join,\n        noHScale,\n        noVScale,\n        noClose,\n        pixelHinting,\n        fill,\n    };\n}\nexports.parseMorphLineStyle2 = parseMorphLineStyle2;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcGFyc2Vycy9tb3JwaC1zaGFwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHVDQUFvQztBQUVwQyx1Q0FBZ0U7QUFDaEUsa0RBQThDO0FBRTlDLHNEQUEyRDtBQVMzRCx3REFBK0Q7QUFLL0QseURBQXNFO0FBQ3RFLHlDQUFnRDtBQUNoRCxtQ0FBc0c7QUFFdEcsSUFBWSxpQkFHWDtBQUhELFdBQVksaUJBQWlCO0lBQzNCLHVFQUFlLENBQUE7SUFDZix1RUFBZSxDQUFBO0FBQ2pCLENBQUMsRUFIVyxpQkFBaUIsR0FBakIseUJBQWlCLEtBQWpCLHlCQUFpQixRQUc1QjtBQUVELFNBQWdCLGVBQWUsQ0FBQyxVQUE4QixFQUFFLGlCQUFvQztJQUNsRyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsOEVBQThFO0lBQ2xHLE1BQU0sU0FBUyxHQUFzQixVQUFVLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDOUQsTUFBTSxNQUFNLEdBQWUsbUJBQW1CLENBQUMsU0FBUyxFQUFFLGlCQUFpQixDQUFDLENBQUM7SUFDN0UsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ2xCLE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFORCwwQ0FNQztBQUVELFNBQWdCLG1CQUFtQixDQUFDLFNBQTRCLEVBQUUsaUJBQW9DO0lBQ3BHLE1BQU0sTUFBTSxHQUEyQix5QkFBeUIsQ0FBQyxTQUFTLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztJQUMvRixNQUFNLFlBQVksR0FBdUIsb0NBQW9DLENBQzNFLFNBQVMsRUFDVCxNQUFNLENBQUMsUUFBUSxFQUNmLE1BQU0sQ0FBQyxRQUFRLEVBQ2YsaUJBQWlCLENBQ2xCLENBQUM7SUFDRixTQUFTLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDbEIsaUZBQWlGO0lBQ2pGLE1BQU0sUUFBUSxHQUFhLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkQsTUFBTSxRQUFRLEdB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bURDIiwiZmlsZSI6InBhcnNlcnMvbW9ycGgtc2hhcGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFkYWJsZUJpdFN0cmVhbSwgUmVhZGFibGVCeXRlU3RyZWFtIH0gZnJvbSBcIkBvcGVuLWZsYXNoL3N0cmVhbVwiO1xuaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcbmltcG9ydCB7IFNpbnQzMiwgVWludDE2LCBVaW50MiwgVWludFNpemUgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IGZpbGxTdHlsZXMsIEZpbGxTdHlsZVR5cGUsIFNmaXhlZDhQOCB9IGZyb20gXCJzd2YtdHJlZVwiO1xuaW1wb3J0IHsgQ2FwU3R5bGUgfSBmcm9tIFwic3dmLXRyZWUvY2FwLXN0eWxlXCI7XG5pbXBvcnQgeyBKb2luU3R5bGUgfSBmcm9tIFwic3dmLXRyZWUvam9pbi1zdHlsZVwiO1xuaW1wb3J0IHsgSm9pblN0eWxlVHlwZSB9IGZyb20gXCJzd2YtdHJlZS9qb2luLXN0eWxlcy9fdHlwZVwiO1xuaW1wb3J0IHsgTWF0cml4IH0gZnJvbSBcInN3Zi10cmVlL21hdHJpeFwiO1xuaW1wb3J0IHsgTW9ycGhGaWxsU3R5bGUgfSBmcm9tIFwic3dmLXRyZWUvbW9ycGgtZmlsbC1zdHlsZVwiO1xuaW1wb3J0IHsgTW9ycGhHcmFkaWVudCB9IGZyb20gXCJzd2YtdHJlZS9tb3JwaC1ncmFkaWVudFwiO1xuaW1wb3J0IHsgTW9ycGhMaW5lU3R5bGUgfSBmcm9tIFwic3dmLXRyZWUvbW9ycGgtbGluZS1zdHlsZVwiO1xuaW1wb3J0IHsgTW9ycGhTaGFwZSB9IGZyb20gXCJzd2YtdHJlZS9tb3JwaC1zaGFwZVwiO1xuaW1wb3J0IHsgTW9ycGhTaGFwZVJlY29yZCB9IGZyb20gXCJzd2YtdHJlZS9tb3JwaC1zaGFwZS1yZWNvcmRcIjtcbmltcG9ydCB7IE1vcnBoU2hhcGVTdHlsZXMgfSBmcm9tIFwic3dmLXRyZWUvbW9ycGgtc2hhcGUtc3R5bGVzXCI7XG5pbXBvcnQgeyBNb3JwaEN1cnZlZEVkZ2UsIE1vcnBoU3RyYWlnaHRFZGdlLCBNb3JwaFN0eWxlQ2hhbmdlIH0gZnJvbSBcInN3Zi10cmVlL3NoYXBlLXJlY29yZHNcIjtcbmltcG9ydCB7IFNoYXBlUmVjb3JkVHlwZSB9IGZyb20gXCJzd2YtdHJlZS9zaGFwZS1yZWNvcmRzL190eXBlXCI7XG5pbXBvcnQgeyBDdXJ2ZWRFZGdlIH0gZnJvbSBcInN3Zi10cmVlL3NoYXBlLXJlY29yZHMvY3VydmVkLWVkZ2VcIjtcbmltcG9ydCB7IFN0cmFpZ2h0RWRnZSB9IGZyb20gXCJzd2YtdHJlZS9zaGFwZS1yZWNvcmRzL3N0cmFpZ2h0LWVkZ2VcIjtcbmltcG9ydCB7IFN0cmFpZ2h0U1JnYmE4IH0gZnJvbSBcInN3Zi10cmVlL3N0cmFpZ2h0LXMtcmdiYThcIjtcbmltcG9ydCB7IFZlY3RvcjJEIH0gZnJvbSBcInN3Zi10cmVlL3ZlY3Rvci0yZFwiO1xuaW1wb3J0IHsgcGFyc2VNYXRyaXgsIHBhcnNlU3RyYWlnaHRTUmdiYTggfSBmcm9tIFwiLi9iYXNpYy1kYXRhLXR5cGVzXCI7XG5pbXBvcnQgeyBwYXJzZU1vcnBoR3JhZGllbnQgfSBmcm9tIFwiLi9ncmFkaWVudFwiO1xuaW1wb3J0IHsgY2FwU3R5bGVGcm9tSWQsIHBhcnNlQ3VydmVkRWRnZUJpdHMsIHBhcnNlTGlzdExlbmd0aCwgcGFyc2VTdHJhaWdodEVkZ2VCaXRzIH0gZnJvbSBcIi4vc2hhcGVcIjtcblxuZXhwb3J0IGVudW0gTW9ycGhTaGFwZVZlcnNpb24ge1xuICBNb3JwaFNoYXBlMSA9IDEsXG4gIE1vcnBoU2hhcGUyID0gMixcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTW9ycGhTaGFwZShieXRlU3RyZWFtOiBSZWFkYWJsZUJ5dGVTdHJlYW0sIG1vcnBoU2hhcGVWZXJzaW9uOiBNb3JwaFNoYXBlVmVyc2lvbik6IE1vcnBoU2hhcGUge1xuICBieXRlU3RyZWFtLnNraXAoNCk7IC8vIFNraXAgb2Zmc2V0ICh1aW50MzIpIChUT0RPOiBSZWFkIHRoaXMgYW5kIHVzZSBpdCB0byBhc3NlcnQgdGhlIHNoYXBlIGlzIE9LKVxuICBjb25zdCBiaXRTdHJlYW06IFJlYWRhYmxlQml0U3RyZWFtID0gYnl0ZVN0cmVhbS5hc0JpdFN0cmVhbSgpO1xuICBjb25zdCByZXN1bHQ6IE1vcnBoU2hhcGUgPSBwYXJzZU1vcnBoU2hhcGVCaXRzKGJpdFN0cmVhbSwgbW9ycGhTaGFwZVZlcnNpb24pO1xuICBiaXRTdHJlYW0uYWxpZ24oKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTW9ycGhTaGFwZUJpdHMoYml0U3RyZWFtOiBSZWFkYWJsZUJpdFN0cmVhbSwgbW9ycGhTaGFwZVZlcnNpb246IE1vcnBoU2hhcGVWZXJzaW9uKTogTW9ycGhTaGFwZSB7XG4gIGNvbnN0IHN0eWxlczogUGFyc2VyTW9ycGhTaGFwZVN0eWxlcyA9IHBhcnNlTW9ycGhTaGFwZVN0eWxlc0JpdHMoYml0U3RyZWFtLCBtb3JwaFNoYXBlVmVyc2lvbik7XG4gIGNvbnN0IHN0YXJ0UmVjb3JkczogTWl4ZWRTaGFwZVJlY29yZFtdID0gcGFyc2VNb3JwaFNoYXBlU3RhcnRSZWNvcmRTdHJpbmdCaXRzKFxuICAgIGJpdFN0cmVhbSxcbiAgICBzdHlsZXMuZmlsbEJpdHMsXG4gICAgc3R5bGVzLmxpbmVCaXRzLFxuICAgIG1vcnBoU2hhcGVWZXJzaW9uLFxuICApO1xuICBiaXRTdHJlYW0uYWxpZ24oKTtcbiAgLy8gVE9ETzogV2Ugc2hvdWxkIGJlIGFibGUgdG8gc2tpcCB0aGVzZSBiaXRzIChubyBzdHlsZXMgdXNlZCBmb3IgdGhlIGVuZFJlY29yZHMpXG4gIGNvbnN0IGZpbGxCaXRzOiBVaW50U2l6ZSA9IGJpdFN0cmVhbS5yZWFkVWludDMyQml0cyg0KTtcbiAgY29uc3QgbGluZUJpdHM6IFVpbnRTaXplID0gYml0U3RyZWFtLnJlYWRVaW50MzJCaXRzKDQpO1xuICBjb25zdCByZWNvcmRzOiBNb3JwaFNoYXBlUmVjb3JkW10gPSBwYXJzZU1vcnBoU2hhcGVFbmRSZWNvcmRTdHJpbmdCaXRzKFxuICAgIGJpdFN0cmVhbSxcbiAgICBzdGFydFJlY29yZHMsXG4gICAgZmlsbEJpdHMsXG4gICAgbGluZUJpdHMsXG4gICAgbW9ycGhTaGFwZVZlcnNpb24sXG4gICk7XG5cbiAgcmV0dXJuIHtcbiAgICBpbml0aWFsU3R5bGVzOiB7ZmlsbDogc3R5bGVzLmZpbGwsIGxpbmU6IHN0eWxlcy5saW5lfSxcbiAgICByZWNvcmRzLFxuICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBhcnNlck1vcnBoU2hhcGVTdHlsZXMge1xuICBmaWxsOiBNb3JwaEZpbGxTdHlsZVtdO1xuICBsaW5lOiBNb3JwaExpbmVTdHlsZVtdO1xuICBmaWxsQml0czogVWludFNpemU7XG4gIGxpbmVCaXRzOiBVaW50U2l6ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTW9ycGhTaGFwZVN0eWxlc0JpdHMoXG4gIGJpdFN0cmVhbTogUmVhZGFibGVCaXRTdHJlYW0sXG4gIG1vcnBoU2hhcGVWZXJzaW9uOiBNb3JwaFNoYXBlVmVyc2lvbixcbik6IFBhcnNlck1vcnBoU2hhcGVTdHlsZXMge1xuICBjb25zdCBieXRlU3RyZWFtOiBSZWFkYWJsZUJ5dGVTdHJlYW0gPSBiaXRTdHJlYW0uYXNCeXRlU3RyZWFtKCk7XG4gIGNvbnN0IGZpbGw6IE1vcnBoRmlsbFN0eWxlW10gPSBwYXJzZU1vcnBoRmlsbFN0eWxlTGlzdChieXRlU3RyZWFtKTtcbiAgY29uc3QgbGluZTogTW9ycGhMaW5lU3R5bGVbXSA9IHBhcnNlTW9ycGhMaW5lU3R5bGVMaXN0KGJ5dGVTdHJlYW0sIG1vcnBoU2hhcGVWZXJzaW9uKTtcbiAgYml0U3RyZWFtID0gYnl0ZVN0cmVhbS5hc0JpdFN0cmVhbSgpO1xuICBjb25zdCBmaWxsQml0czogVWludFNpemUgPSBiaXRTdHJlYW0ucmVhZFVpbnQzMkJpdHMoNCk7XG4gIGNvbnN0IGxpbmVCaXRzOiBVaW50U2l6ZSA9IGJpdFN0cmVhbS5yZWFkVWludDMyQml0cyg0KTtcbiAgcmV0dXJuIHtmaWxsLCBsaW5lLCBmaWxsQml0cywgbGluZUJpdHN9O1xufVxuXG4vLyBUT0RPOiBSZXBsYWNlIGJ5IGEgbW9yZSByZWxpYWJsZSB0eXBlOiB0aGUgZGlzY3JpbWluYW50IHByb3BlcnR5IGB0eXBlYCBkb2VzIG5vdCBoYXZlIHRoZSBzYW1lIGJhc2UgdHlwZVxuLy8gKFNoYXBlUmVjb3JkVHlwZSBhbmQgTW9ycGhTaGFwZVJlY29yZFR5cGUpXG4vLyBJdCB3b3JrcyBoZXJlIGJlY2F1c2UgdGhleSBoYXZlIGNvcnJlc3BvbmRpbmcga2V5cyBkZWZpbmVkIGluIHRoZSBzYW1lIG9yZGVyXG5leHBvcnQgdHlwZSBNaXhlZFNoYXBlUmVjb3JkID0gU3RyYWlnaHRFZGdlIHwgQ3VydmVkRWRnZSB8IE1vcnBoU3R5bGVDaGFuZ2U7XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZU1vcnBoU2hhcGVTdGFydFJlY29yZFN0cmluZ0JpdHMoXG4gIGJpdFN0cmVhbTogUmVhZGFibGVCaXRTdHJlYW0sXG4gIGZpbGxCaXRzOiBVaW50U2l6ZSxcbiAgbGluZUJpdHM6IFVpbnRTaXplLFxuICBtb3JwaFNoYXBlVmVyc2lvbjogTW9ycGhTaGFwZVZlcnNpb24sXG4pOiBNaXhlZFNoYXBlUmVjb3JkW10ge1xuICBjb25zdCByZXN1bHQ6IE1peGVkU2hhcGVSZWNvcmRbXSA9IFtdO1xuXG4gIHdoaWxlICh0cnVlKSB7XG4gICAgY29uc3QgYnl0ZVBvczogbnVtYmVyID0gYml0U3RyZWFtLmJ5dGVQb3M7XG4gICAgY29uc3QgYml0UG9zOiBudW1iZXIgPSBiaXRTdHJlYW0uYml0UG9zO1xuICAgIGNvbnN0IGhlYWQ6IG51bWJlciA9IGJpdFN0cmVhbS5yZWFkVWludDE2Qml0cyg2KTtcbiAgICBpZiAoaGVhZCA9PT0gMCkge1xuICAgICAgYnJlYWs7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJpdFN0cmVhbS5ieXRlUG9zID0gYnl0ZVBvcztcbiAgICAgIGJpdFN0cmVhbS5iaXRQb3MgPSBiaXRQb3M7XG4gICAgfVxuXG4gICAgY29uc3QgaXNFZGdlOiBib29sZWFuID0gYml0U3RyZWFtLnJlYWRCb29sQml0cygpO1xuICAgIGlmIChpc0VkZ2UpIHtcbiAgICAgIGNvbnN0IGlzU3RyYWlnaHRFZGdlOiBib29sZWFuID0gYml0U3RyZWFtLnJlYWRCb29sQml0cygpO1xuICAgICAgaWYgKGlzU3RyYWlnaHRFZGdlKSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKHBhcnNlU3RyYWlnaHRFZGdlQml0cyhiaXRTdHJlYW0pKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKHBhcnNlQ3VydmVkRWRnZUJpdHMoYml0U3RyZWFtKSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBzdHlsZXM6IE1vcnBoU3R5bGVDaGFuZ2U7XG4gICAgICBbc3R5bGVzLCBbZmlsbEJpdHMsIGxpbmVCaXRzXV0gPSBwYXJzZU1vcnBoU3R5bGVDaGFuZ2VCaXRzKGJpdFN0cmVhbSwgZmlsbEJpdHMsIGxpbmVCaXRzLCBtb3JwaFNoYXBlVmVyc2lvbik7XG4gICAgICByZXN1bHQucHVzaChzdHlsZXMpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIGFzQ3VydmVkRWRnZShlZGdlOiBTdHJhaWdodEVkZ2UgfCBDdXJ2ZWRFZGdlKTogQ3VydmVkRWRnZSB7XG4gIGlmIChlZGdlLnR5cGUgPT09IFNoYXBlUmVjb3JkVHlwZS5DdXJ2ZWRFZGdlKSB7XG4gICAgcmV0dXJuIGVkZ2U7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBTaGFwZVJlY29yZFR5cGUuQ3VydmVkRWRnZSxcbiAgICBjb250cm9sRGVsdGE6IHt4OiBlZGdlLmRlbHRhLnggLyAyLCB5OiBlZGdlLmRlbHRhLnkgLyAyfSxcbiAgICBhbmNob3JEZWx0YToge3g6IGVkZ2UuZGVsdGEueCAvIDIsIHk6IGVkZ2UuZGVsdGEueSAvIDJ9LFxuICB9O1xufVxuXG5mdW5jdGlvbiBhc01vcnBoRWRnZShcbiAgc3RhcnRFZGdlOiBTdHJhaWdodEVkZ2UgfCBDdXJ2ZWRFZGdlLFxuICBlbmRFZGdlOiBTdHJhaWdodEVkZ2UgfCBDdXJ2ZWRFZGdlLFxuKTogTW9ycGhTdHJhaWdodEVkZ2UgfCBNb3JwaEN1cnZlZEVkZ2Uge1xuICBpZiAoc3RhcnRFZGdlLnR5cGUgPT09IFNoYXBlUmVjb3JkVHlwZS5TdHJhaWdodEVkZ2UgJiYgZW5kRWRnZS50eXBlID09PSBTaGFwZVJlY29yZFR5cGUuU3RyYWlnaHRFZGdlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFNoYXBlUmVjb3JkVHlwZS5TdHJhaWdodEVkZ2UsXG4gICAgICBkZWx0YTogc3RhcnRFZGdlLmRlbHRhLFxuICAgICAgbW9ycGhEZWx0YTogZW5kRWRnZS5kZWx0YSxcbiAgICB9O1xuICB9XG4gIGNvbnN0IHN0YXJ0Q3VydmU6IEN1cnZlZEVkZ2UgPSBhc0N1cnZlZEVkZ2Uoc3RhcnRFZGdlKTtcbiAgY29uc3QgZW5kQ3VydmU6IEN1cnZlZEVkZ2UgPSBhc0N1cnZlZEVkZ2UoZW5kRWRnZSk7XG4gIHJldHVybiB7XG4gICAgdHlwZTogU2hhcGVSZWNvcmRUeXBlLkN1cnZlZEVkZ2UsXG4gICAgY29udHJvbERlbHRhOiBzdGFydEN1cnZlLmNvbnRyb2xEZWx0YSxcbiAgICBhbmNob3JEZWx0YTogc3RhcnRDdXJ2ZS5hbmNob3JEZWx0YSxcbiAgICBtb3JwaENvbnRyb2xEZWx0YTogZW5kQ3VydmUuY29udHJvbERlbHRhLFxuICAgIG1vcnBoQW5jaG9yRGVsdGE6IGVuZEN1cnZlLmFuY2hvckRlbHRhLFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VNb3JwaFNoYXBlRW5kUmVjb3JkU3RyaW5nQml0cyhcbiAgYml0U3RyZWFtOiBSZWFkYWJsZUJpdFN0cmVhbSxcbiAgc3RhcnRSZWNvcmRzOiBNaXhlZFNoYXBlUmVjb3JkW10sXG4gIGZpbGxCaXRzOiBVaW50U2l6ZSxcbiAgbGluZUJpdHM6IFVpbnRTaXplLFxuICBtb3JwaFNoYXBlVmVyc2lvbjogTW9ycGhTaGFwZVZlcnNpb24sXG4pOiBNb3JwaFNoYXBlUmVjb3JkW10ge1xuICBjb25zdCByZXN1bHQ6IE1vcnBoU2hhcGVSZWNvcmRbXSA9IFtdO1xuXG4gIGZvciAoY29uc3Qgc3RhcnRSZWNvcmQgb2Ygc3RhcnRSZWNvcmRzKSB7XG4gICAgaWYgKHN0YXJ0UmVjb3JkLnR5cGUgPT09IFNoYXBlUmVjb3JkVHlwZS5TdHlsZUNoYW5nZSAmJiBzdGFydFJlY29yZC5tb3ZlVG8gPT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gVGhlIGVuZCBzaGFwZSBjb250YWlucyBvbmx5IGVkZ2UgKHN0cmFpZ2h0IG9yIGN1cnZlZCkgb3IgbW92ZVRvIHJlY29yZHMsIGl0IG1hdGNoZXMgdGhlIHN0YXJ0IHJlY29yZHNcbiAgICAgIHJlc3VsdC5wdXNoKHN0YXJ0UmVjb3JkKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGNvbnN0IGJ5dGVQb3M6IG51bWJlciA9IGJpdFN0cmVhbS5ieXRlUG9zO1xuICAgIGNvbnN0IGJpdFBvczogbnVtYmVyID0gYml0U3RyZWFtLmJpdFBvcztcbiAgICBjb25zdCBoZWFkOiBudW1iZXIgPSBiaXRTdHJlYW0ucmVhZFVpbnQxNkJpdHMoNik7XG4gICAgaWYgKGhlYWQgPT09IDApIHtcbiAgICAgIHRocm93IG5ldyBJbmNpZGVudChcIk1pc3NpbmdNb3JwaFNoYXBlRW5kUmVjb3Jkc1wiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYml0U3RyZWFtLmJ5dGVQb3MgPSBieXRlUG9zO1xuICAgICAgYml0U3RyZWFtLmJpdFBvcyA9IGJpdFBvcztcbiAgICB9XG5cbiAgICBjb25zdCBpc0VkZ2U6IGJvb2xlYW4gPSBiaXRTdHJlYW0ucmVhZEJvb2xCaXRzKCk7XG4gICAgaWYgKGlzRWRnZSkge1xuICAgICAgaWYgKHN0YXJ0UmVjb3JkLnR5cGUgIT09IFNoYXBlUmVjb3JkVHlwZS5TdHJhaWdodEVkZ2UgJiYgc3RhcnRSZWNvcmQudHlwZSAhPT0gU2hhcGVSZWNvcmRUeXBlLkN1cnZlZEVkZ2UpIHtcbiAgICAgICAgdGhyb3cgbmV3IEluY2lkZW50KFwiVW5leHBlY3RlZEVkZ2VcIik7XG4gICAgICB9XG4gICAgICBjb25zdCBzdGFydEVkZ2U6IFN0cmFpZ2h0RWRnZSB8IEN1cnZlZEVkZ2UgPSBzdGFydFJlY29yZDtcbiAgICAgIGNvbnN0IGlzU3RyYWlnaHRFZGdlOiBib29sZWFuID0gYml0U3RyZWFtLnJlYWRCb29sQml0cygpO1xuICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1heC1saW5lLWxlbmd0aFxuICAgICAgY29uc3QgZW5kRWRnZTogU3RyYWlnaHRFZGdlIHwgQ3VydmVkRWRnZSA9IGlzU3RyYWlnaHRFZGdlID8gcGFyc2VTdHJhaWdodEVkZ2VCaXRzKGJpdFN0cmVhbSkgOiBwYXJzZUN1cnZlZEVkZ2VCaXRzKGJpdFN0cmVhbSk7XG4gICAgICByZXN1bHQucHVzaChhc01vcnBoRWRnZShzdGFydEVkZ2UsIGVuZEVkZ2UpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHN0YXJ0UmVjb3JkLnR5cGUgIT09IFNoYXBlUmVjb3JkVHlwZS5TdHlsZUNoYW5nZSkge1xuICAgICAgICB0aHJvdyBuZXcgSW5jaWRlbnQoXCJVbmV4cGVjdGVkU3R5bGVDaGFuZ2VcIik7XG4gICAgICB9XG4gICAgICBjb25zdCBzdGFydFN0eWxlOiBNb3JwaFN0eWxlQ2hhbmdlID0gc3RhcnRSZWNvcmQ7XG4gICAgICBsZXQgc3R5bGVDaGFuZ2U6IE1vcnBoU3R5bGVDaGFuZ2U7XG4gICAgICBbc3R5bGVDaGFuZ2UsIFtmaWxsQml0cywgbGluZUJpdHNdXSA9IHBhcnNlTW9ycGhTdHlsZUNoYW5nZUJpdHMoYml0U3RyZWFtLCBmaWxsQml0cywgbGluZUJpdHMsIG1vcnBoU2hhcGVWZXJzaW9uKTtcbiAgICAgIGlmIChzdHlsZUNoYW5nZS5tb3ZlVG8gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aHJvdyBuZXcgSW5jaWRlbnQoXCJFeHBlY3RlZE1vdmVUb1wiKTtcbiAgICAgIH1cbiAgICAgIHJlc3VsdC5wdXNoKHsuLi5zdGFydFN0eWxlLCBtb3JwaE1vdmVUbzogc3R5bGVDaGFuZ2UubW92ZVRvfSk7XG4gICAgfVxuICB9XG4gIGNvbnN0IGhlYWQ6IG51bWJlciA9IGJpdFN0cmVhbS5yZWFkVWludDE2Qml0cyg2KTtcbiAgaWYgKGhlYWQgIT09IDApIHtcbiAgICB0aHJvdyBuZXcgSW5jaWRlbnQoXCJFeHRyYU1vcnBoU2hhcGVFbmRSZWNvcmRzXCIpO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTW9ycGhTdHlsZUNoYW5nZUJpdHMoXG4gIGJpdFN0cmVhbTogUmVhZGFibGVCaXRTdHJlYW0sXG4gIGZpbGxCaXRzOiBVaW50U2l6ZSxcbiAgbGluZUJpdHM6IFVpbnRTaXplLFxuICBtb3JwaFNoYXBlVmVyc2lvbjogTW9ycGhTaGFwZVZlcnNpb24sXG4pOiBbTW9ycGhTdHlsZUNoYW5nZSwgW1VpbnRTaXplLCBVaW50U2l6ZV1dIHtcbiAgY29uc3QgaGFzTmV3U3R5bGVzOiBib29sZWFuID0gYml0U3RyZWFtLnJlYWRCb29sQml0cygpO1xuICBjb25zdCBjaGFuZ2VMaW5lU3R5bGU6IGJvb2xlYW4gPSBiaXRTdHJlYW0ucmVhZEJvb2xCaXRzKCk7XG4gIGNvbnN0IGNoYW5nZVJpZ2h0RmlsbDogYm9vbGVhbiA9IGJpdFN0cmVhbS5yZWFkQm9vbEJpdHMoKTtcbiAgY29uc3QgY2hhbmdlTGVmdEZpbGw6IGJvb2xlYW4gPSBiaXRTdHJlYW0ucmVhZEJvb2xCaXRzKCk7XG4gIGNvbnN0IGhhc01vdmVUbzogYm9vbGVhbiA9IGJpdFN0cmVhbS5yZWFkQm9vbEJpdHMoKTtcblxuICBsZXQgbW92ZVRvOiBWZWN0b3IyRCB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbiAgaWYgKGhhc01vdmVUbykge1xuICAgIGNvbnN0IG5CaXRzOiBVaW50U2l6ZSA9IGJpdFN0cmVhbS5yZWFkVWludDE2Qml0cyg1KTtcbiAgICBjb25zdCB4OiBTaW50MzIgPSBiaXRTdHJlYW0ucmVhZFNpbnQzMkJpdHMobkJpdHMpO1xuICAgIGNvbnN0IHk6IFNpbnQzMiA9IGJpdFN0cmVhbS5yZWFkU2ludDMyQml0cyhuQml0cyk7XG4gICAgbW92ZVRvID0ge3gsIHl9O1xuICB9XG5cbiAgY29uc3QgbGVmdEZpbGw6IFVpbnRTaXplIHwgdW5kZWZpbmVkID0gY2hhbmdlTGVmdEZpbGwgPyBiaXRTdHJlYW0ucmVhZFVpbnQxNkJpdHMoZmlsbEJpdHMpIDogdW5kZWZpbmVkO1xuICBjb25zdCByaWdodEZpbGw6IFVpbnRTaXplIHwgdW5kZWZpbmVkID0gY2hhbmdlUmlnaHRGaWxsID8gYml0U3RyZWFtLnJlYWRVaW50MTZCaXRzKGZpbGxCaXRzKSA6IHVuZGVmaW5lZDtcbiAgY29uc3QgbGluZVN0eWxlOiBVaW50U2l6ZSB8IHVuZGVmaW5lZCA9IGNoYW5nZUxpbmVTdHlsZSA/IGJpdFN0cmVhbS5yZWFkVWludDE2Qml0cyhsaW5lQml0cykgOiB1bmRlZmluZWQ7XG5cbiAgbGV0IG5ld1N0eWxlczogTW9ycGhTaGFwZVN0eWxlcyB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbiAgaWYgKGhhc05ld1N0eWxlcykge1xuICAgIGNvbnN0IHN0eWxlczogUGFyc2VyTW9ycGhTaGFwZVN0eWxlcyA9IHBhcnNlTW9ycGhTaGFwZVN0eWxlc0JpdHMoYml0U3RyZWFtLCBtb3JwaFNoYXBlVmVyc2lvbik7XG4gICAgbmV3U3R5bGVzID0ge1xuICAgICAgZmlsbDogc3R5bGVzLmZpbGwsXG4gICAgICBsaW5lOiBzdHlsZXMubGluZSxcbiAgICB9O1xuICAgIGZpbGxCaXRzID0gc3R5bGVzLmZpbGxCaXRzO1xuICAgIGxpbmVCaXRzID0gc3R5bGVzLmxpbmVCaXRzO1xuICB9XG5cbiAgY29uc3Qgc3R5bGVDaGFuZ2VSZWNvcmQ6IE1vcnBoU3R5bGVDaGFuZ2UgPSB7XG4gICAgdHlwZTogU2hhcGVSZWNvcmRUeXBlLlN0eWxlQ2hhbmdlLFxuICAgIG1vdmVUbyxcbiAgICBtb3JwaE1vdmVUbzogdW5kZWZpbmVkLFxuICAgIGxlZnRGaWxsLFxuICAgIHJpZ2h0RmlsbCxcbiAgICBsaW5lU3R5bGUsXG4gICAgbmV3U3R5bGVzLFxuICB9O1xuXG4gIHJldHVybiBbc3R5bGVDaGFuZ2VSZWNvcmQsIFtmaWxsQml0cywgbGluZUJpdHNdXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTW9ycGhGaWxsU3R5bGVMaXN0KGJ5dGVTdHJlYW06IFJlYWRhYmxlQnl0ZVN0cmVhbSk6IE1vcnBoRmlsbFN0eWxlW10ge1xuICBjb25zdCByZXN1bHQ6IE1vcnBoRmlsbFN0eWxlW10gPSBbXTtcbiAgY29uc3QgbGVuOiBVaW50U2l6ZSA9IHBhcnNlTGlzdExlbmd0aChieXRlU3RyZWFtLCB0cnVlKTtcbiAgZm9yIChsZXQgaTogVWludFNpemUgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICByZXN1bHQucHVzaChwYXJzZU1vcnBoRmlsbFN0eWxlKGJ5dGVTdHJlYW0pKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VNb3JwaEZpbGxTdHlsZShieXRlU3RyZWFtOiBSZWFkYWJsZUJ5dGVTdHJlYW0pOiBNb3JwaEZpbGxTdHlsZSB7XG4gIHN3aXRjaCAoYnl0ZVN0cmVhbS5yZWFkVWludDgoKSkge1xuICAgIGNhc2UgMHgwMDpcbiAgICAgIHJldHVybiBwYXJzZU1vcnBoU29saWRGaWxsKGJ5dGVTdHJlYW0pO1xuICAgIGNhc2UgMHgxMDpcbiAgICAgIHJldHVybiBwYXJzZU1vcnBoTGluZWFyR3JhZGllbnRGaWxsKGJ5dGVTdHJlYW0pO1xuICAgIGNhc2UgMHgxMjpcbiAgICAgIHJldHVybiBwYXJzZU1vcnBoUmFkaWFsR3JhZGllbnRGaWxsKGJ5dGVTdHJlYW0pO1xuICAgIGNhc2UgMHgxMzpcbiAgICAgIC8vIFRPRE86IENoZWNrIGlmIHRoaXMgcmVxdWlyZXMgc2hhcGVWZXJzaW9uID49IFNoYXBlNFxuICAgICAgcmV0dXJuIHBhcnNlTW9ycGhGb2NhbEdyYWRpZW50RmlsbChieXRlU3RyZWFtKTtcbiAgICBjYXNlIDB4NDA6XG4gICAgICByZXR1cm4gcGFyc2VNb3JwaEJpdG1hcEZpbGwoYnl0ZVN0cmVhbSwgdHJ1ZSwgdHJ1ZSk7XG4gICAgY2FzZSAweDQxOlxuICAgICAgcmV0dXJuIHBhcnNlTW9ycGhCaXRtYXBGaWxsKGJ5dGVTdHJlYW0sIGZhbHNlLCB0cnVlKTtcbiAgICBjYXNlIDB4NDI6XG4gICAgICByZXR1cm4gcGFyc2VNb3JwaEJpdG1hcEZpbGwoYnl0ZVN0cmVhbSwgdHJ1ZSwgZmFsc2UpO1xuICAgIGNhc2UgMHg0MzpcbiAgICAgIHJldHVybiBwYXJzZU1vcnBoQml0bWFwRmlsbChieXRlU3RyZWFtLCBmYWxzZSwgZmFsc2UpO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmV4cGVjdGVkIG1vcnBoIGZpbGwgc3R5bGVcIik7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTW9ycGhCaXRtYXBGaWxsKFxuICBieXRlU3RyZWFtOiBSZWFkYWJsZUJ5dGVTdHJlYW0sXG4gIHJlcGVhdGluZzogYm9vbGVhbixcbiAgc21vb3RoZWQ6IGJvb2xlYW4sXG4pOiBmaWxsU3R5bGVzLk1vcnBoQml0bWFwIHtcbiAgY29uc3QgYml0bWFwSWQ6IFVpbnQxNiA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQxNkxFKCk7XG4gIGNvbnN0IG1hdHJpeDogTWF0cml4ID0gcGFyc2VNYXRyaXgoYnl0ZVN0cmVhbSk7XG4gIGNvbnN0IG1vcnBoTWF0cml4OiBNYXRyaXggPSBwYXJzZU1hdHJpeChieXRlU3RyZWFtKTtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBGaWxsU3R5bGVUeXBlLkJpdG1hcCxcbiAgICBiaXRtYXBJZCxcbiAgICBtYXRyaXgsXG4gICAgbW9ycGhNYXRyaXgsXG4gICAgcmVwZWF0aW5nLFxuICAgIHNtb290aGVkLFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VNb3JwaEZvY2FsR3JhZGllbnRGaWxsKGJ5dGVTdHJlYW06IFJlYWRhYmxlQnl0ZVN0cmVhbSk6IGZpbGxTdHlsZXMuTW9ycGhGb2NhbEdyYWRpZW50IHtcbiAgY29uc3QgbWF0cml4OiBNYXRyaXggPSBwYXJzZU1hdHJpeChieXRlU3RyZWFtKTtcbiAgY29uc3QgbW9ycGhNYXRyaXg6IE1hdHJpeCA9IHBhcnNlTWF0cml4KGJ5dGVTdHJlYW0pO1xuICBjb25zdCBncmFkaWVudDogTW9ycGhHcmFkaWVudCA9IHBhcnNlTW9ycGhHcmFkaWVudChieXRlU3RyZWFtLCB0cnVlKTtcbiAgY29uc3QgZm9jYWxQb2ludDogU2ZpeGVkOFA4ID0gU2ZpeGVkOFA4LmZyb21FcHNpbG9ucyhieXRlU3RyZWFtLnJlYWRTaW50MTZMRSgpKTtcbiAgY29uc3QgbW9ycGhGb2NhbFBvaW50OiBTZml4ZWQ4UDggPSBTZml4ZWQ4UDguZnJvbUVwc2lsb25zKGJ5dGVTdHJlYW0ucmVhZFNpbnQxNkxFKCkpO1xuICByZXR1cm4ge1xuICAgIHR5cGU6IEZpbGxTdHlsZVR5cGUuRm9jYWxHcmFkaWVudCxcbiAgICBtYXRyaXgsXG4gICAgbW9ycGhNYXRyaXgsXG4gICAgZ3JhZGllbnQsXG4gICAgZm9jYWxQb2ludCxcbiAgICBtb3JwaEZvY2FsUG9pbnQsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZU1vcnBoTGluZWFyR3JhZGllbnRGaWxsKFxuICBieXRlU3RyZWFtOiBSZWFkYWJsZUJ5dGVTdHJlYW0sXG4pOiBmaWxsU3R5bGVzLk1vcnBoTGluZWFyR3JhZGllbnQge1xuICBjb25zdCBtYXRyaXg6IE1hdHJpeCA9IHBhcnNlTWF0cml4KGJ5dGVTdHJlYW0pO1xuICBjb25zdCBtb3JwaE1hdHJpeDogTWF0cml4ID0gcGFyc2VNYXRyaXgoYnl0ZVN0cmVhbSk7XG4gIGNvbnN0IGdyYWRpZW50OiBNb3JwaEdyYWRpZW50ID0gcGFyc2VNb3JwaEdyYWRpZW50KGJ5dGVTdHJlYW0sIHRydWUpO1xuICByZXR1cm4ge1xuICAgIHR5cGU6IEZpbGxTdHlsZVR5cGUuTGluZWFyR3JhZGllbnQsXG4gICAgbWF0cml4LFxuICAgIG1vcnBoTWF0cml4LFxuICAgIGdyYWRpZW50LFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VNb3JwaFJhZGlhbEdyYWRpZW50RmlsbChcbiAgYnl0ZVN0cmVhbTogUmVhZGFibGVCeXRlU3RyZWFtLFxuKTogZmlsbFN0eWxlcy5Nb3JwaFJhZGlhbEdyYWRpZW50IHtcbiAgY29uc3QgbWF0cml4OiBNYXRyaXggPSBwYXJzZU1hdHJpeChieXRlU3RyZWFtKTtcbiAgY29uc3QgbW9ycGhNYXRyaXg6IE1hdHJpeCA9IHBhcnNlTWF0cml4KGJ5dGVTdHJlYW0pO1xuICBjb25zdCBncmFkaWVudDogTW9ycGhHcmFkaWVudCA9IHBhcnNlTW9ycGhHcmFkaWVudChieXRlU3RyZWFtLCB0cnVlKTtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBGaWxsU3R5bGVUeXBlLlJhZGlhbEdyYWRpZW50LFxuICAgIG1hdHJpeCxcbiAgICBtb3JwaE1hdHJpeCxcbiAgICBncmFkaWVudCxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTW9ycGhTb2xpZEZpbGwoYnl0ZVN0cmVhbTogUmVhZGFibGVCeXRlU3RyZWFtKTogZmlsbFN0eWxlcy5Nb3JwaFNvbGlkIHtcbiAgY29uc3QgY29sb3I6IFN0cmFpZ2h0U1JnYmE4ID0gcGFyc2VTdHJhaWdodFNSZ2JhOChieXRlU3RyZWFtKTtcbiAgY29uc3QgbW9ycGhDb2xvcjogU3RyYWlnaHRTUmdiYTggPSBwYXJzZVN0cmFpZ2h0U1JnYmE4KGJ5dGVTdHJlYW0pO1xuICByZXR1cm4ge1xuICAgIHR5cGU6IEZpbGxTdHlsZVR5cGUuU29saWQsXG4gICAgY29sb3IsXG4gICAgbW9ycGhDb2xvcixcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTW9ycGhMaW5lU3R5bGVMaXN0KFxuICBieXRlU3RyZWFtOiBSZWFkYWJsZUJ5dGVTdHJlYW0sXG4gIG1vcnBoU2hhcGVWZXJzaW9uOiBNb3JwaFNoYXBlVmVyc2lvbixcbik6IE1vcnBoTGluZVN0eWxlW10ge1xuICBjb25zdCByZXN1bHQ6IE1vcnBoTGluZVN0eWxlW10gPSBbXTtcbiAgY29uc3QgbGVuOiBVaW50U2l6ZSA9IHBhcnNlTGlzdExlbmd0aChieXRlU3RyZWFtLCB0cnVlKTtcbiAgZm9yIChsZXQgaTogVWludFNpemUgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAobW9ycGhTaGFwZVZlcnNpb24gPj0gTW9ycGhTaGFwZVZlcnNpb24uTW9ycGhTaGFwZTIpIHtcbiAgICAgIHJlc3VsdC5wdXNoKHBhcnNlTW9ycGhMaW5lU3R5bGUyKGJ5dGVTdHJlYW0pKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0LnB1c2gocGFyc2VNb3JwaExpbmVTdHlsZTEoYnl0ZVN0cmVhbSkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VNb3JwaExpbmVTdHlsZTEoYnl0ZVN0cmVhbTogUmVhZGFibGVCeXRlU3RyZWFtKTogTW9ycGhMaW5lU3R5bGUge1xuICBjb25zdCB3aWR0aDogVWludDE2ID0gYnl0ZVN0cmVhbS5yZWFkVWludDE2TEUoKTtcbiAgY29uc3QgbW9ycGhXaWR0aDogVWludDE2ID0gYnl0ZVN0cmVhbS5yZWFkVWludDE2TEUoKTtcbiAgY29uc3QgY29sb3I6IFN0cmFpZ2h0U1JnYmE4ID0gcGFyc2VTdHJhaWdodFNSZ2JhOChieXRlU3RyZWFtKTtcbiAgY29uc3QgbW9ycGhDb2xvcjogU3RyYWlnaHRTUmdiYTggPSBwYXJzZVN0cmFpZ2h0U1JnYmE4KGJ5dGVTdHJlYW0pO1xuICByZXR1cm4ge1xuICAgIHdpZHRoLFxuICAgIG1vcnBoV2lkdGgsXG4gICAgc3RhcnRDYXA6IENhcFN0eWxlLlJvdW5kLFxuICAgIGVuZENhcDogQ2FwU3R5bGUuUm91bmQsXG4gICAgam9pbjoge3R5cGU6IEpvaW5TdHlsZVR5cGUuUm91bmR9LFxuICAgIG5vSFNjYWxlOiBmYWxzZSxcbiAgICBub1ZTY2FsZTogZmFsc2UsXG4gICAgbm9DbG9zZTogZmFsc2UsXG4gICAgcGl4ZWxIaW50aW5nOiBmYWxzZSxcbiAgICBmaWxsOiB7XG4gICAgICB0eXBlOiBGaWxsU3R5bGVUeXBlLlNvbGlkLFxuICAgICAgY29sb3IsXG4gICAgICBtb3JwaENvbG9yLFxuICAgIH0sXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZU1vcnBoTGluZVN0eWxlMihieXRlU3RyZWFtOiBSZWFkYWJsZUJ5dGVTdHJlYW0pOiBNb3JwaExpbmVTdHlsZSB7XG4gIGNvbnN0IHdpZHRoOiBVaW50MTYgPSBieXRlU3RyZWFtLnJlYWRVaW50MTZMRSgpO1xuICBjb25zdCBtb3JwaFdpZHRoOiBVaW50MTYgPSBieXRlU3RyZWFtLnJlYWRVaW50MTZMRSgpO1xuXG4gIGNvbnN0IGZsYWdzOiBVaW50MTYgPSBieXRlU3RyZWFtLnJlYWRVaW50MTZMRSgpO1xuICBjb25zdCBwaXhlbEhpbnRpbmc6IGJvb2xlYW4gPSAoZmxhZ3MgJiAoMSA8PCAwKSkgIT09IDA7XG4gIGNvbnN0IG5vVlNjYWxlOiBib29sZWFuID0gKGZsYWdzICYgKDEgPDwgMSkpICE9PSAwO1xuICBjb25zdCBub0hTY2FsZTogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDIpKSAhPT0gMDtcbiAgY29uc3QgaGFzRmlsbDogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDMpKSAhPT0gMDtcbiAgY29uc3Qgam9pblN0eWxlSWQ6IFVpbnQyID0gKChmbGFncyA+Pj4gNCkgJiAwYjExKSBhcyBVaW50MjtcbiAgY29uc3Qgc3RhcnRDYXBTdHlsZUlkOiBVaW50MiA9ICgoZmxhZ3MgPj4+IDYpICYgMGIxMSkgYXMgVWludDI7XG4gIGNvbnN0IGVuZENhcFN0eWxlSWQ6IFVpbnQyID0gKChmbGFncyA+Pj4gOCkgJiAwYjExKSBhcyBVaW50MjtcbiAgY29uc3Qgbm9DbG9zZTogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDEwKSkgIT09IDA7XG4gIC8vIChTa2lwIGJpdHMgWzExLCAxNV0pXG5cbiAgbGV0IGpvaW46IEpvaW5TdHlsZTtcbiAgc3dpdGNoIChqb2luU3R5bGVJZCkge1xuICAgIGNhc2UgMDpcbiAgICAgIGpvaW4gPSB7dHlwZTogSm9pblN0eWxlVHlwZS5Sb3VuZH07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDE6XG4gICAgICBqb2luID0ge3R5cGU6IEpvaW5TdHlsZVR5cGUuQmV2ZWx9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAyOlxuICAgICAgam9pbiA9IHt0eXBlOiBKb2luU3R5bGVUeXBlLk1pdGVyLCBsaW1pdDogU2ZpeGVkOFA4LmZyb21FcHNpbG9ucyhieXRlU3RyZWFtLnJlYWRTaW50MTZMRSgpKX07XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEluY2lkZW50KFwiVW5leHBlY3RlZEpvaW5TdHlsZUlkXCIsIHtpZDogam9pblN0eWxlSWR9KTtcbiAgfVxuXG4gIGxldCBmaWxsOiBNb3JwaEZpbGxTdHlsZTtcbiAgaWYgKGhhc0ZpbGwpIHtcbiAgICBmaWxsID0gcGFyc2VNb3JwaEZpbGxTdHlsZShieXRlU3RyZWFtKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBjb2xvcjogU3RyYWlnaHRTUmdiYTggPSBwYXJzZVN0cmFpZ2h0U1JnYmE4KGJ5dGVTdHJlYW0pO1xuICAgIGNvbnN0IG1vcnBoQ29sb3I6IFN0cmFpZ2h0U1JnYmE4ID0gcGFyc2VTdHJhaWdodFNSZ2JhOChieXRlU3RyZWFtKTtcbiAgICBmaWxsID0ge3R5cGU6IEZpbGxTdHlsZVR5cGUuU29saWQsIGNvbG9yLCBtb3JwaENvbG9yfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgd2lkdGgsXG4gICAgbW9ycGhXaWR0aCxcbiAgICBzdGFydENhcDogY2FwU3R5bGVGcm9tSWQoc3RhcnRDYXBTdHlsZUlkKSxcbiAgICBlbmRDYXA6IGNhcFN0eWxlRnJvbUlkKGVuZENhcFN0eWxlSWQpLFxuICAgIGpvaW4sXG4gICAgbm9IU2NhbGUsXG4gICAgbm9WU2NhbGUsXG4gICAgbm9DbG9zZSxcbiAgICBwaXhlbEhpbnRpbmcsXG4gICAgZmlsbCxcbiAgfTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst audio_coding_format_1 = require(\"swf-tree/sound/audio-coding-format\");\nfunction getSoundRateFromCode(soundRateCode) {\n    switch (soundRateCode) {\n        case 0:\n            return 5500;\n        case 1:\n            return 11000;\n        case 2:\n            return 22000;\n        case 3:\n            return 44000;\n        default:\n            throw new incident_1.Incident(\"UnexpectedSoundRateCode\", { code: soundRateCode });\n    }\n}\nexports.getSoundRateFromCode = getSoundRateFromCode;\nfunction getAudioCodingFormatFromCode(formatCode) {\n    switch (formatCode) {\n        case 0:\n            return audio_coding_format_1.AudioCodingFormat.UncompressedNativeEndian;\n        case 1:\n            return audio_coding_format_1.AudioCodingFormat.Adpcm;\n        case 2:\n            return audio_coding_format_1.AudioCodingFormat.Mp3;\n        case 3:\n            return audio_coding_format_1.AudioCodingFormat.UncompressedLittleEndian;\n        case 4:\n            return audio_coding_format_1.AudioCodingFormat.Nellymoser16;\n        case 5:\n            return audio_coding_format_1.AudioCodingFormat.Nellymoser8;\n        case 6:\n            return audio_coding_format_1.AudioCodingFormat.Nellymoser;\n        case 11:\n            return audio_coding_format_1.AudioCodingFormat.Speex;\n        default:\n            throw new incident_1.Incident(\"UnexpectedFormatCode\", { code: formatCode });\n    }\n}\nexports.getAudioCodingFormatFromCode = getAudioCodingFormatFromCode;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcGFyc2Vycy9zb3VuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFvQztBQUVwQyw0RUFBdUU7QUFHdkUsU0FBZ0Isb0JBQW9CLENBQUMsYUFBb0I7SUFDdkQsUUFBUSxhQUFhLEVBQUU7UUFDckIsS0FBSyxDQUFDO1lBQ0osT0FBTyxJQUFJLENBQUM7UUFDZCxLQUFLLENBQUM7WUFDSixPQUFPLEtBQUssQ0FBQztRQUNmLEtBQUssQ0FBQztZQUNKLE9BQU8sS0FBSyxDQUFDO1FBQ2YsS0FBSyxDQUFDO1lBQ0osT0FBTyxLQUFLLENBQUM7UUFDZjtZQUNFLE1BQU0sSUFBSSxtQkFBUSxDQUFDLHlCQUF5QixFQUFFLEVBQUMsSUFBSSxFQUFFLGFBQWEsRUFBQyxDQUFDLENBQUM7S0FDeEU7QUFDSCxDQUFDO0FBYkQsb0RBYUM7QUFFRCxTQUFnQiw0QkFBNEIsQ0FBQyxVQUFpQjtJQUM1RCxRQUFRLFVBQVUsRUFBRTtRQUNsQixLQUFLLENBQUM7WUFDSixPQUFPLHVDQUFpQixDQUFDLHdCQUF3QixDQUFDO1FBQ3BELEtBQUssQ0FBQztZQUNKLE9BQU8sdUNBQWlCLENBQUMsS0FBSyxDQUFDO1FBQ2pDLEtBQUssQ0FBQztZQUNKLE9BQU8sdUNBQWlCLENBQUMsR0FBRyxDQUFDO1FBQy9CLEtBQUssQ0FBQztZQUNKLE9BQU8sdUNBQWlCLENBQUMsd0JBQXdCLENBQUM7UUFDcEQsS0FBSyxDQUFDO1lBQ0osT0FBTyx1Q0FBaUIsQ0FBQyxZQUFZLENBQUM7UUFDeEMsS0FBSyxDQUFDO1lBQ0osT0FBTyx1Q0FBaUIsQ0FBQyxXQUFXLENBQUM7UUFDdkMsS0FBSyxDQUFDO1lBQ0osT0FBTyx1Q0FBaUIsQ0FBQyxVQUFVLENBQUM7UUFDdEMsS0FBSyxFQUFFO1lBQ0wsT0FBTyx1Q0FBaUIsQ0FBQyxLQUFLLENBQUM7UUFDakM7WUFDRSxNQUFNLElBQUksbUJBQVEsQ0FBQyxzQkFBc0IsRUFBRSxFQUFDLElBQUksRUFBRSxVQUFVLEVBQUMsQ0FBQyxDQUFDO0tBQ2xFO0FBQ0gsQ0FBQztBQXJCRCxvRUFxQkMiLCJmaWxlIjoicGFyc2Vycy9zb3VuZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluY2lkZW50IH0gZnJvbSBcImluY2lkZW50XCI7XG5pbXBvcnQgeyBVaW50MiwgVWludDQgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IEF1ZGlvQ29kaW5nRm9ybWF0IH0gZnJvbSBcInN3Zi10cmVlL3NvdW5kL2F1ZGlvLWNvZGluZy1mb3JtYXRcIjtcbmltcG9ydCB7IFNvdW5kUmF0ZSB9IGZyb20gXCJzd2YtdHJlZS9zb3VuZC9zb3VuZC1yYXRlXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTb3VuZFJhdGVGcm9tQ29kZShzb3VuZFJhdGVDb2RlOiBVaW50Mik6IFNvdW5kUmF0ZSB7XG4gIHN3aXRjaCAoc291bmRSYXRlQ29kZSkge1xuICAgIGNhc2UgMDpcbiAgICAgIHJldHVybiA1NTAwO1xuICAgIGNhc2UgMTpcbiAgICAgIHJldHVybiAxMTAwMDtcbiAgICBjYXNlIDI6XG4gICAgICByZXR1cm4gMjIwMDA7XG4gICAgY2FzZSAzOlxuICAgICAgcmV0dXJuIDQ0MDAwO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgSW5jaWRlbnQoXCJVbmV4cGVjdGVkU291bmRSYXRlQ29kZVwiLCB7Y29kZTogc291bmRSYXRlQ29kZX0pO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRBdWRpb0NvZGluZ0Zvcm1hdEZyb21Db2RlKGZvcm1hdENvZGU6IFVpbnQ0KTogQXVkaW9Db2RpbmdGb3JtYXQge1xuICBzd2l0Y2ggKGZvcm1hdENvZGUpIHtcbiAgICBjYXNlIDA6XG4gICAgICByZXR1cm4gQXVkaW9Db2RpbmdGb3JtYXQuVW5jb21wcmVzc2VkTmF0aXZlRW5kaWFuO1xuICAgIGNhc2UgMTpcbiAgICAgIHJldHVybiBBdWRpb0NvZGluZ0Zvcm1hdC5BZHBjbTtcbiAgICBjYXNlIDI6XG4gICAgICByZXR1cm4gQXVkaW9Db2RpbmdGb3JtYXQuTXAzO1xuICAgIGNhc2UgMzpcbiAgICAgIHJldHVybiBBdWRpb0NvZGluZ0Zvcm1hdC5VbmNvbXByZXNzZWRMaXR0bGVFbmRpYW47XG4gICAgY2FzZSA0OlxuICAgICAgcmV0dXJuIEF1ZGlvQ29kaW5nRm9ybWF0Lk5lbGx5bW9zZXIxNjtcbiAgICBjYXNlIDU6XG4gICAgICByZXR1cm4gQXVkaW9Db2RpbmdGb3JtYXQuTmVsbHltb3Nlcjg7XG4gICAgY2FzZSA2OlxuICAgICAgcmV0dXJuIEF1ZGlvQ29kaW5nRm9ybWF0Lk5lbGx5bW9zZXI7XG4gICAgY2FzZSAxMTpcbiAgICAgIHJldHVybiBBdWRpb0NvZGluZ0Zvcm1hdC5TcGVleDtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEluY2lkZW50KFwiVW5leHBlY3RlZEZvcm1hdENvZGVcIiwge2NvZGU6IGZvcm1hdENvZGV9KTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst incident_1 = require(\"incident\");\nconst swf_tree_1 = require(\"swf-tree\");\nconst basic_data_types_1 = require(\"./basic-data-types\");\nconst shape_1 = require(\"./shape\");\nfunction parseGridFittingBits(bitStream) {\n    const code = bitStream.readUint32Bits(3);\n    switch (code) {\n        case 0:\n            return swf_tree_1.text.GridFitting.None;\n        case 1:\n            return swf_tree_1.text.GridFitting.Pixel;\n        case 2:\n            return swf_tree_1.text.GridFitting.SubPixel;\n        default:\n            throw new incident_1.Incident(\"UnreachableCode\");\n    }\n}\nexports.parseGridFittingBits = parseGridFittingBits;\nfunction parseLanguageCode(byteStream) {\n    const code = byteStream.readUint8();\n    switch (code) {\n        case 0:\n            return swf_tree_1.LanguageCode.Auto;\n        case 1:\n            return swf_tree_1.LanguageCode.Latin;\n        case 2:\n            return swf_tree_1.LanguageCode.Japanese;\n        case 3:\n            return swf_tree_1.LanguageCode.Korean;\n        case 4:\n            return swf_tree_1.LanguageCode.SimplifiedChinese;\n        case 5:\n            return swf_tree_1.LanguageCode.TraditionalChinese;\n        default:\n            throw new incident_1.Incident(\"UnreachableCode\");\n    }\n}\nexports.parseLanguageCode = parseLanguageCode;\nfunction parseTextRendererBits(bitStream) {\n    const code = bitStream.readUint32Bits(2);\n    switch (code) {\n        case 0:\n            return swf_tree_1.text.TextRenderer.Normal;\n        case 1:\n            return swf_tree_1.text.TextRenderer.Advanced;\n        default:\n            throw new incident_1.Incident(\"UnreachableCode\");\n    }\n}\nexports.parseTextRendererBits = parseTextRendererBits;\nfunction parseTextRecordString(byteStream, hasAlpha, indexBits, advanceBits) {\n    const result = [];\n    while (byteStream.peekUint8() !== 0) {\n        result.push(parseTextRecord(byteStream, hasAlpha, indexBits, advanceBits));\n    }\n    byteStream.skip(1); // End of records\n    return result;\n}\nexports.parseTextRecordString = parseTextRecordString;\nfunction parseTextRecord(byteStream, hasAlpha, indexBits, advanceBits) {\n    const flags = byteStream.readUint8();\n    const hasFont = (flags & (1 << 3)) !== 0;\n    const hasColor = (flags & (1 << 2)) !== 0;\n    const hasOffsetX = (flags & (1 << 1)) !== 0;\n    const hasOffsetY = (flags & (1 << 0)) !== 0;\n    const fontId = hasFont ? byteStream.readUint16LE() : undefined;\n    let color = undefined;\n    if (hasColor) {\n        color = hasAlpha ? basic_data_types_1.parseStraightSRgba8(byteStream) : Object.assign({}, basic_data_types_1.parseSRgb8(byteStream), { a: 255 });\n    }\n    const offsetX = hasOffsetX ? byteStream.readSint16LE() : 0;\n    const offsetY = hasOffsetY ? byteStream.readSint16LE() : 0;\n    const fontSize = hasFont ? byteStream.readUint16LE() : undefined;\n    const entryCount = byteStream.readUint8();\n    const bitStream = byteStream.asBitStream();\n    const entries = [];\n    for (let i = 0; i < entryCount; i++) {\n        const index = bitStream.readUint32Bits(indexBits);\n        const advance = bitStream.readSint32Bits(advanceBits);\n        entries.push({ index, advance });\n    }\n    bitStream.align();\n    return { fontId, color, offsetX, offsetY, fontSize, entries };\n}\nexports.parseTextRecord = parseTextRecord;\nfunction parseCsmTableHintBits(bitStream) {\n    switch (bitStream.readUint16Bits(2)) {\n        case 0:\n            return swf_tree_1.text.CsmTableHint.Thin;\n        case 1:\n            return swf_tree_1.text.CsmTableHint.Medium;\n        case 2:\n            return swf_tree_1.text.CsmTableHint.Thick;\n        default:\n            throw new incident_1.Incident(\"UnreachableCode\");\n    }\n}\nexports.parseCsmTableHintBits = parseCsmTableHintBits;\nfunction parseFontAlignmentZone(byteStream) {\n    const zoneDataCount = byteStream.readUint8();\n    // TODO: Assert zoneDataCount === 2\n    const data = [];\n    for (let i = 0; i < zoneDataCount; i++) {\n        data.push(parseFontAlignmentZoneData(byteStream));\n    }\n    const flags = byteStream.readUint8();\n    const hasX = (flags & (1 << 0)) !== 0;\n    const hasY = (flags & (1 << 1)) !== 0;\n    return { data, hasX, hasY };\n}\nexports.parseFontAlignmentZone = parseFontAlignmentZone;\nfunction parseFontAlignmentZoneData(byteStream) {\n    const origin = byteStream.readFloat16LE();\n    const size = byteStream.readFloat16LE();\n    return { origin, size };\n}\nexports.parseFontAlignmentZoneData = parseFontAlignmentZoneData;\nfunction parseOffsetGlyphs(byteStream, glyphCount, useWideOffset) {\n    const startPos = byteStream.bytePos;\n    const offsets = new Array(glyphCount + 1);\n    for (let i = 0; i < offsets.length; i++) {\n        offsets[i] = useWideOffset ? byteStream.readUint32LE() : byteStream.readUint16LE();\n    }\n    const result = [];\n    for (let i = 1; i < offsets.length; i++) {\n        const length = offsets[i] - (byteStream.bytePos - startPos);\n        result.push(shape_1.parseGlyph(byteStream.take(length)));\n    }\n    return result;\n}\nexports.parseOffsetGlyphs = parseOffsetGlyphs;\nfunction parseFontLayout(byteStream, glyphCount) {\n    const ascent = byteStream.readUint16LE();\n    const descent = byteStream.readUint16LE();\n    const leading = byteStream.readUint16LE();\n    const advances = new Array(glyphCount);\n    for (let i = 0; i < advances.length; i++) {\n        advances[i] = byteStream.readUint16LE();\n    }\n    const bounds = new Array(glyphCount);\n    for (let i = 0; i < bounds.length; i++) {\n        bounds[i] = basic_data_types_1.parseRect(byteStream);\n    }\n    const kerning = new Array(byteStream.readUint16LE());\n    for (let i = 0; i < kerning.length; i++) {\n        kerning[i] = parseKerningRecord(byteStream);\n    }\n    return { ascent, descent, leading, advances, bounds, kerning };\n}\nexports.parseFontLayout = parseFontLayout;\nfunction parseKerningRecord(byteStream) {\n    const left = byteStream.readUint16LE();\n    const right = byteStream.readUint16LE();\n    const adjustment = byteStream.readSint16LE();\n    return { left, right, adjustment };\n}\nexports.parseKerningRecord = parseKerningRecord;\nfunction parseTextAlignment(byteStream) {\n    switch (byteStream.readUint8()) {\n        case 0:\n            return swf_tree_1.text.TextAlignment.Left;\n        case 1:\n            return swf_tree_1.text.TextAlignment.Right;\n        case 2:\n            return swf_tree_1.text.TextAlignment.Center;\n        case 3:\n            return swf_tree_1.text.TextAlignment.Justify;\n        default:\n            throw new incident_1.Incident(\"UnreachableCode\");\n    }\n}\nexports.parseTextAlignment = parseTextAlignment;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"@open-flash/stream\");\nconst avm1_1 = require(\"./parsers/avm1\");\nclass Avm1Parser {\n    constructor(bytes) {\n        this.stream = new stream_1.ReadableStream(bytes);\n    }\n    getBytePos() {\n        return this.stream.bytePos;\n    }\n    readNext() {\n        if (this.stream.bytePos === this.stream.byteEnd) {\n            return undefined;\n        }\n        else if (this.stream.peekUint8() === 0) {\n            this.stream.bytePos += 1;\n            return undefined;\n        }\n        return avm1_1.parseAction(this.stream);\n    }\n    readAt(offset) {\n        this.stream.bytePos = offset;\n        return this.readNext();\n    }\n}\nexports.Avm1Parser = Avm1Parser;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQ0FBb0Q7QUFHcEQseUNBQTZDO0FBRTdDLE1BQWEsVUFBVTtJQUdyQixZQUFZLEtBQWlCO1FBQzNCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSx1QkFBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFTSxVQUFVO1FBQ2YsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQztJQUM3QixDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEtBQUssSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUU7WUFDL0MsT0FBTyxTQUFTLENBQUM7U0FDbEI7YUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxFQUFFO1lBQ3hDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFJLENBQUMsQ0FBQztZQUN6QixPQUFPLFNBQVMsQ0FBQztTQUNsQjtRQUNELE9BQU8sa0JBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELE1BQU0sQ0FBQyxNQUFnQjtRQUNyQixJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDN0IsT0FBTyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDekIsQ0FBQztDQUNGO0FBekJELGdDQXlCQyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlYWRhYmxlU3RyZWFtIH0gZnJvbSBcIkBvcGVuLWZsYXNoL3N0cmVhbVwiO1xuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSBcImF2bTEtdHJlZS9hY3Rpb25cIjtcbmltcG9ydCB7IFVpbnRTaXplIH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyBwYXJzZUFjdGlvbiB9IGZyb20gXCIuL3BhcnNlcnMvYXZtMVwiO1xuXG5leHBvcnQgY2xhc3MgQXZtMVBhcnNlciB7XG4gIHByaXZhdGUgcmVhZG9ubHkgc3RyZWFtOiBSZWFkYWJsZVN0cmVhbTtcblxuICBjb25zdHJ1Y3RvcihieXRlczogVWludDhBcnJheSkge1xuICAgIHRoaXMuc3RyZWFtID0gbmV3IFJlYWRhYmxlU3RyZWFtKGJ5dGVzKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRCeXRlUG9zKCk6IFVpbnRTaXplIHtcbiAgICByZXR1cm4gdGhpcy5zdHJlYW0uYnl0ZVBvcztcbiAgfVxuXG4gIHJlYWROZXh0KCk6IEFjdGlvbiB8IHVuZGVmaW5lZCB7XG4gICAgaWYgKHRoaXMuc3RyZWFtLmJ5dGVQb3MgPT09IHRoaXMuc3RyZWFtLmJ5dGVFbmQpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfSBlbHNlIGlmICh0aGlzLnN0cmVhbS5wZWVrVWludDgoKSA9PT0gMCkge1xuICAgICAgdGhpcy5zdHJlYW0uYnl0ZVBvcyArPSAxO1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIHBhcnNlQWN0aW9uKHRoaXMuc3RyZWFtKTtcbiAgfVxuXG4gIHJlYWRBdChvZmZzZXQ6IFVpbnRTaXplKTogQWN0aW9uIHwgdW5kZWZpbmVkIHtcbiAgICB0aGlzLnN0cmVhbS5ieXRlUG9zID0gb2Zmc2V0O1xuICAgIHJldHVybiB0aGlzLnJlYWROZXh0KCk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst action_type_1 = require(\"avm1-tree/action-type\");\nconst _type_1 = require(\"avm1-tree/catch-targets/_type\");\nconst get_url2_method_1 = require(\"avm1-tree/get-url2-method\");\nconst value_type_1 = require(\"avm1-tree/value-type\");\nconst incident_1 = require(\"incident\");\nfunction parseActionHeader(byteStream) {\n    const actionCode = byteStream.readUint8();\n    const length = actionCode < 0x80 ? 0 : byteStream.readUint16LE();\n    return { actionCode, length };\n}\nexports.parseActionHeader = parseActionHeader;\n// tslint:disable-next-line:cyclomatic-complexity\nfunction parseAction(byteStream) {\n    // const startPos: number = byteStream.bytePos;\n    const header = parseActionHeader(byteStream);\n    if (byteStream.available() < header.length) {\n        // const headerLength: number = byteStream.bytePos - startPos;\n        throw new Error(\"IncompleteStream\");\n        // throw createIncompleteStreamError(headerLength + header.length);\n    }\n    const actionDataStartPos = byteStream.bytePos;\n    let result;\n    switch (header.actionCode) {\n        case 0x04:\n            result = { action: action_type_1.ActionType.NextFrame };\n            break;\n        case 0x05:\n            result = { action: action_type_1.ActionType.PreviousFrame };\n            break;\n        case 0x06:\n            result = { action: action_type_1.ActionType.Play };\n            break;\n        case 0x07:\n            result = { action: action_type_1.ActionType.Stop };\n            break;\n        case 0x08:\n            result = { action: action_type_1.ActionType.ToggleQuality };\n            break;\n        case 0x09:\n            result = { action: action_type_1.ActionType.StopSounds };\n            break;\n        case 0x0a:\n            result = { action: action_type_1.ActionType.Add };\n            break;\n        case 0x0b:\n            result = { action: action_type_1.ActionType.Subtract };\n            break;\n        case 0x0c:\n            result = { action: action_type_1.ActionType.Multiply };\n            break;\n        case 0x0d:\n            result = { action: action_type_1.ActionType.Divide };\n            break;\n        case 0x0e:\n            result = { action: action_type_1.ActionType.Equals };\n            break;\n        case 0x0f:\n            result = { action: action_type_1.ActionType.Less };\n            break;\n        case 0x10:\n            result = { action: action_type_1.ActionType.And };\n            break;\n        case 0x11:\n            result = { action: action_type_1.ActionType.Or };\n            break;\n        case 0x12:\n            result = { action: action_type_1.ActionType.Not };\n            break;\n        case 0x13:\n            result = { action: action_type_1.ActionType.StringEquals };\n            break;\n        case 0x14:\n            result = { action: action_type_1.ActionType.StringLength };\n            break;\n        case 0x15:\n            result = { action: action_type_1.ActionType.StringExtract };\n            break;\n        case 0x17:\n            result = { action: action_type_1.ActionType.Pop };\n            break;\n        case 0x18:\n            result = { action: action_type_1.ActionType.ToInteger };\n            break;\n        case 0x1c:\n            result = { action: action_type_1.ActionType.GetVariable };\n            break;\n        case 0x1d:\n            result = { action: action_type_1.ActionType.SetVariable };\n            break;\n        case 0x20:\n            result = { action: action_type_1.ActionType.SetTarget2 };\n            break;\n        case 0x21:\n            result = { action: action_type_1.ActionType.StringAdd };\n            break;\n        case 0x22:\n            result = { action: action_type_1.ActionType.GetProperty };\n            break;\n        case 0x23:\n            result = { action: action_type_1.ActionType.SetProperty };\n            break;\n        case 0x24:\n            result = { action: action_type_1.ActionType.CloneSprite };\n            break;\n        case 0x25:\n            result = { action: action_type_1.ActionType.RemoveSprite };\n            break;\n        case 0x26:\n            result = { action: action_type_1.ActionType.Trace };\n            break;\n        case 0x27:\n            result = { action: action_type_1.ActionType.StartDrag };\n            break;\n        case 0x28:\n            result = { action: action_type_1.ActionType.EndDrag };\n            break;\n        case 0x29:\n            result = { action: action_type_1.ActionType.StringLess };\n            break;\n        case 0x2a:\n            result = { action: action_type_1.ActionType.Throw };\n            break;\n        case 0x2b:\n            result = { action: action_type_1.ActionType.CastOp };\n            break;\n        case 0x2c:\n            result = { action: action_type_1.ActionType.ImplementsOp };\n            break;\n        case 0x2d:\n            result = { action: action_type_1.ActionType.FsCommand2 };\n            break;\n        case 0x30:\n            result = { action: action_type_1.ActionType.RandomNumber };\n            break;\n        case 0x31:\n            result = { action: action_type_1.ActionType.MbStringLength };\n            break;\n        case 0x32:\n            result = { action: action_type_1.ActionType.CharToAscii };\n            break;\n        case 0x33:\n            result = { action: action_type_1.ActionType.AsciiToChar };\n            break;\n        case 0x34:\n            result = { action: action_type_1.ActionType.GetTime };\n            break;\n        case 0x35:\n            result = { action: action_type_1.ActionType.MbStringExtract };\n            break;\n        case 0x36:\n            result = { action: action_type_1.ActionType.MbCharToAscii };\n            break;\n        case 0x37:\n            result = { action: action_type_1.ActionType.MbAsciiToChar };\n            break;\n        case 0x3a:\n            result = { action: action_type_1.ActionType.Delete };\n            break;\n        case 0x3b:\n            result = { action: action_type_1.ActionType.Delete2 };\n            break;\n        case 0x3c:\n            result = { action: action_type_1.ActionType.DefineLocal };\n            break;\n        case 0x3d:\n            result = { action: action_type_1.ActionType.CallFunction };\n            break;\n        case 0x3e:\n            result = { action: action_type_1.ActionType.Return };\n            break;\n        case 0x3f:\n            result = { action: action_type_1.ActionType.Modulo };\n            break;\n        case 0x40:\n            result = { action: action_type_1.ActionType.NewObject };\n            break;\n        case 0x41:\n            result = { action: action_type_1.ActionType.DefineLocal2 };\n            break;\n        case 0x42:\n            result = { action: action_type_1.ActionType.InitArray };\n            break;\n        case 0x43:\n            result = { action: action_type_1.ActionType.InitObject };\n            break;\n        case 0x44:\n            result = { action: action_type_1.ActionType.TypeOf };\n            break;\n        case 0x45:\n            result = { action: action_type_1.ActionType.TargetPath };\n            break;\n        case 0x46:\n            result = { action: action_type_1.ActionType.Enumerate };\n            break;\n        case 0x47:\n            result = { action: action_type_1.ActionType.Add2 };\n            break;\n        case 0x48:\n            result = { action: action_type_1.ActionType.Less2 };\n            break;\n        case 0x49:\n            result = { action: action_type_1.ActionType.Equals2 };\n            break;\n        case 0x4a:\n            result = { action: action_type_1.ActionType.ToNumber };\n            break;\n        case 0x4b:\n            result = { action: action_type_1.ActionType.ToString };\n            break;\n        case 0x4c:\n            result = { action: action_type_1.ActionType.PushDuplicate };\n            break;\n        case 0x4d:\n            result = { action: action_type_1.ActionType.StackSwap };\n            break;\n        case 0x4e:\n            result = { action: action_type_1.ActionType.GetMember };\n            break;\n        case 0x4f:\n            result = { action: action_type_1.ActionType.SetMember };\n            break;\n        case 0x50:\n            result = { action: action_type_1.ActionType.Increment };\n            break;\n        case 0x51:\n            result = { action: action_type_1.ActionType.Decrement };\n            break;\n        case 0x52:\n            result = { action: action_type_1.ActionType.CallMethod };\n            break;\n        case 0x53:\n            result = { action: action_type_1.ActionType.NewMethod };\n            break;\n        case 0x54:\n            result = { action: action_type_1.ActionType.InstanceOf };\n            break;\n        case 0x55:\n            result = { action: action_type_1.ActionType.Enumerate2 };\n            break;\n        case 0x60:\n            result = { action: action_type_1.ActionType.BitAnd };\n            break;\n        case 0x61:\n            result = { action: action_type_1.ActionType.BitOr };\n            break;\n        case 0x62:\n            result = { action: action_type_1.ActionType.BitXor };\n            break;\n        case 0x63:\n            result = { action: action_type_1.ActionType.BitLShift };\n            break;\n        case 0x64:\n            result = { action: action_type_1.ActionType.BitRShift };\n            break;\n        case 0x65:\n            result = { action: action_type_1.ActionType.BitURShift };\n            break;\n        case 0x66:\n            result = { action: action_type_1.ActionType.StrictEquals };\n            break;\n        case 0x67:\n            result = { action: action_type_1.ActionType.Greater };\n            break;\n        case 0x68:\n            result = { action: action_type_1.ActionType.StringGreater };\n            break;\n        case 0x69:\n            result = { action: action_type_1.ActionType.Extends };\n            break;\n        case 0x81:\n            result = parseGotoFrameAction(byteStream);\n            break;\n        case 0x83:\n            result = parseGetUrlAction(byteStream);\n            break;\n        case 0x87:\n            result = parseStoreRegisterAction(byteStream);\n            break;\n        case 0x88:\n            result = parseConstantPoolAction(byteStream);\n            break;\n        case 0x8a:\n            result = parseWaitForFrameAction(byteStream);\n            break;\n        case 0x8b:\n            result = parseSetTargetAction(byteStream);\n            break;\n        case 0x8c:\n            result = parseGotoLabelAction(byteStream);\n            break;\n        case 0x8d:\n            result = parseWaitForFrame2Action(byteStream);\n            break;\n        case 0x8e:\n            result = parseDefineFunction2Action(byteStream);\n            break;\n        case 0x8f:\n            result = parseTryAction(byteStream);\n            break;\n        case 0x94:\n            result = parseWithAction(byteStream);\n            break;\n        case 0x96:\n            result = parsePushAction(byteStream.take(header.length));\n            break;\n        case 0x99:\n            result = parseJumpAction(byteStream);\n            break;\n        case 0x9a:\n            result = parseGetUrl2Action(byteStream);\n            break;\n        case 0x9b:\n            result = parseDefineFunctionAction(byteStream);\n            break;\n        case 0x9d:\n            result = parseIfAction(byteStream);\n            break;\n        case 0x9e:\n            result = { action: action_type_1.ActionType.Call };\n            break;\n        case 0x9f:\n            result = parseGotoFrame2Action(byteStream);\n            break;\n        default:\n            result = { action: action_type_1.ActionType.Unknown, actionCode: header.actionCode };\n            byteStream.skip(header.length);\n            break;\n    }\n    const actionDataLength = byteStream.bytePos - actionDataStartPos;\n    if (actionDataLength < header.length) {\n        byteStream.skip(header.length - actionDataLength);\n    }\n    return result;\n}\nexports.parseAction = parseAction;\nfunction parseGotoFrameAction(byteStream) {\n    const frame = byteStream.readUint16LE();\n    return {\n        action: action_type_1.ActionType.GotoFrame,\n        frame,\n    };\n}\nexports.parseGotoFrameAction = parseGotoFrameAction;\nfunction parseGetUrlAction(byteStream) {\n    const url = byteStream.readCString();\n    const target = byteStream.readCString();\n    return {\n        action: action_type_1.ActionType.GetUrl,\n        url,\n        target,\n    };\n}\nexports.parseGetUrlAction = parseGetUrlAction;\nfunction parseStoreRegisterAction(byteStream) {\n    const register = byteStream.readUint8();\n    return {\n        action: action_type_1.ActionType.StoreRegister,\n        register,\n    };\n}\nexports.parseStoreRegisterAction = parseStoreRegisterAction;\nfunction parseConstantPoolAction(byteStream) {\n    const constantCount = byteStream.readUint16LE();\n    const constantPool = [];\n    for (let i = 0; i < constantCount; i++) {\n        constantPool.push(byteStream.readCString());\n    }\n    return {\n        action: action_type_1.ActionType.ConstantPool,\n        constantPool,\n    };\n}\nexports.parseConstantPoolAction = parseConstantPoolAction;\nfunction parseWaitForFrameAction(byteStream) {\n    const frame = byteStream.readUint16LE();\n    const skipCount = byteStream.readUint8();\n    return {\n        action: action_type_1.ActionType.WaitForFrame,\n        frame,\n        skipCount,\n    };\n}\nexports.parseWaitForFrameAction = parseWaitForFrameAction;\nfunction parseSetTargetAction(byteStream) {\n    const targetName = byteStream.readCString();\n    return {\n        action: action_type_1.ActionType.SetTarget,\n        targetName,\n    };\n}\nexports.parseSetTargetAction = parseSetTargetAction;\nfunction parseGotoLabelAction(byteStream) {\n    const label = byteStream.readCString();\n    return {\n        action: action_type_1.ActionType.GotoLabel,\n        label,\n    };\n}\nexports.parseGotoLabelAction = parseGotoLabelAction;\nfunction parseWaitForFrame2Action(byteStream) {\n    const skipCount = byteStream.readUint8();\n    return {\n        action: action_type_1.ActionType.WaitForFrame2,\n        skipCount,\n    };\n}\nexports.parseWaitForFrame2Action = parseWaitForFrame2Action;\nfunction parseDefineFunction2Action(byteStream) {\n    const name = byteStream.readCString();\n    const parameterCount = byteStream.readUint16LE();\n    const registerCount = byteStream.readUint8();\n    const flags = byteStream.readUint16LE();\n    const preloadThis = (flags & (1 << 0)) !== 0;\n    const suppressThis = (flags & (1 << 1)) !== 0;\n    const preloadArguments = (flags & (1 << 2)) !== 0;\n    const suppressArguments = (flags & (1 << 3)) !== 0;\n    const preloadSuper = (flags & (1 << 4)) !== 0;\n    const suppressSuper = (flags & (1 << 5)) !== 0;\n    const preloadRoot = (flags & (1 << 6)) !== 0;\n    const preloadParent = (flags & (1 << 7)) !== 0;\n    const preloadGlobal = (flags & (1 << 8)) !== 0;\n    // Skip 7 bits\n    const parameters = [];\n    for (let i = 0; i < parameterCount; i++) {\n        const register = byteStream.readUint8();\n        const name = byteStream.readCString();\n        parameters.push({ register, name });\n    }\n    const codeSize = byteStream.readUint16LE();\n    // The action length stops here for parseDefineFunction2Action\n    const body = byteStream.takeBytes(codeSize);\n    return {\n        action: action_type_1.ActionType.DefineFunction2,\n        name,\n        preloadParent,\n        preloadRoot,\n        suppressSuper,\n        preloadSuper,\n        suppressArguments,\n        preloadArguments,\n        suppressThis,\n        preloadThis,\n        preloadGlobal,\n        registerCount,\n        parameters,\n        body,\n    };\n}\nexports.parseDefineFunction2Action = parseDefineFunction2Action;\nfunction parseCatchTarget(byteStream, catchInRegister) {\n    if (catchInRegister) {\n        return { type: _type_1.CatchTargetType.Register, target: byteStream.readUint8() };\n    }\n    else {\n        return { type: _type_1.CatchTargetType.Variable, target: byteStream.readCString() };\n    }\n}\nfunction parseTryAction(byteStream) {\n    const flags = byteStream.readUint8();\n    const hasCatchBlock = (flags & (1 << 0)) !== 0;\n    const hasFinallyBlock = (flags & (1 << 1)) !== 0;\n    const catchInRegister = (flags & (1 << 2)) !== 0;\n    // (Skip bits [3,7])\n    const trySize = byteStream.readUint16LE();\n    const catchSize = byteStream.readUint16LE();\n    const finallySize = byteStream.readUint16LE();\n    const catchTarget = parseCatchTarget(byteStream, catchInRegister);\n    const tryBody = byteStream.takeBytes(trySize);\n    let catchBody = undefined;\n    if (hasCatchBlock) {\n        catchBody = byteStream.takeBytes(catchSize);\n    }\n    let finallyBody = undefined;\n    if (hasFinallyBlock) {\n        finallyBody = byteStream.takeBytes(finallySize);\n    }\n    return {\n        action: action_type_1.ActionType.Try,\n        try: tryBody,\n        catch: catchBody,\n        catchTarget,\n        finally: finallyBody,\n    };\n}\nexports.parseTryAction = parseTryAction;\nfunction parseWithAction(byteStream) {\n    const withSize = byteStream.readUint16LE();\n    // The action length stops here for parseWithAction\n    const withBody = byteStream.takeBytes(withSize);\n    return {\n        action: action_type_1.ActionType.With,\n        with: withBody,\n    };\n}\nexports.parseWithAction = parseWithAction;\nfunction parsePushAction(byteStream) {\n    const values = [];\n    while (byteStream.available() > 0) {\n        values.push(parseActionValue(byteStream));\n    }\n    return {\n        action: action_type_1.ActionType.Push,\n        values,\n    };\n}\nexports.parsePushAction = parsePushAction;\nfunction parseActionValue(byteStream) {\n    const typeCode = byteStream.readUint8();\n    switch (typeCode) {\n        case 0:\n            return { type: value_type_1.ValueType.String, value: byteStream.readCString() };\n        case 1:\n            return { type: value_type_1.ValueType.Float32, value: byteStream.readFloat32LE() };\n        case 2:\n            return { type: value_type_1.ValueType.Null };\n        case 3:\n            return { type: value_type_1.ValueType.Undefined };\n        case 4:\n            return { type: value_type_1.ValueType.Register, value: byteStream.readUint8() };\n        case 5:\n            return { type: value_type_1.ValueType.Boolean, value: byteStream.readUint8() !== 0 };\n        case 6:\n            return { type: value_type_1.ValueType.Float64, value: byteStream.readFloat64LE() };\n        case 7:\n            return { type: value_type_1.ValueType.Sint32, value: byteStream.readSint32LE() };\n        case 8:\n            return { type: value_type_1.ValueType.Constant, value: byteStream.readUint8() };\n        case 9:\n            return { type: value_type_1.ValueType.Constant, value: byteStream.readUint16LE() };\n        default:\n            throw new Error(`Unknown type code: ${typeCode}`);\n    }\n}\nexports.parseActionValue = parseActionValue;\nfunction parseJumpAction(byteStream) {\n    const offset = byteStream.readSint16LE();\n    return {\n        action: action_type_1.ActionType.Jump,\n        offset,\n    };\n}\nexports.parseJumpAction = parseJumpAction;\nfunction parseGetUrl2Action(byteStream) {\n    const bitStream = byteStream.asBitStream();\n    let method;\n    switch (bitStream.readUint16Bits(2)) {\n        case 0:\n            method = get_url2_method_1.GetUrl2Method.None;\n            break;\n        case 1:\n            method = get_url2_method_1.GetUrl2Method.Get;\n            break;\n        case 2:\n            method = get_url2_method_1.GetUrl2Method.Post;\n            break;\n        default:\n            throw new incident_1.Incident(\"UnexpectGetUrl2Method\", \"Unexpected value for the getUrl2 method\");\n    }\n    bitStream.skipBits(4);\n    const loadTarget = bitStream.readBoolBits();\n    const loadVariables = bitStream.readBoolBits();\n    bitStream.align();\n    return {\n        action: action_type_1.ActionType.GetUrl2,\n        method,\n        loadTarget,\n        loadVariables,\n    };\n}\nexports.parseGetUrl2Action = parseGetUrl2Action;\nfunction parseDefineFunctionAction(byteStream) {\n    const name = byteStream.readCString();\n    const parameterCount = byteStream.readUint16LE();\n    const parameters = [];\n    for (let i = 0; i < parameterCount; i++) {\n        parameters.push(byteStream.readCString());\n    }\n    const bodySize = byteStream.readUint16LE();\n    // The action length stops here for parseDefineFunctionAction\n    const body = byteStream.takeBytes(bodySize);\n    return {\n        action: action_type_1.ActionType.DefineFunction,\n        name,\n        parameters,\n        body,\n    };\n}\nexports.parseDefineFunctionAction = parseDefineFunctionAction;\nfunction parseIfAction(byteStream) {\n    const offset = byteStream.readSint16LE();\n    return {\n        action: action_type_1.ActionType.If,\n        offset,\n    };\n}\nexports.parseIfAction = parseIfAction;\nfunction parseGotoFrame2Action(byteStream) {\n    const flags = byteStream.readUint8();\n    // (Skip first 6 bits)\n    const play = (flags & (1 << 0)) !== 0;\n    const hasSceneBias = (flags & (1 << 1)) !== 0;\n    const sceneBias = hasSceneBias ? byteStream.readUint16LE() : 0;\n    return {\n        action: action_type_1.ActionType.GotoFrame2,\n        play,\n        sceneBias,\n    };\n}\nexports.parseGotoFrame2Action = parseGotoFrame2Action;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar CatchTargetType;\n(function (CatchTargetType) {\n    CatchTargetType[CatchTargetType[\"Register\"] = 0] = \"Register\";\n    CatchTargetType[CatchTargetType[\"Variable\"] = 1] = \"Variable\";\n})(CatchTargetType = exports.CatchTargetType || (exports.CatchTargetType = {}));\nexports.$CatchTargetType = new ts_enum_1.TsEnumType({\n    enum: CatchTargetType,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY2F0Y2gtdGFyZ2V0cy9fdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxlQUdYO0FBSEQsV0FBWSxlQUFlO0lBQ3pCLDZEQUFRLENBQUE7SUFDUiw2REFBUSxDQUFBO0FBQ1YsQ0FBQyxFQUhXLGVBQWUsR0FBZix1QkFBZSxLQUFmLHVCQUFlLFFBRzFCO0FBRVksUUFBQSxnQkFBZ0IsR0FBZ0MsSUFBSSxvQkFBVSxDQUFrQjtJQUMzRixJQUFJLEVBQUUsZUFBZTtJQUNyQixVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJjYXRjaC10YXJnZXRzL190eXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gQ2F0Y2hUYXJnZXRUeXBlIHtcbiAgUmVnaXN0ZXIsXG4gIFZhcmlhYmxlLFxufVxuXG5leHBvcnQgY29uc3QgJENhdGNoVGFyZ2V0VHlwZTogVHNFbnVtVHlwZTxDYXRjaFRhcmdldFR5cGU+ID0gbmV3IFRzRW51bVR5cGU8Q2F0Y2hUYXJnZXRUeXBlPih7XG4gIGVudW06IENhdGNoVGFyZ2V0VHlwZSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_style_1 = require(\"kryo/case-style\");\nconst ts_enum_1 = require(\"kryo/types/ts-enum\");\nvar GetUrl2Method;\n(function (GetUrl2Method) {\n    GetUrl2Method[GetUrl2Method[\"None\"] = 0] = \"None\";\n    GetUrl2Method[GetUrl2Method[\"Get\"] = 1] = \"Get\";\n    GetUrl2Method[GetUrl2Method[\"Post\"] = 2] = \"Post\";\n})(GetUrl2Method = exports.GetUrl2Method || (exports.GetUrl2Method = {}));\nexports.$GetUrl2Method = new ts_enum_1.TsEnumType({\n    enum: GetUrl2Method,\n    changeCase: case_style_1.CaseStyle.KebabCase,\n});\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZ2V0LXVybDItbWV0aG9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGdEQUFnRDtBQUVoRCxJQUFZLGFBSVg7QUFKRCxXQUFZLGFBQWE7SUFDdkIsaURBQUksQ0FBQTtJQUNKLCtDQUFHLENBQUE7SUFDSCxpREFBSSxDQUFBO0FBQ04sQ0FBQyxFQUpXLGFBQWEsR0FBYixxQkFBYSxLQUFiLHFCQUFhLFFBSXhCO0FBRVksUUFBQSxjQUFjLEdBQThCLElBQUksb0JBQVUsQ0FBZ0I7SUFDckYsSUFBSSxFQUFFLGFBQWE7SUFDbkIsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZ2V0LXVybDItbWV0aG9kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gR2V0VXJsMk1ldGhvZCB7XG4gIE5vbmUsXG4gIEdldCxcbiAgUG9zdCxcbn1cblxuZXhwb3J0IGNvbnN0ICRHZXRVcmwyTWV0aG9kOiBUc0VudW1UeXBlPEdldFVybDJNZXRob2Q+ID0gbmV3IFRzRW51bVR5cGU8R2V0VXJsMk1ldGhvZD4oe1xuICBlbnVtOiBHZXRVcmwyTWV0aG9kLFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// MovieClip scope, `with` statement\nclass DynamicScope {\n    constructor(scope) {\n        this.scope = scope;\n    }\n    get(name, ectx) {\n        return ectx.vm.tryGetMember(this.scope, name);\n    }\n    set(name, value, ectx) {\n        return ectx.vm.setMember(this.scope, name, value);\n    }\n}\nexports.DynamicScope = DynamicScope;\nclass StaticScope {\n    constructor() {\n        this.scope = new Map();\n    }\n    get(name) {\n        return this.scope.get(name);\n    }\n    set(name, value) {\n        this.scope.set(name, value);\n    }\n}\nexports.StaticScope = StaticScope;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2NvcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFTQSxvQ0FBb0M7QUFDcEMsTUFBYSxZQUFZO0lBR3ZCLFlBQVksS0FBZTtRQUN6QixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUNyQixDQUFDO0lBRUQsR0FBRyxDQUFDLElBQVksRUFBRSxJQUFzQjtRQUN0QyxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVELEdBQUcsQ0FBQyxJQUFZLEVBQUUsS0FBZSxFQUFFLElBQXNCO1FBQ3ZELE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDcEQsQ0FBQztDQUNGO0FBZEQsb0NBY0M7QUFFRCxNQUFhLFdBQVc7SUFHdEI7UUFDRSxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksR0FBRyxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELEdBQUcsQ0FBQyxJQUFZO1FBQ2QsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQsR0FBRyxDQUFDLElBQVksRUFBRSxLQUFlO1FBQy9CLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM5QixDQUFDO0NBQ0Y7QUFkRCxrQ0FjQyIsImZpbGUiOiJzY29wZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF2bVZhbHVlIH0gZnJvbSBcIi4vYXZtLXZhbHVlXCI7XG5pbXBvcnQgeyBFeGVjdXRpb25Db250ZXh0IH0gZnJvbSBcIi4vdm1cIjtcblxuZXhwb3J0IGludGVyZmFjZSBBdm1TY29wZSB7XG4gIGdldChuYW1lOiBzdHJpbmcsIGVjdHg6IEV4ZWN1dGlvbkNvbnRleHQpOiBBdm1WYWx1ZSB8IHVuZGVmaW5lZDtcblxuICBzZXQobmFtZTogc3RyaW5nLCB2YWx1ZTogQXZtVmFsdWUsIGVjdHg6IEV4ZWN1dGlvbkNvbnRleHQpOiB2b2lkO1xufVxuXG4vLyBNb3ZpZUNsaXAgc2NvcGUsIGB3aXRoYCBzdGF0ZW1lbnRcbmV4cG9ydCBjbGFzcyBEeW5hbWljU2NvcGUgaW1wbGVtZW50cyBBdm1TY29wZSB7XG4gIHByaXZhdGUgcmVhZG9ubHkgc2NvcGU6IEF2bVZhbHVlO1xuXG4gIGNvbnN0cnVjdG9yKHNjb3BlOiBBdm1WYWx1ZSkge1xuICAgIHRoaXMuc2NvcGUgPSBzY29wZTtcbiAgfVxuXG4gIGdldChuYW1lOiBzdHJpbmcsIGVjdHg6IEV4ZWN1dGlvbkNvbnRleHQpOiBBdm1WYWx1ZSB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIGVjdHgudm0udHJ5R2V0TWVtYmVyKHRoaXMuc2NvcGUsIG5hbWUpO1xuICB9XG5cbiAgc2V0KG5hbWU6IHN0cmluZywgdmFsdWU6IEF2bVZhbHVlLCBlY3R4OiBFeGVjdXRpb25Db250ZXh0KTogdm9pZCB7XG4gICAgcmV0dXJuIGVjdHgudm0uc2V0TWVtYmVyKHRoaXMuc2NvcGUsIG5hbWUsIHZhbHVlKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU3RhdGljU2NvcGUgaW1wbGVtZW50cyBBdm1TY29wZSB7XG4gIHByaXZhdGUgcmVhZG9ubHkgc2NvcGU6IE1hcDxzdHJpbmcsIEF2bVZhbHVlPjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnNjb3BlID0gbmV3IE1hcCgpO1xuICB9XG5cbiAgZ2V0KG5hbWU6IHN0cmluZyk6IEF2bVZhbHVlIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5zY29wZS5nZXQobmFtZSk7XG4gIH1cblxuICBzZXQobmFtZTogc3RyaW5nLCB2YWx1ZTogQXZtVmFsdWUpOiB2b2lkIHtcbiAgICB0aGlzLnNjb3BlLnNldChuYW1lLCB2YWx1ZSk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n","const INITIAL_DEPTH = -1;\nexport class DisplayObjectBase {\n    constructor() {\n        this.depth = undefined;\n    }\n}\n","import { EventEmitter } from \"events\";\nimport { getMovie } from \"../../browser/xhr-loader\"; // TODO: Abstract this\nimport { DisplayObjectBase } from \"./display-object-base\";\nexport var LoaderEvent;\n(function (LoaderEvent) {\n    LoaderEvent[\"SwfHeader\"] = \"LoaderEvent.SwfHeader\";\n    LoaderEvent[\"Complete\"] = \"LoaderEvent.Complete\";\n})(LoaderEvent || (LoaderEvent = {}));\n/**\n * You can insert a loader in the display tree, it will display data as it loads it.\n */\nexport class SwfLoader extends DisplayObjectBase {\n    constructor(url) {\n        super();\n        this.url = url;\n        this.events = new EventEmitter();\n        this.sprite = undefined;\n    }\n    start() {\n        getMovie(this.url).then(movie => this.handleMovieLoaded(movie));\n    }\n    visit(visitor) {\n        return visitor.visitLoader(this);\n    }\n    nextFrame(isMainLoop, runScripts) {\n        if (this.sprite === undefined) {\n            return;\n        }\n        console.log(\"Updating loader\");\n    }\n    handleMovieLoaded(movie) {\n        this.events.emit(LoaderEvent.SwfHeader, movie.header);\n        // this.sprite = new Sprite();\n        this.events.emit(LoaderEvent.Complete, movie);\n    }\n}\nexport function loadSwf(swfUrl) {\n    const loader = new SwfLoader(swfUrl);\n    loader.start();\n    return loader;\n}\n","import { movieFromBytes } from \"swf-parser\";\nexport async function getMovie(uri) {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", uri, true);\n        xhr.responseType = \"arraybuffer\";\n        xhr.onload = function (ev) {\n            if (this.status === 200) {\n                try {\n                    const response = this.response;\n                    const movie = movieFromBytes(new Uint8Array(response));\n                    resolve(movie);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            }\n            else {\n                reject(new Error(\"Unknown error\"));\n            }\n        };\n        xhr.send();\n    });\n}\n","export var NativeSlot;\n(function (NativeSlot) {\n    NativeSlot.AUDIO = Symbol(\"[[audio]]\");\n    NativeSlot.SPRITE = Symbol(\"[[sprite]]\");\n})(NativeSlot || (NativeSlot = {}));\nconst NATIVE_SLOTS = new WeakMap();\nexport function getNativeSlot(avmValue, slot) {\n    const slots = NATIVE_SLOTS.get(avmValue);\n    if (slots === undefined) {\n        return undefined;\n    }\n    return slots.get(slot);\n}\nexport function setNativeSlot(avmValue, slot, slotValue) {\n    let slots = NATIVE_SLOTS.get(avmValue);\n    if (slots === undefined) {\n        slots = new Map();\n        NATIVE_SLOTS.set(avmValue, slots);\n    }\n    slots.set(slot, slotValue);\n}\n","import { AVM_UNDEFINED, AvmValueType } from \"avmore/avm-value\";\nimport { getNativeSlot, NativeSlot } from \"../slots\";\nexport class MovieClipBindings {\n    static getOrCreate(vm, realm) {\n        let bindings = realm.get(MovieClipBindings.SYMBOL);\n        if (bindings === undefined) {\n            bindings = vm.newObject();\n            const prototype = vm.newObject();\n            vm.setMember(prototype, \"gotoAndPlay\", MovieClipGotoAndPlayBindings.getOrCreate(vm, realm));\n            bindings.prototype = prototype;\n            realm.set(MovieClipBindings.SYMBOL, bindings);\n        }\n        return bindings;\n    }\n}\nMovieClipBindings.SYMBOL = Symbol(\"MovieClip\");\nexport class MovieClipGotoAndPlayBindings {\n    static getOrCreate(vm, realm) {\n        let bindings = realm.get(MovieClipGotoAndPlayBindings.SYMBOL);\n        if (bindings === undefined) {\n            bindings = vm.newExternal({\n                apply(thisArg, args) {\n                    const sprite = getNativeSlot(thisArg, NativeSlot.SPRITE);\n                    if (sprite === undefined) {\n                        throw new Error(\"MissingSlot: [[sprite]]\");\n                    }\n                    let frame;\n                    if (args.length > 0) {\n                        const frameArg = args[0];\n                        switch (frameArg.type) {\n                            case AvmValueType.Number: {\n                                frame = frameArg.value;\n                                break;\n                            }\n                            case AvmValueType.String: {\n                                frame = frameArg.value;\n                                break;\n                            }\n                            default: {\n                                throw new Error(\"InvalidFrameArgType\");\n                            }\n                        }\n                    }\n                    else {\n                        throw new Error(\"NotEnoughArguments\");\n                    }\n                    sprite.gotoAndPlay(frame);\n                    return AVM_UNDEFINED;\n                },\n                ownKeys() {\n                    return [];\n                },\n                get(key) {\n                    return undefined;\n                },\n                set() {\n                },\n            });\n            realm.set(MovieClipGotoAndPlayBindings.SYMBOL, bindings);\n        }\n        return bindings;\n    }\n}\nMovieClipGotoAndPlayBindings.SYMBOL = Symbol(\"MovieClip#gotoAndPlay\");\n","import { AvmValueType } from \"avmore/avm-value\";\nimport { NativeHost } from \"avmore/host\";\nimport { Vm } from \"avmore/vm\";\nimport { MovieClipBindings } from \"./native/movie-clip\";\nimport { NativeSlot, setNativeSlot } from \"./slots\";\nconst REALM = new Map();\nconst AVM_SPRITE_CACHE = new WeakMap();\nfunction getAvmSprite(vm, sprite) {\n    let external = AVM_SPRITE_CACHE.get(sprite);\n    if (external === undefined) {\n        const target = vm.newObject();\n        target.prototype = MovieClipBindings.getOrCreate(vm, REALM);\n        // const ownProperties: Map<string, AvmValue> = new Map();\n        external = vm.newExternal({\n            ownKeys() {\n                return [...target.ownProperties.keys()]\n                    .map(value => ({ type: AvmValueType.String, value }));\n            },\n            get(key) {\n                let value = vm.tryGetMember(target, key);\n                if (value === undefined) {\n                    const namedChild = sprite.namedChildren.get(key);\n                    if (namedChild !== undefined) {\n                        value = getAvmSprite(vm, namedChild);\n                    }\n                }\n                return value;\n            },\n            set(key, value) {\n                vm.setMember(target, key, value);\n            },\n        });\n        setNativeSlot(external, NativeSlot.SPRITE, sprite);\n        AVM_SPRITE_CACHE.set(sprite, external);\n    }\n    return external;\n}\nconst TARGET_BY_ID = new Map();\nconst TARGET_TO_ID = new Map();\nexport function createAvm1Context() {\n    const vm = new Vm();\n    const nativeHost = new NativeHost();\n    const host = {\n        trace: nativeHost.trace,\n        getTarget(targetId) {\n            const target = TARGET_BY_ID.get(targetId);\n            if (target === undefined) {\n                // TODO: Warn (unknown target)\n                return undefined;\n            }\n            return {\n                stop() {\n                    target.stop();\n                },\n            };\n        },\n    };\n    return { executeActions };\n    function executeActions(target, avm1Bytes) {\n        let targetId = TARGET_TO_ID.get(target);\n        if (targetId === undefined) {\n            targetId = TARGET_TO_ID.size;\n            TARGET_TO_ID.set(target, targetId);\n            TARGET_BY_ID.set(targetId, target);\n        }\n        const external = getAvmSprite(vm, target);\n        const scriptId = vm.createAvm1Script(avm1Bytes, targetId, external);\n        vm.runToCompletion(scriptId, host);\n    }\n}\n","import { TagType } from \"swf-tree/tags/_type\";\nexport var CharacterType;\n(function (CharacterType) {\n    CharacterType[CharacterType[\"Button\"] = 0] = \"Button\";\n    CharacterType[CharacterType[\"Bitmap\"] = 1] = \"Bitmap\";\n    CharacterType[CharacterType[\"MorphShape\"] = 2] = \"MorphShape\";\n    CharacterType[CharacterType[\"Shape\"] = 3] = \"Shape\";\n    CharacterType[CharacterType[\"Sprite\"] = 4] = \"Sprite\";\n})(CharacterType || (CharacterType = {}));\nexport class CharacterDictionary {\n    constructor() {\n        this.characters = new Map();\n    }\n    getCharacterById(characterId) {\n        return this.characters.get(characterId);\n    }\n    setCharacter(characterId, character) {\n        // TODO: Assert unique\n        this.characters.set(characterId, character);\n    }\n}\n// TODO: Avoid creating tags at this point? (create them only if needed when instantiating the button)\nexport function createButtonCharacter(tag) {\n    // Shumway ignores states referencing unknown characters (we just accept them at the moment)\n    const states = {\n        up: [],\n        down: [],\n        over: [],\n        hitTest: [],\n    };\n    for (const buttonRecord of tag.characters) {\n        // TODO: Blend mode and filters\n        const command = {\n            type: TagType.PlaceObject,\n            isUpdate: false,\n            depth: buttonRecord.depth,\n            characterId: buttonRecord.characterId,\n            matrix: buttonRecord.matrix,\n            colorTransform: buttonRecord.colorTransform,\n            filters: buttonRecord.filters,\n            blendMode: buttonRecord.blendMode,\n        };\n        if (buttonRecord.stateUp) {\n            states.up.push(command);\n        }\n        if (buttonRecord.stateDown) {\n            states.down.push(command);\n        }\n        if (buttonRecord.stateOver) {\n            states.over.push(command);\n        }\n        if (buttonRecord.stateHitTest) {\n            states.hitTest.push(command);\n        }\n    }\n    return {\n        type: CharacterType.Button,\n        id: tag.id,\n        trackAsMenu: tag.trackAsMenu,\n        states,\n        actions: tag.actions,\n    };\n}\nexport function createMorphShapeCharacter(tag) {\n    return {\n        type: CharacterType.MorphShape,\n        id: tag.id,\n        definition: tag,\n    };\n}\nexport function createBitmapCharacter(tag) {\n    return {\n        type: CharacterType.Bitmap,\n        id: tag.id,\n        width: tag.width,\n        height: tag.height,\n        mediaType: tag.mediaType,\n        data: tag.data,\n    };\n}\nexport function createShapeCharacter(tag) {\n    return {\n        type: CharacterType.Shape,\n        id: tag.id,\n        definition: tag,\n    };\n}\nexport function createSpriteCharacter(tag) {\n    return {\n        type: CharacterType.Sprite,\n        id: tag.id,\n        frameCount: tag.frameCount,\n        tags: tag.tags,\n    };\n}\n","import { DisplayObjectType } from \"swf-renderer/display/display-object-type\";\nimport { Frame } from \"./frame\";\nimport { InteractiveObject } from \"./interactive-object\";\nimport { DynamicSprite } from \"./sprite\";\nexport var ButtonState;\n(function (ButtonState) {\n    ButtonState[ButtonState[\"Up\"] = 0] = \"Up\";\n    ButtonState[ButtonState[\"Down\"] = 1] = \"Down\";\n    ButtonState[ButtonState[\"Over\"] = 2] = \"Over\";\n    ButtonState[ButtonState[\"HitTest\"] = 3] = \"HitTest\";\n})(ButtonState || (ButtonState = {}));\nfunction instanciateState(dictionary, tags, avm1Ctx) {\n    if (tags.length === 0) {\n        return undefined;\n    }\n    // TODO: Optimize `length === 1` case\n    return new DynamicSprite(dictionary, [new Frame(tags)], avm1Ctx);\n}\nexport class SimpleButton extends InteractiveObject {\n    constructor(character) {\n        super();\n        this.type = DisplayObjectType.Container;\n        this.children = [];\n        this.character = character;\n        this.state = ButtonState.Up;\n    }\n    static fromCharacter(character, dictionary, avm1Ctx) {\n        const button = new SimpleButton(character);\n        button.upState = instanciateState(dictionary, character.states.up, avm1Ctx);\n        button.downState = instanciateState(dictionary, character.states.down, avm1Ctx);\n        button.overState = instanciateState(dictionary, character.states.over, avm1Ctx);\n        button.hitTestState = instanciateState(dictionary, character.states.hitTest, avm1Ctx);\n        return button;\n    }\n    nextFrame(isMainLoop, runScripts) {\n    }\n    visit(visitor) {\n        return visitor.visitSimpleButton(this);\n    }\n}\n","import { Incident } from \"incident\";\nimport { DisplayObjectType } from \"swf-renderer/display/display-object-type\";\nimport { DisplayObjectBase } from \"./display-object-base\";\nexport class DisplayObjectContainer extends DisplayObjectBase {\n    constructor() {\n        super();\n        this.type = DisplayObjectType.Container;\n        this.children = [];\n    }\n    addChild(child) {\n        this.addChildAtIndex(child, this.children.length);\n    }\n    addChildAtIndex(child, index) {\n        index = index | 0; // Integer cast\n        if (index < 0 || index > this.children.length) {\n            throw new Incident(\"angeError\", \"Errors.ParamRangeError\");\n        }\n        this.children.splice(index, 0, child);\n    }\n    // TODO: Rename to `setChildAtDepth`\n    // TODO: Handle collisions (we should replace the child)\n    setChildAtDepth(child, depth) {\n        depth = depth | 0; // Integer cast\n        let index = this.children.length;\n        let deleteCount = 0;\n        for (let i = this.children.length - 1; i >= 0; i--) {\n            const current = this.children[i];\n            if (current.depth === undefined) {\n                // TODO: Throw error, a child MUST have a depth if it is attached to a parent\n                continue;\n            }\n            if (current.depth === depth) {\n                index = i;\n                deleteCount = 1;\n                break;\n            }\n            if (current.depth < depth) {\n                index = i + 1;\n                break;\n            }\n            index = i;\n        }\n        child.depth = depth;\n        this.children.splice(index, deleteCount, child);\n    }\n    // Noop if there's nothing at the provided depth\n    removeChildAtDepth(depth) {\n        // TODO: The linear search could be replaced by a binary search\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children[i];\n            if (child.depth === depth) {\n                child.depth = undefined;\n                this.children.splice(i, 1);\n                break;\n            }\n        }\n    }\n    getChildAtDepth(depth) {\n        for (const child of this.children) {\n            if (child.depth !== undefined && child.depth > depth) {\n                break;\n            }\n            if (child.depth === depth) {\n                return child;\n            }\n        }\n        return undefined;\n    }\n    nextFrame(isMainLoop, runScripts) {\n        for (const child of this.children) {\n            child.nextFrame(isMainLoop, runScripts);\n        }\n    }\n}\n","import { TagType } from \"swf-tree\";\nexport class Frame {\n    // labelName: string;\n    // soundStreamHead: Parser.SoundStream;\n    // soundStreamBlock: Uint8Array;\n    // actionBlocks: ActionBlock[];\n    // initActionBlocks: InitActionBlock[];\n    // exports: SymbolExport[];\n    constructor(tags) {\n        this.tags = tags;\n    }\n}\nexport function* collectFrames(tags) {\n    let curTags = [];\n    for (const tag of tags) {\n        curTags.push(tag);\n        if (tag.type === TagType.ShowFrame) {\n            yield new Frame(curTags);\n            curTags = [];\n        }\n    }\n}\n","import { DisplayObjectType } from \"swf-renderer/display/display-object-type\";\nimport { DisplayObjectBase } from \"./display-object-base\";\nexport class MorphShape extends DisplayObjectBase {\n    constructor(character) {\n        super();\n        this.type = DisplayObjectType.MorphShape;\n        this.character = character;\n        this.definition = character.definition;\n        this.ratio = 0;\n    }\n    nextFrame(isMainLoop, runScripts) {\n    }\n    visit(visitor) {\n        return visitor.visitMorphShape(this);\n    }\n}\n","import { DisplayObjectType } from \"swf-renderer/display/display-object-type\";\nimport { DisplayObjectBase } from \"./display-object-base\";\nexport class Shape extends DisplayObjectBase {\n    constructor(character) {\n        super();\n        this.type = DisplayObjectType.Shape;\n        this.character = character;\n        this.definition = character.definition;\n    }\n    nextFrame(isMainLoop, runScripts) { }\n    visit(visitor) {\n        return visitor.visitShape(this);\n    }\n}\n","import { DisplayObjectBase } from \"./display-object-base\";\nexport class InteractiveObject extends DisplayObjectBase {\n}\n","import { TagType } from \"swf-tree/tags/_type\";\nimport { createAvm1Context } from \"../avm/avm\";\nimport { CharacterDictionary, CharacterType, createBitmapCharacter, createButtonCharacter, createMorphShapeCharacter, createShapeCharacter, createSpriteCharacter, } from \"./character\";\nimport { DisplayObjectContainer } from \"./display-object-container\";\nimport { collectFrames } from \"./frame\";\nimport { MorphShape } from \"./morph-shape\";\nimport { Shape } from \"./shape\";\nimport { SimpleButton } from \"./simple-button\";\nexport class AbstractSprite extends DisplayObjectContainer {\n    constructor(dictionary, character, avm1Ctx) {\n        super();\n        this.dictionary = dictionary;\n        this.character = character;\n        this.avm1Ctx = avm1Ctx;\n        this.namedChildren = new Map();\n        this.frameLabels = new Map();\n        this.stopped = false;\n    }\n    // processTags(tags: SwfTag[], backward: boolean): void {\n    //   if (backward) {\n    //     throw new Incident(\"NotImplemented\", \"Sprite#processTags(backwards = true)\");\n    //   }\n    //   for (const tag of tags) {\n    //     switch (tag.type) {\n    //       case SwfTagType.PlaceObject:\n    //         this.processPlaceObjectTag(tag);\n    //         break;\n    //       default:\n    //         break;\n    //     }\n    //   }\n    // }\n    nextFrame(isMainLoop, runScripts) {\n        console.warn(\"NotImplemented: Sprite#nextFrame\");\n    }\n    gotoAndPlay(frame) {\n        this.stopped = false;\n        if (typeof frame === \"string\") {\n            const frameIndex = this.frameLabels.get(frame);\n            if (frameIndex === undefined) {\n                throw new Error(`NotImplemented: UnknownFrameLabel: ${frame}`);\n            }\n            // TODO: Clean this up!!!\n            this.currentFrameIndex = frameIndex - 1; // -1 because `nextFrame` starts with an increment\n        }\n        else {\n            console.log(\"NotImplemented: Sprite#gotoAndPlay on non-string frame\");\n        }\n    }\n    stop() {\n        this.stopped = true;\n    }\n    visit(visitor) {\n        return visitor.visitSprite(this);\n    }\n    applyTag(tag) {\n        switch (tag.type) {\n            case TagType.DefineButton:\n                this.dictionary.setCharacter(tag.id, createButtonCharacter(tag));\n                break;\n            case TagType.DefineMorphShape:\n                this.dictionary.setCharacter(tag.id, createMorphShapeCharacter(tag));\n                break;\n            case TagType.DefineBitmap:\n                this.dictionary.setCharacter(tag.id, createBitmapCharacter(tag));\n                break;\n            case TagType.DoAction:\n                this.execDoAction(tag);\n                break;\n            case TagType.DefineShape:\n                this.dictionary.setCharacter(tag.id, createShapeCharacter(tag));\n                break;\n            case TagType.DefineSprite:\n                this.dictionary.setCharacter(tag.id, createSpriteCharacter(tag));\n                break;\n            case TagType.FrameLabel:\n                // Ignore during execution: Frame labels are probed while the sprite is loaded\n                break;\n            case TagType.PlaceObject:\n                this.execPlaceObject(tag);\n                break;\n            case TagType.RemoveObject:\n                this.execRemoveObject(tag);\n                break;\n            case TagType.SetBackgroundColor:\n            case TagType.FileAttributes:\n            case TagType.Metadata:\n            case TagType.ShowFrame:\n                break;\n            default:\n                console.warn(`Unsupported tag type (${TagType[tag.type]})`);\n                break;\n        }\n    }\n    execDoAction(tag) {\n        // TODO: Pass a thisArg/context bound to this sprite.\n        this.avm1Ctx.executeActions(this /* thisArg */, tag.actions);\n    }\n    execPlaceObject(tag) {\n        // console.log(tag);\n        let displayObject;\n        const old = this.getChildAtDepth(tag.depth);\n        if (tag.isUpdate) {\n            if (old === undefined) {\n                console.warn(\"PlaceObject: update=true but old is undefined\");\n                return;\n            }\n            if (tag.characterId === undefined) {\n                displayObject = old; // TODO: Remove type assertion\n            }\n            else {\n                if (tag.characterId === old.character.id) {\n                    // TODO: Check how to handle update with a defined character id matching the old character id\n                    //       (maybe it's a state reset?)\n                    displayObject = old; // TODO: Remove type assertion\n                }\n                else {\n                    const character = this.dictionary.getCharacterById(tag.characterId);\n                    if (character === undefined) {\n                        console.warn(`CharacterIdNotFound: ${tag.characterId}`);\n                        return;\n                    }\n                    switch (character.type) {\n                        case CharacterType.Button:\n                            displayObject = SimpleButton.fromCharacter(character, this.dictionary, this.avm1Ctx);\n                            break;\n                        case CharacterType.MorphShape:\n                            displayObject = new MorphShape(character);\n                            break;\n                        case CharacterType.Shape:\n                            displayObject = new Shape(character);\n                            break;\n                        case CharacterType.Sprite:\n                            displayObject = ChildSprite.fromCharacter(character, this.dictionary, this.avm1Ctx);\n                            break;\n                        default:\n                            console.warn(`UnknownCharacterType: ${character.type}`);\n                            return;\n                    }\n                }\n            }\n            if (tag.ratio !== undefined) {\n                displayObject.ratio = tag.ratio / (1 << 16);\n            }\n            if (tag.matrix !== undefined) {\n                displayObject.matrix = tag.matrix;\n            }\n            if (displayObject !== old) {\n                this.setChildAtDepth(displayObject, tag.depth);\n            }\n        }\n        else {\n            if (tag.characterId === undefined) {\n                console.warn(\"PlaceObject: update=false, characterId=undefined\");\n                return;\n            }\n            if (old !== undefined && tag.characterId === old.character.id) {\n                // console.log(\"Collision\");\n                return;\n            }\n            const character = this.dictionary.getCharacterById(tag.characterId);\n            if (character === undefined) {\n                console.warn(`CharacterIdNotFound: ${tag.characterId}`);\n                return;\n            }\n            switch (character.type) {\n                case CharacterType.Button:\n                    displayObject = SimpleButton.fromCharacter(character, this.dictionary, this.avm1Ctx);\n                    break;\n                case CharacterType.MorphShape:\n                    displayObject = new MorphShape(character);\n                    break;\n                case CharacterType.Shape:\n                    displayObject = new Shape(character);\n                    break;\n                case CharacterType.Sprite:\n                    displayObject = ChildSprite.fromCharacter(character, this.dictionary, this.avm1Ctx);\n                    break;\n                default:\n                    console.warn(`UnknownCharacterType: ${character.type}`);\n                    return;\n            }\n            if (tag.ratio !== undefined) {\n                displayObject.ratio = tag.ratio / (1 << 16);\n            }\n            if (tag.matrix !== undefined) {\n                displayObject.matrix = tag.matrix;\n            }\n            this.setChildAtDepth(displayObject, tag.depth);\n        }\n        if (tag.name !== undefined) {\n            this.namedChildren.set(tag.name, displayObject); // TODO: Remove type cast\n        }\n    }\n    execRemoveObject(tag) {\n        // TODO: How to handle named sprites?\n        this.removeChildAtDepth(tag.depth);\n    }\n}\n/**\n * Corresponds to the tags at the root of SWF file\n */\nexport class RootSprite extends AbstractSprite {\n    constructor(movie) {\n        const dictionary = new CharacterDictionary();\n        const avm1Ctx = createAvm1Context();\n        super(dictionary, { root: true }, avm1Ctx);\n        this.frameCount = movie.header.frameCount;\n        this.frames = [];\n        this.currentFrameIndex = -1;\n        for (const frame of collectFrames(movie.tags)) {\n            this.addFrame(frame);\n        }\n    }\n    execFrameLabel(tag) {\n        this.frameLabels.set(tag.name, this.currentFrameIndex);\n    }\n    nextFrame(isMainLoop, runScripts) {\n        if (!this.stopped) {\n            this.currentFrameIndex++;\n            if (this.currentFrameIndex >= this.frameCount) {\n                this.currentFrameIndex = 0;\n            }\n            if (this.currentFrameIndex >= this.frames.length) {\n                return;\n            }\n            const frame = this.frames[this.currentFrameIndex];\n            for (const tag of frame.tags) {\n                this.applyTag(tag);\n            }\n        }\n        for (const child of this.children) {\n            child.nextFrame(isMainLoop, runScripts);\n        }\n    }\n    addFrame(frame) {\n        const frameIndex = this.frames.length;\n        this.frames.push(frame);\n        for (const tag of frame.tags) {\n            if (tag.type === TagType.FrameLabel) {\n                this.frameLabels.set(tag.name, frameIndex);\n            }\n        }\n    }\n}\n/**\n * Instance of a sprite defined with the defineSprite tag\n */\nexport class ChildSprite extends AbstractSprite {\n    constructor(dictionary, frames, character, avm1Ctx) {\n        super(dictionary, { root: false, id: character.id }, avm1Ctx);\n        this.frameCount = frames.length;\n        this.frames = frames;\n        for (const [frameIndex, frame] of this.frames.entries()) {\n            for (const tag of frame.tags) {\n                if (tag.type === TagType.FrameLabel) {\n                    this.frameLabels.set(tag.name, frameIndex);\n                }\n            }\n        }\n        this.currentFrameIndex = -1;\n    }\n    static fromCharacter(character, dictionary, avm1Ctx) {\n        const frames = [...collectFrames(character.tags)];\n        return new ChildSprite(dictionary, frames, character, avm1Ctx);\n    }\n    nextFrame(isMainLoop, runScripts) {\n        if (!this.stopped) {\n            this.currentFrameIndex++;\n            if (this.currentFrameIndex >= this.frameCount) {\n                this.currentFrameIndex = 0;\n            }\n            if (this.currentFrameIndex >= this.frames.length) {\n                return;\n            }\n            const frame = this.frames[this.currentFrameIndex];\n            for (const tag of frame.tags) {\n                this.applyTag(tag);\n            }\n        }\n        for (const child of this.children) {\n            child.nextFrame(isMainLoop, runScripts);\n        }\n    }\n}\n/**\n * Instance of a sprite created dynamically (example: Action Script or button wrapper)\n */\nexport class DynamicSprite extends AbstractSprite {\n    constructor(dictionary, frames, avm1Ctx) {\n        super(dictionary, { root: false }, avm1Ctx);\n        this.frameCount = frames.length;\n        this.frames = frames;\n        this.currentFrameIndex = -1;\n    }\n    execFrameLabel(tag) {\n        this.frameLabels.set(tag.name, this.currentFrameIndex);\n    }\n    nextFrame(isMainLoop, runScripts) {\n        if (this.stopped) {\n            return;\n        }\n        this.currentFrameIndex++;\n        if (this.currentFrameIndex >= this.frameCount) {\n            this.currentFrameIndex = 0;\n        }\n        if (this.currentFrameIndex >= this.frames.length) {\n            return;\n        }\n        const frame = this.frames[this.currentFrameIndex];\n        for (const tag of frame.tags) {\n            this.applyTag(tag);\n        }\n    }\n}\n","import { DisplayObjectContainer } from \"./display-object-container\";\n// TODO: Get rid of these default values (they should never be needed)\nconst DEFAULT_BACKGROUND_COLOR = Object.freeze({ r: 255, g: 255, b: 255, a: 255 });\n/**\n * A stage represent a drawing area. It holds the root of its display tree.\n */\nexport class Stage extends DisplayObjectContainer {\n    constructor(frameSizeInTwips) {\n        super();\n        this.backgroundColor = DEFAULT_BACKGROUND_COLOR;\n        this.width = (frameSizeInTwips.xMax.valueOf() - frameSizeInTwips.xMin.valueOf()) / 20;\n        this.height = (frameSizeInTwips.yMax.valueOf() - frameSizeInTwips.yMin.valueOf()) / 20;\n    }\n    visit(visitor) {\n        return visitor.visitStage(this);\n    }\n}\n// /**\n//  * Primary stage created for the root SWF file.\n//  */\n// export class RootStage extends Stage {\n//   movie: MovieClip;\n//   loader: SwfLoader;\n//\n//   constructor(header: Header, loader: SwfLoader) {\n//     super(header.frameSize);\n//     this.movie = new MovieClip([]);\n//   }\n// }\n","function createSystemClock() {\n    const handles = new WeakMap();\n    return Object.freeze({\n        getTime: Date.now,\n        setTimeout(timeout, handler) {\n            const nativeHandle = setTimeout(handler, timeout);\n            const handle = new Object(Symbol());\n            handles.set(handle, nativeHandle);\n            return handle;\n        },\n        clearTimeout(handle) {\n            const nativeHandle = handles.get(handle);\n            if (nativeHandle !== undefined) {\n                // TODO: Better type with cross-platform  support\n                clearTimeout(nativeHandle);\n            }\n        },\n    });\n}\nexport const SYSTEM_CLOCK = createSystemClock();\n/**\n * Represents a node in a clock tree.\n */\nexport class ChildClock {\n    /**\n     * @param parent Parent clock\n     * @param initialEpoch Time in the parent clock corresponding to the zero time in the child clock.\n     *                     Default is parent.getTime().\n     */\n    constructor(parent, initialEpoch) {\n        this.parent = parent;\n        this.epoch = initialEpoch !== undefined ? initialEpoch : parent.getTime();\n        this.pausedAt = undefined;\n        this.tasks = new Map();\n    }\n    isPaused() {\n        return this.pausedAt !== undefined;\n    }\n    /**\n     * @return Time in milliseconds\n     */\n    getTime() {\n        return this.pausedAt !== undefined ? this.pausedAt : this.parent.getTime() - this.epoch;\n    }\n    pause() {\n        if (this.pausedAt === undefined) {\n            this.pausedAt = this.parent.getTime();\n            for (const task of this.tasks.values()) {\n                if (task.handle !== undefined) {\n                    this.parent.clearTimeout(task.handle);\n                    task.handle = undefined;\n                }\n            }\n        }\n    }\n    resume() {\n        if (this.pausedAt !== undefined) {\n            this.epoch += this.parent.getTime() - this.pausedAt;\n            this.pausedAt = undefined;\n            for (const task of this.tasks.values()) {\n                task.handle = this.parent.setTimeout(task.targetTime - this.getTime(), task.handler);\n            }\n        }\n    }\n    setTimeout(timeout, handler) {\n        const outerHandle = new Object(Symbol());\n        const task = {\n            targetTime: this.getTime() + timeout,\n            handler: () => {\n                this.tasks.delete(outerHandle);\n                handler();\n            },\n            handle: undefined,\n        };\n        this.tasks.set(outerHandle, task);\n        if (this.pausedAt === undefined) {\n            task.handle = this.parent.setTimeout(timeout, task.handler);\n        }\n        return outerHandle;\n    }\n    clearTimeout(handle) {\n        const task = this.tasks.get(handle);\n        if (task !== undefined) {\n            if (task.handle !== undefined) {\n                this.parent.clearTimeout(task.handle);\n            }\n            this.tasks.delete(handle);\n        }\n    }\n}\n/**\n * Create a new root clock based off real time.\n * Its epoch defaults to `now`. You can provide you own epoch relative to the UNIX epoch (expressed in milliseconds).\n *\n * @param {number} epoch\n * @return {Clock}\n */\nexport function createClock(epoch = SYSTEM_CLOCK.getTime()) {\n    return new ChildClock(SYSTEM_CLOCK, epoch);\n}\n","import { Incident } from \"incident\";\nimport { TagType } from \"swf-tree\";\nimport { LoaderEvent, loadSwf } from \"./display/loader\";\nimport { RootSprite } from \"./display/sprite\";\nimport { Stage } from \"./display/stage\";\nimport { ChildClock } from \"./services/clock\";\n/**\n * The first tick is after `1000 / frameRate` ms.\n *\n * @param clock Clock used to control the loop.\n * @param frameRate Ticks per second\n * @param onTick\n * @return {Loop}\n */\nfunction startLoop(clock, frameRate, onTick) {\n    const startTime = clock.getTime();\n    let oldTime = startTime;\n    let shift = 0;\n    let nextTickCount = 0;\n    let handle = undefined;\n    function handleTick() {\n        onTick();\n        scheduleNextTick();\n    }\n    function scheduleNextTick() {\n        const curTime = clock.getTime();\n        if (nextTickCount > 0 && curTime === oldTime) {\n            // tslint:disable-next-line:max-line-length\n            const infoUri = \"https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp#Reduced_time_precision\";\n            console.warn(`\\`curTime === oldTime\\`, possible reduced time precision, see ${infoUri}`);\n        }\n        oldTime = curTime;\n        // console.log(clock.getTime());\n        nextTickCount++;\n        const targetTime = startTime + shift + (1000 * nextTickCount / frameRate);\n        let timeout = targetTime - clock.getTime();\n        if (timeout < 0) {\n            shift += -timeout;\n            console.warn(`Unable to maintain frameRate (missed by ${-timeout}ms)`);\n            timeout = 0;\n        }\n        handle = clock.setTimeout(timeout, handleTick);\n    }\n    scheduleNextTick();\n    function destroy() {\n        if (handle !== undefined) {\n            clock.clearTimeout(handle);\n            handle = undefined;\n        }\n    }\n    return { destroy };\n}\nvar PlayerState;\n(function (PlayerState) {\n    PlayerState[PlayerState[\"AWAITING_HEADER\"] = 0] = \"AWAITING_HEADER\";\n    PlayerState[PlayerState[\"RUNNING\"] = 1] = \"RUNNING\";\n    PlayerState[PlayerState[\"DESTROYED\"] = 2] = \"DESTROYED\";\n})(PlayerState || (PlayerState = {}));\nclass Player {\n    constructor(options) {\n        this.movieUrl = options.movieUrl;\n        this.clock = new ChildClock(options.clock);\n        this.renderer = options.renderer;\n        this.rootLoader = undefined;\n        this.stage = undefined;\n        // this.state = PlayerState.AWAITING_HEADER;\n        // // this.avm = new Avm();\n        // this.stage = new Stage();\n    }\n    pause() {\n        this.clock.pause();\n    }\n    resume() {\n        this.clock.resume();\n    }\n    destroy() {\n        if (this.mainLoop !== undefined) {\n            this.mainLoop.destroy();\n        }\n        // this.state = PlayerState.DESTROYED;\n    }\n    start() {\n        if (this.rootLoader !== undefined) {\n            throw new Incident(\"Duplicate `start` call\");\n        }\n        this.rootLoader = loadSwf(this.movieUrl);\n        // this.rootLoader.events.once(LoaderEvent.SwfHeader, header => this.handleSwfHeaderLoaded(header));\n        this.rootLoader.events.once(LoaderEvent.Complete, movie => this.handleSwfLoaded(movie));\n    }\n    // private handleSwfHeaderLoaded(header: SwfHeader): void {\n    //   if (this.rootLoader === undefined || this.stage !== undefined) {\n    //     console.error(new Incident(\"Unexpected state at `handleSwfHeaderLoaded`\"));\n    //     return;\n    //   }\n    //   this.stage = new RootStage(header, this.rootLoader);\n    //\n    //   this.mainLoop = startLoop(this.clock, header.frameRate.valueOf(), () => this.onTick());\n    // }\n    async handleSwfLoaded(movie) {\n        if (this.rootLoader === undefined || this.stage !== undefined) {\n            console.error(new Incident(\"Unexpected state at `handleSwfHeaderLoaded`\"));\n            return;\n        }\n        this.stage = new Stage(movie.header.frameSize);\n        for (const tag of movie.tags) {\n            if (tag.type === TagType.DefineBitmap) {\n                try {\n                    await this.renderer.addBitmap(tag);\n                }\n                catch (err) {\n                    console.error(err);\n                }\n            }\n        }\n        const rootSprite = new RootSprite(movie);\n        this.stage.addChild(rootSprite);\n        this.mainLoop = startLoop(this.clock, movie.header.frameRate.valueOf(), () => this.onTick());\n    }\n    onTick() {\n        const stage = this.stage;\n        stage.nextFrame(true, false); // TODO: Run scripts\n        this.renderer.render(stage);\n    }\n}\nexport function startPlayer(options) {\n    const player = new Player(options);\n    player.start();\n    return player;\n}\n","import elementResizeDetector from \"element-resize-detector\";\nimport { Incident } from \"incident\";\nimport { CanvasRenderer } from \"swf-renderer/renderers/canvas-renderer\";\nimport { startPlayer } from \"../lib/player\";\nimport { SYSTEM_CLOCK } from \"../lib/services/clock\";\nfunction getContentDimensions(element) {\n    const style = getComputedStyle(element);\n    // `parseFloat` is used because the values are strings (suffixed by `px`).\n    const paddingX = parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    const paddingY = parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n    const borderX = parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n    const borderY = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n    return {\n        width: element.offsetWidth - paddingX - borderX,\n        height: element.offsetHeight - paddingY - borderY,\n    };\n}\nfunction resetStyle(element) {\n    element.style.width = \"0\";\n    element.style.height = \"0\";\n    element.style.padding = \"0\";\n    element.style.margin = \"0\";\n    element.style.border = \"none\";\n}\nexport class DomuPlayer {\n    get containerResizeDetector() {\n        if (this._containerResizeDetector === undefined) {\n            this._containerResizeDetector = elementResizeDetector({ strategy: \"scroll\" });\n        }\n        return this._containerResizeDetector;\n    }\n    get containerResizeListener() {\n        if (this._containerResizeListener === undefined) {\n            this._containerResizeListener = () => this.handleViewportResize(getContentDimensions(this.container));\n        }\n        return this._containerResizeListener;\n    }\n    /**\n     * Viewport size: match containerContent or fixed dimensions\n     */\n    get viewportSize() {\n        return this._viewportSize;\n    }\n    set viewportSize(value) {\n        if (value === \"containerContent\") {\n            if (this._viewportSize === \"containerContent\") {\n                return;\n            }\n            this._viewportSize = \"containerContent\";\n            this.containerResizeDetector.listenTo(this.container, this.containerResizeListener);\n            this.handleViewportResize(getContentDimensions(this.container));\n        }\n        else {\n            if (this._viewportSize === \"containerContent\") {\n                this.containerResizeDetector.removeListener(this.container, this.containerResizeListener);\n            }\n            const newSize = Object.freeze({ width: value.width, height: value.height });\n            this._viewportSize = newSize;\n            this.handleViewportResize(newSize);\n        }\n    }\n    constructor(options) {\n        const container = options.container;\n        if (Reflect.get(container, \"domuPlayer\") !== undefined) {\n            throw new Incident(\"DuplicatePlayer\", \"Cannot acquire ownership of container: already owned\");\n        }\n        if (container.childNodes.length !== 0) {\n            throw new Incident(\"NonEmptyContainer\", \"The container used for the domu player must be empty (`container.childNodes.length === 0`)\");\n        }\n        // Signal exclusive ownership of the container\n        Reflect.set(container, \"domuPlayer\", this);\n        try {\n            this.container = container;\n            this.root = document.createElement(\"span\");\n            this.canvas = document.createElement(\"canvas\");\n            resetStyle(this.root);\n            resetStyle(this.canvas);\n            this.root.style.position = \"relative\";\n            this.root.style.cssFloat = \"left\";\n            this.canvas.style.position = \"absolute\";\n            this.canvas.style.left = \"0\";\n            this.canvas.style.top = \"0\";\n            this.canvas.width = 0;\n            this.canvas.height = 0;\n            this.root.appendChild(this.canvas);\n            container.appendChild(this.root);\n            // Also updates the canvas size\n            this.viewportSize = options.viewportSize !== undefined ? options.viewportSize : \"containerContent\";\n            const context = this.canvas.getContext(\"2d\");\n            if (context === null) {\n                throw new Incident(\"CanvasContextAcquisition\", \"Unable to acquire canvas context\");\n            }\n            this.renderer = new CanvasRenderer(context);\n            this.clock = options.clock !== undefined ? options.clock : SYSTEM_CLOCK;\n            this.player = undefined;\n        }\n        catch (err) {\n            Reflect.deleteProperty(container, \"domuPlayer\");\n            throw err;\n        }\n    }\n    setMovieUrl(movieUrl) {\n        if (this.player !== undefined) {\n            this.player.destroy();\n        }\n        this.player = startPlayer({\n            movieUrl,\n            clock: this.clock,\n            renderer: this.renderer,\n        });\n    }\n    /**\n     * Called when the size of the viewport _may_ have been updated.\n     */\n    handleViewportResize(newSize) {\n        const { width, height } = newSize;\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.canvas.style.width = `${width}px`;\n        this.canvas.style.height = `${height}px`;\n    }\n}\nexport function createDomuPlayer(options) {\n    return new DomuPlayer(options);\n}\n","import { createDomuPlayer } from \"./domu-player\";\n// Default size of an <embed> element (Firefox 59)\nconst DEFAULT_WIDTH = 240;\nconst DEFAULT_HEIGHT = 200;\n// https://helpx.adobe.com/flash/kb/flash-object-embed-tag-attributes.html\nexport class XSwfElement extends HTMLElement {\n    get name() {\n        return this.getAttribute(\"name\") || \"\";\n    }\n    set name(value) {\n        this.setAttribute(\"name\", value);\n    }\n    get src() {\n        return this.getAttribute(\"src\") || \"\";\n    }\n    set src(value) {\n        this.setAttribute(\"src\", value);\n    }\n    get width() {\n        return this.getAttribute(\"width\") || \"\";\n    }\n    set width(value) {\n        this.setAttribute(\"width\", value);\n    }\n    get height() {\n        return this.getAttribute(\"height\") || \"\";\n    }\n    set height(value) {\n        this.setAttribute(\"height\", value);\n    }\n    constructor() {\n        super();\n        const size = this.getSize();\n        this.domuPlayer = createDomuPlayer({ container: this, viewportSize: size });\n        this.style.display = \"inline-block\";\n        this.style.width = `${size.width}px`;\n        this.style.height = `${size.height}px`;\n        const src = this.getAttribute(\"src\");\n        if (src === null) {\n            return;\n        }\n        this.domuPlayer.setMovieUrl(src);\n    }\n    getSize() {\n        const widthAttr = this.getAttribute(\"width\");\n        let width = widthAttr === null ? DEFAULT_WIDTH : parseInt(widthAttr, 10);\n        if (isNaN(width)) {\n            width = DEFAULT_WIDTH;\n        }\n        const heightAttr = this.getAttribute(\"height\");\n        let height = heightAttr === null ? DEFAULT_HEIGHT : parseInt(heightAttr, 10);\n        if (isNaN(width)) {\n            height = DEFAULT_HEIGHT;\n        }\n        return { width, height };\n    }\n    static get observedAttributes() {\n        return [\n            \"width\",\n            \"height\",\n            \"src\",\n            // \"pluginspage\",\n            \"src\",\n            \"id\",\n            \"play\",\n            \"loop\",\n            \"menu\",\n            \"quality\",\n            \"scale\",\n            \"align\",\n            \"salign\",\n            \"wmode\",\n            \"bgcolor\",\n            \"base\",\n            \"allowFullScreen\",\n            \"fullScreenAspectRatio\",\n            \"flashvars\",\n            \"browserzoom\",\n        ];\n    }\n}\n","/**\n * Polyfill to ensure that the `asyncIterator` symbol is defined\n */\nexport function asyncIterator() {\n    if (!Symbol.asyncIterator) {\n        Symbol.asyncIterator = Symbol.for(\"Symbol.asyncIterator\");\n    }\n}\n/**\n * Applies all the polyfills\n */\nexport function all() {\n    asyncIterator();\n}\n","import { Incident } from \"incident\";\nimport { all as polyfillAll } from \"./browser/polyfills\";\nimport { createDomuPlayer } from \"./browser/domu-player\";\nimport { XSwfElement } from \"./browser/x-swf-elements\";\npolyfillAll();\ntry {\n    customElements.define(\"x-swf\", XSwfElement);\n}\ncatch (err) {\n    console.error(err);\n}\nconst containers = document.getElementsByClassName(\"domu-player\");\nconst containerCount = containers.length;\nfor (let i = 0; i < containerCount; i++) {\n    const container = containers[i];\n    if (!(container instanceof HTMLElement)) {\n        throw new Incident(\"Expected container to be an `HTMLElement`\");\n    }\n    const src = container.dataset.src;\n    if (src === undefined) {\n        throw new Incident(\"Missing `data-src` attribute\");\n    }\n    const domuPlayer = createDomuPlayer({ container });\n    domuPlayer.setMovieUrl(src);\n}\n"],"sourceRoot":""}