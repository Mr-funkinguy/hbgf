/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 128);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
var CaseStyle;
(function (CaseStyle) {
    CaseStyle[CaseStyle["CamelCase"] = 0] = "CamelCase";
    CaseStyle[CaseStyle["PascalCase"] = 1] = "PascalCase";
    CaseStyle[CaseStyle["SnakeCase"] = 2] = "SnakeCase";
    CaseStyle[CaseStyle["ScreamingSnakeCase"] = 3] = "ScreamingSnakeCase";
    CaseStyle[CaseStyle["KebabCase"] = 4] = "KebabCase";
})(CaseStyle = exports.CaseStyle || (exports.CaseStyle = {}));
function detectCaseStyle(identifier) {
    if (/^[A-Z]+[0-9]*(?:_[A-Z]+[0-9]*)*$/.test(identifier)) {
        return CaseStyle.ScreamingSnakeCase;
    }
    else if (/^[a-z]+[0-9]*(?:_[a-z]+[0-9]*)+$/.test(identifier)) {
        return CaseStyle.SnakeCase;
    }
    else if (/^[a-z]+[0-9]*(?:-[a-z]+[0-9]*)+$/.test(identifier)) {
        return CaseStyle.KebabCase;
    }
    else if (/^[A-Z]/.test(identifier)) {
        return CaseStyle.PascalCase;
    }
    else {
        return CaseStyle.CamelCase;
    }
}
exports.detectCaseStyle = detectCaseStyle;
function split(caseStyle, identifier) {
    switch (caseStyle) {
        case CaseStyle.ScreamingSnakeCase:
            return identifier.toLowerCase().split("_");
        case CaseStyle.SnakeCase:
            return identifier.toLowerCase().split("_");
        case CaseStyle.KebabCase:
            return identifier.toLowerCase().split("-");
        case CaseStyle.CamelCase:
            return identifier.split(/(?=[A-Z])/).map((part) => part.toLowerCase());
        case CaseStyle.PascalCase:
            return identifier.split(/(?=[A-Z])/).map((part) => part.toLowerCase());
        default:
            throw new incident_1.Incident(`IncompleteSwitch: Received unexpected variant for caseStyle: ${caseStyle}`);
    }
}
exports.split = split;
function join(caseStyle, parts) {
    switch (caseStyle) {
        case CaseStyle.ScreamingSnakeCase:
            return parts.join("_").toUpperCase();
        case CaseStyle.SnakeCase:
            return parts.join("_").toLowerCase();
        case CaseStyle.KebabCase:
            return parts.join("-").toLowerCase();
        case CaseStyle.CamelCase:
            return parts.map((part, index) => {
                const upperLength = index === 0 ? 0 : 1;
                return part.substr(0, upperLength).toUpperCase() + part.substring(upperLength).toLowerCase();
            }).join("");
        case CaseStyle.PascalCase:
            return parts.map((part) => {
                return part.substr(0, 1).toUpperCase() + part.substring(1).toLowerCase();
            }).join("");
        default:
            throw new incident_1.Incident(`IncompleteSwitch: Received unexpected variant for caseStyle: ${caseStyle}`);
    }
}
exports.join = join;
function rename(identifier, from, to) {
    if (to === undefined) {
        to = from;
        from = detectCaseStyle(identifier);
    }
    return join(to, split(from, identifier));
}
exports.rename = rename;
function renameMap(keys, to) {
    const result = new Map();
    const outKeys = new Set();
    for (const key of keys) {
        const renamed = to === undefined ? key : rename(key, to);
        result.set(renamed, key);
        if (outKeys.has(renamed)) {
            throw new incident_1.Incident("NonBijectiveKeyRename", "Some keys are the same after renaming");
        }
        outKeys.add(renamed);
    }
    return result;
}
exports.renameMap = renameMap;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const lazy_properties_1 = __webpack_require__(16);
const case_style_1 = __webpack_require__(0);
const invalid_document_1 = __webpack_require__(147);
const invalid_type_1 = __webpack_require__(21);
const lazy_options_1 = __webpack_require__(17);
const not_implemented_1 = __webpack_require__(29);
const read_visitor_1 = __webpack_require__(18);
exports.name = "document";
// We use an `any` cast because of the `properties` property.
// tslint:disable-next-line:variable-name
exports.DocumentType = class {
    constructor(options) {
        this.name = exports.name;
        // TODO: Remove once TS 2.7 is better supported by editors
        this.properties = undefined;
        this._options = options;
        if (typeof options !== "function") {
            this._applyOptions();
        }
        else {
            lazy_properties_1.lazyProperties(this, this._applyOptions, ["noExtraKeys", "properties", "changeCase", "rename"]);
        }
    }
    /**
     * Map from serialized keys to the document keys
     */
    get outKeys() {
        if (this._outKeys === undefined) {
            this._outKeys = new Map();
            for (const key of Object.keys(this.properties)) {
                this._outKeys.set(this.getOutKey(key), key);
            }
        }
        return this._outKeys;
    }
    static fromJSON(options) {
        throw not_implemented_1.createNotImplementedError("DocumentType.fromJSON");
    }
    toJSON() {
        throw not_implemented_1.createNotImplementedError("DocumentType#toJSON");
    }
    getOutKey(key) {
        const descriptor = this.properties[key];
        if (descriptor.rename !== undefined) {
            return descriptor.rename;
        }
        else if (descriptor.changeCase !== undefined) {
            return case_style_1.rename(key, descriptor.changeCase);
        }
        if (this.rename !== undefined && this.rename[key] !== undefined) {
            return this.rename[key];
        }
        else if (this.changeCase !== undefined) {
            return case_style_1.rename(key, this.changeCase);
        }
        return key;
    }
    // TODO: Dynamically add with prototype?
    read(reader, raw) {
        return reader.readDocument(raw, read_visitor_1.readVisitor({
            fromMap: (input, keyReader, valueReader) => {
                const extra = this.noExtraKeys ? new Set(Object.keys(input)) : undefined;
                const missing = new Set();
                const invalid = new Map();
                const result = {}; // Object.create(null);
                for (const [outKey, key] of this.outKeys) {
                    if (extra !== undefined) {
                        extra.delete(outKey);
                    }
                    const descriptor = this.properties[key];
                    const rawValue = input.get(outKey); // TODO: Improve this...
                    if (rawValue === undefined) {
                        if (descriptor.optional) {
                            result[key] = undefined;
                        }
                        else {
                            missing.add(key);
                        }
                        continue;
                    }
                    try {
                        result[key] = descriptor.type.read(valueReader, rawValue);
                    }
                    catch (err) {
                        invalid.set(key, err);
                    }
                }
                if (extra !== undefined && extra.size > 0 || missing.size > 0 || invalid.size > 0) {
                    throw invalid_document_1.createInvalidDocumentError({ extra, missing, invalid });
                }
                return result;
            },
        }));
    }
    // TODO: Dynamically add with prototype?
    write(writer, value) {
        const outKeys = new Map(this.outKeys);
        for (const [outKey, jskey] of outKeys) {
            if (value[jskey] === undefined) {
                outKeys.delete(outKey);
            }
        }
        return writer.writeDocument(outKeys.keys(), (outKey, fieldWriter) => {
            const jsKey = this.outKeys.get(outKey);
            const descriptor = this.properties[jsKey];
            if (descriptor.type.write === undefined) {
                throw new incident_1.Incident("NotWritable", { type: descriptor.type });
            }
            return descriptor.type.write(fieldWriter, value[jsKey]);
        });
    }
    testError(val) {
        if (typeof val !== "object" || val === null) {
            return invalid_type_1.createInvalidTypeError("object", val);
        }
        const extra = this.noExtraKeys ? new Set(Object.keys(val)) : undefined;
        const missing = new Set();
        const invalid = new Map();
        for (const key in this.properties) {
            if (extra !== undefined) {
                extra.delete(key);
            }
            const descriptor = this.properties[key];
            const propertyValue = val[key];
            if (propertyValue === undefined) {
                if (!descriptor.optional) {
                    missing.add(key);
                }
                continue;
            }
            const error = descriptor.type.testError(propertyValue);
            if (error !== undefined) {
                invalid.set(key, error);
            }
        }
        if (extra !== undefined && extra.size > 0 || missing.size > 0 || invalid.size > 0) {
            return invalid_document_1.createInvalidDocumentError({ extra, missing, invalid });
        }
        return undefined;
    }
    test(val) {
        if (typeof val !== "object" || val === null) {
            return false;
        }
        const extra = this.noExtraKeys ? new Set(Object.keys(val)) : undefined;
        for (const key in this.properties) {
            if (extra !== undefined) {
                extra.delete(key);
            }
            const descriptor = this.properties[key];
            const propertyValue = val[key];
            if (propertyValue === undefined) {
                if (!descriptor.optional) {
                    return false;
                }
            }
            else if (!descriptor.type.test(propertyValue)) {
                return false;
            }
        }
        return extra === undefined || extra.size === 0;
    }
    equals(val1, val2) {
        for (const key in this.properties) {
            const descriptor = this.properties[key];
            if (!descriptor.optional) {
                if (!descriptor.type.equals(val1[key], val2[key])) {
                    return false;
                }
                continue;
            }
            if (val1[key] === undefined && val2[key] === undefined) {
                continue;
            }
            if (val1[key] === undefined || val2[key] === undefined || !descriptor.type.equals(val1[key], val2[key])) {
                return false;
            }
        }
        return true;
    }
    clone(val) {
        const result = {}; // Object.create(null);
        for (const key in this.properties) {
            result[key] = val[key] === undefined ? undefined : this.properties[key].type.clone(val[key]);
        }
        return result;
    }
    diff(oldVal, newVal) {
        let equal = true;
        const result = { set: {}, unset: {}, update: {} };
        for (const key in this.properties) {
            // TODO: Remove cast
            const descriptor = this.properties[key];
            const oldMember = oldVal[key];
            const newMember = newVal[key];
            if (oldMember !== undefined) {
                if (newMember !== undefined) {
                    const diff = descriptor.type.diff(oldMember, newMember);
                    if (diff !== undefined) {
                        result.update[key] = diff;
                        equal = false;
                    }
                }
                else {
                    result.unset[key] = descriptor.type.clone(oldMember);
                    equal = false;
                }
            }
            else {
                if (newMember === undefined) {
                    result.set[key] = descriptor.type.clone(newMember);
                    equal = false;
                }
            }
        }
        return equal ? undefined : result;
    }
    patch(oldVal, diff) {
        const result = this.clone(oldVal);
        if (diff === undefined) {
            return result;
        }
        for (const key in diff.set) {
            result[key] = this.properties[key].type.clone(diff.set[key]);
        }
        for (const key in diff.unset) {
            Reflect.deleteProperty(result, key);
        }
        for (const key in diff.update) {
            // TODO: Remove cast
            result[key] = this.properties[key].type.patch(result[key], diff.update[key]);
        }
        return result;
    }
    reverseDiff(diff) {
        if (diff === undefined) {
            return undefined;
        }
        const result = { set: {}, unset: {}, update: {} };
        for (const key in diff.unset) {
            result.set[key] = this.properties[key].type.clone(diff.unset[key]);
        }
        for (const key in diff.set) {
            result.unset[key] = this.properties[key].type.clone(diff.set[key]);
        }
        for (const key in diff.update) {
            // TODO: Remove cast
            result.update[key] = this.properties[key].type.reverseDiff(diff.update[key]);
        }
        return result;
    }
    squash(diff1, diff2) {
        throw not_implemented_1.createNotImplementedError("DocumentType#squash");
    }
    _applyOptions() {
        if (this._options === undefined) {
            throw lazy_options_1.createLazyOptionsError(this);
        }
        const options = typeof this._options === "function" ?
            this._options() :
            this._options;
        const noExtraKeys = options.noExtraKeys;
        const properties = options.properties;
        const rename = options.rename;
        const changeCase = options.changeCase;
        Object.assign(this, { noExtraKeys, properties, rename, changeCase });
    }
};
function renameKeys(obj, renameAll) {
    const keys = Object.keys(obj);
    const result = new Map();
    const outKeys = new Set();
    for (const key of keys) {
        const renamed = renameAll === undefined ? key : case_style_1.rename(key, renameAll);
        result.set(key, renamed);
        if (outKeys.has(renamed)) {
            throw new incident_1.Incident("NonBijectiveKeyRename", "Some keys are the same after renaming");
        }
        outKeys.add(renamed);
    }
    return result;
}
exports.renameKeys = renameKeys;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const lazy_properties_1 = __webpack_require__(16);
const lazy_options_1 = __webpack_require__(17);
const not_implemented_1 = __webpack_require__(29);
exports.name = "literal";
/**
 * You may need to explicitly write the type or inference won't pick it.
 * For example, in the case of enum values, inference will pick the type of the enum instead of
 * the specific property you pass.
 *
 * @see https://github.com/Microsoft/TypeScript/issues/10195
 */
// tslint:disable-next-line:variable-name
exports.LiteralType = class {
    constructor(options) {
        this.name = exports.name;
        // TODO: Remove once TS 2.7 is better supported by editors
        this.type = undefined;
        this.value = undefined;
        this._options = options;
        if (typeof options !== "function") {
            this._applyOptions();
        }
        else {
            lazy_properties_1.lazyProperties(this, this._applyOptions, ["type", "value"]);
        }
    }
    toJSON() {
        throw not_implemented_1.createNotImplementedError("LiteralType#toJSON");
    }
    read(reader, raw) {
        if (this.type.read === undefined) {
            throw new incident_1.Incident("NotReadable", { type: this });
        }
        return reader.trustInput ? this.clone(this.value) : this.type.read(reader, raw);
    }
    write(writer, value) {
        if (this.type.write === undefined) {
            throw new incident_1.Incident("NotWritable", { type: this });
        }
        return this.type.write(writer, value);
    }
    testError(val) {
        const error = this.type.testError(val);
        if (error !== undefined) {
            return error;
        }
        if (!this.type.equals(val, this.value)) {
            return incident_1.Incident("InvalidLiteral", "Invalid literal value");
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        return this.type.equals(val1, val2);
    }
    clone(val) {
        return this.type.clone(val);
    }
    diff(oldVal, newVal) {
        return;
    }
    patch(oldVal, diff) {
        return this.type.clone(oldVal);
    }
    reverseDiff(diff) {
        return;
    }
    squash(diff1, diff2) {
        return;
    }
    _applyOptions() {
        if (this._options === undefined) {
            throw lazy_options_1.createLazyOptionsError(this);
        }
        const options = typeof this._options === "function"
            ? this._options()
            : this._options;
        const type = options.type;
        const value = options.value;
        Object.assign(this, { type, value });
    }
};

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var ActionType;
(function (ActionType) {
    ActionType[ActionType["Unknown"] = 0] = "Unknown";
    ActionType[ActionType["Add"] = 1] = "Add";
    ActionType[ActionType["Add2"] = 2] = "Add2";
    ActionType[ActionType["And"] = 3] = "And";
    ActionType[ActionType["AsciiToChar"] = 4] = "AsciiToChar";
    ActionType[ActionType["BitAnd"] = 5] = "BitAnd";
    ActionType[ActionType["BitLShift"] = 6] = "BitLShift";
    ActionType[ActionType["BitOr"] = 7] = "BitOr";
    ActionType[ActionType["BitRShift"] = 8] = "BitRShift";
    ActionType[ActionType["BitURShift"] = 9] = "BitURShift";
    ActionType[ActionType["BitXor"] = 10] = "BitXor";
    ActionType[ActionType["Call"] = 11] = "Call";
    ActionType[ActionType["CallFunction"] = 12] = "CallFunction";
    ActionType[ActionType["CallMethod"] = 13] = "CallMethod";
    ActionType[ActionType["CastOp"] = 14] = "CastOp";
    ActionType[ActionType["CharToAscii"] = 15] = "CharToAscii";
    ActionType[ActionType["CloneSprite"] = 16] = "CloneSprite";
    ActionType[ActionType["ConstantPool"] = 17] = "ConstantPool";
    ActionType[ActionType["Decrement"] = 18] = "Decrement";
    ActionType[ActionType["DefineFunction"] = 19] = "DefineFunction";
    ActionType[ActionType["DefineFunction2"] = 20] = "DefineFunction2";
    ActionType[ActionType["DefineLocal"] = 21] = "DefineLocal";
    ActionType[ActionType["DefineLocal2"] = 22] = "DefineLocal2";
    ActionType[ActionType["Delete"] = 23] = "Delete";
    ActionType[ActionType["Delete2"] = 24] = "Delete2";
    ActionType[ActionType["Divide"] = 25] = "Divide";
    ActionType[ActionType["EndDrag"] = 26] = "EndDrag";
    ActionType[ActionType["Enumerate"] = 27] = "Enumerate";
    ActionType[ActionType["Enumerate2"] = 28] = "Enumerate2";
    ActionType[ActionType["Equals"] = 29] = "Equals";
    ActionType[ActionType["Equals2"] = 30] = "Equals2";
    ActionType[ActionType["Extends"] = 31] = "Extends";
    ActionType[ActionType["FsCommand2"] = 32] = "FsCommand2";
    ActionType[ActionType["GetMember"] = 33] = "GetMember";
    ActionType[ActionType["GetProperty"] = 34] = "GetProperty";
    ActionType[ActionType["GetTime"] = 35] = "GetTime";
    ActionType[ActionType["GetUrl"] = 36] = "GetUrl";
    ActionType[ActionType["GetUrl2"] = 37] = "GetUrl2";
    ActionType[ActionType["GetVariable"] = 38] = "GetVariable";
    ActionType[ActionType["GotoFrame"] = 39] = "GotoFrame";
    ActionType[ActionType["GotoFrame2"] = 40] = "GotoFrame2";
    ActionType[ActionType["GotoLabel"] = 41] = "GotoLabel";
    ActionType[ActionType["Greater"] = 42] = "Greater";
    ActionType[ActionType["If"] = 43] = "If";
    ActionType[ActionType["ImplementsOp"] = 44] = "ImplementsOp";
    ActionType[ActionType["Increment"] = 45] = "Increment";
    ActionType[ActionType["InitArray"] = 46] = "InitArray";
    ActionType[ActionType["InitObject"] = 47] = "InitObject";
    ActionType[ActionType["InstanceOf"] = 48] = "InstanceOf";
    ActionType[ActionType["Jump"] = 49] = "Jump";
    ActionType[ActionType["Less"] = 50] = "Less";
    ActionType[ActionType["Less2"] = 51] = "Less2";
    ActionType[ActionType["MbAsciiToChar"] = 52] = "MbAsciiToChar";
    ActionType[ActionType["MbCharToAscii"] = 53] = "MbCharToAscii";
    ActionType[ActionType["MbStringExtract"] = 54] = "MbStringExtract";
    ActionType[ActionType["MbStringLength"] = 55] = "MbStringLength";
    ActionType[ActionType["Modulo"] = 56] = "Modulo";
    ActionType[ActionType["Multiply"] = 57] = "Multiply";
    ActionType[ActionType["NewMethod"] = 58] = "NewMethod";
    ActionType[ActionType["NewObject"] = 59] = "NewObject";
    ActionType[ActionType["NextFrame"] = 60] = "NextFrame";
    ActionType[ActionType["Not"] = 61] = "Not";
    ActionType[ActionType["Or"] = 62] = "Or";
    ActionType[ActionType["Play"] = 63] = "Play";
    ActionType[ActionType["Pop"] = 64] = "Pop";
    ActionType[ActionType["PreviousFrame"] = 65] = "PreviousFrame";
    ActionType[ActionType["Push"] = 66] = "Push";
    ActionType[ActionType["PushDuplicate"] = 67] = "PushDuplicate";
    ActionType[ActionType["RandomNumber"] = 68] = "RandomNumber";
    ActionType[ActionType["RemoveSprite"] = 69] = "RemoveSprite";
    ActionType[ActionType["Return"] = 70] = "Return";
    ActionType[ActionType["SetMember"] = 71] = "SetMember";
    ActionType[ActionType["SetProperty"] = 72] = "SetProperty";
    ActionType[ActionType["SetTarget"] = 73] = "SetTarget";
    ActionType[ActionType["SetTarget2"] = 74] = "SetTarget2";
    ActionType[ActionType["SetVariable"] = 75] = "SetVariable";
    ActionType[ActionType["StackSwap"] = 76] = "StackSwap";
    ActionType[ActionType["StartDrag"] = 77] = "StartDrag";
    ActionType[ActionType["Stop"] = 78] = "Stop";
    ActionType[ActionType["StopSounds"] = 79] = "StopSounds";
    ActionType[ActionType["StoreRegister"] = 80] = "StoreRegister";
    ActionType[ActionType["StrictEquals"] = 81] = "StrictEquals";
    ActionType[ActionType["StrictMode"] = 82] = "StrictMode";
    ActionType[ActionType["StringAdd"] = 83] = "StringAdd";
    ActionType[ActionType["StringEquals"] = 84] = "StringEquals";
    ActionType[ActionType["StringExtract"] = 85] = "StringExtract";
    ActionType[ActionType["StringGreater"] = 86] = "StringGreater";
    ActionType[ActionType["StringLength"] = 87] = "StringLength";
    ActionType[ActionType["StringLess"] = 88] = "StringLess";
    ActionType[ActionType["Subtract"] = 89] = "Subtract";
    ActionType[ActionType["TargetPath"] = 90] = "TargetPath";
    ActionType[ActionType["Throw"] = 91] = "Throw";
    ActionType[ActionType["ToggleQuality"] = 92] = "ToggleQuality";
    ActionType[ActionType["ToInteger"] = 93] = "ToInteger";
    ActionType[ActionType["ToNumber"] = 94] = "ToNumber";
    ActionType[ActionType["ToString"] = 95] = "ToString";
    ActionType[ActionType["Trace"] = 96] = "Trace";
    ActionType[ActionType["Try"] = 97] = "Try";
    ActionType[ActionType["TypeOf"] = 98] = "TypeOf";
    ActionType[ActionType["WaitForFrame"] = 99] = "WaitForFrame";
    ActionType[ActionType["WaitForFrame2"] = 100] = "WaitForFrame2";
    ActionType[ActionType["With"] = 101] = "With";
})(ActionType = exports.ActionType || (exports.ActionType = {}));
exports.$ActionType = new ts_enum_1.TsEnumType({
    enum: ActionType,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb24tdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxVQXVHWDtBQXZHRCxXQUFZLFVBQVU7SUFDcEIsaURBQU8sQ0FBQTtJQUNQLHlDQUFHLENBQUE7SUFDSCwyQ0FBSSxDQUFBO0lBQ0oseUNBQUcsQ0FBQTtJQUNILHlEQUFXLENBQUE7SUFDWCwrQ0FBTSxDQUFBO0lBQ04scURBQVMsQ0FBQTtJQUNULDZDQUFLLENBQUE7SUFDTCxxREFBUyxDQUFBO0lBQ1QsdURBQVUsQ0FBQTtJQUNWLGdEQUFNLENBQUE7SUFDTiw0Q0FBSSxDQUFBO0lBQ0osNERBQVksQ0FBQTtJQUNaLHdEQUFVLENBQUE7SUFDVixnREFBTSxDQUFBO0lBQ04sMERBQVcsQ0FBQTtJQUNYLDBEQUFXLENBQUE7SUFDWCw0REFBWSxDQUFBO0lBQ1osc0RBQVMsQ0FBQTtJQUNULGdFQUFjLENBQUE7SUFDZCxrRUFBZSxDQUFBO0lBQ2YsMERBQVcsQ0FBQTtJQUNYLDREQUFZLENBQUE7SUFDWixnREFBTSxDQUFBO0lBQ04sa0RBQU8sQ0FBQTtJQUNQLGdEQUFNLENBQUE7SUFDTixrREFBTyxDQUFBO0lBQ1Asc0RBQVMsQ0FBQTtJQUNULHdEQUFVLENBQUE7SUFDVixnREFBTSxDQUFBO0lBQ04sa0RBQU8sQ0FBQTtJQUNQLGtEQUFPLENBQUE7SUFDUCx3REFBVSxDQUFBO0lBQ1Ysc0RBQVMsQ0FBQTtJQUNULDBEQUFXLENBQUE7SUFDWCxrREFBTyxDQUFBO0lBQ1AsZ0RBQU0sQ0FBQTtJQUNOLGtEQUFPLENBQUE7SUFDUCwwREFBVyxDQUFBO0lBQ1gsc0RBQVMsQ0FBQTtJQUNULHdEQUFVLENBQUE7SUFDVixzREFBUyxDQUFBO0lBQ1Qsa0RBQU8sQ0FBQTtJQUNQLHdDQUFFLENBQUE7SUFDRiw0REFBWSxDQUFBO0lBQ1osc0RBQVMsQ0FBQTtJQUNULHNEQUFTLENBQUE7SUFDVCx3REFBVSxDQUFBO0lBQ1Ysd0RBQVUsQ0FBQTtJQUNWLDRDQUFJLENBQUE7SUFDSiw0Q0FBSSxDQUFBO0lBQ0osOENBQUssQ0FBQTtJQUNMLDhEQUFhLENBQUE7SUFDYiw4REFBYSxDQUFBO0lBQ2Isa0VBQWUsQ0FBQTtJQUNmLGdFQUFjLENBQUE7SUFDZCxnREFBTSxDQUFBO0lBQ04sb0RBQVEsQ0FBQTtJQUNSLHNEQUFTLENBQUE7SUFDVCxzREFBUyxDQUFBO0lBQ1Qsc0RBQVMsQ0FBQTtJQUNULDBDQUFHLENBQUE7SUFDSCx3Q0FBRSxDQUFBO0lBQ0YsNENBQUksQ0FBQTtJQUNKLDBDQUFHLENBQUE7SUFDSCw4REFBYSxDQUFBO0lBQ2IsNENBQUksQ0FBQTtJQUNKLDhEQUFhLENBQUE7SUFDYiw0REFBWSxDQUFBO0lBQ1osNERBQVksQ0FBQTtJQUNaLGdEQUFNLENBQUE7SUFDTixzREFBUyxDQUFBO0lBQ1QsMERBQVcsQ0FBQTtJQUNYLHNEQUFTLENBQUE7SUFDVCx3REFBVSxDQUFBO0lBQ1YsMERBQVcsQ0FBQTtJQUNYLHNEQUFTLENBQUE7SUFDVCxzREFBUyxDQUFBO0lBQ1QsNENBQUksQ0FBQTtJQUNKLHdEQUFVLENBQUE7SUFDViw4REFBYSxDQUFBO0lBQ2IsNERBQVksQ0FBQTtJQUNaLHdEQUFVLENBQUE7SUFDVixzREFBUyxDQUFBO0lBQ1QsNERBQVksQ0FBQTtJQUNaLDhEQUFhLENBQUE7SUFDYiw4REFBYSxDQUFBO0lBQ2IsNERBQVksQ0FBQTtJQUNaLHdEQUFVLENBQUE7SUFDVixvREFBUSxDQUFBO0lBQ1Isd0RBQVUsQ0FBQTtJQUNWLDhDQUFLLENBQUE7SUFDTCw4REFBYSxDQUFBO0lBQ2Isc0RBQVMsQ0FBQTtJQUNULG9EQUFRLENBQUE7SUFDUixvREFBUSxDQUFBO0lBQ1IsOENBQUssQ0FBQTtJQUNMLDBDQUFHLENBQUE7SUFDSCxnREFBTSxDQUFBO0lBQ04sNERBQVksQ0FBQTtJQUNaLCtEQUFhLENBQUE7SUFDYiw2Q0FBSSxDQUFBO0FBQ04sQ0FBQyxFQXZHVyxVQUFVLEdBQVYsa0JBQVUsS0FBVixrQkFBVSxRQXVHckI7QUFFWSxRQUFBLFdBQVcsR0FBMkIsSUFBSSxvQkFBVSxDQUFhO0lBQzVFLElBQUksRUFBRSxVQUFVO0lBQ2hCLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9uLXR5cGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBUc0VudW1UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdHMtZW51bVwiO1xuXG5leHBvcnQgZW51bSBBY3Rpb25UeXBlIHtcbiAgVW5rbm93bixcbiAgQWRkLFxuICBBZGQyLFxuICBBbmQsXG4gIEFzY2lpVG9DaGFyLFxuICBCaXRBbmQsXG4gIEJpdExTaGlmdCxcbiAgQml0T3IsXG4gIEJpdFJTaGlmdCxcbiAgQml0VVJTaGlmdCxcbiAgQml0WG9yLFxuICBDYWxsLFxuICBDYWxsRnVuY3Rpb24sXG4gIENhbGxNZXRob2QsXG4gIENhc3RPcCxcbiAgQ2hhclRvQXNjaWksXG4gIENsb25lU3ByaXRlLFxuICBDb25zdGFudFBvb2wsXG4gIERlY3JlbWVudCxcbiAgRGVmaW5lRnVuY3Rpb24sXG4gIERlZmluZUZ1bmN0aW9uMixcbiAgRGVmaW5lTG9jYWwsXG4gIERlZmluZUxvY2FsMixcbiAgRGVsZXRlLFxuICBEZWxldGUyLFxuICBEaXZpZGUsXG4gIEVuZERyYWcsXG4gIEVudW1lcmF0ZSxcbiAgRW51bWVyYXRlMixcbiAgRXF1YWxzLFxuICBFcXVhbHMyLFxuICBFeHRlbmRzLFxuICBGc0NvbW1hbmQyLFxuICBHZXRNZW1iZXIsXG4gIEdldFByb3BlcnR5LFxuICBHZXRUaW1lLFxuICBHZXRVcmwsXG4gIEdldFVybDIsXG4gIEdldFZhcmlhYmxlLFxuICBHb3RvRnJhbWUsXG4gIEdvdG9GcmFtZTIsXG4gIEdvdG9MYWJlbCxcbiAgR3JlYXRlcixcbiAgSWYsXG4gIEltcGxlbWVudHNPcCxcbiAgSW5jcmVtZW50LFxuICBJbml0QXJyYXksXG4gIEluaXRPYmplY3QsXG4gIEluc3RhbmNlT2YsXG4gIEp1bXAsXG4gIExlc3MsXG4gIExlc3MyLFxuICBNYkFzY2lpVG9DaGFyLFxuICBNYkNoYXJUb0FzY2lpLFxuICBNYlN0cmluZ0V4dHJhY3QsXG4gIE1iU3RyaW5nTGVuZ3RoLFxuICBNb2R1bG8sXG4gIE11bHRpcGx5LFxuICBOZXdNZXRob2QsXG4gIE5ld09iamVjdCxcbiAgTmV4dEZyYW1lLFxuICBOb3QsXG4gIE9yLFxuICBQbGF5LFxuICBQb3AsXG4gIFByZXZpb3VzRnJhbWUsXG4gIFB1c2gsXG4gIFB1c2hEdXBsaWNhdGUsXG4gIFJhbmRvbU51bWJlcixcbiAgUmVtb3ZlU3ByaXRlLFxuICBSZXR1cm4sXG4gIFNldE1lbWJlcixcbiAgU2V0UHJvcGVydHksXG4gIFNldFRhcmdldCxcbiAgU2V0VGFyZ2V0MixcbiAgU2V0VmFyaWFibGUsXG4gIFN0YWNrU3dhcCxcbiAgU3RhcnREcmFnLFxuICBTdG9wLFxuICBTdG9wU291bmRzLFxuICBTdG9yZVJlZ2lzdGVyLFxuICBTdHJpY3RFcXVhbHMsXG4gIFN0cmljdE1vZGUsXG4gIFN0cmluZ0FkZCxcbiAgU3RyaW5nRXF1YWxzLFxuICBTdHJpbmdFeHRyYWN0LFxuICBTdHJpbmdHcmVhdGVyLFxuICBTdHJpbmdMZW5ndGgsXG4gIFN0cmluZ0xlc3MsXG4gIFN1YnRyYWN0LFxuICBUYXJnZXRQYXRoLFxuICBUaHJvdyxcbiAgVG9nZ2xlUXVhbGl0eSxcbiAgVG9JbnRlZ2VyLFxuICBUb051bWJlcixcbiAgVG9TdHJpbmcsXG4gIFRyYWNlLFxuICBUcnksXG4gIFR5cGVPZixcbiAgV2FpdEZvckZyYW1lLFxuICBXYWl0Rm9yRnJhbWUyLFxuICBXaXRoLFxufVxuXG5leHBvcnQgY29uc3QgJEFjdGlvblR5cGU6IFRzRW51bVR5cGU8QWN0aW9uVHlwZT4gPSBuZXcgVHNFbnVtVHlwZTxBY3Rpb25UeXBlPih7XG4gIGVudW06IEFjdGlvblR5cGUsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var incident_1 = __webpack_require__(130);
exports.Incident = incident_1.Incident;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBc0M7QUFBN0IsOEJBQUEsUUFBUSxDQUFBIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiLi9pbmNpZGVudFwiO1xuZXhwb3J0IHsgU3RhdGljSW5jaWRlbnQgfSBmcm9tIFwiLi90eXBlc1wiO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var TagType;
(function (TagType) {
    TagType[TagType["CharacterSet"] = 0] = "CharacterSet";
    TagType[TagType["CsmTextSettings"] = 1] = "CsmTextSettings";
    TagType[TagType["DebugId"] = 2] = "DebugId";
    TagType[TagType["DefineBehaviour"] = 3] = "DefineBehaviour";
    TagType[TagType["DefineBinaryData"] = 4] = "DefineBinaryData";
    TagType[TagType["DefineBitmap"] = 5] = "DefineBitmap";
    TagType[TagType["DefineButton"] = 6] = "DefineButton";
    TagType[TagType["DefineButtonColorTransform"] = 7] = "DefineButtonColorTransform";
    TagType[TagType["DefineButtonSound"] = 8] = "DefineButtonSound";
    TagType[TagType["DefineCffFont"] = 9] = "DefineCffFont";
    TagType[TagType["DefineCommandObject"] = 10] = "DefineCommandObject";
    TagType[TagType["DefineDynamicText"] = 11] = "DefineDynamicText";
    TagType[TagType["DefinePartialFont"] = 12] = "DefinePartialFont";
    TagType[TagType["DefineFont"] = 13] = "DefineFont";
    TagType[TagType["DefineFontAlignZones"] = 14] = "DefineFontAlignZones";
    TagType[TagType["DefineFontInfo"] = 15] = "DefineFontInfo";
    TagType[TagType["DefineFontName"] = 16] = "DefineFontName";
    TagType[TagType["DefineFunction"] = 17] = "DefineFunction";
    TagType[TagType["DefineJpeg"] = 18] = "DefineJpeg";
    TagType[TagType["DefineMorphShape"] = 19] = "DefineMorphShape";
    TagType[TagType["DefinePartialJpeg"] = 20] = "DefinePartialJpeg";
    TagType[TagType["DefineScalingGrid"] = 21] = "DefineScalingGrid";
    TagType[TagType["DefineSceneAndFrameLabelData"] = 22] = "DefineSceneAndFrameLabelData";
    TagType[TagType["DefineShape"] = 23] = "DefineShape";
    TagType[TagType["DefineSound"] = 24] = "DefineSound";
    TagType[TagType["DefineSprite"] = 25] = "DefineSprite";
    TagType[TagType["DefineText"] = 26] = "DefineText";
    TagType[TagType["DefineTextFormat"] = 27] = "DefineTextFormat";
    TagType[TagType["DefineVideo"] = 28] = "DefineVideo";
    TagType[TagType["DefineVideoStream"] = 29] = "DefineVideoStream";
    TagType[TagType["DoAbc"] = 30] = "DoAbc";
    TagType[TagType["DoAbcDefine"] = 31] = "DoAbcDefine";
    TagType[TagType["DoAction"] = 32] = "DoAction";
    TagType[TagType["DoInitAction"] = 33] = "DoInitAction";
    TagType[TagType["EnableDebugger"] = 34] = "EnableDebugger";
    TagType[TagType["ExportAssets"] = 35] = "ExportAssets";
    TagType[TagType["ExternalFont"] = 36] = "ExternalFont";
    TagType[TagType["FileAttributes"] = 37] = "FileAttributes";
    TagType[TagType["FrameLabel"] = 38] = "FrameLabel";
    TagType[TagType["FreeAll"] = 39] = "FreeAll";
    TagType[TagType["FreeCharacter"] = 40] = "FreeCharacter";
    TagType[TagType["GenCommand"] = 41] = "GenCommand";
    TagType[TagType["GenerateFrame"] = 42] = "GenerateFrame";
    TagType[TagType["GenTagObjects"] = 43] = "GenTagObjects";
    TagType[TagType["ImportAssets"] = 44] = "ImportAssets";
    TagType[TagType["JpegTables"] = 45] = "JpegTables";
    TagType[TagType["Metadata"] = 46] = "Metadata";
    TagType[TagType["NameCharacter"] = 47] = "NameCharacter";
    TagType[TagType["PathsArePostscript"] = 48] = "PathsArePostscript";
    TagType[TagType["PlaceFunction"] = 49] = "PlaceFunction";
    TagType[TagType["PlaceObject"] = 50] = "PlaceObject";
    TagType[TagType["ProductInfo"] = 51] = "ProductInfo";
    TagType[TagType["Protect"] = 52] = "Protect";
    TagType[TagType["RemoveObject"] = 53] = "RemoveObject";
    TagType[TagType["ScriptLimits"] = 54] = "ScriptLimits";
    TagType[TagType["SetBackgroundColor"] = 55] = "SetBackgroundColor";
    TagType[TagType["SetTabIndex"] = 56] = "SetTabIndex";
    TagType[TagType["ShowFrame"] = 57] = "ShowFrame";
    TagType[TagType["SoundStreamBlock"] = 58] = "SoundStreamBlock";
    TagType[TagType["SoundStreamHead"] = 59] = "SoundStreamHead";
    TagType[TagType["StartSound"] = 60] = "StartSound";
    TagType[TagType["StartSound2"] = 61] = "StartSound2";
    TagType[TagType["StopSound"] = 62] = "StopSound";
    TagType[TagType["SymbolClass"] = 63] = "SymbolClass";
    TagType[TagType["SyncFrame"] = 64] = "SyncFrame";
    TagType[TagType["Telemetry"] = 65] = "Telemetry";
    TagType[TagType["VideoFrame"] = 66] = "VideoFrame";
    TagType[TagType["Unknown"] = 67] = "Unknown";
})(TagType = exports.TagType || (exports.TagType = {}));
exports.$TagType = new ts_enum_1.TsEnumType({
    enum: TagType,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9fdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxPQXFFWDtBQXJFRCxXQUFZLE9BQU87SUFDakIscURBQVksQ0FBQTtJQUNaLDJEQUFlLENBQUE7SUFDZiwyQ0FBTyxDQUFBO0lBQ1AsMkRBQWUsQ0FBQTtJQUNmLDZEQUFnQixDQUFBO0lBQ2hCLHFEQUFZLENBQUE7SUFDWixxREFBWSxDQUFBO0lBQ1osaUZBQTBCLENBQUE7SUFDMUIsK0RBQWlCLENBQUE7SUFDakIsdURBQWEsQ0FBQTtJQUNiLG9FQUFtQixDQUFBO0lBQ25CLGdFQUFpQixDQUFBO0lBQ2pCLGdFQUFpQixDQUFBO0lBQ2pCLGtEQUFVLENBQUE7SUFDVixzRUFBb0IsQ0FBQTtJQUNwQiwwREFBYyxDQUFBO0lBQ2QsMERBQWMsQ0FBQTtJQUNkLDBEQUFjLENBQUE7SUFDZCxrREFBVSxDQUFBO0lBQ1YsOERBQWdCLENBQUE7SUFDaEIsZ0VBQWlCLENBQUE7SUFDakIsZ0VBQWlCLENBQUE7SUFDakIsc0ZBQTRCLENBQUE7SUFDNUIsb0RBQVcsQ0FBQTtJQUNYLG9EQUFXLENBQUE7SUFDWCxzREFBWSxDQUFBO0lBQ1osa0RBQVUsQ0FBQTtJQUNWLDhEQUFnQixDQUFBO0lBQ2hCLG9EQUFXLENBQUE7SUFDWCxnRUFBaUIsQ0FBQTtJQUNqQix3Q0FBSyxDQUFBO0lBQ0wsb0RBQVcsQ0FBQTtJQUNYLDhDQUFRLENBQUE7SUFDUixzREFBWSxDQUFBO0lBQ1osMERBQWMsQ0FBQTtJQUNkLHNEQUFZLENBQUE7SUFDWixzREFBWSxDQUFBO0lBQ1osMERBQWMsQ0FBQTtJQUNkLGtEQUFVLENBQUE7SUFDViw0Q0FBTyxDQUFBO0lBQ1Asd0RBQWEsQ0FBQTtJQUNiLGtEQUFVLENBQUE7SUFDVix3REFBYSxDQUFBO0lBQ2Isd0RBQWEsQ0FBQTtJQUNiLHNEQUFZLENBQUE7SUFDWixrREFBVSxDQUFBO0lBQ1YsOENBQVEsQ0FBQTtJQUNSLHdEQUFhLENBQUE7SUFDYixrRUFBa0IsQ0FBQTtJQUNsQix3REFBYSxDQUFBO0lBQ2Isb0RBQVcsQ0FBQTtJQUNYLG9EQUFXLENBQUE7SUFDWCw0Q0FBTyxDQUFBO0lBQ1Asc0RBQVksQ0FBQTtJQUNaLHNEQUFZLENBQUE7SUFDWixrRUFBa0IsQ0FBQTtJQUNsQixvREFBVyxDQUFBO0lBQ1gsZ0RBQVMsQ0FBQTtJQUNULDhEQUFnQixDQUFBO0lBQ2hCLDREQUFlLENBQUE7SUFDZixrREFBVSxDQUFBO0lBQ1Ysb0RBQVcsQ0FBQTtJQUNYLGdEQUFTLENBQUE7SUFDVCxvREFBVyxDQUFBO0lBQ1gsZ0RBQVMsQ0FBQTtJQUNULGdEQUFTLENBQUE7SUFDVCxrREFBVSxDQUFBO0lBQ1YsNENBQU8sQ0FBQTtBQUNULENBQUMsRUFyRVcsT0FBTyxHQUFQLGVBQU8sS0FBUCxlQUFPLFFBcUVsQjtBQUVZLFFBQUEsUUFBUSxHQUF3QixJQUFJLG9CQUFVLENBQVU7SUFDbkUsSUFBSSxFQUFFLE9BQU87SUFDYixVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL190eXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gVGFnVHlwZSB7XG4gIENoYXJhY3RlclNldCxcbiAgQ3NtVGV4dFNldHRpbmdzLFxuICBEZWJ1Z0lkLFxuICBEZWZpbmVCZWhhdmlvdXIsXG4gIERlZmluZUJpbmFyeURhdGEsXG4gIERlZmluZUJpdG1hcCxcbiAgRGVmaW5lQnV0dG9uLFxuICBEZWZpbmVCdXR0b25Db2xvclRyYW5zZm9ybSxcbiAgRGVmaW5lQnV0dG9uU291bmQsXG4gIERlZmluZUNmZkZvbnQsXG4gIERlZmluZUNvbW1hbmRPYmplY3QsXG4gIERlZmluZUR5bmFtaWNUZXh0LFxuICBEZWZpbmVQYXJ0aWFsRm9udCxcbiAgRGVmaW5lRm9udCxcbiAgRGVmaW5lRm9udEFsaWduWm9uZXMsXG4gIERlZmluZUZvbnRJbmZvLFxuICBEZWZpbmVGb250TmFtZSxcbiAgRGVmaW5lRnVuY3Rpb24sXG4gIERlZmluZUpwZWcsXG4gIERlZmluZU1vcnBoU2hhcGUsXG4gIERlZmluZVBhcnRpYWxKcGVnLFxuICBEZWZpbmVTY2FsaW5nR3JpZCxcbiAgRGVmaW5lU2NlbmVBbmRGcmFtZUxhYmVsRGF0YSxcbiAgRGVmaW5lU2hhcGUsXG4gIERlZmluZVNvdW5kLFxuICBEZWZpbmVTcHJpdGUsXG4gIERlZmluZVRleHQsXG4gIERlZmluZVRleHRGb3JtYXQsXG4gIERlZmluZVZpZGVvLFxuICBEZWZpbmVWaWRlb1N0cmVhbSxcbiAgRG9BYmMsXG4gIERvQWJjRGVmaW5lLFxuICBEb0FjdGlvbixcbiAgRG9Jbml0QWN0aW9uLFxuICBFbmFibGVEZWJ1Z2dlcixcbiAgRXhwb3J0QXNzZXRzLFxuICBFeHRlcm5hbEZvbnQsXG4gIEZpbGVBdHRyaWJ1dGVzLFxuICBGcmFtZUxhYmVsLFxuICBGcmVlQWxsLFxuICBGcmVlQ2hhcmFjdGVyLFxuICBHZW5Db21tYW5kLFxuICBHZW5lcmF0ZUZyYW1lLFxuICBHZW5UYWdPYmplY3RzLFxuICBJbXBvcnRBc3NldHMsXG4gIEpwZWdUYWJsZXMsXG4gIE1ldGFkYXRhLFxuICBOYW1lQ2hhcmFjdGVyLFxuICBQYXRoc0FyZVBvc3RzY3JpcHQsXG4gIFBsYWNlRnVuY3Rpb24sXG4gIFBsYWNlT2JqZWN0LFxuICBQcm9kdWN0SW5mbyxcbiAgUHJvdGVjdCxcbiAgUmVtb3ZlT2JqZWN0LFxuICBTY3JpcHRMaW1pdHMsXG4gIFNldEJhY2tncm91bmRDb2xvcixcbiAgU2V0VGFiSW5kZXgsXG4gIFNob3dGcmFtZSxcbiAgU291bmRTdHJlYW1CbG9jayxcbiAgU291bmRTdHJlYW1IZWFkLFxuICBTdGFydFNvdW5kLFxuICBTdGFydFNvdW5kMixcbiAgU3RvcFNvdW5kLFxuICBTeW1ib2xDbGFzcyxcbiAgU3luY0ZyYW1lLFxuICBUZWxlbWV0cnksXG4gIFZpZGVvRnJhbWUsXG4gIFVua25vd24sXG59XG5cbmV4cG9ydCBjb25zdCAkVGFnVHlwZTogVHNFbnVtVHlwZTxUYWdUeXBlPiA9IG5ldyBUc0VudW1UeXBlPFRhZ1R5cGU+KHtcbiAgZW51bTogVGFnVHlwZSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const lazy_properties_1 = __webpack_require__(16);
const invalid_array_items_1 = __webpack_require__(164);
const invalid_type_1 = __webpack_require__(21);
const lazy_options_1 = __webpack_require__(17);
const max_array_length_1 = __webpack_require__(79);
const not_implemented_1 = __webpack_require__(29);
const read_visitor_1 = __webpack_require__(18);
exports.name = "array";
// tslint:disable-next-line:variable-name
exports.ArrayType = class {
    constructor(options) {
        this.name = exports.name;
        // TODO: Remove once TS 2.7 is better supported by editors
        this.itemType = undefined;
        this.maxLength = undefined;
        this._options = options;
        if (typeof options !== "function") {
            this._applyOptions();
        }
        else {
            lazy_properties_1.lazyProperties(this, this._applyOptions, ["itemType", "maxLength"]);
        }
    }
    toJSON() {
        throw not_implemented_1.createNotImplementedError("ArrayType#toJSON");
    }
    // TODO: Dynamically add with prototype?
    read(reader, raw) {
        const itemType = this.itemType;
        const maxLength = this.maxLength;
        return reader.readList(raw, read_visitor_1.readVisitor({
            fromList(input, itemReader) {
                let invalid = undefined;
                const result = [];
                let i = 0;
                for (const rawItem of input) {
                    if (maxLength !== undefined && i === maxLength) {
                        throw max_array_length_1.createMaxArrayLengthError([...input], maxLength);
                    }
                    try {
                        const item = itemType.read(itemReader, rawItem);
                        if (invalid === undefined) {
                            result.push(item);
                        }
                    }
                    catch (err) {
                        if (invalid === undefined) {
                            invalid = new Map();
                        }
                        invalid.set(i, err);
                    }
                    i++;
                }
                if (invalid !== undefined) {
                    throw invalid_array_items_1.createInvalidArrayItemsError(invalid);
                }
                return result;
            },
        }));
    }
    // TODO: Dynamically add with prototype?
    write(writer, value) {
        return writer.writeList(value.length, (index, itemWriter) => {
            if (this.itemType.write === undefined) {
                throw new incident_1.Incident("NotWritable", { type: this.itemType });
            }
            return this.itemType.write(itemWriter, value[index]);
        });
    }
    testError(val) {
        if (!Array.isArray(val)) {
            return invalid_type_1.createInvalidTypeError("array", val);
        }
        if (this.maxLength !== undefined && val.length > this.maxLength) {
            return max_array_length_1.createMaxArrayLengthError(val, this.maxLength);
        }
        const invalid = new Map();
        const itemCount = val.length;
        for (let i = 0; i < itemCount; i++) {
            const error = this.itemType.testError(val[i]);
            if (error !== undefined) {
                invalid.set(i, error);
            }
        }
        if (invalid.size !== 0) {
            return invalid_array_items_1.createInvalidArrayItemsError(invalid);
        }
        return undefined;
    }
    test(val) {
        if (!Array.isArray(val) || (this.maxLength !== undefined && val.length > this.maxLength)) {
            return false;
        }
        for (const item of val) {
            if (!this.itemType.test(item)) {
                return false;
            }
        }
        return true;
    }
    equals(val1, val2) {
        if (val2.length !== val1.length) {
            return false;
        }
        for (let i = 0; i < val1.length; i++) {
            if (!this.itemType.equals(val2[i], val1[i])) {
                return false;
            }
        }
        return true;
    }
    clone(val) {
        return val.map((item) => this.itemType.clone(item));
    }
    _applyOptions() {
        if (this._options === undefined) {
            throw lazy_options_1.createLazyOptionsError(this);
        }
        const options = typeof this._options === "function" ? this._options() : this._options;
        const itemType = options.itemType;
        const maxLength = options.maxLength;
        Object.assign(this, { itemType, maxLength });
    }
};

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdHlwZXMvYXJyYXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFDcEMsaUVBQTZEO0FBQzdELHVFQUE2RTtBQUM3RSx5REFBZ0U7QUFDaEUseURBQWdFO0FBQ2hFLGlFQUF1RTtBQUN2RSwrREFBc0U7QUFDdEUsMERBQXNEO0FBSXpDLFFBQUEsSUFBSSxHQUFTLE9BQU8sQ0FBQztBQW1DbEMseUNBQXlDO0FBQzVCLFFBQUEsU0FBUyxHQUErQjtJQU9uRCxZQUFZLE9BQXFDO1FBTnhDLFNBQUksR0FBUyxZQUFJLENBQUM7UUFPekIsMERBQTBEO1FBQzFELElBQUksQ0FBQyxRQUFRLEdBQVMsU0FBUyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxTQUFTLEdBQVMsU0FBUyxDQUFDO1FBRWpDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sT0FBTyxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDbEMsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3ZCLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLGdDQUFjLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQyxVQUFVLEVBQUUsV0FBVyxDQUFDLENBQUMsQ0FBQztRQUN0RSxDQUFDO0lBQ0gsQ0FBQztJQUVELE1BQU07UUFDSixNQUFNLDJDQUF5QixDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUVELHdDQUF3QztJQUN4QyxJQUFJLENBQUksTUFBaUIsRUFBRSxHQUFNO1FBQy9CLE1BQU0sUUFBUSxHQUFNLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDbEMsTUFBTSxTQUFTLEdBQXVCLElBQUksQ0FBQyxTQUFTLENBQUM7UUFFckQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLDBCQUFXLENBQUM7WUFDdEMsUUFBUSxDQUFLLEtBQW1CLEVBQUUsVUFBc0I7Z0JBQ3RELElBQUksT0FBTyxHQUFtQyxTQUFTLENBQUM7Z0JBQ3hELE1BQU0sTUFBTSxHQUFRLEVBQUUsQ0FBQztnQkFDdkIsSUFBSSxDQUFDLEdBQVcsQ0FBQyxDQUFDO2dCQUNsQixHQUFHLENBQUMsQ0FBQyxNQUFNLE9BQU8sSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDO29CQUM1QixFQUFFLENBQUMsQ0FBQyxTQUFTLEtBQUssU0FBUyxJQUFJLENBQUMsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO3dCQUMvQyxNQUFNLDRDQUF5QixDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztvQkFDekQsQ0FBQztvQkFDRCxJQUFJLENBQUM7d0JBQ0gsTUFBTSxJQUFJLEdBQU0sUUFBUSxDQUFDLElBQUssQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLENBQUM7d0JBQ3BELEVBQUUsQ0FBQyxDQUFDLE9BQU8sS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDOzRCQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO3dCQUNwQixDQUFDO29CQUNILENBQUM7b0JBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQzt3QkFDYixFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQzs0QkFDMUIsT0FBTyxHQUFHLElBQUksR0FBRyxFQUFFLENBQUM7d0JBQ3RCLENBQUM7d0JBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7b0JBQ3RCLENBQUM7b0JBQ0QsQ0FBQyxFQUFFLENBQUM7Z0JBQ04sQ0FBQztnQkFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztvQkFDMUIsTUFBTSxrREFBNEIsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDOUMsQ0FBQztnQkFDRCxNQUFNLENBQUMsTUFBTSxDQUFDO1lBQ2hCLENBQUM7U0FDRixDQUFDLENBQUMsQ0FBQztJQUNOLENBQUM7SUFFRCx3Q0FBd0M7SUFDeEMsS0FBSyxDQUFJLE1BQWlCLEVBQUUsS0FBVTtRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUssS0FBYSxFQUFFLFVBQXNCLEVBQU0sRUFBRTtZQUN0RixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO2dCQUN0QyxNQUFNLElBQUksbUJBQVEsQ0FBQyxhQUFhLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBQyxDQUFDLENBQUM7WUFDM0QsQ0FBQztZQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDdkQsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsU0FBUyxDQUFDLEdBQVE7UUFDaEIsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN4QixNQUFNLENBQUMscUNBQXNCLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQzlDLENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxLQUFLLFNBQVMsSUFBSSxHQUFHLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ2hFLE1BQU0sQ0FBQyw0Q0FBeUIsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3hELENBQUM7UUFDRCxNQUFNLE9BQU8sR0FBdUIsSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUM5QyxNQUFNLFNBQVMsR0FBVyxHQUFHLENBQUMsTUFBTSxDQUFDO1FBQ3JDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFXLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7WUFDM0MsTUFBTSxLQUFLLEdBQXNCLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2pFLEVBQUUsQ0FBQyxDQUFDLEtBQUssS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO2dCQUN4QixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztZQUN4QixDQUFDO1FBQ0gsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN2QixNQUFNLENBQUMsa0RBQTRCLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDL0MsQ0FBQztRQUNELE1BQU0sQ0FBQyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUVELElBQUksQ0FBQyxHQUFRO1FBQ1gsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsS0FBSyxTQUFTLElBQUksR0FBRyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3pGLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDZixDQUFDO1FBQ0QsR0FBRyxDQUFDLENBQUMsTUFBTSxJQUFJLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQztZQUN2QixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDOUIsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUNmLENBQUM7UUFDSCxDQUFDO1FBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxNQUFNLENBQUMsSUFBUyxFQUFFLElBQVM7UUFDekIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNoQyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQ2YsQ0FBQztRQUNELEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFXLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBQzdDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDNUMsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUNmLENBQUM7UUFDSCxDQUFDO1FBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxLQUFLLENBQUMsR0FBUTtRQUNaLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBTyxFQUFLLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFFTyxhQUFhO1FBQ25CLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztZQUNoQyxNQUFNLHFDQUFzQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLENBQUM7UUFDRCxNQUFNLE9BQU8sR0FBMkIsT0FBTyxJQUFJLENBQUMsUUFBUSxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBRTlHLE1BQU0sUUFBUSxHQUFNLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFDckMsTUFBTSxTQUFTLEdBQVcsT0FBTyxDQUFDLFNBQVMsQ0FBQztRQUU1QyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxFQUFDLFFBQVEsRUFBRSxTQUFTLEVBQUMsQ0FBQyxDQUFDO0lBQzdDLENBQUM7Q0FDRixDQUFDIiwiZmlsZSI6InR5cGVzL2FycmF5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcbmltcG9ydCB7IGxhenlQcm9wZXJ0aWVzIH0gZnJvbSBcIi4uL19oZWxwZXJzL2xhenktcHJvcGVydGllc1wiO1xuaW1wb3J0IHsgY3JlYXRlSW52YWxpZEFycmF5SXRlbXNFcnJvciB9IGZyb20gXCIuLi9lcnJvcnMvaW52YWxpZC1hcnJheS1pdGVtc1wiO1xuaW1wb3J0IHsgY3JlYXRlSW52YWxpZFR5cGVFcnJvciB9IGZyb20gXCIuLi9lcnJvcnMvaW52YWxpZC10eXBlXCI7XG5pbXBvcnQgeyBjcmVhdGVMYXp5T3B0aW9uc0Vycm9yIH0gZnJvbSBcIi4uL2Vycm9ycy9sYXp5LW9wdGlvbnNcIjtcbmltcG9ydCB7IGNyZWF0ZU1heEFycmF5TGVuZ3RoRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JzL21heC1hcnJheS1sZW5ndGhcIjtcbmltcG9ydCB7IGNyZWF0ZU5vdEltcGxlbWVudGVkRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JzL25vdC1pbXBsZW1lbnRlZFwiO1xuaW1wb3J0IHsgcmVhZFZpc2l0b3IgfSBmcm9tIFwiLi4vcmVhZGVycy9yZWFkLXZpc2l0b3JcIjtcbmltcG9ydCB7IElvVHlwZSwgTGF6eSwgUmVhZGVyLCBUeXBlLCBXcml0ZXIgfSBmcm9tIFwiLi4vdHlwZXNcIjtcblxuZXhwb3J0IHR5cGUgTmFtZSA9IFwiYXJyYXlcIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJhcnJheVwiO1xuZXhwb3J0IG5hbWVzcGFjZSBqc29uIHtcbiAgLy8gVE9ETyhkZW11cmdvcyk6IEV4cG9ydCBhcnJheVR5cGUgdG8gSlNPTlxuICBleHBvcnQgdHlwZSBUeXBlID0gdW5kZWZpbmVkO1xufVxuZXhwb3J0IHR5cGUgRGlmZiA9IGFueTtcblxuLyoqXG4gKiBUOiBJdGVtIHR5cGVcbiAqIE06IE1ldGEtVHlwZVxuICovXG5leHBvcnQgaW50ZXJmYWNlIEFycmF5VHlwZU9wdGlvbnM8VCwgTSBleHRlbmRzIFR5cGU8VD4gPSBUeXBlPFQ+PiB7XG4gIGl0ZW1UeXBlOiBNO1xuICBtYXhMZW5ndGg6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBcnJheVR5cGVDb25zdHJ1Y3RvciB7XG4gIC8qKlxuICAgKiBDcmVhdGUgYSBuZXcgYXJyYXkgdHlwZSB3aXRoIGZ1bGwgcmVhZC93cml0ZSBzdXBwb3J0XG4gICAqL1xuICBuZXc8VD4ob3B0aW9uczogTGF6eTxBcnJheVR5cGVPcHRpb25zPFQsIElvVHlwZTxUPj4+KTogQXJyYXlJb1R5cGU8VCwgSW9UeXBlPFQ+PjtcblxuICAvKipcbiAgICogQ3JlYXRlIGEgbmV3IHNpbXBsZSBhcnJheSB0eXBlXG4gICAqL1xuICBuZXc8VD4ob3B0aW9uczogTGF6eTxBcnJheVR5cGVPcHRpb25zPFQ+Pik6IEFycmF5VHlwZTxUPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBcnJheVR5cGU8VCwgTSBleHRlbmRzIFR5cGU8VD4gPSBUeXBlPFQ+PiBleHRlbmRzIFR5cGU8VFtdPiwgQXJyYXlUeXBlT3B0aW9uczxULCBNPiB7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXJyYXlJb1R5cGU8VCwgTSBleHRlbmRzIElvVHlwZTxUPiA9IElvVHlwZTxUPj4gZXh0ZW5kcyBJb1R5cGU8VFtdPixcbiAgQXJyYXlUeXBlT3B0aW9uczxULCBNPiB7XG59XG5cbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTp2YXJpYWJsZS1uYW1lXG5leHBvcnQgY29uc3QgQXJyYXlUeXBlOiBBcnJheVR5cGVDb25zdHJ1Y3RvciA9IDxhbnk+IGNsYXNzPFQsIE0gZXh0ZW5kcyBUeXBlPFQ+ID0gVHlwZTxUPj4ge1xuICByZWFkb25seSBuYW1lOiBOYW1lID0gbmFtZTtcbiAgcmVhZG9ubHkgaXRlbVR5cGU6IE07XG4gIHJlYWRvbmx5IG1heExlbmd0aDogbnVtYmVyO1xuXG4gIHByaXZhdGUgX29wdGlvbnM6IExhenk8QXJyYXlUeXBlT3B0aW9uczxULCBNPj47XG5cbiAgY29uc3RydWN0b3Iob3B0aW9uczogTGF6eTxBcnJheVR5cGVPcHRpb25zPFQsIE0+Pikge1xuICAgIC8vIFRPRE86IFJlbW92ZSBvbmNlIFRTIDIuNyBpcyBiZXR0ZXIgc3VwcG9ydGVkIGJ5IGVkaXRvcnNcbiAgICB0aGlzLml0ZW1UeXBlID0gPGFueT4gdW5kZWZpbmVkO1xuICAgIHRoaXMubWF4TGVuZ3RoID0gPGFueT4gdW5kZWZpbmVkO1xuXG4gICAgdGhpcy5fb3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgIHRoaXMuX2FwcGx5T3B0aW9ucygpO1xuICAgIH0gZWxzZSB7XG4gICAgICBsYXp5UHJvcGVydGllcyh0aGlzLCB0aGlzLl9hcHBseU9wdGlvbnMsIFtcIml0ZW1UeXBlXCIsIFwibWF4TGVuZ3RoXCJdKTtcbiAgICB9XG4gIH1cblxuICB0b0pTT04oKToganNvbi5UeXBlIHtcbiAgICB0aHJvdyBjcmVhdGVOb3RJbXBsZW1lbnRlZEVycm9yKFwiQXJyYXlUeXBlI3RvSlNPTlwiKTtcbiAgfVxuXG4gIC8vIFRPRE86IER5bmFtaWNhbGx5IGFkZCB3aXRoIHByb3RvdHlwZT9cbiAgcmVhZDxSPihyZWFkZXI6IFJlYWRlcjxSPiwgcmF3OiBSKTogVFtdIHtcbiAgICBjb25zdCBpdGVtVHlwZTogTSA9IHRoaXMuaXRlbVR5cGU7XG4gICAgY29uc3QgbWF4TGVuZ3RoOiBudW1iZXIgfCB1bmRlZmluZWQgPSB0aGlzLm1heExlbmd0aDtcblxuICAgIHJldHVybiByZWFkZXIucmVhZExpc3QocmF3LCByZWFkVmlzaXRvcih7XG4gICAgICBmcm9tTGlzdDxSST4oaW5wdXQ6IEl0ZXJhYmxlPFJJPiwgaXRlbVJlYWRlcjogUmVhZGVyPFJJPik6IFRbXSB7XG4gICAgICAgIGxldCBpbnZhbGlkOiB1bmRlZmluZWQgfCBNYXA8bnVtYmVyLCBFcnJvcj4gPSB1bmRlZmluZWQ7XG4gICAgICAgIGNvbnN0IHJlc3VsdDogVFtdID0gW107XG4gICAgICAgIGxldCBpOiBudW1iZXIgPSAwO1xuICAgICAgICBmb3IgKGNvbnN0IHJhd0l0ZW0gb2YgaW5wdXQpIHtcbiAgICAgICAgICBpZiAobWF4TGVuZ3RoICE9PSB1bmRlZmluZWQgJiYgaSA9PT0gbWF4TGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVNYXhBcnJheUxlbmd0aEVycm9yKFsuLi5pbnB1dF0sIG1heExlbmd0aCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBpdGVtOiBUID0gaXRlbVR5cGUucmVhZCEoaXRlbVJlYWRlciwgcmF3SXRlbSk7XG4gICAgICAgICAgICBpZiAoaW52YWxpZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgaWYgKGludmFsaWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICBpbnZhbGlkID0gbmV3IE1hcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaW52YWxpZC5zZXQoaSwgZXJyKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaSsrO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpbnZhbGlkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICB0aHJvdyBjcmVhdGVJbnZhbGlkQXJyYXlJdGVtc0Vycm9yKGludmFsaWQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9LFxuICAgIH0pKTtcbiAgfVxuXG4gIC8vIFRPRE86IER5bmFtaWNhbGx5IGFkZCB3aXRoIHByb3RvdHlwZT9cbiAgd3JpdGU8Vz4od3JpdGVyOiBXcml0ZXI8Vz4sIHZhbHVlOiBUW10pOiBXIHtcbiAgICByZXR1cm4gd3JpdGVyLndyaXRlTGlzdCh2YWx1ZS5sZW5ndGgsIDxJVz4oaW5kZXg6IG51bWJlciwgaXRlbVdyaXRlcjogV3JpdGVyPElXPik6IElXID0+IHtcbiAgICAgIGlmICh0aGlzLml0ZW1UeXBlLndyaXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEluY2lkZW50KFwiTm90V3JpdGFibGVcIiwge3R5cGU6IHRoaXMuaXRlbVR5cGV9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLml0ZW1UeXBlLndyaXRlKGl0ZW1Xcml0ZXIsIHZhbHVlW2luZGV4XSk7XG4gICAgfSk7XG4gIH1cblxuICB0ZXN0RXJyb3IodmFsOiBUW10pOiBFcnJvciB8IHVuZGVmaW5lZCB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbCkpIHtcbiAgICAgIHJldHVybiBjcmVhdGVJbnZhbGlkVHlwZUVycm9yKFwiYXJyYXlcIiwgdmFsKTtcbiAgICB9XG4gICAgaWYgKHRoaXMubWF4TGVuZ3RoICE9PSB1bmRlZmluZWQgJiYgdmFsLmxlbmd0aCA+IHRoaXMubWF4TGVuZ3RoKSB7XG4gICAgICByZXR1cm4gY3JlYXRlTWF4QXJyYXlMZW5ndGhFcnJvcih2YWwsIHRoaXMubWF4TGVuZ3RoKTtcbiAgICB9XG4gICAgY29uc3QgaW52YWxpZDogTWFwPG51bWJlciwgRXJyb3I+ID0gbmV3IE1hcCgpO1xuICAgIGNvbnN0IGl0ZW1Db3VudDogbnVtYmVyID0gdmFsLmxlbmd0aDtcbiAgICBmb3IgKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgaXRlbUNvdW50OyBpKyspIHtcbiAgICAgIGNvbnN0IGVycm9yOiBFcnJvciB8IHVuZGVmaW5lZCA9IHRoaXMuaXRlbVR5cGUudGVzdEVycm9yKHZhbFtpXSk7XG4gICAgICBpZiAoZXJyb3IgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBpbnZhbGlkLnNldChpLCBlcnJvcik7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChpbnZhbGlkLnNpemUgIT09IDApIHtcbiAgICAgIHJldHVybiBjcmVhdGVJbnZhbGlkQXJyYXlJdGVtc0Vycm9yKGludmFsaWQpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgdGVzdCh2YWw6IFRbXSk6IHZhbCBpcyBUW10ge1xuICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWwpIHx8ICh0aGlzLm1heExlbmd0aCAhPT0gdW5kZWZpbmVkICYmIHZhbC5sZW5ndGggPiB0aGlzLm1heExlbmd0aCkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBpdGVtIG9mIHZhbCkge1xuICAgICAgaWYgKCF0aGlzLml0ZW1UeXBlLnRlc3QoaXRlbSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGVxdWFscyh2YWwxOiBUW10sIHZhbDI6IFRbXSk6IGJvb2xlYW4ge1xuICAgIGlmICh2YWwyLmxlbmd0aCAhPT0gdmFsMS5sZW5ndGgpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IHZhbDEubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICghdGhpcy5pdGVtVHlwZS5lcXVhbHModmFsMltpXSwgdmFsMVtpXSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGNsb25lKHZhbDogVFtdKTogVFtdIHtcbiAgICByZXR1cm4gdmFsLm1hcCgoaXRlbTogVCk6IFQgPT4gdGhpcy5pdGVtVHlwZS5jbG9uZShpdGVtKSk7XG4gIH1cblxuICBwcml2YXRlIF9hcHBseU9wdGlvbnMoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuX29wdGlvbnMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgY3JlYXRlTGF6eU9wdGlvbnNFcnJvcih0aGlzKTtcbiAgICB9XG4gICAgY29uc3Qgb3B0aW9uczogQXJyYXlUeXBlT3B0aW9uczxULCBNPiA9IHR5cGVvZiB0aGlzLl9vcHRpb25zID09PSBcImZ1bmN0aW9uXCIgPyB0aGlzLl9vcHRpb25zKCkgOiB0aGlzLl9vcHRpb25zO1xuXG4gICAgY29uc3QgaXRlbVR5cGU6IE0gPSBvcHRpb25zLml0ZW1UeXBlO1xuICAgIGNvbnN0IG1heExlbmd0aDogbnVtYmVyID0gb3B0aW9ucy5tYXhMZW5ndGg7XG5cbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIHtpdGVtVHlwZSwgbWF4TGVuZ3RofSk7XG4gIH1cbn07XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const integer_1 = __webpack_require__(11);
exports.$Uint16 = new integer_1.IntegerType({ min: 0, max: 65535 });

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnVpbHRpbnMvdWludDE2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsOENBQStDO0FBRWxDLFFBQUEsT0FBTyxHQUFnQixJQUFJLHFCQUFXLENBQUMsRUFBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImJ1aWx0aW5zL3VpbnQxNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEludGVnZXJUeXBlIH0gZnJvbSBcIi4uL3R5cGVzL2ludGVnZXJcIjtcblxuZXhwb3J0IGNvbnN0ICRVaW50MTY6IEludGVnZXJUeXBlID0gbmV3IEludGVnZXJUeXBlKHttaW46IDAsIG1heDogNjU1MzV9KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(173);
exports.$Boolean = new boolean_1.BooleanType();

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnVpbHRpbnMvYm9vbGVhbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDhDQUErQztBQUVsQyxRQUFBLFFBQVEsR0FBZ0IsSUFBSSxxQkFBVyxFQUFFLENBQUMiLCJmaWxlIjoiYnVpbHRpbnMvYm9vbGVhbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvb2xlYW5UeXBlIH0gZnJvbSBcIi4uL3R5cGVzL2Jvb2xlYW5cIjtcblxuZXhwb3J0IGNvbnN0ICRCb29sZWFuOiBCb29sZWFuVHlwZSA9IG5ldyBCb29sZWFuVHlwZSgpO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const lazy_properties_1 = __webpack_require__(16);
const case_style_1 = __webpack_require__(0);
const invalid_type_1 = __webpack_require__(21);
const lazy_options_1 = __webpack_require__(17);
const not_implemented_1 = __webpack_require__(29);
const read_visitor_1 = __webpack_require__(18);
exports.name = "simple-enum";
var EnumKind;
(function (EnumKind) {
    EnumKind[EnumKind["Empty"] = 0] = "Empty";
    EnumKind[EnumKind["Numeric"] = 1] = "Numeric";
    EnumKind[EnumKind["String"] = 2] = "String";
    EnumKind[EnumKind["Mixed"] = 3] = "Mixed";
})(EnumKind || (EnumKind = {}));
function getEnumKind(enumObject) {
    let hasNumericValues = false;
    let hasStringValues = false;
    for (const key in enumObject) {
        switch (typeof enumObject[key]) {
            case "number":
                hasNumericValues = true;
                break;
            case "string":
                hasStringValues = true;
                break;
            default:
                throw invalid_type_1.createInvalidTypeError("number | string", enumObject[key], "enumObject[key]");
        }
    }
    if (hasStringValues) {
        return hasNumericValues ? EnumKind.Mixed : EnumKind.String;
    }
    else {
        return hasNumericValues ? EnumKind.Numeric : EnumKind.Empty;
    }
}
/**
 * Builds a map from a TS enum by removing reverse-lookup keys.
 */
function tsEnumToMap(tsEnum) {
    const result = new Map();
    for (const key in tsEnum) {
        if (!isValidEnumMember(key)) {
            continue;
        }
        result.set(key, tsEnum[key]);
    }
    return result;
}
/**
 * Function used by TS to check the names of enums (isNumericLiteralName)
 *
 * @see https://github.com/Microsoft/TypeScript/blob/89de4c9a3ab3f7f88a141f1529b77628204bff73/lib/tsc.js#L36877
 */
function isValidEnumMember(key) {
    return (+key).toString() !== key || key === "Infinity" || key === "-Infinity" || key === "NaN";
}
/**
 * Converts a TS enum and rename options to two maps: from out names to values and from
 * values to out names.
 */
function getEnumMaps(tsEnum, changeCase, renameAll) {
    const jsToOut = new Map();
    const outToJs = new Map();
    // TODO: Check for bijection
    for (const [key, value] of tsEnumToMap(tsEnum)) {
        let name = key;
        if (renameAll !== undefined && renameAll[key] !== undefined) {
            name = renameAll[key];
        }
        else if (changeCase !== undefined) {
            name = case_style_1.rename(key, changeCase);
        }
        jsToOut.set(value, name);
        outToJs.set(name, value);
    }
    return [jsToOut, outToJs];
}
/**
 * Represents a TS-style enum value.
 *
 * A TS enum value is defined in an object ("enum object"). It contains "forward"properties from
 * non-numeric strings to strings or numbers and "reversed" properties from numeric strings to
 * keys of forward properties with constant numeric values.
 */
class TsEnumType {
    constructor(options) {
        this.name = exports.name;
        // TODO: Remove once TS 2.7 is better supported by editors
        this.enum = undefined;
        this._options = options;
        if (typeof options !== "function") {
            this._applyOptions();
        }
        else {
            lazy_properties_1.lazyProperties(this, this._applyOptions, ["enum", "changeCase", "rename"]);
        }
    }
    get jsToOut() {
        if (this._jsToOut === undefined) {
            [this._jsToOut, this._outToJs] = getEnumMaps(this.enum, this.changeCase, this.rename);
        }
        return this._jsToOut;
    }
    get outToJs() {
        if (this._outToJs === undefined) {
            [this._jsToOut, this._outToJs] = getEnumMaps(this.enum, this.changeCase, this.rename);
        }
        return this._outToJs;
    }
    static fromJSON() {
        throw not_implemented_1.createNotImplementedError("SimpleEnumType.fromJSON");
    }
    toJSON() {
        throw not_implemented_1.createNotImplementedError("SimpleEnumType#toJSON");
    }
    read(reader, raw) {
        return reader.readString(raw, read_visitor_1.readVisitor({
            fromString: (input) => {
                if (!reader.trustInput && !this.outToJs.has(input)) {
                    throw incident_1.Incident("Unknown enum variant name", input);
                }
                return this.outToJs.get(input);
            },
        }));
    }
    write(writer, value) {
        return writer.writeString(this.jsToOut.get(value));
    }
    testError(value) {
        if (!this.jsToOut.has(value)) {
            return incident_1.Incident("UnknownVariantError", { value }, "Unknown enum variant value");
        }
        return undefined;
    }
    test(value) {
        return this.jsToOut.has(value);
    }
    equals(val1, val2) {
        return val1 === val2;
    }
    clone(val) {
        return val;
    }
    _applyOptions() {
        if (this._options === undefined) {
            throw lazy_options_1.createLazyOptionsError(this);
        }
        const options = typeof this._options === "function" ? this._options() : this._options;
        const tsEnum = options.enum;
        const changeCase = options.changeCase;
        const rename = options.rename;
        Object.assign(this, { enum: tsEnum, changeCase, rename });
    }
}
exports.TsEnumType = TsEnumType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const lazy_properties_1 = __webpack_require__(16);
const invalid_type_1 = __webpack_require__(21);
const lazy_options_1 = __webpack_require__(17);
const lower_case_1 = __webpack_require__(165);
const max_ucs2_string_length_1 = __webpack_require__(166);
const min_ucs2_string_length_1 = __webpack_require__(167);
const not_trimmed_1 = __webpack_require__(168);
const pattern_not_matched_1 = __webpack_require__(169);
const read_visitor_1 = __webpack_require__(18);
exports.name = "ucs2-string";
/**
 * The type used for simple Javascript strings.
 * Javascript strings expose characters as UCS2 code units. This is a fixed-size encoding that supports the unicode
 * codepoints from U+000000 to U+00FFFF (Basic Multilingual Plane or BMP). Displaying larger codepoints is
 * a property of the environment based on UTF-16 surrogate pairs. Unicode does not, and will never, assign
 * characters to the codepoints from U+OOD800 to U+00DFFF. These spare codepoints allows UTF16 to combine
 * codeunits from 0xd800 to 0xdfff in pairs (called surrogate pairs) to represent codepoints from supplementary planes.
 * This transformation happens during the transition from codeunits to codepoints in UTF-16.
 * In UCS2, the codeunits from 0xd800 to 0xdfff directly produce codepoints in the range from U+OOD8OO to
 * U+OODFF. Then, the display might merge these codepoints into higher codepoints during the rendering.
 *
 *
 * Lets take an example (all the numbers are in hexadecimal):
 *
 * ```
 *                                         +---+---+---+---+---+---+
 * Bytes                                   | 00| 41| d8| 34| dd| 1e|
 *                                         +---+---+---+---+---+---+
 * UTF-16BE codeunits                      | 0x0041| 0xd834| 0xdd1e|
 *                                         +-------+-------+-------+
 * Codepoints (from UTF-16BE)              |  U+41 |   U+01D11E    |
 *                                         +-------+---------------+
 * Displayed (from UTF-16BE)               |   A   |       𝄞       |
 *                                         +-------+-------+-------+
 * UCS2 codeunits                          | 0x0041| 0xd834| 0xdd1e|
 *                                         +-------+-------+-------+
 * Codepoints (from UCS2BE)                |  U+41 | U+D834| U+DD1E|  <- This is what Javascript sees
 *                                         +-------+-------+-------+
 * Displayed (from UCS2BE)                 |   A   |   �   |   �   |  <- This is what the user may see
 *                                         +-------+-------+-------+
 * Displayed (from UCS2BE with surrogates) |   A   |       𝄞       |  <- This is what the user may see
 *                                         +-------+---------------+
 * ```
 *
 * The most important takeaway is that codepoints outside of the BMP are a property of the display, not of
 * the Javascript string.
 * This is the cause of multiple issues.
 * - Surrogate halves are exposed as distinct characters: `"𝄞".length === 2`
 * - Unmatched surrogate halves are allowed: `"\ud834"`
 * - Surrogate pairs in the wrong order are allowed: `"\udd1e\ud834"`
 *
 * If you need to support the full unicode range by manipulating codepoints instead of UCS2 character codes, you may
 * want to use CodepointString or CodepointArray instead of Ucs2String.
 *
 * PS: This type does not deal with Unicdoe normalization either. Use CodepointString and CodepointArray if you need
 * it.
 */
class Ucs2StringType {
    constructor(options) {
        this.name = exports.name;
        // TODO: Remove once TS 2.7 is better supported by editors
        this.allowUnicodeRegExp = undefined;
        this.lowerCase = undefined;
        this.trimmed = undefined;
        this.maxLength = undefined;
        this._options = options;
        if (typeof options !== "function") {
            this._applyOptions();
        }
        else {
            lazy_properties_1.lazyProperties(this, this._applyOptions, ["allowUnicodeRegExp", "pattern", "lowerCase", "trimmed", "minLength", "maxLength"]);
        }
    }
    static fromJSON(options) {
        const resolvedOptions = {
            allowUnicodeRegExp: options.allowUnicodeRegExp,
            lowerCase: options.lowerCase,
            trimmed: options.trimmed,
            maxLength: options.maxLength,
        };
        if (options.pattern !== undefined) {
            resolvedOptions.pattern = new RegExp(options.pattern[0], options.pattern[1]);
        }
        if (options.minLength !== undefined) {
            resolvedOptions.minLength = options.minLength;
        }
        return new Ucs2StringType(resolvedOptions);
    }
    toJSON() {
        const jsonType = {
            name: exports.name,
            allowUnicodeRegExp: this.allowUnicodeRegExp,
            lowerCase: this.lowerCase,
            trimmed: this.trimmed,
            maxLength: this.maxLength,
        };
        if (this.pattern !== undefined) {
            jsonType.pattern = [this.pattern.source, this.pattern.flags];
        }
        if (this.minLength !== undefined) {
            jsonType.minLength = this.minLength;
        }
        return jsonType;
    }
    // TODO: Dynamically add with prototype?
    read(reader, raw) {
        return reader.readString(raw, read_visitor_1.readVisitor({
            fromString: (input) => {
                const error = this.testError(input);
                if (error !== undefined) {
                    throw error;
                }
                return input;
            },
        }));
    }
    // TODO: Dynamically add with prototype?
    write(writer, value) {
        return writer.writeString(value);
    }
    testError(val) {
        if (typeof val !== "string") {
            return invalid_type_1.createInvalidTypeError("string", val);
        }
        if (this.lowerCase && val.toLowerCase() !== val) {
            return lower_case_1.createLowerCaseError(val);
        }
        if (this.trimmed && val.trim() !== val) {
            return not_trimmed_1.createNotTrimmedError(val);
        }
        const strLen = val.length;
        const minLength = this.minLength;
        if (minLength !== undefined && strLen < minLength) {
            return min_ucs2_string_length_1.createMinUcs2StringLengthError(val, minLength);
        }
        if (strLen > this.maxLength) {
            return max_ucs2_string_length_1.createMaxUcs2StringLengthError(val, this.maxLength);
        }
        if (this.pattern instanceof RegExp) {
            if (this.pattern.unicode && !this.allowUnicodeRegExp) {
                throw new incident_1.Incident("UnicodeRegExp", "Disallowed unicode RegExp, use `allowUnicodeRegExp` or `CodepointStringType`");
            }
            if (!this.pattern.test(val)) {
                return pattern_not_matched_1.createPatternNotMatchedError(this.pattern, val);
            }
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        return val1 === val2;
    }
    clone(val) {
        return val;
    }
    diff(oldVal, newVal) {
        return oldVal === newVal ? undefined : [oldVal, newVal];
    }
    patch(oldVal, diff) {
        return diff === undefined ? oldVal : diff[1];
    }
    reverseDiff(diff) {
        return diff === undefined ? undefined : [diff[1], diff[0]];
    }
    squash(diff1, diff2) {
        if (diff1 === undefined) {
            return diff2 === undefined ? undefined : [diff2[0], diff2[1]];
        }
        else if (diff2 === undefined) {
            return [diff1[0], diff1[1]];
        }
        return diff1[0] === diff2[1] ? undefined : [diff1[0], diff2[1]];
    }
    _applyOptions() {
        if (this._options === undefined) {
            throw lazy_options_1.createLazyOptionsError(this);
        }
        const options = typeof this._options === "function" ? this._options() : this._options;
        const allowUnicodeRegExp = options.allowUnicodeRegExp !== undefined ? options.allowUnicodeRegExp : true;
        const pattern = options.pattern;
        const lowerCase = options.lowerCase !== undefined ? options.lowerCase : false;
        const trimmed = options.trimmed !== undefined ? options.trimmed : false;
        const minLength = options.minLength;
        const maxLength = options.maxLength;
        Object.assign(this, { allowUnicodeRegExp, pattern, lowerCase, trimmed, minLength, maxLength });
    }
}
exports.Ucs2StringType = Ucs2StringType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const lazy_properties_1 = __webpack_require__(16);
const invalid_integer_1 = __webpack_require__(174);
const invalid_type_1 = __webpack_require__(21);
const lazy_options_1 = __webpack_require__(17);
const read_visitor_1 = __webpack_require__(18);
exports.name = "integer";
/**
 * Default value for the `min` option.
 * It corresponds to `-(2**53)`.
 */
exports.DEFAULT_MIN = Number.MIN_SAFE_INTEGER - 1;
/**
 * Default value for the `max` option.
 * It corresponds to `2**53 - 1`.
 */
exports.DEFAULT_MAX = Number.MAX_SAFE_INTEGER;
class IntegerType {
    constructor(options) {
        this.name = exports.name;
        // TODO: Remove once TS 2.7 is better supported by editors
        this.min = undefined;
        this.max = undefined;
        if (options === undefined) {
            this._options = {};
            this._applyOptions();
            return;
        }
        this._options = options;
        if (typeof options !== "function") {
            this._applyOptions();
        }
        else {
            lazy_properties_1.lazyProperties(this, this._applyOptions, ["min", "max"]);
        }
    }
    static fromJSON(options) {
        return new IntegerType(options);
    }
    toJSON() {
        return { name: exports.name, min: this.min, max: this.max };
    }
    read(reader, raw) {
        return reader.readFloat64(raw, read_visitor_1.readVisitor({
            fromFloat64: (input) => {
                const error = reader.trustInput ? undefined : this.testError(input);
                if (error !== undefined) {
                    throw error;
                }
                return input;
            },
        }));
    }
    // TODO: Dynamically add with prototype?
    write(writer, value) {
        return writer.writeFloat64(value);
    }
    testError(val) {
        if (typeof val !== "number") {
            return invalid_type_1.createInvalidTypeError("number", val);
        }
        if (Math.round(val) !== val) {
            return invalid_integer_1.createInvalidIntegerError(val);
        }
        if (val < this.min || val > this.max) {
            return new incident_1.Incident("Range", { value: val, min: this.min, max: this.max }, "Integer not in range");
        }
        return undefined;
    }
    test(val) {
        return typeof val === "number" && val >= this.min && val <= this.max && Math.round(val) === val;
    }
    equals(val1, val2) {
        return val1 === val2;
    }
    clone(val) {
        return val;
    }
    diff(oldVal, newVal) {
        return newVal === oldVal ? undefined : newVal - oldVal;
    }
    patch(oldVal, diff) {
        return diff === undefined ? oldVal : oldVal + diff;
    }
    reverseDiff(diff) {
        /* tslint:disable-next-line:strict-boolean-expressions */
        return diff && -diff;
    }
    squash(diff1, diff2) {
        if (diff1 === undefined) {
            return diff2;
        }
        else if (diff2 === undefined) {
            return diff1;
        }
        return diff2 === -diff1 ? undefined : diff1 + diff2;
    }
    _applyOptions() {
        if (this._options === undefined) {
            throw lazy_options_1.createLazyOptionsError(this);
        }
        const options = typeof this._options === "function" ? this._options() : this._options;
        const min = options.min !== undefined ? options.min : exports.DEFAULT_MIN;
        const max = options.max !== undefined ? options.max : exports.DEFAULT_MAX;
        Object.assign(this, { min, max });
    }
}
exports.IntegerType = IntegerType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
const avm1 = __importStar(__webpack_require__(39));
exports.avm1 = avm1;
const fillStyles = __importStar(__webpack_require__(86));
exports.fillStyles = fillStyles;
const filters = __importStar(__webpack_require__(88));
exports.filters = filters;
const joinStyles = __importStar(__webpack_require__(89));
exports.joinStyles = joinStyles;
const morphFillStyles = __importStar(__webpack_require__(90));
exports.morphFillStyles = morphFillStyles;
const morphShapeRecords = __importStar(__webpack_require__(91));
exports.morphShapeRecords = morphShapeRecords;
const shapeRecords = __importStar(__webpack_require__(94));
exports.shapeRecords = shapeRecords;
const tags = __importStar(__webpack_require__(96));
exports.tags = tags;
const text = __importStar(__webpack_require__(355));
exports.text = text;
var blend_mode_1 = __webpack_require__(65);
exports.BlendMode = blend_mode_1.BlendMode;
var cap_style_1 = __webpack_require__(49);
exports.CapStyle = cap_style_1.CapStyle;
var color_space_1 = __webpack_require__(58);
exports.ColorSpace = color_space_1.ColorSpace;
var compression_method_1 = __webpack_require__(356);
exports.CompressionMethod = compression_method_1.CompressionMethod;
var gradient_spread_1 = __webpack_require__(60);
exports.GradientSpread = gradient_spread_1.GradientSpread;
var language_code_1 = __webpack_require__(66);
exports.LanguageCode = language_code_1.LanguageCode;
var _type_1 = __webpack_require__(34);
exports.FillStyleType = _type_1.FillStyleType;
var _type_2 = __webpack_require__(23);
exports.FilterType = _type_2.FilterType;
var _type_3 = __webpack_require__(41);
exports.JoinStyleType = _type_3.JoinStyleType;
var _type_4 = __webpack_require__(35);
exports.MorphFillStyleType = _type_4.MorphFillStyleType;
var _type_5 = __webpack_require__(43);
exports.ShapeRecordType = _type_5.ShapeRecordType;
var _type_6 = __webpack_require__(5);
exports.TagType = _type_6.TagType;
var fixed8p8_1 = __webpack_require__(20);
exports.Fixed8P8 = fixed8p8_1.Fixed8P8;
var fixed16p16_1 = __webpack_require__(25);
exports.Fixed16P16 = fixed16p16_1.Fixed16P16;
var ufixed8p8_1 = __webpack_require__(357);
exports.Ufixed8P8 = ufixed8p8_1.Ufixed8P8;
var ufixed16p16_1 = __webpack_require__(358);
exports.Ufixed16P16 = ufixed16p16_1.Ufixed16P16;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsbURBQXFDO0FBVTVCLG9CQUFJO0FBVGIsZ0VBQWtEO0FBU25DLGdDQUFVO0FBUnpCLHlEQUEyQztBQVFoQiwwQkFBTztBQVBsQyxnRUFBa0Q7QUFPZCxnQ0FBVTtBQU45QywyRUFBNkQ7QUFNYiwwQ0FBZTtBQUwvRCwrRUFBaUU7QUFLQSw4Q0FBaUI7QUFKbEYsb0VBQXNEO0FBSThCLG9DQUFZO0FBSGhHLG1EQUFxQztBQUc2RCxvQkFBSTtBQUZ0RyxtREFBcUM7QUFFbUUsb0JBQUk7QUFFNUcsMkNBQXlDO0FBQWhDLGlDQUFBLFNBQVMsQ0FBQTtBQUNsQix5Q0FBdUM7QUFBOUIsK0JBQUEsUUFBUSxDQUFBO0FBR2pCLDZDQUEyQztBQUFsQyxtQ0FBQSxVQUFVLENBQUE7QUFJbkIsMkRBQXlEO0FBQWhELGlEQUFBLGlCQUFpQixDQUFBO0FBSzFCLHFEQUFtRDtBQUExQywyQ0FBQSxjQUFjLENBQUE7QUFHdkIsaURBQStDO0FBQXRDLHVDQUFBLFlBQVksQ0FBQTtBQXFCckIsNkNBQW9EO0FBQTNDLGdDQUFBLGFBQWEsQ0FBQTtBQUN0Qix5Q0FBNkM7QUFBcEMsNkJBQUEsVUFBVSxDQUFBO0FBQ25CLDZDQUFvRDtBQUEzQyxnQ0FBQSxhQUFhLENBQUE7QUFDdEIsbURBQStEO0FBQXRELHFDQUFBLGtCQUFrQixDQUFBO0FBQzNCLCtDQUF3RDtBQUEvQyxrQ0FBQSxlQUFlLENBQUE7QUFDeEIsc0NBQXVDO0FBQTlCLDBCQUFBLE9BQU8sQ0FBQTtBQUtoQixtREFBa0Q7QUFBekMsOEJBQUEsUUFBUSxDQUFBO0FBQ2pCLHVEQUFzRDtBQUE3QyxrQ0FBQSxVQUFVLENBQUE7QUFFbkIscURBQW9EO0FBQTNDLGdDQUFBLFNBQVMsQ0FBQTtBQUNsQix5REFBd0Q7QUFBL0Msb0NBQUEsV0FBVyxDQUFBIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYXZtMSBmcm9tIFwiLi9hdm0xL2luZGV4XCI7XG5pbXBvcnQgKiBhcyBmaWxsU3R5bGVzIGZyb20gXCIuL2ZpbGwtc3R5bGVzL2luZGV4XCI7XG5pbXBvcnQgKiBhcyBmaWx0ZXJzIGZyb20gXCIuL2ZpbHRlcnMvaW5kZXhcIjtcbmltcG9ydCAqIGFzIGpvaW5TdHlsZXMgZnJvbSBcIi4vam9pbi1zdHlsZXMvaW5kZXhcIjtcbmltcG9ydCAqIGFzIG1vcnBoRmlsbFN0eWxlcyBmcm9tIFwiLi9tb3JwaC1maWxsLXN0eWxlcy9pbmRleFwiO1xuaW1wb3J0ICogYXMgbW9ycGhTaGFwZVJlY29yZHMgZnJvbSBcIi4vbW9ycGgtc2hhcGUtcmVjb3Jkcy9pbmRleFwiO1xuaW1wb3J0ICogYXMgc2hhcGVSZWNvcmRzIGZyb20gXCIuL3NoYXBlLXJlY29yZHMvaW5kZXhcIjtcbmltcG9ydCAqIGFzIHRhZ3MgZnJvbSBcIi4vdGFncy9pbmRleFwiO1xuaW1wb3J0ICogYXMgdGV4dCBmcm9tIFwiLi90ZXh0L2luZGV4XCI7XG5cbmV4cG9ydCB7IGF2bTEsIGZpbGxTdHlsZXMsIGZpbHRlcnMsIGpvaW5TdHlsZXMsIG1vcnBoRmlsbFN0eWxlcywgbW9ycGhTaGFwZVJlY29yZHMsIHNoYXBlUmVjb3JkcywgdGFncywgdGV4dCB9O1xuXG5leHBvcnQgeyBCbGVuZE1vZGUgfSBmcm9tIFwiLi9ibGVuZC1tb2RlXCI7XG5leHBvcnQgeyBDYXBTdHlsZSB9IGZyb20gXCIuL2NhcC1zdHlsZVwiO1xuZXhwb3J0IHsgQ2xpcEFjdGlvbnMgfSBmcm9tIFwiLi9jbGlwLWFjdGlvbnNcIjtcbmV4cG9ydCB7IENsaXBFdmVudEZsYWdzIH0gZnJvbSBcIi4vY2xpcC1ldmVudC1mbGFnc1wiO1xuZXhwb3J0IHsgQ29sb3JTcGFjZSB9IGZyb20gXCIuL2NvbG9yLXNwYWNlXCI7XG5leHBvcnQgeyBDb2xvclN0b3AgfSBmcm9tIFwiLi9jb2xvci1zdG9wXCI7XG5leHBvcnQgeyBDb2xvclRyYW5zZm9ybSB9IGZyb20gXCIuL2NvbG9yLXRyYW5zZm9ybVwiO1xuZXhwb3J0IHsgQ29sb3JUcmFuc2Zvcm1XaXRoQWxwaGEgfSBmcm9tIFwiLi9jb2xvci10cmFuc2Zvcm0td2l0aC1hbHBoYVwiO1xuZXhwb3J0IHsgQ29tcHJlc3Npb25NZXRob2QgfSBmcm9tIFwiLi9jb21wcmVzc2lvbi1tZXRob2RcIjtcbmV4cG9ydCB7IEZpbGxTdHlsZSB9IGZyb20gXCIuL2ZpbGwtc3R5bGVcIjtcbmV4cG9ydCB7IEZpbHRlciB9IGZyb20gXCIuL2ZpbHRlclwiO1xuZXhwb3J0IHsgR2x5cGggfSBmcm9tIFwiLi9nbHlwaFwiO1xuZXhwb3J0IHsgR3JhZGllbnQgfSBmcm9tIFwiLi9ncmFkaWVudFwiO1xuZXhwb3J0IHsgR3JhZGllbnRTcHJlYWQgfSBmcm9tIFwiLi9ncmFkaWVudC1zcHJlYWRcIjtcbmV4cG9ydCB7IEhlYWRlciB9IGZyb20gXCIuL2hlYWRlclwiO1xuZXhwb3J0IHsgSm9pblN0eWxlIH0gZnJvbSBcIi4vam9pbi1zdHlsZVwiO1xuZXhwb3J0IHsgTGFuZ3VhZ2VDb2RlIH0gZnJvbSBcIi4vbGFuZ3VhZ2UtY29kZVwiO1xuZXhwb3J0IHsgTGluZVN0eWxlIH0gZnJvbSBcIi4vbGluZS1zdHlsZVwiO1xuZXhwb3J0IHsgTWF0cml4IH0gZnJvbSBcIi4vbWF0cml4XCI7XG5leHBvcnQgeyBNb3JwaENvbG9yU3RvcCB9IGZyb20gXCIuL21vcnBoLWNvbG9yLXN0b3BcIjtcbmV4cG9ydCB7IE1vcnBoRmlsbFN0eWxlIH0gZnJvbSBcIi4vbW9ycGgtZmlsbC1zdHlsZVwiO1xuZXhwb3J0IHsgTW9ycGhHcmFkaWVudCB9IGZyb20gXCIuL21vcnBoLWdyYWRpZW50XCI7XG5leHBvcnQgeyBNb3JwaExpbmVTdHlsZSB9IGZyb20gXCIuL21vcnBoLWxpbmUtc3R5bGVcIjtcbmV4cG9ydCB7IE1vcnBoU2hhcGUgfSBmcm9tIFwiLi9tb3JwaC1zaGFwZVwiO1xuZXhwb3J0IHsgTW9ycGhTaGFwZVJlY29yZCB9IGZyb20gXCIuL21vcnBoLXNoYXBlLXJlY29yZFwiO1xuZXhwb3J0IHsgTW92aWUgfSBmcm9tIFwiLi9tb3ZpZVwiO1xuZXhwb3J0IHsgTmFtZWRJZCB9IGZyb20gXCIuL25hbWVkLWlkXCI7XG5leHBvcnQgeyBSZWN0IH0gZnJvbSBcIi4vcmVjdFwiO1xuZXhwb3J0IHsgU1JnYjggfSBmcm9tIFwiLi9zLXJnYjhcIjtcbmV4cG9ydCB7IFNoYXBlIH0gZnJvbSBcIi4vc2hhcGVcIjtcbmV4cG9ydCB7IFNoYXBlUmVjb3JkIH0gZnJvbSBcIi4vc2hhcGUtcmVjb3JkXCI7XG5leHBvcnQgeyBTcHJpdGVUYWcgfSBmcm9tIFwiLi9zcHJpdGUtdGFnXCI7XG5leHBvcnQgeyBTdHJhaWdodFNSZ2JhOCB9IGZyb20gXCIuL3N0cmFpZ2h0LXMtcmdiYThcIjtcbmV4cG9ydCB7IFN3ZlNpZ25hdHVyZSB9IGZyb20gXCIuL3N3Zi1zaWduYXR1cmVcIjtcbmV4cG9ydCB7IFRhZyB9IGZyb20gXCIuL3RhZ1wiO1xuZXhwb3J0IHsgVmVjdG9yMkQgfSBmcm9tIFwiLi92ZWN0b3ItMmRcIjtcblxuZXhwb3J0IHsgRmlsbFN0eWxlVHlwZSB9IGZyb20gXCIuL2ZpbGwtc3R5bGVzL190eXBlXCI7XG5leHBvcnQgeyBGaWx0ZXJUeXBlIH0gZnJvbSBcIi4vZmlsdGVycy9fdHlwZVwiO1xuZXhwb3J0IHsgSm9pblN0eWxlVHlwZSB9IGZyb20gXCIuL2pvaW4tc3R5bGVzL190eXBlXCI7XG5leHBvcnQgeyBNb3JwaEZpbGxTdHlsZVR5cGUgfSBmcm9tIFwiLi9tb3JwaC1maWxsLXN0eWxlcy9fdHlwZVwiO1xuZXhwb3J0IHsgU2hhcGVSZWNvcmRUeXBlIH0gZnJvbSBcIi4vc2hhcGUtcmVjb3Jkcy9fdHlwZVwiO1xuZXhwb3J0IHsgVGFnVHlwZSB9IGZyb20gXCIuL3RhZ3MvX3R5cGVcIjtcblxuZXhwb3J0IHsgTGFiZWwgfSBmcm9tIFwiLi9jb250cm9sL2xhYmVsXCI7XG5leHBvcnQgeyBTY2VuZSB9IGZyb20gXCIuL2NvbnRyb2wvc2NlbmVcIjtcblxuZXhwb3J0IHsgRml4ZWQ4UDggfSBmcm9tIFwiLi9maXhlZC1wb2ludC9maXhlZDhwOFwiO1xuZXhwb3J0IHsgRml4ZWQxNlAxNiB9IGZyb20gXCIuL2ZpeGVkLXBvaW50L2ZpeGVkMTZwMTZcIjtcbmV4cG9ydCB7IEZpeGVkUG9pbnQsIEZpeGVkUG9pbnRDb25zdHJ1Y3RvciwgRml4ZWRQb2ludE9wdGlvbnMgfSBmcm9tIFwiLi9maXhlZC1wb2ludC9maXhlZC1wb2ludFwiO1xuZXhwb3J0IHsgVWZpeGVkOFA4IH0gZnJvbSBcIi4vZml4ZWQtcG9pbnQvdWZpeGVkOHA4XCI7XG5leHBvcnQgeyBVZml4ZWQxNlAxNiB9IGZyb20gXCIuL2ZpeGVkLXBvaW50L3VmaXhlZDE2cDE2XCI7XG4iXSwic291cmNlUm9vdCI6IiJ9


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const sint32_1 = __webpack_require__(47);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const fixed16p16_1 = __webpack_require__(25);
exports.$Matrix = new document_1.DocumentType({
    properties: {
        scaleX: { type: fixed16p16_1.Fixed16P16 },
        scaleY: { type: fixed16p16_1.Fixed16P16 },
        rotateSkew0: { type: fixed16p16_1.Fixed16P16 },
        rotateSkew1: { type: fixed16p16_1.Fixed16P16 },
        translateX: { type: sint32_1.$Sint32 },
        translateY: { type: sint32_1.$Sint32 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbWF0cml4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFFbkUseURBQXNEO0FBV3pDLFFBQUEsT0FBTyxHQUEyQixJQUFJLHVCQUFZLENBQVM7SUFDdEUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDMUIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDMUIsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDL0IsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDL0IsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDM0IsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7S0FDNUI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJtYXRyaXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkU2ludDMyIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvc2ludDMyXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IFNpbnQzMiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgRml4ZWQxNlAxNiB9IGZyb20gXCIuL2ZpeGVkLXBvaW50L2ZpeGVkMTZwMTZcIjtcblxuZXhwb3J0IGludGVyZmFjZSBNYXRyaXgge1xuICBzY2FsZVg6IEZpeGVkMTZQMTY7XG4gIHNjYWxlWTogRml4ZWQxNlAxNjtcbiAgcm90YXRlU2tldzA6IEZpeGVkMTZQMTY7XG4gIHJvdGF0ZVNrZXcxOiBGaXhlZDE2UDE2O1xuICB0cmFuc2xhdGVYOiBTaW50MzI7XG4gIHRyYW5zbGF0ZVk6IFNpbnQzMjtcbn1cblxuZXhwb3J0IGNvbnN0ICRNYXRyaXg6IERvY3VtZW50SW9UeXBlPE1hdHJpeD4gPSBuZXcgRG9jdW1lbnRUeXBlPE1hdHJpeD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgc2NhbGVYOiB7dHlwZTogRml4ZWQxNlAxNn0sXG4gICAgc2NhbGVZOiB7dHlwZTogRml4ZWQxNlAxNn0sXG4gICAgcm90YXRlU2tldzA6IHt0eXBlOiBGaXhlZDE2UDE2fSxcbiAgICByb3RhdGVTa2V3MToge3R5cGU6IEZpeGVkMTZQMTZ9LFxuICAgIHRyYW5zbGF0ZVg6IHt0eXBlOiAkU2ludDMyfSxcbiAgICB0cmFuc2xhdGVZOiB7dHlwZTogJFNpbnQzMn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint8_1 = __webpack_require__(22);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const s_rgb8_1 = __webpack_require__(87);
exports.$StraightSRgba8 = new document_1.DocumentType({
    properties: Object.assign({}, s_rgb8_1.$SRgb8.properties, { a: { type: uint8_1.$Uint8 } }),
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc3RyYWlnaHQtcy1yZ2JhOC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtDQUE2QztBQUM3QyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBRW5FLHFDQUFrQztBQUtyQixRQUFBLGVBQWUsR0FBbUMsSUFBSSx1QkFBWSxDQUFpQjtJQUM5RixVQUFVLG9CQUNMLGVBQU0sQ0FBQyxVQUFVLElBQ3BCLENBQUMsRUFBRSxFQUFDLElBQUksRUFBRSxjQUFNLEVBQUMsR0FDbEI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJzdHJhaWdodC1zLXJnYmE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQ4IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDhcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgU3RyYWlnaHRTUmdiYSBhcyBTdHJhaWdodFNSZ2JhLCBVaW50OCB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJFNSZ2I4IH0gZnJvbSBcIi4vcy1yZ2I4XCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RyYWlnaHRTUmdiYTggZXh0ZW5kcyBTdHJhaWdodFNSZ2JhPFVpbnQ4PiB7XG59XG5cbmV4cG9ydCBjb25zdCAkU3RyYWlnaHRTUmdiYTg6IERvY3VtZW50SW9UeXBlPFN0cmFpZ2h0U1JnYmE4PiA9IG5ldyBEb2N1bWVudFR5cGU8U3RyYWlnaHRTUmdiYTg+KHtcbiAgcHJvcGVydGllczoge1xuICAgIC4uLiRTUmdiOC5wcm9wZXJ0aWVzLFxuICAgIGE6IHt0eXBlOiAkVWludDh9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const lazy_properties_1 = __webpack_require__(16);
const invalid_type_1 = __webpack_require__(21);
const lazy_options_1 = __webpack_require__(17);
const not_implemented_1 = __webpack_require__(29);
const read_visitor_1 = __webpack_require__(18);
exports.name = "union";
class TaggedUnionType {
    constructor(options) {
        this.name = exports.name;
        // TODO: Remove once TS 2.7 is better supported by editors
        this.variants = undefined;
        this.tag = undefined;
        this._options = options;
        if (typeof options !== "function") {
            this._applyOptions();
        }
        else {
            lazy_properties_1.lazyProperties(this, this._applyOptions, ["variants", "tag"]);
        }
    }
    toJSON() {
        throw not_implemented_1.createNotImplementedError("UnionType#toJSON");
    }
    match(value) {
        const tag = this.tag;
        const tagValue = value[tag];
        if (tagValue === undefined) {
            return undefined;
            // throw new Incident("MissingTag", {union: this, value});
        }
        const variant = this.getValueToVariantMap().get(tagValue); // tagToVariant
        if (variant === undefined) {
            return undefined;
            // throw new Incident("VariantNotFound", {union: this, value});
        }
        return variant;
    }
    matchTrusted(value) {
        return this.match(value);
    }
    write(writer, value) {
        const variant = this.match(value);
        if (variant === undefined) {
            throw new incident_1.Incident("VariantNotFound", { union: this, value });
        }
        if (variant.write === undefined) {
            throw new incident_1.Incident("NotWritable", { type: variant });
        }
        return variant.write(writer, value);
    }
    read(reader, raw) {
        return this.variantRead(reader, raw)[1];
    }
    variantRead(reader, raw) {
        return reader.readDocument(raw, read_visitor_1.readVisitor({
            fromMap: (input, keyReader, valueReader) => {
                const outTag = this.getOutTag();
                if (!input.has(outTag)) {
                    throw new incident_1.Incident("MissingOutTag");
                }
                const outTagRawValue = input.get(outTag); // TODO: remove cast
                const tagValue = this.getTagType().read(valueReader, outTagRawValue);
                const variant = this.getValueToVariantMap().get(tagValue); // tagToVariant
                if (variant === undefined) {
                    throw new incident_1.Incident("VariantNotFound", { union: this, tagValue });
                }
                return [variant, variant.read(reader, raw)];
            },
        }));
    }
    testError(value) {
        if (typeof value !== "object" || value === null) {
            return invalid_type_1.createInvalidTypeError("object", value);
        }
        const variant = this.match(value);
        if (variant === undefined) {
            return new incident_1.Incident("UnknownUnionVariant", "Unknown union variant");
        }
        return variant.testError(value);
    }
    // testWithVariant(val: T): TestWithVariantResult<T> {
    //   const variant: M | undefined = this.match(val);
    //   if (variant === undefined) {
    //     return [false as false, undefined];
    //   }
    //   return [variant.test(val), variant] as TestWithVariantResult<T>;
    // }
    test(value) {
        if (typeof value !== "object" || value === null) {
            return false;
        }
        const type = this.match(value);
        if (type === undefined) {
            return false;
        }
        return type.test(value);
    }
    // TODO: Always return true?
    equals(val1, val2) {
        const type1 = this.matchTrusted(val1);
        const type2 = this.matchTrusted(val2);
        return type1 === type2 && type1.equals(val1, val2);
    }
    clone(val) {
        return this.matchTrusted(val).clone(val);
    }
    _applyOptions() {
        if (this._options === undefined) {
            throw lazy_options_1.createLazyOptionsError(this);
        }
        const options = typeof this._options === "function"
            ? this._options()
            : this._options;
        delete this._options;
        const variants = options.variants;
        const tag = options.tag;
        Object.assign(this, { variants, tag });
    }
    /**
     * Returns the serialized name of the tag property
     */
    getOutTag() {
        if (this._outTag === undefined) {
            const tag = this.tag;
            let outTag = undefined;
            for (const variant of this.variants) {
                const cur = variant.getOutKey(tag);
                if (outTag === undefined) {
                    outTag = cur;
                }
                else if (cur !== outTag) {
                    throw new incident_1.Incident("MixedOutTag", { tag, out: [cur, outTag] });
                }
            }
            if (outTag === undefined) {
                throw new incident_1.Incident("AssertionFailed", "Expected outTag to be defined");
            }
            this._outTag = outTag;
        }
        return this._outTag;
    }
    getTagType() {
        if (this._tagType === undefined) {
            const tag = this.tag;
            let tagType = undefined;
            for (const variant of this.variants) {
                const lit = variant.properties[tag].type;
                const cur = lit.type;
                if (tagType === undefined) {
                    tagType = cur;
                }
                else if (cur !== tagType) {
                    throw new incident_1.Incident("MixedTagType", { tag, type: [cur, tagType] });
                }
            }
            if (tagType === undefined) {
                throw new incident_1.Incident("AssertionFailed", "Expected tagType to be defined");
            }
            this._tagType = tagType;
        }
        return this._tagType;
    }
    getValueToVariantMap() {
        if (this._valueToVariantMap === undefined) {
            const tag = this.tag;
            const valueToVariantMap = new Map();
            for (const variant of this.variants) {
                const lit = variant.properties[tag].type;
                if (valueToVariantMap.has(lit.value)) {
                    throw new incident_1.Incident("DuplicateTagValue", { value: lit.value });
                }
                valueToVariantMap.set(lit.value, variant);
            }
            if (valueToVariantMap === undefined) {
                throw new incident_1.Incident("AssertionFailed", "Expected valueToVariantMap to be defined");
            }
            this._valueToVariantMap = valueToVariantMap;
        }
        return this._valueToVariantMap;
    }
}
exports.TaggedUnionType = TaggedUnionType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Intercepts reads to the provided `keys` of `target` to run `apply` before returning
 * the value. This allows to initialize these properties lazily.
 * You should ensure that `apply` never throws.
 * Once one of the trapped properties was read, all the properties become normal properties.
 * Call `lazyProperties` on different subsets of keys to have independent lazy properties.
 *
 * Calling `lazyProperties` multiple time on the same key is undefined behavior.
 *
 * @param target The object holding the properties to intercept.
 * @param apply The function called once one of the lazy properties is accessed. Its `this` value
 *              will be `target`.
 * @param keys The names of the properties to intercept.
 */
function lazyProperties(target, apply, keys) {
    function restoreProperties() {
        for (const key of keys) {
            Object.defineProperty(target, key, {
                configurable: true,
                value: undefined,
                writable: true,
            });
        }
        apply.call(target);
    }
    for (const key of keys) {
        Object.defineProperty(target, key, {
            get: () => {
                restoreProperties();
                return target[key];
            },
            set: undefined,
            enumerable: true,
            configurable: true,
        });
    }
}
exports.lazyProperties = lazyProperties;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvX2hlbHBlcnMvbGF6eS1wcm9wZXJ0aWVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7Ozs7Ozs7R0FhRztBQUNILHdCQUFrQyxNQUFTLEVBQUUsS0FBaUIsRUFBRSxJQUF1QjtJQUNyRjtRQUNFLEdBQUcsQ0FBQyxDQUFDLE1BQU0sR0FBRyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDdkIsTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFO2dCQUNqQyxZQUFZLEVBQUUsSUFBSTtnQkFDbEIsS0FBSyxFQUFFLFNBQVM7Z0JBQ2hCLFFBQVEsRUFBRSxJQUFJO2FBQ2YsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUNELEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDckIsQ0FBQztJQUVELEdBQUcsQ0FBQyxDQUFDLE1BQU0sR0FBRyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDdkIsTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFO1lBQ2pDLEdBQUcsRUFBRSxHQUFHLEVBQUU7Z0JBQ1IsaUJBQWlCLEVBQUUsQ0FBQztnQkFDcEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNyQixDQUFDO1lBQ0QsR0FBRyxFQUFFLFNBQVM7WUFDZCxVQUFVLEVBQUUsSUFBSTtZQUNoQixZQUFZLEVBQUUsSUFBSTtTQUNuQixDQUFDLENBQUM7SUFDTCxDQUFDO0FBQ0gsQ0FBQztBQXZCRCx3Q0F1QkMiLCJmaWxlIjoiX2hlbHBlcnMvbGF6eS1wcm9wZXJ0aWVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJbnRlcmNlcHRzIHJlYWRzIHRvIHRoZSBwcm92aWRlZCBga2V5c2Agb2YgYHRhcmdldGAgdG8gcnVuIGBhcHBseWAgYmVmb3JlIHJldHVybmluZ1xuICogdGhlIHZhbHVlLiBUaGlzIGFsbG93cyB0byBpbml0aWFsaXplIHRoZXNlIHByb3BlcnRpZXMgbGF6aWx5LlxuICogWW91IHNob3VsZCBlbnN1cmUgdGhhdCBgYXBwbHlgIG5ldmVyIHRocm93cy5cbiAqIE9uY2Ugb25lIG9mIHRoZSB0cmFwcGVkIHByb3BlcnRpZXMgd2FzIHJlYWQsIGFsbCB0aGUgcHJvcGVydGllcyBiZWNvbWUgbm9ybWFsIHByb3BlcnRpZXMuXG4gKiBDYWxsIGBsYXp5UHJvcGVydGllc2Agb24gZGlmZmVyZW50IHN1YnNldHMgb2Yga2V5cyB0byBoYXZlIGluZGVwZW5kZW50IGxhenkgcHJvcGVydGllcy5cbiAqXG4gKiBDYWxsaW5nIGBsYXp5UHJvcGVydGllc2AgbXVsdGlwbGUgdGltZSBvbiB0aGUgc2FtZSBrZXkgaXMgdW5kZWZpbmVkIGJlaGF2aW9yLlxuICpcbiAqIEBwYXJhbSB0YXJnZXQgVGhlIG9iamVjdCBob2xkaW5nIHRoZSBwcm9wZXJ0aWVzIHRvIGludGVyY2VwdC5cbiAqIEBwYXJhbSBhcHBseSBUaGUgZnVuY3Rpb24gY2FsbGVkIG9uY2Ugb25lIG9mIHRoZSBsYXp5IHByb3BlcnRpZXMgaXMgYWNjZXNzZWQuIEl0cyBgdGhpc2AgdmFsdWVcbiAqICAgICAgICAgICAgICB3aWxsIGJlIGB0YXJnZXRgLlxuICogQHBhcmFtIGtleXMgVGhlIG5hbWVzIG9mIHRoZSBwcm9wZXJ0aWVzIHRvIGludGVyY2VwdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxhenlQcm9wZXJ0aWVzPFQ+KHRhcmdldDogVCwgYXBwbHk6ICgpID0+IHZvaWQsIGtleXM6IEl0ZXJhYmxlPGtleW9mIFQ+KTogdm9pZCB7XG4gIGZ1bmN0aW9uIHJlc3RvcmVQcm9wZXJ0aWVzKCkge1xuICAgIGZvciAoY29uc3Qga2V5IG9mIGtleXMpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwge1xuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiB1bmRlZmluZWQsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgfSk7XG4gICAgfVxuICAgIGFwcGx5LmNhbGwodGFyZ2V0KTtcbiAgfVxuXG4gIGZvciAoY29uc3Qga2V5IG9mIGtleXMpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHtcbiAgICAgIGdldDogKCkgPT4ge1xuICAgICAgICByZXN0b3JlUHJvcGVydGllcygpO1xuICAgICAgICByZXR1cm4gdGFyZ2V0W2tleV07XG4gICAgICB9LFxuICAgICAgc2V0OiB1bmRlZmluZWQsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIH0pO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
}
Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const object_inspect_1 = __importDefault(__webpack_require__(55));
exports.name = "LazyOptions";
function createLazyOptionsError(target) {
    return new incident_1.Incident(exports.name, { target }, ({ target }) => `Cannot resolve lazy options in target: ${object_inspect_1.default(target)}`);
}
exports.createLazyOptionsError = createLazyOptionsError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2xhenktb3B0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLHVDQUFvQztBQUNwQyxvRUFBMkM7QUFHOUIsUUFBQSxJQUFJLEdBQVMsYUFBYSxDQUFDO0FBU3hDLGdDQUF1QyxNQUFXO0lBQ2hELE1BQU0sQ0FBQyxJQUFJLG1CQUFRLENBQUMsWUFBSSxFQUFFLEVBQUMsTUFBTSxFQUFDLEVBQUUsQ0FBQyxFQUFDLE1BQU0sRUFBQyxFQUFFLEVBQUUsQ0FBQywwQ0FBMEMsd0JBQWEsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDdkgsQ0FBQztBQUZELHdEQUVDIiwiZmlsZSI6ImVycm9ycy9sYXp5LW9wdGlvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmNpZGVudCB9IGZyb20gXCJpbmNpZGVudFwiO1xuaW1wb3J0IG9iamVjdEluc3BlY3QgZnJvbSBcIm9iamVjdC1pbnNwZWN0XCI7XG5cbmV4cG9ydCB0eXBlIE5hbWUgPSBcIkxhenlPcHRpb25zXCI7XG5leHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiTGF6eU9wdGlvbnNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEYXRhIHtcbiAgdGFyZ2V0OiBhbnk7XG59XG5cbmV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuZXhwb3J0IHR5cGUgTGF6eU9wdGlvbnNFcnJvciA9IEluY2lkZW50PERhdGEsIE5hbWUsIENhdXNlPjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUxhenlPcHRpb25zRXJyb3IodGFyZ2V0OiBhbnkpOiBMYXp5T3B0aW9uc0Vycm9yIHtcbiAgcmV0dXJuIG5ldyBJbmNpZGVudChuYW1lLCB7dGFyZ2V0fSwgKHt0YXJnZXR9KSA9PiBgQ2Fubm90IHJlc29sdmUgbGF6eSBvcHRpb25zIGluIHRhcmdldDogJHtvYmplY3RJbnNwZWN0KHRhcmdldCl9YCk7XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function fromBoolean(input) {
    throw new Error("Unable to read from boolean");
}
function fromBuffer(input) {
    throw new Error("Unable to read from buffer");
}
function fromDate(input) {
    throw new Error("Unable to read from date");
}
function fromFloat64(input) {
    throw new Error("Unable to read from float64");
}
function fromList(input) {
    throw new Error("Unable to read from list");
}
function fromMap(input) {
    throw new Error("Unable to read from map");
}
function fromNull() {
    throw new Error("Unable to read from null");
}
function fromString(input) {
    throw new Error("Unable to read from string");
}
function readVisitor(partial) {
    return Object.assign({ fromBuffer,
        fromBoolean,
        fromDate,
        fromFloat64,
        fromMap,
        fromNull,
        fromList,
        fromString }, partial);
}
exports.readVisitor = readVisitor;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcmVhZGVycy9yZWFkLXZpc2l0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxxQkFBcUIsS0FBYztJQUNqQyxNQUFNLElBQUksS0FBSyxDQUFDLDZCQUE2QixDQUFDLENBQUM7QUFDakQsQ0FBQztBQUVELG9CQUFvQixLQUFpQjtJQUNuQyxNQUFNLElBQUksS0FBSyxDQUFDLDRCQUE0QixDQUFDLENBQUM7QUFDaEQsQ0FBQztBQUVELGtCQUFrQixLQUFXO0lBQzNCLE1BQU0sSUFBSSxLQUFLLENBQUMsMEJBQTBCLENBQUMsQ0FBQztBQUM5QyxDQUFDO0FBRUQscUJBQXFCLEtBQWE7SUFDaEMsTUFBTSxJQUFJLEtBQUssQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO0FBQ2pELENBQUM7QUFFRCxrQkFBa0IsS0FBb0I7SUFDcEMsTUFBTSxJQUFJLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0FBQzlDLENBQUM7QUFFRCxpQkFBaUIsS0FBb0I7SUFDbkMsTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0FBQzdDLENBQUM7QUFFRDtJQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMsMEJBQTBCLENBQUMsQ0FBQztBQUM5QyxDQUFDO0FBRUQsb0JBQW9CLEtBQWE7SUFDL0IsTUFBTSxJQUFJLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0FBQ2hELENBQUM7QUFFRCxxQkFBK0IsT0FBZ0M7SUFDN0QsTUFBTSxpQkFDSixVQUFVO1FBQ1YsV0FBVztRQUNYLFFBQVE7UUFDUixXQUFXO1FBQ1gsT0FBTztRQUNQLFFBQVE7UUFDUixRQUFRO1FBQ1IsVUFBVSxJQUNQLE9BQU8sRUFDVjtBQUNKLENBQUM7QUFaRCxrQ0FZQyIsImZpbGUiOiJyZWFkZXJzL3JlYWQtdmlzaXRvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlYWRWaXNpdG9yIH0gZnJvbSBcIi4uL3R5cGVzXCI7XG5cbmZ1bmN0aW9uIGZyb21Cb29sZWFuKGlucHV0OiBib29sZWFuKTogbmV2ZXIge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gcmVhZCBmcm9tIGJvb2xlYW5cIik7XG59XG5cbmZ1bmN0aW9uIGZyb21CdWZmZXIoaW5wdXQ6IFVpbnQ4QXJyYXkpOiBuZXZlciB7XG4gIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byByZWFkIGZyb20gYnVmZmVyXCIpO1xufVxuXG5mdW5jdGlvbiBmcm9tRGF0ZShpbnB1dDogRGF0ZSk6IG5ldmVyIHtcbiAgdGhyb3cgbmV3IEVycm9yKFwiVW5hYmxlIHRvIHJlYWQgZnJvbSBkYXRlXCIpO1xufVxuXG5mdW5jdGlvbiBmcm9tRmxvYXQ2NChpbnB1dDogbnVtYmVyKTogbmV2ZXIge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gcmVhZCBmcm9tIGZsb2F0NjRcIik7XG59XG5cbmZ1bmN0aW9uIGZyb21MaXN0KGlucHV0OiBJdGVyYWJsZTxhbnk+KTogbmV2ZXIge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gcmVhZCBmcm9tIGxpc3RcIik7XG59XG5cbmZ1bmN0aW9uIGZyb21NYXAoaW5wdXQ6IE1hcDxhbnksIGFueT4pOiBuZXZlciB7XG4gIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byByZWFkIGZyb20gbWFwXCIpO1xufVxuXG5mdW5jdGlvbiBmcm9tTnVsbCgpOiBuZXZlciB7XG4gIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byByZWFkIGZyb20gbnVsbFwiKTtcbn1cblxuZnVuY3Rpb24gZnJvbVN0cmluZyhpbnB1dDogc3RyaW5nKTogbmV2ZXIge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gcmVhZCBmcm9tIHN0cmluZ1wiKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRWaXNpdG9yPFI+KHBhcnRpYWw6IFBhcnRpYWw8UmVhZFZpc2l0b3I8Uj4+KTogUmVhZFZpc2l0b3I8Uj4ge1xuICByZXR1cm4ge1xuICAgIGZyb21CdWZmZXIsXG4gICAgZnJvbUJvb2xlYW4sXG4gICAgZnJvbURhdGUsXG4gICAgZnJvbUZsb2F0NjQsXG4gICAgZnJvbU1hcCxcbiAgICBmcm9tTnVsbCxcbiAgICBmcm9tTGlzdCxcbiAgICBmcm9tU3RyaW5nLFxuICAgIC4uLnBhcnRpYWwsXG4gIH07XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var ValueType;
(function (ValueType) {
    ValueType[ValueType["CString"] = 0] = "CString";
    ValueType[ValueType["Float32"] = 1] = "Float32";
    ValueType[ValueType["Null"] = 2] = "Null";
    ValueType[ValueType["Undefined"] = 3] = "Undefined";
    ValueType[ValueType["Register"] = 4] = "Register";
    ValueType[ValueType["Boolean"] = 5] = "Boolean";
    ValueType[ValueType["Float64"] = 6] = "Float64";
    ValueType[ValueType["Int32"] = 7] = "Int32";
    ValueType[ValueType["Constant"] = 8] = "Constant";
})(ValueType = exports.ValueType || (exports.ValueType = {}));
exports.$ValueType = new ts_enum_1.TsEnumType({
    enum: ValueType,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS92YWx1ZS10eXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGdEQUFnRDtBQUVoRCxJQUFZLFNBVVg7QUFWRCxXQUFZLFNBQVM7SUFDbkIsK0NBQU8sQ0FBQTtJQUNQLCtDQUFPLENBQUE7SUFDUCx5Q0FBSSxDQUFBO0lBQ0osbURBQVMsQ0FBQTtJQUNULGlEQUFRLENBQUE7SUFDUiwrQ0FBTyxDQUFBO0lBQ1AsK0NBQU8sQ0FBQTtJQUNQLDJDQUFLLENBQUE7SUFDTCxpREFBUSxDQUFBO0FBQ1YsQ0FBQyxFQVZXLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBVXBCO0FBRVksUUFBQSxVQUFVLEdBQTBCLElBQUksb0JBQVUsQ0FBWTtJQUN6RSxJQUFJLEVBQUUsU0FBUztJQUNmLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvdmFsdWUtdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIFZhbHVlVHlwZSB7XG4gIENTdHJpbmcsXG4gIEZsb2F0MzIsXG4gIE51bGwsXG4gIFVuZGVmaW5lZCxcbiAgUmVnaXN0ZXIsXG4gIEJvb2xlYW4sXG4gIEZsb2F0NjQsXG4gIEludDMyLFxuICBDb25zdGFudCxcbn1cblxuZXhwb3J0IGNvbnN0ICRWYWx1ZVR5cGU6IFRzRW51bVR5cGU8VmFsdWVUeXBlPiA9IG5ldyBUc0VudW1UeXBlPFZhbHVlVHlwZT4oe1xuICBlbnVtOiBWYWx1ZVR5cGUsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const fixed_point_1 = __webpack_require__(48);
// tslint:disable-next-line:variable-name
exports.Fixed8P8 = fixed_point_1.createFixedPoint({
    signed: true,
    intBits: 8,
    fracBits: 8,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZml4ZWQtcG9pbnQvZml4ZWQ4cDgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSwrQ0FBb0Y7QUFJcEYseUNBQXlDO0FBQzVCLFFBQUEsUUFBUSxHQUEwQiw4QkFBZ0IsQ0FBQztJQUM5RCxNQUFNLEVBQUUsSUFBSTtJQUNaLE9BQU8sRUFBRSxDQUFDO0lBQ1YsUUFBUSxFQUFFLENBQUM7Q0FDWixDQUFDLENBQUMiLCJmaWxlIjoiZml4ZWQtcG9pbnQvZml4ZWQ4cDguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUYWdnZWQgfSBmcm9tIFwidHMtdGFnZ2VkXCI7XG5pbXBvcnQgeyBjcmVhdGVGaXhlZFBvaW50LCBGaXhlZFBvaW50LCBGaXhlZFBvaW50Q29uc3RydWN0b3IgfSBmcm9tIFwiLi9maXhlZC1wb2ludFwiO1xuXG5leHBvcnQgdHlwZSBGaXhlZDhQOCA9IFRhZ2dlZDxGaXhlZFBvaW50LCBcIkZpeGVkOFA4XCI+O1xuXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6dmFyaWFibGUtbmFtZVxuZXhwb3J0IGNvbnN0IEZpeGVkOFA4OiBGaXhlZFBvaW50Q29uc3RydWN0b3IgPSBjcmVhdGVGaXhlZFBvaW50KHtcbiAgc2lnbmVkOiB0cnVlLFxuICBpbnRCaXRzOiA4LFxuICBmcmFjQml0czogOCxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
}
Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const object_inspect_1 = __importDefault(__webpack_require__(55));
exports.name = "InvalidType";
function format({ typeName, value, variableName }) {
    if (typeof variableName === "string") {
        return `Variable \`${variableName}\` should have type \`${typeName}\`: ${object_inspect_1.default(value)}`;
    }
    else {
        return `Expected type \`${typeName}\`: ${object_inspect_1.default(value)}`;
    }
}
exports.format = format;
function createInvalidTypeError(typeName, value, variableName) {
    return incident_1.Incident(exports.name, { typeName, value, variableName }, format);
}
exports.createInvalidTypeError = createInvalidTypeError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2ludmFsaWQtdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLHVDQUFvQztBQUNwQyxvRUFBMkM7QUFHOUIsUUFBQSxJQUFJLEdBQVMsYUFBYSxDQUFDO0FBdUJ4QyxnQkFBdUIsRUFBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBTztJQUMxRCxFQUFFLENBQUMsQ0FBQyxPQUFPLFlBQVksS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQ3JDLE1BQU0sQ0FBQyxjQUFjLFlBQVkseUJBQXlCLFFBQVEsT0FBTyx3QkFBYSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7SUFDbEcsQ0FBQztJQUFDLElBQUksQ0FBQyxDQUFDO1FBQ04sTUFBTSxDQUFDLG1CQUFtQixRQUFRLE9BQU8sd0JBQWEsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO0lBQ2xFLENBQUM7QUFDSCxDQUFDO0FBTkQsd0JBTUM7QUFFRCxnQ0FBdUMsUUFBZ0IsRUFBRSxLQUFVLEVBQUUsWUFBcUI7SUFDeEYsTUFBTSxDQUFDLG1CQUFRLENBQUMsWUFBSSxFQUFFLEVBQUMsUUFBUSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUNqRSxDQUFDO0FBRkQsd0RBRUMiLCJmaWxlIjoiZXJyb3JzL2ludmFsaWQtdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluY2lkZW50IH0gZnJvbSBcImluY2lkZW50XCI7XG5pbXBvcnQgb2JqZWN0SW5zcGVjdCBmcm9tIFwib2JqZWN0LWluc3BlY3RcIjtcblxuZXhwb3J0IHR5cGUgTmFtZSA9IFwiSW52YWxpZFR5cGVcIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJJbnZhbGlkVHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICAvKipcbiAgICogVGhlIGV4cGVjdGVkIEphdmFzY3JpcHQgdHlwZS4gVGhpcyBpcyBvbmUgb2YgdGhlIHBvc3NpYmxlIHJlc3VsdHMgb2ZcbiAgICogdGhlIGB0eXBlb2ZgIG9wZXJhdG9yLlxuICAgKi9cbiAgdHlwZU5hbWU6IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHZhbHVlIHRoYXQgaGFzIGEgcHJvYmxlbSB3aXRoIGl0cyB0eXBlLlxuICAgKi9cbiAgdmFsdWU6IGFueTtcblxuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIHZhcmlhYmxlIHRoYXQgaGFzIGEgcHJvYmxlbSB3aXRoIGl0cyB0eXBlLlxuICAgKi9cbiAgdmFyaWFibGVOYW1lPzogc3RyaW5nO1xufVxuXG5leHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbmV4cG9ydCB0eXBlIEludmFsaWRUeXBlRXJyb3IgPSBJbmNpZGVudDxEYXRhLCBOYW1lLCBDYXVzZT47XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe3R5cGVOYW1lLCB2YWx1ZSwgdmFyaWFibGVOYW1lfTogRGF0YSk6IHN0cmluZyB7XG4gIGlmICh0eXBlb2YgdmFyaWFibGVOYW1lID09PSBcInN0cmluZ1wiKSB7XG4gICAgcmV0dXJuIGBWYXJpYWJsZSBcXGAke3ZhcmlhYmxlTmFtZX1cXGAgc2hvdWxkIGhhdmUgdHlwZSBcXGAke3R5cGVOYW1lfVxcYDogJHtvYmplY3RJbnNwZWN0KHZhbHVlKX1gO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBgRXhwZWN0ZWQgdHlwZSBcXGAke3R5cGVOYW1lfVxcYDogJHtvYmplY3RJbnNwZWN0KHZhbHVlKX1gO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbnZhbGlkVHlwZUVycm9yKHR5cGVOYW1lOiBzdHJpbmcsIHZhbHVlOiBhbnksIHZhcmlhYmxlTmFtZT86IHN0cmluZyk6IEludmFsaWRUeXBlRXJyb3Ige1xuICByZXR1cm4gSW5jaWRlbnQobmFtZSwge3R5cGVOYW1lLCB2YWx1ZSwgdmFyaWFibGVOYW1lfSwgZm9ybWF0KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const integer_1 = __webpack_require__(11);
exports.$Uint8 = new integer_1.IntegerType({ min: 0, max: 255 });

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnVpbHRpbnMvdWludDgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw4Q0FBK0M7QUFFbEMsUUFBQSxNQUFNLEdBQWdCLElBQUkscUJBQVcsQ0FBQyxFQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBQyxDQUFDLENBQUMiLCJmaWxlIjoiYnVpbHRpbnMvdWludDguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCIuLi90eXBlcy9pbnRlZ2VyXCI7XG5cbmV4cG9ydCBjb25zdCAkVWludDg6IEludGVnZXJUeXBlID0gbmV3IEludGVnZXJUeXBlKHttaW46IDAsIG1heDogMjU1fSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var FilterType;
(function (FilterType) {
    FilterType[FilterType["DropShadow"] = 0] = "DropShadow";
    FilterType[FilterType["Blur"] = 1] = "Blur";
    FilterType[FilterType["Glow"] = 2] = "Glow";
    FilterType[FilterType["Bevel"] = 3] = "Bevel";
    FilterType[FilterType["GradientGlow"] = 4] = "GradientGlow";
    FilterType[FilterType["Convolution"] = 5] = "Convolution";
    FilterType[FilterType["ColorMatrix"] = 6] = "ColorMatrix";
    FilterType[FilterType["GradientBevel"] = 7] = "GradientBevel";
})(FilterType = exports.FilterType || (exports.FilterType = {}));
exports.$FilterType = new ts_enum_1.TsEnumType({
    enum: FilterType,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9fdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxVQVNYO0FBVEQsV0FBWSxVQUFVO0lBQ3BCLHVEQUFVLENBQUE7SUFDViwyQ0FBSSxDQUFBO0lBQ0osMkNBQUksQ0FBQTtJQUNKLDZDQUFLLENBQUE7SUFDTCwyREFBWSxDQUFBO0lBQ1oseURBQVcsQ0FBQTtJQUNYLHlEQUFXLENBQUE7SUFDWCw2REFBYSxDQUFBO0FBQ2YsQ0FBQyxFQVRXLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBU3JCO0FBRVksUUFBQSxXQUFXLEdBQTJCLElBQUksb0JBQVUsQ0FBYTtJQUM1RSxJQUFJLEVBQUUsVUFBVTtJQUNoQixVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJmaWx0ZXJzL190eXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gRmlsdGVyVHlwZSB7XG4gIERyb3BTaGFkb3csXG4gIEJsdXIsXG4gIEdsb3csXG4gIEJldmVsLFxuICBHcmFkaWVudEdsb3csXG4gIENvbnZvbHV0aW9uLFxuICBDb2xvck1hdHJpeCxcbiAgR3JhZGllbnRCZXZlbCxcbn1cblxuZXhwb3J0IGNvbnN0ICRGaWx0ZXJUeXBlOiBUc0VudW1UeXBlPEZpbHRlclR5cGU+ID0gbmV3IFRzRW51bVR5cGU8RmlsdGVyVHlwZT4oe1xuICBlbnVtOiBGaWx0ZXJUeXBlLFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const lazy_properties_1 = __webpack_require__(16);
const invalid_type_1 = __webpack_require__(21);
const lazy_options_1 = __webpack_require__(17);
const max_array_length_1 = __webpack_require__(79);
const not_implemented_1 = __webpack_require__(29);
const read_visitor_1 = __webpack_require__(18);
exports.name = "buffer";
class BufferType {
    constructor(options) {
        this.name = exports.name;
        // TODO: Remove once TS 2.7 is better supported by editors
        this.maxLength = undefined;
        this._options = options;
        if (typeof options !== "function") {
            this._applyOptions();
        }
        else {
            lazy_properties_1.lazyProperties(this, this._applyOptions, ["maxLength"]);
        }
    }
    toJSON() {
        throw not_implemented_1.createNotImplementedError("BufferType#toJSON");
    }
    // TODO: Dynamically add with prototype?
    read(reader, raw) {
        return reader.readBuffer(raw, read_visitor_1.readVisitor({
            fromBuffer(input) {
                return input;
            },
        }));
    }
    // TODO: Dynamically add with prototype?
    write(writer, value) {
        return writer.writeBuffer(value);
    }
    testError(val) {
        if (!(val instanceof Uint8Array)) {
            return invalid_type_1.createInvalidTypeError("Uint8Array", val);
        }
        if (this.maxLength !== undefined && val.length > this.maxLength) {
            return max_array_length_1.createMaxArrayLengthError(val, this.maxLength);
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        if (val2.length !== val1.length) {
            return false;
        }
        for (let i = 0; i < val1.length; i++) {
            if (val2[i] !== val1[i]) {
                return false;
            }
        }
        return true;
    }
    clone(val) {
        return Uint8Array.from(val);
    }
    /**
     * @param oldVal
     * @param newVal
     * @returns `true` if there is a difference, `undefined` otherwise
     */
    diff(oldVal, newVal) {
        throw not_implemented_1.createNotImplementedError("BufferType#diff");
    }
    patch(oldVal, diff) {
        throw not_implemented_1.createNotImplementedError("BufferType#patch");
    }
    reverseDiff(diff) {
        throw not_implemented_1.createNotImplementedError("BufferType#reverseDiff");
    }
    squash(diff1, diff2) {
        throw not_implemented_1.createNotImplementedError("BufferType#squash");
    }
    _applyOptions() {
        if (this._options === undefined) {
            throw lazy_options_1.createLazyOptionsError(this);
        }
        const options = typeof this._options === "function" ? this._options() : this._options;
        const maxLength = options.maxLength;
        Object.assign(this, { maxLength });
    }
}
exports.BufferType = BufferType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const fixed_point_1 = __webpack_require__(48);
// tslint:disable-next-line:variable-name
exports.Fixed16P16 = fixed_point_1.createFixedPoint({
    signed: true,
    intBits: 16,
    fracBits: 16,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZml4ZWQtcG9pbnQvZml4ZWQxNnAxNi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLCtDQUFvRjtBQUlwRix5Q0FBeUM7QUFDNUIsUUFBQSxVQUFVLEdBQTBCLDhCQUFnQixDQUFDO0lBQ2hFLE1BQU0sRUFBRSxJQUFJO0lBQ1osT0FBTyxFQUFFLEVBQUU7SUFDWCxRQUFRLEVBQUUsRUFBRTtDQUNiLENBQUMsQ0FBQyIsImZpbGUiOiJmaXhlZC1wb2ludC9maXhlZDE2cDE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGFnZ2VkIH0gZnJvbSBcInRzLXRhZ2dlZFwiO1xuaW1wb3J0IHsgY3JlYXRlRml4ZWRQb2ludCwgRml4ZWRQb2ludCwgRml4ZWRQb2ludENvbnN0cnVjdG9yIH0gZnJvbSBcIi4vZml4ZWQtcG9pbnRcIjtcblxuZXhwb3J0IHR5cGUgRml4ZWQxNlAxNiA9IFRhZ2dlZDxGaXhlZFBvaW50LCBcIkZpeGVkMTZQMTZcIj47XG5cbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTp2YXJpYWJsZS1uYW1lXG5leHBvcnQgY29uc3QgRml4ZWQxNlAxNjogRml4ZWRQb2ludENvbnN0cnVjdG9yID0gY3JlYXRlRml4ZWRQb2ludCh7XG4gIHNpZ25lZDogdHJ1ZSxcbiAgaW50Qml0czogMTYsXG4gIGZyYWNCaXRzOiAxNixcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const integer_1 = __webpack_require__(11);
exports.$Sint16 = new integer_1.IntegerType({ min: -32768, max: 32767 });

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnVpbHRpbnMvc2ludDE2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsOENBQStDO0FBRWxDLFFBQUEsT0FBTyxHQUFnQixJQUFJLHFCQUFXLENBQUMsRUFBQyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBQyxDQUFDLENBQUMiLCJmaWxlIjoiYnVpbHRpbnMvc2ludDE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW50ZWdlclR5cGUgfSBmcm9tIFwiLi4vdHlwZXMvaW50ZWdlclwiO1xuXG5leHBvcnQgY29uc3QgJFNpbnQxNjogSW50ZWdlclR5cGUgPSBuZXcgSW50ZWdlclR5cGUoe21pbjogLTMyNzY4LCBtYXg6IDMyNzY3fSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 27 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const swf_tree_1 = __webpack_require__(12);
function parseRect(byteStream) {
    const bitStream = byteStream.asBitStream();
    const result = parseRectBits(bitStream);
    bitStream.align();
    return result;
}
exports.parseRect = parseRect;
function parseRectBits(bitStream) {
    const nBits = bitStream.readUint16Bits(5);
    const xMin = bitStream.readSint16Bits(nBits);
    const xMax = bitStream.readSint16Bits(nBits);
    const yMin = bitStream.readSint16Bits(nBits);
    const yMax = bitStream.readSint16Bits(nBits);
    return { xMin, xMax, yMin, yMax };
}
exports.parseRectBits = parseRectBits;
function parseSRgb8(byteStream) {
    return {
        r: byteStream.readUint8(),
        g: byteStream.readUint8(),
        b: byteStream.readUint8(),
    };
}
exports.parseSRgb8 = parseSRgb8;
function parseStraightSRgba8(byteStream) {
    return {
        r: byteStream.readUint8(),
        g: byteStream.readUint8(),
        b: byteStream.readUint8(),
        a: byteStream.readUint8(),
    };
}
exports.parseStraightSRgba8 = parseStraightSRgba8;
function parseMatrix(byteStream) {
    const bitStream = byteStream.asBitStream();
    const result = parseMatrixBits(bitStream);
    bitStream.align();
    return result;
}
exports.parseMatrix = parseMatrix;
function parseMatrixBits(bitStream) {
    const hasScale = bitStream.readBoolBits();
    let scaleX;
    let scaleY;
    if (hasScale) {
        const scaleBits = bitStream.readUint16Bits(5);
        scaleX = bitStream.readFixed16P16Bits(scaleBits);
        scaleY = bitStream.readFixed16P16Bits(scaleBits);
    }
    else {
        scaleX = swf_tree_1.Fixed16P16.fromValue(1);
        scaleY = swf_tree_1.Fixed16P16.fromValue(1);
    }
    const hasSkew = bitStream.readBoolBits();
    let skew0;
    let skew1;
    if (hasSkew) {
        const skewBits = bitStream.readUint16Bits(5);
        skew0 = bitStream.readFixed16P16Bits(skewBits);
        skew1 = bitStream.readFixed16P16Bits(skewBits);
    }
    else {
        skew0 = swf_tree_1.Fixed16P16.fromValue(0);
        skew1 = swf_tree_1.Fixed16P16.fromValue(0);
    }
    const translateBits = bitStream.readUint16Bits(5);
    const translateX = bitStream.readSint16Bits(translateBits);
    const translateY = bitStream.readSint16Bits(translateBits);
    return {
        scaleX,
        scaleY,
        rotateSkew0: skew0,
        rotateSkew1: skew1,
        translateX,
        translateY,
    };
}
exports.parseMatrixBits = parseMatrixBits;
function parseColorTransform(byteStream) {
    const bitStream = byteStream.asBitStream();
    const result = parseColorTransformBits(bitStream);
    bitStream.align();
    return result;
}
exports.parseColorTransform = parseColorTransform;
function parseColorTransformBits(bitStream) {
    const hasAdd = bitStream.readBoolBits();
    const hasMult = bitStream.readBoolBits();
    const nBits = bitStream.readUint16Bits(4);
    let redMult;
    let greenMult;
    let blueMult;
    if (hasMult) {
        redMult = swf_tree_1.Fixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));
        greenMult = swf_tree_1.Fixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));
        blueMult = swf_tree_1.Fixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));
    }
    else {
        redMult = swf_tree_1.Fixed8P8.fromValue(1);
        greenMult = swf_tree_1.Fixed8P8.fromValue(1);
        blueMult = swf_tree_1.Fixed8P8.fromValue(1);
    }
    let redAdd;
    let greenAdd;
    let blueAdd;
    if (hasAdd) {
        redAdd = bitStream.readSint16Bits(nBits);
        greenAdd = bitStream.readSint16Bits(nBits);
        blueAdd = bitStream.readSint16Bits(nBits);
    }
    else {
        redAdd = 0;
        greenAdd = 0;
        blueAdd = 0;
    }
    return {
        redMult,
        greenMult,
        blueMult,
        redAdd,
        greenAdd,
        blueAdd,
    };
}
exports.parseColorTransformBits = parseColorTransformBits;
function parseColorTransformWithAlpha(byteStream) {
    const bitStream = byteStream.asBitStream();
    const result = parseColorTransformWithAlphaBits(bitStream);
    byteStream.align();
    return result;
}
exports.parseColorTransformWithAlpha = parseColorTransformWithAlpha;
function parseColorTransformWithAlphaBits(bitStream) {
    const hasAdd = bitStream.readBoolBits();
    const hasMult = bitStream.readBoolBits();
    const nBits = bitStream.readUint16Bits(4);
    let redMult;
    let greenMult;
    let blueMult;
    let alphaMult;
    if (hasMult) {
        redMult = swf_tree_1.Fixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));
        greenMult = swf_tree_1.Fixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));
        blueMult = swf_tree_1.Fixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));
        alphaMult = swf_tree_1.Fixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));
    }
    else {
        redMult = swf_tree_1.Fixed8P8.fromValue(1);
        greenMult = swf_tree_1.Fixed8P8.fromValue(1);
        blueMult = swf_tree_1.Fixed8P8.fromValue(1);
        alphaMult = swf_tree_1.Fixed8P8.fromValue(1);
    }
    let redAdd;
    let greenAdd;
    let blueAdd;
    let alphaAdd;
    if (hasAdd) {
        redAdd = bitStream.readSint16Bits(nBits);
        greenAdd = bitStream.readSint16Bits(nBits);
        blueAdd = bitStream.readSint16Bits(nBits);
        alphaAdd = bitStream.readSint16Bits(nBits);
    }
    else {
        redAdd = 0;
        greenAdd = 0;
        blueAdd = 0;
        alphaAdd = 0;
    }
    return {
        redMult,
        greenMult,
        blueMult,
        alphaMult,
        redAdd,
        greenAdd,
        blueAdd,
        alphaAdd,
    };
}
exports.parseColorTransformWithAlphaBits = parseColorTransformWithAlphaBits;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
exports.name = "NotImplemented";
function createNotImplementedError(message) {
    return incident_1.Incident(exports.name, message);
}
exports.createNotImplementedError = createNotImplementedError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL25vdC1pbXBsZW1lbnRlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFvQztBQUd2QixRQUFBLElBQUksR0FBUyxnQkFBZ0IsQ0FBQztBQVEzQyxtQ0FBMEMsT0FBZTtJQUN2RCxNQUFNLENBQUMsbUJBQVEsQ0FBQyxZQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDakMsQ0FBQztBQUZELDhEQUVDIiwiZmlsZSI6ImVycm9ycy9ub3QtaW1wbGVtZW50ZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmNpZGVudCB9IGZyb20gXCJpbmNpZGVudFwiO1xuXG5leHBvcnQgdHlwZSBOYW1lID0gXCJOb3RJbXBsZW1lbnRlZFwiO1xuZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcIk5vdEltcGxlbWVudGVkXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG59XG5cbmV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuZXhwb3J0IHR5cGUgTm90SW1wbGVtZW50ZWRFcnJvciA9IEluY2lkZW50PERhdGEsIE5hbWUsIENhdXNlPjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU5vdEltcGxlbWVudGVkRXJyb3IobWVzc2FnZTogc3RyaW5nKTogTm90SW1wbGVtZW50ZWRFcnJvciB7XG4gIHJldHVybiBJbmNpZGVudChuYW1lLCBtZXNzYWdlKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(368)
var ieee754 = __webpack_require__(369)
var isArray = __webpack_require__(115)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)))

/***/ }),
/* 31 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.



/*<replacement>*/

var processNextTick = __webpack_require__(51).nextTick;
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = __webpack_require__(46);
util.inherits = __webpack_require__(38);
/*</replacement>*/

var Readable = __webpack_require__(116);
var Writable = __webpack_require__(69);

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  processNextTick(cb, err);
};

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const lazy_properties_1 = __webpack_require__(16);
const invalid_float64_1 = __webpack_require__(225);
const invalid_type_1 = __webpack_require__(21);
const lazy_options_1 = __webpack_require__(17);
const read_visitor_1 = __webpack_require__(18);
exports.name = "float64";
// tslint:disable:max-line-length
class Float64Type {
    constructor(options) {
        this.name = exports.name;
        // TODO: Remove once TS 2.7 is better supported by editors
        this.allowNaN = undefined;
        this.allowInfinity = undefined;
        this._options = options !== undefined ? options : {};
        if (typeof options !== "function") {
            this._applyOptions();
        }
        else {
            lazy_properties_1.lazyProperties(this, this._applyOptions, ["allowNaN", "allowInfinity"]);
        }
    }
    static fromJSON(options) {
        return new Float64Type(options);
    }
    toJSON() {
        return {
            name: exports.name,
            allowNaN: this.allowNaN,
            allowInfinity: this.allowInfinity,
        };
    }
    read(reader, raw) {
        return reader.readFloat64(raw, read_visitor_1.readVisitor({
            fromFloat64: (input) => {
                const error = reader.trustInput ? undefined : this.testError(input);
                if (error !== undefined) {
                    throw error;
                }
                return input;
            },
        }));
    }
    // TODO: Dynamically add with prototype?
    write(writer, value) {
        return writer.writeFloat64(value);
    }
    testError(val) {
        if (typeof val !== "number") {
            return invalid_type_1.createInvalidTypeError("number", val);
        }
        if (isNaN(val) && !this.allowNaN) {
            return invalid_float64_1.createInvalidFloat64Error(val);
        }
        else if (Math.abs(val) === Infinity && !this.allowInfinity) {
            return invalid_float64_1.createInvalidFloat64Error(val);
        }
        return undefined;
    }
    test(val) {
        return typeof val === "number" && (this.allowNaN || !isNaN(val)) && (this.allowInfinity || Math.abs(val) !== Infinity);
    }
    equals(val1, val2) {
        if (isNaN(val1) || isNaN(val2)) {
            return isNaN(val1) && isNaN(val2);
        }
        return val1 === val2;
    }
    clone(val) {
        return val;
    }
    diff(oldVal, newVal) {
        // We can't use an arithmetic difference due to possible precision loss
        return this.equals(oldVal, newVal) ? undefined : [oldVal, newVal];
    }
    patch(oldVal, diff) {
        return diff === undefined ? oldVal : diff[1];
    }
    reverseDiff(diff) {
        return diff === undefined ? undefined : [diff[1], diff[0]];
    }
    squash(diff1, diff2) {
        if (diff1 === undefined) {
            return diff2 === undefined ? undefined : [diff2[0], diff2[1]];
        }
        else if (diff2 === undefined) {
            return [diff1[0], diff1[1]];
        }
        return this.equals(diff1[0], diff2[1]) ? undefined : [diff1[0], diff2[1]];
    }
    _applyOptions() {
        if (this._options === undefined) {
            throw lazy_options_1.createLazyOptionsError(this);
        }
        const options = typeof this._options === "function" ? this._options() : this._options;
        const allowNaN = options.allowNaN !== undefined ? options.allowNaN : false;
        const allowInfinity = options.allowInfinity !== undefined ? options.allowInfinity : false;
        Object.assign(this, { allowNaN, allowInfinity });
    }
}
exports.Float64Type = Float64Type;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var FillStyleType;
(function (FillStyleType) {
    FillStyleType[FillStyleType["Bitmap"] = 0] = "Bitmap";
    FillStyleType[FillStyleType["FocalGradient"] = 1] = "FocalGradient";
    FillStyleType[FillStyleType["LinearGradient"] = 2] = "LinearGradient";
    FillStyleType[FillStyleType["RadialGradient"] = 3] = "RadialGradient";
    FillStyleType[FillStyleType["Solid"] = 4] = "Solid";
})(FillStyleType = exports.FillStyleType || (exports.FillStyleType = {}));
exports.$FillStyleType = new ts_enum_1.TsEnumType({
    enum: FillStyleType,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvX3R5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsZ0RBQWdEO0FBRWhELElBQVksYUFNWDtBQU5ELFdBQVksYUFBYTtJQUN2QixxREFBTSxDQUFBO0lBQ04sbUVBQWEsQ0FBQTtJQUNiLHFFQUFjLENBQUE7SUFDZCxxRUFBYyxDQUFBO0lBQ2QsbURBQUssQ0FBQTtBQUNQLENBQUMsRUFOVyxhQUFhLEdBQWIscUJBQWEsS0FBYixxQkFBYSxRQU14QjtBQUVZLFFBQUEsY0FBYyxHQUE4QixJQUFJLG9CQUFVLENBQWdCO0lBQ3JGLElBQUksRUFBRSxhQUFhO0lBQ25CLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImZpbGwtc3R5bGVzL190eXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gRmlsbFN0eWxlVHlwZSB7XG4gIEJpdG1hcCxcbiAgRm9jYWxHcmFkaWVudCxcbiAgTGluZWFyR3JhZGllbnQsXG4gIFJhZGlhbEdyYWRpZW50LFxuICBTb2xpZCxcbn1cblxuZXhwb3J0IGNvbnN0ICRGaWxsU3R5bGVUeXBlOiBUc0VudW1UeXBlPEZpbGxTdHlsZVR5cGU+ID0gbmV3IFRzRW51bVR5cGU8RmlsbFN0eWxlVHlwZT4oe1xuICBlbnVtOiBGaWxsU3R5bGVUeXBlLFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var MorphFillStyleType;
(function (MorphFillStyleType) {
    MorphFillStyleType[MorphFillStyleType["Bitmap"] = 0] = "Bitmap";
    MorphFillStyleType[MorphFillStyleType["FocalGradient"] = 1] = "FocalGradient";
    MorphFillStyleType[MorphFillStyleType["LinearGradient"] = 2] = "LinearGradient";
    MorphFillStyleType[MorphFillStyleType["RadialGradient"] = 3] = "RadialGradient";
    MorphFillStyleType[MorphFillStyleType["Solid"] = 4] = "Solid";
})(MorphFillStyleType = exports.MorphFillStyleType || (exports.MorphFillStyleType = {}));
exports.$MorphFillStyleType = new ts_enum_1.TsEnumType({
    enum: MorphFillStyleType,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtZmlsbC1zdHlsZXMvX3R5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsZ0RBQWdEO0FBRWhELElBQVksa0JBTVg7QUFORCxXQUFZLGtCQUFrQjtJQUM1QiwrREFBTSxDQUFBO0lBQ04sNkVBQWEsQ0FBQTtJQUNiLCtFQUFjLENBQUE7SUFDZCwrRUFBYyxDQUFBO0lBQ2QsNkRBQUssQ0FBQTtBQUNQLENBQUMsRUFOVyxrQkFBa0IsR0FBbEIsMEJBQWtCLEtBQWxCLDBCQUFrQixRQU03QjtBQUVZLFFBQUEsbUJBQW1CLEdBQW1DLElBQUksb0JBQVUsQ0FBcUI7SUFDcEcsSUFBSSxFQUFFLGtCQUFrQjtJQUN4QixVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJtb3JwaC1maWxsLXN0eWxlcy9fdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIE1vcnBoRmlsbFN0eWxlVHlwZSB7XG4gIEJpdG1hcCxcbiAgRm9jYWxHcmFkaWVudCxcbiAgTGluZWFyR3JhZGllbnQsXG4gIFJhZGlhbEdyYWRpZW50LFxuICBTb2xpZCxcbn1cblxuZXhwb3J0IGNvbnN0ICRNb3JwaEZpbGxTdHlsZVR5cGU6IFRzRW51bVR5cGU8TW9ycGhGaWxsU3R5bGVUeXBlPiA9IG5ldyBUc0VudW1UeXBlPE1vcnBoRmlsbFN0eWxlVHlwZT4oe1xuICBlbnVtOiBNb3JwaEZpbGxTdHlsZVR5cGUsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const sint32_1 = __webpack_require__(47);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
exports.$Vector2D = new document_1.DocumentType({
    properties: {
        x: { type: sint32_1.$Sint32 },
        y: { type: sint32_1.$Sint32 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdmVjdG9yLTJkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFRdEQsUUFBQSxTQUFTLEdBQTZCLElBQUksdUJBQVksQ0FBVztJQUM1RSxVQUFVLEVBQUU7UUFDVixDQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUNsQixDQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztLQUNuQjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InZlY3Rvci0yZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRTaW50MzIgfSBmcm9tIFwia3J5by9idWlsdGlucy9zaW50MzJcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgU2ludDMyIH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVmVjdG9yMkQge1xuICB4OiBTaW50MzI7XG4gIHk6IFNpbnQzMjtcbn1cblxuZXhwb3J0IGNvbnN0ICRWZWN0b3IyRDogRG9jdW1lbnRJb1R5cGU8VmVjdG9yMkQ+ID0gbmV3IERvY3VtZW50VHlwZTxWZWN0b3IyRD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgeDoge3R5cGU6ICRTaW50MzJ9LFxuICAgIHk6IHt0eXBlOiAkU2ludDMyfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const integer_1 = __webpack_require__(11);
exports.$Uint32 = new integer_1.IntegerType({ min: 0, max: 4294967295 });

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnVpbHRpbnMvdWludDMyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsOENBQStDO0FBRWxDLFFBQUEsT0FBTyxHQUFnQixJQUFJLHFCQUFXLENBQUMsRUFBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxVQUFVLEVBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImJ1aWx0aW5zL3VpbnQzMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEludGVnZXJUeXBlIH0gZnJvbSBcIi4uL3R5cGVzL2ludGVnZXJcIjtcblxuZXhwb3J0IGNvbnN0ICRVaW50MzI6IEludGVnZXJUeXBlID0gbmV3IEludGVnZXJUeXBlKHttaW46IDAsIG1heDogNDI5NDk2NzI5NX0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 38 */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
var action_1 = __webpack_require__(40);
exports.$Action = action_1.$Action;
var action_type_1 = __webpack_require__(3);
exports.$ActionType = action_type_1.$ActionType;
exports.ActionType = action_type_1.ActionType;
var catch_target_1 = __webpack_require__(84);
exports.$CatchTarget = catch_target_1.$CatchTarget;
var _type_1 = __webpack_require__(56);
exports.$CatchTargetType = _type_1.$CatchTargetType;
exports.CatchTargetType = _type_1.CatchTargetType;
var get_url2_method_1 = __webpack_require__(81);
exports.$GetUrl2Method = get_url2_method_1.$GetUrl2Method;
exports.GetUrl2Method = get_url2_method_1.GetUrl2Method;
var parameter_1 = __webpack_require__(80);
exports.$Parameter = parameter_1.$Parameter;
var value_1 = __webpack_require__(82);
exports.$Value = value_1.$Value;
var value_type_1 = __webpack_require__(19);
exports.$ValueType = value_type_1.$ValueType;
exports.ValueType = value_type_1.ValueType;
const actions = __importStar(__webpack_require__(78));
exports.actions = actions;
const catchTargets = __importStar(__webpack_require__(85));
exports.catchTargets = catchTargets;
const values = __importStar(__webpack_require__(83));
exports.values = values;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxtQ0FBMkM7QUFBbEMsMkJBQUEsT0FBTyxDQUFBO0FBQ2hCLDZDQUF3RDtBQUEvQyxvQ0FBQSxXQUFXLENBQUE7QUFBRSxtQ0FBQSxVQUFVLENBQUE7QUFDaEMsK0NBQTJEO0FBQWxELHNDQUFBLFlBQVksQ0FBQTtBQUNyQiwrQ0FBMEU7QUFBakUsbUNBQUEsZ0JBQWdCLENBQUE7QUFBRSxrQ0FBQSxlQUFlLENBQUE7QUFDMUMscURBQWtFO0FBQXpELDJDQUFBLGNBQWMsQ0FBQTtBQUFFLDBDQUFBLGFBQWEsQ0FBQTtBQUN0Qyx5Q0FBb0Q7QUFBM0MsaUNBQUEsVUFBVSxDQUFBO0FBQ25CLGlDQUF3QztBQUEvQix5QkFBQSxNQUFNLENBQUE7QUFDZiwyQ0FBcUQ7QUFBNUMsa0NBQUEsVUFBVSxDQUFBO0FBQUUsaUNBQUEsU0FBUyxDQUFBO0FBRTlCLHlEQUEyQztBQUlsQywwQkFBTztBQUhoQixvRUFBc0Q7QUFHcEMsb0NBQVk7QUFGOUIsdURBQXlDO0FBRVQsd0JBQU0iLCJmaWxlIjoiYXZtMS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7ICRBY3Rpb24sIEFjdGlvbiB9IGZyb20gXCIuL2FjdGlvblwiO1xuZXhwb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi9hY3Rpb24tdHlwZVwiO1xuZXhwb3J0IHsgJENhdGNoVGFyZ2V0LCBDYXRjaFRhcmdldCB9IGZyb20gXCIuL2NhdGNoLXRhcmdldFwiO1xuZXhwb3J0IHsgJENhdGNoVGFyZ2V0VHlwZSwgQ2F0Y2hUYXJnZXRUeXBlIH0gZnJvbSBcIi4vY2F0Y2gtdGFyZ2V0cy9fdHlwZVwiO1xuZXhwb3J0IHsgJEdldFVybDJNZXRob2QsIEdldFVybDJNZXRob2QgfSBmcm9tIFwiLi9nZXQtdXJsMi1tZXRob2RcIjtcbmV4cG9ydCB7ICRQYXJhbWV0ZXIsIFBhcmFtZXRlciB9IGZyb20gXCIuL3BhcmFtZXRlclwiO1xuZXhwb3J0IHsgJFZhbHVlLCBWYWx1ZSB9IGZyb20gXCIuL3ZhbHVlXCI7XG5leHBvcnQgeyAkVmFsdWVUeXBlLCBWYWx1ZVR5cGUgfSBmcm9tIFwiLi92YWx1ZS10eXBlXCI7XG5cbmltcG9ydCAqIGFzIGFjdGlvbnMgZnJvbSBcIi4vYWN0aW9ucy9pbmRleFwiO1xuaW1wb3J0ICogYXMgY2F0Y2hUYXJnZXRzIGZyb20gXCIuL2NhdGNoLXRhcmdldHMvaW5kZXhcIjtcbmltcG9ydCAqIGFzIHZhbHVlcyBmcm9tIFwiLi92YWx1ZXMvaW5kZXhcIjtcblxuZXhwb3J0IHsgYWN0aW9ucywgY2F0Y2hUYXJnZXRzLCB2YWx1ZXMgfTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
const tagged_union_1 = __webpack_require__(15);
const actions = __importStar(__webpack_require__(78));
exports.$Action = new tagged_union_1.TaggedUnionType(() => ({
    variants: [
        actions.$Unknown,
        actions.$Add,
        actions.$Add2,
        actions.$And,
        actions.$AsciiToChar,
        actions.$BitAnd,
        actions.$BitLShift,
        actions.$BitOr,
        actions.$BitRShift,
        actions.$BitURShift,
        actions.$BitXor,
        actions.$Call,
        actions.$CallFunction,
        actions.$CallMethod,
        actions.$CastOp,
        actions.$CharToAscii,
        actions.$CloneSprite,
        actions.$ConstantPool,
        actions.$Decrement,
        actions.$DefineFunction,
        actions.$DefineFunction2,
        actions.$DefineLocal,
        actions.$DefineLocal2,
        actions.$Delete,
        actions.$Delete2,
        actions.$Divide,
        actions.$EndDrag,
        actions.$Enumerate,
        actions.$Enumerate2,
        actions.$Equals,
        actions.$Equals2,
        actions.$Extends,
        actions.$FsCommand2,
        actions.$GetMember,
        actions.$GetProperty,
        actions.$GetTime,
        actions.$GetUrl,
        actions.$GetUrl2,
        actions.$GetVariable,
        actions.$GotoFrame,
        actions.$GotoFrame2,
        actions.$GotoLabel,
        actions.$Greater,
        actions.$If,
        actions.$ImplementsOp,
        actions.$Increment,
        actions.$InitArray,
        actions.$InitObject,
        actions.$InstanceOf,
        actions.$Jump,
        actions.$Less,
        actions.$Less2,
        actions.$MbAsciiToChar,
        actions.$MbCharToAscii,
        actions.$MbStringExtract,
        actions.$MbStringLength,
        actions.$Modulo,
        actions.$Multiply,
        actions.$NewMethod,
        actions.$NewObject,
        actions.$NextFrame,
        actions.$Not,
        actions.$Or,
        actions.$Play,
        actions.$Pop,
        actions.$PreviousFrame,
        actions.$Push,
        actions.$PushDuplicate,
        actions.$RandomNumber,
        actions.$RemoveSprite,
        actions.$Return,
        actions.$SetMember,
        actions.$SetProperty,
        actions.$SetTarget,
        actions.$SetTarget2,
        actions.$SetVariable,
        actions.$StackSwap,
        actions.$StartDrag,
        actions.$Stop,
        actions.$StopSounds,
        actions.$StoreRegister,
        actions.$StrictEquals,
        actions.$StrictMode,
        actions.$StringAdd,
        actions.$StringEquals,
        actions.$StringExtract,
        actions.$StringGreater,
        actions.$StringLength,
        actions.$StringLess,
        actions.$Subtract,
        actions.$TargetPath,
        actions.$Throw,
        actions.$ToggleQuality,
        actions.$ToInteger,
        actions.$ToNumber,
        actions.$ToString,
        actions.$Trace,
        actions.$Try,
        actions.$TypeOf,
        actions.$WaitForFrame,
        actions.$WaitForFrame2,
        actions.$With,
    ],
    tag: "action",
}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var JoinStyleType;
(function (JoinStyleType) {
    JoinStyleType[JoinStyleType["Bevel"] = 0] = "Bevel";
    JoinStyleType[JoinStyleType["Miter"] = 1] = "Miter";
    JoinStyleType[JoinStyleType["Round"] = 2] = "Round";
})(JoinStyleType = exports.JoinStyleType || (exports.JoinStyleType = {}));
exports.$JoinStyleType = new ts_enum_1.TsEnumType({
    enum: JoinStyleType,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvam9pbi1zdHlsZXMvX3R5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsZ0RBQWdEO0FBRWhELElBQVksYUFJWDtBQUpELFdBQVksYUFBYTtJQUN2QixtREFBSyxDQUFBO0lBQ0wsbURBQUssQ0FBQTtJQUNMLG1EQUFLLENBQUE7QUFDUCxDQUFDLEVBSlcsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFJeEI7QUFFWSxRQUFBLGNBQWMsR0FBOEIsSUFBSSxvQkFBVSxDQUFnQjtJQUNyRixJQUFJLEVBQUUsYUFBYTtJQUNuQixVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJqb2luLXN0eWxlcy9fdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIEpvaW5TdHlsZVR5cGUge1xuICBCZXZlbCxcbiAgTWl0ZXIsXG4gIFJvdW5kLFxufVxuXG5leHBvcnQgY29uc3QgJEpvaW5TdHlsZVR5cGU6IFRzRW51bVR5cGU8Sm9pblN0eWxlVHlwZT4gPSBuZXcgVHNFbnVtVHlwZTxKb2luU3R5bGVUeXBlPih7XG4gIGVudW06IEpvaW5TdHlsZVR5cGUsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var MorphShapeRecordType;
(function (MorphShapeRecordType) {
    MorphShapeRecordType[MorphShapeRecordType["MorphCurvedEdge"] = 0] = "MorphCurvedEdge";
    MorphShapeRecordType[MorphShapeRecordType["MorphStraightEdge"] = 1] = "MorphStraightEdge";
    MorphShapeRecordType[MorphShapeRecordType["MorphStyleChange"] = 2] = "MorphStyleChange";
})(MorphShapeRecordType = exports.MorphShapeRecordType || (exports.MorphShapeRecordType = {}));
exports.$MorphShapeRecordType = new ts_enum_1.TsEnumType({
    enum: MorphShapeRecordType,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtc2hhcGUtcmVjb3Jkcy9fdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxvQkFJWDtBQUpELFdBQVksb0JBQW9CO0lBQzlCLHFGQUFlLENBQUE7SUFDZix5RkFBaUIsQ0FBQTtJQUNqQix1RkFBZ0IsQ0FBQTtBQUNsQixDQUFDLEVBSlcsb0JBQW9CLEdBQXBCLDRCQUFvQixLQUFwQiw0QkFBb0IsUUFJL0I7QUFFWSxRQUFBLHFCQUFxQixHQUFxQyxJQUFJLG9CQUFVLENBQXVCO0lBQzFHLElBQUksRUFBRSxvQkFBb0I7SUFDMUIsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoibW9ycGgtc2hhcGUtcmVjb3Jkcy9fdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIE1vcnBoU2hhcGVSZWNvcmRUeXBlIHtcbiAgTW9ycGhDdXJ2ZWRFZGdlLFxuICBNb3JwaFN0cmFpZ2h0RWRnZSxcbiAgTW9ycGhTdHlsZUNoYW5nZSxcbn1cblxuZXhwb3J0IGNvbnN0ICRNb3JwaFNoYXBlUmVjb3JkVHlwZTogVHNFbnVtVHlwZTxNb3JwaFNoYXBlUmVjb3JkVHlwZT4gPSBuZXcgVHNFbnVtVHlwZTxNb3JwaFNoYXBlUmVjb3JkVHlwZT4oe1xuICBlbnVtOiBNb3JwaFNoYXBlUmVjb3JkVHlwZSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var ShapeRecordType;
(function (ShapeRecordType) {
    ShapeRecordType[ShapeRecordType["CurvedEdge"] = 0] = "CurvedEdge";
    ShapeRecordType[ShapeRecordType["StraightEdge"] = 1] = "StraightEdge";
    ShapeRecordType[ShapeRecordType["StyleChange"] = 2] = "StyleChange";
})(ShapeRecordType = exports.ShapeRecordType || (exports.ShapeRecordType = {}));
exports.$ShapeRecordType = new ts_enum_1.TsEnumType({
    enum: ShapeRecordType,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3Jkcy9fdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxlQUlYO0FBSkQsV0FBWSxlQUFlO0lBQ3pCLGlFQUFVLENBQUE7SUFDVixxRUFBWSxDQUFBO0lBQ1osbUVBQVcsQ0FBQTtBQUNiLENBQUMsRUFKVyxlQUFlLEdBQWYsdUJBQWUsS0FBZix1QkFBZSxRQUkxQjtBQUVZLFFBQUEsZ0JBQWdCLEdBQWdDLElBQUksb0JBQVUsQ0FBa0I7SUFDM0YsSUFBSSxFQUFFLGVBQWU7SUFDckIsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoic2hhcGUtcmVjb3Jkcy9fdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIFNoYXBlUmVjb3JkVHlwZSB7XG4gIEN1cnZlZEVkZ2UsXG4gIFN0cmFpZ2h0RWRnZSxcbiAgU3R5bGVDaGFuZ2UsXG59XG5cbmV4cG9ydCBjb25zdCAkU2hhcGVSZWNvcmRUeXBlOiBUc0VudW1UeXBlPFNoYXBlUmVjb3JkVHlwZT4gPSBuZXcgVHNFbnVtVHlwZTxTaGFwZVJlY29yZFR5cGU+KHtcbiAgZW51bTogU2hhcGVSZWNvcmRUeXBlLFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const sint16_1 = __webpack_require__(26);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
exports.$Rect = new document_1.DocumentType({
    properties: {
        xMin: { type: sint16_1.$Sint16 },
        xMax: { type: sint16_1.$Sint16 },
        yMin: { type: sint16_1.$Sint16 },
        yMax: { type: sint16_1.$Sint16 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcmVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBVXRELFFBQUEsS0FBSyxHQUF5QixJQUFJLHVCQUFZLENBQU87SUFDaEUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDckIsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDckIsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDckIsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7S0FDdEI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJyZWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFNpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3NpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBTaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBSZWN0IHtcbiAgeE1pbjogU2ludDE2O1xuICB4TWF4OiBTaW50MTY7XG4gIHlNaW46IFNpbnQxNjtcbiAgeU1heDogU2ludDE2O1xufVxuXG5leHBvcnQgY29uc3QgJFJlY3Q6IERvY3VtZW50SW9UeXBlPFJlY3Q+ID0gbmV3IERvY3VtZW50VHlwZTxSZWN0Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB4TWluOiB7dHlwZTogJFNpbnQxNn0sXG4gICAgeE1heDoge3R5cGU6ICRTaW50MTZ9LFxuICAgIHlNaW46IHt0eXBlOiAkU2ludDE2fSxcbiAgICB5TWF4OiB7dHlwZTogJFNpbnQxNn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=


/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const INITIAL_DEPTH = -1;
class DisplayObject {
    constructor() {
        this.depth = undefined;
    }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = DisplayObject;



/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(30).Buffer))

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const integer_1 = __webpack_require__(11);
exports.$Sint32 = new integer_1.IntegerType({ min: -2147483648, max: 2147483647 });

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnVpbHRpbnMvc2ludDMyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsOENBQStDO0FBRWxDLFFBQUEsT0FBTyxHQUFnQixJQUFJLHFCQUFXLENBQUMsRUFBQyxHQUFHLEVBQUUsQ0FBQyxVQUFVLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBQyxDQUFDLENBQUMiLCJmaWxlIjoiYnVpbHRpbnMvc2ludDMyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW50ZWdlclR5cGUgfSBmcm9tIFwiLi4vdHlwZXMvaW50ZWdlclwiO1xuXG5leHBvcnQgY29uc3QgJFNpbnQzMjogSW50ZWdlclR5cGUgPSBuZXcgSW50ZWdlclR5cGUoe21pbjogLTIxNDc0ODM2NDgsIG1heDogMjE0NzQ4MzY0N30pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const read_visitor_1 = __webpack_require__(18);
function createFixedPoint(options) {
    const { signed, intBits, fracBits } = options;
    return _a = class FixedPoint {
            constructor(epsilons) {
                this.epsilons = epsilons;
            }
            static toJSON() {
                throw new incident_1.Incident("NotImplemented", "FixedPointType#toJSON");
            }
            static clone(value) {
                return value;
            }
            static equals(val1, val2) {
                return val1 === val2;
            }
            static testError(value) {
                if (typeof value !== "object" || value === null || typeof value.epsilons !== "number") {
                    return new incident_1.Incident("InvalidType", "Expected `{epsilons: number}`");
                }
                const epsilons = value.epsilons;
                if ((epsilons | 0) !== epsilons) {
                    return new incident_1.Incident("InvalidType", "Expected `Sint32`");
                }
                const max = Math.pow(2, this.intBits + this.fracBits - (this.signed ? 1 : 0));
                const min = this.signed ? 0 : -max - 1;
                if (epsilons < min || epsilons > max) {
                    return new incident_1.Incident("RangeError", { min, max, value });
                }
                return undefined;
            }
            static test(value) {
                return this.testError(value) === undefined;
            }
            static read(reader, raw) {
                return reader.readFloat64(raw, read_visitor_1.readVisitor({
                    fromFloat64: (input) => {
                        const result = FixedPoint.fromEpsilons(input);
                        const error = this.testError(result);
                        if (error !== undefined) {
                            throw error;
                        }
                        return result;
                    },
                }));
            }
            static write(writer, value) {
                return writer.writeFloat64(value.epsilons);
            }
            static fromEpsilons(epsilons) {
                return new FixedPoint(epsilons);
            }
            static fromValue(value) {
                return new FixedPoint(value * Math.pow(2, fracBits));
            }
            valueOf() {
                return this.epsilons * Math.pow(2, -fracBits);
            }
        },
        _a.signed = signed,
        _a.intBits = intBits,
        _a.fracBits = fracBits,
        _a;
    var _a;
}
exports.createFixedPoint = createFixedPoint;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZml4ZWQtcG9pbnQvZml4ZWQtcG9pbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFDcEMsNERBQXdEO0FBdUJ4RCwwQkFBaUMsT0FBMEI7SUFDekQsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFDLEdBQUcsT0FBTyxDQUFDO0lBRTVDLE1BQU0sTUFBQztZQU9MLFlBQW9CLFFBQWdCO2dCQUNsQyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztZQUMzQixDQUFDO1lBRUQsTUFBTSxDQUFDLE1BQU07Z0JBQ1gsTUFBTSxJQUFJLG1CQUFRLENBQUMsZ0JBQWdCLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztZQUNoRSxDQUFDO1lBRUQsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFrQjtnQkFDN0IsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUNmLENBQUM7WUFFRCxNQUFNLENBQUMsTUFBTSxDQUFDLElBQWlCLEVBQUUsSUFBaUI7Z0JBQ2hELE1BQU0sQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDO1lBQ3ZCLENBQUM7WUFFRCxNQUFNLENBQUMsU0FBUyxDQUFDLEtBQWtCO2dCQUNqQyxFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssS0FBSyxRQUFRLElBQUksS0FBSyxLQUFLLElBQUksSUFBSSxPQUFPLEtBQUssQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQztvQkFDdEYsTUFBTSxDQUFDLElBQUksbUJBQVEsQ0FBQyxhQUFhLEVBQUUsK0JBQStCLENBQUMsQ0FBQztnQkFDdEUsQ0FBQztnQkFDRCxNQUFNLFFBQVEsR0FBVyxLQUFLLENBQUMsUUFBUSxDQUFDO2dCQUN4QyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDO29CQUNoQyxNQUFNLENBQUMsSUFBSSxtQkFBUSxDQUFDLGFBQWEsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO2dCQUMxRCxDQUFDO2dCQUNELE1BQU0sR0FBRyxHQUFXLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDdEYsTUFBTSxHQUFHLEdBQVcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7Z0JBRS9DLEVBQUUsQ0FBQyxDQUFDLFFBQVEsR0FBRyxHQUFHLElBQUksUUFBUSxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ3JDLE1BQU0sQ0FBQyxJQUFJLG1CQUFRLENBQUMsWUFBWSxFQUFFLEVBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDO2dCQUN2RCxDQUFDO2dCQUVELE1BQU0sQ0FBQyxTQUFTLENBQUM7WUFDbkIsQ0FBQztZQUVELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBa0I7Z0JBQzVCLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxLQUFLLFNBQVMsQ0FBQztZQUM3QyxDQUFDO1lBRUQsTUFBTSxDQUFDLElBQUksQ0FBSSxNQUFpQixFQUFFLEdBQU07Z0JBQ3RDLE1BQU0sQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSwwQkFBVyxDQUFDO29CQUN6QyxXQUFXLEVBQUUsQ0FBQyxLQUFhLEVBQWUsRUFBRTt3QkFDMUMsTUFBTSxNQUFNLEdBQWdCLFVBQVUsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7d0JBQzNELE1BQU0sS0FBSyxHQUFzQixJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO3dCQUN4RCxFQUFFLENBQUMsQ0FBQyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQzs0QkFDeEIsTUFBTSxLQUFLLENBQUM7d0JBQ2QsQ0FBQzt3QkFDRCxNQUFNLENBQUMsTUFBTSxDQUFDO29CQUNoQixDQUFDO2lCQUNGLENBQUMsQ0FBQyxDQUFDO1lBQ04sQ0FBQztZQUVELE1BQU0sQ0FBQyxLQUFLLENBQUksTUFBaUIsRUFBRSxLQUFrQjtnQkFDbkQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzdDLENBQUM7WUFFRCxNQUFNLENBQUMsWUFBWSxDQUFDLFFBQWdCO2dCQUNsQyxNQUFNLENBQUMsSUFBSSxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDbEMsQ0FBQztZQUVELE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBYTtnQkFDNUIsTUFBTSxDQUFDLElBQUksVUFBVSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ3ZELENBQUM7WUFFRCxPQUFPO2dCQUNMLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDaEQsQ0FBQztTQUNGO1FBeEVpQixTQUFNLEdBQVksTUFBTztRQUN6QixVQUFPLEdBQVcsT0FBUTtRQUMxQixXQUFRLEdBQVcsUUFBUztXQXNFNUM7O0FBQ0osQ0FBQztBQTdFRCw0Q0E2RUMiLCJmaWxlIjoiZml4ZWQtcG9pbnQvZml4ZWQtcG9pbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmNpZGVudCB9IGZyb20gXCJpbmNpZGVudFwiO1xuaW1wb3J0IHsgcmVhZFZpc2l0b3IgfSBmcm9tIFwia3J5by9yZWFkZXJzL3JlYWQtdmlzaXRvclwiO1xuaW1wb3J0IHsgSW9UeXBlLCBSZWFkZXIsIFdyaXRlciB9IGZyb20gXCJrcnlvL3R5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRml4ZWRQb2ludE9wdGlvbnMge1xuICByZWFkb25seSBzaWduZWQ6IGJvb2xlYW47XG4gIHJlYWRvbmx5IGludEJpdHM6IG51bWJlcjtcbiAgcmVhZG9ubHkgZnJhY0JpdHM6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGaXhlZFBvaW50IHtcbiAgcmVhZG9ubHkgZXBzaWxvbnM6IG51bWJlcjtcblxuICB2YWx1ZU9mKCk6IG51bWJlcjtcbn1cblxudHlwZSBfRml4ZWRQb2ludCA9IEZpeGVkUG9pbnQ7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRml4ZWRQb2ludENvbnN0cnVjdG9yIGV4dGVuZHMgSW9UeXBlPEZpeGVkUG9pbnQ+LCBGaXhlZFBvaW50T3B0aW9ucyB7XG4gIGZyb21FcHNpbG9ucyhlcHNpbG9uczogbnVtYmVyKTogRml4ZWRQb2ludDtcblxuICBmcm9tVmFsdWUodmFsdWU6IG51bWJlcik6IEZpeGVkUG9pbnQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVGaXhlZFBvaW50KG9wdGlvbnM6IEZpeGVkUG9pbnRPcHRpb25zKTogRml4ZWRQb2ludENvbnN0cnVjdG9yIHtcbiAgY29uc3Qge3NpZ25lZCwgaW50Qml0cywgZnJhY0JpdHN9ID0gb3B0aW9ucztcblxuICByZXR1cm4gY2xhc3MgRml4ZWRQb2ludCB7XG4gICAgc3RhdGljIHJlYWRvbmx5IHNpZ25lZDogYm9vbGVhbiA9IHNpZ25lZDtcbiAgICBzdGF0aWMgcmVhZG9ubHkgaW50Qml0czogbnVtYmVyID0gaW50Qml0cztcbiAgICBzdGF0aWMgcmVhZG9ubHkgZnJhY0JpdHM6IG51bWJlciA9IGZyYWNCaXRzO1xuXG4gICAgcmVhZG9ubHkgZXBzaWxvbnM6IG51bWJlcjtcblxuICAgIHByaXZhdGUgY29uc3RydWN0b3IoZXBzaWxvbnM6IG51bWJlcikge1xuICAgICAgdGhpcy5lcHNpbG9ucyA9IGVwc2lsb25zO1xuICAgIH1cblxuICAgIHN0YXRpYyB0b0pTT04oKSB7XG4gICAgICB0aHJvdyBuZXcgSW5jaWRlbnQoXCJOb3RJbXBsZW1lbnRlZFwiLCBcIkZpeGVkUG9pbnRUeXBlI3RvSlNPTlwiKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgY2xvbmUodmFsdWU6IF9GaXhlZFBvaW50KTogX0ZpeGVkUG9pbnQge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cblxuICAgIHN0YXRpYyBlcXVhbHModmFsMTogX0ZpeGVkUG9pbnQsIHZhbDI6IF9GaXhlZFBvaW50KTogYm9vbGVhbiB7XG4gICAgICByZXR1cm4gdmFsMSA9PT0gdmFsMjtcbiAgICB9XG5cbiAgICBzdGF0aWMgdGVzdEVycm9yKHZhbHVlOiBfRml4ZWRQb2ludCk6IEVycm9yIHwgdW5kZWZpbmVkIHtcbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09IFwib2JqZWN0XCIgfHwgdmFsdWUgPT09IG51bGwgfHwgdHlwZW9mIHZhbHVlLmVwc2lsb25zICE9PSBcIm51bWJlclwiKSB7XG4gICAgICAgIHJldHVybiBuZXcgSW5jaWRlbnQoXCJJbnZhbGlkVHlwZVwiLCBcIkV4cGVjdGVkIGB7ZXBzaWxvbnM6IG51bWJlcn1gXCIpO1xuICAgICAgfVxuICAgICAgY29uc3QgZXBzaWxvbnM6IG51bWJlciA9IHZhbHVlLmVwc2lsb25zO1xuICAgICAgaWYgKChlcHNpbG9ucyB8IDApICE9PSBlcHNpbG9ucykge1xuICAgICAgICByZXR1cm4gbmV3IEluY2lkZW50KFwiSW52YWxpZFR5cGVcIiwgXCJFeHBlY3RlZCBgU2ludDMyYFwiKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IG1heDogbnVtYmVyID0gTWF0aC5wb3coMiwgdGhpcy5pbnRCaXRzICsgdGhpcy5mcmFjQml0cyAtICh0aGlzLnNpZ25lZCA/IDEgOiAwKSk7XG4gICAgICBjb25zdCBtaW46IG51bWJlciA9IHRoaXMuc2lnbmVkID8gMCA6IC1tYXggLSAxO1xuXG4gICAgICBpZiAoZXBzaWxvbnMgPCBtaW4gfHwgZXBzaWxvbnMgPiBtYXgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBJbmNpZGVudChcIlJhbmdlRXJyb3JcIiwge21pbiwgbWF4LCB2YWx1ZX0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIHN0YXRpYyB0ZXN0KHZhbHVlOiBfRml4ZWRQb2ludCk6IGJvb2xlYW4ge1xuICAgICAgcmV0dXJuIHRoaXMudGVzdEVycm9yKHZhbHVlKSA9PT0gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIHN0YXRpYyByZWFkPFI+KHJlYWRlcjogUmVhZGVyPFI+LCByYXc6IFIpOiBfRml4ZWRQb2ludCB7XG4gICAgICByZXR1cm4gcmVhZGVyLnJlYWRGbG9hdDY0KHJhdywgcmVhZFZpc2l0b3Ioe1xuICAgICAgICBmcm9tRmxvYXQ2NDogKGlucHV0OiBudW1iZXIpOiBfRml4ZWRQb2ludCA9PiB7XG4gICAgICAgICAgY29uc3QgcmVzdWx0OiBfRml4ZWRQb2ludCA9IEZpeGVkUG9pbnQuZnJvbUVwc2lsb25zKGlucHV0KTtcbiAgICAgICAgICBjb25zdCBlcnJvcjogRXJyb3IgfCB1bmRlZmluZWQgPSB0aGlzLnRlc3RFcnJvcihyZXN1bHQpO1xuICAgICAgICAgIGlmIChlcnJvciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfSxcbiAgICAgIH0pKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgd3JpdGU8Vz4od3JpdGVyOiBXcml0ZXI8Vz4sIHZhbHVlOiBfRml4ZWRQb2ludCk6IFcge1xuICAgICAgcmV0dXJuIHdyaXRlci53cml0ZUZsb2F0NjQodmFsdWUuZXBzaWxvbnMpO1xuICAgIH1cblxuICAgIHN0YXRpYyBmcm9tRXBzaWxvbnMoZXBzaWxvbnM6IG51bWJlcik6IF9GaXhlZFBvaW50IHtcbiAgICAgIHJldHVybiBuZXcgRml4ZWRQb2ludChlcHNpbG9ucyk7XG4gICAgfVxuXG4gICAgc3RhdGljIGZyb21WYWx1ZSh2YWx1ZTogbnVtYmVyKTogX0ZpeGVkUG9pbnQge1xuICAgICAgcmV0dXJuIG5ldyBGaXhlZFBvaW50KHZhbHVlICogTWF0aC5wb3coMiwgZnJhY0JpdHMpKTtcbiAgICB9XG5cbiAgICB2YWx1ZU9mKCk6IG51bWJlciB7XG4gICAgICByZXR1cm4gdGhpcy5lcHNpbG9ucyAqIE1hdGgucG93KDIsIC1mcmFjQml0cyk7XG4gICAgfVxuICB9O1xufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var CapStyle;
(function (CapStyle) {
    CapStyle[CapStyle["Round"] = 0] = "Round";
    CapStyle[CapStyle["None"] = 1] = "None";
    CapStyle[CapStyle["Square"] = 2] = "Square";
})(CapStyle = exports.CapStyle || (exports.CapStyle = {}));
exports.$CapStyle = new ts_enum_1.TsEnumType({
    enum: CapStyle,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY2FwLXN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGdEQUFnRDtBQUVoRCxJQUFZLFFBSVg7QUFKRCxXQUFZLFFBQVE7SUFDbEIseUNBQUssQ0FBQTtJQUNMLHVDQUFJLENBQUE7SUFDSiwyQ0FBTSxDQUFBO0FBQ1IsQ0FBQyxFQUpXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBSW5CO0FBRVksUUFBQSxTQUFTLEdBQXlCLElBQUksb0JBQVUsQ0FBVztJQUN0RSxJQUFJLEVBQUUsUUFBUTtJQUNkLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImNhcC1zdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIENhcFN0eWxlIHtcbiAgUm91bmQsXG4gIE5vbmUsXG4gIFNxdWFyZSxcbn1cblxuZXhwb3J0IGNvbnN0ICRDYXBTdHlsZTogVHNFbnVtVHlwZTxDYXBTdHlsZT4gPSBuZXcgVHNFbnVtVHlwZTxDYXBTdHlsZT4oe1xuICBlbnVtOiBDYXBTdHlsZSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==


/***/ }),
/* 50 */
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = { nextTick: nextTick };
} else {
  module.exports = process
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}


/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(31)))

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(30)
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&
                (typeof Uint16Array !== 'undefined') &&
                (typeof Int32Array !== 'undefined');

function _has(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

exports.assign = function (obj /*from1, from2, from3, ...*/) {
  var sources = Array.prototype.slice.call(arguments, 1);
  while (sources.length) {
    var source = sources.shift();
    if (!source) { continue; }

    if (typeof source !== 'object') {
      throw new TypeError(source + 'must be non-object');
    }

    for (var p in source) {
      if (_has(source, p)) {
        obj[p] = source[p];
      }
    }
  }

  return obj;
};


// reduce buffer size, avoiding mem copy
exports.shrinkBuf = function (buf, size) {
  if (buf.length === size) { return buf; }
  if (buf.subarray) { return buf.subarray(0, size); }
  buf.length = size;
  return buf;
};


var fnTyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    if (src.subarray && dest.subarray) {
      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);
      return;
    }
    // Fallback to ordinary array
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    var i, l, len, pos, chunk, result;

    // calculate data length
    len = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      len += chunks[i].length;
    }

    // join chunks
    result = new Uint8Array(len);
    pos = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      chunk = chunks[i];
      result.set(chunk, pos);
      pos += chunk.length;
    }

    return result;
  }
};

var fnUntyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    return [].concat.apply([], chunks);
  }
};


// Enable/Disable typed arrays use, for testing
//
exports.setTyped = function (on) {
  if (on) {
    exports.Buf8  = Uint8Array;
    exports.Buf16 = Uint16Array;
    exports.Buf32 = Int32Array;
    exports.assign(exports, fnTyped);
  } else {
    exports.Buf8  = Array;
    exports.Buf16 = Array;
    exports.Buf32 = Array;
    exports.assign(exports, fnUntyped);
  }
};

exports.setTyped(TYPED_OK);


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
exports.name = "IncompleteStream";
function format({ needed }) {
    return `Need ${needed === undefined ? "" : needed} more bytes to process the stream`;
}
exports.format = format;
function createIncompleteStreamError(needed) {
    return new incident_1.Incident(exports.name, { needed }, format);
}
exports.createIncompleteStreamError = createIncompleteStreamError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2luY29tcGxldGUtc3RyZWFtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQW9DO0FBR3ZCLFFBQUEsSUFBSSxHQUFTLGtCQUFrQixDQUFDO0FBUzdDLGdCQUF1QixFQUFDLE1BQU0sRUFBTztJQUNuQyxNQUFNLENBQUMsUUFBUSxNQUFNLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sbUNBQW1DLENBQUM7QUFDdkYsQ0FBQztBQUZELHdCQUVDO0FBRUQscUNBQTRDLE1BQWU7SUFDekQsTUFBTSxDQUFDLElBQUksbUJBQVEsQ0FBQyxZQUFJLEVBQUUsRUFBQyxNQUFNLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUM5QyxDQUFDO0FBRkQsa0VBRUMiLCJmaWxlIjoiZXJyb3JzL2luY29tcGxldGUtc3RyZWFtLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IHR5cGUgTmFtZSA9IFwiSW5jb21wbGV0ZVN0cmVhbVwiO1xuZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcIkluY29tcGxldGVTdHJlYW1cIjtcblxuZXhwb3J0IGludGVyZmFjZSBEYXRhIHtcbiAgbmVlZGVkPzogbnVtYmVyO1xufVxuXG5leHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbmV4cG9ydCB0eXBlIEluY29tcGxldGVTdHJlYW1FcnJvciA9IEluY2lkZW50PERhdGEsIE5hbWUsIENhdXNlPjtcblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7bmVlZGVkfTogRGF0YSkge1xuICByZXR1cm4gYE5lZWQgJHtuZWVkZWQgPT09IHVuZGVmaW5lZCA/IFwiXCIgOiBuZWVkZWR9IG1vcmUgYnl0ZXMgdG8gcHJvY2VzcyB0aGUgc3RyZWFtYDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUluY29tcGxldGVTdHJlYW1FcnJvcihuZWVkZWQ/OiBudW1iZXIpOiBJbmNvbXBsZXRlU3RyZWFtRXJyb3Ige1xuICByZXR1cm4gbmV3IEluY2lkZW50KG5hbWUsIHtuZWVkZWR9LCBmb3JtYXQpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;
var booleanValueOf = Boolean.prototype.valueOf;
var objectToString = Object.prototype.toString;

var inspectCustom = __webpack_require__(131).custom;
var inspectSymbol = (inspectCustom && isSymbol(inspectCustom)) ? inspectCustom : null;

module.exports = function inspect_ (obj, opts, depth, seen) {
    if (!opts) opts = {};

    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
    }

    if (typeof obj === 'undefined') {
        return 'undefined';
    }
    if (obj === null) {
        return 'null';
    }
    if (typeof obj === 'boolean') {
        return obj ? 'true' : 'false';
    }

    if (typeof obj === 'string') {
        return inspectString(obj, opts);
    }
    if (typeof obj === 'number') {
      if (obj === 0) {
        return Infinity / obj > 0 ? '0' : '-0';
      }
      return String(obj);
    }

    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;
    if (typeof depth === 'undefined') depth = 0;
    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {
        return '[Object]';
    }

    if (typeof seen === 'undefined') seen = [];
    else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
    }

    function inspect (value, from) {
        if (from) {
            seen = seen.slice();
            seen.push(from);
        }
        return inspect_(value, opts, depth + 1, seen);
    }

    if (typeof obj === 'function') {
        var name = nameOf(obj);
        return '[Function' + (name ? ': ' + name : '') + ']';
    }
    if (isSymbol(obj)) {
        var symString = Symbol.prototype.toString.call(obj);
        return typeof obj === 'object' ? markBoxed(symString) : symString;
    }
    if (isElement(obj)) {
        var s = '<' + String(obj.nodeName).toLowerCase();
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);
        }
        s += '>';
        if (obj.childNodes && obj.childNodes.length) s += '...';
        s += '</' + String(obj.nodeName).toLowerCase() + '>';
        return s;
    }
    if (isArray(obj)) {
        if (obj.length === 0) return '[]';
        return '[ ' + arrObjKeys(obj, inspect).join(', ') + ' ]';
    }
    if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (parts.length === 0) return '[' + String(obj) + ']';
        return '{ [' + String(obj) + '] ' + parts.join(', ') + ' }';
    }
    if (typeof obj === 'object') {
        if (inspectSymbol && typeof obj[inspectSymbol] === 'function') {
            return obj[inspectSymbol]();
        } else if (typeof obj.inspect === 'function') {
            return obj.inspect();
        }
    }
    if (isMap(obj)) {
        var parts = [];
        mapForEach.call(obj, function (value, key) {
            parts.push(inspect(key, obj) + ' => ' + inspect(value, obj));
        });
        return collectionOf('Map', mapSize.call(obj), parts);
    }
    if (isSet(obj)) {
        var parts = [];
        setForEach.call(obj, function (value ) {
            parts.push(inspect(value, obj));
        });
        return collectionOf('Set', setSize.call(obj), parts);
    }
    if (isNumber(obj)) {
        return markBoxed(inspect(Number(obj)));
    }
    if (isBoolean(obj)) {
        return markBoxed(booleanValueOf.call(obj));
    }
    if (isString(obj)) {
        return markBoxed(inspect(String(obj)));
    }
    if (!isDate(obj) && !isRegExp(obj)) {
        var xs = arrObjKeys(obj, inspect);
        if (xs.length === 0) return '{}';
        return '{ ' + xs.join(', ') + ' }';
    }
    return String(obj);
};

function wrapQuotes (s, defaultStyle, opts) {
    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";
    return quoteChar + s + quoteChar;
}

function quote (s) {
    return String(s).replace(/"/g, '&quot;');
}

function isArray (obj) { return toStr(obj) === '[object Array]' }
function isDate (obj) { return toStr(obj) === '[object Date]' }
function isRegExp (obj) { return toStr(obj) === '[object RegExp]' }
function isError (obj) { return toStr(obj) === '[object Error]' }
function isSymbol (obj) { return toStr(obj) === '[object Symbol]' }
function isString (obj) { return toStr(obj) === '[object String]' }
function isNumber (obj) { return toStr(obj) === '[object Number]' }
function isBoolean (obj) { return toStr(obj) === '[object Boolean]' }

var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
function has (obj, key) {
    return hasOwn.call(obj, key);
}

function toStr (obj) {
    return objectToString.call(obj);
}

function nameOf (f) {
    if (f.name) return f.name;
    var m = String(f).match(/^function\s*([\w$]+)/);
    if (m) return m[1];
}

function indexOf (xs, x) {
    if (xs.indexOf) return xs.indexOf(x);
    for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) return i;
    }
    return -1;
}

function isMap (x) {
    if (!mapSize) {
        return false;
    }
    try {
        mapSize.call(x);
        try {
            setSize.call(x);
        } catch (s) {
            return true;
        }
        return x instanceof Map; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isSet (x) {
    if (!setSize) {
        return false;
    }
    try {
        setSize.call(x);
        try {
            mapSize.call(x);
        } catch (m) {
            return true;
        }
        return x instanceof Set; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isElement (x) {
    if (!x || typeof x !== 'object') return false;
    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
    }
    return typeof x.nodeName === 'string'
        && typeof x.getAttribute === 'function'
    ;
}

function inspectString (str, opts) {
    var s = str.replace(/(['\\])/g, '\\$1').replace(/[\x00-\x1f]/g, lowbyte);
    return wrapQuotes(s, 'single', opts);
}

function lowbyte (c) {
    var n = c.charCodeAt(0);
    var x = { 8: 'b', 9: 't', 10: 'n', 12: 'f', 13: 'r' }[n];
    if (x) return '\\' + x;
    return '\\x' + (n < 0x10 ? '0' : '') + n.toString(16);
}

function markBoxed (str) {
    return 'Object(' + str + ')';
}

function collectionOf (type, size, entries) {
    return type + ' (' + size + ') {' + entries.join(', ') + '}';
}

function arrObjKeys (obj, inspect) {
    var isArr = isArray(obj);
    var xs = [];
    if (isArr) {
        xs.length = obj.length;
        for (var i = 0; i < obj.length; i++) {
            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
    }
    for (var key in obj) {
        if (!has(obj, key)) continue;
        if (isArr && String(Number(key)) === key && key < obj.length) continue;
        if (/[^\w$]/.test(key)) {
            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));
        } else {
            xs.push(key + ': ' + inspect(obj[key], obj));
        }
    }
    return xs;
}


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var CatchTargetType;
(function (CatchTargetType) {
    CatchTargetType[CatchTargetType["Register"] = 0] = "Register";
    CatchTargetType[CatchTargetType["Variable"] = 1] = "Variable";
})(CatchTargetType = exports.CatchTargetType || (exports.CatchTargetType = {}));
exports.$CatchTargetType = new ts_enum_1.TsEnumType({
    enum: CatchTargetType,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9jYXRjaC10YXJnZXRzL190eXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGdEQUFnRDtBQUVoRCxJQUFZLGVBR1g7QUFIRCxXQUFZLGVBQWU7SUFDekIsNkRBQVEsQ0FBQTtJQUNSLDZEQUFRLENBQUE7QUFDVixDQUFDLEVBSFcsZUFBZSxHQUFmLHVCQUFlLEtBQWYsdUJBQWUsUUFHMUI7QUFFWSxRQUFBLGdCQUFnQixHQUFnQyxJQUFJLG9CQUFVLENBQWtCO0lBQzNGLElBQUksRUFBRSxlQUFlO0lBQ3JCLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvY2F0Y2gtdGFyZ2V0cy9fdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIENhdGNoVGFyZ2V0VHlwZSB7XG4gIFJlZ2lzdGVyLFxuICBWYXJpYWJsZSxcbn1cblxuZXhwb3J0IGNvbnN0ICRDYXRjaFRhcmdldFR5cGU6IFRzRW51bVR5cGU8Q2F0Y2hUYXJnZXRUeXBlPiA9IG5ldyBUc0VudW1UeXBlPENhdGNoVGFyZ2V0VHlwZT4oe1xuICBlbnVtOiBDYXRjaFRhcmdldFR5cGUsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const color_space_1 = __webpack_require__(58);
const color_stop_1 = __webpack_require__(59);
const gradient_spread_1 = __webpack_require__(60);
exports.$Gradient = new document_1.DocumentType({
    properties: {
        spread: { type: gradient_spread_1.$GradientSpread },
        colorSpace: { type: color_space_1.$ColorSpace },
        colors: { type: new array_1.ArrayType({ itemType: color_stop_1.$ColorStop, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZ3JhZGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSwrQ0FBd0Q7QUFDeEQsNkNBQXFEO0FBQ3JELHVEQUFvRTtBQVF2RCxRQUFBLFNBQVMsR0FBNkIsSUFBSSx1QkFBWSxDQUFXO0lBQzVFLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxpQ0FBZSxFQUFDO1FBQy9CLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFDO1FBQy9CLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsdUJBQVUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUMzRTtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImdyYWRpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgJENvbG9yU3BhY2UsIENvbG9yU3BhY2UgfSBmcm9tIFwiLi9jb2xvci1zcGFjZVwiO1xuaW1wb3J0IHsgJENvbG9yU3RvcCwgQ29sb3JTdG9wIH0gZnJvbSBcIi4vY29sb3Itc3RvcFwiO1xuaW1wb3J0IHsgJEdyYWRpZW50U3ByZWFkLCBHcmFkaWVudFNwcmVhZCB9IGZyb20gXCIuL2dyYWRpZW50LXNwcmVhZFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdyYWRpZW50IHtcbiAgc3ByZWFkOiBHcmFkaWVudFNwcmVhZDtcbiAgY29sb3JTcGFjZTogQ29sb3JTcGFjZTtcbiAgY29sb3JzOiBDb2xvclN0b3BbXTtcbn1cblxuZXhwb3J0IGNvbnN0ICRHcmFkaWVudDogRG9jdW1lbnRJb1R5cGU8R3JhZGllbnQ+ID0gbmV3IERvY3VtZW50VHlwZTxHcmFkaWVudD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgc3ByZWFkOiB7dHlwZTogJEdyYWRpZW50U3ByZWFkfSxcbiAgICBjb2xvclNwYWNlOiB7dHlwZTogJENvbG9yU3BhY2V9LFxuICAgIGNvbG9yczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkQ29sb3JTdG9wLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var ColorSpace;
(function (ColorSpace) {
    ColorSpace[ColorSpace["SRgb"] = 0] = "SRgb";
    ColorSpace[ColorSpace["LinearRgb"] = 1] = "LinearRgb";
})(ColorSpace = exports.ColorSpace || (exports.ColorSpace = {}));
exports.$ColorSpace = new ts_enum_1.TsEnumType({
    enum: ColorSpace,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29sb3Itc3BhY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsZ0RBQWdEO0FBRWhELElBQVksVUFHWDtBQUhELFdBQVksVUFBVTtJQUNwQiwyQ0FBSSxDQUFBO0lBQ0oscURBQVMsQ0FBQTtBQUNYLENBQUMsRUFIVyxVQUFVLEdBQVYsa0JBQVUsS0FBVixrQkFBVSxRQUdyQjtBQUVZLFFBQUEsV0FBVyxHQUEyQixJQUFJLG9CQUFVLENBQWE7SUFDNUUsSUFBSSxFQUFFLFVBQVU7SUFDaEIsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiY29sb3Itc3BhY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBUc0VudW1UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdHMtZW51bVwiO1xuXG5leHBvcnQgZW51bSBDb2xvclNwYWNlIHtcbiAgU1JnYixcbiAgTGluZWFyUmdiLFxufVxuXG5leHBvcnQgY29uc3QgJENvbG9yU3BhY2U6IFRzRW51bVR5cGU8Q29sb3JTcGFjZT4gPSBuZXcgVHNFbnVtVHlwZTxDb2xvclNwYWNlPih7XG4gIGVudW06IENvbG9yU3BhY2UsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint8_1 = __webpack_require__(22);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const straight_s_rgba8_1 = __webpack_require__(14);
exports.$ColorStop = new document_1.DocumentType({
    properties: {
        ratio: { type: uint8_1.$Uint8 },
        color: { type: straight_s_rgba8_1.$StraightSRgba8 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29sb3Itc3RvcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtDQUE2QztBQUM3QyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBRW5FLHlEQUFxRTtBQU94RCxRQUFBLFVBQVUsR0FBOEIsSUFBSSx1QkFBWSxDQUFZO0lBQy9FLFVBQVUsRUFBRTtRQUNWLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxjQUFNLEVBQUM7UUFDckIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtDQUFlLEVBQUM7S0FDL0I7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJjb2xvci1zdG9wLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQ4IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDhcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgVWludDggfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRTdHJhaWdodFNSZ2JhOCwgU3RyYWlnaHRTUmdiYTggfSBmcm9tIFwiLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29sb3JTdG9wIHtcbiAgcmF0aW86IFVpbnQ4O1xuICBjb2xvcjogU3RyYWlnaHRTUmdiYTg7XG59XG5cbmV4cG9ydCBjb25zdCAkQ29sb3JTdG9wOiBEb2N1bWVudElvVHlwZTxDb2xvclN0b3A+ID0gbmV3IERvY3VtZW50VHlwZTxDb2xvclN0b3A+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHJhdGlvOiB7dHlwZTogJFVpbnQ4fSxcbiAgICBjb2xvcjoge3R5cGU6ICRTdHJhaWdodFNSZ2JhOH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var GradientSpread;
(function (GradientSpread) {
    GradientSpread[GradientSpread["Pad"] = 0] = "Pad";
    GradientSpread[GradientSpread["Reflect"] = 1] = "Reflect";
    GradientSpread[GradientSpread["Repeat"] = 2] = "Repeat";
})(GradientSpread = exports.GradientSpread || (exports.GradientSpread = {}));
exports.$GradientSpread = new ts_enum_1.TsEnumType({
    enum: GradientSpread,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZ3JhZGllbnQtc3ByZWFkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGdEQUFnRDtBQUVoRCxJQUFZLGNBSVg7QUFKRCxXQUFZLGNBQWM7SUFDeEIsaURBQUcsQ0FBQTtJQUNILHlEQUFPLENBQUE7SUFDUCx1REFBTSxDQUFBO0FBQ1IsQ0FBQyxFQUpXLGNBQWMsR0FBZCxzQkFBYyxLQUFkLHNCQUFjLFFBSXpCO0FBRVksUUFBQSxlQUFlLEdBQStCLElBQUksb0JBQVUsQ0FBaUI7SUFDeEYsSUFBSSxFQUFFLGNBQWM7SUFDcEIsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZ3JhZGllbnQtc3ByZWFkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gR3JhZGllbnRTcHJlYWQge1xuICBQYWQsXG4gIFJlZmxlY3QsXG4gIFJlcGVhdCxcbn1cblxuZXhwb3J0IGNvbnN0ICRHcmFkaWVudFNwcmVhZDogVHNFbnVtVHlwZTxHcmFkaWVudFNwcmVhZD4gPSBuZXcgVHNFbnVtVHlwZTxHcmFkaWVudFNwcmVhZD4oe1xuICBlbnVtOiBHcmFkaWVudFNwcmVhZCxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const color_space_1 = __webpack_require__(58);
const gradient_spread_1 = __webpack_require__(60);
const morph_color_stop_1 = __webpack_require__(287);
exports.$MorphGradient = new document_1.DocumentType({
    properties: {
        spread: { type: gradient_spread_1.$GradientSpread },
        colorSpace: { type: color_space_1.$ColorSpace },
        colors: { type: new array_1.ArrayType({ itemType: morph_color_stop_1.$MorphColorStop, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtZ3JhZGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSwrQ0FBd0Q7QUFDeEQsdURBQW9FO0FBQ3BFLHlEQUFxRTtBQVF4RCxRQUFBLGNBQWMsR0FBa0MsSUFBSSx1QkFBWSxDQUFnQjtJQUMzRixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsaUNBQWUsRUFBQztRQUMvQixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztRQUMvQixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLGtDQUFlLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDaEY7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJtb3JwaC1ncmFkaWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEFycmF5VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2FycmF5XCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7ICRDb2xvclNwYWNlLCBDb2xvclNwYWNlIH0gZnJvbSBcIi4vY29sb3Itc3BhY2VcIjtcbmltcG9ydCB7ICRHcmFkaWVudFNwcmVhZCwgR3JhZGllbnRTcHJlYWQgfSBmcm9tIFwiLi9ncmFkaWVudC1zcHJlYWRcIjtcbmltcG9ydCB7ICRNb3JwaENvbG9yU3RvcCwgTW9ycGhDb2xvclN0b3AgfSBmcm9tIFwiLi9tb3JwaC1jb2xvci1zdG9wXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTW9ycGhHcmFkaWVudCB7XG4gIHNwcmVhZDogR3JhZGllbnRTcHJlYWQ7XG4gIGNvbG9yU3BhY2U6IENvbG9yU3BhY2U7XG4gIGNvbG9yczogTW9ycGhDb2xvclN0b3BbXTtcbn1cblxuZXhwb3J0IGNvbnN0ICRNb3JwaEdyYWRpZW50OiBEb2N1bWVudElvVHlwZTxNb3JwaEdyYWRpZW50PiA9IG5ldyBEb2N1bWVudFR5cGU8TW9ycGhHcmFkaWVudD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgc3ByZWFkOiB7dHlwZTogJEdyYWRpZW50U3ByZWFkfSxcbiAgICBjb2xvclNwYWNlOiB7dHlwZTogJENvbG9yU3BhY2V9LFxuICAgIGNvbG9yczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkTW9ycGhDb2xvclN0b3AsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
const tagged_union_1 = __webpack_require__(15);
const morphFillStyles = __importStar(__webpack_require__(90));
exports.$MorphFillStyle = new tagged_union_1.TaggedUnionType({
    variants: [
        morphFillStyles.$Bitmap,
        morphFillStyles.$FocalGradient,
        morphFillStyles.$LinearGradient,
        morphFillStyles.$RadialGradient,
        morphFillStyles.$Solid,
    ],
    tag: "type",
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtZmlsbC1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSwwREFBMEQ7QUFDMUQsMkVBQTZEO0FBU2hELFFBQUEsZUFBZSxHQUFvQyxJQUFJLDhCQUFlLENBQWlCO0lBQ2xHLFFBQVEsRUFBRTtRQUNSLGVBQWUsQ0FBQyxPQUFPO1FBQ3ZCLGVBQWUsQ0FBQyxjQUFjO1FBQzlCLGVBQWUsQ0FBQyxlQUFlO1FBQy9CLGVBQWUsQ0FBQyxlQUFlO1FBQy9CLGVBQWUsQ0FBQyxNQUFNO0tBQ3ZCO0lBQ0QsR0FBRyxFQUFFLE1BQU07Q0FDWixDQUFDLENBQUMiLCJmaWxlIjoibW9ycGgtZmlsbC1zdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhZ2dlZFVuaW9uVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RhZ2dlZC11bmlvblwiO1xuaW1wb3J0ICogYXMgbW9ycGhGaWxsU3R5bGVzIGZyb20gXCIuL21vcnBoLWZpbGwtc3R5bGVzL2luZGV4XCI7XG5cbmV4cG9ydCB0eXBlIE1vcnBoRmlsbFN0eWxlID1cbiAgbW9ycGhGaWxsU3R5bGVzLkJpdG1hcFxuICB8IG1vcnBoRmlsbFN0eWxlcy5Gb2NhbEdyYWRpZW50XG4gIHwgbW9ycGhGaWxsU3R5bGVzLkxpbmVhckdyYWRpZW50XG4gIHwgbW9ycGhGaWxsU3R5bGVzLlJhZGlhbEdyYWRpZW50XG4gIHwgbW9ycGhGaWxsU3R5bGVzLlNvbGlkO1xuXG5leHBvcnQgY29uc3QgJE1vcnBoRmlsbFN0eWxlOiBUYWdnZWRVbmlvblR5cGU8TW9ycGhGaWxsU3R5bGU+ID0gbmV3IFRhZ2dlZFVuaW9uVHlwZTxNb3JwaEZpbGxTdHlsZT4oe1xuICB2YXJpYW50czogW1xuICAgIG1vcnBoRmlsbFN0eWxlcy4kQml0bWFwLFxuICAgIG1vcnBoRmlsbFN0eWxlcy4kRm9jYWxHcmFkaWVudCxcbiAgICBtb3JwaEZpbGxTdHlsZXMuJExpbmVhckdyYWRpZW50LFxuICAgIG1vcnBoRmlsbFN0eWxlcy4kUmFkaWFsR3JhZGllbnQsXG4gICAgbW9ycGhGaWxsU3R5bGVzLiRTb2xpZCxcbiAgXSxcbiAgdGFnOiBcInR5cGVcIixcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
const tagged_union_1 = __webpack_require__(15);
const fillStyles = __importStar(__webpack_require__(86));
exports.$FillStyle = new tagged_union_1.TaggedUnionType({
    variants: [
        fillStyles.$Bitmap,
        fillStyles.$FocalGradient,
        fillStyles.$LinearGradient,
        fillStyles.$RadialGradient,
        fillStyles.$Solid,
    ],
    tag: "type",
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSwwREFBMEQ7QUFDMUQsZ0VBQWtEO0FBU3JDLFFBQUEsVUFBVSxHQUErQixJQUFJLDhCQUFlLENBQVk7SUFDbkYsUUFBUSxFQUFFO1FBQ1IsVUFBVSxDQUFDLE9BQU87UUFDbEIsVUFBVSxDQUFDLGNBQWM7UUFDekIsVUFBVSxDQUFDLGVBQWU7UUFDMUIsVUFBVSxDQUFDLGVBQWU7UUFDMUIsVUFBVSxDQUFDLE1BQU07S0FDbEI7SUFDRCxHQUFHLEVBQUUsTUFBTTtDQUNaLENBQUMsQ0FBQyIsImZpbGUiOiJmaWxsLXN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGFnZ2VkVW5pb25UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdGFnZ2VkLXVuaW9uXCI7XG5pbXBvcnQgKiBhcyBmaWxsU3R5bGVzIGZyb20gXCIuL2ZpbGwtc3R5bGVzL2luZGV4XCI7XG5cbmV4cG9ydCB0eXBlIEZpbGxTdHlsZSA9XG4gIGZpbGxTdHlsZXMuQml0bWFwXG4gIHwgZmlsbFN0eWxlcy5Gb2NhbEdyYWRpZW50XG4gIHwgZmlsbFN0eWxlcy5MaW5lYXJHcmFkaWVudFxuICB8IGZpbGxTdHlsZXMuUmFkaWFsR3JhZGllbnRcbiAgfCBmaWxsU3R5bGVzLlNvbGlkO1xuXG5leHBvcnQgY29uc3QgJEZpbGxTdHlsZTogVGFnZ2VkVW5pb25UeXBlPEZpbGxTdHlsZT4gPSBuZXcgVGFnZ2VkVW5pb25UeXBlPEZpbGxTdHlsZT4oe1xuICB2YXJpYW50czogW1xuICAgIGZpbGxTdHlsZXMuJEJpdG1hcCxcbiAgICBmaWxsU3R5bGVzLiRGb2NhbEdyYWRpZW50LFxuICAgIGZpbGxTdHlsZXMuJExpbmVhckdyYWRpZW50LFxuICAgIGZpbGxTdHlsZXMuJFJhZGlhbEdyYWRpZW50LFxuICAgIGZpbGxTdHlsZXMuJFNvbGlkLFxuICBdLFxuICB0YWc6IFwidHlwZVwiLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const lazy_properties_1 = __webpack_require__(16);
const lazy_options_1 = __webpack_require__(17);
const not_implemented_1 = __webpack_require__(29);
exports.name = "white-list";
class WhiteListType {
    constructor(options) {
        this.name = exports.name;
        // TODO: Remove once TS 2.7 is better supported by editors
        this.itemType = undefined;
        this.values = undefined;
        this._options = options;
        if (typeof options !== "function") {
            this._applyOptions();
        }
        else {
            lazy_properties_1.lazyProperties(this, this._applyOptions, ["itemType", "values"]);
        }
    }
    static fromJSON(options) {
        throw not_implemented_1.createNotImplementedError("WhiteListType.fromJSON");
    }
    toJSON() {
        throw not_implemented_1.createNotImplementedError("TypedUnionType#toJSON");
    }
    read(reader, raw) {
        if (this.itemType.read === undefined) {
            throw new incident_1.Incident("NotReadable", { type: this });
        }
        const result = this.itemType.read(reader, raw);
        for (const allowed of this.values) {
            if (this.itemType.equals(result, allowed)) {
                return result;
            }
        }
        throw incident_1.Incident("UnkownVariant", "Unknown variant");
    }
    write(writer, value) {
        if (this.itemType.write !== undefined) {
            return this.itemType.write(writer, value);
        }
        else {
            throw new incident_1.Incident("NotWritable", { type: this });
        }
    }
    testError(val) {
        const error = this.itemType.testError(val);
        if (error !== undefined) {
            return error;
        }
        for (const allowed of this.values) {
            if (this.itemType.equals(val, allowed)) {
                return undefined;
            }
        }
        return incident_1.Incident("UnkownVariant", "Unknown variant");
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        return this.itemType.equals(val1, val2);
    }
    clone(val) {
        return this.itemType.clone(val);
    }
    diff(oldVal, newVal) {
        return this.itemType.diff(oldVal, newVal);
    }
    patch(oldVal, diff) {
        return this.itemType.patch(oldVal, diff);
    }
    reverseDiff(diff) {
        return this.itemType.reverseDiff(diff);
    }
    squash(diff1, diff2) {
        return this.itemType.squash(diff1, diff2);
    }
    _applyOptions() {
        if (this._options === undefined) {
            throw lazy_options_1.createLazyOptionsError(this);
        }
        const options = typeof this._options === "function" ? this._options() : this._options;
        const itemType = options.itemType;
        const values = options.values;
        Object.assign(this, { itemType, values });
    }
}
exports.WhiteListType = WhiteListType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var BlendMode;
(function (BlendMode) {
    BlendMode[BlendMode["Normal"] = 0] = "Normal";
    BlendMode[BlendMode["Layer"] = 1] = "Layer";
    BlendMode[BlendMode["Multiply"] = 2] = "Multiply";
    BlendMode[BlendMode["Screen"] = 3] = "Screen";
    BlendMode[BlendMode["Lighten"] = 4] = "Lighten";
    BlendMode[BlendMode["Darken"] = 5] = "Darken";
    BlendMode[BlendMode["Difference"] = 6] = "Difference";
    BlendMode[BlendMode["Add"] = 7] = "Add";
    BlendMode[BlendMode["Subtract"] = 8] = "Subtract";
    BlendMode[BlendMode["Invert"] = 9] = "Invert";
    BlendMode[BlendMode["Alpha"] = 10] = "Alpha";
    BlendMode[BlendMode["Erase"] = 11] = "Erase";
    BlendMode[BlendMode["Overlay"] = 12] = "Overlay";
    BlendMode[BlendMode["Hardlight"] = 13] = "Hardlight";
})(BlendMode = exports.BlendMode || (exports.BlendMode = {}));
exports.$BlendMode = new ts_enum_1.TsEnumType({
    enum: BlendMode,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYmxlbmQtbW9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxTQWVYO0FBZkQsV0FBWSxTQUFTO0lBQ25CLDZDQUFNLENBQUE7SUFDTiwyQ0FBSyxDQUFBO0lBQ0wsaURBQVEsQ0FBQTtJQUNSLDZDQUFNLENBQUE7SUFDTiwrQ0FBTyxDQUFBO0lBQ1AsNkNBQU0sQ0FBQTtJQUNOLHFEQUFVLENBQUE7SUFDVix1Q0FBRyxDQUFBO0lBQ0gsaURBQVEsQ0FBQTtJQUNSLDZDQUFNLENBQUE7SUFDTiw0Q0FBSyxDQUFBO0lBQ0wsNENBQUssQ0FBQTtJQUNMLGdEQUFPLENBQUE7SUFDUCxvREFBUyxDQUFBO0FBQ1gsQ0FBQyxFQWZXLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBZXBCO0FBRVksUUFBQSxVQUFVLEdBQTBCLElBQUksb0JBQVUsQ0FBWTtJQUN6RSxJQUFJLEVBQUUsU0FBUztJQUNmLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImJsZW5kLW1vZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBUc0VudW1UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdHMtZW51bVwiO1xuXG5leHBvcnQgZW51bSBCbGVuZE1vZGUge1xuICBOb3JtYWwsXG4gIExheWVyLFxuICBNdWx0aXBseSxcbiAgU2NyZWVuLFxuICBMaWdodGVuLFxuICBEYXJrZW4sXG4gIERpZmZlcmVuY2UsXG4gIEFkZCxcbiAgU3VidHJhY3QsXG4gIEludmVydCxcbiAgQWxwaGEsXG4gIEVyYXNlLFxuICBPdmVybGF5LFxuICBIYXJkbGlnaHQsXG59XG5cbmV4cG9ydCBjb25zdCAkQmxlbmRNb2RlOiBUc0VudW1UeXBlPEJsZW5kTW9kZT4gPSBuZXcgVHNFbnVtVHlwZTxCbGVuZE1vZGU+KHtcbiAgZW51bTogQmxlbmRNb2RlLFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var LanguageCode;
(function (LanguageCode) {
    LanguageCode[LanguageCode["Auto"] = 0] = "Auto";
    LanguageCode[LanguageCode["Latin"] = 1] = "Latin";
    LanguageCode[LanguageCode["Japanese"] = 2] = "Japanese";
    LanguageCode[LanguageCode["Korean"] = 3] = "Korean";
    LanguageCode[LanguageCode["SimplifiedChinese"] = 4] = "SimplifiedChinese";
    LanguageCode[LanguageCode["TraditionalChinese"] = 5] = "TraditionalChinese";
})(LanguageCode = exports.LanguageCode || (exports.LanguageCode = {}));
exports.$LanguageCode = new ts_enum_1.TsEnumType({
    enum: LanguageCode,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbGFuZ3VhZ2UtY29kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxZQU9YO0FBUEQsV0FBWSxZQUFZO0lBQ3RCLCtDQUFJLENBQUE7SUFDSixpREFBSyxDQUFBO0lBQ0wsdURBQVEsQ0FBQTtJQUNSLG1EQUFNLENBQUE7SUFDTix5RUFBaUIsQ0FBQTtJQUNqQiwyRUFBa0IsQ0FBQTtBQUNwQixDQUFDLEVBUFcsWUFBWSxHQUFaLG9CQUFZLEtBQVosb0JBQVksUUFPdkI7QUFFWSxRQUFBLGFBQWEsR0FBNkIsSUFBSSxvQkFBVSxDQUFlO0lBQ2xGLElBQUksRUFBRSxZQUFZO0lBQ2xCLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6Imxhbmd1YWdlLWNvZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBUc0VudW1UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdHMtZW51bVwiO1xuXG5leHBvcnQgZW51bSBMYW5ndWFnZUNvZGUge1xuICBBdXRvLFxuICBMYXRpbixcbiAgSmFwYW5lc2UsXG4gIEtvcmVhbixcbiAgU2ltcGxpZmllZENoaW5lc2UsXG4gIFRyYWRpdGlvbmFsQ2hpbmVzZSxcbn1cblxuZXhwb3J0IGNvbnN0ICRMYW5ndWFnZUNvZGU6IFRzRW51bVR5cGU8TGFuZ3VhZ2VDb2RlPiA9IG5ldyBUc0VudW1UeXBlPExhbmd1YWdlQ29kZT4oe1xuICBlbnVtOiBMYW5ndWFnZUNvZGUsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=


/***/ }),
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return CharacterType; });
/* harmony export (immutable) */ __webpack_exports__["d"] = createButtonCharacter;
/* harmony export (immutable) */ __webpack_exports__["c"] = createBitmapCharacter;
/* harmony export (immutable) */ __webpack_exports__["e"] = createSpriteCharacter;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__);

var CharacterType;
(function (CharacterType) {
    CharacterType[CharacterType["Button"] = 0] = "Button";
    CharacterType[CharacterType["Bitmap"] = 1] = "Bitmap";
    CharacterType[CharacterType["MorphShape"] = 2] = "MorphShape";
    CharacterType[CharacterType["Shape"] = 3] = "Shape";
    CharacterType[CharacterType["Sprite"] = 4] = "Sprite";
})(CharacterType || (CharacterType = {}));
class CharacterDictionary {
    constructor() {
        this.characters = new Map();
    }
    getCharacterById(characterId) {
        return this.characters.get(characterId);
    }
    setCharacter(characterId, character) {
        // TODO: Assert unique
        this.characters.set(characterId, character);
    }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = CharacterDictionary;

// TODO: Avoid creating tags at this point? (create them only if needed when instantiating the button)
function createButtonCharacter(tag) {
    // Shumway ignores states referencing unknown characters (we just accept them at the moment)
    const states = {
        up: [],
        down: [],
        over: [],
        hitTest: [],
    };
    for (const buttonRecord of tag.characters) {
        // TODO: Blend mode and filters
        const command = {
            type: __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__["TagType"].PlaceObject,
            isMove: false,
            depth: buttonRecord.depth,
            characterId: buttonRecord.characterId,
            matrix: buttonRecord.matrix,
            colorTransform: buttonRecord.colorTransform,
            filters: buttonRecord.filters,
            blendMode: buttonRecord.blendMode,
        };
        if (buttonRecord.stateUp) {
            states.up.push(command);
        }
        if (buttonRecord.stateDown) {
            states.down.push(command);
        }
        if (buttonRecord.stateOver) {
            states.over.push(command);
        }
        if (buttonRecord.stateHitTest) {
            states.hitTest.push(command);
        }
    }
    return {
        type: CharacterType.Button,
        id: tag.buttonId,
        trackAsMenu: tag.trackAsMenu,
        states,
        actions: tag.actions,
    };
}
function createBitmapCharacter(tag) {
    return {
        type: CharacterType.Bitmap,
        id: tag.id,
        width: tag.width,
        height: tag.height,
        mediaType: tag.mediaType,
        data: tag.data,
    };
}
function createSpriteCharacter(tag) {
    return {
        type: CharacterType.Sprite,
        id: tag.id,
        frameCount: tag.frameCount,
        tags: tag.tags,
    };
}


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(116);
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = __webpack_require__(69);
exports.Duplex = __webpack_require__(32);
exports.Transform = __webpack_require__(120);
exports.PassThrough = __webpack_require__(378);


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.



/*<replacement>*/

var processNextTick = __webpack_require__(51).nextTick;
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = __webpack_require__(46);
util.inherits = __webpack_require__(38);
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: __webpack_require__(377)
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(117);
/*</replacement>*/

/*<replacement>*/

var Buffer = __webpack_require__(52).Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

var destroyImpl = __webpack_require__(118);

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || __webpack_require__(32);

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __webpack_require__(32);

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    processNextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    processNextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      processNextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(31), __webpack_require__(375).setImmediate, __webpack_require__(27)))

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const swf_tree_1 = __webpack_require__(12);
const incomplete_stream_1 = __webpack_require__(54);
class Stream {
    constructor(bytes, byteOffset = 0, bitOffset = 0) {
        this.bytes = bytes;
        this.view = new DataView(bytes.buffer, bytes.byteOffset, bytes.length);
        this.bytePos = 0;
        this.bitPos = bitOffset;
        this.byteEnd = bytes.length;
    }
    asBitStream() {
        return this;
    }
    asByteStream() {
        this.align();
        return this;
    }
    align() {
        if (this.bitPos !== 0) {
            this.bitPos = 0;
            this.bytePos++;
        }
    }
    tail() {
        return new Stream(this.tailBytes(), 0, this.bitPos);
    }
    tailBytes() {
        const result = this.bytes.subarray(this.bytePos);
        this.bytePos = this.byteEnd;
        this.bitPos = 0;
        return result;
    }
    available() {
        return this.byteEnd - this.bytePos;
    }
    take(length) {
        return new Stream(this.takeBytes(length), 0, 0);
    }
    takeBytes(length) {
        const result = this.bytes.subarray(this.bytePos, this.bytePos + length);
        this.bytePos += length;
        this.bitPos = 0;
        return result;
    }
    readSint8() {
        return this.view.getInt8(this.bytePos++);
    }
    readSint16LE() {
        const result = this.view.getInt16(this.bytePos, true);
        this.bytePos += 2;
        return result;
    }
    readSint32LE() {
        const result = this.view.getInt32(this.bytePos, true);
        this.bytePos += 4;
        return result;
    }
    readUint8() {
        return this.view.getUint8(this.bytePos++);
    }
    peekUint8() {
        return this.view.getUint8(this.bytePos);
    }
    /**
     * Convenience method, most of the time you need `readUint16LE` for SWF.
     */
    readUint16BE() {
        const result = this.view.getUint16(this.bytePos, false);
        this.bytePos += 2;
        return result;
    }
    readUint16LE() {
        const result = this.view.getUint16(this.bytePos, true);
        this.bytePos += 2;
        return result;
    }
    readUint32BE() {
        const result = this.view.getUint32(this.bytePos, false);
        this.bytePos += 4;
        return result;
    }
    readUint32LE() {
        const result = this.view.getUint32(this.bytePos, true);
        this.bytePos += 4;
        return result;
    }
    readFloat16BE() {
        const u16 = this.view.getUint16(this.bytePos, false);
        this.bytePos += 2;
        const sign = (u16 & (1 << 15)) !== 0 ? -1 : 1;
        const exponent = (u16 & 0x7c00) >>> 10; // 0x7c00: bits 10 to 14 (inclusive)
        const fraction = u16 & 0x03ff; // 0x03ff: bits 0 to 9 (inclusive)
        if (exponent === 0) {
            return sign * Math.pow(2, -14) * (fraction / 1024);
        }
        else if (exponent === 0x1f) {
            return fraction === 0 ? sign * Infinity : NaN;
        }
        else {
            return sign * Math.pow(2, exponent - 15) * (1 + (fraction / 1024));
        }
    }
    readFloat32BE() {
        const result = this.view.getFloat32(this.bytePos, false);
        this.bytePos += 4;
        return result;
    }
    readFloat32LE() {
        const result = this.view.getFloat32(this.bytePos, true);
        this.bytePos += 4;
        return result;
    }
    readFloat64BE() {
        const result = this.view.getFloat64(this.bytePos, false);
        this.bytePos += 8;
        return result;
    }
    readFloat64LE() {
        const result = this.view.getFloat64(this.bytePos, true);
        this.bytePos += 8;
        return result;
    }
    readFixed8P8LE() {
        return swf_tree_1.Fixed8P8.fromEpsilons(this.readSint16LE());
    }
    readUfixed8P8LE() {
        return swf_tree_1.Ufixed8P8.fromEpsilons(this.readUint16LE());
    }
    readFixed16P16LE() {
        return swf_tree_1.Fixed16P16.fromEpsilons(this.readSint32LE());
    }
    readUfixed16P16LE() {
        return swf_tree_1.Ufixed16P16.fromEpsilons(this.readUint32LE());
    }
    skip(size) {
        this.bytePos += size;
    }
    skipBits(n) {
        this.readUintBits(n);
    }
    readBoolBits() {
        return this.readUintBits(1) > 0;
    }
    readSint16Bits(n) {
        return this.readIntBits(n);
    }
    /**
     * SB[n]
     */
    readSint32Bits(n) {
        return this.readIntBits(n);
    }
    readUint16Bits(n) {
        return this.readUintBits(n);
    }
    /**
     * UB[n]
     */
    readUint32Bits(n) {
        return this.readUintBits(n);
    }
    readFixed16P16Bits(n) {
        return swf_tree_1.Fixed16P16.fromEpsilons(this.readIntBits(n));
    }
    readEncodedUint32LE() {
        let result = 0;
        for (let i = 0; i < 5; i++) {
            const nextByte = this.bytes[this.bytePos++];
            if (i < 4) {
                // Bit-shift is safe
                result += (nextByte & 0x7f) << (7 * i);
            }
            else {
                // Bit-shift is unsafe, use `* Math.pow`
                result += (nextByte & 0x0f) * Math.pow(2, 28);
            }
            if ((nextByte & (1 << 7)) === 0) {
                return result;
            }
        }
        return result;
    }
    readCString() {
        const endOfString = this.bytes.indexOf(0, this.bytePos);
        if (endOfString < 0) {
            throw incomplete_stream_1.createIncompleteStreamError();
        }
        // TODO(demurgos): Remove type cast
        const strBuffer = Buffer.from(this.bytes.subarray(this.bytePos, endOfString));
        const result = strBuffer.toString("utf8");
        this.bytePos = endOfString + 1;
        return result;
    }
    readUintBits(n) {
        if (n > 32) {
            // Even if we could read up to 53 bits, we restrict it to 32 bits (which is already unsafe
            // if we consider that the max positive number safe regarding bit operations is 2^31 - 1)
            throw new incident_1.Incident("BitOverflow", "Cannot read above 32 bits without overflow");
        }
        let result = 0;
        while (n > 0) {
            if (this.bitPos + n < 8) {
                const endBitPos = this.bitPos + n;
                const shift = 1 << (endBitPos - this.bitPos);
                const cur = (this.bytes[this.bytePos] >>> 8 - endBitPos) & (shift - 1);
                result = result * shift + cur;
                n = 0;
                this.bitPos = endBitPos;
            }
            else {
                const shift = 1 << (8 - this.bitPos);
                const cur = this.bytes[this.bytePos] & (shift - 1);
                result = result * shift + cur;
                n -= (8 - this.bitPos);
                this.bitPos = 0;
                this.bytePos++;
            }
        }
        return result;
    }
    readIntBits(n) {
        if (n === 0) {
            return 0;
        }
        const unsigned = this.readUintBits(n);
        if (unsigned < Math.pow(2, n - 1)) {
            return unsigned;
        }
        else {
            return -Math.pow(2, n) + unsigned;
        }
    }
}
exports.Stream = Stream;

//# sourceMappingURL=data:application/json;charset=utf8;base64,

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(30).Buffer))

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const swf_tree_1 = __webpack_require__(12);
const incomplete_stream_1 = __webpack_require__(54);
function parseActionHeader(byteStream) {
    const actionCode = byteStream.readUint8();
    const length = actionCode < 0x80 ? 0 : byteStream.readUint16LE();
    return { actionCode, length };
}
exports.parseActionHeader = parseActionHeader;
function parseActionsString(byteStream) {
    const result = [];
    while (true) {
        if (byteStream.available() === 0) {
            throw incomplete_stream_1.createIncompleteStreamError();
        }
        if (byteStream.peekUint8() === 0) {
            // TODO: Consume the last byte?!
            break;
        }
        result.push(parseAction(byteStream));
    }
    return result;
}
exports.parseActionsString = parseActionsString;
function parseActionsBlock(byteStream) {
    const block = [];
    while (byteStream.available() > 0) {
        block.push(parseAction(byteStream));
    }
    return block;
}
exports.parseActionsBlock = parseActionsBlock;
/* tslint:disable-next-line:cyclomatic-complexity */
function parseAction(byteStream) {
    const startPos = byteStream.bytePos;
    const header = parseActionHeader(byteStream);
    if (byteStream.available() < header.length) {
        const headerLength = byteStream.bytePos - startPos;
        throw incomplete_stream_1.createIncompleteStreamError(headerLength + header.length);
    }
    const actionDataStartPos = byteStream.bytePos;
    let result;
    switch (header.actionCode) {
        case 0x04:
            result = { action: swf_tree_1.avm1.ActionType.NextFrame };
            break;
        case 0x05:
            result = { action: swf_tree_1.avm1.ActionType.PreviousFrame };
            break;
        case 0x06:
            result = { action: swf_tree_1.avm1.ActionType.Play };
            break;
        case 0x07:
            result = { action: swf_tree_1.avm1.ActionType.Stop };
            break;
        case 0x08:
            result = { action: swf_tree_1.avm1.ActionType.ToggleQuality };
            break;
        case 0x09:
            result = { action: swf_tree_1.avm1.ActionType.StopSounds };
            break;
        case 0x0a:
            result = { action: swf_tree_1.avm1.ActionType.Add };
            break;
        case 0x0b:
            result = { action: swf_tree_1.avm1.ActionType.Subtract };
            break;
        case 0x0c:
            result = { action: swf_tree_1.avm1.ActionType.Multiply };
            break;
        case 0x0d:
            result = { action: swf_tree_1.avm1.ActionType.Divide };
            break;
        case 0x0e:
            result = { action: swf_tree_1.avm1.ActionType.Equals };
            break;
        case 0x0f:
            result = { action: swf_tree_1.avm1.ActionType.Less };
            break;
        case 0x10:
            result = { action: swf_tree_1.avm1.ActionType.And };
            break;
        case 0x11:
            result = { action: swf_tree_1.avm1.ActionType.Or };
            break;
        case 0x12:
            result = { action: swf_tree_1.avm1.ActionType.Not };
            break;
        case 0x13:
            result = { action: swf_tree_1.avm1.ActionType.StringEquals };
            break;
        case 0x14:
            result = { action: swf_tree_1.avm1.ActionType.StringLength };
            break;
        case 0x15:
            result = { action: swf_tree_1.avm1.ActionType.StringExtract };
            break;
        case 0x17:
            result = { action: swf_tree_1.avm1.ActionType.Pop };
            break;
        case 0x18:
            result = { action: swf_tree_1.avm1.ActionType.ToInteger };
            break;
        case 0x1c:
            result = { action: swf_tree_1.avm1.ActionType.GetVariable };
            break;
        case 0x1d:
            result = { action: swf_tree_1.avm1.ActionType.SetVariable };
            break;
        case 0x20:
            result = { action: swf_tree_1.avm1.ActionType.SetTarget2 };
            break;
        case 0x21:
            result = { action: swf_tree_1.avm1.ActionType.StringAdd };
            break;
        case 0x22:
            result = { action: swf_tree_1.avm1.ActionType.GetProperty };
            break;
        case 0x23:
            result = { action: swf_tree_1.avm1.ActionType.SetProperty };
            break;
        case 0x24:
            result = { action: swf_tree_1.avm1.ActionType.CloneSprite };
            break;
        case 0x25:
            result = { action: swf_tree_1.avm1.ActionType.RemoveSprite };
            break;
        case 0x26:
            result = { action: swf_tree_1.avm1.ActionType.Trace };
            break;
        case 0x27:
            result = { action: swf_tree_1.avm1.ActionType.StartDrag };
            break;
        case 0x28:
            result = { action: swf_tree_1.avm1.ActionType.EndDrag };
            break;
        case 0x29:
            result = { action: swf_tree_1.avm1.ActionType.StringLess };
            break;
        case 0x2a:
            result = { action: swf_tree_1.avm1.ActionType.Throw };
            break;
        case 0x2b:
            result = { action: swf_tree_1.avm1.ActionType.CastOp };
            break;
        case 0x2c:
            result = { action: swf_tree_1.avm1.ActionType.ImplementsOp };
            break;
        case 0x2d:
            result = { action: swf_tree_1.avm1.ActionType.FsCommand2 };
            break;
        case 0x30:
            result = { action: swf_tree_1.avm1.ActionType.RandomNumber };
            break;
        case 0x31:
            result = { action: swf_tree_1.avm1.ActionType.MbStringLength };
            break;
        case 0x32:
            result = { action: swf_tree_1.avm1.ActionType.CharToAscii };
            break;
        case 0x33:
            result = { action: swf_tree_1.avm1.ActionType.AsciiToChar };
            break;
        case 0x34:
            result = { action: swf_tree_1.avm1.ActionType.GetTime };
            break;
        case 0x35:
            result = { action: swf_tree_1.avm1.ActionType.MbStringExtract };
            break;
        case 0x36:
            result = { action: swf_tree_1.avm1.ActionType.MbCharToAscii };
            break;
        case 0x37:
            result = { action: swf_tree_1.avm1.ActionType.MbAsciiToChar };
            break;
        case 0x3a:
            result = { action: swf_tree_1.avm1.ActionType.Delete };
            break;
        case 0x3b:
            result = { action: swf_tree_1.avm1.ActionType.Delete2 };
            break;
        case 0x3c:
            result = { action: swf_tree_1.avm1.ActionType.DefineLocal };
            break;
        case 0x3d:
            result = { action: swf_tree_1.avm1.ActionType.CallFunction };
            break;
        case 0x3e:
            result = { action: swf_tree_1.avm1.ActionType.Return };
            break;
        case 0x3f:
            result = { action: swf_tree_1.avm1.ActionType.Modulo };
            break;
        case 0x40:
            result = { action: swf_tree_1.avm1.ActionType.NewObject };
            break;
        case 0x41:
            result = { action: swf_tree_1.avm1.ActionType.DefineLocal2 };
            break;
        case 0x42:
            result = { action: swf_tree_1.avm1.ActionType.InitArray };
            break;
        case 0x43:
            result = { action: swf_tree_1.avm1.ActionType.InitObject };
            break;
        case 0x44:
            result = { action: swf_tree_1.avm1.ActionType.TypeOf };
            break;
        case 0x45:
            result = { action: swf_tree_1.avm1.ActionType.TargetPath };
            break;
        case 0x46:
            result = { action: swf_tree_1.avm1.ActionType.Enumerate };
            break;
        case 0x47:
            result = { action: swf_tree_1.avm1.ActionType.Add2 };
            break;
        case 0x48:
            result = { action: swf_tree_1.avm1.ActionType.Less2 };
            break;
        case 0x49:
            result = { action: swf_tree_1.avm1.ActionType.Equals2 };
            break;
        case 0x4a:
            result = { action: swf_tree_1.avm1.ActionType.ToNumber };
            break;
        case 0x4b:
            result = { action: swf_tree_1.avm1.ActionType.ToString };
            break;
        case 0x4c:
            result = { action: swf_tree_1.avm1.ActionType.PushDuplicate };
            break;
        case 0x4d:
            result = { action: swf_tree_1.avm1.ActionType.StackSwap };
            break;
        case 0x4e:
            result = { action: swf_tree_1.avm1.ActionType.GetMember };
            break;
        case 0x4f:
            result = { action: swf_tree_1.avm1.ActionType.SetMember };
            break;
        case 0x50:
            result = { action: swf_tree_1.avm1.ActionType.Increment };
            break;
        case 0x51:
            result = { action: swf_tree_1.avm1.ActionType.Decrement };
            break;
        case 0x52:
            result = { action: swf_tree_1.avm1.ActionType.CallMethod };
            break;
        case 0x53:
            result = { action: swf_tree_1.avm1.ActionType.NewMethod };
            break;
        case 0x54:
            result = { action: swf_tree_1.avm1.ActionType.InstanceOf };
            break;
        case 0x55:
            result = { action: swf_tree_1.avm1.ActionType.Enumerate2 };
            break;
        case 0x60:
            result = { action: swf_tree_1.avm1.ActionType.BitAnd };
            break;
        case 0x61:
            result = { action: swf_tree_1.avm1.ActionType.BitOr };
            break;
        case 0x62:
            result = { action: swf_tree_1.avm1.ActionType.BitXor };
            break;
        case 0x63:
            result = { action: swf_tree_1.avm1.ActionType.BitLShift };
            break;
        case 0x64:
            result = { action: swf_tree_1.avm1.ActionType.BitRShift };
            break;
        case 0x65:
            result = { action: swf_tree_1.avm1.ActionType.BitURShift };
            break;
        case 0x66:
            result = { action: swf_tree_1.avm1.ActionType.StrictEquals };
            break;
        case 0x67:
            result = { action: swf_tree_1.avm1.ActionType.Greater };
            break;
        case 0x68:
            result = { action: swf_tree_1.avm1.ActionType.StringGreater };
            break;
        case 0x69:
            result = { action: swf_tree_1.avm1.ActionType.Extends };
            break;
        case 0x81:
            result = parseGotoFrameAction(byteStream);
            break;
        case 0x83:
            result = parseGetUrlAction(byteStream);
            break;
        case 0x87:
            result = parseStoreRegisterAction(byteStream);
            break;
        case 0x88:
            result = parseConstantPoolAction(byteStream);
            break;
        case 0x8a:
            result = parseWaitForFrameAction(byteStream);
            break;
        case 0x8b:
            result = parseSetTargetAction(byteStream);
            break;
        case 0x8c:
            result = parseGotoLabelAction(byteStream);
            break;
        case 0x8d:
            result = parseWaitForFrame2Action(byteStream);
            break;
        case 0x8e:
            result = parseDefineFunction2Action(byteStream);
            break;
        case 0x8f:
            result = parseTryAction(byteStream);
            break;
        case 0x94:
            result = parseWithAction(byteStream);
            break;
        case 0x96:
            result = parsePushAction(byteStream.take(header.length));
            break;
        case 0x99:
            result = parseJumpAction(byteStream);
            break;
        case 0x9a:
            result = parseGetUrl2Action(byteStream);
            break;
        case 0x9b:
            result = parseDefineFunctionAction(byteStream);
            break;
        case 0x9d:
            result = parseIfAction(byteStream);
            break;
        case 0x9e:
            result = { action: swf_tree_1.avm1.ActionType.Call };
            break;
        case 0x9f:
            result = parseGotoFrame2Action(byteStream);
            break;
        default:
            result = { action: swf_tree_1.avm1.ActionType.Unknown, actionCode: header.actionCode };
            byteStream.skip(header.length);
            break;
    }
    const actionDataLength = byteStream.bytePos - actionDataStartPos;
    if (actionDataLength < header.length) {
        byteStream.skip(header.length - actionDataLength);
    }
    return result;
}
exports.parseAction = parseAction;
function parseGotoFrameAction(byteStream) {
    const frame = byteStream.readUint16LE();
    return {
        action: swf_tree_1.avm1.ActionType.GotoFrame,
        frame,
    };
}
exports.parseGotoFrameAction = parseGotoFrameAction;
function parseGetUrlAction(byteStream) {
    const url = byteStream.readCString();
    const target = byteStream.readCString();
    return {
        action: swf_tree_1.avm1.ActionType.GetUrl,
        url,
        target,
    };
}
exports.parseGetUrlAction = parseGetUrlAction;
function parseStoreRegisterAction(byteStream) {
    const registerNumber = byteStream.readUint8();
    return {
        action: swf_tree_1.avm1.ActionType.StoreRegister,
        registerNumber,
    };
}
exports.parseStoreRegisterAction = parseStoreRegisterAction;
function parseConstantPoolAction(byteStream) {
    const length = byteStream.readUint16LE();
    const constantPool = [];
    for (let i = 0; i < 0; i++) {
        constantPool.push(byteStream.readCString());
    }
    return {
        action: swf_tree_1.avm1.ActionType.ConstantPool,
        constantPool,
    };
}
exports.parseConstantPoolAction = parseConstantPoolAction;
function parseWaitForFrameAction(byteStream) {
    const frame = byteStream.readUint16LE();
    const skipCount = byteStream.readUint8();
    return {
        action: swf_tree_1.avm1.ActionType.WaitForFrame,
        frame,
        skipCount,
    };
}
exports.parseWaitForFrameAction = parseWaitForFrameAction;
function parseSetTargetAction(byteStream) {
    const targetName = byteStream.readCString();
    return {
        action: swf_tree_1.avm1.ActionType.SetTarget,
        targetName,
    };
}
exports.parseSetTargetAction = parseSetTargetAction;
function parseGotoLabelAction(byteStream) {
    const label = byteStream.readCString();
    return {
        action: swf_tree_1.avm1.ActionType.GotoLabel,
        label,
    };
}
exports.parseGotoLabelAction = parseGotoLabelAction;
function parseWaitForFrame2Action(byteStream) {
    const skipCount = byteStream.readUint8();
    return {
        action: swf_tree_1.avm1.ActionType.WaitForFrame2,
        skipCount,
    };
}
exports.parseWaitForFrame2Action = parseWaitForFrame2Action;
function parseDefineFunction2Action(byteStream) {
    const name = byteStream.readCString();
    const parameterCount = byteStream.readUint16LE();
    const registerCount = byteStream.readUint8();
    const bitStream = byteStream.asBitStream();
    const preloadParent = bitStream.readBoolBits();
    const preloadRoot = bitStream.readBoolBits();
    const suppressSuper = bitStream.readBoolBits();
    const preloadSuper = bitStream.readBoolBits();
    const suppressArguments = bitStream.readBoolBits();
    const preloadArguments = bitStream.readBoolBits();
    const suppressThis = bitStream.readBoolBits();
    const preloadThis = bitStream.readBoolBits();
    bitStream.skipBits(7);
    const preloadGlobal = bitStream.readBoolBits();
    bitStream.align(); // TODO(demurgos): Assert that bitStream.align() is a no-op
    const parameters = [];
    for (let i = 0; i < parameterCount; i++) {
        const register = byteStream.readUint8();
        const name = byteStream.readCString();
        parameters.push({ register, name });
    }
    const codeSize = byteStream.readUint16LE();
    const body = parseActionsBlock(byteStream.take(codeSize));
    return {
        action: swf_tree_1.avm1.ActionType.DefineFunction2,
        name,
        preloadParent,
        preloadRoot,
        suppressSuper,
        preloadSuper,
        suppressArguments,
        preloadArguments,
        suppressThis,
        preloadThis,
        preloadGlobal,
        registerCount,
        parameters,
        body,
    };
}
exports.parseDefineFunction2Action = parseDefineFunction2Action;
function parseCatchTarget(byteStream, catchInRegister) {
    if (catchInRegister) {
        return { type: swf_tree_1.avm1.CatchTargetType.Register, register: byteStream.readUint8() };
    }
    else {
        return { type: swf_tree_1.avm1.CatchTargetType.Variable, variable: byteStream.readCString() };
    }
}
function parseTryAction(byteStream) {
    const flags = byteStream.readUint8();
    // (Skip first 5 bits)
    const catchInRegister = (flags & (1 << 2)) !== 0;
    const hasFinallyBlock = (flags & (1 << 1)) !== 0;
    const hasCatchBlock = (flags & (1 << 0)) !== 0;
    const trySize = byteStream.readUint16LE();
    const finallySize = byteStream.readUint16LE();
    const catchSize = byteStream.readUint16LE();
    const catchTarget = parseCatchTarget(byteStream, catchInRegister);
    const tryBody = parseActionsBlock(byteStream.take(trySize));
    let catchBody = undefined;
    if (hasCatchBlock) {
        catchBody = parseActionsBlock(byteStream.take(catchSize));
    }
    let finallyBody = undefined;
    if (hasFinallyBlock) {
        finallyBody = parseActionsBlock(byteStream.take(finallySize));
    }
    return {
        action: swf_tree_1.avm1.ActionType.Try,
        try: tryBody,
        catch: catchBody,
        catchTarget,
        finally: finallyBody,
    };
}
exports.parseTryAction = parseTryAction;
function parseWithAction(byteStream) {
    const withSize = byteStream.readUint16LE();
    const withBody = parseActionsBlock(byteStream.take(withSize));
    return {
        action: swf_tree_1.avm1.ActionType.With,
        with: withBody,
    };
}
exports.parseWithAction = parseWithAction;
function parsePushAction(byteStream) {
    const values = [];
    while (byteStream.available() > 0) {
        values.push(parseActionValue(byteStream));
    }
    return {
        action: swf_tree_1.avm1.ActionType.Push,
        values,
    };
}
exports.parsePushAction = parsePushAction;
function parseActionValue(byteStream) {
    const typeCode = byteStream.readUint8();
    switch (typeCode) {
        case 0:
            return { type: swf_tree_1.avm1.ValueType.CString, value: byteStream.readCString() };
        case 1:
            return { type: swf_tree_1.avm1.ValueType.Float32, value: byteStream.readFloat32LE() };
        case 2:
            return { type: swf_tree_1.avm1.ValueType.Null };
        case 3:
            return { type: swf_tree_1.avm1.ValueType.Undefined };
        case 4:
            return { type: swf_tree_1.avm1.ValueType.Register, value: byteStream.readUint8() };
        case 5:
            return { type: swf_tree_1.avm1.ValueType.Boolean, value: byteStream.readUint8() !== 0 };
        case 6:
            return { type: swf_tree_1.avm1.ValueType.Float64, value: byteStream.readFloat64LE() };
        case 7:
            return { type: swf_tree_1.avm1.ValueType.Int32, value: byteStream.readSint32LE() };
        case 8:
            return { type: swf_tree_1.avm1.ValueType.Constant, value: byteStream.readUint8() };
        case 9:
            return { type: swf_tree_1.avm1.ValueType.Constant, value: byteStream.readUint16LE() };
        default:
            throw new Error(`Unknown type code: ${typeCode}`);
    }
}
exports.parseActionValue = parseActionValue;
function parseJumpAction(byteStream) {
    const offset = byteStream.readUint16LE();
    return {
        action: swf_tree_1.avm1.ActionType.Jump,
        offset,
    };
}
exports.parseJumpAction = parseJumpAction;
function parseGetUrl2Action(byteStream) {
    const bitStream = byteStream.asBitStream();
    let method;
    switch (bitStream.readUint16Bits(2)) {
        case 0:
            method = swf_tree_1.avm1.GetUrl2Method.None;
            break;
        case 1:
            method = swf_tree_1.avm1.GetUrl2Method.Get;
            break;
        case 2:
            method = swf_tree_1.avm1.GetUrl2Method.Post;
            break;
        default:
            throw new incident_1.Incident("UnexpectGetUrl2Method", "Unexpected value for the getUrl2 method");
    }
    bitStream.skipBits(4);
    const loadTarget = bitStream.readBoolBits();
    const loadVariables = bitStream.readBoolBits();
    bitStream.align();
    return {
        action: swf_tree_1.avm1.ActionType.GetUrl2,
        method,
        loadTarget,
        loadVariables,
    };
}
exports.parseGetUrl2Action = parseGetUrl2Action;
function parseDefineFunctionAction(byteStream) {
    const name = byteStream.readCString();
    const parameterCount = byteStream.readUint16LE();
    const parameters = [];
    for (let i = 0; i < parameterCount; i++) {
        parameters.push(byteStream.readCString());
    }
    const bodySize = byteStream.readUint16LE();
    const body = parseActionsBlock(byteStream.take(bodySize));
    return {
        action: swf_tree_1.avm1.ActionType.DefineFunction,
        name,
        parameters,
        body,
    };
}
exports.parseDefineFunctionAction = parseDefineFunctionAction;
function parseIfAction(byteStream) {
    const offset = byteStream.readUint16LE();
    return {
        action: swf_tree_1.avm1.ActionType.If,
        offset,
    };
}
exports.parseIfAction = parseIfAction;
function parseGotoFrame2Action(byteStream) {
    const flags = byteStream.readUint8();
    // (Skip first 6 bits)
    const hasSceneBias = (flags & (1 << 1)) !== 0;
    const play = (flags & (1 << 0)) !== 0;
    const sceneBias = hasSceneBias ? byteStream.readUint16LE() : 0;
    return {
        action: swf_tree_1.avm1.ActionType.GotoFrame2,
        play,
        sceneBias,
    };
}
exports.parseGotoFrame2Action = parseGotoFrame2Action;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcGFyc2Vycy9hdm0xLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQW9DO0FBRXBDLHVDQUFnQztBQUNoQyxtRUFBMEU7QUFRMUUsMkJBQWtDLFVBQXNCO0lBQ3RELE1BQU0sVUFBVSxHQUFVLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNqRCxNQUFNLE1BQU0sR0FBVyxVQUFVLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN6RSxNQUFNLENBQUMsRUFBQyxVQUFVLEVBQUUsTUFBTSxFQUFDLENBQUM7QUFDOUIsQ0FBQztBQUpELDhDQUlDO0FBRUQsNEJBQW1DLFVBQXNCO0lBQ3ZELE1BQU0sTUFBTSxHQUFrQixFQUFFLENBQUM7SUFFakMsT0FBTyxJQUFJLEVBQUUsQ0FBQztRQUNaLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLE1BQU0sK0NBQTJCLEVBQUUsQ0FBQztRQUN0QyxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDakMsZ0NBQWdDO1lBQ2hDLEtBQUssQ0FBQztRQUNSLENBQUM7UUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFmRCxnREFlQztBQUVELDJCQUFrQyxVQUFzQjtJQUN0RCxNQUFNLEtBQUssR0FBa0IsRUFBRSxDQUFDO0lBQ2hDLE9BQU8sVUFBVSxDQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDO1FBQ2xDLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUNELE1BQU0sQ0FBQyxLQUFLLENBQUM7QUFDZixDQUFDO0FBTkQsOENBTUM7QUFFRCxvREFBb0Q7QUFDcEQscUJBQTRCLFVBQXNCO0lBQ2hELE1BQU0sUUFBUSxHQUFXLFVBQVUsQ0FBQyxPQUFPLENBQUM7SUFDNUMsTUFBTSxNQUFNLEdBQWlCLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzNELEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxTQUFTLEVBQUUsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUMzQyxNQUFNLFlBQVksR0FBVyxVQUFVLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQztRQUMzRCxNQUFNLCtDQUEyQixDQUFDLFlBQVksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEUsQ0FBQztJQUNELE1BQU0sa0JBQWtCLEdBQVcsVUFBVSxDQUFDLE9BQU8sQ0FBQztJQUN0RCxJQUFJLE1BQW1CLENBQUM7SUFDeEIsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7UUFDMUIsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFDLENBQUM7WUFDakQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFDLENBQUM7WUFDeEMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFDLENBQUM7WUFDeEMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFDLENBQUM7WUFDakQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFDLENBQUM7WUFDOUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFDLENBQUM7WUFDdkMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFDLENBQUM7WUFDNUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFDLENBQUM7WUFDNUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFDLENBQUM7WUFDMUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFDLENBQUM7WUFDMUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFDLENBQUM7WUFDeEMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFDLENBQUM7WUFDdkMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFDLENBQUM7WUFDdEMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFDLENBQUM7WUFDdkMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxFQUFDLENBQUM7WUFDaEQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxFQUFDLENBQUM7WUFDaEQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFDLENBQUM7WUFDakQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFDLENBQUM7WUFDdkMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFDLENBQUM7WUFDL0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFDLENBQUM7WUFDL0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFDLENBQUM7WUFDOUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFDLENBQUM7WUFDL0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFDLENBQUM7WUFDL0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFDLENBQUM7WUFDL0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxFQUFDLENBQUM7WUFDaEQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFDLENBQUM7WUFDekMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFDLENBQUM7WUFDM0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFDLENBQUM7WUFDOUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFDLENBQUM7WUFDekMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFDLENBQUM7WUFDMUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxFQUFDLENBQUM7WUFDaEQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFDLENBQUM7WUFDOUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxFQUFDLENBQUM7WUFDaEQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxFQUFDLENBQUM7WUFDbEQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFDLENBQUM7WUFDL0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFDLENBQUM7WUFDL0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFDLENBQUM7WUFDM0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsZUFBZSxFQUFDLENBQUM7WUFDbkQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFDLENBQUM7WUFDakQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFDLENBQUM7WUFDakQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFDLENBQUM7WUFDMUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFDLENBQUM7WUFDM0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFDLENBQUM7WUFDL0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxFQUFDLENBQUM7WUFDaEQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFDLENBQUM7WUFDMUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFDLENBQUM7WUFDMUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxFQUFDLENBQUM7WUFDaEQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFDLENBQUM7WUFDOUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFDLENBQUM7WUFDMUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFDLENBQUM7WUFDOUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFDLENBQUM7WUFDeEMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFDLENBQUM7WUFDekMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFDLENBQUM7WUFDM0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFDLENBQUM7WUFDNUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFDLENBQUM7WUFDNUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFDLENBQUM7WUFDakQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFDLENBQUM7WUFDOUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFDLENBQUM7WUFDOUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFDLENBQUM7WUFDOUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFDLENBQUM7WUFDMUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFDLENBQUM7WUFDekMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFDLENBQUM7WUFDMUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFDLENBQUM7WUFDN0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFDLENBQUM7WUFDOUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxFQUFDLENBQUM7WUFDaEQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFDLENBQUM7WUFDM0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFDLENBQUM7WUFDakQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLEVBQUMsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFDLENBQUM7WUFDM0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLG9CQUFvQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQzFDLEtBQUssQ0FBQztRQUNSLEtBQUssSUFBSTtZQUNQLE1BQU0sR0FBRyxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUN2QyxLQUFLLENBQUM7UUFDUixLQUFLLElBQUk7WUFDUCxNQUFNLEdBQUcsd0JBQXdCLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDOUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLHVCQUF1QixDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQzdDLEtBQUssQ0FBQztRQUNSLEtBQUssSUFBSTtZQUNQLE1BQU0sR0FBRyx1QkFBdUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUM3QyxLQUFLLENBQUM7UUFDUixLQUFLLElBQUk7WUFDUCxNQUFNLEdBQUcsb0JBQW9CLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDMUMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLG9CQUFvQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQzFDLEtBQUssQ0FBQztRQUNSLEtBQUssSUFBSTtZQUNQLE1BQU0sR0FBRyx3QkFBd0IsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUM5QyxLQUFLLENBQUM7UUFDUixLQUFLLElBQUk7WUFDUCxNQUFNLEdBQUcsMEJBQTBCLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDaEQsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLGNBQWMsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNwQyxLQUFLLENBQUM7UUFDUixLQUFLLElBQUk7WUFDUCxNQUFNLEdBQUcsZUFBZSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3JDLEtBQUssQ0FBQztRQUNSLEtBQUssSUFBSTtZQUNQLE1BQU0sR0FBRyxlQUFlLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUN6RCxLQUFLLENBQUM7UUFDUixLQUFLLElBQUk7WUFDUCxNQUFNLEdBQUcsZUFBZSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3JDLEtBQUssQ0FBQztRQUNSLEtBQUssSUFBSTtZQUNQLE1BQU0sR0FBRyxrQkFBa0IsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUN4QyxLQUFLLENBQUM7UUFDUixLQUFLLElBQUk7WUFDUCxNQUFNLEdBQUcseUJBQXlCLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDL0MsS0FBSyxDQUFDO1FBQ1IsS0FBSyxJQUFJO1lBQ1AsTUFBTSxHQUFHLGFBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNuQyxLQUFLLENBQUM7UUFDUixLQUFLLElBQUk7WUFDUCxNQUFNLEdBQUcsRUFBQyxNQUFNLEVBQUUsZUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUMsQ0FBQztZQUN4QyxLQUFLLENBQUM7UUFDUixLQUFLLElBQUk7WUFDUCxNQUFNLEdBQUcscUJBQXFCLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDM0MsS0FBSyxDQUFDO1FBQ1I7WUFDRSxNQUFNLEdBQUcsRUFBQyxNQUFNLEVBQUUsZUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sQ0FBQyxVQUFVLEVBQUMsQ0FBQztZQUMxRSxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUMvQixLQUFLLENBQUM7SUFDVixDQUFDO0lBQ0QsTUFBTSxnQkFBZ0IsR0FBVyxVQUFVLENBQUMsT0FBTyxHQUFHLGtCQUFrQixDQUFDO0lBQ3pFLEVBQUUsQ0FBQyxDQUFDLGdCQUFnQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ3JDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFRCxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFqVUQsa0NBaVVDO0FBRUQsOEJBQXFDLFVBQXNCO0lBQ3pELE1BQU0sS0FBSyxHQUFXLFVBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNoRCxNQUFNLENBQUM7UUFDTCxNQUFNLEVBQUUsZUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTO1FBQ2pDLEtBQUs7S0FDTixDQUFDO0FBQ0osQ0FBQztBQU5ELG9EQU1DO0FBRUQsMkJBQWtDLFVBQXNCO0lBQ3RELE1BQU0sR0FBRyxHQUFXLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUM3QyxNQUFNLE1BQU0sR0FBVyxVQUFVLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDaEQsTUFBTSxDQUFDO1FBQ0wsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsTUFBTTtRQUM5QixHQUFHO1FBQ0gsTUFBTTtLQUNQLENBQUM7QUFDSixDQUFDO0FBUkQsOENBUUM7QUFFRCxrQ0FBeUMsVUFBc0I7SUFDN0QsTUFBTSxjQUFjLEdBQVUsVUFBVSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ3JELE1BQU0sQ0FBQztRQUNMLE1BQU0sRUFBRSxlQUFJLENBQUMsVUFBVSxDQUFDLGFBQWE7UUFDckMsY0FBYztLQUNmLENBQUM7QUFDSixDQUFDO0FBTkQsNERBTUM7QUFFRCxpQ0FBd0MsVUFBc0I7SUFDNUQsTUFBTSxNQUFNLEdBQWEsVUFBVSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ25ELE1BQU0sWUFBWSxHQUFhLEVBQUUsQ0FBQztJQUNsQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1FBQ25DLFlBQVksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUNELE1BQU0sQ0FBQztRQUNMLE1BQU0sRUFBRSxlQUFJLENBQUMsVUFBVSxDQUFDLFlBQVk7UUFDcEMsWUFBWTtLQUNiLENBQUM7QUFDSixDQUFDO0FBVkQsMERBVUM7QUFFRCxpQ0FBd0MsVUFBc0I7SUFDNUQsTUFBTSxLQUFLLEdBQWEsVUFBVSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ2xELE1BQU0sU0FBUyxHQUFhLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNuRCxNQUFNLENBQUM7UUFDTCxNQUFNLEVBQUUsZUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZO1FBQ3BDLEtBQUs7UUFDTCxTQUFTO0tBQ1YsQ0FBQztBQUNKLENBQUM7QUFSRCwwREFRQztBQUVELDhCQUFxQyxVQUFzQjtJQUN6RCxNQUFNLFVBQVUsR0FBVyxVQUFVLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDcEQsTUFBTSxDQUFDO1FBQ0wsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUztRQUNqQyxVQUFVO0tBQ1gsQ0FBQztBQUNKLENBQUM7QUFORCxvREFNQztBQUVELDhCQUFxQyxVQUFzQjtJQUN6RCxNQUFNLEtBQUssR0FBVyxVQUFVLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDL0MsTUFBTSxDQUFDO1FBQ0wsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsU0FBUztRQUNqQyxLQUFLO0tBQ04sQ0FBQztBQUNKLENBQUM7QUFORCxvREFNQztBQUVELGtDQUF5QyxVQUFzQjtJQUM3RCxNQUFNLFNBQVMsR0FBYSxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDbkQsTUFBTSxDQUFDO1FBQ0wsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsYUFBYTtRQUNyQyxTQUFTO0tBQ1YsQ0FBQztBQUNKLENBQUM7QUFORCw0REFNQztBQUVELG9DQUEyQyxVQUFzQjtJQUMvRCxNQUFNLElBQUksR0FBVyxVQUFVLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDOUMsTUFBTSxjQUFjLEdBQWEsVUFBVSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzNELE1BQU0sYUFBYSxHQUFhLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUV2RCxNQUFNLFNBQVMsR0FBYyxVQUFVLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdEQsTUFBTSxhQUFhLEdBQVksU0FBUyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3hELE1BQU0sV0FBVyxHQUFZLFNBQVMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN0RCxNQUFNLGFBQWEsR0FBWSxTQUFTLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDeEQsTUFBTSxZQUFZLEdBQVksU0FBUyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3ZELE1BQU0saUJBQWlCLEdBQVksU0FBUyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzVELE1BQU0sZ0JBQWdCLEdBQVksU0FBUyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzNELE1BQU0sWUFBWSxHQUFZLFNBQVMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN2RCxNQUFNLFdBQVcsR0FBWSxTQUFTLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDdEQsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN0QixNQUFNLGFBQWEsR0FBWSxTQUFTLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDeEQsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsMkRBQTJEO0lBRTlFLE1BQU0sVUFBVSxHQUFxQixFQUFFLENBQUM7SUFDeEMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQVcsQ0FBQyxFQUFFLENBQUMsR0FBRyxjQUFjLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUNoRCxNQUFNLFFBQVEsR0FBVSxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDL0MsTUFBTSxJQUFJLEdBQVcsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQzlDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBQyxRQUFRLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBQ0QsTUFBTSxRQUFRLEdBQWEsVUFBVSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3JELE1BQU0sSUFBSSxHQUFrQixpQkFBaUIsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFFekUsTUFBTSxDQUFDO1FBQ0wsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsZUFBZTtRQUN2QyxJQUFJO1FBQ0osYUFBYTtRQUNiLFdBQVc7UUFDWCxhQUFhO1FBQ2IsWUFBWTtRQUNaLGlCQUFpQjtRQUNqQixnQkFBZ0I7UUFDaEIsWUFBWTtRQUNaLFdBQVc7UUFDWCxhQUFhO1FBQ2IsYUFBYTtRQUNiLFVBQVU7UUFDVixJQUFJO0tBQ0wsQ0FBQztBQUNKLENBQUM7QUEzQ0QsZ0VBMkNDO0FBRUQsMEJBQTBCLFVBQXNCLEVBQUUsZUFBd0I7SUFDeEUsRUFBRSxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztRQUNwQixNQUFNLENBQUMsRUFBQyxJQUFJLEVBQUUsZUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxTQUFTLEVBQUUsRUFBQyxDQUFDO0lBQ2pGLENBQUM7SUFBQyxJQUFJLENBQUMsQ0FBQztRQUNOLE1BQU0sQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFJLENBQUMsZUFBZSxDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsVUFBVSxDQUFDLFdBQVcsRUFBRSxFQUFDLENBQUM7SUFDbkYsQ0FBQztBQUNILENBQUM7QUFFRCx3QkFBK0IsVUFBc0I7SUFDbkQsTUFBTSxLQUFLLEdBQVUsVUFBVSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQzVDLHNCQUFzQjtJQUN0QixNQUFNLGVBQWUsR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxRCxNQUFNLGVBQWUsR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxRCxNQUFNLGFBQWEsR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUV4RCxNQUFNLE9BQU8sR0FBVyxVQUFVLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDbEQsTUFBTSxXQUFXLEdBQVcsVUFBVSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RELE1BQU0sU0FBUyxHQUFXLFVBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNwRCxNQUFNLFdBQVcsR0FBcUIsZ0JBQWdCLENBQUMsVUFBVSxFQUFFLGVBQWUsQ0FBQyxDQUFDO0lBQ3BGLE1BQU0sT0FBTyxHQUFrQixpQkFBaUIsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDM0UsSUFBSSxTQUFTLEdBQThCLFNBQVMsQ0FBQztJQUNyRCxFQUFFLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO1FBQ2xCLFNBQVMsR0FBRyxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUNELElBQUksV0FBVyxHQUE4QixTQUFTLENBQUM7SUFDdkQsRUFBRSxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztRQUNwQixXQUFXLEdBQUcsaUJBQWlCLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFDRCxNQUFNLENBQUM7UUFDTCxNQUFNLEVBQUUsZUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHO1FBQzNCLEdBQUcsRUFBRSxPQUFPO1FBQ1osS0FBSyxFQUFFLFNBQVM7UUFDaEIsV0FBVztRQUNYLE9BQU8sRUFBRSxXQUFXO0tBQ3JCLENBQUM7QUFDSixDQUFDO0FBM0JELHdDQTJCQztBQUVELHlCQUFnQyxVQUFzQjtJQUNwRCxNQUFNLFFBQVEsR0FBVyxVQUFVLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDbkQsTUFBTSxRQUFRLEdBQWtCLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUM3RSxNQUFNLENBQUM7UUFDTCxNQUFNLEVBQUUsZUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJO1FBQzVCLElBQUksRUFBRSxRQUFRO0tBQ2YsQ0FBQztBQUNKLENBQUM7QUFQRCwwQ0FPQztBQUVELHlCQUFnQyxVQUFzQjtJQUNwRCxNQUFNLE1BQU0sR0FBaUIsRUFBRSxDQUFDO0lBQ2hDLE9BQU8sVUFBVSxDQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDO1FBQ2xDLE1BQU0sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBQ0QsTUFBTSxDQUFDO1FBQ0wsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsSUFBSTtRQUM1QixNQUFNO0tBQ1AsQ0FBQztBQUNKLENBQUM7QUFURCwwQ0FTQztBQUVELDBCQUFpQyxVQUFzQjtJQUNyRCxNQUFNLFFBQVEsR0FBVSxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDL0MsTUFBTSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUNqQixLQUFLLENBQUM7WUFDSixNQUFNLENBQUMsRUFBQyxJQUFJLEVBQUUsZUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLFVBQVUsQ0FBQyxXQUFXLEVBQUUsRUFBQyxDQUFDO1FBQ3pFLEtBQUssQ0FBQztZQUNKLE1BQU0sQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsVUFBVSxDQUFDLGFBQWEsRUFBRSxFQUFDLENBQUM7UUFDM0UsS0FBSyxDQUFDO1lBQ0osTUFBTSxDQUFDLEVBQUMsSUFBSSxFQUFFLGVBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFDLENBQUM7UUFDckMsS0FBSyxDQUFDO1lBQ0osTUFBTSxDQUFDLEVBQUMsSUFBSSxFQUFFLGVBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFDLENBQUM7UUFDMUMsS0FBSyxDQUFDO1lBQ0osTUFBTSxDQUFDLEVBQUMsSUFBSSxFQUFFLGVBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLEtBQUssRUFBRSxVQUFVLENBQUMsU0FBUyxFQUFFLEVBQUMsQ0FBQztRQUN4RSxLQUFLLENBQUM7WUFDSixNQUFNLENBQUMsRUFBQyxJQUFJLEVBQUUsZUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLFVBQVUsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLEVBQUMsQ0FBQztRQUM3RSxLQUFLLENBQUM7WUFDSixNQUFNLENBQUMsRUFBQyxJQUFJLEVBQUUsZUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLFVBQVUsQ0FBQyxhQUFhLEVBQUUsRUFBQyxDQUFDO1FBQzNFLEtBQUssQ0FBQztZQUNKLE1BQU0sQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsVUFBVSxDQUFDLFlBQVksRUFBRSxFQUFDLENBQUM7UUFDeEUsS0FBSyxDQUFDO1lBQ0osTUFBTSxDQUFDLEVBQUMsSUFBSSxFQUFFLGVBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLEtBQUssRUFBRSxVQUFVLENBQUMsU0FBUyxFQUFZLEVBQUMsQ0FBQztRQUNsRixLQUFLLENBQUM7WUFDSixNQUFNLENBQUMsRUFBQyxJQUFJLEVBQUUsZUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLFVBQVUsQ0FBQyxZQUFZLEVBQUUsRUFBQyxDQUFDO1FBQzNFO1lBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUN0RCxDQUFDO0FBQ0gsQ0FBQztBQTFCRCw0Q0EwQkM7QUFFRCx5QkFBZ0MsVUFBc0I7SUFDcEQsTUFBTSxNQUFNLEdBQVcsVUFBVSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ2pELE1BQU0sQ0FBQztRQUNMLE1BQU0sRUFBRSxlQUFJLENBQUMsVUFBVSxDQUFDLElBQUk7UUFDNUIsTUFBTTtLQUNQLENBQUM7QUFDSixDQUFDO0FBTkQsMENBTUM7QUFFRCw0QkFBbUMsVUFBc0I7SUFDdkQsTUFBTSxTQUFTLEdBQWMsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBRXRELElBQUksTUFBMEIsQ0FBQztJQUMvQixNQUFNLENBQUMsQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNwQyxLQUFLLENBQUM7WUFDSixNQUFNLEdBQUcsZUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUM7WUFDakMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxDQUFDO1lBQ0osTUFBTSxHQUFHLGVBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDO1lBQ2hDLEtBQUssQ0FBQztRQUNSLEtBQUssQ0FBQztZQUNKLE1BQU0sR0FBRyxlQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQztZQUNqQyxLQUFLLENBQUM7UUFDUjtZQUNFLE1BQU0sSUFBSSxtQkFBUSxDQUFDLHVCQUF1QixFQUFFLHlDQUF5QyxDQUFDLENBQUM7SUFDM0YsQ0FBQztJQUNELFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdEIsTUFBTSxVQUFVLEdBQVksU0FBUyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3JELE1BQU0sYUFBYSxHQUFZLFNBQVMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUV4RCxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUM7SUFFbEIsTUFBTSxDQUFDO1FBQ0wsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsT0FBTztRQUMvQixNQUFNO1FBQ04sVUFBVTtRQUNWLGFBQWE7S0FDZCxDQUFDO0FBQ0osQ0FBQztBQTdCRCxnREE2QkM7QUFFRCxtQ0FBMEMsVUFBc0I7SUFDOUQsTUFBTSxJQUFJLEdBQVcsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzlDLE1BQU0sY0FBYyxHQUFhLFVBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUMzRCxNQUFNLFVBQVUsR0FBYSxFQUFFLENBQUM7SUFDaEMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQVcsQ0FBQyxFQUFFLENBQUMsR0FBRyxjQUFjLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUNoRCxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFDRCxNQUFNLFFBQVEsR0FBYSxVQUFVLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDckQsTUFBTSxJQUFJLEdBQWtCLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUV6RSxNQUFNLENBQUM7UUFDTCxNQUFNLEVBQUUsZUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjO1FBQ3RDLElBQUk7UUFDSixVQUFVO1FBQ1YsSUFBSTtLQUNMLENBQUM7QUFDSixDQUFDO0FBaEJELDhEQWdCQztBQUVELHVCQUE4QixVQUFzQjtJQUNsRCxNQUFNLE1BQU0sR0FBVyxVQUFVLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDakQsTUFBTSxDQUFDO1FBQ0wsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsRUFBRTtRQUMxQixNQUFNO0tBQ1AsQ0FBQztBQUNKLENBQUM7QUFORCxzQ0FNQztBQUVELCtCQUFzQyxVQUFzQjtJQUMxRCxNQUFNLEtBQUssR0FBVSxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDNUMsc0JBQXNCO0lBQ3RCLE1BQU0sWUFBWSxHQUFZLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZELE1BQU0sSUFBSSxHQUFZLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQy9DLE1BQU0sU0FBUyxHQUFXLFlBQVksQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkUsTUFBTSxDQUFDO1FBQ0wsTUFBTSxFQUFFLGVBQUksQ0FBQyxVQUFVLENBQUMsVUFBVTtRQUNsQyxJQUFJO1FBQ0osU0FBUztLQUNWLENBQUM7QUFDSixDQUFDO0FBWEQsc0RBV0MiLCJmaWxlIjoicGFyc2Vycy9hdm0xLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcbmltcG9ydCB7IFVpbnQxNiwgVWludDgsIFVpbnRTaXplIH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyBhdm0xIH0gZnJvbSBcInN3Zi10cmVlXCI7XG5pbXBvcnQgeyBjcmVhdGVJbmNvbXBsZXRlU3RyZWFtRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JzL2luY29tcGxldGUtc3RyZWFtXCI7XG5pbXBvcnQgeyBCaXRTdHJlYW0sIEJ5dGVTdHJlYW0gfSBmcm9tIFwiLi4vc3RyZWFtXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWN0aW9uSGVhZGVyIHtcbiAgYWN0aW9uQ29kZTogVWludDg7XG4gIGxlbmd0aDogVWludDE2O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VBY3Rpb25IZWFkZXIoYnl0ZVN0cmVhbTogQnl0ZVN0cmVhbSk6IEFjdGlvbkhlYWRlciB7XG4gIGNvbnN0IGFjdGlvbkNvZGU6IFVpbnQ4ID0gYnl0ZVN0cmVhbS5yZWFkVWludDgoKTtcbiAgY29uc3QgbGVuZ3RoOiBVaW50MTYgPSBhY3Rpb25Db2RlIDwgMHg4MCA/IDAgOiBieXRlU3RyZWFtLnJlYWRVaW50MTZMRSgpO1xuICByZXR1cm4ge2FjdGlvbkNvZGUsIGxlbmd0aH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUFjdGlvbnNTdHJpbmcoYnl0ZVN0cmVhbTogQnl0ZVN0cmVhbSk6IGF2bTEuQWN0aW9uW10ge1xuICBjb25zdCByZXN1bHQ6IGF2bTEuQWN0aW9uW10gPSBbXTtcblxuICB3aGlsZSAodHJ1ZSkge1xuICAgIGlmIChieXRlU3RyZWFtLmF2YWlsYWJsZSgpID09PSAwKSB7XG4gICAgICB0aHJvdyBjcmVhdGVJbmNvbXBsZXRlU3RyZWFtRXJyb3IoKTtcbiAgICB9XG4gICAgaWYgKGJ5dGVTdHJlYW0ucGVla1VpbnQ4KCkgPT09IDApIHtcbiAgICAgIC8vIFRPRE86IENvbnN1bWUgdGhlIGxhc3QgYnl0ZT8hXG4gICAgICBicmVhaztcbiAgICB9XG4gICAgcmVzdWx0LnB1c2gocGFyc2VBY3Rpb24oYnl0ZVN0cmVhbSkpO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQWN0aW9uc0Jsb2NrKGJ5dGVTdHJlYW06IEJ5dGVTdHJlYW0pOiBhdm0xLkFjdGlvbltdIHtcbiAgY29uc3QgYmxvY2s6IGF2bTEuQWN0aW9uW10gPSBbXTtcbiAgd2hpbGUgKGJ5dGVTdHJlYW0uYXZhaWxhYmxlKCkgPiAwKSB7XG4gICAgYmxvY2sucHVzaChwYXJzZUFjdGlvbihieXRlU3RyZWFtKSk7XG4gIH1cbiAgcmV0dXJuIGJsb2NrO1xufVxuXG4vKiB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6Y3ljbG9tYXRpYy1jb21wbGV4aXR5ICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VBY3Rpb24oYnl0ZVN0cmVhbTogQnl0ZVN0cmVhbSk6IGF2bTEuQWN0aW9uIHtcbiAgY29uc3Qgc3RhcnRQb3M6IG51bWJlciA9IGJ5dGVTdHJlYW0uYnl0ZVBvcztcbiAgY29uc3QgaGVhZGVyOiBBY3Rpb25IZWFkZXIgPSBwYXJzZUFjdGlvbkhlYWRlcihieXRlU3RyZWFtKTtcbiAgaWYgKGJ5dGVTdHJlYW0uYXZhaWxhYmxlKCkgPCBoZWFkZXIubGVuZ3RoKSB7XG4gICAgY29uc3QgaGVhZGVyTGVuZ3RoOiBudW1iZXIgPSBieXRlU3RyZWFtLmJ5dGVQb3MgLSBzdGFydFBvcztcbiAgICB0aHJvdyBjcmVhdGVJbmNvbXBsZXRlU3RyZWFtRXJyb3IoaGVhZGVyTGVuZ3RoICsgaGVhZGVyLmxlbmd0aCk7XG4gIH1cbiAgY29uc3QgYWN0aW9uRGF0YVN0YXJ0UG9zOiBudW1iZXIgPSBieXRlU3RyZWFtLmJ5dGVQb3M7XG4gIGxldCByZXN1bHQ6IGF2bTEuQWN0aW9uO1xuICBzd2l0Y2ggKGhlYWRlci5hY3Rpb25Db2RlKSB7XG4gICAgY2FzZSAweDA0OlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLk5leHRGcmFtZX07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MDU6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuUHJldmlvdXNGcmFtZX07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MDY6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuUGxheX07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MDc6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuU3RvcH07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MDg6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuVG9nZ2xlUXVhbGl0eX07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MDk6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuU3RvcFNvdW5kc307XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MGE6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuQWRkfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgwYjpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5TdWJ0cmFjdH07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MGM6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuTXVsdGlwbHl9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDBkOlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkRpdmlkZX07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MGU6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuRXF1YWxzfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgwZjpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5MZXNzfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgxMDpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5BbmR9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDExOlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLk9yfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgxMjpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5Ob3R9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDEzOlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLlN0cmluZ0VxdWFsc307XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MTQ6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuU3RyaW5nTGVuZ3RofTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgxNTpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5TdHJpbmdFeHRyYWN0fTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgxNzpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5Qb3B9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDE4OlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLlRvSW50ZWdlcn07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MWM6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuR2V0VmFyaWFibGV9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDFkOlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLlNldFZhcmlhYmxlfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgyMDpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5TZXRUYXJnZXQyfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgyMTpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5TdHJpbmdBZGR9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDIyOlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkdldFByb3BlcnR5fTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgyMzpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5TZXRQcm9wZXJ0eX07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MjQ6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuQ2xvbmVTcHJpdGV9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDI1OlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLlJlbW92ZVNwcml0ZX07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MjY6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuVHJhY2V9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDI3OlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLlN0YXJ0RHJhZ307XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4Mjg6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuRW5kRHJhZ307XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4Mjk6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuU3RyaW5nTGVzc307XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MmE6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuVGhyb3d9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDJiOlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkNhc3RPcH07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MmM6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuSW1wbGVtZW50c09wfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgyZDpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5Gc0NvbW1hbmQyfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgzMDpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5SYW5kb21OdW1iZXJ9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDMxOlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLk1iU3RyaW5nTGVuZ3RofTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgzMjpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5DaGFyVG9Bc2NpaX07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MzM6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuQXNjaWlUb0NoYXJ9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDM0OlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkdldFRpbWV9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDM1OlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLk1iU3RyaW5nRXh0cmFjdH07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4MzY6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuTWJDaGFyVG9Bc2NpaX07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4Mzc6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuTWJBc2NpaVRvQ2hhcn07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4M2E6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuRGVsZXRlfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgzYjpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5EZWxldGUyfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgzYzpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5EZWZpbmVMb2NhbH07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4M2Q6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuQ2FsbEZ1bmN0aW9ufTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHgzZTpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5SZXR1cm59O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDNmOlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLk1vZHVsb307XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4NDA6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuTmV3T2JqZWN0fTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHg0MTpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5EZWZpbmVMb2NhbDJ9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDQyOlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkluaXRBcnJheX07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4NDM6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuSW5pdE9iamVjdH07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4NDQ6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuVHlwZU9mfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHg0NTpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5UYXJnZXRQYXRofTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHg0NjpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5FbnVtZXJhdGV9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDQ3OlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkFkZDJ9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDQ4OlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkxlc3MyfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHg0OTpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5FcXVhbHMyfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHg0YTpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5Ub051bWJlcn07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4NGI6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuVG9TdHJpbmd9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDRjOlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLlB1c2hEdXBsaWNhdGV9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDRkOlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLlN0YWNrU3dhcH07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4NGU6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuR2V0TWVtYmVyfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHg0ZjpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5TZXRNZW1iZXJ9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDUwOlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkluY3JlbWVudH07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4NTE6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuRGVjcmVtZW50fTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHg1MjpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5DYWxsTWV0aG9kfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHg1MzpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5OZXdNZXRob2R9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDU0OlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkluc3RhbmNlT2Z9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDU1OlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkVudW1lcmF0ZTJ9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDYwOlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkJpdEFuZH07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4NjE6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuQml0T3J9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDYyOlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkJpdFhvcn07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4NjM6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuQml0TFNoaWZ0fTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHg2NDpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5CaXRSU2hpZnR9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDY1OlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkJpdFVSU2hpZnR9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDY2OlxuICAgICAgcmVzdWx0ID0ge2FjdGlvbjogYXZtMS5BY3Rpb25UeXBlLlN0cmljdEVxdWFsc307XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4Njc6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuR3JlYXRlcn07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4Njg6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuU3RyaW5nR3JlYXRlcn07XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4Njk6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuRXh0ZW5kc307XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4ODE6XG4gICAgICByZXN1bHQgPSBwYXJzZUdvdG9GcmFtZUFjdGlvbihieXRlU3RyZWFtKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHg4MzpcbiAgICAgIHJlc3VsdCA9IHBhcnNlR2V0VXJsQWN0aW9uKGJ5dGVTdHJlYW0pO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDg3OlxuICAgICAgcmVzdWx0ID0gcGFyc2VTdG9yZVJlZ2lzdGVyQWN0aW9uKGJ5dGVTdHJlYW0pO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDg4OlxuICAgICAgcmVzdWx0ID0gcGFyc2VDb25zdGFudFBvb2xBY3Rpb24oYnl0ZVN0cmVhbSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4OGE6XG4gICAgICByZXN1bHQgPSBwYXJzZVdhaXRGb3JGcmFtZUFjdGlvbihieXRlU3RyZWFtKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHg4YjpcbiAgICAgIHJlc3VsdCA9IHBhcnNlU2V0VGFyZ2V0QWN0aW9uKGJ5dGVTdHJlYW0pO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDhjOlxuICAgICAgcmVzdWx0ID0gcGFyc2VHb3RvTGFiZWxBY3Rpb24oYnl0ZVN0cmVhbSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4OGQ6XG4gICAgICByZXN1bHQgPSBwYXJzZVdhaXRGb3JGcmFtZTJBY3Rpb24oYnl0ZVN0cmVhbSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4OGU6XG4gICAgICByZXN1bHQgPSBwYXJzZURlZmluZUZ1bmN0aW9uMkFjdGlvbihieXRlU3RyZWFtKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHg4ZjpcbiAgICAgIHJlc3VsdCA9IHBhcnNlVHJ5QWN0aW9uKGJ5dGVTdHJlYW0pO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDk0OlxuICAgICAgcmVzdWx0ID0gcGFyc2VXaXRoQWN0aW9uKGJ5dGVTdHJlYW0pO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDk2OlxuICAgICAgcmVzdWx0ID0gcGFyc2VQdXNoQWN0aW9uKGJ5dGVTdHJlYW0udGFrZShoZWFkZXIubGVuZ3RoKSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4OTk6XG4gICAgICByZXN1bHQgPSBwYXJzZUp1bXBBY3Rpb24oYnl0ZVN0cmVhbSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4OWE6XG4gICAgICByZXN1bHQgPSBwYXJzZUdldFVybDJBY3Rpb24oYnl0ZVN0cmVhbSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDB4OWI6XG4gICAgICByZXN1bHQgPSBwYXJzZURlZmluZUZ1bmN0aW9uQWN0aW9uKGJ5dGVTdHJlYW0pO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAweDlkOlxuICAgICAgcmVzdWx0ID0gcGFyc2VJZkFjdGlvbihieXRlU3RyZWFtKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHg5ZTpcbiAgICAgIHJlc3VsdCA9IHthY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5DYWxsfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMHg5ZjpcbiAgICAgIHJlc3VsdCA9IHBhcnNlR290b0ZyYW1lMkFjdGlvbihieXRlU3RyZWFtKTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXN1bHQgPSB7YWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuVW5rbm93biwgYWN0aW9uQ29kZTogaGVhZGVyLmFjdGlvbkNvZGV9O1xuICAgICAgYnl0ZVN0cmVhbS5za2lwKGhlYWRlci5sZW5ndGgpO1xuICAgICAgYnJlYWs7XG4gIH1cbiAgY29uc3QgYWN0aW9uRGF0YUxlbmd0aDogbnVtYmVyID0gYnl0ZVN0cmVhbS5ieXRlUG9zIC0gYWN0aW9uRGF0YVN0YXJ0UG9zO1xuICBpZiAoYWN0aW9uRGF0YUxlbmd0aCA8IGhlYWRlci5sZW5ndGgpIHtcbiAgICBieXRlU3RyZWFtLnNraXAoaGVhZGVyLmxlbmd0aCAtIGFjdGlvbkRhdGFMZW5ndGgpO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlR290b0ZyYW1lQWN0aW9uKGJ5dGVTdHJlYW06IEJ5dGVTdHJlYW0pOiBhdm0xLmFjdGlvbnMuR290b0ZyYW1lIHtcbiAgY29uc3QgZnJhbWU6IFVpbnQxNiA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQxNkxFKCk7XG4gIHJldHVybiB7XG4gICAgYWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuR290b0ZyYW1lLFxuICAgIGZyYW1lLFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VHZXRVcmxBY3Rpb24oYnl0ZVN0cmVhbTogQnl0ZVN0cmVhbSk6IGF2bTEuYWN0aW9ucy5HZXRVcmwge1xuICBjb25zdCB1cmw6IHN0cmluZyA9IGJ5dGVTdHJlYW0ucmVhZENTdHJpbmcoKTtcbiAgY29uc3QgdGFyZ2V0OiBzdHJpbmcgPSBieXRlU3RyZWFtLnJlYWRDU3RyaW5nKCk7XG4gIHJldHVybiB7XG4gICAgYWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuR2V0VXJsLFxuICAgIHVybCxcbiAgICB0YXJnZXQsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVN0b3JlUmVnaXN0ZXJBY3Rpb24oYnl0ZVN0cmVhbTogQnl0ZVN0cmVhbSk6IGF2bTEuYWN0aW9ucy5TdG9yZVJlZ2lzdGVyIHtcbiAgY29uc3QgcmVnaXN0ZXJOdW1iZXI6IFVpbnQ4ID0gYnl0ZVN0cmVhbS5yZWFkVWludDgoKTtcbiAgcmV0dXJuIHtcbiAgICBhY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5TdG9yZVJlZ2lzdGVyLFxuICAgIHJlZ2lzdGVyTnVtYmVyLFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDb25zdGFudFBvb2xBY3Rpb24oYnl0ZVN0cmVhbTogQnl0ZVN0cmVhbSk6IGF2bTEuYWN0aW9ucy5Db25zdGFudFBvb2wge1xuICBjb25zdCBsZW5ndGg6IFVpbnRTaXplID0gYnl0ZVN0cmVhbS5yZWFkVWludDE2TEUoKTtcbiAgY29uc3QgY29uc3RhbnRQb29sOiBzdHJpbmdbXSA9IFtdO1xuICBmb3IgKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgMDsgaSsrKSB7XG4gICAgY29uc3RhbnRQb29sLnB1c2goYnl0ZVN0cmVhbS5yZWFkQ1N0cmluZygpKTtcbiAgfVxuICByZXR1cm4ge1xuICAgIGFjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkNvbnN0YW50UG9vbCxcbiAgICBjb25zdGFudFBvb2wsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVdhaXRGb3JGcmFtZUFjdGlvbihieXRlU3RyZWFtOiBCeXRlU3RyZWFtKTogYXZtMS5hY3Rpb25zLldhaXRGb3JGcmFtZSB7XG4gIGNvbnN0IGZyYW1lOiBVaW50U2l6ZSA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQxNkxFKCk7XG4gIGNvbnN0IHNraXBDb3VudDogVWludFNpemUgPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuICByZXR1cm4ge1xuICAgIGFjdGlvbjogYXZtMS5BY3Rpb25UeXBlLldhaXRGb3JGcmFtZSxcbiAgICBmcmFtZSxcbiAgICBza2lwQ291bnQsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVNldFRhcmdldEFjdGlvbihieXRlU3RyZWFtOiBCeXRlU3RyZWFtKTogYXZtMS5hY3Rpb25zLlNldFRhcmdldCB7XG4gIGNvbnN0IHRhcmdldE5hbWU6IHN0cmluZyA9IGJ5dGVTdHJlYW0ucmVhZENTdHJpbmcoKTtcbiAgcmV0dXJuIHtcbiAgICBhY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5TZXRUYXJnZXQsXG4gICAgdGFyZ2V0TmFtZSxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlR290b0xhYmVsQWN0aW9uKGJ5dGVTdHJlYW06IEJ5dGVTdHJlYW0pOiBhdm0xLmFjdGlvbnMuR290b0xhYmVsIHtcbiAgY29uc3QgbGFiZWw6IHN0cmluZyA9IGJ5dGVTdHJlYW0ucmVhZENTdHJpbmcoKTtcbiAgcmV0dXJuIHtcbiAgICBhY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5Hb3RvTGFiZWwsXG4gICAgbGFiZWwsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVdhaXRGb3JGcmFtZTJBY3Rpb24oYnl0ZVN0cmVhbTogQnl0ZVN0cmVhbSk6IGF2bTEuYWN0aW9ucy5XYWl0Rm9yRnJhbWUyIHtcbiAgY29uc3Qgc2tpcENvdW50OiBVaW50U2l6ZSA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQ4KCk7XG4gIHJldHVybiB7XG4gICAgYWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuV2FpdEZvckZyYW1lMixcbiAgICBza2lwQ291bnQsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZURlZmluZUZ1bmN0aW9uMkFjdGlvbihieXRlU3RyZWFtOiBCeXRlU3RyZWFtKTogYXZtMS5hY3Rpb25zLkRlZmluZUZ1bmN0aW9uMiB7XG4gIGNvbnN0IG5hbWU6IHN0cmluZyA9IGJ5dGVTdHJlYW0ucmVhZENTdHJpbmcoKTtcbiAgY29uc3QgcGFyYW1ldGVyQ291bnQ6IFVpbnRTaXplID0gYnl0ZVN0cmVhbS5yZWFkVWludDE2TEUoKTtcbiAgY29uc3QgcmVnaXN0ZXJDb3VudDogVWludFNpemUgPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuXG4gIGNvbnN0IGJpdFN0cmVhbTogQml0U3RyZWFtID0gYnl0ZVN0cmVhbS5hc0JpdFN0cmVhbSgpO1xuICBjb25zdCBwcmVsb2FkUGFyZW50OiBib29sZWFuID0gYml0U3RyZWFtLnJlYWRCb29sQml0cygpO1xuICBjb25zdCBwcmVsb2FkUm9vdDogYm9vbGVhbiA9IGJpdFN0cmVhbS5yZWFkQm9vbEJpdHMoKTtcbiAgY29uc3Qgc3VwcHJlc3NTdXBlcjogYm9vbGVhbiA9IGJpdFN0cmVhbS5yZWFkQm9vbEJpdHMoKTtcbiAgY29uc3QgcHJlbG9hZFN1cGVyOiBib29sZWFuID0gYml0U3RyZWFtLnJlYWRCb29sQml0cygpO1xuICBjb25zdCBzdXBwcmVzc0FyZ3VtZW50czogYm9vbGVhbiA9IGJpdFN0cmVhbS5yZWFkQm9vbEJpdHMoKTtcbiAgY29uc3QgcHJlbG9hZEFyZ3VtZW50czogYm9vbGVhbiA9IGJpdFN0cmVhbS5yZWFkQm9vbEJpdHMoKTtcbiAgY29uc3Qgc3VwcHJlc3NUaGlzOiBib29sZWFuID0gYml0U3RyZWFtLnJlYWRCb29sQml0cygpO1xuICBjb25zdCBwcmVsb2FkVGhpczogYm9vbGVhbiA9IGJpdFN0cmVhbS5yZWFkQm9vbEJpdHMoKTtcbiAgYml0U3RyZWFtLnNraXBCaXRzKDcpO1xuICBjb25zdCBwcmVsb2FkR2xvYmFsOiBib29sZWFuID0gYml0U3RyZWFtLnJlYWRCb29sQml0cygpO1xuICBiaXRTdHJlYW0uYWxpZ24oKTsgLy8gVE9ETyhkZW11cmdvcyk6IEFzc2VydCB0aGF0IGJpdFN0cmVhbS5hbGlnbigpIGlzIGEgbm8tb3BcblxuICBjb25zdCBwYXJhbWV0ZXJzOiBhdm0xLlBhcmFtZXRlcltdID0gW107XG4gIGZvciAobGV0IGk6IG51bWJlciA9IDA7IGkgPCBwYXJhbWV0ZXJDb3VudDsgaSsrKSB7XG4gICAgY29uc3QgcmVnaXN0ZXI6IFVpbnQ4ID0gYnl0ZVN0cmVhbS5yZWFkVWludDgoKTtcbiAgICBjb25zdCBuYW1lOiBzdHJpbmcgPSBieXRlU3RyZWFtLnJlYWRDU3RyaW5nKCk7XG4gICAgcGFyYW1ldGVycy5wdXNoKHtyZWdpc3RlciwgbmFtZX0pO1xuICB9XG4gIGNvbnN0IGNvZGVTaXplOiBVaW50U2l6ZSA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQxNkxFKCk7XG4gIGNvbnN0IGJvZHk6IGF2bTEuQWN0aW9uW10gPSBwYXJzZUFjdGlvbnNCbG9jayhieXRlU3RyZWFtLnRha2UoY29kZVNpemUpKTtcblxuICByZXR1cm4ge1xuICAgIGFjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkRlZmluZUZ1bmN0aW9uMixcbiAgICBuYW1lLFxuICAgIHByZWxvYWRQYXJlbnQsXG4gICAgcHJlbG9hZFJvb3QsXG4gICAgc3VwcHJlc3NTdXBlcixcbiAgICBwcmVsb2FkU3VwZXIsXG4gICAgc3VwcHJlc3NBcmd1bWVudHMsXG4gICAgcHJlbG9hZEFyZ3VtZW50cyxcbiAgICBzdXBwcmVzc1RoaXMsXG4gICAgcHJlbG9hZFRoaXMsXG4gICAgcHJlbG9hZEdsb2JhbCxcbiAgICByZWdpc3RlckNvdW50LFxuICAgIHBhcmFtZXRlcnMsXG4gICAgYm9keSxcbiAgfTtcbn1cblxuZnVuY3Rpb24gcGFyc2VDYXRjaFRhcmdldChieXRlU3RyZWFtOiBCeXRlU3RyZWFtLCBjYXRjaEluUmVnaXN0ZXI6IGJvb2xlYW4pOiBhdm0xLkNhdGNoVGFyZ2V0IHtcbiAgaWYgKGNhdGNoSW5SZWdpc3Rlcikge1xuICAgIHJldHVybiB7dHlwZTogYXZtMS5DYXRjaFRhcmdldFR5cGUuUmVnaXN0ZXIsIHJlZ2lzdGVyOiBieXRlU3RyZWFtLnJlYWRVaW50OCgpfTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4ge3R5cGU6IGF2bTEuQ2F0Y2hUYXJnZXRUeXBlLlZhcmlhYmxlLCB2YXJpYWJsZTogYnl0ZVN0cmVhbS5yZWFkQ1N0cmluZygpfTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VUcnlBY3Rpb24oYnl0ZVN0cmVhbTogQnl0ZVN0cmVhbSk6IGF2bTEuYWN0aW9ucy5Ucnkge1xuICBjb25zdCBmbGFnczogVWludDggPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuICAvLyAoU2tpcCBmaXJzdCA1IGJpdHMpXG4gIGNvbnN0IGNhdGNoSW5SZWdpc3RlcjogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDIpKSAhPT0gMDtcbiAgY29uc3QgaGFzRmluYWxseUJsb2NrOiBib29sZWFuID0gKGZsYWdzICYgKDEgPDwgMSkpICE9PSAwO1xuICBjb25zdCBoYXNDYXRjaEJsb2NrOiBib29sZWFuID0gKGZsYWdzICYgKDEgPDwgMCkpICE9PSAwO1xuXG4gIGNvbnN0IHRyeVNpemU6IFVpbnQxNiA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQxNkxFKCk7XG4gIGNvbnN0IGZpbmFsbHlTaXplOiBVaW50MTYgPSBieXRlU3RyZWFtLnJlYWRVaW50MTZMRSgpO1xuICBjb25zdCBjYXRjaFNpemU6IFVpbnQxNiA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQxNkxFKCk7XG4gIGNvbnN0IGNhdGNoVGFyZ2V0OiBhdm0xLkNhdGNoVGFyZ2V0ID0gcGFyc2VDYXRjaFRhcmdldChieXRlU3RyZWFtLCBjYXRjaEluUmVnaXN0ZXIpO1xuICBjb25zdCB0cnlCb2R5OiBhdm0xLkFjdGlvbltdID0gcGFyc2VBY3Rpb25zQmxvY2soYnl0ZVN0cmVhbS50YWtlKHRyeVNpemUpKTtcbiAgbGV0IGNhdGNoQm9keTogYXZtMS5BY3Rpb25bXSB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbiAgaWYgKGhhc0NhdGNoQmxvY2spIHtcbiAgICBjYXRjaEJvZHkgPSBwYXJzZUFjdGlvbnNCbG9jayhieXRlU3RyZWFtLnRha2UoY2F0Y2hTaXplKSk7XG4gIH1cbiAgbGV0IGZpbmFsbHlCb2R5OiBhdm0xLkFjdGlvbltdIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuICBpZiAoaGFzRmluYWxseUJsb2NrKSB7XG4gICAgZmluYWxseUJvZHkgPSBwYXJzZUFjdGlvbnNCbG9jayhieXRlU3RyZWFtLnRha2UoZmluYWxseVNpemUpKTtcbiAgfVxuICByZXR1cm4ge1xuICAgIGFjdGlvbjogYXZtMS5BY3Rpb25UeXBlLlRyeSxcbiAgICB0cnk6IHRyeUJvZHksXG4gICAgY2F0Y2g6IGNhdGNoQm9keSxcbiAgICBjYXRjaFRhcmdldCxcbiAgICBmaW5hbGx5OiBmaW5hbGx5Qm9keSxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlV2l0aEFjdGlvbihieXRlU3RyZWFtOiBCeXRlU3RyZWFtKTogYXZtMS5hY3Rpb25zLldpdGgge1xuICBjb25zdCB3aXRoU2l6ZTogVWludDE2ID0gYnl0ZVN0cmVhbS5yZWFkVWludDE2TEUoKTtcbiAgY29uc3Qgd2l0aEJvZHk6IGF2bTEuQWN0aW9uW10gPSBwYXJzZUFjdGlvbnNCbG9jayhieXRlU3RyZWFtLnRha2Uod2l0aFNpemUpKTtcbiAgcmV0dXJuIHtcbiAgICBhY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5XaXRoLFxuICAgIHdpdGg6IHdpdGhCb2R5LFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VQdXNoQWN0aW9uKGJ5dGVTdHJlYW06IEJ5dGVTdHJlYW0pOiBhdm0xLmFjdGlvbnMuUHVzaCB7XG4gIGNvbnN0IHZhbHVlczogYXZtMS5WYWx1ZVtdID0gW107XG4gIHdoaWxlIChieXRlU3RyZWFtLmF2YWlsYWJsZSgpID4gMCkge1xuICAgIHZhbHVlcy5wdXNoKHBhcnNlQWN0aW9uVmFsdWUoYnl0ZVN0cmVhbSkpO1xuICB9XG4gIHJldHVybiB7XG4gICAgYWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuUHVzaCxcbiAgICB2YWx1ZXMsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUFjdGlvblZhbHVlKGJ5dGVTdHJlYW06IEJ5dGVTdHJlYW0pOiBhdm0xLlZhbHVlIHtcbiAgY29uc3QgdHlwZUNvZGU6IFVpbnQ4ID0gYnl0ZVN0cmVhbS5yZWFkVWludDgoKTtcbiAgc3dpdGNoICh0eXBlQ29kZSkge1xuICAgIGNhc2UgMDpcbiAgICAgIHJldHVybiB7dHlwZTogYXZtMS5WYWx1ZVR5cGUuQ1N0cmluZywgdmFsdWU6IGJ5dGVTdHJlYW0ucmVhZENTdHJpbmcoKX07XG4gICAgY2FzZSAxOlxuICAgICAgcmV0dXJuIHt0eXBlOiBhdm0xLlZhbHVlVHlwZS5GbG9hdDMyLCB2YWx1ZTogYnl0ZVN0cmVhbS5yZWFkRmxvYXQzMkxFKCl9O1xuICAgIGNhc2UgMjpcbiAgICAgIHJldHVybiB7dHlwZTogYXZtMS5WYWx1ZVR5cGUuTnVsbH07XG4gICAgY2FzZSAzOlxuICAgICAgcmV0dXJuIHt0eXBlOiBhdm0xLlZhbHVlVHlwZS5VbmRlZmluZWR9O1xuICAgIGNhc2UgNDpcbiAgICAgIHJldHVybiB7dHlwZTogYXZtMS5WYWx1ZVR5cGUuUmVnaXN0ZXIsIHZhbHVlOiBieXRlU3RyZWFtLnJlYWRVaW50OCgpfTtcbiAgICBjYXNlIDU6XG4gICAgICByZXR1cm4ge3R5cGU6IGF2bTEuVmFsdWVUeXBlLkJvb2xlYW4sIHZhbHVlOiBieXRlU3RyZWFtLnJlYWRVaW50OCgpICE9PSAwfTtcbiAgICBjYXNlIDY6XG4gICAgICByZXR1cm4ge3R5cGU6IGF2bTEuVmFsdWVUeXBlLkZsb2F0NjQsIHZhbHVlOiBieXRlU3RyZWFtLnJlYWRGbG9hdDY0TEUoKX07XG4gICAgY2FzZSA3OlxuICAgICAgcmV0dXJuIHt0eXBlOiBhdm0xLlZhbHVlVHlwZS5JbnQzMiwgdmFsdWU6IGJ5dGVTdHJlYW0ucmVhZFNpbnQzMkxFKCl9O1xuICAgIGNhc2UgODpcbiAgICAgIHJldHVybiB7dHlwZTogYXZtMS5WYWx1ZVR5cGUuQ29uc3RhbnQsIHZhbHVlOiBieXRlU3RyZWFtLnJlYWRVaW50OCgpIGFzIFVpbnQxNn07XG4gICAgY2FzZSA5OlxuICAgICAgcmV0dXJuIHt0eXBlOiBhdm0xLlZhbHVlVHlwZS5Db25zdGFudCwgdmFsdWU6IGJ5dGVTdHJlYW0ucmVhZFVpbnQxNkxFKCl9O1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gdHlwZSBjb2RlOiAke3R5cGVDb2RlfWApO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUp1bXBBY3Rpb24oYnl0ZVN0cmVhbTogQnl0ZVN0cmVhbSk6IGF2bTEuYWN0aW9ucy5KdW1wIHtcbiAgY29uc3Qgb2Zmc2V0OiBVaW50MTYgPSBieXRlU3RyZWFtLnJlYWRVaW50MTZMRSgpO1xuICByZXR1cm4ge1xuICAgIGFjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkp1bXAsXG4gICAgb2Zmc2V0LFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VHZXRVcmwyQWN0aW9uKGJ5dGVTdHJlYW06IEJ5dGVTdHJlYW0pOiBhdm0xLmFjdGlvbnMuR2V0VXJsMiB7XG4gIGNvbnN0IGJpdFN0cmVhbTogQml0U3RyZWFtID0gYnl0ZVN0cmVhbS5hc0JpdFN0cmVhbSgpO1xuXG4gIGxldCBtZXRob2Q6IGF2bTEuR2V0VXJsMk1ldGhvZDtcbiAgc3dpdGNoIChiaXRTdHJlYW0ucmVhZFVpbnQxNkJpdHMoMikpIHtcbiAgICBjYXNlIDA6XG4gICAgICBtZXRob2QgPSBhdm0xLkdldFVybDJNZXRob2QuTm9uZTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMTpcbiAgICAgIG1ldGhvZCA9IGF2bTEuR2V0VXJsMk1ldGhvZC5HZXQ7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDI6XG4gICAgICBtZXRob2QgPSBhdm0xLkdldFVybDJNZXRob2QuUG9zdDtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgSW5jaWRlbnQoXCJVbmV4cGVjdEdldFVybDJNZXRob2RcIiwgXCJVbmV4cGVjdGVkIHZhbHVlIGZvciB0aGUgZ2V0VXJsMiBtZXRob2RcIik7XG4gIH1cbiAgYml0U3RyZWFtLnNraXBCaXRzKDQpO1xuICBjb25zdCBsb2FkVGFyZ2V0OiBib29sZWFuID0gYml0U3RyZWFtLnJlYWRCb29sQml0cygpO1xuICBjb25zdCBsb2FkVmFyaWFibGVzOiBib29sZWFuID0gYml0U3RyZWFtLnJlYWRCb29sQml0cygpO1xuXG4gIGJpdFN0cmVhbS5hbGlnbigpO1xuXG4gIHJldHVybiB7XG4gICAgYWN0aW9uOiBhdm0xLkFjdGlvblR5cGUuR2V0VXJsMixcbiAgICBtZXRob2QsXG4gICAgbG9hZFRhcmdldCxcbiAgICBsb2FkVmFyaWFibGVzLFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VEZWZpbmVGdW5jdGlvbkFjdGlvbihieXRlU3RyZWFtOiBCeXRlU3RyZWFtKTogYXZtMS5hY3Rpb25zLkRlZmluZUZ1bmN0aW9uIHtcbiAgY29uc3QgbmFtZTogc3RyaW5nID0gYnl0ZVN0cmVhbS5yZWFkQ1N0cmluZygpO1xuICBjb25zdCBwYXJhbWV0ZXJDb3VudDogVWludFNpemUgPSBieXRlU3RyZWFtLnJlYWRVaW50MTZMRSgpO1xuICBjb25zdCBwYXJhbWV0ZXJzOiBzdHJpbmdbXSA9IFtdO1xuICBmb3IgKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgcGFyYW1ldGVyQ291bnQ7IGkrKykge1xuICAgIHBhcmFtZXRlcnMucHVzaChieXRlU3RyZWFtLnJlYWRDU3RyaW5nKCkpO1xuICB9XG4gIGNvbnN0IGJvZHlTaXplOiBVaW50U2l6ZSA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQxNkxFKCk7XG4gIGNvbnN0IGJvZHk6IGF2bTEuQWN0aW9uW10gPSBwYXJzZUFjdGlvbnNCbG9jayhieXRlU3RyZWFtLnRha2UoYm9keVNpemUpKTtcblxuICByZXR1cm4ge1xuICAgIGFjdGlvbjogYXZtMS5BY3Rpb25UeXBlLkRlZmluZUZ1bmN0aW9uLFxuICAgIG5hbWUsXG4gICAgcGFyYW1ldGVycyxcbiAgICBib2R5LFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VJZkFjdGlvbihieXRlU3RyZWFtOiBCeXRlU3RyZWFtKTogYXZtMS5hY3Rpb25zLklmIHtcbiAgY29uc3Qgb2Zmc2V0OiBVaW50MTYgPSBieXRlU3RyZWFtLnJlYWRVaW50MTZMRSgpO1xuICByZXR1cm4ge1xuICAgIGFjdGlvbjogYXZtMS5BY3Rpb25UeXBlLklmLFxuICAgIG9mZnNldCxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlR290b0ZyYW1lMkFjdGlvbihieXRlU3RyZWFtOiBCeXRlU3RyZWFtKTogYXZtMS5hY3Rpb25zLkdvdG9GcmFtZTIge1xuICBjb25zdCBmbGFnczogVWludDggPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuICAvLyAoU2tpcCBmaXJzdCA2IGJpdHMpXG4gIGNvbnN0IGhhc1NjZW5lQmlhczogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDEpKSAhPT0gMDtcbiAgY29uc3QgcGxheTogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDApKSAhPT0gMDtcbiAgY29uc3Qgc2NlbmVCaWFzOiBVaW50MTYgPSBoYXNTY2VuZUJpYXMgPyBieXRlU3RyZWFtLnJlYWRVaW50MTZMRSgpIDogMDtcbiAgcmV0dXJuIHtcbiAgICBhY3Rpb246IGF2bTEuQWN0aW9uVHlwZS5Hb3RvRnJhbWUyLFxuICAgIHBsYXksXG4gICAgc2NlbmVCaWFzLFxuICB9O1xufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const swf_tree_1 = __webpack_require__(12);
const basic_data_types_1 = __webpack_require__(28);
const gradient_1 = __webpack_require__(126);
var ShapeVersion;
(function (ShapeVersion) {
    ShapeVersion[ShapeVersion["Shape1"] = 1] = "Shape1";
    ShapeVersion[ShapeVersion["Shape2"] = 2] = "Shape2";
    ShapeVersion[ShapeVersion["Shape3"] = 3] = "Shape3";
    ShapeVersion[ShapeVersion["Shape4"] = 4] = "Shape4";
})(ShapeVersion = exports.ShapeVersion || (exports.ShapeVersion = {}));
function parseGlyph(byteStream) {
    const bitStream = byteStream.asBitStream();
    const result = parseGlyphBits(bitStream);
    bitStream.align();
    return result;
}
exports.parseGlyph = parseGlyph;
function parseGlyphBits(bitStream) {
    const fillBits = bitStream.readUint32Bits(4);
    const lineBits = bitStream.readUint32Bits(4);
    // TODO: Check which shape version to use
    const records = parseShapeRecordStringBits(bitStream, fillBits, lineBits, ShapeVersion.Shape1);
    return { records };
}
exports.parseGlyphBits = parseGlyphBits;
function parseShape(byteStream, shapeVersion) {
    const bitStream = byteStream.asBitStream();
    const result = parseShapeBits(bitStream, shapeVersion);
    bitStream.align();
    return result;
}
exports.parseShape = parseShape;
function parseShapeBits(bitStream, shapeVersion) {
    const styles = parseShapeStylesBits(bitStream, shapeVersion);
    const records = parseShapeRecordStringBits(bitStream, styles.fillBits, styles.lineBits, shapeVersion);
    return {
        fillStyles: styles.fill,
        lineStyles: styles.line,
        records,
    };
}
exports.parseShapeBits = parseShapeBits;
function parseShapeStylesBits(bitStream, shapeVersion) {
    const byteStream = bitStream.asByteStream();
    const fill = parseFillStyleList(byteStream, shapeVersion);
    const line = parseLineStyleList(byteStream, shapeVersion);
    bitStream = byteStream.asBitStream();
    const fillBits = bitStream.readUint32Bits(4);
    const lineBits = bitStream.readUint32Bits(4);
    return { fill, line, fillBits, lineBits };
}
exports.parseShapeStylesBits = parseShapeStylesBits;
function parseShapeRecordStringBits(bitStream, fillBits, lineBits, shapeVersion) {
    const result = [];
    while (true) {
        const bytePos = bitStream.bytePos;
        const bitPos = bitStream.bitPos;
        const head = bitStream.readUint16Bits(6);
        if (head === 0) {
            break;
        }
        else {
            bitStream.bytePos = bytePos;
            bitStream.bitPos = bitPos;
        }
        const isEdge = bitStream.readBoolBits();
        if (isEdge) {
            const isStraightEdge = bitStream.readBoolBits();
            if (isStraightEdge) {
                result.push(parseStraightEdgeBits(bitStream));
            }
            else {
                result.push(parseCurvedEdgeBits(bitStream));
            }
        }
        else {
            let styles;
            [styles, [fillBits, lineBits]] = parseStyleChangeBits(bitStream, fillBits, lineBits, shapeVersion);
            result.push(styles);
        }
    }
    return result;
}
exports.parseShapeRecordStringBits = parseShapeRecordStringBits;
function parseCurvedEdgeBits(bitStream) {
    const nBits = bitStream.readUint16Bits(4) + 2;
    const controlX = bitStream.readSint32Bits(nBits);
    const controlY = bitStream.readSint32Bits(nBits);
    const deltaX = bitStream.readSint32Bits(nBits);
    const deltaY = bitStream.readSint32Bits(nBits);
    return {
        type: swf_tree_1.ShapeRecordType.CurvedEdge,
        controlDelta: { x: controlX, y: controlY },
        anchorDelta: { x: deltaX, y: deltaY },
    };
}
exports.parseCurvedEdgeBits = parseCurvedEdgeBits;
function parseStraightEdgeBits(bitStream) {
    const nBits = bitStream.readUint16Bits(4) + 2;
    const isDiagonal = bitStream.readBoolBits();
    const isVertical = !isDiagonal && bitStream.readBoolBits();
    const deltaX = isDiagonal || !isVertical ? bitStream.readSint32Bits(nBits) : 0;
    const deltaY = isDiagonal || isVertical ? bitStream.readSint32Bits(nBits) : 0;
    return {
        type: swf_tree_1.ShapeRecordType.StraightEdge,
        delta: { x: deltaX, y: deltaY },
    };
}
exports.parseStraightEdgeBits = parseStraightEdgeBits;
function parseStyleChangeBits(bitStream, fillBits, lineBits, shapeVersion) {
    const hasNewStyles = bitStream.readBoolBits();
    const changeLineStyle = bitStream.readBoolBits();
    const changeRightFill = bitStream.readBoolBits();
    const changeLeftFill = bitStream.readBoolBits();
    const hasMoveTo = bitStream.readBoolBits();
    let moveTo = undefined;
    if (hasMoveTo) {
        const nBits = bitStream.readUint16Bits(5);
        const x = bitStream.readSint32Bits(nBits);
        const y = bitStream.readSint32Bits(nBits);
        moveTo = { x, y };
    }
    const leftFill = changeLeftFill ? bitStream.readUint16Bits(fillBits) : undefined;
    const rightFill = changeRightFill ? bitStream.readUint16Bits(fillBits) : undefined;
    const lineStyle = changeLineStyle ? bitStream.readUint16Bits(lineBits) : undefined;
    let fillStyles = undefined;
    let lineStyles = undefined;
    if (hasNewStyles) {
        // TODO: Shumway forces `hasNewStyle` to `false` if shapeVersion is `Shape1`, should we do it too?
        // https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/swf/parser/module.ts#L851
        const styles = parseShapeStylesBits(bitStream, shapeVersion);
        fillStyles = styles.fill;
        lineStyles = styles.line;
        fillBits = styles.fillBits;
        lineBits = styles.lineBits;
    }
    const styleChangeRecord = {
        type: swf_tree_1.ShapeRecordType.StyleChange,
        moveTo,
        leftFill,
        rightFill,
        lineStyle,
        fillStyles,
        lineStyles,
    };
    return [styleChangeRecord, [fillBits, lineBits]];
}
exports.parseStyleChangeBits = parseStyleChangeBits;
/**
 * Parse a fill style list length or line style list length.
 *
 * @param byteStream Stream to use to parse this list length. Will mutate its state.
 * @param supportExtended Allow extended size (`> 255`). Here are the recommended values:
 *                      - `true` for `DefineShape2`, `DefineShape3`, `DefineShape4`
 *                      - `false` for `DefineShape`
 * @returns List length
 */
function parseListLength(byteStream, supportExtended) {
    const len = byteStream.readUint8();
    if (len === 0xff && supportExtended) {
        return byteStream.readUint16LE();
    }
    else {
        return len;
    }
}
exports.parseListLength = parseListLength;
function parseFillStyleList(byteStream, shapeVersion) {
    const result = [];
    const len = parseListLength(byteStream, shapeVersion > ShapeVersion.Shape1);
    for (let i = 0; i < len; i++) {
        result.push(parseFillStyle(byteStream, shapeVersion >= ShapeVersion.Shape3));
    }
    return result;
}
exports.parseFillStyleList = parseFillStyleList;
function parseFillStyle(byteStream, withAlpha) {
    const code = byteStream.readUint8();
    switch (code) {
        case 0x00:
            return parseSolidFill(byteStream, withAlpha);
        case 0x10:
            return parseLinearGradientFill(byteStream, withAlpha);
        case 0x12:
            return parseRadialGradientFill(byteStream, withAlpha);
        case 0x13:
            // TODO: Check if this requires shapeVersion >= Shape4
            return parseFocalGradientFill(byteStream, withAlpha);
        case 0x40:
            return parseBitmapFill(byteStream, true, true);
        case 0x41:
            return parseBitmapFill(byteStream, false, true);
        case 0x42:
            return parseBitmapFill(byteStream, true, false);
        case 0x43:
            return parseBitmapFill(byteStream, false, false);
        default:
            throw new Error(`Unexpected fill style code: ${code}`);
    }
}
exports.parseFillStyle = parseFillStyle;
function parseBitmapFill(byteStream, repeating, smoothed) {
    const bitmapId = byteStream.readUint16LE();
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    return {
        type: swf_tree_1.FillStyleType.Bitmap,
        bitmapId,
        matrix,
        repeating,
        smoothed,
    };
}
exports.parseBitmapFill = parseBitmapFill;
function parseFocalGradientFill(byteStream, withAlpha) {
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    const gradient = gradient_1.parseGradient(byteStream, withAlpha);
    const focalPoint = byteStream.readFixed8P8LE();
    return {
        type: swf_tree_1.FillStyleType.FocalGradient,
        matrix,
        gradient,
        focalPoint,
    };
}
exports.parseFocalGradientFill = parseFocalGradientFill;
function parseLinearGradientFill(byteStream, withAlpha) {
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    const gradient = gradient_1.parseGradient(byteStream, withAlpha);
    return {
        type: swf_tree_1.FillStyleType.LinearGradient,
        matrix,
        gradient,
    };
}
exports.parseLinearGradientFill = parseLinearGradientFill;
function parseRadialGradientFill(byteStream, withAlpha) {
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    const gradient = gradient_1.parseGradient(byteStream, withAlpha);
    return {
        type: swf_tree_1.FillStyleType.RadialGradient,
        matrix,
        gradient,
    };
}
exports.parseRadialGradientFill = parseRadialGradientFill;
function parseSolidFill(byteStream, withAlpha) {
    let color;
    if (withAlpha) {
        color = basic_data_types_1.parseStraightSRgba8(byteStream);
    }
    else {
        color = Object.assign({}, basic_data_types_1.parseSRgb8(byteStream), { a: 255 });
    }
    return {
        type: swf_tree_1.FillStyleType.Solid,
        color,
    };
}
exports.parseSolidFill = parseSolidFill;
function parseLineStyleList(byteStream, shapeVersion) {
    const result = [];
    const len = parseListLength(byteStream, shapeVersion > ShapeVersion.Shape1);
    for (let i = 0; i < len; i++) {
        if (shapeVersion < ShapeVersion.Shape4) {
            result.push(parseLineStyle(byteStream, shapeVersion >= ShapeVersion.Shape3));
        }
        else {
            result.push(parseLineStyle2(byteStream));
        }
    }
    return result;
}
exports.parseLineStyleList = parseLineStyleList;
function parseLineStyle(byteStream, withAlpha) {
    const width = byteStream.readUint16LE();
    const color = withAlpha ? basic_data_types_1.parseStraightSRgba8(byteStream) : Object.assign({}, basic_data_types_1.parseSRgb8(byteStream), { a: 255 });
    return {
        width,
        startCap: swf_tree_1.CapStyle.Round,
        endCap: swf_tree_1.CapStyle.Round,
        join: { type: swf_tree_1.JoinStyleType.Round },
        noHScale: false,
        noVScale: false,
        noClose: false,
        pixelHinting: false,
        fill: {
            type: swf_tree_1.FillStyleType.Solid,
            color,
        },
    };
}
exports.parseLineStyle = parseLineStyle;
function parseLineStyle2(byteStream) {
    const width = byteStream.readUint16LE();
    const flags = byteStream.readUint16LE();
    // (Skip first 5 bits)
    const noClose = (flags & (1 << 10)) !== 0;
    const endCapStyleId = ((flags >>> 8) & 0b11);
    const startCapStyleId = ((flags >>> 6) & 0b11);
    const joinStyleId = ((flags >>> 4) & 0b11);
    const hasFill = (flags & (1 << 3)) !== 0;
    const noHScale = (flags & (1 << 2)) !== 0;
    const noVScale = (flags & (1 << 1)) !== 0;
    const pixelHinting = (flags & (1 << 0)) !== 0;
    let join;
    switch (joinStyleId) {
        case 0:
            join = { type: swf_tree_1.JoinStyleType.Round };
            break;
        case 1:
            join = { type: swf_tree_1.JoinStyleType.Bevel };
            break;
        case 2:
            join = { type: swf_tree_1.JoinStyleType.Miter, limit: byteStream.readFixed8P8LE() };
            break;
        default:
            throw new incident_1.Incident("UnexpectedJoinStyleId", { id: joinStyleId });
    }
    let fill;
    if (hasFill) {
        fill = parseFillStyle(byteStream, true);
    }
    else {
        fill = { type: swf_tree_1.FillStyleType.Solid, color: basic_data_types_1.parseStraightSRgba8(byteStream) };
    }
    return {
        width,
        startCap: capStyleFromId(startCapStyleId),
        endCap: capStyleFromId(endCapStyleId),
        join,
        noHScale,
        noVScale,
        noClose,
        pixelHinting,
        fill,
    };
}
exports.parseLineStyle2 = parseLineStyle2;
function capStyleFromId(capStyleId) {
    switch (capStyleId) {
        case 0:
            return swf_tree_1.CapStyle.Round;
        case 1:
            return swf_tree_1.CapStyle.None;
        case 2:
            return swf_tree_1.CapStyle.Square;
        default:
            throw new incident_1.Incident("UnexpectedCapStyleId", { id: capStyleId });
    }
}
exports.capStyleFromId = capStyleFromId;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 73 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = createDomuPlayer;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_element_resize_detector__ = __webpack_require__(133);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_element_resize_detector___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_element_resize_detector__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_incident__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_incident___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_incident__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_renderers_canvas_renderer__ = __webpack_require__(144);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_player__ = __webpack_require__(363);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_services_clock__ = __webpack_require__(127);





function getContentDimensions(element) {
    const style = getComputedStyle(element);
    // `parseFloat` is used because the values are strings (suffixed by `px`).
    const paddingX = parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);
    const paddingY = parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);
    const borderX = parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);
    const borderY = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);
    return {
        width: element.offsetWidth - paddingX - borderX,
        height: element.offsetHeight - paddingY - borderY,
    };
}
function resetStyle(element) {
    element.style.width = "0";
    element.style.height = "0";
    element.style.padding = "0";
    element.style.margin = "0";
    element.style.border = "none";
}
class DomuPlayer {
    get containerResizeDetector() {
        if (this._containerResizeDetector === undefined) {
            this._containerResizeDetector = __WEBPACK_IMPORTED_MODULE_0_element_resize_detector___default()({ strategy: "scroll" });
        }
        return this._containerResizeDetector;
    }
    get containerResizeListener() {
        if (this._containerResizeListener === undefined) {
            this._containerResizeListener = () => this.handleViewportResize(getContentDimensions(this.container));
        }
        return this._containerResizeListener;
    }
    /**
     * Viewport size: match containerContent or fixed dimensions
     */
    get viewportSize() {
        return this._viewportSize;
    }
    set viewportSize(value) {
        if (value === "containerContent") {
            if (this._viewportSize === "containerContent") {
                return;
            }
            this._viewportSize = "containerContent";
            this.containerResizeDetector.listenTo(this.container, this.containerResizeListener);
            this.handleViewportResize(getContentDimensions(this.container));
        }
        else {
            if (this._viewportSize === "containerContent") {
                this.containerResizeDetector.removeListener(this.container, this.containerResizeListener);
            }
            const newSize = Object.freeze({ width: value.width, height: value.height });
            this._viewportSize = newSize;
            this.handleViewportResize(newSize);
        }
    }
    constructor(options) {
        const container = options.container;
        if (Reflect.get(container, "domuPlayer") !== undefined) {
            throw new __WEBPACK_IMPORTED_MODULE_1_incident__["Incident"]("DuplicatePlayer", "Cannot acquire ownership of container: already owned");
        }
        if (container.childNodes.length !== 0) {
            throw new __WEBPACK_IMPORTED_MODULE_1_incident__["Incident"]("NonEmptyContainer", "The container used for the domu player must be empty (`container.childNodes.length === 0`)");
        }
        // Signal exclusive ownership of the container
        Reflect.set(container, "domuPlayer", this);
        try {
            this.container = container;
            this.root = document.createElement("span");
            this.canvas = document.createElement("canvas");
            resetStyle(this.root);
            resetStyle(this.canvas);
            this.root.style.position = "relative";
            this.root.style.cssFloat = "left";
            this.canvas.style.position = "absolute";
            this.canvas.style.left = "0";
            this.canvas.style.top = "0";
            this.canvas.width = 0;
            this.canvas.height = 0;
            this.root.appendChild(this.canvas);
            container.appendChild(this.root);
            // Also updates the canvas size
            this.viewportSize = options.viewportSize !== undefined ? options.viewportSize : "containerContent";
            const context = this.canvas.getContext("2d");
            if (context === null) {
                throw new __WEBPACK_IMPORTED_MODULE_1_incident__["Incident"]("CanvasContextAcquisition", "Unable to acquire canvas context");
            }
            this.renderer = new __WEBPACK_IMPORTED_MODULE_2__lib_renderers_canvas_renderer__["a" /* CanvasRenderer */](context, this.canvas.width, this.canvas.height);
            this.clock = options.clock !== undefined ? options.clock : __WEBPACK_IMPORTED_MODULE_4__lib_services_clock__["b" /* SYSTEM_CLOCK */];
            this.player = undefined;
        }
        catch (err) {
            Reflect.deleteProperty(container, "domuPlayer");
            throw err;
        }
    }
    setMovieUrl(movieUrl) {
        if (this.player !== undefined) {
            this.player.destroy();
        }
        this.player = Object(__WEBPACK_IMPORTED_MODULE_3__lib_player__["a" /* startPlayer */])({
            movieUrl,
            clock: this.clock,
            renderer: this.renderer,
        });
    }
    /**
     * Called when the size of the viewport _may_ have been updated.
     */
    handleViewportResize(newSize) {
        const { width, height } = newSize;
        this.canvas.width = width;
        this.canvas.height = height;
        this.canvas.style.width = `${width}px`;
        this.canvas.style.height = `${height}px`;
        // TODO: Fix this, this method is called as a side-effect of initializing the size of the viewport
        //       (before the creation of the renderer)
        if (this.renderer !== undefined) {
            this.renderer.updateSize(width, height);
        }
    }
}
/* unused harmony export DomuPlayer */

function createDomuPlayer(options) {
    return new DomuPlayer(options);
}


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = module.exports = {};

/**
 * Loops through the collection and calls the callback for each element. if the callback returns truthy, the loop is broken and returns the same value.
 * @public
 * @param {*} collection The collection to loop through. Needs to have a length property set and have indices set from 0 to length - 1.
 * @param {function} callback The callback to be called for each element. The element will be given as a parameter to the callback. If this callback returns truthy, the loop is broken and the same value is returned.
 * @returns {*} The value that a callback has returned (if truthy). Otherwise nothing.
 */
utils.forEach = function(collection, callback) {
    for(var i = 0; i < collection.length; i++) {
        var result = callback(collection[i]);
        if(result) {
            return result;
        }
    }
};


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var detector = module.exports = {};

detector.isIE = function(version) {
    function isAnyIeVersion() {
        var agent = navigator.userAgent.toLowerCase();
        return agent.indexOf("msie") !== -1 || agent.indexOf("trident") !== -1 || agent.indexOf(" edge/") !== -1;
    }

    if(!isAnyIeVersion()) {
        return false;
    }

    if(!version) {
        return true;
    }

    //Shamelessly stolen from https://gist.github.com/padolsey/527683
    var ieVersion = (function(){
        var undef,
            v = 3,
            div = document.createElement("div"),
            all = div.getElementsByTagName("i");

        do {
            div.innerHTML = "<!--[if gt IE " + (++v) + "]><i></i><![endif]-->";
        }
        while (all[0]);

        return v > 4 ? v : undef;
    }());

    return version === ieVersion;
};

detector.isLegacyOpera = function() {
    return !!window.opera;
};


/***/ }),
/* 76 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ButtonState; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__frame__ = __webpack_require__(77);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__interactive_object__ = __webpack_require__(359);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__sprite__ = __webpack_require__(106);



var ButtonState;
(function (ButtonState) {
    ButtonState[ButtonState["Up"] = 0] = "Up";
    ButtonState[ButtonState["Down"] = 1] = "Down";
    ButtonState[ButtonState["Over"] = 2] = "Over";
    ButtonState[ButtonState["HitTest"] = 3] = "HitTest";
})(ButtonState || (ButtonState = {}));
function instanciateState(dictionary, tags) {
    if (tags.length === 0) {
        return undefined;
    }
    // TODO: Optimize `length === 1` case
    return new __WEBPACK_IMPORTED_MODULE_2__sprite__["a" /* DynamicSprite */](dictionary, [new __WEBPACK_IMPORTED_MODULE_0__frame__["a" /* Frame */](tags)]);
}
class SimpleButton extends __WEBPACK_IMPORTED_MODULE_1__interactive_object__["a" /* InteractiveObject */] {
    constructor(character) {
        super();
        this.character = character;
        this.state = ButtonState.Up;
    }
    static fromCharacter(character, dictionary) {
        const button = new SimpleButton(character);
        button.upState = instanciateState(dictionary, character.states.up);
        button.downState = instanciateState(dictionary, character.states.down);
        button.overState = instanciateState(dictionary, character.states.over);
        button.hitTestState = instanciateState(dictionary, character.states.hitTest);
        return button;
    }
    nextFrame(isMainLoop, runScripts) {
    }
    visit(visitor) {
        return visitor.visitSimpleButton(this);
    }
}
/* harmony export (immutable) */ __webpack_exports__["b"] = SimpleButton;



/***/ }),
/* 77 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = collectFrames;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_swf_tree__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_swf_tree___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_swf_tree__);

class Frame {
    // labelName: string;
    // soundStreamHead: Parser.SoundStream;
    // soundStreamBlock: Uint8Array;
    // actionBlocks: ActionBlock[];
    // initActionBlocks: InitActionBlock[];
    // exports: SymbolExport[];
    constructor(tags) {
        this.tags = tags;
    }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = Frame;

function* collectFrames(tags) {
    let curTags = [];
    for (const tag of tags) {
        curTags.push(tag);
        if (tag.type === __WEBPACK_IMPORTED_MODULE_0_swf_tree__["TagType"].ShowFrame) {
            yield new Frame(curTags);
            curTags = [];
        }
    }
}


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var add_1 = __webpack_require__(146);
exports.$Add = add_1.$Add;
var add2_1 = __webpack_require__(148);
exports.$Add2 = add2_1.$Add2;
var and_1 = __webpack_require__(149);
exports.$And = and_1.$And;
var ascii_to_char_1 = __webpack_require__(150);
exports.$AsciiToChar = ascii_to_char_1.$AsciiToChar;
var bit_and_1 = __webpack_require__(151);
exports.$BitAnd = bit_and_1.$BitAnd;
var bit_l_shift_1 = __webpack_require__(152);
exports.$BitLShift = bit_l_shift_1.$BitLShift;
var bit_or_1 = __webpack_require__(153);
exports.$BitOr = bit_or_1.$BitOr;
var bit_r_shift_1 = __webpack_require__(154);
exports.$BitRShift = bit_r_shift_1.$BitRShift;
var bit_u_r_shift_1 = __webpack_require__(155);
exports.$BitURShift = bit_u_r_shift_1.$BitURShift;
var bit_xor_1 = __webpack_require__(156);
exports.$BitXor = bit_xor_1.$BitXor;
var call_1 = __webpack_require__(157);
exports.$Call = call_1.$Call;
var call_function_1 = __webpack_require__(158);
exports.$CallFunction = call_function_1.$CallFunction;
var call_method_1 = __webpack_require__(159);
exports.$CallMethod = call_method_1.$CallMethod;
var cast_op_1 = __webpack_require__(160);
exports.$CastOp = cast_op_1.$CastOp;
var char_to_ascii_1 = __webpack_require__(161);
exports.$CharToAscii = char_to_ascii_1.$CharToAscii;
var clone_sprite_1 = __webpack_require__(162);
exports.$CloneSprite = clone_sprite_1.$CloneSprite;
var constant_pool_1 = __webpack_require__(163);
exports.$ConstantPool = constant_pool_1.$ConstantPool;
var decrement_1 = __webpack_require__(170);
exports.$Decrement = decrement_1.$Decrement;
var define_function_1 = __webpack_require__(171);
exports.$DefineFunction = define_function_1.$DefineFunction;
var define_function2_1 = __webpack_require__(172);
exports.$DefineFunction2 = define_function2_1.$DefineFunction2;
var define_local_1 = __webpack_require__(175);
exports.$DefineLocal = define_local_1.$DefineLocal;
var define_local2_1 = __webpack_require__(176);
exports.$DefineLocal2 = define_local2_1.$DefineLocal2;
var delete_1 = __webpack_require__(177);
exports.$Delete = delete_1.$Delete;
var delete2_1 = __webpack_require__(178);
exports.$Delete2 = delete2_1.$Delete2;
var divide_1 = __webpack_require__(179);
exports.$Divide = divide_1.$Divide;
var end_drag_1 = __webpack_require__(180);
exports.$EndDrag = end_drag_1.$EndDrag;
var enumerate_1 = __webpack_require__(181);
exports.$Enumerate = enumerate_1.$Enumerate;
var enumerate2_1 = __webpack_require__(182);
exports.$Enumerate2 = enumerate2_1.$Enumerate2;
var equals_1 = __webpack_require__(183);
exports.$Equals = equals_1.$Equals;
var equals2_1 = __webpack_require__(184);
exports.$Equals2 = equals2_1.$Equals2;
var extends_1 = __webpack_require__(185);
exports.$Extends = extends_1.$Extends;
var fs_command2_1 = __webpack_require__(186);
exports.$FsCommand2 = fs_command2_1.$FsCommand2;
var get_member_1 = __webpack_require__(187);
exports.$GetMember = get_member_1.$GetMember;
var get_property_1 = __webpack_require__(188);
exports.$GetProperty = get_property_1.$GetProperty;
var get_time_1 = __webpack_require__(189);
exports.$GetTime = get_time_1.$GetTime;
var get_url_1 = __webpack_require__(190);
exports.$GetUrl = get_url_1.$GetUrl;
var get_url2_1 = __webpack_require__(191);
exports.$GetUrl2 = get_url2_1.$GetUrl2;
var get_variable_1 = __webpack_require__(192);
exports.$GetVariable = get_variable_1.$GetVariable;
var goto_frame_1 = __webpack_require__(193);
exports.$GotoFrame = goto_frame_1.$GotoFrame;
var goto_frame2_1 = __webpack_require__(194);
exports.$GotoFrame2 = goto_frame2_1.$GotoFrame2;
var goto_label_1 = __webpack_require__(195);
exports.$GotoLabel = goto_label_1.$GotoLabel;
var greater_1 = __webpack_require__(196);
exports.$Greater = greater_1.$Greater;
var if_1 = __webpack_require__(197);
exports.$If = if_1.$If;
var implements_op_1 = __webpack_require__(198);
exports.$ImplementsOp = implements_op_1.$ImplementsOp;
var increment_1 = __webpack_require__(199);
exports.$Increment = increment_1.$Increment;
var init_array_1 = __webpack_require__(200);
exports.$InitArray = init_array_1.$InitArray;
var init_object_1 = __webpack_require__(201);
exports.$InitObject = init_object_1.$InitObject;
var instance_of_1 = __webpack_require__(202);
exports.$InstanceOf = instance_of_1.$InstanceOf;
var jump_1 = __webpack_require__(203);
exports.$Jump = jump_1.$Jump;
var less_1 = __webpack_require__(204);
exports.$Less = less_1.$Less;
var less2_1 = __webpack_require__(205);
exports.$Less2 = less2_1.$Less2;
var mb_ascii_to_char_1 = __webpack_require__(206);
exports.$MbAsciiToChar = mb_ascii_to_char_1.$MbAsciiToChar;
var mb_char_to_ascii_1 = __webpack_require__(207);
exports.$MbCharToAscii = mb_char_to_ascii_1.$MbCharToAscii;
var mb_string_extract_1 = __webpack_require__(208);
exports.$MbStringExtract = mb_string_extract_1.$MbStringExtract;
var mb_string_length_1 = __webpack_require__(209);
exports.$MbStringLength = mb_string_length_1.$MbStringLength;
var modulo_1 = __webpack_require__(210);
exports.$Modulo = modulo_1.$Modulo;
var multiply_1 = __webpack_require__(211);
exports.$Multiply = multiply_1.$Multiply;
var new_method_1 = __webpack_require__(212);
exports.$NewMethod = new_method_1.$NewMethod;
var new_object_1 = __webpack_require__(213);
exports.$NewObject = new_object_1.$NewObject;
var next_frame_1 = __webpack_require__(214);
exports.$NextFrame = next_frame_1.$NextFrame;
var not_1 = __webpack_require__(215);
exports.$Not = not_1.$Not;
var or_1 = __webpack_require__(216);
exports.$Or = or_1.$Or;
var play_1 = __webpack_require__(217);
exports.$Play = play_1.$Play;
var pop_1 = __webpack_require__(218);
exports.$Pop = pop_1.$Pop;
var previous_frame_1 = __webpack_require__(219);
exports.$PreviousFrame = previous_frame_1.$PreviousFrame;
var push_1 = __webpack_require__(220);
exports.$Push = push_1.$Push;
var push_duplicate_1 = __webpack_require__(231);
exports.$PushDuplicate = push_duplicate_1.$PushDuplicate;
var random_number_1 = __webpack_require__(232);
exports.$RandomNumber = random_number_1.$RandomNumber;
var remove_sprite_1 = __webpack_require__(233);
exports.$RemoveSprite = remove_sprite_1.$RemoveSprite;
var return_1 = __webpack_require__(234);
exports.$Return = return_1.$Return;
var set_member_1 = __webpack_require__(235);
exports.$SetMember = set_member_1.$SetMember;
var set_property_1 = __webpack_require__(236);
exports.$SetProperty = set_property_1.$SetProperty;
var set_target_1 = __webpack_require__(237);
exports.$SetTarget = set_target_1.$SetTarget;
var set_target2_1 = __webpack_require__(238);
exports.$SetTarget2 = set_target2_1.$SetTarget2;
var set_variable_1 = __webpack_require__(239);
exports.$SetVariable = set_variable_1.$SetVariable;
var stack_swap_1 = __webpack_require__(240);
exports.$StackSwap = stack_swap_1.$StackSwap;
var start_drag_1 = __webpack_require__(241);
exports.$StartDrag = start_drag_1.$StartDrag;
var stop_1 = __webpack_require__(242);
exports.$Stop = stop_1.$Stop;
var stop_sounds_1 = __webpack_require__(243);
exports.$StopSounds = stop_sounds_1.$StopSounds;
var store_register_1 = __webpack_require__(244);
exports.$StoreRegister = store_register_1.$StoreRegister;
var strict_equals_1 = __webpack_require__(245);
exports.$StrictEquals = strict_equals_1.$StrictEquals;
var strict_mode_1 = __webpack_require__(246);
exports.$StrictMode = strict_mode_1.$StrictMode;
var string_add_1 = __webpack_require__(247);
exports.$StringAdd = string_add_1.$StringAdd;
var string_equals_1 = __webpack_require__(248);
exports.$StringEquals = string_equals_1.$StringEquals;
var string_extract_1 = __webpack_require__(249);
exports.$StringExtract = string_extract_1.$StringExtract;
var string_greater_1 = __webpack_require__(250);
exports.$StringGreater = string_greater_1.$StringGreater;
var string_length_1 = __webpack_require__(251);
exports.$StringLength = string_length_1.$StringLength;
var string_less_1 = __webpack_require__(252);
exports.$StringLess = string_less_1.$StringLess;
var subtract_1 = __webpack_require__(253);
exports.$Subtract = subtract_1.$Subtract;
var target_path_1 = __webpack_require__(254);
exports.$TargetPath = target_path_1.$TargetPath;
var throw_1 = __webpack_require__(255);
exports.$Throw = throw_1.$Throw;
var toggle_quality_1 = __webpack_require__(256);
exports.$ToggleQuality = toggle_quality_1.$ToggleQuality;
var to_integer_1 = __webpack_require__(257);
exports.$ToInteger = to_integer_1.$ToInteger;
var to_number_1 = __webpack_require__(258);
exports.$ToNumber = to_number_1.$ToNumber;
var to_string_1 = __webpack_require__(259);
exports.$ToString = to_string_1.$ToString;
var trace_1 = __webpack_require__(260);
exports.$Trace = trace_1.$Trace;
var try_1 = __webpack_require__(261);
exports.$Try = try_1.$Try;
var type_of_1 = __webpack_require__(264);
exports.$TypeOf = type_of_1.$TypeOf;
var unknown_1 = __webpack_require__(265);
exports.$Unknown = unknown_1.$Unknown;
var wait_for_frame_1 = __webpack_require__(266);
exports.$WaitForFrame = wait_for_frame_1.$WaitForFrame;
var wait_for_frame2_1 = __webpack_require__(267);
exports.$WaitForFrame2 = wait_for_frame2_1.$WaitForFrame2;
var with_1 = __webpack_require__(268);
exports.$With = with_1.$With;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
exports.name = "MaxArrayLength";
function format({ array, max }) {
    return `Expected array length (${array.length}) to be less than or equal to ${max}`;
}
exports.format = format;
function createMaxArrayLengthError(array, max) {
    return incident_1.Incident(exports.name, { array, max }, format);
}
exports.createMaxArrayLengthError = createMaxArrayLengthError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL21heC1hcnJheS1sZW5ndGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMsZ0JBQWdCLENBQUM7QUFVM0MsZ0JBQXVCLEVBQUMsS0FBSyxFQUFFLEdBQUcsRUFBTztJQUN2QyxNQUFNLENBQUMsMEJBQTBCLEtBQUssQ0FBQyxNQUFNLGlDQUFpQyxHQUFHLEVBQUUsQ0FBQztBQUN0RixDQUFDO0FBRkQsd0JBRUM7QUFFRCxtQ0FBMEMsS0FBcUIsRUFBRSxHQUFXO0lBQzFFLE1BQU0sQ0FBQyxtQkFBUSxDQUFDLFlBQUksRUFBRSxFQUFDLEtBQUssRUFBRSxHQUFHLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUM5QyxDQUFDO0FBRkQsOERBRUMiLCJmaWxlIjoiZXJyb3JzL21heC1hcnJheS1sZW5ndGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmNpZGVudCB9IGZyb20gXCJpbmNpZGVudFwiO1xuXG5leHBvcnQgdHlwZSBOYW1lID0gXCJNYXhBcnJheUxlbmd0aFwiO1xuZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcIk1heEFycmF5TGVuZ3RoXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gIGFycmF5OiBBcnJheUxpa2U8YW55PjtcbiAgbWF4OiBudW1iZXI7XG59XG5cbmV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuZXhwb3J0IHR5cGUgTWF4QXJyYXlMZW5ndGhFcnJvciA9IEluY2lkZW50PERhdGEsIE5hbWUsIENhdXNlPjtcblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7YXJyYXksIG1heH06IERhdGEpOiBzdHJpbmcge1xuICByZXR1cm4gYEV4cGVjdGVkIGFycmF5IGxlbmd0aCAoJHthcnJheS5sZW5ndGh9KSB0byBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gJHttYXh9YDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU1heEFycmF5TGVuZ3RoRXJyb3IoYXJyYXk6IEFycmF5TGlrZTxhbnk+LCBtYXg6IG51bWJlcik6IE1heEFycmF5TGVuZ3RoRXJyb3Ige1xuICByZXR1cm4gSW5jaWRlbnQobmFtZSwge2FycmF5LCBtYXh9LCBmb3JtYXQpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint8_1 = __webpack_require__(22);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const ucs2_string_1 = __webpack_require__(10);
exports.$Parameter = new document_1.DocumentType({
    properties: {
        register: { type: uint8_1.$Uint8 },
        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9wYXJhbWV0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQ0FBNkM7QUFDN0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSx3REFBd0Q7QUFTM0MsUUFBQSxVQUFVLEdBQThCLElBQUksdUJBQVksQ0FBWTtJQUMvRSxVQUFVLEVBQUU7UUFDVixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsY0FBTSxFQUFDO1FBQ3hCLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUN4RDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvcGFyYW1ldGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQ4IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDhcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgVWNzMlN0cmluZ1R5cGUgfSBmcm9tIFwia3J5by90eXBlcy91Y3MyLXN0cmluZ1wiO1xuaW1wb3J0IHsgVWludDggfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcblxuLy8gVE9ETyhkZW11cmdvcyk6IHJlbmFtZSB0byBSZWdpc3RlclBhcmFtZXRlciBvciBtYWtlIHJlZ2lzdGVyIG9wdGlvbmFsICh1bmRlZmluZWQgaWYgMClcbmV4cG9ydCBpbnRlcmZhY2UgUGFyYW1ldGVyIHtcbiAgcmVnaXN0ZXI6IFVpbnQ4O1xuICBuYW1lOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCAkUGFyYW1ldGVyOiBEb2N1bWVudElvVHlwZTxQYXJhbWV0ZXI+ID0gbmV3IERvY3VtZW50VHlwZTxQYXJhbWV0ZXI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHJlZ2lzdGVyOiB7dHlwZTogJFVpbnQ4fSxcbiAgICBuYW1lOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var GetUrl2Method;
(function (GetUrl2Method) {
    GetUrl2Method[GetUrl2Method["None"] = 0] = "None";
    GetUrl2Method[GetUrl2Method["Get"] = 1] = "Get";
    GetUrl2Method[GetUrl2Method["Post"] = 2] = "Post";
})(GetUrl2Method = exports.GetUrl2Method || (exports.GetUrl2Method = {}));
exports.$GetUrl2Method = new ts_enum_1.TsEnumType({
    enum: GetUrl2Method,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9nZXQtdXJsMi1tZXRob2QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsZ0RBQWdEO0FBRWhELElBQVksYUFJWDtBQUpELFdBQVksYUFBYTtJQUN2QixpREFBSSxDQUFBO0lBQ0osK0NBQUcsQ0FBQTtJQUNILGlEQUFJLENBQUE7QUFDTixDQUFDLEVBSlcsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFJeEI7QUFFWSxRQUFBLGNBQWMsR0FBOEIsSUFBSSxvQkFBVSxDQUFnQjtJQUNyRixJQUFJLEVBQUUsYUFBYTtJQUNuQixVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2dldC11cmwyLW1ldGhvZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIEdldFVybDJNZXRob2Qge1xuICBOb25lLFxuICBHZXQsXG4gIFBvc3QsXG59XG5cbmV4cG9ydCBjb25zdCAkR2V0VXJsMk1ldGhvZDogVHNFbnVtVHlwZTxHZXRVcmwyTWV0aG9kPiA9IG5ldyBUc0VudW1UeXBlPEdldFVybDJNZXRob2Q+KHtcbiAgZW51bTogR2V0VXJsMk1ldGhvZCxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
const tagged_union_1 = __webpack_require__(15);
const values = __importStar(__webpack_require__(83));
exports.$Value = new tagged_union_1.TaggedUnionType(() => ({
    variants: [
        values.$Boolean,
        values.$CString,
        values.$Constant,
        values.$Float32,
        values.$Float64,
        values.$Int32,
        values.$Null,
        values.$Register,
        values.$Undefined,
    ],
    tag: "type",
}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS92YWx1ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSwwREFBMEQ7QUFDMUQsdURBQXlDO0FBYTVCLFFBQUEsTUFBTSxHQUEyQixJQUFJLDhCQUFlLENBQVEsR0FBRyxFQUFFLENBQUMsQ0FBQztJQUM5RSxRQUFRLEVBQUU7UUFDUixNQUFNLENBQUMsUUFBUTtRQUNmLE1BQU0sQ0FBQyxRQUFRO1FBQ2YsTUFBTSxDQUFDLFNBQVM7UUFDaEIsTUFBTSxDQUFDLFFBQVE7UUFDZixNQUFNLENBQUMsUUFBUTtRQUNmLE1BQU0sQ0FBQyxNQUFNO1FBQ2IsTUFBTSxDQUFDLEtBQUs7UUFDWixNQUFNLENBQUMsU0FBUztRQUNoQixNQUFNLENBQUMsVUFBVTtLQUNsQjtJQUNELEdBQUcsRUFBRSxNQUFNO0NBQ1osQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS92YWx1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhZ2dlZFVuaW9uVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RhZ2dlZC11bmlvblwiO1xuaW1wb3J0ICogYXMgdmFsdWVzIGZyb20gXCIuL3ZhbHVlcy9pbmRleFwiO1xuXG5leHBvcnQgdHlwZSBWYWx1ZSA9XG4gIHZhbHVlcy5Cb29sZWFuXG4gIHwgdmFsdWVzLkNTdHJpbmdcbiAgfCB2YWx1ZXMuQ29uc3RhbnRcbiAgfCB2YWx1ZXMuRmxvYXQzMlxuICB8IHZhbHVlcy5GbG9hdDY0XG4gIHwgdmFsdWVzLkludDMyXG4gIHwgdmFsdWVzLk51bGxcbiAgfCB2YWx1ZXMuUmVnaXN0ZXJcbiAgfCB2YWx1ZXMuVW5kZWZpbmVkO1xuXG5leHBvcnQgY29uc3QgJFZhbHVlOiBUYWdnZWRVbmlvblR5cGU8VmFsdWU+ID0gbmV3IFRhZ2dlZFVuaW9uVHlwZTxWYWx1ZT4oKCkgPT4gKHtcbiAgdmFyaWFudHM6IFtcbiAgICB2YWx1ZXMuJEJvb2xlYW4sXG4gICAgdmFsdWVzLiRDU3RyaW5nLFxuICAgIHZhbHVlcy4kQ29uc3RhbnQsXG4gICAgdmFsdWVzLiRGbG9hdDMyLFxuICAgIHZhbHVlcy4kRmxvYXQ2NCxcbiAgICB2YWx1ZXMuJEludDMyLFxuICAgIHZhbHVlcy4kTnVsbCxcbiAgICB2YWx1ZXMuJFJlZ2lzdGVyLFxuICAgIHZhbHVlcy4kVW5kZWZpbmVkLFxuICBdLFxuICB0YWc6IFwidHlwZVwiLFxufSkpO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var boolean_1 = __webpack_require__(221);
exports.$Boolean = boolean_1.$Boolean;
var c_string_1 = __webpack_require__(222);
exports.$CString = c_string_1.$CString;
var constant_1 = __webpack_require__(223);
exports.$Constant = constant_1.$Constant;
var float32_1 = __webpack_require__(224);
exports.$Float32 = float32_1.$Float32;
var float64_1 = __webpack_require__(226);
exports.$Float64 = float64_1.$Float64;
var int32_1 = __webpack_require__(227);
exports.$Int32 = int32_1.$Int32;
var null_1 = __webpack_require__(228);
exports.$Null = null_1.$Null;
var register_1 = __webpack_require__(229);
exports.$Register = register_1.$Register;
var undefined_1 = __webpack_require__(230);
exports.$Undefined = undefined_1.$Undefined;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS92YWx1ZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxQ0FBOEM7QUFBckMsNkJBQUEsUUFBUSxDQUFBO0FBQ2pCLHVDQUErQztBQUF0Qyw4QkFBQSxRQUFRLENBQUE7QUFDakIsdUNBQWlEO0FBQXhDLCtCQUFBLFNBQVMsQ0FBQTtBQUNsQixxQ0FBOEM7QUFBckMsNkJBQUEsUUFBUSxDQUFBO0FBQ2pCLHFDQUE4QztBQUFyQyw2QkFBQSxRQUFRLENBQUE7QUFDakIsaUNBQXdDO0FBQS9CLHlCQUFBLE1BQU0sQ0FBQTtBQUNmLCtCQUFxQztBQUE1Qix1QkFBQSxLQUFLLENBQUE7QUFDZCx1Q0FBaUQ7QUFBeEMsK0JBQUEsU0FBUyxDQUFBO0FBQ2xCLHlDQUFvRDtBQUEzQyxpQ0FBQSxVQUFVLENBQUEiLCJmaWxlIjoiYXZtMS92YWx1ZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyAkQm9vbGVhbiwgQm9vbGVhbiB9IGZyb20gXCIuL2Jvb2xlYW5cIjtcbmV4cG9ydCB7ICRDU3RyaW5nLCBDU3RyaW5nIH0gZnJvbSBcIi4vYy1zdHJpbmdcIjtcbmV4cG9ydCB7ICRDb25zdGFudCwgQ29uc3RhbnQgfSBmcm9tIFwiLi9jb25zdGFudFwiO1xuZXhwb3J0IHsgJEZsb2F0MzIsIEZsb2F0MzIgfSBmcm9tIFwiLi9mbG9hdDMyXCI7XG5leHBvcnQgeyAkRmxvYXQ2NCwgRmxvYXQ2NCB9IGZyb20gXCIuL2Zsb2F0NjRcIjtcbmV4cG9ydCB7ICRJbnQzMiwgSW50MzIgfSBmcm9tIFwiLi9pbnQzMlwiO1xuZXhwb3J0IHsgJE51bGwsIE51bGwgfSBmcm9tIFwiLi9udWxsXCI7XG5leHBvcnQgeyAkUmVnaXN0ZXIsIFJlZ2lzdGVyIH0gZnJvbSBcIi4vcmVnaXN0ZXJcIjtcbmV4cG9ydCB7ICRVbmRlZmluZWQsIFVuZGVmaW5lZCB9IGZyb20gXCIuL3VuZGVmaW5lZFwiO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
const tagged_union_1 = __webpack_require__(15);
const catchTargets = __importStar(__webpack_require__(85));
exports.$CatchTarget = new tagged_union_1.TaggedUnionType({
    variants: [
        catchTargets.$Register,
        catchTargets.$Variable,
    ],
    tag: "type",
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9jYXRjaC10YXJnZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsMERBQTBEO0FBQzFELG9FQUFzRDtBQUl6QyxRQUFBLFlBQVksR0FBaUMsSUFBSSw4QkFBZSxDQUFjO0lBQ3pGLFFBQVEsRUFBRTtRQUNSLFlBQVksQ0FBQyxTQUFTO1FBQ3RCLFlBQVksQ0FBQyxTQUFTO0tBQ3ZCO0lBQ0QsR0FBRyxFQUFFLE1BQU07Q0FDWixDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9jYXRjaC10YXJnZXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUYWdnZWRVbmlvblR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90YWdnZWQtdW5pb25cIjtcbmltcG9ydCAqIGFzIGNhdGNoVGFyZ2V0cyBmcm9tIFwiLi9jYXRjaC10YXJnZXRzL2luZGV4XCI7XG5cbmV4cG9ydCB0eXBlIENhdGNoVGFyZ2V0ID0gY2F0Y2hUYXJnZXRzLlJlZ2lzdGVyIHwgY2F0Y2hUYXJnZXRzLlZhcmlhYmxlO1xuXG5leHBvcnQgY29uc3QgJENhdGNoVGFyZ2V0OiBUYWdnZWRVbmlvblR5cGU8Q2F0Y2hUYXJnZXQ+ID0gbmV3IFRhZ2dlZFVuaW9uVHlwZTxDYXRjaFRhcmdldD4oe1xuICB2YXJpYW50czogW1xuICAgIGNhdGNoVGFyZ2V0cy4kUmVnaXN0ZXIsXG4gICAgY2F0Y2hUYXJnZXRzLiRWYXJpYWJsZSxcbiAgXSxcbiAgdGFnOiBcInR5cGVcIixcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var register_1 = __webpack_require__(262);
exports.$Register = register_1.$Register;
var variable_1 = __webpack_require__(263);
exports.$Variable = variable_1.$Variable;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9jYXRjaC10YXJnZXRzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQWlEO0FBQXhDLCtCQUFBLFNBQVMsQ0FBQTtBQUNsQix1Q0FBaUQ7QUFBeEMsK0JBQUEsU0FBUyxDQUFBIiwiZmlsZSI6ImF2bTEvY2F0Y2gtdGFyZ2V0cy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7ICRSZWdpc3RlciwgUmVnaXN0ZXIgfSBmcm9tIFwiLi9yZWdpc3RlclwiO1xuZXhwb3J0IHsgJFZhcmlhYmxlLCBWYXJpYWJsZSB9IGZyb20gXCIuL3ZhcmlhYmxlXCI7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bitmap_1 = __webpack_require__(269);
exports.$Bitmap = bitmap_1.$Bitmap;
var focal_gradient_1 = __webpack_require__(270);
exports.$FocalGradient = focal_gradient_1.$FocalGradient;
var linear_gradient_1 = __webpack_require__(271);
exports.$LinearGradient = linear_gradient_1.$LinearGradient;
var radial_gradient_1 = __webpack_require__(272);
exports.$RadialGradient = radial_gradient_1.$RadialGradient;
var solid_1 = __webpack_require__(273);
exports.$Solid = solid_1.$Solid;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtQ0FBMkM7QUFBbEMsMkJBQUEsT0FBTyxDQUFBO0FBQ2hCLG1EQUFpRTtBQUF4RCwwQ0FBQSxjQUFjLENBQUE7QUFDdkIscURBQW9FO0FBQTNELDRDQUFBLGVBQWUsQ0FBQTtBQUN4QixxREFBb0U7QUFBM0QsNENBQUEsZUFBZSxDQUFBO0FBQ3hCLGlDQUF3QztBQUEvQix5QkFBQSxNQUFNLENBQUEiLCJmaWxlIjoiZmlsbC1zdHlsZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyAkQml0bWFwLCBCaXRtYXAgfSBmcm9tIFwiLi9iaXRtYXBcIjtcbmV4cG9ydCB7ICRGb2NhbEdyYWRpZW50LCBGb2NhbEdyYWRpZW50IH0gZnJvbSBcIi4vZm9jYWwtZ3JhZGllbnRcIjtcbmV4cG9ydCB7ICRMaW5lYXJHcmFkaWVudCwgTGluZWFyR3JhZGllbnQgfSBmcm9tIFwiLi9saW5lYXItZ3JhZGllbnRcIjtcbmV4cG9ydCB7ICRSYWRpYWxHcmFkaWVudCwgUmFkaWFsR3JhZGllbnQgfSBmcm9tIFwiLi9yYWRpYWwtZ3JhZGllbnRcIjtcbmV4cG9ydCB7ICRTb2xpZCwgU29saWQgfSBmcm9tIFwiLi9zb2xpZFwiO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint8_1 = __webpack_require__(22);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
exports.$SRgb8 = new document_1.DocumentType({
    properties: {
        r: { type: uint8_1.$Uint8 },
        g: { type: uint8_1.$Uint8 },
        b: { type: uint8_1.$Uint8 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcy1yZ2I4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0NBQTZDO0FBQzdDLGdEQUE0QztBQUM1QyxrREFBbUU7QUFNdEQsUUFBQSxNQUFNLEdBQTBCLElBQUksdUJBQVksQ0FBUTtJQUNuRSxVQUFVLEVBQUU7UUFDVixDQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUUsY0FBTSxFQUFDO1FBQ2pCLENBQUMsRUFBRSxFQUFDLElBQUksRUFBRSxjQUFNLEVBQUM7UUFDakIsQ0FBQyxFQUFFLEVBQUMsSUFBSSxFQUFFLGNBQU0sRUFBQztLQUNsQjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InMtcmdiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50OCB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQ4XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IFNSZ2IsIFVpbnQ4IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU1JnYjggZXh0ZW5kcyBTUmdiPFVpbnQ4PiB7XG59XG5cbmV4cG9ydCBjb25zdCAkU1JnYjg6IERvY3VtZW50SW9UeXBlPFNSZ2I4PiA9IG5ldyBEb2N1bWVudFR5cGU8U1JnYjg+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHI6IHt0eXBlOiAkVWludDh9LFxuICAgIGc6IHt0eXBlOiAkVWludDh9LFxuICAgIGI6IHt0eXBlOiAkVWludDh9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bevel_1 = __webpack_require__(274);
exports.$Bevel = bevel_1.$Bevel;
var blur_1 = __webpack_require__(275);
exports.$Blur = blur_1.$Blur;
var color_matrix_1 = __webpack_require__(276);
exports.$ColorMatrix = color_matrix_1.$ColorMatrix;
var convolution_1 = __webpack_require__(277);
exports.$Convolution = convolution_1.$Convolution;
var drop_shadow_1 = __webpack_require__(278);
exports.$DropShadow = drop_shadow_1.$DropShadow;
var glow_1 = __webpack_require__(279);
exports.$Glow = glow_1.$Glow;
var gradient_bevel_1 = __webpack_require__(280);
exports.$GradientBevel = gradient_bevel_1.$GradientBevel;
var gradient_glow_1 = __webpack_require__(281);
exports.$GradientGlow = gradient_glow_1.$GradientGlow;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlDQUF3QztBQUEvQix5QkFBQSxNQUFNLENBQUE7QUFDZiwrQkFBcUM7QUFBNUIsdUJBQUEsS0FBSyxDQUFBO0FBQ2QsK0NBQTJEO0FBQWxELHNDQUFBLFlBQVksQ0FBQTtBQUNyQiw2Q0FBMEQ7QUFBakQscUNBQUEsWUFBWSxDQUFBO0FBQ3JCLDZDQUF3RDtBQUEvQyxvQ0FBQSxXQUFXLENBQUE7QUFDcEIsK0JBQXFDO0FBQTVCLHVCQUFBLEtBQUssQ0FBQTtBQUNkLG1EQUFpRTtBQUF4RCwwQ0FBQSxjQUFjLENBQUE7QUFDdkIsaURBQThEO0FBQXJELHdDQUFBLGFBQWEsQ0FBQSIsImZpbGUiOiJmaWx0ZXJzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgJEJldmVsLCBCZXZlbCB9IGZyb20gXCIuL2JldmVsXCI7XG5leHBvcnQgeyAkQmx1ciwgQmx1ciB9IGZyb20gXCIuL2JsdXJcIjtcbmV4cG9ydCB7ICRDb2xvck1hdHJpeCwgQ29sb3JNYXRyaXggfSBmcm9tIFwiLi9jb2xvci1tYXRyaXhcIjtcbmV4cG9ydCB7ICRDb252b2x1dGlvbiwgQ29udm9sdXRpb24gfSBmcm9tIFwiLi9jb252b2x1dGlvblwiO1xuZXhwb3J0IHsgJERyb3BTaGFkb3csIERyb3BTaGFkb3cgfSBmcm9tIFwiLi9kcm9wLXNoYWRvd1wiO1xuZXhwb3J0IHsgJEdsb3csIEdsb3cgfSBmcm9tIFwiLi9nbG93XCI7XG5leHBvcnQgeyAkR3JhZGllbnRCZXZlbCwgR3JhZGllbnRCZXZlbCB9IGZyb20gXCIuL2dyYWRpZW50LWJldmVsXCI7XG5leHBvcnQgeyAkR3JhZGllbnRHbG93LCBHcmFkaWVudEdsb3cgfSBmcm9tIFwiLi9ncmFkaWVudC1nbG93XCI7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bevel_1 = __webpack_require__(282);
exports.$Bevel = bevel_1.$Bevel;
var miter_1 = __webpack_require__(283);
exports.$Miter = miter_1.$Miter;
var round_1 = __webpack_require__(284);
exports.$Round = round_1.$Round;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvam9pbi1zdHlsZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpQ0FBd0M7QUFBL0IseUJBQUEsTUFBTSxDQUFBO0FBQ2YsaUNBQXdDO0FBQS9CLHlCQUFBLE1BQU0sQ0FBQTtBQUNmLGlDQUF3QztBQUEvQix5QkFBQSxNQUFNLENBQUEiLCJmaWxlIjoiam9pbi1zdHlsZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyAkQmV2ZWwsIEJldmVsIH0gZnJvbSBcIi4vYmV2ZWxcIjtcbmV4cG9ydCB7ICRNaXRlciwgTWl0ZXIgfSBmcm9tIFwiLi9taXRlclwiO1xuZXhwb3J0IHsgJFJvdW5kLCBSb3VuZCB9IGZyb20gXCIuL3JvdW5kXCI7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bitmap_1 = __webpack_require__(285);
exports.$Bitmap = bitmap_1.$Bitmap;
var focal_gradient_1 = __webpack_require__(286);
exports.$FocalGradient = focal_gradient_1.$FocalGradient;
var linear_gradient_1 = __webpack_require__(288);
exports.$LinearGradient = linear_gradient_1.$LinearGradient;
var radial_gradient_1 = __webpack_require__(289);
exports.$RadialGradient = radial_gradient_1.$RadialGradient;
var solid_1 = __webpack_require__(290);
exports.$Solid = solid_1.$Solid;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtZmlsbC1zdHlsZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtQ0FBMkM7QUFBbEMsMkJBQUEsT0FBTyxDQUFBO0FBQ2hCLG1EQUFpRTtBQUF4RCwwQ0FBQSxjQUFjLENBQUE7QUFDdkIscURBQW9FO0FBQTNELDRDQUFBLGVBQWUsQ0FBQTtBQUN4QixxREFBb0U7QUFBM0QsNENBQUEsZUFBZSxDQUFBO0FBQ3hCLGlDQUF3QztBQUEvQix5QkFBQSxNQUFNLENBQUEiLCJmaWxlIjoibW9ycGgtZmlsbC1zdHlsZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyAkQml0bWFwLCBCaXRtYXAgfSBmcm9tIFwiLi9iaXRtYXBcIjtcbmV4cG9ydCB7ICRGb2NhbEdyYWRpZW50LCBGb2NhbEdyYWRpZW50IH0gZnJvbSBcIi4vZm9jYWwtZ3JhZGllbnRcIjtcbmV4cG9ydCB7ICRMaW5lYXJHcmFkaWVudCwgTGluZWFyR3JhZGllbnQgfSBmcm9tIFwiLi9saW5lYXItZ3JhZGllbnRcIjtcbmV4cG9ydCB7ICRSYWRpYWxHcmFkaWVudCwgUmFkaWFsR3JhZGllbnQgfSBmcm9tIFwiLi9yYWRpYWwtZ3JhZGllbnRcIjtcbmV4cG9ydCB7ICRTb2xpZCwgU29saWQgfSBmcm9tIFwiLi9zb2xpZFwiO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var morph_curved_edge_1 = __webpack_require__(291);
exports.$MorphCurvedEdge = morph_curved_edge_1.$MorphCurvedEdge;
var morph_straight_edge_1 = __webpack_require__(292);
exports.$MorphStraightEdge = morph_straight_edge_1.$MorphStraightEdge;
var morph_style_change_1 = __webpack_require__(293);
exports.$MorphStyleChange = morph_style_change_1.$MorphStyleChange;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtc2hhcGUtcmVjb3Jkcy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlEQUF3RTtBQUEvRCwrQ0FBQSxnQkFBZ0IsQ0FBQTtBQUN6Qiw2REFBOEU7QUFBckUsbURBQUEsa0JBQWtCLENBQUE7QUFDM0IsMkRBQTJFO0FBQWxFLGlEQUFBLGlCQUFpQixDQUFBIiwiZmlsZSI6Im1vcnBoLXNoYXBlLXJlY29yZHMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyAkTW9ycGhDdXJ2ZWRFZGdlLCBNb3JwaEN1cnZlZEVkZ2UgfSBmcm9tIFwiLi9tb3JwaC1jdXJ2ZWQtZWRnZVwiO1xuZXhwb3J0IHsgJE1vcnBoU3RyYWlnaHRFZGdlLCBNb3JwaFN0cmFpZ2h0RWRnZSB9IGZyb20gXCIuL21vcnBoLXN0cmFpZ2h0LWVkZ2VcIjtcbmV4cG9ydCB7ICRNb3JwaFN0eWxlQ2hhbmdlLCBNb3JwaFN0eWxlQ2hhbmdlIH0gZnJvbSBcIi4vbW9ycGgtc3R5bGUtY2hhbmdlXCI7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const cap_style_1 = __webpack_require__(49);
const join_style_1 = __webpack_require__(93);
const morph_fill_style_1 = __webpack_require__(62);
exports.$MorphLineStyle = new document_1.DocumentType({
    properties: {
        startWidth: { type: uint16_1.$Uint16 },
        endWidth: { type: uint16_1.$Uint16 },
        startCap: { type: cap_style_1.$CapStyle },
        endCap: { type: cap_style_1.$CapStyle },
        join: { type: join_style_1.$JoinStyle },
        noHScale: { type: boolean_1.$Boolean },
        noVScale: { type: boolean_1.$Boolean },
        noClose: { type: boolean_1.$Boolean },
        pixelHinting: { type: boolean_1.$Boolean },
        fill: { type: morph_fill_style_1.$MorphFillStyle },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtbGluZS1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUVuRSwyQ0FBa0Q7QUFDbEQsNkNBQXFEO0FBQ3JELHlEQUFxRTtBQWV4RCxRQUFBLGVBQWUsR0FBbUMsSUFBSSx1QkFBWSxDQUFpQjtJQUM5RixVQUFVLEVBQUU7UUFDVixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUMzQixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN6QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBQztRQUMzQixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBQztRQUN6QixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUN4QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN6QixZQUFZLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUM5QixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0NBQWUsRUFBQztLQUM5QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6Im1vcnBoLWxpbmUtc3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQm9vbGVhbiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2Jvb2xlYW5cIjtcbmltcG9ydCB7ICRVaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkQ2FwU3R5bGUsIENhcFN0eWxlIH0gZnJvbSBcIi4vY2FwLXN0eWxlXCI7XG5pbXBvcnQgeyAkSm9pblN0eWxlLCBKb2luU3R5bGUgfSBmcm9tIFwiLi9qb2luLXN0eWxlXCI7XG5pbXBvcnQgeyAkTW9ycGhGaWxsU3R5bGUsIE1vcnBoRmlsbFN0eWxlIH0gZnJvbSBcIi4vbW9ycGgtZmlsbC1zdHlsZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1vcnBoTGluZVN0eWxlIHtcbiAgc3RhcnRXaWR0aDogVWludDE2O1xuICBlbmRXaWR0aDogVWludDE2O1xuICBzdGFydENhcDogQ2FwU3R5bGU7XG4gIGVuZENhcDogQ2FwU3R5bGU7XG4gIGpvaW46IEpvaW5TdHlsZTtcbiAgbm9IU2NhbGU6IGJvb2xlYW47XG4gIG5vVlNjYWxlOiBib29sZWFuO1xuICBub0Nsb3NlOiBib29sZWFuO1xuICBwaXhlbEhpbnRpbmc6IGJvb2xlYW47XG4gIGZpbGw6IE1vcnBoRmlsbFN0eWxlO1xufVxuXG5leHBvcnQgY29uc3QgJE1vcnBoTGluZVN0eWxlOiBEb2N1bWVudElvVHlwZTxNb3JwaExpbmVTdHlsZT4gPSBuZXcgRG9jdW1lbnRUeXBlPE1vcnBoTGluZVN0eWxlPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBzdGFydFdpZHRoOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgZW5kV2lkdGg6IHt0eXBlOiAkVWludDE2fSxcbiAgICBzdGFydENhcDoge3R5cGU6ICRDYXBTdHlsZX0sXG4gICAgZW5kQ2FwOiB7dHlwZTogJENhcFN0eWxlfSxcbiAgICBqb2luOiB7dHlwZTogJEpvaW5TdHlsZX0sXG4gICAgbm9IU2NhbGU6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgbm9WU2NhbGU6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgbm9DbG9zZToge3R5cGU6ICRCb29sZWFufSxcbiAgICBwaXhlbEhpbnRpbmc6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgZmlsbDoge3R5cGU6ICRNb3JwaEZpbGxTdHlsZX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
const tagged_union_1 = __webpack_require__(15);
const joinStyles = __importStar(__webpack_require__(89));
exports.$JoinStyle = new tagged_union_1.TaggedUnionType({
    variants: [
        joinStyles.$Bevel,
        joinStyles.$Miter,
        joinStyles.$Round,
    ],
    tag: "type",
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvam9pbi1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSwwREFBMEQ7QUFDMUQsZ0VBQWtEO0FBT3JDLFFBQUEsVUFBVSxHQUErQixJQUFJLDhCQUFlLENBQVk7SUFDbkYsUUFBUSxFQUFFO1FBQ1IsVUFBVSxDQUFDLE1BQU07UUFDakIsVUFBVSxDQUFDLE1BQU07UUFDakIsVUFBVSxDQUFDLE1BQU07S0FDbEI7SUFDRCxHQUFHLEVBQUUsTUFBTTtDQUNaLENBQUMsQ0FBQyIsImZpbGUiOiJqb2luLXN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGFnZ2VkVW5pb25UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdGFnZ2VkLXVuaW9uXCI7XG5pbXBvcnQgKiBhcyBqb2luU3R5bGVzIGZyb20gXCIuL2pvaW4tc3R5bGVzL2luZGV4XCI7XG5cbmV4cG9ydCB0eXBlIEpvaW5TdHlsZSA9XG4gIGpvaW5TdHlsZXMuQmV2ZWxcbiAgfCBqb2luU3R5bGVzLk1pdGVyXG4gIHwgam9pblN0eWxlcy5Sb3VuZDtcblxuZXhwb3J0IGNvbnN0ICRKb2luU3R5bGU6IFRhZ2dlZFVuaW9uVHlwZTxKb2luU3R5bGU+ID0gbmV3IFRhZ2dlZFVuaW9uVHlwZTxKb2luU3R5bGU+KHtcbiAgdmFyaWFudHM6IFtcbiAgICBqb2luU3R5bGVzLiRCZXZlbCxcbiAgICBqb2luU3R5bGVzLiRNaXRlcixcbiAgICBqb2luU3R5bGVzLiRSb3VuZCxcbiAgXSxcbiAgdGFnOiBcInR5cGVcIixcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var curved_edge_1 = __webpack_require__(294);
exports.$CurvedEdge = curved_edge_1.$CurvedEdge;
var straight_edge_1 = __webpack_require__(295);
exports.$StraightEdge = straight_edge_1.$StraightEdge;
var style_change_1 = __webpack_require__(296);
exports.$StyleChange = style_change_1.$StyleChange;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3Jkcy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZDQUF3RDtBQUEvQyxvQ0FBQSxXQUFXLENBQUE7QUFDcEIsaURBQThEO0FBQXJELHdDQUFBLGFBQWEsQ0FBQTtBQUN0QiwrQ0FBMkQ7QUFBbEQsc0NBQUEsWUFBWSxDQUFBIiwiZmlsZSI6InNoYXBlLXJlY29yZHMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyAkQ3VydmVkRWRnZSwgQ3VydmVkRWRnZSB9IGZyb20gXCIuL2N1cnZlZC1lZGdlXCI7XG5leHBvcnQgeyAkU3RyYWlnaHRFZGdlLCBTdHJhaWdodEVkZ2UgfSBmcm9tIFwiLi9zdHJhaWdodC1lZGdlXCI7XG5leHBvcnQgeyAkU3R5bGVDaGFuZ2UsIFN0eWxlQ2hhbmdlIH0gZnJvbSBcIi4vc3R5bGUtY2hhbmdlXCI7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const cap_style_1 = __webpack_require__(49);
const fill_style_1 = __webpack_require__(63);
const join_style_1 = __webpack_require__(93);
exports.$LineStyle = new document_1.DocumentType({
    properties: {
        width: { type: uint16_1.$Uint16 },
        startCap: { type: cap_style_1.$CapStyle },
        endCap: { type: cap_style_1.$CapStyle },
        join: { type: join_style_1.$JoinStyle },
        noHScale: { type: boolean_1.$Boolean },
        noVScale: { type: boolean_1.$Boolean },
        noClose: { type: boolean_1.$Boolean },
        pixelHinting: { type: boolean_1.$Boolean },
        fill: { type: fill_style_1.$FillStyle },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbGluZS1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUVuRSwyQ0FBa0Q7QUFDbEQsNkNBQXFEO0FBQ3JELDZDQUFxRDtBQWN4QyxRQUFBLFVBQVUsR0FBOEIsSUFBSSx1QkFBWSxDQUFZO0lBQy9FLFVBQVUsRUFBRTtRQUNWLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3RCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxxQkFBUyxFQUFDO1FBQzNCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxxQkFBUyxFQUFDO1FBQ3pCLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFDO1FBQ3hCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzFCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzFCLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3pCLFlBQVksRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzlCLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFDO0tBQ3pCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoibGluZS1zdHlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRDYXBTdHlsZSwgQ2FwU3R5bGUgfSBmcm9tIFwiLi9jYXAtc3R5bGVcIjtcbmltcG9ydCB7ICRGaWxsU3R5bGUsIEZpbGxTdHlsZSB9IGZyb20gXCIuL2ZpbGwtc3R5bGVcIjtcbmltcG9ydCB7ICRKb2luU3R5bGUsIEpvaW5TdHlsZSB9IGZyb20gXCIuL2pvaW4tc3R5bGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBMaW5lU3R5bGUge1xuICB3aWR0aDogVWludDE2O1xuICBzdGFydENhcDogQ2FwU3R5bGU7XG4gIGVuZENhcDogQ2FwU3R5bGU7XG4gIGpvaW46IEpvaW5TdHlsZTtcbiAgbm9IU2NhbGU6IGJvb2xlYW47XG4gIG5vVlNjYWxlOiBib29sZWFuO1xuICBub0Nsb3NlOiBib29sZWFuO1xuICBwaXhlbEhpbnRpbmc6IGJvb2xlYW47XG4gIGZpbGw6IEZpbGxTdHlsZTtcbn1cblxuZXhwb3J0IGNvbnN0ICRMaW5lU3R5bGU6IERvY3VtZW50SW9UeXBlPExpbmVTdHlsZT4gPSBuZXcgRG9jdW1lbnRUeXBlPExpbmVTdHlsZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgd2lkdGg6IHt0eXBlOiAkVWludDE2fSxcbiAgICBzdGFydENhcDoge3R5cGU6ICRDYXBTdHlsZX0sXG4gICAgZW5kQ2FwOiB7dHlwZTogJENhcFN0eWxlfSxcbiAgICBqb2luOiB7dHlwZTogJEpvaW5TdHlsZX0sXG4gICAgbm9IU2NhbGU6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgbm9WU2NhbGU6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgbm9DbG9zZToge3R5cGU6ICRCb29sZWFufSxcbiAgICBwaXhlbEhpbnRpbmc6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgZmlsbDoge3R5cGU6ICRGaWxsU3R5bGV9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var csm_text_settings_1 = __webpack_require__(297);
exports.$CsmTextSettings = csm_text_settings_1.$CsmTextSettings;
var define_binary_data_1 = __webpack_require__(298);
exports.$DefineBinaryData = define_binary_data_1.$DefineBinaryData;
var define_bitmap_1 = __webpack_require__(299);
exports.$DefineBitmap = define_bitmap_1.$DefineBitmap;
var define_button_1 = __webpack_require__(301);
exports.$DefineButton = define_button_1.$DefineButton;
var define_cff_font_1 = __webpack_require__(306);
exports.$DefineCffFont = define_cff_font_1.$DefineCffFont;
var define_dynamic_text_1 = __webpack_require__(307);
exports.$DefineDynamicText = define_dynamic_text_1.$DefineDynamicText;
var define_font_1 = __webpack_require__(308);
exports.$DefineFont = define_font_1.$DefineFont;
var define_font_align_zones_1 = __webpack_require__(311);
exports.$DefineFontAlignZones = define_font_align_zones_1.$DefineFontAlignZones;
var define_font_info_1 = __webpack_require__(314);
exports.$DefineFontInfo = define_font_info_1.$DefineFontInfo;
var define_font_name_1 = __webpack_require__(315);
exports.$DefineFontName = define_font_name_1.$DefineFontName;
var define_jpeg_1 = __webpack_require__(316);
exports.$DefineJpeg = define_jpeg_1.$DefineJpeg;
var define_morph_shape_1 = __webpack_require__(317);
exports.$DefineMorphShape = define_morph_shape_1.$DefineMorphShape;
var define_partial_font_1 = __webpack_require__(320);
exports.$DefinePartialFont = define_partial_font_1.$DefinePartialFont;
var define_partial_jpeg_1 = __webpack_require__(321);
exports.$DefinePartialJpeg = define_partial_jpeg_1.$DefinePartialJpeg;
var define_scene_and_frame_label_data_1 = __webpack_require__(322);
exports.$DefineSceneAndFrameLabelData = define_scene_and_frame_label_data_1.$DefineSceneAndFrameLabelData;
var define_shape_1 = __webpack_require__(325);
exports.$DefineShape = define_shape_1.$DefineShape;
var define_sprite_1 = __webpack_require__(327);
exports.$DefineSprite = define_sprite_1.$DefineSprite;
var define_text_1 = __webpack_require__(329);
exports.$DefineText = define_text_1.$DefineText;
var do_action_1 = __webpack_require__(332);
exports.$DoAction = do_action_1.$DoAction;
var do_init_action_1 = __webpack_require__(333);
exports.$DoInitAction = do_init_action_1.$DoInitAction;
var enable_debugger_1 = __webpack_require__(334);
exports.$EnableDebugger = enable_debugger_1.$EnableDebugger;
var export_assets_1 = __webpack_require__(335);
exports.$ExportAssets = export_assets_1.$ExportAssets;
var file_attributes_1 = __webpack_require__(336);
exports.$FileAttributes = file_attributes_1.$FileAttributes;
var frame_label_1 = __webpack_require__(337);
exports.$FrameLabel = frame_label_1.$FrameLabel;
var import_assets_1 = __webpack_require__(338);
exports.$ImportAssets = import_assets_1.$ImportAssets;
var jpeg_tables_1 = __webpack_require__(339);
exports.$JpegTables = jpeg_tables_1.$JpegTables;
var metadata_1 = __webpack_require__(340);
exports.$Metadata = metadata_1.$Metadata;
var place_object_1 = __webpack_require__(341);
exports.$PlaceObject = place_object_1.$PlaceObject;
var remove_object_1 = __webpack_require__(344);
exports.$RemoveObject = remove_object_1.$RemoveObject;
var set_background_color_1 = __webpack_require__(345);
exports.$SetBackgroundColor = set_background_color_1.$SetBackgroundColor;
var show_frame_1 = __webpack_require__(346);
exports.$ShowFrame = show_frame_1.$ShowFrame;
var sound_stream_block_1 = __webpack_require__(347);
exports.$SoundStreamBlock = sound_stream_block_1.$SoundStreamBlock;
var sound_stream_head_1 = __webpack_require__(348);
exports.$SoundStreamHead = sound_stream_head_1.$SoundStreamHead;
var telemetry_1 = __webpack_require__(353);
exports.$Telemetry = telemetry_1.$Telemetry;
var unknown_1 = __webpack_require__(354);
exports.$Unknown = unknown_1.$Unknown;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlEQUF3RTtBQUEvRCwrQ0FBQSxnQkFBZ0IsQ0FBQTtBQUN6QiwyREFBMkU7QUFBbEUsaURBQUEsaUJBQWlCLENBQUE7QUFDMUIsaURBQThEO0FBQXJELHdDQUFBLGFBQWEsQ0FBQTtBQUN0QixpREFBOEQ7QUFBckQsd0NBQUEsYUFBYSxDQUFBO0FBQ3RCLHFEQUFrRTtBQUF6RCwyQ0FBQSxjQUFjLENBQUE7QUFDdkIsNkRBQThFO0FBQXJFLG1EQUFBLGtCQUFrQixDQUFBO0FBQzNCLDZDQUF3RDtBQUEvQyxvQ0FBQSxXQUFXLENBQUE7QUFDcEIscUVBQXdGO0FBQS9FLDBEQUFBLHFCQUFxQixDQUFBO0FBQzlCLHVEQUFxRTtBQUE1RCw2Q0FBQSxlQUFlLENBQUE7QUFDeEIsdURBQXFFO0FBQTVELDZDQUFBLGVBQWUsQ0FBQTtBQUN4Qiw2Q0FBd0Q7QUFBL0Msb0NBQUEsV0FBVyxDQUFBO0FBQ3BCLDJEQUEyRTtBQUFsRSxpREFBQSxpQkFBaUIsQ0FBQTtBQUMxQiw2REFBOEU7QUFBckUsbURBQUEsa0JBQWtCLENBQUE7QUFDM0IsNkRBQThFO0FBQXJFLG1EQUFBLGtCQUFrQixDQUFBO0FBQzNCLHlGQUFrSDtBQUF6Ryw0RUFBQSw2QkFBNkIsQ0FBQTtBQUN0QywrQ0FBMkQ7QUFBbEQsc0NBQUEsWUFBWSxDQUFBO0FBQ3JCLGlEQUE4RDtBQUFyRCx3Q0FBQSxhQUFhLENBQUE7QUFDdEIsNkNBQXdEO0FBQS9DLG9DQUFBLFdBQVcsQ0FBQTtBQUNwQix5Q0FBa0Q7QUFBekMsZ0NBQUEsU0FBUyxDQUFBO0FBQ2xCLG1EQUErRDtBQUF0RCx5Q0FBQSxhQUFhLENBQUE7QUFDdEIscURBQW9FO0FBQTNELDRDQUFBLGVBQWUsQ0FBQTtBQUN4QixpREFBOEQ7QUFBckQsd0NBQUEsYUFBYSxDQUFBO0FBQ3RCLHFEQUFvRTtBQUEzRCw0Q0FBQSxlQUFlLENBQUE7QUFDeEIsNkNBQXdEO0FBQS9DLG9DQUFBLFdBQVcsQ0FBQTtBQUNwQixpREFBOEQ7QUFBckQsd0NBQUEsYUFBYSxDQUFBO0FBQ3RCLDZDQUF3RDtBQUEvQyxvQ0FBQSxXQUFXLENBQUE7QUFDcEIsdUNBQWlEO0FBQXhDLCtCQUFBLFNBQVMsQ0FBQTtBQUNsQiwrQ0FBMkQ7QUFBbEQsc0NBQUEsWUFBWSxDQUFBO0FBQ3JCLGlEQUE4RDtBQUFyRCx3Q0FBQSxhQUFhLENBQUE7QUFDdEIsK0RBQWlGO0FBQXhFLHFEQUFBLG1CQUFtQixDQUFBO0FBQzVCLDJDQUFxRDtBQUE1QyxrQ0FBQSxVQUFVLENBQUE7QUFDbkIsMkRBQTJFO0FBQWxFLGlEQUFBLGlCQUFpQixDQUFBO0FBQzFCLHlEQUF3RTtBQUEvRCwrQ0FBQSxnQkFBZ0IsQ0FBQTtBQUN6Qix5Q0FBb0Q7QUFBM0MsaUNBQUEsVUFBVSxDQUFBO0FBQ25CLHFDQUE4QztBQUFyQyw2QkFBQSxRQUFRLENBQUEiLCJmaWxlIjoidGFncy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7ICRDc21UZXh0U2V0dGluZ3MsIENzbVRleHRTZXR0aW5ncyB9IGZyb20gXCIuL2NzbS10ZXh0LXNldHRpbmdzXCI7XG5leHBvcnQgeyAkRGVmaW5lQmluYXJ5RGF0YSwgRGVmaW5lQmluYXJ5RGF0YSB9IGZyb20gXCIuL2RlZmluZS1iaW5hcnktZGF0YVwiO1xuZXhwb3J0IHsgJERlZmluZUJpdG1hcCwgRGVmaW5lQml0bWFwIH0gZnJvbSBcIi4vZGVmaW5lLWJpdG1hcFwiO1xuZXhwb3J0IHsgJERlZmluZUJ1dHRvbiwgRGVmaW5lQnV0dG9uIH0gZnJvbSBcIi4vZGVmaW5lLWJ1dHRvblwiO1xuZXhwb3J0IHsgJERlZmluZUNmZkZvbnQsIERlZmluZUNmZkZvbnQgfSBmcm9tIFwiLi9kZWZpbmUtY2ZmLWZvbnRcIjtcbmV4cG9ydCB7ICREZWZpbmVEeW5hbWljVGV4dCwgRGVmaW5lRHluYW1pY1RleHQgfSBmcm9tIFwiLi9kZWZpbmUtZHluYW1pYy10ZXh0XCI7XG5leHBvcnQgeyAkRGVmaW5lRm9udCwgRGVmaW5lRm9udCB9IGZyb20gXCIuL2RlZmluZS1mb250XCI7XG5leHBvcnQgeyAkRGVmaW5lRm9udEFsaWduWm9uZXMsIERlZmluZUZvbnRBbGlnblpvbmVzIH0gZnJvbSBcIi4vZGVmaW5lLWZvbnQtYWxpZ24tem9uZXNcIjtcbmV4cG9ydCB7ICREZWZpbmVGb250SW5mbywgRGVmaW5lRm9udEluZm8gfSBmcm9tIFwiLi9kZWZpbmUtZm9udC1pbmZvXCI7XG5leHBvcnQgeyAkRGVmaW5lRm9udE5hbWUsIERlZmluZUZvbnROYW1lIH0gZnJvbSBcIi4vZGVmaW5lLWZvbnQtbmFtZVwiO1xuZXhwb3J0IHsgJERlZmluZUpwZWcsIERlZmluZUpwZWcgfSBmcm9tIFwiLi9kZWZpbmUtanBlZ1wiO1xuZXhwb3J0IHsgJERlZmluZU1vcnBoU2hhcGUsIERlZmluZU1vcnBoU2hhcGUgfSBmcm9tIFwiLi9kZWZpbmUtbW9ycGgtc2hhcGVcIjtcbmV4cG9ydCB7ICREZWZpbmVQYXJ0aWFsRm9udCwgRGVmaW5lUGFydGlhbEZvbnQgfSBmcm9tIFwiLi9kZWZpbmUtcGFydGlhbC1mb250XCI7XG5leHBvcnQgeyAkRGVmaW5lUGFydGlhbEpwZWcsIERlZmluZVBhcnRpYWxKcGVnIH0gZnJvbSBcIi4vZGVmaW5lLXBhcnRpYWwtanBlZ1wiO1xuZXhwb3J0IHsgJERlZmluZVNjZW5lQW5kRnJhbWVMYWJlbERhdGEsIERlZmluZVNjZW5lQW5kRnJhbWVMYWJlbERhdGEgfSBmcm9tIFwiLi9kZWZpbmUtc2NlbmUtYW5kLWZyYW1lLWxhYmVsLWRhdGFcIjtcbmV4cG9ydCB7ICREZWZpbmVTaGFwZSwgRGVmaW5lU2hhcGUgfSBmcm9tIFwiLi9kZWZpbmUtc2hhcGVcIjtcbmV4cG9ydCB7ICREZWZpbmVTcHJpdGUsIERlZmluZVNwcml0ZSB9IGZyb20gXCIuL2RlZmluZS1zcHJpdGVcIjtcbmV4cG9ydCB7ICREZWZpbmVUZXh0LCBEZWZpbmVUZXh0IH0gZnJvbSBcIi4vZGVmaW5lLXRleHRcIjtcbmV4cG9ydCB7ICREb0FjdGlvbiwgRG9BY3Rpb24gfSBmcm9tIFwiLi9kby1hY3Rpb25cIjtcbmV4cG9ydCB7ICREb0luaXRBY3Rpb24sIERvSW5pdEFjdGlvbiB9IGZyb20gXCIuL2RvLWluaXQtYWN0aW9uXCI7XG5leHBvcnQgeyAkRW5hYmxlRGVidWdnZXIsIEVuYWJsZURlYnVnZ2VyIH0gZnJvbSBcIi4vZW5hYmxlLWRlYnVnZ2VyXCI7XG5leHBvcnQgeyAkRXhwb3J0QXNzZXRzLCBFeHBvcnRBc3NldHMgfSBmcm9tIFwiLi9leHBvcnQtYXNzZXRzXCI7XG5leHBvcnQgeyAkRmlsZUF0dHJpYnV0ZXMsIEZpbGVBdHRyaWJ1dGVzIH0gZnJvbSBcIi4vZmlsZS1hdHRyaWJ1dGVzXCI7XG5leHBvcnQgeyAkRnJhbWVMYWJlbCwgRnJhbWVMYWJlbCB9IGZyb20gXCIuL2ZyYW1lLWxhYmVsXCI7XG5leHBvcnQgeyAkSW1wb3J0QXNzZXRzLCBJbXBvcnRBc3NldHMgfSBmcm9tIFwiLi9pbXBvcnQtYXNzZXRzXCI7XG5leHBvcnQgeyAkSnBlZ1RhYmxlcywgSnBlZ1RhYmxlcyB9IGZyb20gXCIuL2pwZWctdGFibGVzXCI7XG5leHBvcnQgeyAkTWV0YWRhdGEsIE1ldGFkYXRhIH0gZnJvbSBcIi4vbWV0YWRhdGFcIjtcbmV4cG9ydCB7ICRQbGFjZU9iamVjdCwgUGxhY2VPYmplY3QgfSBmcm9tIFwiLi9wbGFjZS1vYmplY3RcIjtcbmV4cG9ydCB7ICRSZW1vdmVPYmplY3QsIFJlbW92ZU9iamVjdCB9IGZyb20gXCIuL3JlbW92ZS1vYmplY3RcIjtcbmV4cG9ydCB7ICRTZXRCYWNrZ3JvdW5kQ29sb3IsIFNldEJhY2tncm91bmRDb2xvciB9IGZyb20gXCIuL3NldC1iYWNrZ3JvdW5kLWNvbG9yXCI7XG5leHBvcnQgeyAkU2hvd0ZyYW1lLCBTaG93RnJhbWUgfSBmcm9tIFwiLi9zaG93LWZyYW1lXCI7XG5leHBvcnQgeyAkU291bmRTdHJlYW1CbG9jaywgU291bmRTdHJlYW1CbG9jayB9IGZyb20gXCIuL3NvdW5kLXN0cmVhbS1ibG9ja1wiO1xuZXhwb3J0IHsgJFNvdW5kU3RyZWFtSGVhZCwgU291bmRTdHJlYW1IZWFkIH0gZnJvbSBcIi4vc291bmQtc3RyZWFtLWhlYWRcIjtcbmV4cG9ydCB7ICRUZWxlbWV0cnksIFRlbGVtZXRyeSB9IGZyb20gXCIuL3RlbGVtZXRyeVwiO1xuZXhwb3J0IHsgJFVua25vd24sIFVua25vd24gfSBmcm9tIFwiLi91bmtub3duXCI7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var GridFitting;
(function (GridFitting) {
    GridFitting[GridFitting["None"] = 0] = "None";
    GridFitting[GridFitting["Pixel"] = 1] = "Pixel";
    GridFitting[GridFitting["SubPixel"] = 2] = "SubPixel";
})(GridFitting = exports.GridFitting || (exports.GridFitting = {}));
exports.$GridFitting = new ts_enum_1.TsEnumType({
    enum: GridFitting,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9ncmlkLWZpdHRpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsZ0RBQWdEO0FBRWhELElBQVksV0FJWDtBQUpELFdBQVksV0FBVztJQUNyQiw2Q0FBSSxDQUFBO0lBQ0osK0NBQUssQ0FBQTtJQUNMLHFEQUFRLENBQUE7QUFDVixDQUFDLEVBSlcsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFJdEI7QUFFWSxRQUFBLFlBQVksR0FBNEIsSUFBSSxvQkFBVSxDQUFjO0lBQy9FLElBQUksRUFBRSxXQUFXO0lBQ2pCLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRleHQvZ3JpZC1maXR0aW5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gR3JpZEZpdHRpbmcge1xuICBOb25lLFxuICBQaXhlbCxcbiAgU3ViUGl4ZWwsXG59XG5cbmV4cG9ydCBjb25zdCAkR3JpZEZpdHRpbmc6IFRzRW51bVR5cGU8R3JpZEZpdHRpbmc+ID0gbmV3IFRzRW51bVR5cGU8R3JpZEZpdHRpbmc+KHtcbiAgZW51bTogR3JpZEZpdHRpbmcsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var TextRenderer;
(function (TextRenderer) {
    TextRenderer[TextRenderer["Normal"] = 0] = "Normal";
    TextRenderer[TextRenderer["Advanced"] = 1] = "Advanced";
})(TextRenderer = exports.TextRenderer || (exports.TextRenderer = {}));
exports.$TextRenderer = new ts_enum_1.TsEnumType({
    enum: TextRenderer,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC90ZXh0LXJlbmRlcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGdEQUFnRDtBQUVoRCxJQUFZLFlBR1g7QUFIRCxXQUFZLFlBQVk7SUFDdEIsbURBQU0sQ0FBQTtJQUNOLHVEQUFRLENBQUE7QUFDVixDQUFDLEVBSFcsWUFBWSxHQUFaLG9CQUFZLEtBQVosb0JBQVksUUFHdkI7QUFFWSxRQUFBLGFBQWEsR0FBNkIsSUFBSSxvQkFBVSxDQUFlO0lBQ2xGLElBQUksRUFBRSxZQUFZO0lBQ2xCLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRleHQvdGV4dC1yZW5kZXJlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIFRleHRSZW5kZXJlciB7XG4gIE5vcm1hbCxcbiAgQWR2YW5jZWQsXG59XG5cbmV4cG9ydCBjb25zdCAkVGV4dFJlbmRlcmVyOiBUc0VudW1UeXBlPFRleHRSZW5kZXJlcj4gPSBuZXcgVHNFbnVtVHlwZTxUZXh0UmVuZGVyZXI+KHtcbiAgZW51bTogVGV4dFJlbmRlcmVyLFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const sint16_1 = __webpack_require__(26);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const color_transform_1 = __webpack_require__(305);
const fixed8p8_1 = __webpack_require__(20);
// tslint:disable-next-line:max-line-length
exports.$ColorTransformWithAlpha = new document_1.DocumentType({
    properties: Object.assign({}, color_transform_1.$ColorTransform.properties, { alphaMult: { type: fixed8p8_1.Fixed8P8 }, alphaAdd: { type: sint16_1.$Sint16 } }),
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29sb3ItdHJhbnNmb3JtLXdpdGgtYWxwaGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUVuRSx1REFBb0U7QUFDcEUscURBQWtEO0FBT2xELDJDQUEyQztBQUM5QixRQUFBLHdCQUF3QixHQUE0QyxJQUFJLHVCQUFZLENBQTBCO0lBQ3pILFVBQVUsb0JBQ0wsaUNBQWUsQ0FBQyxVQUFVLElBQzdCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxtQkFBUSxFQUFDLEVBQzNCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDLEdBQzFCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiY29sb3ItdHJhbnNmb3JtLXdpdGgtYWxwaGEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkU2ludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvc2ludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IFNpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJENvbG9yVHJhbnNmb3JtLCBDb2xvclRyYW5zZm9ybSB9IGZyb20gXCIuL2NvbG9yLXRyYW5zZm9ybVwiO1xuaW1wb3J0IHsgRml4ZWQ4UDggfSBmcm9tIFwiLi9maXhlZC1wb2ludC9maXhlZDhwOFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbG9yVHJhbnNmb3JtV2l0aEFscGhhIGV4dGVuZHMgQ29sb3JUcmFuc2Zvcm0ge1xuICBhbHBoYU11bHQ6IEZpeGVkOFA4O1xuICBhbHBoYUFkZDogU2ludDE2O1xufVxuXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bWF4LWxpbmUtbGVuZ3RoXG5leHBvcnQgY29uc3QgJENvbG9yVHJhbnNmb3JtV2l0aEFscGhhOiBEb2N1bWVudElvVHlwZTxDb2xvclRyYW5zZm9ybVdpdGhBbHBoYT4gPSBuZXcgRG9jdW1lbnRUeXBlPENvbG9yVHJhbnNmb3JtV2l0aEFscGhhPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICAuLi4kQ29sb3JUcmFuc2Zvcm0ucHJvcGVydGllcyxcbiAgICBhbHBoYU11bHQ6IHt0eXBlOiBGaXhlZDhQOH0sXG4gICAgYWxwaGFBZGQ6IHt0eXBlOiAkU2ludDE2fSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
const tagged_union_1 = __webpack_require__(15);
const filters = __importStar(__webpack_require__(88));
exports.$Filter = new tagged_union_1.TaggedUnionType({
    variants: [
        filters.$Bevel,
        filters.$Blur,
        filters.$ColorMatrix,
        filters.$Convolution,
        filters.$DropShadow,
        filters.$Glow,
        filters.$GradientBevel,
        filters.$GradientGlow,
    ],
    tag: "filter",
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLDBEQUEwRDtBQUMxRCx5REFBMkM7QUFZOUIsUUFBQSxPQUFPLEdBQTRCLElBQUksOEJBQWUsQ0FBUztJQUMxRSxRQUFRLEVBQUU7UUFDUixPQUFPLENBQUMsTUFBTTtRQUNkLE9BQU8sQ0FBQyxLQUFLO1FBQ2IsT0FBTyxDQUFDLFlBQVk7UUFDcEIsT0FBTyxDQUFDLFlBQVk7UUFDcEIsT0FBTyxDQUFDLFdBQVc7UUFDbkIsT0FBTyxDQUFDLEtBQUs7UUFDYixPQUFPLENBQUMsY0FBYztRQUN0QixPQUFPLENBQUMsYUFBYTtLQUN0QjtJQUNELEdBQUcsRUFBRSxRQUFRO0NBQ2QsQ0FBQyxDQUFDIiwiZmlsZSI6ImZpbHRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhZ2dlZFVuaW9uVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RhZ2dlZC11bmlvblwiO1xuaW1wb3J0ICogYXMgZmlsdGVycyBmcm9tIFwiLi9maWx0ZXJzL2luZGV4XCI7XG5cbmV4cG9ydCB0eXBlIEZpbHRlciA9XG4gIGZpbHRlcnMuQmV2ZWxcbiAgfCBmaWx0ZXJzLkJsdXJcbiAgfCBmaWx0ZXJzLkNvbG9yTWF0cml4XG4gIHwgZmlsdGVycy5Db252b2x1dGlvblxuICB8IGZpbHRlcnMuRHJvcFNoYWRvd1xuICB8IGZpbHRlcnMuR2xvd1xuICB8IGZpbHRlcnMuR3JhZGllbnRCZXZlbFxuICB8IGZpbHRlcnMuR3JhZGllbnRHbG93O1xuXG5leHBvcnQgY29uc3QgJEZpbHRlcjogVGFnZ2VkVW5pb25UeXBlPEZpbHRlcj4gPSBuZXcgVGFnZ2VkVW5pb25UeXBlPEZpbHRlcj4oe1xuICB2YXJpYW50czogW1xuICAgIGZpbHRlcnMuJEJldmVsLFxuICAgIGZpbHRlcnMuJEJsdXIsXG4gICAgZmlsdGVycy4kQ29sb3JNYXRyaXgsXG4gICAgZmlsdGVycy4kQ29udm9sdXRpb24sXG4gICAgZmlsdGVycy4kRHJvcFNoYWRvdyxcbiAgICBmaWx0ZXJzLiRHbG93LFxuICAgIGZpbHRlcnMuJEdyYWRpZW50QmV2ZWwsXG4gICAgZmlsdGVycy4kR3JhZGllbnRHbG93LFxuICBdLFxuICB0YWc6IFwiZmlsdGVyXCIsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var TextAlignment;
(function (TextAlignment) {
    TextAlignment[TextAlignment["Left"] = 0] = "Left";
    TextAlignment[TextAlignment["Right"] = 1] = "Right";
    TextAlignment[TextAlignment["Center"] = 2] = "Center";
    TextAlignment[TextAlignment["Justify"] = 3] = "Justify";
})(TextAlignment = exports.TextAlignment || (exports.TextAlignment = {}));
exports.$TextAlignment = new ts_enum_1.TsEnumType({
    enum: TextAlignment,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC90ZXh0LWFsaWdubWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxhQUtYO0FBTEQsV0FBWSxhQUFhO0lBQ3ZCLGlEQUFJLENBQUE7SUFDSixtREFBSyxDQUFBO0lBQ0wscURBQU0sQ0FBQTtJQUNOLHVEQUFPLENBQUE7QUFDVCxDQUFDLEVBTFcsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFLeEI7QUFFWSxRQUFBLGNBQWMsR0FBOEIsSUFBSSxvQkFBVSxDQUFnQjtJQUNyRixJQUFJLEVBQUUsYUFBYTtJQUNuQixVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXh0L3RleHQtYWxpZ25tZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gVGV4dEFsaWdubWVudCB7XG4gIExlZnQsXG4gIFJpZ2h0LFxuICBDZW50ZXIsXG4gIEp1c3RpZnksXG59XG5cbmV4cG9ydCBjb25zdCAkVGV4dEFsaWdubWVudDogVHNFbnVtVHlwZTxUZXh0QWxpZ25tZW50PiA9IG5ldyBUc0VudW1UeXBlPFRleHRBbGlnbm1lbnQ+KHtcbiAgZW51bTogVGV4dEFsaWdubWVudCxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const shape_record_1 = __webpack_require__(103);
exports.$Glyph = new document_1.DocumentType({
    properties: {
        records: { type: new array_1.ArrayType({ itemType: shape_record_1.$ShapeRecord, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZ2x5cGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxpREFBMkQ7QUFNOUMsUUFBQSxNQUFNLEdBQTBCLElBQUksdUJBQVksQ0FBUTtJQUNuRSxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLDJCQUFZLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDOUU7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJnbHlwaC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEFycmF5VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2FycmF5XCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7ICRTaGFwZVJlY29yZCwgU2hhcGVSZWNvcmQgfSBmcm9tIFwiLi9zaGFwZS1yZWNvcmRcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHbHlwaCB7XG4gIHJlY29yZHM6IFNoYXBlUmVjb3JkW107XG59XG5cbmV4cG9ydCBjb25zdCAkR2x5cGg6IERvY3VtZW50SW9UeXBlPEdseXBoPiA9IG5ldyBEb2N1bWVudFR5cGU8R2x5cGg+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHJlY29yZHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJFNoYXBlUmVjb3JkLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const tagged_union_1 = __webpack_require__(15);
const shape_records_1 = __webpack_require__(94);
exports.$ShapeRecord = new tagged_union_1.TaggedUnionType({
    variants: [
        shape_records_1.$CurvedEdge,
        shape_records_1.$StraightEdge,
        shape_records_1.$StyleChange,
    ],
    tag: "type",
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3JkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMERBQTBEO0FBQzFELG1EQUEyRTtBQVU5RCxRQUFBLFlBQVksR0FBaUMsSUFBSSw4QkFBZSxDQUFjO0lBQ3pGLFFBQVEsRUFBRTtRQUNSLDJCQUFXO1FBQ1gsNkJBQWE7UUFDYiw0QkFBWTtLQUNiO0lBQ0QsR0FBRyxFQUFFLE1BQU07Q0FDWixDQUFDLENBQUMiLCJmaWxlIjoic2hhcGUtcmVjb3JkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGFnZ2VkVW5pb25UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdGFnZ2VkLXVuaW9uXCI7XG5pbXBvcnQgeyAkQ3VydmVkRWRnZSwgJFN0cmFpZ2h0RWRnZSwgJFN0eWxlQ2hhbmdlIH0gZnJvbSBcIi4vc2hhcGUtcmVjb3Jkc1wiO1xuaW1wb3J0IHsgQ3VydmVkRWRnZSB9IGZyb20gXCIuL3NoYXBlLXJlY29yZHMvY3VydmVkLWVkZ2VcIjtcbmltcG9ydCB7IFN0cmFpZ2h0RWRnZSB9IGZyb20gXCIuL3NoYXBlLXJlY29yZHMvc3RyYWlnaHQtZWRnZVwiO1xuaW1wb3J0IHsgU3R5bGVDaGFuZ2UgfSBmcm9tIFwiLi9zaGFwZS1yZWNvcmRzL3N0eWxlLWNoYW5nZVwiO1xuXG5leHBvcnQgdHlwZSBTaGFwZVJlY29yZCA9XG4gIEN1cnZlZEVkZ2VcbiAgfCBTdHJhaWdodEVkZ2VcbiAgfCBTdHlsZUNoYW5nZTtcblxuZXhwb3J0IGNvbnN0ICRTaGFwZVJlY29yZDogVGFnZ2VkVW5pb25UeXBlPFNoYXBlUmVjb3JkPiA9IG5ldyBUYWdnZWRVbmlvblR5cGU8U2hhcGVSZWNvcmQ+KHtcbiAgdmFyaWFudHM6IFtcbiAgICAkQ3VydmVkRWRnZSxcbiAgICAkU3RyYWlnaHRFZGdlLFxuICAgICRTdHlsZUNoYW5nZSxcbiAgXSxcbiAgdGFnOiBcInR5cGVcIixcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var CsmTableHint;
(function (CsmTableHint) {
    CsmTableHint[CsmTableHint["Thin"] = 0] = "Thin";
    CsmTableHint[CsmTableHint["Medium"] = 1] = "Medium";
    CsmTableHint[CsmTableHint["Thick"] = 2] = "Thick";
})(CsmTableHint = exports.CsmTableHint || (exports.CsmTableHint = {}));
exports.$CsmTableHint = new ts_enum_1.TsEnumType({
    enum: CsmTableHint,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9jc20tdGFibGUtaGludC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxZQUlYO0FBSkQsV0FBWSxZQUFZO0lBQ3RCLCtDQUFJLENBQUE7SUFDSixtREFBTSxDQUFBO0lBQ04saURBQUssQ0FBQTtBQUNQLENBQUMsRUFKVyxZQUFZLEdBQVosb0JBQVksS0FBWixvQkFBWSxRQUl2QjtBQUVZLFFBQUEsYUFBYSxHQUE2QixJQUFJLG9CQUFVLENBQWU7SUFDbEYsSUFBSSxFQUFFLFlBQVk7SUFDbEIsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGV4dC9jc20tdGFibGUtaGludC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIENzbVRhYmxlSGludCB7XG4gIFRoaW4sXG4gIE1lZGl1bSxcbiAgVGhpY2ssXG59XG5cbmV4cG9ydCBjb25zdCAkQ3NtVGFibGVIaW50OiBUc0VudW1UeXBlPENzbVRhYmxlSGludD4gPSBuZXcgVHNFbnVtVHlwZTxDc21UYWJsZUhpbnQ+KHtcbiAgZW51bTogQ3NtVGFibGVIaW50LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const ucs2_string_1 = __webpack_require__(10);
exports.$NamedId = new document_1.DocumentType({
    properties: {
        id: { type: uint16_1.$Uint16 },
        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbmFtZWQtaWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSx3REFBd0Q7QUFRM0MsUUFBQSxRQUFRLEdBQTRCLElBQUksdUJBQVksQ0FBVTtJQUN6RSxVQUFVLEVBQUU7UUFDVixFQUFFLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUNuQixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSw0QkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDeEQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJuYW1lZC1pZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgVWNzMlN0cmluZ1R5cGUgfSBmcm9tIFwia3J5by90eXBlcy91Y3MyLXN0cmluZ1wiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmFtZWRJZCB7XG4gIGlkOiBVaW50MTY7XG4gIG5hbWU6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0ICROYW1lZElkOiBEb2N1bWVudElvVHlwZTxOYW1lZElkPiA9IG5ldyBEb2N1bWVudFR5cGU8TmFtZWRJZD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgaWQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBuYW1lOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9


/***/ }),
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shape_decode_swf_morph_shape__ = __webpack_require__(360);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shape_decode_swf_shape__ = __webpack_require__(107);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__character__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__display_object_container__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__frame__ = __webpack_require__(77);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__morph_shape__ = __webpack_require__(361);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__shape__ = __webpack_require__(362);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__simple_button__ = __webpack_require__(76);









class AbstractSprite extends __WEBPACK_IMPORTED_MODULE_4__display_object_container__["a" /* DisplayObjectContainer */] {
    constructor(dictionary, character) {
        super();
        this.dictionary = dictionary;
        this.character = character;
    }
    // processTags(tags: SwfTag[], backward: boolean): void {
    //   if (backward) {
    //     throw new Incident("NotImplemented", "Sprite#processTags(backwards = true)");
    //   }
    //   for (const tag of tags) {
    //     switch (tag.type) {
    //       case SwfTagType.PlaceObject:
    //         this.processPlaceObjectTag(tag);
    //         break;
    //       default:
    //         break;
    //     }
    //   }
    // }
    nextFrame(isMainLoop, runScripts) {
        console.warn("NotImplemented");
    }
    visit(visitor) {
        return visitor.visitSprite(this);
    }
    applyTag(tag) {
        switch (tag.type) {
            case __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__["TagType"].DefineButton:
                this.dictionary.setCharacter(tag.buttonId, Object(__WEBPACK_IMPORTED_MODULE_3__character__["d" /* createButtonCharacter */])(tag));
                break;
            case __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__["TagType"].DefineMorphShape:
                this.dictionary.setCharacter(tag.id, Object(__WEBPACK_IMPORTED_MODULE_1__shape_decode_swf_morph_shape__["a" /* decodeSwfMorphShape */])(tag));
                break;
            case __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__["TagType"].DefineBitmap:
                this.dictionary.setCharacter(tag.id, Object(__WEBPACK_IMPORTED_MODULE_3__character__["c" /* createBitmapCharacter */])(tag));
                break;
            case __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__["TagType"].DefineShape:
                this.dictionary.setCharacter(tag.id, Object(__WEBPACK_IMPORTED_MODULE_2__shape_decode_swf_shape__["a" /* decodeSwfShape */])(tag));
                break;
            case __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__["TagType"].DefineSprite:
                this.dictionary.setCharacter(tag.id, Object(__WEBPACK_IMPORTED_MODULE_3__character__["e" /* createSpriteCharacter */])(tag));
                break;
            case __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__["TagType"].PlaceObject:
                if (tag.characterId !== undefined) {
                    const character = this.dictionary.getCharacterById(tag.characterId);
                    if (character === undefined) {
                        console.warn(`Unknown character id: ${tag.characterId}`);
                        break;
                    }
                    this.placeObject(tag, character);
                }
                else {
                    if (tag.depth === undefined) {
                        console.warn("Expected depth to be defined");
                        break;
                    }
                    const displayObject = this.getChildAtDepth(tag.depth);
                    if (displayObject === undefined) {
                        console.warn(`DisplayObject not found at depth: ${tag.depth}`);
                        break;
                    }
                    if (tag.matrix !== undefined) {
                        displayObject.matrix = tag.matrix;
                    }
                    displayObject.ratio = tag.ratio === undefined ? 0 : tag.ratio / (1 << 16);
                    break;
                }
                break;
            case __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__["TagType"].SetBackgroundColor:
            case __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__["TagType"].FileAttributes:
            case __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__["TagType"].Metadata:
            case __WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__["TagType"].ShowFrame:
                break;
            default:
                console.warn(`Unsupported tag type (${__WEBPACK_IMPORTED_MODULE_0_swf_tree_tags_type__["TagType"][tag.type]}) for the following tag:`);
                console.warn(tag);
                break;
        }
    }
    placeObject(tag, character) {
        if (this.getChildAtDepth(tag.depth) !== undefined) {
            return;
        }
        switch (character.type) {
            case __WEBPACK_IMPORTED_MODULE_3__character__["b" /* CharacterType */].Button:
                const button = __WEBPACK_IMPORTED_MODULE_8__simple_button__["b" /* SimpleButton */].fromCharacter(character, this.dictionary);
                button.matrix = tag.matrix;
                this.addChildAtDepth(button, tag.depth);
                break;
            case __WEBPACK_IMPORTED_MODULE_3__character__["b" /* CharacterType */].MorphShape:
                const morphShape = new __WEBPACK_IMPORTED_MODULE_6__morph_shape__["a" /* MorphShape */](character);
                morphShape.ratio = tag.ratio === undefined ? 0 : tag.ratio / (1 << 16);
                morphShape.matrix = tag.matrix;
                this.addChildAtDepth(morphShape, tag.depth);
                break;
            case __WEBPACK_IMPORTED_MODULE_3__character__["b" /* CharacterType */].Shape:
                const shape = new __WEBPACK_IMPORTED_MODULE_7__shape__["a" /* Shape */](character);
                shape.matrix = tag.matrix;
                this.addChildAtDepth(shape, tag.depth);
                break;
            case __WEBPACK_IMPORTED_MODULE_3__character__["b" /* CharacterType */].Sprite:
                const sprite = ChildSprite.fromCharacter(character, this.dictionary);
                sprite.matrix = tag.matrix;
                this.addChildAtDepth(sprite, tag.depth);
                break;
            default:
                console.warn(`Unknown character type: ${character.type}`);
                break;
        }
    }
}
/* unused harmony export AbstractSprite */

/**
 * Corresponds to the tags at the root of SWF file
 */
class RootSprite extends AbstractSprite {
    constructor(movie) {
        const dictionary = new __WEBPACK_IMPORTED_MODULE_3__character__["a" /* CharacterDictionary */]();
        super(dictionary, { root: true });
        this.frameCount = movie.header.frameCount;
        this.frames = [];
        this.currentFrameIndex = -1;
        for (const frame of Object(__WEBPACK_IMPORTED_MODULE_5__frame__["b" /* collectFrames */])(movie.tags)) {
            this.addFrame(frame);
        }
    }
    nextFrame(isMainLoop, runScripts) {
        this.currentFrameIndex++;
        if (this.currentFrameIndex >= this.frameCount) {
            this.currentFrameIndex = 0;
        }
        if (this.currentFrameIndex >= this.frames.length) {
            return;
        }
        const frame = this.frames[this.currentFrameIndex];
        for (const tag of frame.tags) {
            this.applyTag(tag);
        }
        for (const child of this.children) {
            child.nextFrame(isMainLoop, runScripts);
        }
    }
    addFrame(frame) {
        this.frames.push(frame);
    }
}
/* harmony export (immutable) */ __webpack_exports__["b"] = RootSprite;

/**
 * Instance of a sprite defined with the defineSprite tag
 */
class ChildSprite extends AbstractSprite {
    constructor(dictionary, frames, character) {
        super(dictionary, { root: false, id: character.id });
        this.frameCount = frames.length;
        this.frames = frames;
        this.currentFrameIndex = -1;
    }
    static fromCharacter(character, dictionary) {
        const frames = [...Object(__WEBPACK_IMPORTED_MODULE_5__frame__["b" /* collectFrames */])(character.tags)];
        return new ChildSprite(dictionary, frames, character);
    }
    nextFrame(isMainLoop, runScripts) {
        this.currentFrameIndex++;
        if (this.currentFrameIndex >= this.frameCount) {
            this.currentFrameIndex = 0;
        }
        if (this.currentFrameIndex >= this.frames.length) {
            return;
        }
        const frame = this.frames[this.currentFrameIndex];
        for (const tag of frame.tags) {
            this.applyTag(tag);
        }
    }
}
/* unused harmony export ChildSprite */

/**
 * Instance of a sprite created dynamically (example: Action Script or button wrapper)
 */
class DynamicSprite extends AbstractSprite {
    constructor(dictionary, frames) {
        super(dictionary, { root: false });
        this.frameCount = frames.length;
        this.frames = frames;
        this.currentFrameIndex = -1;
    }
    nextFrame(isMainLoop, runScripts) {
        this.currentFrameIndex++;
        if (this.currentFrameIndex >= this.frameCount) {
            this.currentFrameIndex = 0;
        }
        if (this.currentFrameIndex >= this.frames.length) {
            return;
        }
        const frame = this.frames[this.currentFrameIndex];
        for (const tag of frame.tags) {
            this.applyTag(tag);
        }
    }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = DynamicSprite;



/***/ }),
/* 107 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = decodeSwfShape;
/* harmony export (immutable) */ __webpack_exports__["b"] = normalizeStraightSRgba;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incident__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incident___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_incident__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_swf_tree__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_swf_tree___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_swf_tree__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__display_character__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fill_style__ = __webpack_require__(108);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__line_style__ = __webpack_require__(109);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__path__ = __webpack_require__(110);






/**
 * Converts a space-optimized shape definition to a list of simpler paths for easier processing/rendering
 */
function decodeSwfShape(tag) {
    const converter = new SwfShapeDecoder(tag.shape.fillStyles, tag.shape.lineStyles);
    for (const record of tag.shape.records) {
        switch (record.type) {
            case __WEBPACK_IMPORTED_MODULE_1_swf_tree__["ShapeRecordType"].CurvedEdge:
                converter.applyCurvedEdge(record);
                break;
            case __WEBPACK_IMPORTED_MODULE_1_swf_tree__["ShapeRecordType"].StraightEdge:
                converter.applyStraightEdge(record);
                break;
            case __WEBPACK_IMPORTED_MODULE_1_swf_tree__["ShapeRecordType"].StyleChange:
                converter.applyStyleChange(record);
                break;
            default:
                throw new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("UnreachableCode");
        }
    }
    const shape = converter.getShape();
    return { id: tag.id, type: __WEBPACK_IMPORTED_MODULE_2__display_character__["b" /* CharacterType */].Shape, paths: shape.paths };
}
var SegmentType;
(function (SegmentType) {
    SegmentType[SegmentType["Straight"] = 0] = "Straight";
    SegmentType[SegmentType["Curved"] = 1] = "Curved";
})(SegmentType || (SegmentType = {}));
function createStraightSegment(startX, startY, endX, endY) {
    return { type: SegmentType.Straight, startX, startY, endX, endY };
}
function createCurvedSegment(startX, startY, controlX, controlY, endX, endY) {
    return { type: SegmentType.Curved, startX, startY, controlX, controlY, endX, endY };
}
// TODO: Move out of this module
function normalizeStraightSRgba(color) {
    return {
        r: color.r / 255,
        g: color.g / 255,
        b: color.b / 255,
        a: color.a / 255,
    };
}
function decodeGradient(swfGradient) {
    const colors = [];
    for (const colorStop of swfGradient.colors) {
        colors.push({ ratio: colorStop.ratio / 0xff, color: normalizeStraightSRgba(colorStop.color) });
    }
    return Object.assign({}, swfGradient, { colors });
}
/**
 * Normalize the fill style from the SWF format to the renderer format
 */
function decodeFillStyle(swfStyle) {
    switch (swfStyle.type) {
        case __WEBPACK_IMPORTED_MODULE_1_swf_tree__["FillStyleType"].Bitmap:
            return Object.assign({}, swfStyle, { type: __WEBPACK_IMPORTED_MODULE_3__fill_style__["a" /* FillStyleType */].Bitmap });
        case __WEBPACK_IMPORTED_MODULE_1_swf_tree__["FillStyleType"].FocalGradient:
            return {
                type: __WEBPACK_IMPORTED_MODULE_3__fill_style__["a" /* FillStyleType */].FocalGradient,
                matrix: swfStyle.matrix,
                gradient: decodeGradient(swfStyle.gradient),
                focalPoint: swfStyle.focalPoint.valueOf(),
            };
        case __WEBPACK_IMPORTED_MODULE_1_swf_tree__["FillStyleType"].LinearGradient:
            return { type: __WEBPACK_IMPORTED_MODULE_3__fill_style__["a" /* FillStyleType */].LinearGradient, matrix: swfStyle.matrix, gradient: decodeGradient(swfStyle.gradient) };
        case __WEBPACK_IMPORTED_MODULE_1_swf_tree__["FillStyleType"].RadialGradient:
            return {
                type: __WEBPACK_IMPORTED_MODULE_3__fill_style__["a" /* FillStyleType */].FocalGradient,
                matrix: swfStyle.matrix,
                gradient: decodeGradient(swfStyle.gradient),
                focalPoint: 0,
            };
        case __WEBPACK_IMPORTED_MODULE_1_swf_tree__["FillStyleType"].Solid:
            return { type: __WEBPACK_IMPORTED_MODULE_3__fill_style__["a" /* FillStyleType */].Solid, color: normalizeStraightSRgba(swfStyle.color) };
        default:
            throw new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("UnknownFillStyle", { style: swfStyle });
    }
}
/**
 * Normalize the line style from the SWF format to the renderer format
 */
function decodeLineStyle(old) {
    // TODO...
    return { type: __WEBPACK_IMPORTED_MODULE_4__line_style__["a" /* LineStyleType */].Solid, color: { r: 0, g: 0, b: 0, a: 1 }, width: 50 };
}
/**
 * Create a new layer with the supplied styles.
 */
function createStyleLayer(swfFillStyles, swfLineStyles) {
    const fills = [];
    for (const swfFillStyle of swfFillStyles) {
        fills.push({
            style: decodeFillStyle(swfFillStyle),
            segments: [],
        });
    }
    const lines = [];
    for (const swfLineStyle of swfLineStyles) {
        lines.push({
            style: decodeLineStyle(swfLineStyle),
            segments: [],
        });
    }
    return { fills, lines };
}
/**
 * Extract a sequence of continuous segments, removes them from openSet.
 */
function extractContinuous(openSet) {
    const first = openSet.shift();
    if (first === undefined) {
        throw new Error("FailedAssertion: openSet should not be empty");
    }
    const result = [first];
    let startX = first.startX;
    let startY = first.startY;
    let endX = first.endX;
    let endY = first.endY;
    for (let i = 0, len = openSet.length; i < len; i++) {
        const current = openSet[i];
        if (current.startX === endX && current.startY === endY) {
            openSet.splice(i, 1);
            i--;
            len--;
            endX = current.endX;
            endY = current.endY;
            result.push(current);
        }
        else if (current.endX === startX && current.endY === startY) {
            openSet.splice(i, 1);
            i--;
            len--;
            startX = current.startX;
            startY = current.startY;
            result.unshift(current);
        }
    }
    // TODO: Repeat until reaching fixed point? Currently there are some cases when a continuous path is not collected
    // if its segments are disordered.
    return result;
}
/**
 * Converts a list of segments (in their definition order) to a list of path commands.
 */
function segmentsToCommands(segments) {
    const openSet = [...segments];
    const result = [];
    while (openSet.length > 0) {
        const sequence = extractContinuous(openSet);
        result.push({
            type: __WEBPACK_IMPORTED_MODULE_5__path__["a" /* CommandType */].MoveTo,
            x: sequence[0].startX,
            y: sequence[0].startY,
        });
        for (const segment of sequence) {
            switch (segment.type) {
                case SegmentType.Straight:
                    result.push({
                        type: __WEBPACK_IMPORTED_MODULE_5__path__["a" /* CommandType */].LineTo,
                        endX: segment.endX,
                        endY: segment.endY,
                    });
                    break;
                case SegmentType.Curved:
                    result.push({
                        type: __WEBPACK_IMPORTED_MODULE_5__path__["a" /* CommandType */].CurveTo,
                        controlX: segment.controlX,
                        controlY: segment.controlY,
                        endX: segment.endX,
                        endY: segment.endY,
                    });
                    break;
                default:
                    throw new Error("Failed assertion: unexpected segment type");
            }
        }
    }
    return result;
}
/**
 * Converts a layer to a list of paths with style
 */
function layerToPaths(layer) {
    const paths = [];
    for (const fillSet of layer.fills) {
        const commands = segmentsToCommands(fillSet.segments);
        if (commands.length > 0) {
            paths.push({ commands, fill: fillSet.style });
        }
    }
    for (const lineSet of layer.lines) {
        const commands = segmentsToCommands(lineSet.segments);
        if (commands.length > 0) {
            paths.push({ commands, line: lineSet.style });
        }
    }
    return paths;
}
/**
 * Maintains the state of the decoder while it consumes shape records.
 */
class SwfShapeDecoder {
    constructor(swfFillStyles, swfLineStyles) {
        this.x = 0;
        this.y = 0;
        this.layers = [];
        this.leftFill = undefined;
        this.rightFill = undefined;
        this.lineFill = undefined;
        this.setNewStyles(swfFillStyles, swfLineStyles);
    }
    applyStyleChange(record) {
        // TODO: Support only updating one of fillStyle or lineStyle
        if (record.fillStyles !== undefined || record.lineStyles !== undefined) {
            // TODO: Reuse old style instead of overriding if missing
            const newFills = record.fillStyles !== undefined ? record.fillStyles : [];
            const newLines = record.lineStyles !== undefined ? record.lineStyles : [];
            this.setNewStyles(newFills, newLines);
        }
        if (record.leftFill !== undefined) {
            this.setLeftFillById(record.leftFill);
        }
        if (record.rightFill !== undefined) {
            this.setRightFillById(record.rightFill);
        }
        if (record.moveTo !== undefined) {
            this.x = record.moveTo.x;
            this.y = record.moveTo.y;
        }
    }
    applyStraightEdge(record) {
        const endX = this.x + record.delta.x;
        const endY = this.y + record.delta.y;
        if (this.leftFill !== undefined) {
            this.leftFill.segments.push(createStraightSegment(this.x, this.y, endX, endY));
        }
        if (this.rightFill !== undefined) {
            this.rightFill.segments.push(createStraightSegment(endX, endY, this.x, this.y));
        }
        if (this.lineFill !== undefined) {
            this.lineFill.segments.push(createStraightSegment(this.x, this.y, endX, endY));
        }
        this.x = endX;
        this.y = endY;
    }
    applyCurvedEdge(record) {
        const controlX = this.x + record.controlDelta.x;
        const controlY = this.y + record.controlDelta.y;
        const endX = controlX + record.anchorDelta.x;
        const endY = controlY + record.anchorDelta.y;
        if (this.leftFill !== undefined) {
            this.leftFill.segments.push(createCurvedSegment(this.x, this.y, controlX, controlY, endX, endY));
        }
        if (this.rightFill !== undefined) {
            this.rightFill.segments.push(createCurvedSegment(endX, endY, controlX, controlY, this.x, this.y));
        }
        if (this.lineFill !== undefined) {
            this.lineFill.segments.push(createCurvedSegment(this.x, this.y, controlX, controlY, endX, endY));
        }
        this.x = endX;
        this.y = endY;
    }
    getShape() {
        const paths = [];
        for (const layer of this.layers) {
            for (const path of layerToPaths(layer)) {
                paths.push(path);
            }
        }
        return { paths };
    }
    setNewStyles(swfFillStyles, swfLineStyles) {
        const layer = createStyleLayer(swfFillStyles, swfLineStyles);
        this.layers.push(layer);
        this.leftFill = undefined;
        this.rightFill = undefined;
        this.lineFill = undefined;
    }
    setLeftFillById(fillId) {
        if (fillId === 0) {
            this.leftFill = undefined;
            return;
        }
        const currentLayer = this.layers[this.layers.length - 1];
        const fillIndex = fillId - 1;
        this.leftFill = currentLayer.fills[fillIndex];
        if (this.leftFill === undefined) {
            throw new Error("Invalid fill ID");
        }
    }
    setRightFillById(fillId) {
        if (fillId === 0) {
            this.rightFill = undefined;
            return;
        }
        const currentLayer = this.layers[this.layers.length - 1];
        const fillIndex = fillId - 1;
        this.rightFill = currentLayer.fills[fillIndex];
        if (this.rightFill === undefined) {
            throw new Error("Invalid fill ID");
        }
    }
    setLineFillById(fillId) {
        if (fillId === 0) {
            this.lineFill = undefined;
            return;
        }
        const currentLayer = this.layers[this.layers.length - 1];
        const fillIndex = fillId - 1;
        this.lineFill = currentLayer.lines[fillIndex];
        if (this.lineFill === undefined) {
            throw new Error("Invalid fill ID");
        }
    }
}


/***/ }),
/* 108 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FillStyleType; });
var FillStyleType;
(function (FillStyleType) {
    FillStyleType[FillStyleType["Bitmap"] = 0] = "Bitmap";
    FillStyleType[FillStyleType["FocalGradient"] = 1] = "FocalGradient";
    FillStyleType[FillStyleType["LinearGradient"] = 2] = "LinearGradient";
    FillStyleType[FillStyleType["Solid"] = 3] = "Solid";
})(FillStyleType || (FillStyleType = {}));


/***/ }),
/* 109 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LineStyleType; });
var LineStyleType;
(function (LineStyleType) {
    LineStyleType[LineStyleType["Solid"] = 0] = "Solid";
})(LineStyleType || (LineStyleType = {}));


/***/ }),
/* 110 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CommandType; });
var CommandType;
(function (CommandType) {
    CommandType[CommandType["LineTo"] = 0] = "LineTo";
    CommandType[CommandType["CurveTo"] = 1] = "CurveTo";
    CommandType[CommandType["MoveTo"] = 2] = "MoveTo";
})(CommandType || (CommandType = {}));


/***/ }),
/* 111 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MorphFillStyleType; });
var MorphFillStyleType;
(function (MorphFillStyleType) {
    MorphFillStyleType[MorphFillStyleType["Solid"] = 0] = "Solid";
})(MorphFillStyleType || (MorphFillStyleType = {}));


/***/ }),
/* 112 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MorphLineStyleType; });
var MorphLineStyleType;
(function (MorphLineStyleType) {
    MorphLineStyleType[MorphLineStyleType["Solid"] = 0] = "Solid";
})(MorphLineStyleType || (MorphLineStyleType = {}));


/***/ }),
/* 113 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MorphCommandType; });
var MorphCommandType;
(function (MorphCommandType) {
    MorphCommandType[MorphCommandType["LineTo"] = 0] = "LineTo";
    MorphCommandType[MorphCommandType["CurveTo"] = 1] = "CurveTo";
    MorphCommandType[MorphCommandType["MoveTo"] = 2] = "MoveTo";
})(MorphCommandType || (MorphCommandType = {}));


/***/ }),
/* 114 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incident__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incident___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_incident__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__display_object__ = __webpack_require__(45);


class DisplayObjectContainer extends __WEBPACK_IMPORTED_MODULE_1__display_object__["a" /* DisplayObject */] {
    constructor() {
        super();
        this.children = [];
    }
    addChild(child) {
        this.addChildAtIndex(child, this.children.length);
    }
    addChildAtIndex(child, index) {
        index = index | 0; // Integer cast
        if (index < 0 || index > this.children.length) {
            throw new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("angeError", "Errors.ParamRangeError");
        }
        this.children.splice(index, 0, child);
    }
    addChildAtDepth(child, depth) {
        depth = depth | 0; // Integer cast
        let index = this.children.length;
        for (let i = this.children.length - 1; i >= 0; i--) {
            const current = this.children[i];
            if (current.depth !== undefined) {
                if (current.depth < depth) {
                    index = i + 1;
                    break;
                }
                index = i;
            }
        }
        child.depth = depth;
        this.children.splice(index, 0, child);
    }
    getChildAtDepth(depth) {
        for (const child of this.children) {
            if (child.depth !== undefined && child.depth > depth) {
                break;
            }
            if (child.depth === depth) {
                return child;
            }
        }
        return undefined;
    }
    nextFrame(isMainLoop, runScripts) {
        for (const child of this.children) {
            child.nextFrame(isMainLoop, runScripts);
        }
    }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = DisplayObjectContainer;



/***/ }),
/* 115 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var processNextTick = __webpack_require__(51).nextTick;
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = __webpack_require__(115);
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = __webpack_require__(50).EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(117);
/*</replacement>*/

/*<replacement>*/

var Buffer = __webpack_require__(52).Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = __webpack_require__(46);
util.inherits = __webpack_require__(38);
/*</replacement>*/

/*<replacement>*/
var debugUtil = __webpack_require__(372);
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = __webpack_require__(373);
var destroyImpl = __webpack_require__(118);
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || __webpack_require__(32);

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = __webpack_require__(119).StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __webpack_require__(32);

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = __webpack_require__(119).StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27), __webpack_require__(31)))

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(50).EventEmitter;


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*<replacement>*/

var processNextTick = __webpack_require__(51).nextTick;
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      processNextTick(emitErrorNT, this, err);
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      processNextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Buffer = __webpack_require__(52).Buffer;

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return -1;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// UTF-8 replacement characters ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd'.repeat(p);
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd'.repeat(p + 1);
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd'.repeat(p + 2);
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character for each buffered byte of a (partial)
// character needs to be added to the output.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd'.repeat(this.lastTotal - this.lastNeed);
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.



module.exports = Transform;

var Duplex = __webpack_require__(32);

/*<replacement>*/
var util = __webpack_require__(46);
util.inherits = __webpack_require__(38);
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
// original notice:

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function compare(a, b) {
  if (a === b) {
    return 0;
  }

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }

  if (x < y) {
    return -1;
  }
  if (y < x) {
    return 1;
  }
  return 0;
}
function isBuffer(b) {
  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
    return global.Buffer.isBuffer(b);
  }
  return !!(b != null && b._isBuffer);
}

// based on node assert, original notice:

// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

var util = __webpack_require__(122);
var hasOwn = Object.prototype.hasOwnProperty;
var pSlice = Array.prototype.slice;
var functionsHaveNames = (function () {
  return function foo() {}.name === 'foo';
}());
function pToString (obj) {
  return Object.prototype.toString.call(obj);
}
function isView(arrbuf) {
  if (isBuffer(arrbuf)) {
    return false;
  }
  if (typeof global.ArrayBuffer !== 'function') {
    return false;
  }
  if (typeof ArrayBuffer.isView === 'function') {
    return ArrayBuffer.isView(arrbuf);
  }
  if (!arrbuf) {
    return false;
  }
  if (arrbuf instanceof DataView) {
    return true;
  }
  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
    return true;
  }
  return false;
}
// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

var regex = /\s*function\s+([^\(\s]*)\s*/;
// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
function getName(func) {
  if (!util.isFunction(func)) {
    return;
  }
  if (functionsHaveNames) {
    return func.name;
  }
  var str = func.toString();
  var match = str.match(regex);
  return match && match[1];
}
assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  } else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = getName(stackStartFunction);
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function truncate(s, n) {
  if (typeof s === 'string') {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}
function inspect(something) {
  if (functionsHaveNames || !util.isFunction(something)) {
    return util.inspect(something);
  }
  var rawname = getName(something);
  var name = rawname ? ': ' + rawname : '';
  return '[Function' +  name + ']';
}
function getMessage(self) {
  return truncate(inspect(self.actual), 128) + ' ' +
         self.operator + ' ' +
         truncate(inspect(self.expected), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
  }
};

function _deepEqual(actual, expected, strict, memos) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;
  } else if (isBuffer(actual) && isBuffer(expected)) {
    return compare(actual, expected) === 0;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if ((actual === null || typeof actual !== 'object') &&
             (expected === null || typeof expected !== 'object')) {
    return strict ? actual === expected : actual == expected;

  // If both values are instances of typed arrays, wrap their underlying
  // ArrayBuffers in a Buffer each to increase performance
  // This optimization requires the arrays to have the same type as checked by
  // Object.prototype.toString (aka pToString). Never perform binary
  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
  // bit patterns are not identical.
  } else if (isView(actual) && isView(expected) &&
             pToString(actual) === pToString(expected) &&
             !(actual instanceof Float32Array ||
               actual instanceof Float64Array)) {
    return compare(new Uint8Array(actual.buffer),
                   new Uint8Array(expected.buffer)) === 0;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else if (isBuffer(actual) !== isBuffer(expected)) {
    return false;
  } else {
    memos = memos || {actual: [], expected: []};

    var actualIndex = memos.actual.indexOf(actual);
    if (actualIndex !== -1) {
      if (actualIndex === memos.expected.indexOf(expected)) {
        return true;
      }
    }

    memos.actual.push(actual);
    memos.expected.push(expected);

    return objEquiv(actual, expected, strict, memos);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b, strict, actualVisitedObjects) {
  if (a === null || a === undefined || b === null || b === undefined)
    return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b))
    return a === b;
  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
    return false;
  var aIsArgs = isArguments(a);
  var bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b, strict);
  }
  var ka = objectKeys(a);
  var kb = objectKeys(b);
  var key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length !== kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] !== kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
      return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
  }
}


// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  }

  try {
    if (actual instanceof expected) {
      return true;
    }
  } catch (e) {
    // Ignore.  The instanceof check doesn't work for arrow functions.
  }

  if (Error.isPrototypeOf(expected)) {
    return false;
  }

  return expected.call({}, actual) === true;
}

function _tryBlock(block) {
  var error;
  try {
    block();
  } catch (e) {
    error = e;
  }
  return error;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (typeof block !== 'function') {
    throw new TypeError('"block" argument must be a function');
  }

  if (typeof expected === 'string') {
    message = expected;
    expected = null;
  }

  actual = _tryBlock(block);

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  var userProvidedMessage = typeof message === 'string';
  var isUnwantedException = !shouldThrow && util.isError(actual);
  var isUnexpectedException = !shouldThrow && actual && !expected;

  if ((isUnwantedException &&
      userProvidedMessage &&
      expectedException(actual, expected)) ||
      isUnexpectedException) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws(true, block, error, message);
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {
  _throws(false, block, error, message);
};

assert.ifError = function(err) { if (err) throw err; };

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)))

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = __webpack_require__(384);

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = __webpack_require__(385);

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27), __webpack_require__(31)))

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Note: adler32 takes 12% for level 0 and 2% for level 6.
// It isn't worth it to make additional optimizations as in original.
// Small size is preferable.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function adler32(adler, buf, len, pos) {
  var s1 = (adler & 0xffff) |0,
      s2 = ((adler >>> 16) & 0xffff) |0,
      n = 0;

  while (len !== 0) {
    // Set limit ~ twice less than 5552, to keep
    // s2 in 31-bits, because we force signed ints.
    // in other case %= will fail.
    n = len > 2000 ? 2000 : len;
    len -= n;

    do {
      s1 = (s1 + buf[pos++]) |0;
      s2 = (s2 + s1) |0;
    } while (--n);

    s1 %= 65521;
    s2 %= 65521;
  }

  return (s1 | (s2 << 16)) |0;
}


module.exports = adler32;


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Note: we can't get significant speed boost here.
// So write code to minimize size - no pregenerated tables
// and array tools dependencies.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// Use ordinary array, since untyped makes no boost here
function makeTable() {
  var c, table = [];

  for (var n = 0; n < 256; n++) {
    c = n;
    for (var k = 0; k < 8; k++) {
      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
    }
    table[n] = c;
  }

  return table;
}

// Create table on load. Just 255 signed longs. Not a problem.
var crcTable = makeTable();


function crc32(crc, buf, len, pos) {
  var t = crcTable,
      end = pos + len;

  crc ^= -1;

  for (var i = pos; i < end; i++) {
    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];
  }

  return (crc ^ (-1)); // >>> 0;
}


module.exports = crc32;


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const swf_tree_1 = __webpack_require__(12);
const avm1_1 = __webpack_require__(71);
const basic_data_types_1 = __webpack_require__(28);
function parseBlendMode(byteStream) {
    switch (byteStream.readUint8()) {
        case 0:
        case 1:
            return swf_tree_1.BlendMode.Normal;
        case 2:
            return swf_tree_1.BlendMode.Layer;
        case 3:
            return swf_tree_1.BlendMode.Multiply;
        case 4:
            return swf_tree_1.BlendMode.Screen;
        case 5:
            return swf_tree_1.BlendMode.Lighten;
        case 6:
            return swf_tree_1.BlendMode.Darken;
        case 7:
            return swf_tree_1.BlendMode.Difference;
        case 8:
            return swf_tree_1.BlendMode.Add;
        case 9:
            return swf_tree_1.BlendMode.Subtract;
        case 10:
            return swf_tree_1.BlendMode.Invert;
        case 11:
            return swf_tree_1.BlendMode.Alpha;
        case 12:
            return swf_tree_1.BlendMode.Erase;
        case 13:
            return swf_tree_1.BlendMode.Overlay;
        case 14:
            return swf_tree_1.BlendMode.Hardlight;
        default:
            throw new incident_1.Incident("UnreachableCode");
    }
}
exports.parseBlendMode = parseBlendMode;
function parseClipActionsString(byteStream, extendedEvents) {
    byteStream.skip(2);
    // We skip the 4 bytes of the list of all events
    byteStream.skip(4);
    const result = [];
    while (true) {
        const savedPos = byteStream.bytePos;
        const peek = extendedEvents ? byteStream.readUint32BE() : byteStream.readUint32BE();
        if (peek === 0) {
            break;
        }
        else {
            byteStream.bytePos = savedPos;
        }
        result.push(parseClipActions(byteStream, extendedEvents));
    }
    return result;
}
exports.parseClipActionsString = parseClipActionsString;
function parseClipEventFlags(byteStream, extendedEvents) {
    const flags = byteStream.readUint16BE();
    const keyUp = (flags & (1 << 15)) !== 0;
    const keyDown = (flags & (1 << 14)) !== 0;
    const mouseUp = (flags & (1 << 13)) !== 0;
    const mouseDown = (flags & (1 << 12)) !== 0;
    const mouseMove = (flags & (1 << 11)) !== 0;
    const unload = (flags & (1 << 10)) !== 0;
    const enterFrame = (flags & (1 << 9)) !== 0;
    const load = (flags & (1 << 8)) !== 0;
    const dragOver = (flags & (1 << 7)) !== 0;
    const rollOut = (flags & (1 << 6)) !== 0;
    const rollOver = (flags & (1 << 5)) !== 0;
    const releaseOutside = (flags & (1 << 4)) !== 0;
    const release = (flags & (1 << 3)) !== 0;
    const press = (flags & (1 << 2)) !== 0;
    const initialize = (flags & (1 << 1)) !== 0;
    const data = (flags & (1 << 0)) !== 0;
    let construct = false;
    let keyPress = false;
    let dragOut = false;
    if (extendedEvents) {
        const flags = byteStream.readUint16BE();
        construct = (flags & (1 << 10)) !== 0;
        keyPress = (flags & (1 << 9)) !== 0;
        dragOut = (flags & (1 << 8)) !== 0;
    }
    return {
        keyUp,
        keyDown,
        mouseUp,
        mouseDown,
        mouseMove,
        unload,
        enterFrame,
        load,
        dragOver,
        rollOut,
        rollOver,
        releaseOutside,
        release,
        press,
        initialize,
        data,
        construct,
        keyPress,
        dragOut,
    };
}
exports.parseClipEventFlags = parseClipEventFlags;
function parseClipActions(byteStream, extendedEvents) {
    const events = parseClipEventFlags(byteStream, extendedEvents);
    let actionsSize = byteStream.readUint32LE();
    let keyCode = undefined;
    if (events.keyPress) {
        keyCode = byteStream.readUint8();
        actionsSize = Math.max(actionsSize - 1, 0);
    }
    const actions = avm1_1.parseActionsBlock(byteStream.take(actionsSize));
    return { events, keyCode, actions };
}
exports.parseClipActions = parseClipActions;
function parseFilterList(byteStream) {
    const filterCount = byteStream.readUint8();
    const result = [];
    for (let i = 0; i < filterCount; i++) {
        result.push(parseFilter(byteStream));
    }
    return result;
}
exports.parseFilterList = parseFilterList;
function parseFilter(byteStream) {
    switch (byteStream.readUint8()) {
        case 0:
            return parseDropShadowFilter(byteStream);
        case 1:
            return parseBlurFilter(byteStream);
        case 2:
            return parseGlowFilter(byteStream);
        case 3:
            return parseBevelFilter(byteStream);
        case 4:
            return parseGradientGlowFilter(byteStream);
        case 5:
            return parseConvolutionFilter(byteStream);
        case 6:
            return parseColorMatrixFilter(byteStream);
        case 7:
            return parseGradientBevelFilter(byteStream);
        default:
            throw new incident_1.Incident("UnreachableCode");
    }
}
exports.parseFilter = parseFilter;
function parseBevelFilter(byteStream) {
    const shadowColor = basic_data_types_1.parseStraightSRgba8(byteStream);
    const highlightColor = basic_data_types_1.parseStraightSRgba8(byteStream);
    const blurX = byteStream.readFixed16P16LE();
    const blurY = byteStream.readFixed16P16LE();
    const angle = byteStream.readFixed16P16LE();
    const distance = byteStream.readFixed16P16LE();
    const strength = byteStream.readFixed8P8LE();
    const flags = byteStream.readUint8();
    const inner = (flags & (1 << 7)) !== 0;
    const knockout = (flags & (1 << 6)) !== 0;
    const compositeSource = (flags & (1 << 5)) !== 0;
    const onTop = (flags & (1 << 4)) !== 0;
    const passes = (flags & ((1 << 4) - 1));
    return {
        filter: swf_tree_1.FilterType.Bevel,
        shadowColor,
        highlightColor,
        blurX,
        blurY,
        angle,
        distance,
        strength,
        inner,
        knockout,
        compositeSource,
        onTop,
        passes,
    };
}
exports.parseBevelFilter = parseBevelFilter;
function parseBlurFilter(byteStream) {
    const blurX = byteStream.readFixed16P16LE();
    const blurY = byteStream.readFixed16P16LE();
    const flags = byteStream.readUint8();
    const passes = ((flags & ((1 << 8) - 1)) >>> 3);
    return {
        filter: swf_tree_1.FilterType.Blur,
        blurX,
        blurY,
        passes,
    };
}
exports.parseBlurFilter = parseBlurFilter;
function parseColorMatrixFilter(byteStream) {
    const matrix = [];
    for (let i = 0; i < 20; i++) {
        matrix.push(byteStream.readFloat32BE());
    }
    return {
        filter: swf_tree_1.FilterType.ColorMatrix,
        matrix,
    };
}
exports.parseColorMatrixFilter = parseColorMatrixFilter;
function parseConvolutionFilter(byteStream) {
    const matrixWidth = byteStream.readUint8();
    const matrixHeight = byteStream.readUint8();
    const divisor = byteStream.readFloat32BE();
    const bias = byteStream.readFloat32BE();
    const matrix = [];
    for (let i = 0; i < matrixWidth * matrixHeight; i++) {
        matrix.push(byteStream.readFloat32BE());
    }
    const defaultColor = basic_data_types_1.parseStraightSRgba8(byteStream);
    const flags = byteStream.readUint8();
    const clamp = (flags & (1 << 1)) !== 0;
    const preserveAlpha = (flags & (1 << 0)) !== 0;
    return {
        filter: swf_tree_1.FilterType.Convolution,
        matrixWidth,
        matrixHeight,
        divisor,
        bias,
        matrix,
        defaultColor,
        clamp,
        preserveAlpha,
    };
}
exports.parseConvolutionFilter = parseConvolutionFilter;
function parseDropShadowFilter(byteStream) {
    const color = basic_data_types_1.parseStraightSRgba8(byteStream);
    const blurX = byteStream.readFixed16P16LE();
    const blurY = byteStream.readFixed16P16LE();
    const angle = byteStream.readFixed16P16LE();
    const distance = byteStream.readFixed16P16LE();
    const strength = byteStream.readFixed8P8LE();
    const flags = byteStream.readUint8();
    const inner = (flags & (1 << 7)) !== 0;
    const knockout = (flags & (1 << 6)) !== 0;
    const compositeSource = (flags & (1 << 5)) !== 0;
    const passes = flags & ((1 << 5) - 1);
    return {
        filter: swf_tree_1.FilterType.DropShadow,
        color,
        blurX,
        blurY,
        angle,
        distance,
        strength,
        inner,
        knockout,
        compositeSource,
        passes,
    };
}
exports.parseDropShadowFilter = parseDropShadowFilter;
function parseGlowFilter(byteStream) {
    const color = basic_data_types_1.parseStraightSRgba8(byteStream);
    const blurX = byteStream.readFixed16P16LE();
    const blurY = byteStream.readFixed16P16LE();
    const strength = byteStream.readFixed8P8LE();
    const flags = byteStream.readUint8();
    const inner = (flags & (1 << 7)) !== 0;
    const knockout = (flags & (1 << 6)) !== 0;
    const compositeSource = (flags & (1 << 5)) !== 0;
    const passes = flags & ((1 << 5) - 1);
    return {
        filter: swf_tree_1.FilterType.Glow,
        color,
        blurX,
        blurY,
        strength,
        inner,
        knockout,
        compositeSource,
        passes,
    };
}
exports.parseGlowFilter = parseGlowFilter;
function parseGradientBevelFilter(byteStream) {
    const colorCount = byteStream.readUint8();
    const gradient = [];
    for (let i = 0; i < colorCount; i++) {
        gradient.push({ ratio: 0, color: basic_data_types_1.parseStraightSRgba8(byteStream) });
    }
    for (let i = 0; i < colorCount; i++) {
        gradient[i].ratio = byteStream.readUint8();
    }
    const blurX = byteStream.readFixed16P16LE();
    const blurY = byteStream.readFixed16P16LE();
    const angle = byteStream.readFixed16P16LE();
    const distance = byteStream.readFixed16P16LE();
    const strength = byteStream.readFixed8P8LE();
    const flags = byteStream.readUint8();
    const inner = (flags & (1 << 7)) !== 0;
    const knockout = (flags & (1 << 6)) !== 0;
    const compositeSource = (flags & (1 << 5)) !== 0;
    const onTop = (flags & (1 << 4)) !== 0;
    const passes = (flags & ((1 << 4) - 1));
    return {
        filter: swf_tree_1.FilterType.GradientBevel,
        gradient,
        blurX,
        blurY,
        angle,
        distance,
        strength,
        inner,
        knockout,
        compositeSource,
        onTop,
        passes,
    };
}
exports.parseGradientBevelFilter = parseGradientBevelFilter;
function parseGradientGlowFilter(byteStream) {
    const colorCount = byteStream.readUint8();
    const gradient = [];
    for (let i = 0; i < colorCount; i++) {
        gradient.push({ ratio: 0, color: basic_data_types_1.parseStraightSRgba8(byteStream) });
    }
    for (let i = 0; i < colorCount; i++) {
        gradient[i].ratio = byteStream.readUint8();
    }
    const blurX = byteStream.readFixed16P16LE();
    const blurY = byteStream.readFixed16P16LE();
    const angle = byteStream.readFixed16P16LE();
    const distance = byteStream.readFixed16P16LE();
    const strength = byteStream.readFixed8P8LE();
    const flags = byteStream.readUint8();
    const inner = (flags & (1 << 7)) !== 0;
    const knockout = (flags & (1 << 6)) !== 0;
    const compositeSource = (flags & (1 << 5)) !== 0;
    const onTop = (flags & (1 << 4)) !== 0;
    const passes = (flags & ((1 << 4) - 1));
    return {
        filter: swf_tree_1.FilterType.GradientGlow,
        gradient,
        blurX,
        blurY,
        angle,
        distance,
        strength,
        inner,
        knockout,
        compositeSource,
        onTop,
        passes,
    };
}
exports.parseGradientGlowFilter = parseGradientGlowFilter;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const swf_tree_1 = __webpack_require__(12);
const basic_data_types_1 = __webpack_require__(28);
function parseColorStop(byteStream, withAlpha) {
    const ratio = byteStream.readUint8();
    let color;
    if (withAlpha) {
        color = basic_data_types_1.parseStraightSRgba8(byteStream);
    }
    else {
        color = Object.assign({}, basic_data_types_1.parseSRgb8(byteStream), { a: 255 });
    }
    return { ratio, color };
}
exports.parseColorStop = parseColorStop;
function parseGradient(byteStream, withAlpha) {
    const flags = byteStream.readUint8();
    // The spec says that spreadId and colorSpaceId should be ignored for shapeVersion < Shape4
    // and color count should be capped at 8. We're ignoring it for the moment.
    const spreadId = ((flags & ((1 << 8) - 1)) >>> 6);
    const colorSpaceId = ((flags & ((1 << 6) - 1)) >>> 4);
    const colorCount = (flags & ((1 << 4) - 1));
    let spread;
    switch (spreadId) {
        case 0:
            spread = swf_tree_1.GradientSpread.Pad;
            break;
        case 1:
            spread = swf_tree_1.GradientSpread.Reflect;
            break;
        case 2:
            spread = swf_tree_1.GradientSpread.Repeat;
            break;
        default:
            throw new Error("Unexpected gradient spread");
    }
    let colorSpace;
    switch (colorSpaceId) {
        case 0:
            colorSpace = swf_tree_1.ColorSpace.SRgb;
            break;
        case 1:
            colorSpace = swf_tree_1.ColorSpace.LinearRgb;
            break;
        default:
            throw new Error("Unexpected gradient spread");
    }
    const colors = [];
    for (let i = 0; i < colorCount; i++) {
        colors.push(parseColorStop(byteStream, withAlpha));
    }
    return {
        spread,
        colorSpace,
        colors,
    };
}
exports.parseGradient = parseGradient;
function parseMorphColorStop(byteStream, withAlpha) {
    const { ratio: startRatio, color: startColor } = parseColorStop(byteStream, withAlpha);
    const { ratio: endRatio, color: endColor } = parseColorStop(byteStream, withAlpha);
    return { startRatio, startColor, endRatio, endColor };
}
exports.parseMorphColorStop = parseMorphColorStop;
function parseMorphGradient(byteStream, withAlpha) {
    const flags = byteStream.readUint8();
    const spreadId = ((flags & ((1 << 8) - 1)) >>> 6);
    const colorSpaceId = ((flags & ((1 << 6) - 1)) >>> 4);
    const colorCount = (flags & ((1 << 4) - 1));
    let spread;
    switch (spreadId) {
        case 0:
            spread = swf_tree_1.GradientSpread.Pad;
            break;
        case 1:
            spread = swf_tree_1.GradientSpread.Reflect;
            break;
        case 2:
            spread = swf_tree_1.GradientSpread.Repeat;
            break;
        default:
            throw new Error("Unexpected gradient spread");
    }
    let colorSpace;
    switch (colorSpaceId) {
        case 0:
            colorSpace = swf_tree_1.ColorSpace.SRgb;
            break;
        case 1:
            colorSpace = swf_tree_1.ColorSpace.LinearRgb;
            break;
        default:
            throw new Error("Unexpected gradient spread");
    }
    const colors = [];
    for (let i = 0; i < colorCount; i++) {
        colors.push(parseMorphColorStop(byteStream, withAlpha));
    }
    return {
        spread,
        colorSpace,
        colors,
    };
}
exports.parseMorphGradient = parseMorphGradient;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 127 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export createClock */
function createSystemClock() {
    const handles = new WeakMap();
    return Object.freeze({
        getTime: Date.now,
        setTimeout(timeout, handler) {
            const nativeHandle = setTimeout(handler, timeout);
            const handle = new Object(Symbol());
            handles.set(handle, nativeHandle);
            return handle;
        },
        clearTimeout(handle) {
            const nativeHandle = handles.get(handle);
            if (nativeHandle !== undefined) {
                // TODO: Better type with cross-platform  support
                clearTimeout(nativeHandle);
            }
        },
    });
}
const SYSTEM_CLOCK = createSystemClock();
/* harmony export (immutable) */ __webpack_exports__["b"] = SYSTEM_CLOCK;

/**
 * Represents a node in a clock tree.
 */
class ChildClock {
    /**
     * @param parent Parent clock
     * @param initialEpoch Time in the parent clock corresponding to the zero time in the child clock.
     *                     Default is parent.getTime().
     */
    constructor(parent, initialEpoch) {
        this.parent = parent;
        this.epoch = initialEpoch !== undefined ? initialEpoch : parent.getTime();
        this.pausedAt = undefined;
        this.tasks = new Map();
    }
    isPaused() {
        return this.pausedAt !== undefined;
    }
    /**
     * @return Time in milliseconds
     */
    getTime() {
        return this.pausedAt !== undefined ? this.pausedAt : this.parent.getTime() - this.epoch;
    }
    pause() {
        if (this.pausedAt === undefined) {
            this.pausedAt = this.parent.getTime();
            for (const task of this.tasks.values()) {
                if (task.handle !== undefined) {
                    this.parent.clearTimeout(task.handle);
                    task.handle = undefined;
                }
            }
        }
    }
    resume() {
        if (this.pausedAt !== undefined) {
            this.epoch += this.parent.getTime() - this.pausedAt;
            this.pausedAt = undefined;
            for (const task of this.tasks.values()) {
                task.handle = this.parent.setTimeout(task.targetTime - this.getTime(), task.handler);
            }
        }
    }
    setTimeout(timeout, handler) {
        const outerHandle = new Object(Symbol());
        const task = {
            targetTime: this.getTime() + timeout,
            handler: () => {
                this.tasks.delete(outerHandle);
                handler();
            },
            handle: undefined,
        };
        this.tasks.set(outerHandle, task);
        if (this.pausedAt === undefined) {
            task.handle = this.parent.setTimeout(timeout, task.handler);
        }
        return outerHandle;
    }
    clearTimeout(handle) {
        const task = this.tasks.get(handle);
        if (task !== undefined) {
            if (task.handle !== undefined) {
                this.parent.clearTimeout(task.handle);
            }
            this.tasks.delete(handle);
        }
    }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = ChildClock;

/**
 * Create a new root clock based off real time.
 * Its epoch defaults to `now`. You can provide you own epoch relative to the UNIX epoch (expressed in milliseconds).
 *
 * @param {number} epoch
 * @return {Clock}
 */
function createClock(epoch = SYSTEM_CLOCK.getTime()) {
    return new ChildClock(SYSTEM_CLOCK, epoch);
}


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(129);


/***/ }),
/* 129 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incident__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incident___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_incident__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__browser_polyfills__ = __webpack_require__(132);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__browser_domu_player__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__browser_x_swf_elements__ = __webpack_require__(403);




Object(__WEBPACK_IMPORTED_MODULE_1__browser_polyfills__["a" /* all */])();
try {
    customElements.define("x-swf", __WEBPACK_IMPORTED_MODULE_3__browser_x_swf_elements__["a" /* XSwfElement */]);
}
catch (err) {
    console.error(err);
}
const containers = document.getElementsByClassName("domu-player");
const containerCount = containers.length;
for (let i = 0; i < containerCount; i++) {
    const container = containers[i];
    if (!(container instanceof HTMLElement)) {
        throw new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("Expected container to be an `HTMLElement`");
    }
    const src = container.dataset.src;
    if (src === undefined) {
        throw new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("Missing `data-src` attribute");
    }
    const domuPlayer = Object(__WEBPACK_IMPORTED_MODULE_2__browser_domu_player__["a" /* createDomuPlayer */])({ container });
    domuPlayer.setMovieUrl(src);
}


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
}
Object.defineProperty(exports, "__esModule", { value: true });
const object_inspect_1 = __importDefault(__webpack_require__(55));
/**
 * Define a hidden property.
 *
 * @param obj
 * @param propertyName
 * @param value
 */
function defineHiddenProperty(obj, propertyName, value) {
    Object.defineProperty(obj, propertyName, {
        value,
        configurable: true,
        enumerable: false,
        writable: true,
    });
}
/**
 * Define a normal property.
 *
 * @param obj
 * @param propertyName
 * @param value
 */
function defineSimpleProperty(obj, propertyName, value) {
    Object.defineProperty(obj, propertyName, {
        value,
        configurable: true,
        enumerable: true,
        writable: true,
    });
}
/**
 * A symbol used internally to prevent the capture of the call stack.
 */
const noStackSymbol = {};
// Incident factory, allows a fine control over the getter / setters
// and will eventually allow to have TypeError, SyntaxError, etc. as super classes.
function createIncident(_super) {
    Object.setPrototypeOf(Incident, _super);
    function __() {
        this.constructor = Incident;
    }
    __.prototype = _super.prototype;
    Incident.prototype = new __();
    function Incident(...args) {
        if (!(this instanceof Incident)) {
            switch (args.length) {
                case 0:
                    return new Incident(noStackSymbol);
                case 1:
                    if (args[0] instanceof Error) {
                        const err = args[0];
                        let converted;
                        const name = err.name;
                        const message = typeof err._message === "function"
                            ? err._message
                            : err.message;
                        if (err.cause instanceof Error) {
                            if (typeof err.data === "object") {
                                converted = new Incident(noStackSymbol, err.cause, name, err.data, message);
                            }
                            else {
                                converted = new Incident(noStackSymbol, err.cause, name, message);
                            }
                        }
                        else {
                            if (typeof err.data === "object") {
                                converted = new Incident(noStackSymbol, name, err.data, message);
                            }
                            else {
                                converted = new Incident(noStackSymbol, name, message);
                            }
                        }
                        if (err._stackContainer !== undefined) {
                            converted._stackContainer = args[0]._stackContainer;
                        }
                        else if (err._stack === undefined) {
                            converted._stackContainer = args[0];
                            converted._stack = null; // Use the stack as-is
                        }
                        else {
                            converted._stack = err._stack;
                        }
                        return converted;
                    }
                    return new Incident(noStackSymbol, args[0]);
                case 2:
                    return new Incident(noStackSymbol, args[0], args[1]);
                case 3:
                    return new Incident(noStackSymbol, args[0], args[1], args[2]);
                default:
                    return new Incident(noStackSymbol, args[0], args[1], args[2], args[3]);
            }
        }
        let noStack = false;
        let name;
        let data = undefined;
        let cause = undefined;
        let message;
        const argCount = args.length;
        let argIndex = 0;
        if (argCount > 0 && args[0] === noStackSymbol) {
            noStack = true;
            argIndex++;
        }
        if (argIndex < argCount && args[argIndex] instanceof Error) {
            cause = args[argIndex++];
        }
        if (typeof args[argIndex] !== "string") {
            throw new TypeError("Missing required `name` argument to `Incident`.");
        }
        name = args[argIndex++];
        if (argIndex < argCount && typeof args[argIndex] === "object") {
            data = args[argIndex++];
        }
        if (argIndex < argCount && (typeof args[argCount - 1] === "string" || typeof args[argCount - 1] === "function")) {
            message = args[argIndex];
        }
        else {
            if (data !== undefined) {
                message = object_inspect_1.default;
            }
            else {
                message = "";
            }
        }
        if (data === undefined) {
            data = {};
        }
        _super.call(this, typeof message === "function" ? "<non-evaluated lazy message>" : message);
        this.name = name;
        defineHiddenProperty(this, "_message", message);
        this.data = data;
        if (cause !== undefined) {
            this.cause = cause;
        }
        defineHiddenProperty(this, "_stack", undefined);
        defineHiddenProperty(this, "_stackContainer", noStack ? undefined : new Error());
    }
    Incident.prototype.toString = function () {
        return Error.prototype.toString.apply(this, arguments);
    };
    function getMessage() {
        if (typeof this._message === "function") {
            this._message = this._message(this.data);
        }
        defineSimpleProperty(this, "message", this._message);
        return this._message;
    }
    function setMessage(message) {
        this._message = message;
    }
    function getStack() {
        if (this._stack === undefined || this._stack === null) {
            if (this._stackContainer !== undefined && this._stackContainer.stack !== undefined) {
                // This removes the firs lines corresponding to: "Error\n    at new Incident [...]"
                if (this._stack === null) {
                    // `null` indicates that the stack has to be used without any transformation
                    // This usually occurs when the stack container is an error that was converted
                    this._stack = this._stackContainer.stack;
                }
                else {
                    const stack = this._stackContainer.stack.replace(/^[^\n]+\n[^\n]+\n/, "");
                    this._stack = this.message === "" ?
                        `${this.name}\n${stack}` :
                        `${this.name}: ${this.message}\n${stack}`;
                }
            }
            else {
                this._stack = this.message === "" ? this.name : `${this.name}: ${this.message}`;
            }
            if (this.cause !== undefined && this.cause.stack !== undefined) {
                this._stack = `${this._stack}\n  caused by ${this.cause.stack}`;
            }
        }
        Object.defineProperty(this, "stack", {
            configurable: true,
            value: this._stack,
            writable: true,
        });
        return this._stack;
    }
    function setStack(stack) {
        this._stackContainer = undefined;
        this._stack = stack;
    }
    Object.defineProperty(Incident.prototype, "message", {
        get: getMessage,
        set: setMessage,
        enumerable: true,
        configurable: true,
    });
    Object.defineProperty(Incident.prototype, "stack", {
        get: getStack,
        set: setStack,
        enumerable: true,
        configurable: true,
    });
    return Incident;
}
// tslint:disable-next-line:variable-name
exports.Incident = createIncident(Error);

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 131 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 132 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export asyncIterator */
/* harmony export (immutable) */ __webpack_exports__["a"] = all;
/**
 * Polyfill to ensure that the `asyncIterator` symbol is defined
 */
function asyncIterator() {
    if (!Symbol.asyncIterator) {
        Symbol.asyncIterator = Symbol.for("Symbol.asyncIterator");
    }
}
/**
 * Applies all the polyfills
 */
function all() {
    asyncIterator();
}


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var forEach                 = __webpack_require__(74).forEach;
var elementUtilsMaker       = __webpack_require__(134);
var listenerHandlerMaker    = __webpack_require__(135);
var idGeneratorMaker        = __webpack_require__(136);
var idHandlerMaker          = __webpack_require__(137);
var reporterMaker           = __webpack_require__(138);
var browserDetector         = __webpack_require__(75);
var batchProcessorMaker     = __webpack_require__(139);
var stateHandler            = __webpack_require__(141);

//Detection strategies.
var objectStrategyMaker     = __webpack_require__(142);
var scrollStrategyMaker     = __webpack_require__(143);

function isCollection(obj) {
    return Array.isArray(obj) || obj.length !== undefined;
}

function toArray(collection) {
    if (!Array.isArray(collection)) {
        var array = [];
        forEach(collection, function (obj) {
            array.push(obj);
        });
        return array;
    } else {
        return collection;
    }
}

function isElement(obj) {
    return obj && obj.nodeType === 1;
}

/**
 * @typedef idHandler
 * @type {object}
 * @property {function} get Gets the resize detector id of the element.
 * @property {function} set Generate and sets the resize detector id of the element.
 */

/**
 * @typedef Options
 * @type {object}
 * @property {boolean} callOnAdd    Determines if listeners should be called when they are getting added.
                                    Default is true. If true, the listener is guaranteed to be called when it has been added.
                                    If false, the listener will not be guarenteed to be called when it has been added (does not prevent it from being called).
 * @property {idHandler} idHandler  A custom id handler that is responsible for generating, setting and retrieving id's for elements.
                                    If not provided, a default id handler will be used.
 * @property {reporter} reporter    A custom reporter that handles reporting logs, warnings and errors.
                                    If not provided, a default id handler will be used.
                                    If set to false, then nothing will be reported.
 * @property {boolean} debug        If set to true, the the system will report debug messages as default for the listenTo method.
 */

/**
 * Creates an element resize detector instance.
 * @public
 * @param {Options?} options Optional global options object that will decide how this instance will work.
 */
module.exports = function(options) {
    options = options || {};

    //idHandler is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var idHandler;

    if (options.idHandler) {
        // To maintain compatability with idHandler.get(element, readonly), make sure to wrap the given idHandler
        // so that readonly flag always is true when it's used here. This may be removed next major version bump.
        idHandler = {
            get: function (element) { return options.idHandler.get(element, true); },
            set: options.idHandler.set
        };
    } else {
        var idGenerator = idGeneratorMaker();
        var defaultIdHandler = idHandlerMaker({
            idGenerator: idGenerator,
            stateHandler: stateHandler
        });
        idHandler = defaultIdHandler;
    }

    //reporter is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var reporter = options.reporter;

    if(!reporter) {
        //If options.reporter is false, then the reporter should be quiet.
        var quiet = reporter === false;
        reporter = reporterMaker(quiet);
    }

    //batchProcessor is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var batchProcessor = getOption(options, "batchProcessor", batchProcessorMaker({ reporter: reporter }));

    //Options to be used as default for the listenTo function.
    var globalOptions = {};
    globalOptions.callOnAdd     = !!getOption(options, "callOnAdd", true);
    globalOptions.debug         = !!getOption(options, "debug", false);

    var eventListenerHandler    = listenerHandlerMaker(idHandler);
    var elementUtils            = elementUtilsMaker({
        stateHandler: stateHandler
    });

    //The detection strategy to be used.
    var detectionStrategy;
    var desiredStrategy = getOption(options, "strategy", "object");
    var strategyOptions = {
        reporter: reporter,
        batchProcessor: batchProcessor,
        stateHandler: stateHandler,
        idHandler: idHandler
    };

    if(desiredStrategy === "scroll") {
        if (browserDetector.isLegacyOpera()) {
            reporter.warn("Scroll strategy is not supported on legacy Opera. Changing to object strategy.");
            desiredStrategy = "object";
        } else if (browserDetector.isIE(9)) {
            reporter.warn("Scroll strategy is not supported on IE9. Changing to object strategy.");
            desiredStrategy = "object";
        }
    }

    if(desiredStrategy === "scroll") {
        detectionStrategy = scrollStrategyMaker(strategyOptions);
    } else if(desiredStrategy === "object") {
        detectionStrategy = objectStrategyMaker(strategyOptions);
    } else {
        throw new Error("Invalid strategy name: " + desiredStrategy);
    }

    //Calls can be made to listenTo with elements that are still being installed.
    //Also, same elements can occur in the elements list in the listenTo function.
    //With this map, the ready callbacks can be synchronized between the calls
    //so that the ready callback can always be called when an element is ready - even if
    //it wasn't installed from the function itself.
    var onReadyCallbacks = {};

    /**
     * Makes the given elements resize-detectable and starts listening to resize events on the elements. Calls the event callback for each event for each element.
     * @public
     * @param {Options?} options Optional options object. These options will override the global options. Some options may not be overriden, such as idHandler.
     * @param {element[]|element} elements The given array of elements to detect resize events of. Single element is also valid.
     * @param {function} listener The callback to be executed for each resize event for each element.
     */
    function listenTo(options, elements, listener) {
        function onResizeCallback(element) {
            var listeners = eventListenerHandler.get(element);
            forEach(listeners, function callListenerProxy(listener) {
                listener(element);
            });
        }

        function addListener(callOnAdd, element, listener) {
            eventListenerHandler.add(element, listener);

            if(callOnAdd) {
                listener(element);
            }
        }

        //Options object may be omitted.
        if(!listener) {
            listener = elements;
            elements = options;
            options = {};
        }

        if(!elements) {
            throw new Error("At least one element required.");
        }

        if(!listener) {
            throw new Error("Listener required.");
        }

        if (isElement(elements)) {
            // A single element has been passed in.
            elements = [elements];
        } else if (isCollection(elements)) {
            // Convert collection to array for plugins.
            // TODO: May want to check so that all the elements in the collection are valid elements.
            elements = toArray(elements);
        } else {
            return reporter.error("Invalid arguments. Must be a DOM element or a collection of DOM elements.");
        }

        var elementsReady = 0;

        var callOnAdd = getOption(options, "callOnAdd", globalOptions.callOnAdd);
        var onReadyCallback = getOption(options, "onReady", function noop() {});
        var debug = getOption(options, "debug", globalOptions.debug);

        forEach(elements, function attachListenerToElement(element) {
            if (!stateHandler.getState(element)) {
                stateHandler.initState(element);
                idHandler.set(element);
            }

            var id = idHandler.get(element);

            debug && reporter.log("Attaching listener to element", id, element);

            if(!elementUtils.isDetectable(element)) {
                debug && reporter.log(id, "Not detectable.");
                if(elementUtils.isBusy(element)) {
                    debug && reporter.log(id, "System busy making it detectable");

                    //The element is being prepared to be detectable. Do not make it detectable.
                    //Just add the listener, because the element will soon be detectable.
                    addListener(callOnAdd, element, listener);
                    onReadyCallbacks[id] = onReadyCallbacks[id] || [];
                    onReadyCallbacks[id].push(function onReady() {
                        elementsReady++;

                        if(elementsReady === elements.length) {
                            onReadyCallback();
                        }
                    });
                    return;
                }

                debug && reporter.log(id, "Making detectable...");
                //The element is not prepared to be detectable, so do prepare it and add a listener to it.
                elementUtils.markBusy(element, true);
                return detectionStrategy.makeDetectable({ debug: debug }, element, function onElementDetectable(element) {
                    debug && reporter.log(id, "onElementDetectable");

                    if (stateHandler.getState(element)) {
                        elementUtils.markAsDetectable(element);
                        elementUtils.markBusy(element, false);
                        detectionStrategy.addListener(element, onResizeCallback);
                        addListener(callOnAdd, element, listener);

                        // Since the element size might have changed since the call to "listenTo", we need to check for this change,
                        // so that a resize event may be emitted.
                        // Having the startSize object is optional (since it does not make sense in some cases such as unrendered elements), so check for its existance before.
                        // Also, check the state existance before since the element may have been uninstalled in the installation process.
                        var state = stateHandler.getState(element);
                        if (state && state.startSize) {
                            var width = element.offsetWidth;
                            var height = element.offsetHeight;
                            if (state.startSize.width !== width || state.startSize.height !== height) {
                                onResizeCallback(element);
                            }
                        }

                        if(onReadyCallbacks[id]) {
                            forEach(onReadyCallbacks[id], function(callback) {
                                callback();
                            });
                        }
                    } else {
                        // The element has been unisntalled before being detectable.
                        debug && reporter.log(id, "Element uninstalled before being detectable.");
                    }

                    delete onReadyCallbacks[id];

                    elementsReady++;
                    if(elementsReady === elements.length) {
                        onReadyCallback();
                    }
                });
            }

            debug && reporter.log(id, "Already detecable, adding listener.");

            //The element has been prepared to be detectable and is ready to be listened to.
            addListener(callOnAdd, element, listener);
            elementsReady++;
        });

        if(elementsReady === elements.length) {
            onReadyCallback();
        }
    }

    function uninstall(elements) {
        if(!elements) {
            return reporter.error("At least one element is required.");
        }

        if (isElement(elements)) {
            // A single element has been passed in.
            elements = [elements];
        } else if (isCollection(elements)) {
            // Convert collection to array for plugins.
            // TODO: May want to check so that all the elements in the collection are valid elements.
            elements = toArray(elements);
        } else {
            return reporter.error("Invalid arguments. Must be a DOM element or a collection of DOM elements.");
        }

        forEach(elements, function (element) {
            eventListenerHandler.removeAllListeners(element);
            detectionStrategy.uninstall(element);
            stateHandler.cleanState(element);
        });
    }

    return {
        listenTo: listenTo,
        removeListener: eventListenerHandler.removeListener,
        removeAllListeners: eventListenerHandler.removeAllListeners,
        uninstall: uninstall
    };
};

function getOption(options, name, defaultValue) {
    var value = options[name];

    if((value === undefined || value === null) && defaultValue !== undefined) {
        return defaultValue;
    }

    return value;
}


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(options) {
    var getState = options.stateHandler.getState;

    /**
     * Tells if the element has been made detectable and ready to be listened for resize events.
     * @public
     * @param {element} The element to check.
     * @returns {boolean} True or false depending on if the element is detectable or not.
     */
    function isDetectable(element) {
        var state = getState(element);
        return state && !!state.isDetectable;
    }

    /**
     * Marks the element that it has been made detectable and ready to be listened for resize events.
     * @public
     * @param {element} The element to mark.
     */
    function markAsDetectable(element) {
        getState(element).isDetectable = true;
    }

    /**
     * Tells if the element is busy or not.
     * @public
     * @param {element} The element to check.
     * @returns {boolean} True or false depending on if the element is busy or not.
     */
    function isBusy(element) {
        return !!getState(element).busy;
    }

    /**
     * Marks the object is busy and should not be made detectable.
     * @public
     * @param {element} element The element to mark.
     * @param {boolean} busy If the element is busy or not.
     */
    function markBusy(element, busy) {
        getState(element).busy = !!busy;
    }

    return {
        isDetectable: isDetectable,
        markAsDetectable: markAsDetectable,
        isBusy: isBusy,
        markBusy: markBusy
    };
};


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(idHandler) {
    var eventListeners = {};

    /**
     * Gets all listeners for the given element.
     * @public
     * @param {element} element The element to get all listeners for.
     * @returns All listeners for the given element.
     */
    function getListeners(element) {
        var id = idHandler.get(element);

        if (id === undefined) {
            return [];
        }

        return eventListeners[id] || [];
    }

    /**
     * Stores the given listener for the given element. Will not actually add the listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The callback that the element has added.
     */
    function addListener(element, listener) {
        var id = idHandler.get(element);

        if(!eventListeners[id]) {
            eventListeners[id] = [];
        }

        eventListeners[id].push(listener);
    }

    function removeListener(element, listener) {
        var listeners = getListeners(element);
        for (var i = 0, len = listeners.length; i < len; ++i) {
            if (listeners[i] === listener) {
              listeners.splice(i, 1);
              break;
            }
        }
    }

    function removeAllListeners(element) {
      var listeners = getListeners(element);
      if (!listeners) { return; }
      listeners.length = 0;
    }

    return {
        get: getListeners,
        add: addListener,
        removeListener: removeListener,
        removeAllListeners: removeAllListeners
    };
};


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function() {
    var idCount = 1;

    /**
     * Generates a new unique id in the context.
     * @public
     * @returns {number} A unique id in the context.
     */
    function generate() {
        return idCount++;
    }

    return {
        generate: generate
    };
};


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(options) {
    var idGenerator     = options.idGenerator;
    var getState        = options.stateHandler.getState;

    /**
     * Gets the resize detector id of the element.
     * @public
     * @param {element} element The target element to get the id of.
     * @returns {string|number|null} The id of the element. Null if it has no id.
     */
    function getId(element) {
        var state = getState(element);

        if (state && state.id !== undefined) {
            return state.id;
        }

        return null;
    }

    /**
     * Sets the resize detector id of the element. Requires the element to have a resize detector state initialized.
     * @public
     * @param {element} element The target element to set the id of.
     * @returns {string|number|null} The id of the element.
     */
    function setId(element) {
        var state = getState(element);

        if (!state) {
            throw new Error("setId required the element to have a resize detection state.");
        }

        var id = idGenerator.generate();

        state.id = id;

        return id;
    }

    return {
        get: getId,
        set: setId
    };
};


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* global console: false */

/**
 * Reporter that handles the reporting of logs, warnings and errors.
 * @public
 * @param {boolean} quiet Tells if the reporter should be quiet or not.
 */
module.exports = function(quiet) {
    function noop() {
        //Does nothing.
    }

    var reporter = {
        log: noop,
        warn: noop,
        error: noop
    };

    if(!quiet && window.console) {
        var attachFunction = function(reporter, name) {
            //The proxy is needed to be able to call the method with the console context,
            //since we cannot use bind.
            reporter[name] = function reporterProxy() {
                var f = console[name];
                if (f.apply) { //IE9 does not support console.log.apply :)
                    f.apply(console, arguments);
                } else {
                    for (var i = 0; i < arguments.length; i++) {
                        f(arguments[i]);
                    }
                }
            };
        };

        attachFunction(reporter, "log");
        attachFunction(reporter, "warn");
        attachFunction(reporter, "error");
    }

    return reporter;
};

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(140);

module.exports = function batchProcessorMaker(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var asyncProcess    = utils.getOption(options, "async", true);
    var autoProcess     = utils.getOption(options, "auto", true);

    if(autoProcess && !asyncProcess) {
        reporter && reporter.warn("Invalid options combination. auto=true and async=false is invalid. Setting async=true.");
        asyncProcess = true;
    }

    var batch = Batch();
    var asyncFrameHandler;
    var isProcessing = false;

    function addFunction(level, fn) {
        if(!isProcessing && autoProcess && asyncProcess && batch.size() === 0) {
            // Since this is async, it is guaranteed to be executed after that the fn is added to the batch.
            // This needs to be done before, since we're checking the size of the batch to be 0.
            processBatchAsync();
        }

        batch.add(level, fn);
    }

    function processBatch() {
        // Save the current batch, and create a new batch so that incoming functions are not added into the currently processing batch.
        // Continue processing until the top-level batch is empty (functions may be added to the new batch while processing, and so on).
        isProcessing = true;
        while (batch.size()) {
            var processingBatch = batch;
            batch = Batch();
            processingBatch.process();
        }
        isProcessing = false;
    }

    function forceProcessBatch(localAsyncProcess) {
        if (isProcessing) {
            return;
        }

        if(localAsyncProcess === undefined) {
            localAsyncProcess = asyncProcess;
        }

        if(asyncFrameHandler) {
            cancelFrame(asyncFrameHandler);
            asyncFrameHandler = null;
        }

        if(localAsyncProcess) {
            processBatchAsync();
        } else {
            processBatch();
        }
    }

    function processBatchAsync() {
        asyncFrameHandler = requestFrame(processBatch);
    }

    function clearBatch() {
        batch           = {};
        batchSize       = 0;
        topLevel        = 0;
        bottomLevel     = 0;
    }

    function cancelFrame(listener) {
        // var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;
        var cancel = clearTimeout;
        return cancel(listener);
    }

    function requestFrame(callback) {
        // var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) { return window.setTimeout(fn, 20); };
        var raf = function(fn) { return setTimeout(fn, 0); };
        return raf(callback);
    }

    return {
        add: addFunction,
        force: forceProcessBatch
    };
};

function Batch() {
    var batch       = {};
    var size        = 0;
    var topLevel    = 0;
    var bottomLevel = 0;

    function add(level, fn) {
        if(!fn) {
            fn = level;
            level = 0;
        }

        if(level > topLevel) {
            topLevel = level;
        } else if(level < bottomLevel) {
            bottomLevel = level;
        }

        if(!batch[level]) {
            batch[level] = [];
        }

        batch[level].push(fn);
        size++;
    }

    function process() {
        for(var level = bottomLevel; level <= topLevel; level++) {
            var fns = batch[level];

            for(var i = 0; i < fns.length; i++) {
                var fn = fns[i];
                fn();
            }
        }
    }

    function getSize() {
        return size;
    }

    return {
        add: add,
        process: process,
        size: getSize
    };
}


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = module.exports = {};

utils.getOption = getOption;

function getOption(options, name, defaultValue) {
    var value = options[name];

    if((value === undefined || value === null) && defaultValue !== undefined) {
        return defaultValue;
    }

    return value;
}


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var prop = "_erd";

function initState(element) {
    element[prop] = {};
    return getState(element);
}

function getState(element) {
    return element[prop];
}

function cleanState(element) {
    delete element[prop];
}

module.exports = {
    initState: initState,
    getState: getState,
    cleanState: cleanState
};


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Resize detection strategy that injects objects to elements in order to detect resize events.
 * Heavily inspired by: http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/
 */



var browserDetector = __webpack_require__(75);

module.exports = function(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var batchProcessor  = options.batchProcessor;
    var getState        = options.stateHandler.getState;

    if(!reporter) {
        throw new Error("Missing required dependency: reporter.");
    }

    /**
     * Adds a resize event listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.
     */
    function addListener(element, listener) {
        if(!getObject(element)) {
            throw new Error("Element is not detectable by this strategy.");
        }

        function listenerProxy() {
            listener(element);
        }

        if(browserDetector.isIE(8)) {
            //IE 8 does not support object, but supports the resize event directly on elements.
            getState(element).object = {
                proxy: listenerProxy
            };
            element.attachEvent("onresize", listenerProxy);
        } else {
            var object = getObject(element);
            object.contentDocument.defaultView.addEventListener("resize", listenerProxy);
        }
    }

    /**
     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.
     * @private
     * @param {object} options Optional options object.
     * @param {element} element The element to make detectable
     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.
     */
    function makeDetectable(options, element, callback) {
        if (!callback) {
            callback = element;
            element = options;
            options = null;
        }

        options = options || {};
        var debug = options.debug;

        function injectObject(element, callback) {
            var OBJECT_STYLE = "display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none; padding: 0; margin: 0; opacity: 0; z-index: -1000; pointer-events: none;";

            //The target element needs to be positioned (everything except static) so the absolute positioned object will be positioned relative to the target element.

            // Position altering may be performed directly or on object load, depending on if style resolution is possible directly or not.
            var positionCheckPerformed = false;

            // The element may not yet be attached to the DOM, and therefore the style object may be empty in some browsers.
            // Since the style object is a reference, it will be updated as soon as the element is attached to the DOM.
            var style = window.getComputedStyle(element);
            var width = element.offsetWidth;
            var height = element.offsetHeight;

            getState(element).startSize = {
                width: width,
                height: height
            };

            function mutateDom() {
                function alterPositionStyles() {
                    if(style.position === "static") {
                        element.style.position = "relative";

                        var removeRelativeStyles = function(reporter, element, style, property) {
                            function getNumericalValue(value) {
                                return value.replace(/[^-\d\.]/g, "");
                            }

                            var value = style[property];

                            if(value !== "auto" && getNumericalValue(value) !== "0") {
                                reporter.warn("An element that is positioned static has style." + property + "=" + value + " which is ignored due to the static positioning. The element will need to be positioned relative, so the style." + property + " will be set to 0. Element: ", element);
                                element.style[property] = 0;
                            }
                        };

                        //Check so that there are no accidental styles that will make the element styled differently now that is is relative.
                        //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).
                        removeRelativeStyles(reporter, element, style, "top");
                        removeRelativeStyles(reporter, element, style, "right");
                        removeRelativeStyles(reporter, element, style, "bottom");
                        removeRelativeStyles(reporter, element, style, "left");
                    }
                }

                function onObjectLoad() {
                    // The object has been loaded, which means that the element now is guaranteed to be attached to the DOM.
                    if (!positionCheckPerformed) {
                        alterPositionStyles();
                    }

                    /*jshint validthis: true */

                    function getDocument(element, callback) {
                        //Opera 12 seem to call the object.onload before the actual document has been created.
                        //So if it is not present, poll it with an timeout until it is present.
                        //TODO: Could maybe be handled better with object.onreadystatechange or similar.
                        if(!element.contentDocument) {
                            setTimeout(function checkForObjectDocument() {
                                getDocument(element, callback);
                            }, 100);

                            return;
                        }

                        callback(element.contentDocument);
                    }

                    //Mutating the object element here seems to fire another load event.
                    //Mutating the inner document of the object element is fine though.
                    var objectElement = this;

                    //Create the style element to be added to the object.
                    getDocument(objectElement, function onObjectDocumentReady(objectDocument) {
                        //Notify that the element is ready to be listened to.
                        callback(element);
                    });
                }

                // The element may be detached from the DOM, and some browsers does not support style resolving of detached elements.
                // The alterPositionStyles needs to be delayed until we know the element has been attached to the DOM (which we are sure of when the onObjectLoad has been fired), if style resolution is not possible.
                if (style.position !== "") {
                    alterPositionStyles(style);
                    positionCheckPerformed = true;
                }

                //Add an object element as a child to the target element that will be listened to for resize events.
                var object = document.createElement("object");
                object.style.cssText = OBJECT_STYLE;
                object.tabIndex = -1;
                object.type = "text/html";
                object.onload = onObjectLoad;

                //Safari: This must occur before adding the object to the DOM.
                //IE: Does not like that this happens before, even if it is also added after.
                if(!browserDetector.isIE()) {
                    object.data = "about:blank";
                }

                element.appendChild(object);
                getState(element).object = object;

                //IE: This must occur after adding the object to the DOM.
                if(browserDetector.isIE()) {
                    object.data = "about:blank";
                }
            }

            if(batchProcessor) {
                batchProcessor.add(mutateDom);
            } else {
                mutateDom();
            }
        }

        if(browserDetector.isIE(8)) {
            //IE 8 does not support objects properly. Luckily they do support the resize event.
            //So do not inject the object and notify that the element is already ready to be listened to.
            //The event handler for the resize event is attached in the utils.addListener instead.
            callback(element);
        } else {
            injectObject(element, callback);
        }
    }

    /**
     * Returns the child object of the target element.
     * @private
     * @param {element} element The target element.
     * @returns The object element of the target.
     */
    function getObject(element) {
        return getState(element).object;
    }

    function uninstall(element) {
        if(browserDetector.isIE(8)) {
            element.detachEvent("onresize", getState(element).object.proxy);
        } else {
            element.removeChild(getObject(element));
        }
        delete getState(element).object;
    }

    return {
        makeDetectable: makeDetectable,
        addListener: addListener,
        uninstall: uninstall
    };
};


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Resize detection strategy that injects divs to elements in order to detect resize events on scroll events.
 * Heavily inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js
 */



var forEach = __webpack_require__(74).forEach;

module.exports = function(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var batchProcessor  = options.batchProcessor;
    var getState        = options.stateHandler.getState;
    var hasState        = options.stateHandler.hasState;
    var idHandler       = options.idHandler;

    if (!batchProcessor) {
        throw new Error("Missing required dependency: batchProcessor");
    }

    if (!reporter) {
        throw new Error("Missing required dependency: reporter.");
    }

    //TODO: Could this perhaps be done at installation time?
    var scrollbarSizes = getScrollbarSizes();

    // Inject the scrollbar styling that prevents them from appearing sometimes in Chrome.
    // The injected container needs to have a class, so that it may be styled with CSS (pseudo elements).
    var styleId = "erd_scroll_detection_scrollbar_style";
    var detectionContainerClass = "erd_scroll_detection_container";
    injectScrollStyle(styleId, detectionContainerClass);

    function getScrollbarSizes() {
        var width = 500;
        var height = 500;

        var child = document.createElement("div");
        child.style.cssText = "position: absolute; width: " + width*2 + "px; height: " + height*2 + "px; visibility: hidden; margin: 0; padding: 0;";

        var container = document.createElement("div");
        container.style.cssText = "position: absolute; width: " + width + "px; height: " + height + "px; overflow: scroll; visibility: none; top: " + -width*3 + "px; left: " + -height*3 + "px; visibility: hidden; margin: 0; padding: 0;";

        container.appendChild(child);

        document.body.insertBefore(container, document.body.firstChild);

        var widthSize = width - container.clientWidth;
        var heightSize = height - container.clientHeight;

        document.body.removeChild(container);

        return {
            width: widthSize,
            height: heightSize
        };
    }

    function injectScrollStyle(styleId, containerClass) {
        function injectStyle(style, method) {
            method = method || function (element) {
                document.head.appendChild(element);
            };

            var styleElement = document.createElement("style");
            styleElement.innerHTML = style;
            styleElement.id = styleId;
            method(styleElement);
            return styleElement;
        }

        if (!document.getElementById(styleId)) {
            var containerAnimationClass = containerClass + "_animation";
            var containerAnimationActiveClass = containerClass + "_animation_active";
            var style = "/* Created by the element-resize-detector library. */\n";
            style += "." + containerClass + " > div::-webkit-scrollbar { display: none; }\n\n";
            style += "." + containerAnimationActiveClass + " { -webkit-animation-duration: 0.1s; animation-duration: 0.1s; -webkit-animation-name: " + containerAnimationClass + "; animation-name: " + containerAnimationClass + "; }\n";
            style += "@-webkit-keyframes " + containerAnimationClass +  " { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }\n";
            style += "@keyframes " + containerAnimationClass +          " { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }";
            injectStyle(style);
        }
    }

    function addAnimationClass(element) {
        element.className += " " + detectionContainerClass + "_animation_active";
    }

    function addEvent(el, name, cb) {
        if (el.addEventListener) {
            el.addEventListener(name, cb);
        } else if(el.attachEvent) {
            el.attachEvent("on" + name, cb);
        } else {
            return reporter.error("[scroll] Don't know how to add event listeners.");
        }
    }

    function removeEvent(el, name, cb) {
        if (el.removeEventListener) {
            el.removeEventListener(name, cb);
        } else if(el.detachEvent) {
            el.detachEvent("on" + name, cb);
        } else {
            return reporter.error("[scroll] Don't know how to remove event listeners.");
        }
    }

    function getExpandElement(element) {
        return getState(element).container.childNodes[0].childNodes[0].childNodes[0];
    }

    function getShrinkElement(element) {
        return getState(element).container.childNodes[0].childNodes[0].childNodes[1];
    }

    /**
     * Adds a resize event listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.
     */
    function addListener(element, listener) {
        var listeners = getState(element).listeners;

        if (!listeners.push) {
            throw new Error("Cannot add listener to an element that is not detectable.");
        }

        getState(element).listeners.push(listener);
    }

    /**
     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.
     * @private
     * @param {object} options Optional options object.
     * @param {element} element The element to make detectable
     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.
     */
    function makeDetectable(options, element, callback) {
        if (!callback) {
            callback = element;
            element = options;
            options = null;
        }

        options = options || {};

        function debug() {
            if (options.debug) {
                var args = Array.prototype.slice.call(arguments);
                args.unshift(idHandler.get(element), "Scroll: ");
                if (reporter.log.apply) {
                    reporter.log.apply(null, args);
                } else {
                    for (var i = 0; i < args.length; i++) {
                        reporter.log(args[i]);
                    }
                }
            }
        }

        function isDetached(element) {
            function isInDocument(element) {
                return element === element.ownerDocument.body || element.ownerDocument.body.contains(element);
            }

            if (!isInDocument(element)) {
                return true;
            }

            // FireFox returns null style in hidden iframes. See https://github.com/wnr/element-resize-detector/issues/68 and https://bugzilla.mozilla.org/show_bug.cgi?id=795520
            if (getComputedStyle(element) === null) {
                return true;
            }

            return false;
        }

        function isUnrendered(element) {
            // Check the absolute positioned container since the top level container is display: inline.
            var container = getState(element).container.childNodes[0];
            var style = getComputedStyle(container);
            return !style.width || style.width.indexOf("px") === -1; //Can only compute pixel value when rendered.
        }

        function getStyle() {
            // Some browsers only force layouts when actually reading the style properties of the style object, so make sure that they are all read here,
            // so that the user of the function can be sure that it will perform the layout here, instead of later (important for batching).
            var elementStyle            = getComputedStyle(element);
            var style                   = {};
            style.position              = elementStyle.position;
            style.width                 = element.offsetWidth;
            style.height                = element.offsetHeight;
            style.top                   = elementStyle.top;
            style.right                 = elementStyle.right;
            style.bottom                = elementStyle.bottom;
            style.left                  = elementStyle.left;
            style.widthCSS              = elementStyle.width;
            style.heightCSS             = elementStyle.height;
            return style;
        }

        function storeStartSize() {
            var style = getStyle();
            getState(element).startSize = {
                width: style.width,
                height: style.height
            };
            debug("Element start size", getState(element).startSize);
        }

        function initListeners() {
            getState(element).listeners = [];
        }

        function storeStyle() {
            debug("storeStyle invoked.");
            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            var style = getStyle();
            getState(element).style = style;
        }

        function storeCurrentSize(element, width, height) {
            getState(element).lastWidth = width;
            getState(element).lastHeight  = height;
        }

        function getExpandChildElement(element) {
            return getExpandElement(element).childNodes[0];
        }

        function getWidthOffset() {
            return 2 * scrollbarSizes.width + 1;
        }

        function getHeightOffset() {
            return 2 * scrollbarSizes.height + 1;
        }

        function getExpandWidth(width) {
            return width + 10 + getWidthOffset();
        }

        function getExpandHeight(height) {
            return height + 10 + getHeightOffset();
        }

        function getShrinkWidth(width) {
            return width * 2 + getWidthOffset();
        }

        function getShrinkHeight(height) {
            return height * 2 + getHeightOffset();
        }

        function positionScrollbars(element, width, height) {
            var expand          = getExpandElement(element);
            var shrink          = getShrinkElement(element);
            var expandWidth     = getExpandWidth(width);
            var expandHeight    = getExpandHeight(height);
            var shrinkWidth     = getShrinkWidth(width);
            var shrinkHeight    = getShrinkHeight(height);
            expand.scrollLeft   = expandWidth;
            expand.scrollTop    = expandHeight;
            shrink.scrollLeft   = shrinkWidth;
            shrink.scrollTop    = shrinkHeight;
        }

        function injectContainerElement() {
            var container = getState(element).container;

            if (!container) {
                container                   = document.createElement("div");
                container.className         = detectionContainerClass;
                container.style.cssText     = "visibility: hidden; display: inline; width: 0px; height: 0px; z-index: -1; overflow: hidden; margin: 0; padding: 0;";
                getState(element).container = container;
                addAnimationClass(container);
                element.appendChild(container);

                var onAnimationStart = function () {
                    getState(element).onRendered && getState(element).onRendered();
                };

                addEvent(container, "animationstart", onAnimationStart);

                // Store the event handler here so that they may be removed when uninstall is called.
                // See uninstall function for an explanation why it is needed.
                getState(element).onAnimationStart = onAnimationStart;
            }

            return container;
        }

        function injectScrollElements() {
            function alterPositionStyles() {
                var style = getState(element).style;

                if(style.position === "static") {
                    element.style.position = "relative";

                    var removeRelativeStyles = function(reporter, element, style, property) {
                        function getNumericalValue(value) {
                            return value.replace(/[^-\d\.]/g, "");
                        }

                        var value = style[property];

                        if(value !== "auto" && getNumericalValue(value) !== "0") {
                            reporter.warn("An element that is positioned static has style." + property + "=" + value + " which is ignored due to the static positioning. The element will need to be positioned relative, so the style." + property + " will be set to 0. Element: ", element);
                            element.style[property] = 0;
                        }
                    };

                    //Check so that there are no accidental styles that will make the element styled differently now that is is relative.
                    //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).
                    removeRelativeStyles(reporter, element, style, "top");
                    removeRelativeStyles(reporter, element, style, "right");
                    removeRelativeStyles(reporter, element, style, "bottom");
                    removeRelativeStyles(reporter, element, style, "left");
                }
            }

            function getLeftTopBottomRightCssText(left, top, bottom, right) {
                left = (!left ? "0" : (left + "px"));
                top = (!top ? "0" : (top + "px"));
                bottom = (!bottom ? "0" : (bottom + "px"));
                right = (!right ? "0" : (right + "px"));

                return "left: " + left + "; top: " + top + "; right: " + right + "; bottom: " + bottom + ";";
            }

            debug("Injecting elements");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            alterPositionStyles();

            var rootContainer = getState(element).container;

            if (!rootContainer) {
                rootContainer = injectContainerElement();
            }

            // Due to this WebKit bug https://bugs.webkit.org/show_bug.cgi?id=80808 (currently fixed in Blink, but still present in WebKit browsers such as Safari),
            // we need to inject two containers, one that is width/height 100% and another that is left/top -1px so that the final container always is 1x1 pixels bigger than
            // the targeted element.
            // When the bug is resolved, "containerContainer" may be removed.

            // The outer container can occasionally be less wide than the targeted when inside inline elements element in WebKit (see https://bugs.webkit.org/show_bug.cgi?id=152980).
            // This should be no problem since the inner container either way makes sure the injected scroll elements are at least 1x1 px.

            var scrollbarWidth          = scrollbarSizes.width;
            var scrollbarHeight         = scrollbarSizes.height;
            var containerContainerStyle = "position: absolute; flex: none; overflow: hidden; z-index: -1; visibility: hidden; width: 100%; height: 100%; left: 0px; top: 0px;";
            var containerStyle          = "position: absolute; flex: none; overflow: hidden; z-index: -1; visibility: hidden; " + getLeftTopBottomRightCssText(-(1 + scrollbarWidth), -(1 + scrollbarHeight), -scrollbarHeight, -scrollbarWidth);
            var expandStyle             = "position: absolute; flex: none; overflow: scroll; z-index: -1; visibility: hidden; width: 100%; height: 100%;";
            var shrinkStyle             = "position: absolute; flex: none; overflow: scroll; z-index: -1; visibility: hidden; width: 100%; height: 100%;";
            var expandChildStyle        = "position: absolute; left: 0; top: 0;";
            var shrinkChildStyle        = "position: absolute; width: 200%; height: 200%;";

            var containerContainer      = document.createElement("div");
            var container               = document.createElement("div");
            var expand                  = document.createElement("div");
            var expandChild             = document.createElement("div");
            var shrink                  = document.createElement("div");
            var shrinkChild             = document.createElement("div");

            // Some browsers choke on the resize system being rtl, so force it to ltr. https://github.com/wnr/element-resize-detector/issues/56
            // However, dir should not be set on the top level container as it alters the dimensions of the target element in some browsers.
            containerContainer.dir              = "ltr";

            containerContainer.style.cssText    = containerContainerStyle;
            containerContainer.className        = detectionContainerClass;
            container.className                 = detectionContainerClass;
            container.style.cssText             = containerStyle;
            expand.style.cssText                = expandStyle;
            expandChild.style.cssText           = expandChildStyle;
            shrink.style.cssText                = shrinkStyle;
            shrinkChild.style.cssText           = shrinkChildStyle;

            expand.appendChild(expandChild);
            shrink.appendChild(shrinkChild);
            container.appendChild(expand);
            container.appendChild(shrink);
            containerContainer.appendChild(container);
            rootContainer.appendChild(containerContainer);

            function onExpandScroll() {
                getState(element).onExpand && getState(element).onExpand();
            }

            function onShrinkScroll() {
                getState(element).onShrink && getState(element).onShrink();
            }

            addEvent(expand, "scroll", onExpandScroll);
            addEvent(shrink, "scroll", onShrinkScroll);

            // Store the event handlers here so that they may be removed when uninstall is called.
            // See uninstall function for an explanation why it is needed.
            getState(element).onExpandScroll = onExpandScroll;
            getState(element).onShrinkScroll = onShrinkScroll;
        }

        function registerListenersAndPositionElements() {
            function updateChildSizes(element, width, height) {
                var expandChild             = getExpandChildElement(element);
                var expandWidth             = getExpandWidth(width);
                var expandHeight            = getExpandHeight(height);
                expandChild.style.width     = expandWidth + "px";
                expandChild.style.height    = expandHeight + "px";
            }

            function updateDetectorElements(done) {
                var width           = element.offsetWidth;
                var height          = element.offsetHeight;

                debug("Storing current size", width, height);

                // Store the size of the element sync here, so that multiple scroll events may be ignored in the event listeners.
                // Otherwise the if-check in handleScroll is useless.
                storeCurrentSize(element, width, height);

                // Since we delay the processing of the batch, there is a risk that uninstall has been called before the batch gets to execute.
                // Since there is no way to cancel the fn executions, we need to add an uninstall guard to all fns of the batch.

                batchProcessor.add(0, function performUpdateChildSizes() {
                    if (!getState(element)) {
                        debug("Aborting because element has been uninstalled");
                        return;
                    }

                    if (!areElementsInjected()) {
                        debug("Aborting because element container has not been initialized");
                        return;
                    }

                    if (options.debug) {
                        var w = element.offsetWidth;
                        var h = element.offsetHeight;

                        if (w !== width || h !== height) {
                            reporter.warn(idHandler.get(element), "Scroll: Size changed before updating detector elements.");
                        }
                    }

                    updateChildSizes(element, width, height);
                });

                batchProcessor.add(1, function updateScrollbars() {
                    if (!getState(element)) {
                        debug("Aborting because element has been uninstalled");
                        return;
                    }

                    if (!areElementsInjected()) {
                        debug("Aborting because element container has not been initialized");
                        return;
                    }

                    positionScrollbars(element, width, height);
                });

                if (done) {
                    batchProcessor.add(2, function () {
                        if (!getState(element)) {
                            debug("Aborting because element has been uninstalled");
                            return;
                        }

                        if (!areElementsInjected()) {
                          debug("Aborting because element container has not been initialized");
                          return;
                        }

                        done();
                    });
                }
            }

            function areElementsInjected() {
                return !!getState(element).container;
            }

            function notifyListenersIfNeeded() {
                function isFirstNotify() {
                    return getState(element).lastNotifiedWidth === undefined;
                }

                debug("notifyListenersIfNeeded invoked");

                var state = getState(element);

                // Don't notify the if the current size is the start size, and this is the first notification.
                if (isFirstNotify() && state.lastWidth === state.startSize.width && state.lastHeight === state.startSize.height) {
                    return debug("Not notifying: Size is the same as the start size, and there has been no notification yet.");
                }

                // Don't notify if the size already has been notified.
                if (state.lastWidth === state.lastNotifiedWidth && state.lastHeight === state.lastNotifiedHeight) {
                    return debug("Not notifying: Size already notified");
                }


                debug("Current size not notified, notifying...");
                state.lastNotifiedWidth = state.lastWidth;
                state.lastNotifiedHeight = state.lastHeight;
                forEach(getState(element).listeners, function (listener) {
                    listener(element);
                });
            }

            function handleRender() {
                debug("startanimation triggered.");

                if (isUnrendered(element)) {
                    debug("Ignoring since element is still unrendered...");
                    return;
                }

                debug("Element rendered.");
                var expand = getExpandElement(element);
                var shrink = getShrinkElement(element);
                if (expand.scrollLeft === 0 || expand.scrollTop === 0 || shrink.scrollLeft === 0 || shrink.scrollTop === 0) {
                    debug("Scrollbars out of sync. Updating detector elements...");
                    updateDetectorElements(notifyListenersIfNeeded);
                }
            }

            function handleScroll() {
                debug("Scroll detected.");

                if (isUnrendered(element)) {
                    // Element is still unrendered. Skip this scroll event.
                    debug("Scroll event fired while unrendered. Ignoring...");
                    return;
                }

                var width = element.offsetWidth;
                var height = element.offsetHeight;

                if (width !== getState(element).lastWidth || height !== getState(element).lastHeight) {
                    debug("Element size changed.");
                    updateDetectorElements(notifyListenersIfNeeded);
                } else {
                    debug("Element size has not changed (" + width + "x" + height + ").");
                }
            }

            debug("registerListenersAndPositionElements invoked.");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            getState(element).onRendered = handleRender;
            getState(element).onExpand = handleScroll;
            getState(element).onShrink = handleScroll;

            var style = getState(element).style;
            updateChildSizes(element, style.width, style.height);
        }

        function finalizeDomMutation() {
            debug("finalizeDomMutation invoked.");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            var style = getState(element).style;
            storeCurrentSize(element, style.width, style.height);
            positionScrollbars(element, style.width, style.height);
        }

        function ready() {
            callback(element);
        }

        function install() {
            debug("Installing...");
            initListeners();
            storeStartSize();

            batchProcessor.add(0, storeStyle);
            batchProcessor.add(1, injectScrollElements);
            batchProcessor.add(2, registerListenersAndPositionElements);
            batchProcessor.add(3, finalizeDomMutation);
            batchProcessor.add(4, ready);
        }

        debug("Making detectable...");

        if (isDetached(element)) {
            debug("Element is detached");

            injectContainerElement();

            debug("Waiting until element is attached...");

            getState(element).onRendered = function () {
                debug("Element is now attached");
                install();
            };
        } else {
            install();
        }
    }

    function uninstall(element) {
        var state = getState(element);

        if (!state) {
            // Uninstall has been called on a non-erd element.
            return;
        }

        // Uninstall may have been called in the following scenarios:
        // (1) Right between the sync code and async batch (here state.busy = true, but nothing have been registered or injected).
        // (2) In the ready callback of the last level of the batch by another element (here, state.busy = true, but all the stuff has been injected).
        // (3) After the installation process (here, state.busy = false and all the stuff has been injected).
        // So to be on the safe side, let's check for each thing before removing.

        // We need to remove the event listeners, because otherwise the event might fire on an uninstall element which results in an error when trying to get the state of the element.
        state.onExpandScroll && removeEvent(getExpandElement(element), "scroll", state.onExpandScroll);
        state.onShrinkScroll && removeEvent(getShrinkElement(element), "scroll", state.onShrinkScroll);
        state.onAnimationStart && removeEvent(state.container, "animationstart", state.onAnimationStart);

        state.container && element.removeChild(state.container);
    }

    return {
        makeDetectable: makeDetectable,
        addListener: addListener,
        uninstall: uninstall
    };
};


/***/ }),
/* 144 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incident__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incident___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_incident__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__css_color__ = __webpack_require__(145);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__display_simple_button__ = __webpack_require__(76);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shape_fill_style__ = __webpack_require__(108);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shape_line_style__ = __webpack_require__(109);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shape_morph_fill_style__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shape_morph_line_style__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__shape_morph_path__ = __webpack_require__(113);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__shape_path__ = __webpack_require__(110);









function lerp(start, end, ratio) {
    return end * ratio + start * (1 - ratio);
}
function lerpRgba(start, end, ratio) {
    return {
        r: lerp(start.r, end.r, ratio),
        g: lerp(start.g, end.g, ratio),
        b: lerp(start.b, end.b, ratio),
        a: lerp(start.a, end.a, ratio),
    };
}
function clamp(x, min, max) {
    return Math.min(Math.max(x, min), max);
}
class CanvasRenderer {
    constructor(context, width, height) {
        this.context = context;
        this.width = width;
        this.height = height;
    }
    updateSize(width, height) {
        this.width = width;
        this.height = height;
    }
    render(stage) {
        this.renderStage(stage);
    }
    renderDisplayObject(displayObject) {
        const visitor = {
            visitStage: stage => this.renderStage(stage),
            visitSprite: sprite => this.renderSprite(sprite),
            visitLoader: loader => this.renderLoader(loader),
            visitShape: shape => this.renderShape(shape),
            visitMorphShape: morphShape => this.renderMorphShape(morphShape),
            visitSimpleButton: simpleButton => this.renderSimpleButton(simpleButton),
        };
        displayObject.visit(visitor);
    }
    renderStage(stage) {
        this.context.setTransform(1, 0, 0, 1, 0, 0);
        this.context.clearRect(0, 0, this.width, this.height);
        // TODO: FillRect with background color?
        this.context.scale(1 / 20, 1 / 20);
        for (const child of stage.children) {
            this.renderDisplayObject(child);
        }
    }
    renderSprite(sprite) {
        this.context.save();
        try {
            if (sprite.matrix !== undefined) {
                this.applyMatrix(sprite.matrix);
            }
            for (const child of sprite.children) {
                this.renderDisplayObject(child);
            }
        }
        catch (err) {
            throw err;
        }
        finally {
            this.context.restore();
        }
    }
    renderSimpleButton(simpleButton) {
        switch (simpleButton.state) {
            case __WEBPACK_IMPORTED_MODULE_2__display_simple_button__["a" /* ButtonState */].Up:
                if (simpleButton.upState !== undefined) {
                    this.renderDisplayObject(simpleButton.upState);
                }
                break;
            case __WEBPACK_IMPORTED_MODULE_2__display_simple_button__["a" /* ButtonState */].Down:
                if (simpleButton.downState !== undefined) {
                    this.renderDisplayObject(simpleButton.downState);
                }
                break;
            case __WEBPACK_IMPORTED_MODULE_2__display_simple_button__["a" /* ButtonState */].Over:
                if (simpleButton.overState !== undefined) {
                    this.renderDisplayObject(simpleButton.overState);
                }
                break;
            case __WEBPACK_IMPORTED_MODULE_2__display_simple_button__["a" /* ButtonState */].HitTest:
                if (simpleButton.hitTestState !== undefined) {
                    this.renderDisplayObject(simpleButton.hitTestState);
                }
                break;
            default:
                throw new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("UnexpectedSwitchVariant", simpleButton.state);
        }
    }
    renderLoader(loader) {
        // console.log("Rendering loader");
    }
    renderShape(shape) {
        this.drawShape(shape);
    }
    renderMorphShape(morphShape) {
        this.drawMorphShape(morphShape, morphShape.ratio);
    }
    applyMatrix(matrix) {
        this.context.transform(matrix.scaleX.valueOf(), matrix.rotateSkew0.valueOf(), matrix.rotateSkew1.valueOf(), matrix.scaleY.valueOf(), matrix.translateX, matrix.translateY);
    }
    drawMorphShape(shape, ratio) {
        this.context.save();
        try {
            if (shape.matrix !== undefined) {
                this.applyMatrix(shape.matrix);
            }
            for (const path of shape.character.paths) {
                this.drawMorphPath(path, ratio);
            }
        }
        catch (err) {
            throw err;
        }
        finally {
            this.context.restore();
        }
    }
    drawShape(shape) {
        this.context.save();
        try {
            if (shape.matrix !== undefined) {
                this.applyMatrix(shape.matrix);
            }
            for (const path of shape.character.paths) {
                this.drawPath(path);
            }
        }
        catch (err) {
            throw err;
        }
        finally {
            this.context.restore();
        }
    }
    drawMorphPath(path, ratio) {
        if (path.fill === undefined && path.line === undefined || path.commands.length === 0) {
            return;
        }
        this.context.beginPath();
        for (const command of path.commands) {
            switch (command.type) {
                case __WEBPACK_IMPORTED_MODULE_7__shape_morph_path__["a" /* MorphCommandType */].CurveTo:
                    this.context.quadraticCurveTo(lerp(command.controlX[0], command.controlY[1], ratio), lerp(command.controlY[0], command.controlY[1], ratio), lerp(command.endX[0], command.endX[1], ratio), lerp(command.endY[0], command.endY[1], ratio));
                    break;
                case __WEBPACK_IMPORTED_MODULE_7__shape_morph_path__["a" /* MorphCommandType */].LineTo:
                    this.context.lineTo(lerp(command.endX[0], command.endX[1], ratio), lerp(command.endY[0], command.endY[1], ratio));
                    break;
                case __WEBPACK_IMPORTED_MODULE_7__shape_morph_path__["a" /* MorphCommandType */].MoveTo:
                    this.context.moveTo(lerp(command.x[0], command.x[1], ratio), lerp(command.y[0], command.y[1], ratio));
                    break;
                default:
                    throw new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("UnexpectedMorphCommand", { command });
            }
        }
        if (path.fill !== undefined) {
            switch (path.fill.type) {
                case __WEBPACK_IMPORTED_MODULE_5__shape_morph_fill_style__["a" /* MorphFillStyleType */].Solid:
                    this.context.fillStyle = Object(__WEBPACK_IMPORTED_MODULE_1__css_color__["a" /* fromNormalizedColor */])(lerpRgba(path.fill.startColor, path.fill.endColor, ratio));
                    break;
                default:
                    throw new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("NotImplementedFillStyle", { style: path.fill });
            }
            this.context.fill();
        }
        if (path.line !== undefined) {
            switch (path.line.type) {
                case __WEBPACK_IMPORTED_MODULE_6__shape_morph_line_style__["a" /* MorphLineStyleType */].Solid:
                    this.context.lineWidth = lerp(path.line.width[0], path.line.width[1], ratio);
                    this.context.strokeStyle = Object(__WEBPACK_IMPORTED_MODULE_1__css_color__["a" /* fromNormalizedColor */])(lerpRgba(path.line.startColor, path.line.endColor, ratio));
                    break;
                default:
                    throw new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("NotImplementedLineStyle", { style: path.line });
            }
            this.context.lineCap = "round";
            this.context.lineJoin = "round";
            this.context.stroke();
        }
    }
    drawPath(path) {
        if (path.fill === undefined && path.line === undefined || path.commands.length === 0) {
            return;
        }
        this.context.beginPath();
        for (const command of path.commands) {
            switch (command.type) {
                case __WEBPACK_IMPORTED_MODULE_8__shape_path__["a" /* CommandType */].CurveTo:
                    this.context.quadraticCurveTo(command.controlX, command.controlY, command.endX, command.endY);
                    break;
                case __WEBPACK_IMPORTED_MODULE_8__shape_path__["a" /* CommandType */].LineTo:
                    this.context.lineTo(command.endX, command.endY);
                    break;
                case __WEBPACK_IMPORTED_MODULE_8__shape_path__["a" /* CommandType */].MoveTo:
                    this.context.moveTo(command.x, command.y);
                    break;
                default:
                    throw new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("UnexpectedCommand", { command });
            }
        }
        if (path.fill !== undefined) {
            this.context.save();
            switch (path.fill.type) {
                case __WEBPACK_IMPORTED_MODULE_3__shape_fill_style__["a" /* FillStyleType */].Bitmap:
                    this.context.fillStyle = Object(__WEBPACK_IMPORTED_MODULE_1__css_color__["a" /* fromNormalizedColor */])({
                        r: 0.2,
                        g: 0.6,
                        b: 0.8,
                        a: 0.9,
                    });
                    break;
                case __WEBPACK_IMPORTED_MODULE_3__shape_fill_style__["a" /* FillStyleType */].Solid:
                    this.context.fillStyle = Object(__WEBPACK_IMPORTED_MODULE_1__css_color__["a" /* fromNormalizedColor */])(path.fill.color);
                    break;
                case __WEBPACK_IMPORTED_MODULE_3__shape_fill_style__["a" /* FillStyleType */].FocalGradient:
                    this.applyMatrix(path.fill.matrix);
                    const GRAD_RADIUS = 16384;
                    const gradient = this.context.createRadialGradient(lerp(0, GRAD_RADIUS, path.fill.focalPoint), 0, 0, 0, 0, GRAD_RADIUS);
                    for (const colorStop of path.fill.gradient.colors) {
                        gradient.addColorStop(colorStop.ratio, Object(__WEBPACK_IMPORTED_MODULE_1__css_color__["a" /* fromNormalizedColor */])(colorStop.color));
                    }
                    this.context.fillStyle = gradient;
                    break;
                default:
                    throw new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("NotImplementedFillStyle", { style: path.fill });
            }
            this.context.fill();
            this.context.restore();
        }
        if (path.line !== undefined) {
            switch (path.line.type) {
                case __WEBPACK_IMPORTED_MODULE_4__shape_line_style__["a" /* LineStyleType */].Solid:
                    this.context.lineWidth = path.line.width;
                    this.context.strokeStyle = Object(__WEBPACK_IMPORTED_MODULE_1__css_color__["a" /* fromNormalizedColor */])(path.line.color);
                    break;
                default:
                    throw new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("NotImplementedLineStyle", { style: path.line });
            }
            this.context.stroke();
        }
    }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = CanvasRenderer;



/***/ }),
/* 145 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = fromNormalizedColor;
/**
 * Converts a normalized color a css color
 */
function fromNormalizedColor(color) {
    return `rgba(${color.r * 255}, ${color.g * 255}, ${color.b * 255}, ${color.a})`;
}


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Add = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Add }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2FkZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLElBQUksR0FBd0IsSUFBSSx1QkFBWSxDQUFNO0lBQzdELFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxHQUFxQixFQUFDLENBQUMsRUFBQztLQUM5RjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9hZGQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEFkZCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuQWRkO1xufVxuXG5leHBvcnQgY29uc3QgJEFkZDogRG9jdW1lbnRJb1R5cGU8QWRkPiA9IG5ldyBEb2N1bWVudFR5cGU8QWRkPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5BZGQgYXMgQWN0aW9uVHlwZS5BZGR9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
exports.name = "InvalidDocument";
function createInvalidDocumentError(data) {
    if (data.extra === undefined) {
        Reflect.deleteProperty(data, "extra");
    }
    return incident_1.Incident(exports.name, data);
}
exports.createInvalidDocumentError = createInvalidDocumentError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2ludmFsaWQtZG9jdW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMsaUJBQWlCLENBQUM7QUF3QjVDLG9DQUEyQyxJQUFVO0lBQ25ELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztRQUM3QixPQUFPLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBQ0QsTUFBTSxDQUFDLG1CQUFRLENBQUMsWUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQzlCLENBQUM7QUFMRCxnRUFLQyIsImZpbGUiOiJlcnJvcnMvaW52YWxpZC1kb2N1bWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluY2lkZW50IH0gZnJvbSBcImluY2lkZW50XCI7XG5cbmV4cG9ydCB0eXBlIE5hbWUgPSBcIkludmFsaWREb2N1bWVudFwiO1xuZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcIkludmFsaWREb2N1bWVudFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICAvKipcbiAgICogRXh0cmEgcHJvcGVydGllcy5cbiAgICogSWYgdGhpcyBlcnJvciBpcyB0aHJvd24gZHVyaW5nIGEgcmVhZCBvcGVyYXRpb24sIHRoZSBrZXlzIGluIHRoaXMgc2V0IGNvcnJlc3BvbmQgdG8gdGhlXG4gICAqIHJhdyBrZXlzIG9mIHRoZSBpbnB1dCBkb2N1bWVudCAoZXZlbiBpZiBhIGByZW5hbWVgIGlzIGFwcGxpZWQpLlxuICAgKi9cbiAgZXh0cmE/OiBTZXQ8c3RyaW5nPjtcblxuICAvKipcbiAgICogTWlzc2luZyBwcm9wZXJ0aWVzLlxuICAgKi9cbiAgbWlzc2luZzogU2V0PHN0cmluZz47XG5cbiAgLyoqXG4gICAqIEludmFsaWQgcHJvcGVydGllcyAoYW5kIGFzc29jaWF0ZWQgZXJyb3IpLlxuICAgKi9cbiAgaW52YWxpZDogTWFwPHN0cmluZywgRXJyb3I+O1xufVxuXG5leHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbmV4cG9ydCB0eXBlIEludmFsaWREb2N1bWVudEVycm9yID0gSW5jaWRlbnQ8RGF0YSwgTmFtZSwgQ2F1c2U+O1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSW52YWxpZERvY3VtZW50RXJyb3IoZGF0YTogRGF0YSk6IEludmFsaWREb2N1bWVudEVycm9yIHtcbiAgaWYgKGRhdGEuZXh0cmEgPT09IHVuZGVmaW5lZCkge1xuICAgIFJlZmxlY3QuZGVsZXRlUHJvcGVydHkoZGF0YSwgXCJleHRyYVwiKTtcbiAgfVxuICByZXR1cm4gSW5jaWRlbnQobmFtZSwgZGF0YSk7XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Add2 = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Add2 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2FkZDIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxLQUFLLEdBQXlCLElBQUksdUJBQVksQ0FBTztJQUNoRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsSUFBdUIsRUFBQyxDQUFDLEVBQUM7S0FDaEc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvYWRkMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWRkMiBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuQWRkMjtcbn1cblxuZXhwb3J0IGNvbnN0ICRBZGQyOiBEb2N1bWVudElvVHlwZTxBZGQyPiA9IG5ldyBEb2N1bWVudFR5cGU8QWRkMj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuQWRkMiBhcyBBY3Rpb25UeXBlLkFkZDJ9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$And = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.And }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2FuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLElBQUksR0FBd0IsSUFBSSx1QkFBWSxDQUFNO0lBQzdELFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxHQUFxQixFQUFDLENBQUMsRUFBQztLQUM5RjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9hbmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEFuZCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuQW5kO1xufVxuXG5leHBvcnQgY29uc3QgJEFuZDogRG9jdW1lbnRJb1R5cGU8QW5kPiA9IG5ldyBEb2N1bWVudFR5cGU8QW5kPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5BbmQgYXMgQWN0aW9uVHlwZS5BbmR9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$AsciiToChar = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.AsciiToChar }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2FzY2lpLXRvLWNoYXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxZQUFZLEdBQWdDLElBQUksdUJBQVksQ0FBYztJQUNyRixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsV0FBcUMsRUFBQyxDQUFDLEVBQUM7S0FDOUc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvYXNjaWktdG8tY2hhci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXNjaWlUb0NoYXIgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkFzY2lpVG9DaGFyO1xufVxuXG5leHBvcnQgY29uc3QgJEFzY2lpVG9DaGFyOiBEb2N1bWVudElvVHlwZTxBc2NpaVRvQ2hhcj4gPSBuZXcgRG9jdW1lbnRUeXBlPEFzY2lpVG9DaGFyPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5Bc2NpaVRvQ2hhciBhcyBBY3Rpb25UeXBlLkFzY2lpVG9DaGFyfSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$BitAnd = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.BitAnd }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2JpdC1hbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxPQUFPLEdBQTJCLElBQUksdUJBQVksQ0FBUztJQUN0RSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsTUFBMkIsRUFBQyxDQUFDLEVBQUM7S0FDcEc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvYml0LWFuZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQml0QW5kIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5CaXRBbmQ7XG59XG5cbmV4cG9ydCBjb25zdCAkQml0QW5kOiBEb2N1bWVudElvVHlwZTxCaXRBbmQ+ID0gbmV3IERvY3VtZW50VHlwZTxCaXRBbmQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkJpdEFuZCBhcyBBY3Rpb25UeXBlLkJpdEFuZH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$BitLShift = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.BitLShift }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2JpdC1sLXNoaWZ0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsVUFBVSxHQUE4QixJQUFJLHVCQUFZLENBQVk7SUFDL0UsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQWlDLEVBQUMsQ0FBQyxFQUFDO0tBQzFHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL2JpdC1sLXNoaWZ0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBCaXRMU2hpZnQgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkJpdExTaGlmdDtcbn1cblxuZXhwb3J0IGNvbnN0ICRCaXRMU2hpZnQ6IERvY3VtZW50SW9UeXBlPEJpdExTaGlmdD4gPSBuZXcgRG9jdW1lbnRUeXBlPEJpdExTaGlmdD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuQml0TFNoaWZ0IGFzIEFjdGlvblR5cGUuQml0TFNoaWZ0fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$BitOr = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.BitOr }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2JpdC1vci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLE1BQU0sR0FBMEIsSUFBSSx1QkFBWSxDQUFRO0lBQ25FLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxLQUF5QixFQUFDLENBQUMsRUFBQztLQUNsRztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9iaXQtb3IuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEJpdE9yIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5CaXRPcjtcbn1cblxuZXhwb3J0IGNvbnN0ICRCaXRPcjogRG9jdW1lbnRJb1R5cGU8Qml0T3I+ID0gbmV3IERvY3VtZW50VHlwZTxCaXRPcj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuQml0T3IgYXMgQWN0aW9uVHlwZS5CaXRPcn0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$BitRShift = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.BitRShift }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2JpdC1yLXNoaWZ0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsVUFBVSxHQUE4QixJQUFJLHVCQUFZLENBQVk7SUFDL0UsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQWlDLEVBQUMsQ0FBQyxFQUFDO0tBQzFHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL2JpdC1yLXNoaWZ0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBCaXRSU2hpZnQgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkJpdFJTaGlmdDtcbn1cblxuZXhwb3J0IGNvbnN0ICRCaXRSU2hpZnQ6IERvY3VtZW50SW9UeXBlPEJpdFJTaGlmdD4gPSBuZXcgRG9jdW1lbnRUeXBlPEJpdFJTaGlmdD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuQml0UlNoaWZ0IGFzIEFjdGlvblR5cGUuQml0UlNoaWZ0fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$BitURShift = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.BitURShift }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2JpdC11LXItc2hpZnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxXQUFXLEdBQStCLElBQUksdUJBQVksQ0FBYTtJQUNsRixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsVUFBbUMsRUFBQyxDQUFDLEVBQUM7S0FDNUc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvYml0LXUtci1zaGlmdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQml0VVJTaGlmdCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuQml0VVJTaGlmdDtcbn1cblxuZXhwb3J0IGNvbnN0ICRCaXRVUlNoaWZ0OiBEb2N1bWVudElvVHlwZTxCaXRVUlNoaWZ0PiA9IG5ldyBEb2N1bWVudFR5cGU8Qml0VVJTaGlmdD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuQml0VVJTaGlmdCBhcyBBY3Rpb25UeXBlLkJpdFVSU2hpZnR9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$BitXor = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.BitXor }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2JpdC14b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxPQUFPLEdBQTJCLElBQUksdUJBQVksQ0FBUztJQUN0RSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsTUFBMkIsRUFBQyxDQUFDLEVBQUM7S0FDcEc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvYml0LXhvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQml0WG9yIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5CaXRYb3I7XG59XG5cbmV4cG9ydCBjb25zdCAkQml0WG9yOiBEb2N1bWVudElvVHlwZTxCaXRYb3I+ID0gbmV3IERvY3VtZW50VHlwZTxCaXRYb3I+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkJpdFhvciBhcyBBY3Rpb25UeXBlLkJpdFhvcn0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Call = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Call }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2NhbGwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxLQUFLLEdBQXlCLElBQUksdUJBQVksQ0FBTztJQUNoRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsSUFBdUIsRUFBQyxDQUFDLEVBQUM7S0FDaEc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvY2FsbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2FsbCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuQ2FsbDtcbn1cblxuZXhwb3J0IGNvbnN0ICRDYWxsOiBEb2N1bWVudElvVHlwZTxDYWxsPiA9IG5ldyBEb2N1bWVudFR5cGU8Q2FsbD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuQ2FsbCBhcyBBY3Rpb25UeXBlLkNhbGx9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$CallFunction = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.CallFunction }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2NhbGwtZnVuY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxhQUFhLEdBQWlDLElBQUksdUJBQVksQ0FBZTtJQUN4RixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsWUFBdUMsRUFBQyxDQUFDLEVBQUM7S0FDaEg7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvY2FsbC1mdW5jdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2FsbEZ1bmN0aW9uIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5DYWxsRnVuY3Rpb247XG59XG5cbmV4cG9ydCBjb25zdCAkQ2FsbEZ1bmN0aW9uOiBEb2N1bWVudElvVHlwZTxDYWxsRnVuY3Rpb24+ID0gbmV3IERvY3VtZW50VHlwZTxDYWxsRnVuY3Rpb24+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkNhbGxGdW5jdGlvbiBhcyBBY3Rpb25UeXBlLkNhbGxGdW5jdGlvbn0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$CallMethod = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.CallMethod }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2NhbGwtbWV0aG9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFVBQW1DLEVBQUMsQ0FBQyxFQUFDO0tBQzVHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL2NhbGwtbWV0aG9kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDYWxsTWV0aG9kIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5DYWxsTWV0aG9kO1xufVxuXG5leHBvcnQgY29uc3QgJENhbGxNZXRob2Q6IERvY3VtZW50SW9UeXBlPENhbGxNZXRob2Q+ID0gbmV3IERvY3VtZW50VHlwZTxDYWxsTWV0aG9kPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5DYWxsTWV0aG9kIGFzIEFjdGlvblR5cGUuQ2FsbE1ldGhvZH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$CastOp = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.CastOp }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2Nhc3Qtb3AudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxPQUFPLEdBQTJCLElBQUksdUJBQVksQ0FBUztJQUN0RSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsTUFBMkIsRUFBQyxDQUFDLEVBQUM7S0FDcEc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvY2FzdC1vcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2FzdE9wIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5DYXN0T3A7XG59XG5cbmV4cG9ydCBjb25zdCAkQ2FzdE9wOiBEb2N1bWVudElvVHlwZTxDYXN0T3A+ID0gbmV3IERvY3VtZW50VHlwZTxDYXN0T3A+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkNhc3RPcCBhcyBBY3Rpb25UeXBlLkNhc3RPcH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$CharToAscii = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.CharToAscii }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2NoYXItdG8tYXNjaWkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxZQUFZLEdBQWdDLElBQUksdUJBQVksQ0FBYztJQUNyRixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsV0FBcUMsRUFBQyxDQUFDLEVBQUM7S0FDOUc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvY2hhci10by1hc2NpaS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2hhclRvQXNjaWkgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkNoYXJUb0FzY2lpO1xufVxuXG5leHBvcnQgY29uc3QgJENoYXJUb0FzY2lpOiBEb2N1bWVudElvVHlwZTxDaGFyVG9Bc2NpaT4gPSBuZXcgRG9jdW1lbnRUeXBlPENoYXJUb0FzY2lpPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5DaGFyVG9Bc2NpaSBhcyBBY3Rpb25UeXBlLkNoYXJUb0FzY2lpfSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$CloneSprite = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.CloneSprite }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2Nsb25lLXNwcml0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLFlBQVksR0FBZ0MsSUFBSSx1QkFBWSxDQUFjO0lBQ3JGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxXQUFxQyxFQUFDLENBQUMsRUFBQztLQUM5RztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9jbG9uZS1zcHJpdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENsb25lU3ByaXRlIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5DbG9uZVNwcml0ZTtcbn1cblxuZXhwb3J0IGNvbnN0ICRDbG9uZVNwcml0ZTogRG9jdW1lbnRJb1R5cGU8Q2xvbmVTcHJpdGU+ID0gbmV3IERvY3VtZW50VHlwZTxDbG9uZVNwcml0ZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuQ2xvbmVTcHJpdGUgYXMgQWN0aW9uVHlwZS5DbG9uZVNwcml0ZX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const action_type_1 = __webpack_require__(3);
exports.$ConstantPool = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.ConstantPool }) },
        constantPool: { type: new array_1.ArrayType({ itemType: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }), maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2NvbnN0YW50LXBvb2wudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsd0RBQXdEO0FBQ3hELGdEQUF5RDtBQVE1QyxRQUFBLGFBQWEsR0FBaUMsSUFBSSx1QkFBWSxDQUFlO0lBQ3hGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxZQUF1QyxFQUFDLENBQUMsRUFBQztRQUMvRyxZQUFZLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQ2hIO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL2NvbnN0YW50LXBvb2wuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDb25zdGFudFBvb2wgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkNvbnN0YW50UG9vbDtcbiAgY29uc3RhbnRQb29sOiBzdHJpbmdbXTtcbn1cblxuZXhwb3J0IGNvbnN0ICRDb25zdGFudFBvb2w6IERvY3VtZW50SW9UeXBlPENvbnN0YW50UG9vbD4gPSBuZXcgRG9jdW1lbnRUeXBlPENvbnN0YW50UG9vbD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuQ29uc3RhbnRQb29sIGFzIEFjdGlvblR5cGUuQ29uc3RhbnRQb29sfSl9LFxuICAgIGNvbnN0YW50UG9vbDoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
exports.name = "InvalidArrayItems";
function createInvalidArrayItemsError(invalid) {
    return incident_1.Incident(exports.name, { invalid });
}
exports.createInvalidArrayItemsError = createInvalidArrayItemsError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2ludmFsaWQtYXJyYXktaXRlbXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMsbUJBQW1CLENBQUM7QUFZOUMsc0NBQTZDLE9BQTJCO0lBQ3RFLE1BQU0sQ0FBQyxtQkFBUSxDQUFDLFlBQUksRUFBRSxFQUFDLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFDbkMsQ0FBQztBQUZELG9FQUVDIiwiZmlsZSI6ImVycm9ycy9pbnZhbGlkLWFycmF5LWl0ZW1zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IHR5cGUgTmFtZSA9IFwiSW52YWxpZEFycmF5SXRlbXNcIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJJbnZhbGlkQXJyYXlJdGVtc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICAvKipcbiAgICogTWFwIGZyb20gaXRlbSBpbmRleCB0byBlcnJvci5cbiAgICovXG4gIGludmFsaWQ6IE1hcDxudW1iZXIsIEVycm9yPjtcbn1cblxuZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG5leHBvcnQgdHlwZSBJbnZhbGlkQXJyYXlJdGVtc0Vycm9yID0gSW5jaWRlbnQ8RGF0YSwgTmFtZSwgQ2F1c2U+O1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSW52YWxpZEFycmF5SXRlbXNFcnJvcihpbnZhbGlkOiBNYXA8bnVtYmVyLCBFcnJvcj4pOiBJbnZhbGlkQXJyYXlJdGVtc0Vycm9yIHtcbiAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHtpbnZhbGlkfSk7XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
exports.name = "LowerCase";
function format({ string }) {
    return `Expected the following string to be lowercase: ${JSON.stringify(string)}`;
}
exports.format = format;
function createLowerCaseError(string) {
    return incident_1.Incident(exports.name, { string }, format);
}
exports.createLowerCaseError = createLowerCaseError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2xvd2VyLWNhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMsV0FBVyxDQUFDO0FBU3RDLGdCQUF1QixFQUFDLE1BQU0sRUFBTztJQUNuQyxNQUFNLENBQUMsa0RBQWtELElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQztBQUNwRixDQUFDO0FBRkQsd0JBRUM7QUFFRCw4QkFBcUMsTUFBYztJQUNqRCxNQUFNLENBQUMsbUJBQVEsQ0FBQyxZQUFJLEVBQUUsRUFBQyxNQUFNLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUMxQyxDQUFDO0FBRkQsb0RBRUMiLCJmaWxlIjoiZXJyb3JzL2xvd2VyLWNhc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmNpZGVudCB9IGZyb20gXCJpbmNpZGVudFwiO1xuXG5leHBvcnQgdHlwZSBOYW1lID0gXCJMb3dlckNhc2VcIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJMb3dlckNhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEYXRhIHtcbiAgc3RyaW5nOiBzdHJpbmc7XG59XG5cbmV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuZXhwb3J0IHR5cGUgTG93ZXJDYXNlRXJyb3IgPSBJbmNpZGVudDxEYXRhLCBOYW1lLCBDYXVzZT47XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe3N0cmluZ306IERhdGEpOiBzdHJpbmcge1xuICByZXR1cm4gYEV4cGVjdGVkIHRoZSBmb2xsb3dpbmcgc3RyaW5nIHRvIGJlIGxvd2VyY2FzZTogJHtKU09OLnN0cmluZ2lmeShzdHJpbmcpfWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVMb3dlckNhc2VFcnJvcihzdHJpbmc6IHN0cmluZyk6IExvd2VyQ2FzZUVycm9yIHtcbiAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHtzdHJpbmd9LCBmb3JtYXQpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
exports.name = "MaxUcs2StringLength";
function format({ string, max }) {
    return `Expected length of UCS2 string (${string.length}) to be less than or equal to ${max}`;
}
exports.format = format;
function createMaxUcs2StringLengthError(string, max) {
    return incident_1.Incident(exports.name, { string, max }, format);
}
exports.createMaxUcs2StringLengthError = createMaxUcs2StringLengthError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL21heC11Y3MyLXN0cmluZy1sZW5ndGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMscUJBQXFCLENBQUM7QUFVaEQsZ0JBQXVCLEVBQUMsTUFBTSxFQUFFLEdBQUcsRUFBTztJQUN4QyxNQUFNLENBQUMsbUNBQW1DLE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUFHLEVBQUUsQ0FBQztBQUNoRyxDQUFDO0FBRkQsd0JBRUM7QUFFRCx3Q0FBK0MsTUFBYyxFQUFFLEdBQVc7SUFDeEUsTUFBTSxDQUFDLG1CQUFRLENBQUMsWUFBSSxFQUFFLEVBQUMsTUFBTSxFQUFFLEdBQUcsRUFBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQy9DLENBQUM7QUFGRCx3RUFFQyIsImZpbGUiOiJlcnJvcnMvbWF4LXVjczItc3RyaW5nLWxlbmd0aC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluY2lkZW50IH0gZnJvbSBcImluY2lkZW50XCI7XG5cbmV4cG9ydCB0eXBlIE5hbWUgPSBcIk1heFVjczJTdHJpbmdMZW5ndGhcIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJNYXhVY3MyU3RyaW5nTGVuZ3RoXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gIHN0cmluZzogc3RyaW5nO1xuICBtYXg6IG51bWJlcjtcbn1cblxuZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG5leHBvcnQgdHlwZSBNYXhVY3MyU3RyaW5nTGVuZ3RoRXJyb3IgPSBJbmNpZGVudDxEYXRhLCBOYW1lLCBDYXVzZT47XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe3N0cmluZywgbWF4fTogRGF0YSk6IHN0cmluZyB7XG4gIHJldHVybiBgRXhwZWN0ZWQgbGVuZ3RoIG9mIFVDUzIgc3RyaW5nICgke3N0cmluZy5sZW5ndGh9KSB0byBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gJHttYXh9YDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU1heFVjczJTdHJpbmdMZW5ndGhFcnJvcihzdHJpbmc6IHN0cmluZywgbWF4OiBudW1iZXIpOiBNYXhVY3MyU3RyaW5nTGVuZ3RoRXJyb3Ige1xuICByZXR1cm4gSW5jaWRlbnQobmFtZSwge3N0cmluZywgbWF4fSwgZm9ybWF0KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
exports.name = "MinUcs2StringLength";
function format({ string, min }) {
    return `Expected length of UCS2 string (${string.length}) to be greater than or equal to ${min}`;
}
exports.format = format;
function createMinUcs2StringLengthError(string, min) {
    return incident_1.Incident(exports.name, { string, min }, format);
}
exports.createMinUcs2StringLengthError = createMinUcs2StringLengthError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL21pbi11Y3MyLXN0cmluZy1sZW5ndGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMscUJBQXFCLENBQUM7QUFVaEQsZ0JBQXVCLEVBQUMsTUFBTSxFQUFFLEdBQUcsRUFBTztJQUN4QyxNQUFNLENBQUMsbUNBQW1DLE1BQU0sQ0FBQyxNQUFNLG9DQUFvQyxHQUFHLEVBQUUsQ0FBQztBQUNuRyxDQUFDO0FBRkQsd0JBRUM7QUFFRCx3Q0FBK0MsTUFBYyxFQUFFLEdBQVc7SUFDeEUsTUFBTSxDQUFDLG1CQUFRLENBQUMsWUFBSSxFQUFFLEVBQUMsTUFBTSxFQUFFLEdBQUcsRUFBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQy9DLENBQUM7QUFGRCx3RUFFQyIsImZpbGUiOiJlcnJvcnMvbWluLXVjczItc3RyaW5nLWxlbmd0aC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluY2lkZW50IH0gZnJvbSBcImluY2lkZW50XCI7XG5cbmV4cG9ydCB0eXBlIE5hbWUgPSBcIk1pblVjczJTdHJpbmdMZW5ndGhcIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJNaW5VY3MyU3RyaW5nTGVuZ3RoXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gIHN0cmluZzogc3RyaW5nO1xuICBtaW46IG51bWJlcjtcbn1cblxuZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG5leHBvcnQgdHlwZSBNaW5VY3MyU3RyaW5nTGVuZ3RoRXJyb3IgPSBJbmNpZGVudDxEYXRhLCBOYW1lLCBDYXVzZT47XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe3N0cmluZywgbWlufTogRGF0YSk6IHN0cmluZyB7XG4gIHJldHVybiBgRXhwZWN0ZWQgbGVuZ3RoIG9mIFVDUzIgc3RyaW5nICgke3N0cmluZy5sZW5ndGh9KSB0byBiZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gJHttaW59YDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU1pblVjczJTdHJpbmdMZW5ndGhFcnJvcihzdHJpbmc6IHN0cmluZywgbWluOiBudW1iZXIpOiBNaW5VY3MyU3RyaW5nTGVuZ3RoRXJyb3Ige1xuICByZXR1cm4gSW5jaWRlbnQobmFtZSwge3N0cmluZywgbWlufSwgZm9ybWF0KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
exports.name = "NotTrimmed";
function format({ string }) {
    return `Expected the following string to be trimmed: ${JSON.stringify(string)}`;
}
exports.format = format;
function createNotTrimmedError(string) {
    return incident_1.Incident(exports.name, { string }, format);
}
exports.createNotTrimmedError = createNotTrimmedError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL25vdC10cmltbWVkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQW9DO0FBR3ZCLFFBQUEsSUFBSSxHQUFTLFlBQVksQ0FBQztBQVN2QyxnQkFBdUIsRUFBQyxNQUFNLEVBQU87SUFDbkMsTUFBTSxDQUFDLGdEQUFnRCxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7QUFDbEYsQ0FBQztBQUZELHdCQUVDO0FBRUQsK0JBQXNDLE1BQWM7SUFDbEQsTUFBTSxDQUFDLG1CQUFRLENBQUMsWUFBSSxFQUFFLEVBQUMsTUFBTSxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDMUMsQ0FBQztBQUZELHNEQUVDIiwiZmlsZSI6ImVycm9ycy9ub3QtdHJpbW1lZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluY2lkZW50IH0gZnJvbSBcImluY2lkZW50XCI7XG5cbmV4cG9ydCB0eXBlIE5hbWUgPSBcIk5vdFRyaW1tZWRcIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJOb3RUcmltbWVkXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gIHN0cmluZzogc3RyaW5nO1xufVxuXG5leHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbmV4cG9ydCB0eXBlIE5vdFRyaW1tZWRFcnJvciA9IEluY2lkZW50PERhdGEsIE5hbWUsIENhdXNlPjtcblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7c3RyaW5nfTogRGF0YSk6IHN0cmluZyB7XG4gIHJldHVybiBgRXhwZWN0ZWQgdGhlIGZvbGxvd2luZyBzdHJpbmcgdG8gYmUgdHJpbW1lZDogJHtKU09OLnN0cmluZ2lmeShzdHJpbmcpfWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOb3RUcmltbWVkRXJyb3Ioc3RyaW5nOiBzdHJpbmcpOiBOb3RUcmltbWVkRXJyb3Ige1xuICByZXR1cm4gSW5jaWRlbnQobmFtZSwge3N0cmluZ30sIGZvcm1hdCk7XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
exports.name = "PatternNotMatched";
function format({ pattern, string }) {
    return `The regular expression ${pattern} does not match the string ${JSON.stringify(string)}`;
}
exports.format = format;
function createPatternNotMatchedError(pattern, string) {
    return incident_1.Incident(exports.name, { pattern, string }, format);
}
exports.createPatternNotMatchedError = createPatternNotMatchedError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL3BhdHRlcm4tbm90LW1hdGNoZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFHdkIsUUFBQSxJQUFJLEdBQVMsbUJBQW1CLENBQUM7QUFVOUMsZ0JBQXVCLEVBQUMsT0FBTyxFQUFFLE1BQU0sRUFBTztJQUM1QyxNQUFNLENBQUMsMEJBQTBCLE9BQU8sOEJBQThCLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQztBQUNqRyxDQUFDO0FBRkQsd0JBRUM7QUFFRCxzQ0FBNkMsT0FBZSxFQUFFLE1BQWM7SUFDMUUsTUFBTSxDQUFDLG1CQUFRLENBQUMsWUFBSSxFQUFFLEVBQUMsT0FBTyxFQUFFLE1BQU0sRUFBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQ25ELENBQUM7QUFGRCxvRUFFQyIsImZpbGUiOiJlcnJvcnMvcGF0dGVybi1ub3QtbWF0Y2hlZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluY2lkZW50IH0gZnJvbSBcImluY2lkZW50XCI7XG5cbmV4cG9ydCB0eXBlIE5hbWUgPSBcIlBhdHRlcm5Ob3RNYXRjaGVkXCI7XG5leHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiUGF0dGVybk5vdE1hdGNoZWRcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEYXRhIHtcbiAgc3RyaW5nOiBzdHJpbmc7XG4gIHBhdHRlcm46IFJlZ0V4cDtcbn1cblxuZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG5leHBvcnQgdHlwZSBQYXR0ZXJuTm90TWF0Y2hlZEVycm9yID0gSW5jaWRlbnQ8RGF0YSwgTmFtZSwgQ2F1c2U+O1xuXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0KHtwYXR0ZXJuLCBzdHJpbmd9OiBEYXRhKTogc3RyaW5nIHtcbiAgcmV0dXJuIGBUaGUgcmVndWxhciBleHByZXNzaW9uICR7cGF0dGVybn0gZG9lcyBub3QgbWF0Y2ggdGhlIHN0cmluZyAke0pTT04uc3RyaW5naWZ5KHN0cmluZyl9YDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBhdHRlcm5Ob3RNYXRjaGVkRXJyb3IocGF0dGVybjogUmVnRXhwLCBzdHJpbmc6IHN0cmluZyk6IFBhdHRlcm5Ob3RNYXRjaGVkRXJyb3Ige1xuICByZXR1cm4gSW5jaWRlbnQobmFtZSwge3BhdHRlcm4sIHN0cmluZ30sIGZvcm1hdCk7XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Decrement = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Decrement }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2RlY3JlbWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLFVBQVUsR0FBOEIsSUFBSSx1QkFBWSxDQUFZO0lBQy9FLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxTQUFpQyxFQUFDLENBQUMsRUFBQztLQUMxRztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9kZWNyZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlY3JlbWVudCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuRGVjcmVtZW50O1xufVxuXG5leHBvcnQgY29uc3QgJERlY3JlbWVudDogRG9jdW1lbnRJb1R5cGU8RGVjcmVtZW50PiA9IG5ldyBEb2N1bWVudFR5cGU8RGVjcmVtZW50Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5EZWNyZW1lbnQgYXMgQWN0aW9uVHlwZS5EZWNyZW1lbnR9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const action_1 = __webpack_require__(40);
const action_type_1 = __webpack_require__(3);
exports.$DefineFunction = new document_1.DocumentType(() => ({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.DefineFunction }) },
        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
        parameters: {
            type: new array_1.ArrayType({
                itemType: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }),
                maxLength: Infinity,
            }),
        },
        body: { type: new array_1.ArrayType({ itemType: action_1.$Action, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2RlZmluZS1mdW5jdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1Qyw0Q0FBNkM7QUFDN0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBd0Q7QUFDeEQsc0NBQTRDO0FBQzVDLGdEQUF5RDtBQVU1QyxRQUFBLGVBQWUsR0FBbUMsSUFBSSx1QkFBWSxDQUFpQixHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3JHLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxjQUEyQyxFQUFDLENBQUMsRUFBQztRQUNuSCxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSw0QkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7UUFDdkQsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQztnQkFDbEIsUUFBUSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQztnQkFDbkQsU0FBUyxFQUFFLFFBQVE7YUFDcEIsQ0FBQztTQUNIO1FBQ0QsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxnQkFBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQ3RFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvZGVmaW5lLWZ1bmN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVY3MyU3RyaW5nVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3VjczItc3RyaW5nXCI7XG5pbXBvcnQgeyAkQWN0aW9uLCBBY3Rpb24gfSBmcm9tIFwiLi4vYWN0aW9uXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lRnVuY3Rpb24gZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkRlZmluZUZ1bmN0aW9uO1xuICBuYW1lOiBzdHJpbmc7XG4gIHBhcmFtZXRlcnM6IHN0cmluZ1tdO1xuICBib2R5OiBBY3Rpb25bXTtcbn1cblxuZXhwb3J0IGNvbnN0ICREZWZpbmVGdW5jdGlvbjogRG9jdW1lbnRJb1R5cGU8RGVmaW5lRnVuY3Rpb24+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVGdW5jdGlvbj4oKCkgPT4gKHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkRlZmluZUZ1bmN0aW9uIGFzIEFjdGlvblR5cGUuRGVmaW5lRnVuY3Rpb259KX0sXG4gICAgbmFtZToge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBwYXJhbWV0ZXJzOiB7XG4gICAgICB0eXBlOiBuZXcgQXJyYXlUeXBlKHtcbiAgICAgICAgaXRlbVR5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pLFxuICAgICAgICBtYXhMZW5ndGg6IEluZmluaXR5LFxuICAgICAgfSksXG4gICAgfSxcbiAgICBib2R5OiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRBY3Rpb24sIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const action_1 = __webpack_require__(40);
const action_type_1 = __webpack_require__(3);
const parameter_1 = __webpack_require__(80);
exports.$DefineFunction2 = new document_1.DocumentType(() => ({
    properties: {
        action: {
            type: new literal_1.LiteralType({
                type: action_type_1.$ActionType,
                value: action_type_1.ActionType.DefineFunction2,
            }),
        },
        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
        preloadParent: { type: boolean_1.$Boolean },
        preloadRoot: { type: boolean_1.$Boolean },
        suppressSuper: { type: boolean_1.$Boolean },
        preloadSuper: { type: boolean_1.$Boolean },
        suppressArguments: { type: boolean_1.$Boolean },
        preloadArguments: { type: boolean_1.$Boolean },
        suppressThis: { type: boolean_1.$Boolean },
        preloadThis: { type: boolean_1.$Boolean },
        preloadGlobal: { type: boolean_1.$Boolean },
        registerCount: { type: new integer_1.IntegerType() },
        parameters: { type: new array_1.ArrayType({ itemType: parameter_1.$Parameter, maxLength: Infinity }) },
        body: { type: new array_1.ArrayType({ itemType: action_1.$Action, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2RlZmluZS1mdW5jdGlvbjIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtREFBaUQ7QUFDakQsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUFpRDtBQUNqRCx3REFBd0Q7QUFFeEQsc0NBQTRDO0FBQzVDLGdEQUF5RDtBQUN6RCw0Q0FBcUQ7QUFvQnhDLFFBQUEsZ0JBQWdCLEdBQW9DLElBQUksdUJBQVksQ0FBa0IsR0FBRyxFQUFFLENBQUMsQ0FBQztJQUN4RyxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUU7WUFDTixJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDO2dCQUNwQixJQUFJLEVBQUUseUJBQVc7Z0JBQ2pCLEtBQUssRUFBRSx3QkFBVSxDQUFDLGVBQTZDO2FBQ2hFLENBQUM7U0FDSDtRQUNELElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUN2RCxhQUFhLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMvQixXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUM3QixhQUFhLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMvQixZQUFZLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUM5QixpQkFBaUIsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ25DLGdCQUFnQixFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDbEMsWUFBWSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDOUIsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDN0IsYUFBYSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDL0IsYUFBYSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsRUFBRSxFQUFDO1FBQ3hDLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsc0JBQVUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUM5RSxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLGdCQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDdEU7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9kZWZpbmUtZnVuY3Rpb24yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2ludGVnZXJcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWNzMlN0cmluZ1R5cGUgfSBmcm9tIFwia3J5by90eXBlcy91Y3MyLXN0cmluZ1wiO1xuaW1wb3J0IHsgVWludFNpemUgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRBY3Rpb24sIEFjdGlvbiB9IGZyb20gXCIuLi9hY3Rpb25cIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyAkUGFyYW1ldGVyLCBQYXJhbWV0ZXIgfSBmcm9tIFwiLi4vcGFyYW1ldGVyXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVGdW5jdGlvbjIgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkRlZmluZUZ1bmN0aW9uMjtcbiAgbmFtZTogc3RyaW5nO1xuICBwcmVsb2FkUGFyZW50OiBib29sZWFuO1xuICBwcmVsb2FkUm9vdDogYm9vbGVhbjtcbiAgc3VwcHJlc3NTdXBlcjogYm9vbGVhbjtcbiAgcHJlbG9hZFN1cGVyOiBib29sZWFuO1xuICBzdXBwcmVzc0FyZ3VtZW50czogYm9vbGVhbjtcbiAgcHJlbG9hZEFyZ3VtZW50czogYm9vbGVhbjtcbiAgc3VwcHJlc3NUaGlzOiBib29sZWFuO1xuICBwcmVsb2FkVGhpczogYm9vbGVhbjtcbiAgcHJlbG9hZEdsb2JhbDogYm9vbGVhbjtcbiAgcmVnaXN0ZXJDb3VudDogVWludFNpemU7XG4gIHBhcmFtZXRlcnM6IFBhcmFtZXRlcltdO1xuICBib2R5OiBBY3Rpb25bXTtcbn1cblxuZXhwb3J0IGNvbnN0ICREZWZpbmVGdW5jdGlvbjI6IERvY3VtZW50SW9UeXBlPERlZmluZUZ1bmN0aW9uMj4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZUZ1bmN0aW9uMj4oKCkgPT4gKHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge1xuICAgICAgdHlwZTogbmV3IExpdGVyYWxUeXBlKHtcbiAgICAgICAgdHlwZTogJEFjdGlvblR5cGUsXG4gICAgICAgIHZhbHVlOiBBY3Rpb25UeXBlLkRlZmluZUZ1bmN0aW9uMiBhcyBBY3Rpb25UeXBlLkRlZmluZUZ1bmN0aW9uMixcbiAgICAgIH0pLFxuICAgIH0sXG4gICAgbmFtZToge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBwcmVsb2FkUGFyZW50OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHByZWxvYWRSb290OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHN1cHByZXNzU3VwZXI6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgcHJlbG9hZFN1cGVyOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHN1cHByZXNzQXJndW1lbnRzOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHByZWxvYWRBcmd1bWVudHM6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgc3VwcHJlc3NUaGlzOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHByZWxvYWRUaGlzOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHByZWxvYWRHbG9iYWw6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgcmVnaXN0ZXJDb3VudDoge3R5cGU6IG5ldyBJbnRlZ2VyVHlwZSgpfSxcbiAgICBwYXJhbWV0ZXJzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRQYXJhbWV0ZXIsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgYm9keToge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkQWN0aW9uLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSkpO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const invalid_type_1 = __webpack_require__(21);
const read_visitor_1 = __webpack_require__(18);
exports.name = "boolean";
class BooleanType {
    constructor() {
        this.name = exports.name;
    }
    toJSON() {
        /* tslint:disable-next-line:return-undefined */
        return undefined;
    }
    // TODO: Dynamically add with prototype?
    read(reader, raw) {
        return reader.readBoolean(raw, read_visitor_1.readVisitor({
            fromBoolean(input) {
                return input;
            },
        }));
    }
    // TODO: Dynamically add with prototype?
    write(writer, value) {
        return writer.writeBoolean(value);
    }
    testError(val) {
        if (typeof val !== "boolean") {
            return invalid_type_1.createInvalidTypeError("boolean", val);
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        return val1 === val2;
    }
    clone(val) {
        return val;
    }
    /**
     * @param oldVal
     * @param newVal
     * @returns `true` if there is a difference, `undefined` otherwise
     */
    diff(oldVal, newVal) {
        /* tslint:disable-next-line:strict-boolean-expressions */
        return (oldVal !== newVal) || undefined;
    }
    patch(oldVal, diff) {
        return oldVal === (diff === undefined);
    }
    reverseDiff(diff) {
        return diff;
    }
    squash(diff1, diff2) {
        /* tslint:disable-next-line:strict-boolean-expressions */
        return (diff1 !== diff2) && undefined;
    }
}
exports.BooleanType = BooleanType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdHlwZXMvYm9vbGVhbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlEQUFnRTtBQUNoRSwwREFBc0Q7QUFJekMsUUFBQSxJQUFJLEdBQVMsU0FBUyxDQUFDO0FBSXBDO0lBQUE7UUFDVyxTQUFJLEdBQVMsWUFBSSxDQUFDO0lBOEQ3QixDQUFDO0lBNURDLE1BQU07UUFDSiwrQ0FBK0M7UUFDL0MsTUFBTSxDQUFDLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRUQsd0NBQXdDO0lBQ3hDLElBQUksQ0FBSSxNQUFpQixFQUFFLEdBQU07UUFDL0IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFLDBCQUFXLENBQUM7WUFDekMsV0FBVyxDQUFDLEtBQWM7Z0JBQ3hCLE1BQU0sQ0FBQyxLQUFLLENBQUM7WUFDZixDQUFDO1NBQ0YsQ0FBQyxDQUFDLENBQUM7SUFDTixDQUFDO0lBRUQsd0NBQXdDO0lBQ3hDLEtBQUssQ0FBSSxNQUFpQixFQUFFLEtBQWM7UUFDeEMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELFNBQVMsQ0FBQyxHQUFZO1FBQ3BCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sR0FBRyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDN0IsTUFBTSxDQUFDLHFDQUFzQixDQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNoRCxDQUFDO1FBQ0QsTUFBTSxDQUFDLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRUQsSUFBSSxDQUFDLEdBQVk7UUFDZixNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsS0FBSyxTQUFTLENBQUM7SUFDM0MsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFhLEVBQUUsSUFBYTtRQUNqQyxNQUFNLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQztJQUN2QixDQUFDO0lBRUQsS0FBSyxDQUFDLEdBQVk7UUFDaEIsTUFBTSxDQUFDLEdBQUcsQ0FBQztJQUNiLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsSUFBSSxDQUFDLE1BQWUsRUFBRSxNQUFlO1FBQ25DLHlEQUF5RDtRQUN6RCxNQUFNLENBQUMsQ0FBQyxNQUFNLEtBQUssTUFBTSxDQUFDLElBQUksU0FBUyxDQUFDO0lBQzFDLENBQUM7SUFFRCxLQUFLLENBQUMsTUFBZSxFQUFFLElBQXNCO1FBQzNDLE1BQU0sQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLEtBQUssU0FBUyxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVELFdBQVcsQ0FBQyxJQUFzQjtRQUNoQyxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELE1BQU0sQ0FBQyxLQUF1QixFQUFFLEtBQXVCO1FBQ3JELHlEQUF5RDtRQUN6RCxNQUFNLENBQUMsQ0FBQyxLQUFLLEtBQUssS0FBSyxDQUFDLElBQUksU0FBUyxDQUFDO0lBQ3hDLENBQUM7Q0FDRjtBQS9ERCxrQ0ErREMiLCJmaWxlIjoidHlwZXMvYm9vbGVhbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUludmFsaWRUeXBlRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JzL2ludmFsaWQtdHlwZVwiO1xuaW1wb3J0IHsgcmVhZFZpc2l0b3IgfSBmcm9tIFwiLi4vcmVhZGVycy9yZWFkLXZpc2l0b3JcIjtcbmltcG9ydCB7IElvVHlwZSwgUmVhZGVyLCBWZXJzaW9uZWRUeXBlLCBXcml0ZXIgfSBmcm9tIFwiLi4vdHlwZXNcIjtcblxuZXhwb3J0IHR5cGUgTmFtZSA9IFwiYm9vbGVhblwiO1xuZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcImJvb2xlYW5cIjtcblxuZXhwb3J0IHR5cGUgRGlmZiA9IGJvb2xlYW47XG5cbmV4cG9ydCBjbGFzcyBCb29sZWFuVHlwZSBpbXBsZW1lbnRzIElvVHlwZTxib29sZWFuPiwgVmVyc2lvbmVkVHlwZTxib29sZWFuLCBEaWZmPiB7XG4gIHJlYWRvbmx5IG5hbWU6IE5hbWUgPSBuYW1lO1xuXG4gIHRvSlNPTigpOiB1bmRlZmluZWQge1xuICAgIC8qIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpyZXR1cm4tdW5kZWZpbmVkICovXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIC8vIFRPRE86IER5bmFtaWNhbGx5IGFkZCB3aXRoIHByb3RvdHlwZT9cbiAgcmVhZDxSPihyZWFkZXI6IFJlYWRlcjxSPiwgcmF3OiBSKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHJlYWRlci5yZWFkQm9vbGVhbihyYXcsIHJlYWRWaXNpdG9yKHtcbiAgICAgIGZyb21Cb29sZWFuKGlucHV0OiBib29sZWFuKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiBpbnB1dDtcbiAgICAgIH0sXG4gICAgfSkpO1xuICB9XG5cbiAgLy8gVE9ETzogRHluYW1pY2FsbHkgYWRkIHdpdGggcHJvdG90eXBlP1xuICB3cml0ZTxXPih3cml0ZXI6IFdyaXRlcjxXPiwgdmFsdWU6IGJvb2xlYW4pOiBXIHtcbiAgICByZXR1cm4gd3JpdGVyLndyaXRlQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICB0ZXN0RXJyb3IodmFsOiBib29sZWFuKTogRXJyb3IgfCB1bmRlZmluZWQge1xuICAgIGlmICh0eXBlb2YgdmFsICE9PSBcImJvb2xlYW5cIikge1xuICAgICAgcmV0dXJuIGNyZWF0ZUludmFsaWRUeXBlRXJyb3IoXCJib29sZWFuXCIsIHZhbCk7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICB0ZXN0KHZhbDogYm9vbGVhbik6IHZhbCBpcyBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy50ZXN0RXJyb3IodmFsKSA9PT0gdW5kZWZpbmVkO1xuICB9XG5cbiAgZXF1YWxzKHZhbDE6IGJvb2xlYW4sIHZhbDI6IGJvb2xlYW4pOiBib29sZWFuIHtcbiAgICByZXR1cm4gdmFsMSA9PT0gdmFsMjtcbiAgfVxuXG4gIGNsb25lKHZhbDogYm9vbGVhbik6IGJvb2xlYW4ge1xuICAgIHJldHVybiB2YWw7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIG9sZFZhbFxuICAgKiBAcGFyYW0gbmV3VmFsXG4gICAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGVyZSBpcyBhIGRpZmZlcmVuY2UsIGB1bmRlZmluZWRgIG90aGVyd2lzZVxuICAgKi9cbiAgZGlmZihvbGRWYWw6IGJvb2xlYW4sIG5ld1ZhbDogYm9vbGVhbik6IERpZmYgfCB1bmRlZmluZWQge1xuICAgIC8qIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpzdHJpY3QtYm9vbGVhbi1leHByZXNzaW9ucyAqL1xuICAgIHJldHVybiAob2xkVmFsICE9PSBuZXdWYWwpIHx8IHVuZGVmaW5lZDtcbiAgfVxuXG4gIHBhdGNoKG9sZFZhbDogYm9vbGVhbiwgZGlmZjogRGlmZiB8IHVuZGVmaW5lZCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBvbGRWYWwgPT09IChkaWZmID09PSB1bmRlZmluZWQpO1xuICB9XG5cbiAgcmV2ZXJzZURpZmYoZGlmZjogRGlmZiB8IHVuZGVmaW5lZCk6IERpZmYgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiBkaWZmO1xuICB9XG5cbiAgc3F1YXNoKGRpZmYxOiBEaWZmIHwgdW5kZWZpbmVkLCBkaWZmMjogRGlmZiB8IHVuZGVmaW5lZCk6IERpZmYgfCB1bmRlZmluZWQge1xuICAgIC8qIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpzdHJpY3QtYm9vbGVhbi1leHByZXNzaW9ucyAqL1xuICAgIHJldHVybiAoZGlmZjEgIT09IGRpZmYyKSAmJiB1bmRlZmluZWQ7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
exports.name = "InvalidInteger";
function format({ value, source }) {
    return `Invalid integer: ${value}` + (source === undefined ? "" : `, from ${source}`);
}
exports.format = format;
function createInvalidIntegerError(value, source) {
    return incident_1.Incident(exports.name, { value, source }, format);
}
exports.createInvalidIntegerError = createInvalidIntegerError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2ludmFsaWQtaW50ZWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFvQztBQUd2QixRQUFBLElBQUksR0FBUyxnQkFBZ0IsQ0FBQztBQVUzQyxnQkFBdUIsRUFBQyxLQUFLLEVBQUUsTUFBTSxFQUFPO0lBQzFDLE1BQU0sQ0FBQyxvQkFBb0IsS0FBSyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFVBQVUsTUFBTSxFQUFFLENBQUMsQ0FBQztBQUN4RixDQUFDO0FBRkQsd0JBRUM7QUFFRCxtQ0FBMEMsS0FBYSxFQUFFLE1BQVk7SUFDbkUsTUFBTSxDQUFDLG1CQUFRLENBQUMsWUFBSSxFQUFFLEVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQ2pELENBQUM7QUFGRCw4REFFQyIsImZpbGUiOiJlcnJvcnMvaW52YWxpZC1pbnRlZ2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IHR5cGUgTmFtZSA9IFwiSW52YWxpZEludGVnZXJcIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJJbnZhbGlkSW50ZWdlclwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICB2YWx1ZTogYW55O1xuICBzb3VyY2U/OiBhbnk7XG59XG5cbmV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuZXhwb3J0IHR5cGUgSW52YWxpZEludGVnZXJFcnJvciA9IEluY2lkZW50PERhdGEsIE5hbWUsIENhdXNlPjtcblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7dmFsdWUsIHNvdXJjZX06IERhdGEpOiBzdHJpbmcge1xuICByZXR1cm4gYEludmFsaWQgaW50ZWdlcjogJHt2YWx1ZX1gICsgKHNvdXJjZSA9PT0gdW5kZWZpbmVkID8gXCJcIiA6IGAsIGZyb20gJHtzb3VyY2V9YCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbnZhbGlkSW50ZWdlckVycm9yKHZhbHVlOiBudW1iZXIsIHNvdXJjZT86IGFueSk6IEludmFsaWRJbnRlZ2VyRXJyb3Ige1xuICByZXR1cm4gSW5jaWRlbnQobmFtZSwge3ZhbHVlLCBzb3VyY2V9LCBmb3JtYXQpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$DefineLocal = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.DefineLocal }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2RlZmluZS1sb2NhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLFlBQVksR0FBZ0MsSUFBSSx1QkFBWSxDQUFjO0lBQ3JGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxXQUFxQyxFQUFDLENBQUMsRUFBQztLQUM5RztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9kZWZpbmUtbG9jYWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZUxvY2FsIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5EZWZpbmVMb2NhbDtcbn1cblxuZXhwb3J0IGNvbnN0ICREZWZpbmVMb2NhbDogRG9jdW1lbnRJb1R5cGU8RGVmaW5lTG9jYWw+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVMb2NhbD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuRGVmaW5lTG9jYWwgYXMgQWN0aW9uVHlwZS5EZWZpbmVMb2NhbH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$DefineLocal2 = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.DefineLocal2 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2RlZmluZS1sb2NhbDIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxhQUFhLEdBQWlDLElBQUksdUJBQVksQ0FBZTtJQUN4RixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsWUFBdUMsRUFBQyxDQUFDLEVBQUM7S0FDaEg7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvZGVmaW5lLWxvY2FsMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lTG9jYWwyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5EZWZpbmVMb2NhbDI7XG59XG5cbmV4cG9ydCBjb25zdCAkRGVmaW5lTG9jYWwyOiBEb2N1bWVudElvVHlwZTxEZWZpbmVMb2NhbDI+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVMb2NhbDI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkRlZmluZUxvY2FsMiBhcyBBY3Rpb25UeXBlLkRlZmluZUxvY2FsMn0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Delete = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Delete }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2RlbGV0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLE9BQU8sR0FBMkIsSUFBSSx1QkFBWSxDQUFTO0lBQ3RFLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxNQUEyQixFQUFDLENBQUMsRUFBQztLQUNwRztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9kZWxldGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlbGV0ZSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuRGVsZXRlO1xufVxuXG5leHBvcnQgY29uc3QgJERlbGV0ZTogRG9jdW1lbnRJb1R5cGU8RGVsZXRlPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVsZXRlPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5EZWxldGUgYXMgQWN0aW9uVHlwZS5EZWxldGV9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Delete2 = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Delete2 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2RlbGV0ZTIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxRQUFRLEdBQTRCLElBQUksdUJBQVksQ0FBVTtJQUN6RSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsT0FBNkIsRUFBQyxDQUFDLEVBQUM7S0FDdEc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvZGVsZXRlMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVsZXRlMiBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuRGVsZXRlMjtcbn1cblxuZXhwb3J0IGNvbnN0ICREZWxldGUyOiBEb2N1bWVudElvVHlwZTxEZWxldGUyPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVsZXRlMj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuRGVsZXRlMiBhcyBBY3Rpb25UeXBlLkRlbGV0ZTJ9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Divide = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Divide }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2RpdmlkZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLE9BQU8sR0FBMkIsSUFBSSx1QkFBWSxDQUFTO0lBQ3RFLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxNQUEyQixFQUFDLENBQUMsRUFBQztLQUNwRztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9kaXZpZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERpdmlkZSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuRGl2aWRlO1xufVxuXG5leHBvcnQgY29uc3QgJERpdmlkZTogRG9jdW1lbnRJb1R5cGU8RGl2aWRlPiA9IG5ldyBEb2N1bWVudFR5cGU8RGl2aWRlPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5EaXZpZGUgYXMgQWN0aW9uVHlwZS5EaXZpZGV9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$EndDrag = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.EndDrag }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2VuZC1kcmFnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsUUFBUSxHQUE0QixJQUFJLHVCQUFZLENBQVU7SUFDekUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLE9BQTZCLEVBQUMsQ0FBQyxFQUFDO0tBQ3RHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL2VuZC1kcmFnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBFbmREcmFnIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5FbmREcmFnO1xufVxuXG5leHBvcnQgY29uc3QgJEVuZERyYWc6IERvY3VtZW50SW9UeXBlPEVuZERyYWc+ID0gbmV3IERvY3VtZW50VHlwZTxFbmREcmFnPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5FbmREcmFnIGFzIEFjdGlvblR5cGUuRW5kRHJhZ30pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Enumerate = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Enumerate }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2VudW1lcmF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLFVBQVUsR0FBOEIsSUFBSSx1QkFBWSxDQUFZO0lBQy9FLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxTQUFpQyxFQUFDLENBQUMsRUFBQztLQUMxRztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9lbnVtZXJhdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEVudW1lcmF0ZSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuRW51bWVyYXRlO1xufVxuXG5leHBvcnQgY29uc3QgJEVudW1lcmF0ZTogRG9jdW1lbnRJb1R5cGU8RW51bWVyYXRlPiA9IG5ldyBEb2N1bWVudFR5cGU8RW51bWVyYXRlPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5FbnVtZXJhdGUgYXMgQWN0aW9uVHlwZS5FbnVtZXJhdGV9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Enumerate2 = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Enumerate2 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2VudW1lcmF0ZTIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxXQUFXLEdBQStCLElBQUksdUJBQVksQ0FBYTtJQUNsRixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsVUFBbUMsRUFBQyxDQUFDLEVBQUM7S0FDNUc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvZW51bWVyYXRlMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRW51bWVyYXRlMiBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuRW51bWVyYXRlMjtcbn1cblxuZXhwb3J0IGNvbnN0ICRFbnVtZXJhdGUyOiBEb2N1bWVudElvVHlwZTxFbnVtZXJhdGUyPiA9IG5ldyBEb2N1bWVudFR5cGU8RW51bWVyYXRlMj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuRW51bWVyYXRlMiBhcyBBY3Rpb25UeXBlLkVudW1lcmF0ZTJ9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Equals = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Equals }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2VxdWFscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLE9BQU8sR0FBMkIsSUFBSSx1QkFBWSxDQUFTO0lBQ3RFLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxNQUEyQixFQUFDLENBQUMsRUFBQztLQUNwRztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9lcXVhbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEVxdWFscyBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuRXF1YWxzO1xufVxuXG5leHBvcnQgY29uc3QgJEVxdWFsczogRG9jdW1lbnRJb1R5cGU8RXF1YWxzPiA9IG5ldyBEb2N1bWVudFR5cGU8RXF1YWxzPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5FcXVhbHMgYXMgQWN0aW9uVHlwZS5FcXVhbHN9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Equals2 = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Equals2 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2VxdWFsczIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxRQUFRLEdBQTRCLElBQUksdUJBQVksQ0FBVTtJQUN6RSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsT0FBNkIsRUFBQyxDQUFDLEVBQUM7S0FDdEc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvZXF1YWxzMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXF1YWxzMiBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuRXF1YWxzMjtcbn1cblxuZXhwb3J0IGNvbnN0ICRFcXVhbHMyOiBEb2N1bWVudElvVHlwZTxFcXVhbHMyPiA9IG5ldyBEb2N1bWVudFR5cGU8RXF1YWxzMj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuRXF1YWxzMiBhcyBBY3Rpb25UeXBlLkVxdWFsczJ9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Extends = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Extends }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2V4dGVuZHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxRQUFRLEdBQTRCLElBQUksdUJBQVksQ0FBVTtJQUN6RSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsT0FBNkIsRUFBQyxDQUFDLEVBQUM7S0FDdEc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvZXh0ZW5kcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXh0ZW5kcyBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuRXh0ZW5kcztcbn1cblxuZXhwb3J0IGNvbnN0ICRFeHRlbmRzOiBEb2N1bWVudElvVHlwZTxFeHRlbmRzPiA9IG5ldyBEb2N1bWVudFR5cGU8RXh0ZW5kcz4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuRXh0ZW5kcyBhcyBBY3Rpb25UeXBlLkV4dGVuZHN9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$FsCommand2 = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.FsCommand2 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2ZzLWNvbW1hbmQyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFVBQW1DLEVBQUMsQ0FBQyxFQUFDO0tBQzVHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL2ZzLWNvbW1hbmQyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBGc0NvbW1hbmQyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Gc0NvbW1hbmQyO1xufVxuXG5leHBvcnQgY29uc3QgJEZzQ29tbWFuZDI6IERvY3VtZW50SW9UeXBlPEZzQ29tbWFuZDI+ID0gbmV3IERvY3VtZW50VHlwZTxGc0NvbW1hbmQyPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5Gc0NvbW1hbmQyIGFzIEFjdGlvblR5cGUuRnNDb21tYW5kMn0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$GetMember = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.GetMember }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2dldC1tZW1iZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxVQUFVLEdBQThCLElBQUksdUJBQVksQ0FBWTtJQUMvRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsU0FBaUMsRUFBQyxDQUFDLEVBQUM7S0FDMUc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvZ2V0LW1lbWJlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR2V0TWVtYmVyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5HZXRNZW1iZXI7XG59XG5cbmV4cG9ydCBjb25zdCAkR2V0TWVtYmVyOiBEb2N1bWVudElvVHlwZTxHZXRNZW1iZXI+ID0gbmV3IERvY3VtZW50VHlwZTxHZXRNZW1iZXI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkdldE1lbWJlciBhcyBBY3Rpb25UeXBlLkdldE1lbWJlcn0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$GetProperty = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.GetProperty }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2dldC1wcm9wZXJ0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLFlBQVksR0FBZ0MsSUFBSSx1QkFBWSxDQUFjO0lBQ3JGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxXQUFxQyxFQUFDLENBQUMsRUFBQztLQUM5RztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9nZXQtcHJvcGVydHkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdldFByb3BlcnR5IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5HZXRQcm9wZXJ0eTtcbn1cblxuZXhwb3J0IGNvbnN0ICRHZXRQcm9wZXJ0eTogRG9jdW1lbnRJb1R5cGU8R2V0UHJvcGVydHk+ID0gbmV3IERvY3VtZW50VHlwZTxHZXRQcm9wZXJ0eT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuR2V0UHJvcGVydHkgYXMgQWN0aW9uVHlwZS5HZXRQcm9wZXJ0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$GetTime = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.GetTime }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2dldC10aW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsUUFBUSxHQUE0QixJQUFJLHVCQUFZLENBQVU7SUFDekUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLE9BQTZCLEVBQUMsQ0FBQyxFQUFDO0tBQ3RHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL2dldC10aW1lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHZXRUaW1lIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5HZXRUaW1lO1xufVxuXG5leHBvcnQgY29uc3QgJEdldFRpbWU6IERvY3VtZW50SW9UeXBlPEdldFRpbWU+ID0gbmV3IERvY3VtZW50VHlwZTxHZXRUaW1lPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5HZXRUaW1lIGFzIEFjdGlvblR5cGUuR2V0VGltZX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const action_type_1 = __webpack_require__(3);
exports.$GetUrl = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.GetUrl }) },
        url: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
        target: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2dldC11cmwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBd0Q7QUFDeEQsZ0RBQXlEO0FBUzVDLFFBQUEsT0FBTyxHQUEyQixJQUFJLHVCQUFZLENBQVM7SUFDdEUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLE1BQTJCLEVBQUMsQ0FBQyxFQUFDO1FBQ25HLEdBQUcsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUN0RCxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSw0QkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDMUQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvZ2V0LXVybC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVY3MyU3RyaW5nVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3VjczItc3RyaW5nXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR2V0VXJsIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5HZXRVcmw7XG4gIHVybDogc3RyaW5nO1xuICB0YXJnZXQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0ICRHZXRVcmw6IERvY3VtZW50SW9UeXBlPEdldFVybD4gPSBuZXcgRG9jdW1lbnRUeXBlPEdldFVybD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuR2V0VXJsIGFzIEFjdGlvblR5cGUuR2V0VXJsfSl9LFxuICAgIHVybDoge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICB0YXJnZXQ6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
const get_url2_method_1 = __webpack_require__(81);
exports.$GetUrl2 = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.GetUrl2 }) },
        method: { type: get_url2_method_1.$GetUrl2Method },
        loadTarget: { type: boolean_1.$Boolean },
        loadVariables: { type: boolean_1.$Boolean },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2dldC11cmwyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQUN6RCx3REFBbUU7QUFVdEQsUUFBQSxRQUFRLEdBQTRCLElBQUksdUJBQVksQ0FBVTtJQUN6RSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsT0FBNkIsRUFBQyxDQUFDLEVBQUM7UUFDckcsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdDQUFjLEVBQUM7UUFDOUIsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDNUIsYUFBYSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7S0FDaEM7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvZ2V0LXVybDIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQm9vbGVhbiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2Jvb2xlYW5cIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgJEdldFVybDJNZXRob2QsIEdldFVybDJNZXRob2QgfSBmcm9tIFwiLi4vZ2V0LXVybDItbWV0aG9kXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHZXRVcmwyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5HZXRVcmwyO1xuICBtZXRob2Q6IEdldFVybDJNZXRob2Q7XG4gIGxvYWRUYXJnZXQ6IGJvb2xlYW47XG4gIGxvYWRWYXJpYWJsZXM6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjb25zdCAkR2V0VXJsMjogRG9jdW1lbnRJb1R5cGU8R2V0VXJsMj4gPSBuZXcgRG9jdW1lbnRUeXBlPEdldFVybDI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkdldFVybDIgYXMgQWN0aW9uVHlwZS5HZXRVcmwyfSl9LFxuICAgIG1ldGhvZDoge3R5cGU6ICRHZXRVcmwyTWV0aG9kfSxcbiAgICBsb2FkVGFyZ2V0OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGxvYWRWYXJpYWJsZXM6IHt0eXBlOiAkQm9vbGVhbn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$GetVariable = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.GetVariable }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2dldC12YXJpYWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLFlBQVksR0FBZ0MsSUFBSSx1QkFBWSxDQUFjO0lBQ3JGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxXQUFxQyxFQUFDLENBQUMsRUFBQztLQUM5RztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9nZXQtdmFyaWFibGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdldFZhcmlhYmxlIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5HZXRWYXJpYWJsZTtcbn1cblxuZXhwb3J0IGNvbnN0ICRHZXRWYXJpYWJsZTogRG9jdW1lbnRJb1R5cGU8R2V0VmFyaWFibGU+ID0gbmV3IERvY3VtZW50VHlwZTxHZXRWYXJpYWJsZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuR2V0VmFyaWFibGUgYXMgQWN0aW9uVHlwZS5HZXRWYXJpYWJsZX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$GotoFrame = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.GotoFrame }) },
        frame: { type: uint16_1.$Uint16 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2dvdG8tZnJhbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsZ0RBQXlEO0FBUTVDLFFBQUEsVUFBVSxHQUE4QixJQUFJLHVCQUFZLENBQVk7SUFDL0UsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQWlDLEVBQUMsQ0FBQyxFQUFDO1FBQ3pHLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO0tBQ3ZCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL2dvdG8tZnJhbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR290b0ZyYW1lIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Hb3RvRnJhbWU7XG4gIGZyYW1lOiBVaW50MTY7XG59XG5cbmV4cG9ydCBjb25zdCAkR290b0ZyYW1lOiBEb2N1bWVudElvVHlwZTxHb3RvRnJhbWU+ID0gbmV3IERvY3VtZW50VHlwZTxHb3RvRnJhbWU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkdvdG9GcmFtZSBhcyBBY3Rpb25UeXBlLkdvdG9GcmFtZX0pfSxcbiAgICBmcmFtZToge3R5cGU6ICRVaW50MTZ9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$GotoFrame2 = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.GotoFrame2 }) },
        play: { type: boolean_1.$Boolean },
        sceneBias: { type: new integer_1.IntegerType() },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2dvdG8tZnJhbWUyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUFpRDtBQUVqRCxnREFBeUQ7QUFTNUMsUUFBQSxXQUFXLEdBQStCLElBQUksdUJBQVksQ0FBYTtJQUNsRixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsVUFBbUMsRUFBQyxDQUFDLEVBQUM7UUFDM0csSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDdEIsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsRUFBRSxFQUFDO0tBQ3JDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL2dvdG8tZnJhbWUyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IEludGVnZXJUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvaW50ZWdlclwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50U2l6ZSB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdvdG9GcmFtZTIgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkdvdG9GcmFtZTI7XG4gIHBsYXk6IGJvb2xlYW47XG4gIHNjZW5lQmlhczogVWludFNpemU7XG59XG5cbmV4cG9ydCBjb25zdCAkR290b0ZyYW1lMjogRG9jdW1lbnRJb1R5cGU8R290b0ZyYW1lMj4gPSBuZXcgRG9jdW1lbnRUeXBlPEdvdG9GcmFtZTI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkdvdG9GcmFtZTIgYXMgQWN0aW9uVHlwZS5Hb3RvRnJhbWUyfSl9LFxuICAgIHBsYXk6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgc2NlbmVCaWFzOiB7dHlwZTogbmV3IEludGVnZXJUeXBlKCl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const action_type_1 = __webpack_require__(3);
exports.$GotoLabel = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.GotoLabel }) },
        label: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2dvdG8tbGFiZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBd0Q7QUFDeEQsZ0RBQXlEO0FBUTVDLFFBQUEsVUFBVSxHQUE4QixJQUFJLHVCQUFZLENBQVk7SUFDL0UsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQWlDLEVBQUMsQ0FBQyxFQUFDO1FBQ3pHLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUN6RDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9nb3RvLWxhYmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHb3RvTGFiZWwgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkdvdG9MYWJlbDtcbiAgbGFiZWw6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0ICRHb3RvTGFiZWw6IERvY3VtZW50SW9UeXBlPEdvdG9MYWJlbD4gPSBuZXcgRG9jdW1lbnRUeXBlPEdvdG9MYWJlbD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuR290b0xhYmVsIGFzIEFjdGlvblR5cGUuR290b0xhYmVsfSl9LFxuICAgIGxhYmVsOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Greater = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Greater }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2dyZWF0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxRQUFRLEdBQTRCLElBQUksdUJBQVksQ0FBVTtJQUN6RSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsT0FBNkIsRUFBQyxDQUFDLEVBQUM7S0FDdEc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvZ3JlYXRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR3JlYXRlciBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuR3JlYXRlcjtcbn1cblxuZXhwb3J0IGNvbnN0ICRHcmVhdGVyOiBEb2N1bWVudElvVHlwZTxHcmVhdGVyPiA9IG5ldyBEb2N1bWVudFR5cGU8R3JlYXRlcj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuR3JlYXRlciBhcyBBY3Rpb25UeXBlLkdyZWF0ZXJ9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$If = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.If }) },
        offset: { type: new integer_1.IntegerType() },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2lmLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQWlEO0FBRWpELGdEQUF5RDtBQVE1QyxRQUFBLEdBQUcsR0FBdUIsSUFBSSx1QkFBWSxDQUFLO0lBQzFELFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxFQUFtQixFQUFDLENBQUMsRUFBQztRQUMzRixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxFQUFFLEVBQUM7S0FDbEM7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvaWYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IEludGVnZXJUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvaW50ZWdlclwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBTaW50U2l6ZSB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIElmIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5JZjtcbiAgb2Zmc2V0OiBTaW50U2l6ZTtcbn1cblxuZXhwb3J0IGNvbnN0ICRJZjogRG9jdW1lbnRJb1R5cGU8SWY+ID0gbmV3IERvY3VtZW50VHlwZTxJZj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuSWYgYXMgQWN0aW9uVHlwZS5JZn0pfSxcbiAgICBvZmZzZXQ6IHt0eXBlOiBuZXcgSW50ZWdlclR5cGUoKX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$ImplementsOp = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.ImplementsOp }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2ltcGxlbWVudHMtb3AudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxhQUFhLEdBQWlDLElBQUksdUJBQVksQ0FBZTtJQUN4RixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsWUFBdUMsRUFBQyxDQUFDLEVBQUM7S0FDaEg7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvaW1wbGVtZW50cy1vcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW1wbGVtZW50c09wIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5JbXBsZW1lbnRzT3A7XG59XG5cbmV4cG9ydCBjb25zdCAkSW1wbGVtZW50c09wOiBEb2N1bWVudElvVHlwZTxJbXBsZW1lbnRzT3A+ID0gbmV3IERvY3VtZW50VHlwZTxJbXBsZW1lbnRzT3A+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkltcGxlbWVudHNPcCBhcyBBY3Rpb25UeXBlLkltcGxlbWVudHNPcH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Increment = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Increment }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2luY3JlbWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLFVBQVUsR0FBOEIsSUFBSSx1QkFBWSxDQUFZO0lBQy9FLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxTQUFpQyxFQUFDLENBQUMsRUFBQztLQUMxRztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9pbmNyZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEluY3JlbWVudCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuSW5jcmVtZW50O1xufVxuXG5leHBvcnQgY29uc3QgJEluY3JlbWVudDogRG9jdW1lbnRJb1R5cGU8SW5jcmVtZW50PiA9IG5ldyBEb2N1bWVudFR5cGU8SW5jcmVtZW50Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5JbmNyZW1lbnQgYXMgQWN0aW9uVHlwZS5JbmNyZW1lbnR9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$InitArray = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.InitArray }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2luaXQtYXJyYXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxVQUFVLEdBQThCLElBQUksdUJBQVksQ0FBWTtJQUMvRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsU0FBaUMsRUFBQyxDQUFDLEVBQUM7S0FDMUc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvaW5pdC1hcnJheS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW5pdEFycmF5IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Jbml0QXJyYXk7XG59XG5cbmV4cG9ydCBjb25zdCAkSW5pdEFycmF5OiBEb2N1bWVudElvVHlwZTxJbml0QXJyYXk+ID0gbmV3IERvY3VtZW50VHlwZTxJbml0QXJyYXk+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkluaXRBcnJheSBhcyBBY3Rpb25UeXBlLkluaXRBcnJheX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$InitObject = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.InitObject }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2luaXQtb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFVBQW1DLEVBQUMsQ0FBQyxFQUFDO0tBQzVHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL2luaXQtb2JqZWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBJbml0T2JqZWN0IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Jbml0T2JqZWN0O1xufVxuXG5leHBvcnQgY29uc3QgJEluaXRPYmplY3Q6IERvY3VtZW50SW9UeXBlPEluaXRPYmplY3Q+ID0gbmV3IERvY3VtZW50VHlwZTxJbml0T2JqZWN0Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5Jbml0T2JqZWN0IGFzIEFjdGlvblR5cGUuSW5pdE9iamVjdH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$InstanceOf = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.InstanceOf }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2luc3RhbmNlLW9mLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFVBQW1DLEVBQUMsQ0FBQyxFQUFDO0tBQzVHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL2luc3RhbmNlLW9mLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBJbnN0YW5jZU9mIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5JbnN0YW5jZU9mO1xufVxuXG5leHBvcnQgY29uc3QgJEluc3RhbmNlT2Y6IERvY3VtZW50SW9UeXBlPEluc3RhbmNlT2Y+ID0gbmV3IERvY3VtZW50VHlwZTxJbnN0YW5jZU9mPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5JbnN0YW5jZU9mIGFzIEFjdGlvblR5cGUuSW5zdGFuY2VPZn0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Jump = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Jump }) },
        offset: { type: new integer_1.IntegerType() },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2p1bXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBaUQ7QUFFakQsZ0RBQXlEO0FBUTVDLFFBQUEsS0FBSyxHQUF5QixJQUFJLHVCQUFZLENBQU87SUFDaEUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLElBQXVCLEVBQUMsQ0FBQyxFQUFDO1FBQy9GLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBQztLQUNsQztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9qdW1wLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2ludGVnZXJcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgU2ludFNpemUgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBKdW1wIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5KdW1wO1xuICBvZmZzZXQ6IFNpbnRTaXplO1xufVxuXG5leHBvcnQgY29uc3QgJEp1bXA6IERvY3VtZW50SW9UeXBlPEp1bXA+ID0gbmV3IERvY3VtZW50VHlwZTxKdW1wPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5KdW1wIGFzIEFjdGlvblR5cGUuSnVtcH0pfSxcbiAgICBvZmZzZXQ6IHt0eXBlOiBuZXcgSW50ZWdlclR5cGUoKX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Less = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Less }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2xlc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxLQUFLLEdBQXlCLElBQUksdUJBQVksQ0FBTztJQUNoRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsSUFBdUIsRUFBQyxDQUFDLEVBQUM7S0FDaEc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvbGVzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTGVzcyBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuTGVzcztcbn1cblxuZXhwb3J0IGNvbnN0ICRMZXNzOiBEb2N1bWVudElvVHlwZTxMZXNzPiA9IG5ldyBEb2N1bWVudFR5cGU8TGVzcz4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuTGVzcyBhcyBBY3Rpb25UeXBlLkxlc3N9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Less2 = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Less2 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL2xlc3MyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsTUFBTSxHQUEwQixJQUFJLHVCQUFZLENBQVE7SUFDbkUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLEtBQXlCLEVBQUMsQ0FBQyxFQUFDO0tBQ2xHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL2xlc3MyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBMZXNzMiBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuTGVzczI7XG59XG5cbmV4cG9ydCBjb25zdCAkTGVzczI6IERvY3VtZW50SW9UeXBlPExlc3MyPiA9IG5ldyBEb2N1bWVudFR5cGU8TGVzczI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkxlc3MyIGFzIEFjdGlvblR5cGUuTGVzczJ9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$MbAsciiToChar = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.MbAsciiToChar }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL21iLWFzY2lpLXRvLWNoYXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxjQUFjLEdBQWtDLElBQUksdUJBQVksQ0FBZ0I7SUFDM0YsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLGFBQXlDLEVBQUMsQ0FBQyxFQUFDO0tBQ2xIO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL21iLWFzY2lpLXRvLWNoYXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1iQXNjaWlUb0NoYXIgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLk1iQXNjaWlUb0NoYXI7XG59XG5cbmV4cG9ydCBjb25zdCAkTWJBc2NpaVRvQ2hhcjogRG9jdW1lbnRJb1R5cGU8TWJBc2NpaVRvQ2hhcj4gPSBuZXcgRG9jdW1lbnRUeXBlPE1iQXNjaWlUb0NoYXI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLk1iQXNjaWlUb0NoYXIgYXMgQWN0aW9uVHlwZS5NYkFzY2lpVG9DaGFyfSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$MbCharToAscii = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.MbCharToAscii }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL21iLWNoYXItdG8tYXNjaWkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxjQUFjLEdBQWtDLElBQUksdUJBQVksQ0FBZ0I7SUFDM0YsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLGFBQXlDLEVBQUMsQ0FBQyxFQUFDO0tBQ2xIO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL21iLWNoYXItdG8tYXNjaWkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1iQ2hhclRvQXNjaWkgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLk1iQ2hhclRvQXNjaWk7XG59XG5cbmV4cG9ydCBjb25zdCAkTWJDaGFyVG9Bc2NpaTogRG9jdW1lbnRJb1R5cGU8TWJDaGFyVG9Bc2NpaT4gPSBuZXcgRG9jdW1lbnRUeXBlPE1iQ2hhclRvQXNjaWk+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLk1iQ2hhclRvQXNjaWkgYXMgQWN0aW9uVHlwZS5NYkNoYXJUb0FzY2lpfSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$MbStringExtract = new document_1.DocumentType({
    properties: {
        action: {
            type: new literal_1.LiteralType({
                type: action_type_1.$ActionType,
                value: action_type_1.ActionType.MbStringExtract,
            }),
        },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL21iLXN0cmluZy1leHRyYWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsZ0JBQWdCLEdBQW9DLElBQUksdUJBQVksQ0FBa0I7SUFDakcsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFO1lBQ04sSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQztnQkFDcEIsSUFBSSxFQUFFLHlCQUFXO2dCQUNqQixLQUFLLEVBQUUsd0JBQVUsQ0FBQyxlQUE2QzthQUNoRSxDQUFDO1NBQ0g7S0FDRjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9tYi1zdHJpbmctZXh0cmFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWJTdHJpbmdFeHRyYWN0IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5NYlN0cmluZ0V4dHJhY3Q7XG59XG5cbmV4cG9ydCBjb25zdCAkTWJTdHJpbmdFeHRyYWN0OiBEb2N1bWVudElvVHlwZTxNYlN0cmluZ0V4dHJhY3Q+ID0gbmV3IERvY3VtZW50VHlwZTxNYlN0cmluZ0V4dHJhY3Q+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge1xuICAgICAgdHlwZTogbmV3IExpdGVyYWxUeXBlKHtcbiAgICAgICAgdHlwZTogJEFjdGlvblR5cGUsXG4gICAgICAgIHZhbHVlOiBBY3Rpb25UeXBlLk1iU3RyaW5nRXh0cmFjdCBhcyBBY3Rpb25UeXBlLk1iU3RyaW5nRXh0cmFjdCxcbiAgICAgIH0pLFxuICAgIH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$MbStringLength = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.MbStringLength }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL21iLXN0cmluZy1sZW5ndGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxlQUFlLEdBQW1DLElBQUksdUJBQVksQ0FBaUI7SUFDOUYsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLGNBQTJDLEVBQUMsQ0FBQyxFQUFDO0tBQ3BIO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL21iLXN0cmluZy1sZW5ndGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1iU3RyaW5nTGVuZ3RoIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5NYlN0cmluZ0xlbmd0aDtcbn1cblxuZXhwb3J0IGNvbnN0ICRNYlN0cmluZ0xlbmd0aDogRG9jdW1lbnRJb1R5cGU8TWJTdHJpbmdMZW5ndGg+ID0gbmV3IERvY3VtZW50VHlwZTxNYlN0cmluZ0xlbmd0aD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuTWJTdHJpbmdMZW5ndGggYXMgQWN0aW9uVHlwZS5NYlN0cmluZ0xlbmd0aH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Modulo = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Modulo }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL21vZHVsby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLE9BQU8sR0FBMkIsSUFBSSx1QkFBWSxDQUFTO0lBQ3RFLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxNQUEyQixFQUFDLENBQUMsRUFBQztLQUNwRztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9tb2R1bG8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1vZHVsbyBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuTW9kdWxvO1xufVxuXG5leHBvcnQgY29uc3QgJE1vZHVsbzogRG9jdW1lbnRJb1R5cGU8TW9kdWxvPiA9IG5ldyBEb2N1bWVudFR5cGU8TW9kdWxvPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5Nb2R1bG8gYXMgQWN0aW9uVHlwZS5Nb2R1bG99KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Multiply = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Multiply }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL211bHRpcGx5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsU0FBUyxHQUE2QixJQUFJLHVCQUFZLENBQVc7SUFDNUUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFFBQStCLEVBQUMsQ0FBQyxFQUFDO0tBQ3hHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL211bHRpcGx5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBNdWx0aXBseSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuTXVsdGlwbHk7XG59XG5cbmV4cG9ydCBjb25zdCAkTXVsdGlwbHk6IERvY3VtZW50SW9UeXBlPE11bHRpcGx5PiA9IG5ldyBEb2N1bWVudFR5cGU8TXVsdGlwbHk+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLk11bHRpcGx5IGFzIEFjdGlvblR5cGUuTXVsdGlwbHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$NewMethod = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.NewMethod }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL25ldy1tZXRob2QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxVQUFVLEdBQThCLElBQUksdUJBQVksQ0FBWTtJQUMvRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsU0FBaUMsRUFBQyxDQUFDLEVBQUM7S0FDMUc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvbmV3LW1ldGhvZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV3TWV0aG9kIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5OZXdNZXRob2Q7XG59XG5cbmV4cG9ydCBjb25zdCAkTmV3TWV0aG9kOiBEb2N1bWVudElvVHlwZTxOZXdNZXRob2Q+ID0gbmV3IERvY3VtZW50VHlwZTxOZXdNZXRob2Q+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLk5ld01ldGhvZCBhcyBBY3Rpb25UeXBlLk5ld01ldGhvZH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$NewObject = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.NewObject }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL25ldy1vYmplY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxVQUFVLEdBQThCLElBQUksdUJBQVksQ0FBWTtJQUMvRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsU0FBaUMsRUFBQyxDQUFDLEVBQUM7S0FDMUc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvbmV3LW9iamVjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV3T2JqZWN0IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5OZXdPYmplY3Q7XG59XG5cbmV4cG9ydCBjb25zdCAkTmV3T2JqZWN0OiBEb2N1bWVudElvVHlwZTxOZXdPYmplY3Q+ID0gbmV3IERvY3VtZW50VHlwZTxOZXdPYmplY3Q+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLk5ld09iamVjdCBhcyBBY3Rpb25UeXBlLk5ld09iamVjdH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$NextFrame = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.NextFrame }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL25leHQtZnJhbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxVQUFVLEdBQThCLElBQUksdUJBQVksQ0FBWTtJQUMvRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsU0FBaUMsRUFBQyxDQUFDLEVBQUM7S0FDMUc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvbmV4dC1mcmFtZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV4dEZyYW1lIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5OZXh0RnJhbWU7XG59XG5cbmV4cG9ydCBjb25zdCAkTmV4dEZyYW1lOiBEb2N1bWVudElvVHlwZTxOZXh0RnJhbWU+ID0gbmV3IERvY3VtZW50VHlwZTxOZXh0RnJhbWU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLk5leHRGcmFtZSBhcyBBY3Rpb25UeXBlLk5leHRGcmFtZX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Not = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Not }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL25vdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLElBQUksR0FBd0IsSUFBSSx1QkFBWSxDQUFNO0lBQzdELFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxHQUFxQixFQUFDLENBQUMsRUFBQztLQUM5RjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9ub3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE5vdCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuTm90O1xufVxuXG5leHBvcnQgY29uc3QgJE5vdDogRG9jdW1lbnRJb1R5cGU8Tm90PiA9IG5ldyBEb2N1bWVudFR5cGU8Tm90Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5Ob3QgYXMgQWN0aW9uVHlwZS5Ob3R9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Or = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Or }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL29yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsR0FBRyxHQUF1QixJQUFJLHVCQUFZLENBQUs7SUFDMUQsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLEVBQW1CLEVBQUMsQ0FBQyxFQUFDO0tBQzVGO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL29yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBPciBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuT3I7XG59XG5cbmV4cG9ydCBjb25zdCAkT3I6IERvY3VtZW50SW9UeXBlPE9yPiA9IG5ldyBEb2N1bWVudFR5cGU8T3I+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLk9yIGFzIEFjdGlvblR5cGUuT3J9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Play = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Play }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3BsYXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxLQUFLLEdBQXlCLElBQUksdUJBQVksQ0FBTztJQUNoRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsSUFBdUIsRUFBQyxDQUFDLEVBQUM7S0FDaEc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvcGxheS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGxheSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuUGxheTtcbn1cblxuZXhwb3J0IGNvbnN0ICRQbGF5OiBEb2N1bWVudElvVHlwZTxQbGF5PiA9IG5ldyBEb2N1bWVudFR5cGU8UGxheT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuUGxheSBhcyBBY3Rpb25UeXBlLlBsYXl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Pop = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Pop }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3BvcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLElBQUksR0FBd0IsSUFBSSx1QkFBWSxDQUFNO0lBQzdELFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxHQUFxQixFQUFDLENBQUMsRUFBQztLQUM5RjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9wb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBvcCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuUG9wO1xufVxuXG5leHBvcnQgY29uc3QgJFBvcDogRG9jdW1lbnRJb1R5cGU8UG9wPiA9IG5ldyBEb2N1bWVudFR5cGU8UG9wPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5Qb3AgYXMgQWN0aW9uVHlwZS5Qb3B9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$PreviousFrame = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.PreviousFrame }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3ByZXZpb3VzLWZyYW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsY0FBYyxHQUFrQyxJQUFJLHVCQUFZLENBQWdCO0lBQzNGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxhQUF5QyxFQUFDLENBQUMsRUFBQztLQUNsSDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9wcmV2aW91cy1mcmFtZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJldmlvdXNGcmFtZSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuUHJldmlvdXNGcmFtZTtcbn1cblxuZXhwb3J0IGNvbnN0ICRQcmV2aW91c0ZyYW1lOiBEb2N1bWVudElvVHlwZTxQcmV2aW91c0ZyYW1lPiA9IG5ldyBEb2N1bWVudFR5cGU8UHJldmlvdXNGcmFtZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuUHJldmlvdXNGcmFtZSBhcyBBY3Rpb25UeXBlLlByZXZpb3VzRnJhbWV9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
const value_1 = __webpack_require__(82);
exports.$Push = new document_1.DocumentType(() => ({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Push }) },
        values: { type: new array_1.ArrayType({ itemType: value_1.$Value, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3B1c2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBQ3pELG9DQUF5QztBQVE1QixRQUFBLEtBQUssR0FBeUIsSUFBSSx1QkFBWSxDQUFPLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDdkUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLElBQXVCLEVBQUMsQ0FBQyxFQUFDO1FBQy9GLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsY0FBTSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQ3ZFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvcHVzaC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEFycmF5VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2FycmF5XCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7ICRWYWx1ZSwgVmFsdWUgfSBmcm9tIFwiLi4vdmFsdWVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFB1c2ggZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLlB1c2g7XG4gIHZhbHVlczogVmFsdWVbXTtcbn1cblxuZXhwb3J0IGNvbnN0ICRQdXNoOiBEb2N1bWVudElvVHlwZTxQdXNoPiA9IG5ldyBEb2N1bWVudFR5cGU8UHVzaD4oKCkgPT4gKHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlB1c2ggYXMgQWN0aW9uVHlwZS5QdXNofSl9LFxuICAgIHZhbHVlczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkVmFsdWUsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const value_type_1 = __webpack_require__(19);
exports.$Boolean = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: value_type_1.$ValueType, value: value_type_1.ValueType.Boolean }) },
        value: { type: boolean_1.$Boolean },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS92YWx1ZXMvYm9vbGVhbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUE4RDtBQUM5RCxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCw4Q0FBc0Q7QUFPekMsUUFBQSxRQUFRLEdBQTRCLElBQUksdUJBQVksQ0FBVTtJQUN6RSxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUUsS0FBSyxFQUFFLHNCQUFTLENBQUMsT0FBNEIsRUFBQyxDQUFDLEVBQUM7UUFDaEcsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFTLEVBQUM7S0FDekI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL3ZhbHVlcy9ib29sZWFuLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gYXMgXyRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRWYWx1ZVR5cGUsIFZhbHVlVHlwZSB9IGZyb20gXCIuLi92YWx1ZS10eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQm9vbGVhbiB7XG4gIHR5cGU6IFZhbHVlVHlwZS5Cb29sZWFuO1xuICB2YWx1ZTogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNvbnN0ICRCb29sZWFuOiBEb2N1bWVudElvVHlwZTxCb29sZWFuPiA9IG5ldyBEb2N1bWVudFR5cGU8Qm9vbGVhbj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFZhbHVlVHlwZSwgdmFsdWU6IFZhbHVlVHlwZS5Cb29sZWFuIGFzIFZhbHVlVHlwZS5Cb29sZWFufSl9LFxuICAgIHZhbHVlOiB7dHlwZTogXyRCb29sZWFufSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const value_type_1 = __webpack_require__(19);
exports.$CString = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: value_type_1.$ValueType, value: value_type_1.ValueType.CString }) },
        value: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS92YWx1ZXMvYy1zdHJpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBd0Q7QUFDeEQsOENBQXNEO0FBT3pDLFFBQUEsUUFBUSxHQUE0QixJQUFJLHVCQUFZLENBQVU7SUFDekUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFFLEtBQUssRUFBRSxzQkFBUyxDQUFDLE9BQTRCLEVBQUMsQ0FBQyxFQUFDO1FBQ2hHLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUN6RDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvdmFsdWVzL2Mtc3RyaW5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7ICRWYWx1ZVR5cGUsIFZhbHVlVHlwZSB9IGZyb20gXCIuLi92YWx1ZS10eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ1N0cmluZyB7XG4gIHR5cGU6IFZhbHVlVHlwZS5DU3RyaW5nO1xuICB2YWx1ZTogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgJENTdHJpbmc6IERvY3VtZW50SW9UeXBlPENTdHJpbmc+ID0gbmV3IERvY3VtZW50VHlwZTxDU3RyaW5nPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVmFsdWVUeXBlLCB2YWx1ZTogVmFsdWVUeXBlLkNTdHJpbmcgYXMgVmFsdWVUeXBlLkNTdHJpbmd9KX0sXG4gICAgdmFsdWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const value_type_1 = __webpack_require__(19);
exports.$Constant = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: value_type_1.$ValueType, value: value_type_1.ValueType.Constant }) },
        value: { type: uint16_1.$Uint16 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS92YWx1ZXMvY29uc3RhbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsOENBQXNEO0FBT3pDLFFBQUEsU0FBUyxHQUE2QixJQUFJLHVCQUFZLENBQVc7SUFDNUUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFFLEtBQUssRUFBRSxzQkFBUyxDQUFDLFFBQThCLEVBQUMsQ0FBQyxFQUFDO1FBQ2xHLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO0tBQ3ZCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS92YWx1ZXMvY29uc3RhbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkVmFsdWVUeXBlLCBWYWx1ZVR5cGUgfSBmcm9tIFwiLi4vdmFsdWUtdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbnN0YW50IHtcbiAgdHlwZTogVmFsdWVUeXBlLkNvbnN0YW50O1xuICB2YWx1ZTogVWludDE2O1xufVxuXG5leHBvcnQgY29uc3QgJENvbnN0YW50OiBEb2N1bWVudElvVHlwZTxDb25zdGFudD4gPSBuZXcgRG9jdW1lbnRUeXBlPENvbnN0YW50Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVmFsdWVUeXBlLCB2YWx1ZTogVmFsdWVUeXBlLkNvbnN0YW50IGFzIFZhbHVlVHlwZS5Db25zdGFudH0pfSxcbiAgICB2YWx1ZToge3R5cGU6ICRVaW50MTZ9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const float64_1 = __webpack_require__(33);
const literal_1 = __webpack_require__(2);
const value_type_1 = __webpack_require__(19);
exports.$Float32 = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: value_type_1.$ValueType, value: value_type_1.ValueType.Float32 }) },
        value: { type: new float64_1.Float64Type() },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS92YWx1ZXMvZmxvYXQzMi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUFpRDtBQUVqRCw4Q0FBc0Q7QUFPekMsUUFBQSxRQUFRLEdBQTRCLElBQUksdUJBQVksQ0FBVTtJQUN6RSxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUUsS0FBSyxFQUFFLHNCQUFTLENBQUMsT0FBNEIsRUFBQyxDQUFDLEVBQUM7UUFDaEcsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsRUFBRSxFQUFDO0tBQ2pDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS92YWx1ZXMvZmxvYXQzMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgRmxvYXQ2NFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9mbG9hdDY0XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IEZsb2F0MzIgYXMgX0Zsb2F0MzIgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRWYWx1ZVR5cGUsIFZhbHVlVHlwZSB9IGZyb20gXCIuLi92YWx1ZS10eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRmxvYXQzMiB7XG4gIHR5cGU6IFZhbHVlVHlwZS5GbG9hdDMyO1xuICB2YWx1ZTogX0Zsb2F0MzI7XG59XG5cbmV4cG9ydCBjb25zdCAkRmxvYXQzMjogRG9jdW1lbnRJb1R5cGU8RmxvYXQzMj4gPSBuZXcgRG9jdW1lbnRUeXBlPEZsb2F0MzI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRWYWx1ZVR5cGUsIHZhbHVlOiBWYWx1ZVR5cGUuRmxvYXQzMiBhcyBWYWx1ZVR5cGUuRmxvYXQzMn0pfSxcbiAgICB2YWx1ZToge3R5cGU6IG5ldyBGbG9hdDY0VHlwZSgpfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
exports.name = "InvalidFloat64";
function format({ value, source }) {
    return `Invalid float64: ${value}` + (source === undefined ? "" : `, from ${source}`);
}
exports.format = format;
function createInvalidFloat64Error(value, source) {
    return incident_1.Incident(exports.name, { value, source }, format);
}
exports.createInvalidFloat64Error = createInvalidFloat64Error;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZXJyb3JzL2ludmFsaWQtZmxvYXQ2NC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFvQztBQUd2QixRQUFBLElBQUksR0FBUyxnQkFBZ0IsQ0FBQztBQVUzQyxnQkFBdUIsRUFBQyxLQUFLLEVBQUUsTUFBTSxFQUFPO0lBQzFDLE1BQU0sQ0FBQyxvQkFBb0IsS0FBSyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFVBQVUsTUFBTSxFQUFFLENBQUMsQ0FBQztBQUN4RixDQUFDO0FBRkQsd0JBRUM7QUFFRCxtQ0FBMEMsS0FBVSxFQUFFLE1BQVk7SUFDaEUsTUFBTSxDQUFDLG1CQUFRLENBQUMsWUFBSSxFQUFFLEVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQ2pELENBQUM7QUFGRCw4REFFQyIsImZpbGUiOiJlcnJvcnMvaW52YWxpZC1mbG9hdDY0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IHR5cGUgTmFtZSA9IFwiSW52YWxpZEZsb2F0NjRcIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJJbnZhbGlkRmxvYXQ2NFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICB2YWx1ZTogYW55O1xuICBzb3VyY2U/OiBhbnk7XG59XG5cbmV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuZXhwb3J0IHR5cGUgSW52YWxpZEZsb2F0NjRFcnJvciA9IEluY2lkZW50PERhdGEsIE5hbWUsIENhdXNlPjtcblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7dmFsdWUsIHNvdXJjZX06IERhdGEpOiBzdHJpbmcge1xuICByZXR1cm4gYEludmFsaWQgZmxvYXQ2NDogJHt2YWx1ZX1gICsgKHNvdXJjZSA9PT0gdW5kZWZpbmVkID8gXCJcIiA6IGAsIGZyb20gJHtzb3VyY2V9YCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbnZhbGlkRmxvYXQ2NEVycm9yKHZhbHVlOiBhbnksIHNvdXJjZT86IGFueSk6IEludmFsaWRGbG9hdDY0RXJyb3Ige1xuICByZXR1cm4gSW5jaWRlbnQobmFtZSwge3ZhbHVlLCBzb3VyY2V9LCBmb3JtYXQpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const float64_1 = __webpack_require__(33);
const literal_1 = __webpack_require__(2);
const value_type_1 = __webpack_require__(19);
exports.$Float64 = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: value_type_1.$ValueType, value: value_type_1.ValueType.Float64 }) },
        value: { type: new float64_1.Float64Type() },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS92YWx1ZXMvZmxvYXQ2NC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUFpRDtBQUVqRCw4Q0FBc0Q7QUFPekMsUUFBQSxRQUFRLEdBQTRCLElBQUksdUJBQVksQ0FBVTtJQUN6RSxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUUsS0FBSyxFQUFFLHNCQUFTLENBQUMsT0FBNEIsRUFBQyxDQUFDLEVBQUM7UUFDaEcsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsRUFBRSxFQUFDO0tBQ2pDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS92YWx1ZXMvZmxvYXQ2NC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgRmxvYXQ2NFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9mbG9hdDY0XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IEZsb2F0NjQgYXMgX0Zsb2F0NjQgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRWYWx1ZVR5cGUsIFZhbHVlVHlwZSB9IGZyb20gXCIuLi92YWx1ZS10eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRmxvYXQ2NCB7XG4gIHR5cGU6IFZhbHVlVHlwZS5GbG9hdDY0O1xuICB2YWx1ZTogX0Zsb2F0NjQ7XG59XG5cbmV4cG9ydCBjb25zdCAkRmxvYXQ2NDogRG9jdW1lbnRJb1R5cGU8RmxvYXQ2ND4gPSBuZXcgRG9jdW1lbnRUeXBlPEZsb2F0NjQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRWYWx1ZVR5cGUsIHZhbHVlOiBWYWx1ZVR5cGUuRmxvYXQ2NCBhcyBWYWx1ZVR5cGUuRmxvYXQ2NH0pfSxcbiAgICB2YWx1ZToge3R5cGU6IG5ldyBGbG9hdDY0VHlwZSgpfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const sint32_1 = __webpack_require__(47);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const value_type_1 = __webpack_require__(19);
exports.$Int32 = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: value_type_1.$ValueType, value: value_type_1.ValueType.Int32 }) },
        value: { type: sint32_1.$Sint32 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS92YWx1ZXMvaW50MzIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsOENBQXNEO0FBT3pDLFFBQUEsTUFBTSxHQUEwQixJQUFJLHVCQUFZLENBQVE7SUFDbkUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFFLEtBQUssRUFBRSxzQkFBUyxDQUFDLEtBQXdCLEVBQUMsQ0FBQyxFQUFDO1FBQzVGLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO0tBQ3ZCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS92YWx1ZXMvaW50MzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkU2ludDMyIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvc2ludDMyXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgU2ludDMyIGFzIEludDMyUHJpbWl0aXZlIH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkVmFsdWVUeXBlLCBWYWx1ZVR5cGUgfSBmcm9tIFwiLi4vdmFsdWUtdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEludDMyIHtcbiAgdHlwZTogVmFsdWVUeXBlLkludDMyO1xuICB2YWx1ZTogSW50MzJQcmltaXRpdmU7XG59XG5cbmV4cG9ydCBjb25zdCAkSW50MzI6IERvY3VtZW50SW9UeXBlPEludDMyPiA9IG5ldyBEb2N1bWVudFR5cGU8SW50MzI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRWYWx1ZVR5cGUsIHZhbHVlOiBWYWx1ZVR5cGUuSW50MzIgYXMgVmFsdWVUeXBlLkludDMyfSl9LFxuICAgIHZhbHVlOiB7dHlwZTogJFNpbnQzMn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const value_type_1 = __webpack_require__(19);
exports.$Null = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: value_type_1.$ValueType, value: value_type_1.ValueType.Null }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS92YWx1ZXMvbnVsbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELDhDQUFzRDtBQU16QyxRQUFBLEtBQUssR0FBeUIsSUFBSSx1QkFBWSxDQUFPO0lBQ2hFLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBRSxLQUFLLEVBQUUsc0JBQVMsQ0FBQyxJQUFzQixFQUFDLENBQUMsRUFBQztLQUMzRjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvdmFsdWVzL251bGwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJFZhbHVlVHlwZSwgVmFsdWVUeXBlIH0gZnJvbSBcIi4uL3ZhbHVlLXR5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBOdWxsIHtcbiAgdHlwZTogVmFsdWVUeXBlLk51bGw7XG59XG5cbmV4cG9ydCBjb25zdCAkTnVsbDogRG9jdW1lbnRJb1R5cGU8TnVsbD4gPSBuZXcgRG9jdW1lbnRUeXBlPE51bGw+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRWYWx1ZVR5cGUsIHZhbHVlOiBWYWx1ZVR5cGUuTnVsbCBhcyBWYWx1ZVR5cGUuTnVsbH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint8_1 = __webpack_require__(22);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const value_type_1 = __webpack_require__(19);
exports.$Register = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: value_type_1.$ValueType, value: value_type_1.ValueType.Register }) },
        value: { type: uint8_1.$Uint8 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS92YWx1ZXMvcmVnaXN0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQ0FBNkM7QUFDN0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsOENBQXNEO0FBT3pDLFFBQUEsU0FBUyxHQUE2QixJQUFJLHVCQUFZLENBQVc7SUFDNUUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFFLEtBQUssRUFBRSxzQkFBUyxDQUFDLFFBQThCLEVBQUMsQ0FBQyxFQUFDO1FBQ2xHLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxjQUFNLEVBQUM7S0FDdEI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL3ZhbHVlcy9yZWdpc3Rlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50OCB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQ4XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDggfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRWYWx1ZVR5cGUsIFZhbHVlVHlwZSB9IGZyb20gXCIuLi92YWx1ZS10eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVnaXN0ZXIge1xuICB0eXBlOiBWYWx1ZVR5cGUuUmVnaXN0ZXI7XG4gIHZhbHVlOiBVaW50ODtcbn1cblxuZXhwb3J0IGNvbnN0ICRSZWdpc3RlcjogRG9jdW1lbnRJb1R5cGU8UmVnaXN0ZXI+ID0gbmV3IERvY3VtZW50VHlwZTxSZWdpc3Rlcj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFZhbHVlVHlwZSwgdmFsdWU6IFZhbHVlVHlwZS5SZWdpc3RlciBhcyBWYWx1ZVR5cGUuUmVnaXN0ZXJ9KX0sXG4gICAgdmFsdWU6IHt0eXBlOiAkVWludDh9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const value_type_1 = __webpack_require__(19);
exports.$Undefined = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: value_type_1.$ValueType, value: value_type_1.ValueType.Undefined }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS92YWx1ZXMvdW5kZWZpbmVkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsOENBQXNEO0FBTXpDLFFBQUEsVUFBVSxHQUE4QixJQUFJLHVCQUFZLENBQVk7SUFDL0UsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFFLEtBQUssRUFBRSxzQkFBUyxDQUFDLFNBQWdDLEVBQUMsQ0FBQyxFQUFDO0tBQ3JHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS92YWx1ZXMvdW5kZWZpbmVkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRWYWx1ZVR5cGUsIFZhbHVlVHlwZSB9IGZyb20gXCIuLi92YWx1ZS10eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVW5kZWZpbmVkIHtcbiAgdHlwZTogVmFsdWVUeXBlLlVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGNvbnN0ICRVbmRlZmluZWQ6IERvY3VtZW50SW9UeXBlPFVuZGVmaW5lZD4gPSBuZXcgRG9jdW1lbnRUeXBlPFVuZGVmaW5lZD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFZhbHVlVHlwZSwgdmFsdWU6IFZhbHVlVHlwZS5VbmRlZmluZWQgYXMgVmFsdWVUeXBlLlVuZGVmaW5lZH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$PushDuplicate = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.PushDuplicate }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3B1c2gtZHVwbGljYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsY0FBYyxHQUFrQyxJQUFJLHVCQUFZLENBQWdCO0lBQzNGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxhQUF5QyxFQUFDLENBQUMsRUFBQztLQUNsSDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9wdXNoLWR1cGxpY2F0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHVzaER1cGxpY2F0ZSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuUHVzaER1cGxpY2F0ZTtcbn1cblxuZXhwb3J0IGNvbnN0ICRQdXNoRHVwbGljYXRlOiBEb2N1bWVudElvVHlwZTxQdXNoRHVwbGljYXRlPiA9IG5ldyBEb2N1bWVudFR5cGU8UHVzaER1cGxpY2F0ZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuUHVzaER1cGxpY2F0ZSBhcyBBY3Rpb25UeXBlLlB1c2hEdXBsaWNhdGV9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$RandomNumber = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.RandomNumber }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3JhbmRvbS1udW1iZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxhQUFhLEdBQWlDLElBQUksdUJBQVksQ0FBZTtJQUN4RixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsWUFBdUMsRUFBQyxDQUFDLEVBQUM7S0FDaEg7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvcmFuZG9tLW51bWJlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmFuZG9tTnVtYmVyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5SYW5kb21OdW1iZXI7XG59XG5cbmV4cG9ydCBjb25zdCAkUmFuZG9tTnVtYmVyOiBEb2N1bWVudElvVHlwZTxSYW5kb21OdW1iZXI+ID0gbmV3IERvY3VtZW50VHlwZTxSYW5kb21OdW1iZXI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlJhbmRvbU51bWJlciBhcyBBY3Rpb25UeXBlLlJhbmRvbU51bWJlcn0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$RemoveSprite = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.RemoveSprite }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3JlbW92ZS1zcHJpdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxhQUFhLEdBQWlDLElBQUksdUJBQVksQ0FBZTtJQUN4RixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsWUFBdUMsRUFBQyxDQUFDLEVBQUM7S0FDaEg7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvcmVtb3ZlLXNwcml0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVtb3ZlU3ByaXRlIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5SZW1vdmVTcHJpdGU7XG59XG5cbmV4cG9ydCBjb25zdCAkUmVtb3ZlU3ByaXRlOiBEb2N1bWVudElvVHlwZTxSZW1vdmVTcHJpdGU+ID0gbmV3IERvY3VtZW50VHlwZTxSZW1vdmVTcHJpdGU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlJlbW92ZVNwcml0ZSBhcyBBY3Rpb25UeXBlLlJlbW92ZVNwcml0ZX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Return = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Return }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3JldHVybi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLE9BQU8sR0FBMkIsSUFBSSx1QkFBWSxDQUFTO0lBQ3RFLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxNQUEyQixFQUFDLENBQUMsRUFBQztLQUNwRztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9yZXR1cm4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJldHVybiBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuUmV0dXJuO1xufVxuXG5leHBvcnQgY29uc3QgJFJldHVybjogRG9jdW1lbnRJb1R5cGU8UmV0dXJuPiA9IG5ldyBEb2N1bWVudFR5cGU8UmV0dXJuPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5SZXR1cm4gYXMgQWN0aW9uVHlwZS5SZXR1cm59KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$SetMember = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.SetMember }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3NldC1tZW1iZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxVQUFVLEdBQThCLElBQUksdUJBQVksQ0FBWTtJQUMvRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsU0FBaUMsRUFBQyxDQUFDLEVBQUM7S0FDMUc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvc2V0LW1lbWJlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2V0TWVtYmVyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TZXRNZW1iZXI7XG59XG5cbmV4cG9ydCBjb25zdCAkU2V0TWVtYmVyOiBEb2N1bWVudElvVHlwZTxTZXRNZW1iZXI+ID0gbmV3IERvY3VtZW50VHlwZTxTZXRNZW1iZXI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlNldE1lbWJlciBhcyBBY3Rpb25UeXBlLlNldE1lbWJlcn0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$SetProperty = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.SetProperty }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3NldC1wcm9wZXJ0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLFlBQVksR0FBZ0MsSUFBSSx1QkFBWSxDQUFjO0lBQ3JGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxXQUFxQyxFQUFDLENBQUMsRUFBQztLQUM5RztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9zZXQtcHJvcGVydHkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNldFByb3BlcnR5IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TZXRQcm9wZXJ0eTtcbn1cblxuZXhwb3J0IGNvbnN0ICRTZXRQcm9wZXJ0eTogRG9jdW1lbnRJb1R5cGU8U2V0UHJvcGVydHk+ID0gbmV3IERvY3VtZW50VHlwZTxTZXRQcm9wZXJ0eT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuU2V0UHJvcGVydHkgYXMgQWN0aW9uVHlwZS5TZXRQcm9wZXJ0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const action_type_1 = __webpack_require__(3);
exports.$SetTarget = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.SetTarget }) },
        targetName: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3NldC10YXJnZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBd0Q7QUFDeEQsZ0RBQXlEO0FBUTVDLFFBQUEsVUFBVSxHQUE4QixJQUFJLHVCQUFZLENBQVk7SUFDL0UsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQWlDLEVBQUMsQ0FBQyxFQUFDO1FBQ3pHLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUM5RDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9zZXQtdGFyZ2V0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTZXRUYXJnZXQgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLlNldFRhcmdldDtcbiAgdGFyZ2V0TmFtZTogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgJFNldFRhcmdldDogRG9jdW1lbnRJb1R5cGU8U2V0VGFyZ2V0PiA9IG5ldyBEb2N1bWVudFR5cGU8U2V0VGFyZ2V0Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5TZXRUYXJnZXQgYXMgQWN0aW9uVHlwZS5TZXRUYXJnZXR9KX0sXG4gICAgdGFyZ2V0TmFtZToge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$SetTarget2 = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.SetTarget2 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3NldC10YXJnZXQyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFVBQW1DLEVBQUMsQ0FBQyxFQUFDO0tBQzVHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL3NldC10YXJnZXQyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTZXRUYXJnZXQyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TZXRUYXJnZXQyO1xufVxuXG5leHBvcnQgY29uc3QgJFNldFRhcmdldDI6IERvY3VtZW50SW9UeXBlPFNldFRhcmdldDI+ID0gbmV3IERvY3VtZW50VHlwZTxTZXRUYXJnZXQyPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5TZXRUYXJnZXQyIGFzIEFjdGlvblR5cGUuU2V0VGFyZ2V0Mn0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$SetVariable = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.SetVariable }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3NldC12YXJpYWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLFlBQVksR0FBZ0MsSUFBSSx1QkFBWSxDQUFjO0lBQ3JGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxXQUFxQyxFQUFDLENBQUMsRUFBQztLQUM5RztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9zZXQtdmFyaWFibGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNldFZhcmlhYmxlIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TZXRWYXJpYWJsZTtcbn1cblxuZXhwb3J0IGNvbnN0ICRTZXRWYXJpYWJsZTogRG9jdW1lbnRJb1R5cGU8U2V0VmFyaWFibGU+ID0gbmV3IERvY3VtZW50VHlwZTxTZXRWYXJpYWJsZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuU2V0VmFyaWFibGUgYXMgQWN0aW9uVHlwZS5TZXRWYXJpYWJsZX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$StackSwap = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.StackSwap }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3N0YWNrLXN3YXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxVQUFVLEdBQThCLElBQUksdUJBQVksQ0FBWTtJQUMvRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsU0FBaUMsRUFBQyxDQUFDLEVBQUM7S0FDMUc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvc3RhY2stc3dhcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RhY2tTd2FwIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TdGFja1N3YXA7XG59XG5cbmV4cG9ydCBjb25zdCAkU3RhY2tTd2FwOiBEb2N1bWVudElvVHlwZTxTdGFja1N3YXA+ID0gbmV3IERvY3VtZW50VHlwZTxTdGFja1N3YXA+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlN0YWNrU3dhcCBhcyBBY3Rpb25UeXBlLlN0YWNrU3dhcH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$StartDrag = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.StartDrag }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3N0YXJ0LWRyYWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxVQUFVLEdBQThCLElBQUksdUJBQVksQ0FBWTtJQUMvRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsU0FBaUMsRUFBQyxDQUFDLEVBQUM7S0FDMUc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvc3RhcnQtZHJhZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RhcnREcmFnIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TdGFydERyYWc7XG59XG5cbmV4cG9ydCBjb25zdCAkU3RhcnREcmFnOiBEb2N1bWVudElvVHlwZTxTdGFydERyYWc+ID0gbmV3IERvY3VtZW50VHlwZTxTdGFydERyYWc+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlN0YXJ0RHJhZyBhcyBBY3Rpb25UeXBlLlN0YXJ0RHJhZ30pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Stop = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Stop }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3N0b3AudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxLQUFLLEdBQXlCLElBQUksdUJBQVksQ0FBTztJQUNoRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsSUFBdUIsRUFBQyxDQUFDLEVBQUM7S0FDaEc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvc3RvcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RvcCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuU3RvcDtcbn1cblxuZXhwb3J0IGNvbnN0ICRTdG9wOiBEb2N1bWVudElvVHlwZTxTdG9wPiA9IG5ldyBEb2N1bWVudFR5cGU8U3RvcD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuU3RvcCBhcyBBY3Rpb25UeXBlLlN0b3B9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$StopSounds = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.StopSounds }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3N0b3Atc291bmRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFVBQW1DLEVBQUMsQ0FBQyxFQUFDO0tBQzVHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL3N0b3Atc291bmRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdG9wU291bmRzIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TdG9wU291bmRzO1xufVxuXG5leHBvcnQgY29uc3QgJFN0b3BTb3VuZHM6IERvY3VtZW50SW9UeXBlPFN0b3BTb3VuZHM+ID0gbmV3IERvY3VtZW50VHlwZTxTdG9wU291bmRzPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5TdG9wU291bmRzIGFzIEFjdGlvblR5cGUuU3RvcFNvdW5kc30pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint8_1 = __webpack_require__(22);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$StoreRegister = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.StoreRegister }) },
        registerNumber: { type: uint8_1.$Uint8 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3N0b3JlLXJlZ2lzdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0NBQTZDO0FBQzdDLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBRWpELGdEQUF5RDtBQVE1QyxRQUFBLGNBQWMsR0FBa0MsSUFBSSx1QkFBWSxDQUFnQjtJQUMzRixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsYUFBeUMsRUFBQyxDQUFDLEVBQUM7UUFDakgsY0FBYyxFQUFFLEVBQUMsSUFBSSxFQUFFLGNBQU0sRUFBQztLQUMvQjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9zdG9yZS1yZWdpc3Rlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50OCB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQ4XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDggfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdG9yZVJlZ2lzdGVyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TdG9yZVJlZ2lzdGVyO1xuICByZWdpc3Rlck51bWJlcjogVWludDg7XG59XG5cbmV4cG9ydCBjb25zdCAkU3RvcmVSZWdpc3RlcjogRG9jdW1lbnRJb1R5cGU8U3RvcmVSZWdpc3Rlcj4gPSBuZXcgRG9jdW1lbnRUeXBlPFN0b3JlUmVnaXN0ZXI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlN0b3JlUmVnaXN0ZXIgYXMgQWN0aW9uVHlwZS5TdG9yZVJlZ2lzdGVyfSl9LFxuICAgIHJlZ2lzdGVyTnVtYmVyOiB7dHlwZTogJFVpbnQ4fSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$StrictEquals = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.StrictEquals }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3N0cmljdC1lcXVhbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxhQUFhLEdBQWlDLElBQUksdUJBQVksQ0FBZTtJQUN4RixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsWUFBdUMsRUFBQyxDQUFDLEVBQUM7S0FDaEg7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvc3RyaWN0LWVxdWFscy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RyaWN0RXF1YWxzIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TdHJpY3RFcXVhbHM7XG59XG5cbmV4cG9ydCBjb25zdCAkU3RyaWN0RXF1YWxzOiBEb2N1bWVudElvVHlwZTxTdHJpY3RFcXVhbHM+ID0gbmV3IERvY3VtZW50VHlwZTxTdHJpY3RFcXVhbHM+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlN0cmljdEVxdWFscyBhcyBBY3Rpb25UeXBlLlN0cmljdEVxdWFsc30pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$StrictMode = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.StrictMode }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3N0cmljdC1tb2RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFVBQW1DLEVBQUMsQ0FBQyxFQUFDO0tBQzVHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL3N0cmljdC1tb2RlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdHJpY3RNb2RlIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TdHJpY3RNb2RlO1xufVxuXG5leHBvcnQgY29uc3QgJFN0cmljdE1vZGU6IERvY3VtZW50SW9UeXBlPFN0cmljdE1vZGU+ID0gbmV3IERvY3VtZW50VHlwZTxTdHJpY3RNb2RlPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5TdHJpY3RNb2RlIGFzIEFjdGlvblR5cGUuU3RyaWN0TW9kZX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$StringAdd = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.StringAdd }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3N0cmluZy1hZGQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxVQUFVLEdBQThCLElBQUksdUJBQVksQ0FBWTtJQUMvRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsU0FBaUMsRUFBQyxDQUFDLEVBQUM7S0FDMUc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvc3RyaW5nLWFkZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RyaW5nQWRkIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TdHJpbmdBZGQ7XG59XG5cbmV4cG9ydCBjb25zdCAkU3RyaW5nQWRkOiBEb2N1bWVudElvVHlwZTxTdHJpbmdBZGQ+ID0gbmV3IERvY3VtZW50VHlwZTxTdHJpbmdBZGQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlN0cmluZ0FkZCBhcyBBY3Rpb25UeXBlLlN0cmluZ0FkZH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$StringEquals = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.StringEquals }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3N0cmluZy1lcXVhbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxhQUFhLEdBQWlDLElBQUksdUJBQVksQ0FBZTtJQUN4RixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsWUFBdUMsRUFBQyxDQUFDLEVBQUM7S0FDaEg7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvc3RyaW5nLWVxdWFscy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RyaW5nRXF1YWxzIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TdHJpbmdFcXVhbHM7XG59XG5cbmV4cG9ydCBjb25zdCAkU3RyaW5nRXF1YWxzOiBEb2N1bWVudElvVHlwZTxTdHJpbmdFcXVhbHM+ID0gbmV3IERvY3VtZW50VHlwZTxTdHJpbmdFcXVhbHM+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlN0cmluZ0VxdWFscyBhcyBBY3Rpb25UeXBlLlN0cmluZ0VxdWFsc30pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$StringExtract = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.StringExtract }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3N0cmluZy1leHRyYWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsY0FBYyxHQUFrQyxJQUFJLHVCQUFZLENBQWdCO0lBQzNGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxhQUF5QyxFQUFDLENBQUMsRUFBQztLQUNsSDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9zdHJpbmctZXh0cmFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RyaW5nRXh0cmFjdCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuU3RyaW5nRXh0cmFjdDtcbn1cblxuZXhwb3J0IGNvbnN0ICRTdHJpbmdFeHRyYWN0OiBEb2N1bWVudElvVHlwZTxTdHJpbmdFeHRyYWN0PiA9IG5ldyBEb2N1bWVudFR5cGU8U3RyaW5nRXh0cmFjdD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuU3RyaW5nRXh0cmFjdCBhcyBBY3Rpb25UeXBlLlN0cmluZ0V4dHJhY3R9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$StringGreater = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.StringGreater }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3N0cmluZy1ncmVhdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsY0FBYyxHQUFrQyxJQUFJLHVCQUFZLENBQWdCO0lBQzNGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxhQUF5QyxFQUFDLENBQUMsRUFBQztLQUNsSDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy9zdHJpbmctZ3JlYXRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RyaW5nR3JlYXRlciBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuU3RyaW5nR3JlYXRlcjtcbn1cblxuZXhwb3J0IGNvbnN0ICRTdHJpbmdHcmVhdGVyOiBEb2N1bWVudElvVHlwZTxTdHJpbmdHcmVhdGVyPiA9IG5ldyBEb2N1bWVudFR5cGU8U3RyaW5nR3JlYXRlcj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuU3RyaW5nR3JlYXRlciBhcyBBY3Rpb25UeXBlLlN0cmluZ0dyZWF0ZXJ9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$StringLength = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.StringLength }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3N0cmluZy1sZW5ndGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxhQUFhLEdBQWlDLElBQUksdUJBQVksQ0FBZTtJQUN4RixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsWUFBdUMsRUFBQyxDQUFDLEVBQUM7S0FDaEg7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvc3RyaW5nLWxlbmd0aC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RyaW5nTGVuZ3RoIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TdHJpbmdMZW5ndGg7XG59XG5cbmV4cG9ydCBjb25zdCAkU3RyaW5nTGVuZ3RoOiBEb2N1bWVudElvVHlwZTxTdHJpbmdMZW5ndGg+ID0gbmV3IERvY3VtZW50VHlwZTxTdHJpbmdMZW5ndGg+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlN0cmluZ0xlbmd0aCBhcyBBY3Rpb25UeXBlLlN0cmluZ0xlbmd0aH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$StringLess = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.StringLess }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3N0cmluZy1sZXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFVBQW1DLEVBQUMsQ0FBQyxFQUFDO0tBQzVHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL3N0cmluZy1sZXNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdHJpbmdMZXNzIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TdHJpbmdMZXNzO1xufVxuXG5leHBvcnQgY29uc3QgJFN0cmluZ0xlc3M6IERvY3VtZW50SW9UeXBlPFN0cmluZ0xlc3M+ID0gbmV3IERvY3VtZW50VHlwZTxTdHJpbmdMZXNzPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5TdHJpbmdMZXNzIGFzIEFjdGlvblR5cGUuU3RyaW5nTGVzc30pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Subtract = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Subtract }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3N1YnRyYWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsU0FBUyxHQUE2QixJQUFJLHVCQUFZLENBQVc7SUFDNUUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFFBQStCLEVBQUMsQ0FBQyxFQUFDO0tBQ3hHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL3N1YnRyYWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdWJ0cmFjdCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuU3VidHJhY3Q7XG59XG5cbmV4cG9ydCBjb25zdCAkU3VidHJhY3Q6IERvY3VtZW50SW9UeXBlPFN1YnRyYWN0PiA9IG5ldyBEb2N1bWVudFR5cGU8U3VidHJhY3Q+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlN1YnRyYWN0IGFzIEFjdGlvblR5cGUuU3VidHJhY3R9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$TargetPath = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.TargetPath }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3RhcmdldC1wYXRoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFVBQW1DLEVBQUMsQ0FBQyxFQUFDO0tBQzVHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL3RhcmdldC1wYXRoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBUYXJnZXRQYXRoIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5UYXJnZXRQYXRoO1xufVxuXG5leHBvcnQgY29uc3QgJFRhcmdldFBhdGg6IERvY3VtZW50SW9UeXBlPFRhcmdldFBhdGg+ID0gbmV3IERvY3VtZW50VHlwZTxUYXJnZXRQYXRoPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5UYXJnZXRQYXRoIGFzIEFjdGlvblR5cGUuVGFyZ2V0UGF0aH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Throw = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Throw }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3Rocm93LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsTUFBTSxHQUEwQixJQUFJLHVCQUFZLENBQVE7SUFDbkUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLEtBQXlCLEVBQUMsQ0FBQyxFQUFDO0tBQ2xHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL3Rocm93LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBUaHJvdyBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuVGhyb3c7XG59XG5cbmV4cG9ydCBjb25zdCAkVGhyb3c6IERvY3VtZW50SW9UeXBlPFRocm93PiA9IG5ldyBEb2N1bWVudFR5cGU8VGhyb3c+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlRocm93IGFzIEFjdGlvblR5cGUuVGhyb3d9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$ToggleQuality = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.ToggleQuality }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3RvZ2dsZS1xdWFsaXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsY0FBYyxHQUFrQyxJQUFJLHVCQUFZLENBQWdCO0lBQzNGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxhQUF5QyxFQUFDLENBQUMsRUFBQztLQUNsSDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy90b2dnbGUtcXVhbGl0eS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVG9nZ2xlUXVhbGl0eSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuVG9nZ2xlUXVhbGl0eTtcbn1cblxuZXhwb3J0IGNvbnN0ICRUb2dnbGVRdWFsaXR5OiBEb2N1bWVudElvVHlwZTxUb2dnbGVRdWFsaXR5PiA9IG5ldyBEb2N1bWVudFR5cGU8VG9nZ2xlUXVhbGl0eT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuVG9nZ2xlUXVhbGl0eSBhcyBBY3Rpb25UeXBlLlRvZ2dsZVF1YWxpdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$ToInteger = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.ToInteger }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3RvLWludGVnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxVQUFVLEdBQThCLElBQUksdUJBQVksQ0FBWTtJQUMvRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsU0FBaUMsRUFBQyxDQUFDLEVBQUM7S0FDMUc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvdG8taW50ZWdlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVG9JbnRlZ2VyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Ub0ludGVnZXI7XG59XG5cbmV4cG9ydCBjb25zdCAkVG9JbnRlZ2VyOiBEb2N1bWVudElvVHlwZTxUb0ludGVnZXI+ID0gbmV3IERvY3VtZW50VHlwZTxUb0ludGVnZXI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlRvSW50ZWdlciBhcyBBY3Rpb25UeXBlLlRvSW50ZWdlcn0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$ToNumber = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.ToNumber }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3RvLW51bWJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLFNBQVMsR0FBNkIsSUFBSSx1QkFBWSxDQUFXO0lBQzVFLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxRQUErQixFQUFDLENBQUMsRUFBQztLQUN4RztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy90by1udW1iZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRvTnVtYmVyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Ub051bWJlcjtcbn1cblxuZXhwb3J0IGNvbnN0ICRUb051bWJlcjogRG9jdW1lbnRJb1R5cGU8VG9OdW1iZXI+ID0gbmV3IERvY3VtZW50VHlwZTxUb051bWJlcj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuVG9OdW1iZXIgYXMgQWN0aW9uVHlwZS5Ub051bWJlcn0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$ToString = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.ToString }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3RvLXN0cmluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUF5RDtBQU81QyxRQUFBLFNBQVMsR0FBNkIsSUFBSSx1QkFBWSxDQUFXO0lBQzVFLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxRQUErQixFQUFDLENBQUMsRUFBQztLQUN4RztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy90by1zdHJpbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRvU3RyaW5nIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Ub1N0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0ICRUb1N0cmluZzogRG9jdW1lbnRJb1R5cGU8VG9TdHJpbmc+ID0gbmV3IERvY3VtZW50VHlwZTxUb1N0cmluZz4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuVG9TdHJpbmcgYXMgQWN0aW9uVHlwZS5Ub1N0cmluZ30pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Trace = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Trace }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3RyYWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQXlEO0FBTzVDLFFBQUEsTUFBTSxHQUEwQixJQUFJLHVCQUFZLENBQVE7SUFDbkUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLEtBQXlCLEVBQUMsQ0FBQyxFQUFDO0tBQ2xHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL3RyYWNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBUcmFjZSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuVHJhY2U7XG59XG5cbmV4cG9ydCBjb25zdCAkVHJhY2U6IERvY3VtZW50SW9UeXBlPFRyYWNlPiA9IG5ldyBEb2N1bWVudFR5cGU8VHJhY2U+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlRyYWNlIGFzIEFjdGlvblR5cGUuVHJhY2V9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_1 = __webpack_require__(40);
const action_type_1 = __webpack_require__(3);
const catch_target_1 = __webpack_require__(84);
exports.$Try = new document_1.DocumentType(() => ({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Try }) },
        try: { type: new array_1.ArrayType({ itemType: action_1.$Action, maxLength: Infinity }) },
        catch: { type: new array_1.ArrayType({ itemType: action_1.$Action, maxLength: Infinity }), optional: true },
        catchTarget: { type: catch_target_1.$CatchTarget, optional: true },
        finally: { type: new array_1.ArrayType({ itemType: action_1.$Action, maxLength: Infinity }), optional: true },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3RyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1Qyw0Q0FBNkM7QUFDN0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxzQ0FBNEM7QUFDNUMsZ0RBQXlEO0FBQ3pELGtEQUE0RDtBQVcvQyxRQUFBLElBQUksR0FBd0IsSUFBSSx1QkFBWSxDQUFNLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDcEUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLEdBQXFCLEVBQUMsQ0FBQyxFQUFDO1FBQzdGLEdBQUcsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsZ0JBQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUNwRSxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLGdCQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUN0RixXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUsMkJBQVksRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQ2pELE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsZ0JBQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO0tBQ3pGO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvdHJ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uLCBBY3Rpb24gfSBmcm9tIFwiLi4vYWN0aW9uXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgJENhdGNoVGFyZ2V0LCBDYXRjaFRhcmdldCB9IGZyb20gXCIuLi9jYXRjaC10YXJnZXRcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRyeSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuVHJ5O1xuICB0cnk6IEFjdGlvbltdO1xuICBjYXRjaD86IEFjdGlvbltdO1xuICBjYXRjaFRhcmdldD86IENhdGNoVGFyZ2V0O1xuICBmaW5hbGx5PzogQWN0aW9uW107XG59XG5cbmV4cG9ydCBjb25zdCAkVHJ5OiBEb2N1bWVudElvVHlwZTxUcnk+ID0gbmV3IERvY3VtZW50VHlwZTxUcnk+KCgpID0+ICh7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5UcnkgYXMgQWN0aW9uVHlwZS5Ucnl9KX0sXG4gICAgdHJ5OiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRBY3Rpb24sIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgY2F0Y2g6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJEFjdGlvbiwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgY2F0Y2hUYXJnZXQ6IHt0eXBlOiAkQ2F0Y2hUYXJnZXQsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBmaW5hbGx5OiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRBY3Rpb24sIG1heExlbmd0aDogSW5maW5pdHl9KSwgb3B0aW9uYWw6IHRydWV9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSkpO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint8_1 = __webpack_require__(22);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const _type_1 = __webpack_require__(56);
exports.$Register = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$CatchTargetType,
                value: _type_1.CatchTargetType.Register,
            }),
        },
        register: { type: uint8_1.$Uint8 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9jYXRjaC10YXJnZXRzL3JlZ2lzdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0NBQTZDO0FBQzdDLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBRWpELG1DQUE0RDtBQU8vQyxRQUFBLFNBQVMsR0FBNkIsSUFBSSx1QkFBWSxDQUFXO0lBQzVFLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRTtZQUNKLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUM7Z0JBQ3BCLElBQUksRUFBRSx3QkFBZ0I7Z0JBQ3RCLEtBQUssRUFBRSx1QkFBZSxDQUFDLFFBQW9DO2FBQzVELENBQUM7U0FDSDtRQUNELFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxjQUFNLEVBQUM7S0FDekI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2NhdGNoLXRhcmdldHMvcmVnaXN0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkVWludDggfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50OFwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQ4IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkQ2F0Y2hUYXJnZXRUeXBlLCBDYXRjaFRhcmdldFR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlZ2lzdGVyIHtcbiAgdHlwZTogQ2F0Y2hUYXJnZXRUeXBlLlJlZ2lzdGVyO1xuICByZWdpc3RlcjogVWludDg7XG59XG5cbmV4cG9ydCBjb25zdCAkUmVnaXN0ZXI6IERvY3VtZW50SW9UeXBlPFJlZ2lzdGVyPiA9IG5ldyBEb2N1bWVudFR5cGU8UmVnaXN0ZXI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHtcbiAgICAgIHR5cGU6IG5ldyBMaXRlcmFsVHlwZSh7XG4gICAgICAgIHR5cGU6ICRDYXRjaFRhcmdldFR5cGUsXG4gICAgICAgIHZhbHVlOiBDYXRjaFRhcmdldFR5cGUuUmVnaXN0ZXIgYXMgQ2F0Y2hUYXJnZXRUeXBlLlJlZ2lzdGVyLFxuICAgICAgfSksXG4gICAgfSxcbiAgICByZWdpc3Rlcjoge3R5cGU6ICRVaW50OH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const _type_1 = __webpack_require__(56);
exports.$Variable = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$CatchTargetType,
                value: _type_1.CatchTargetType.Variable,
            }),
        },
        variable: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9jYXRjaC10YXJnZXRzL3ZhcmlhYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsd0RBQXdEO0FBQ3hELG1DQUE0RDtBQU8vQyxRQUFBLFNBQVMsR0FBNkIsSUFBSSx1QkFBWSxDQUFXO0lBQzVFLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRTtZQUNKLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUM7Z0JBQ3BCLElBQUksRUFBRSx3QkFBZ0I7Z0JBQ3RCLEtBQUssRUFBRSx1QkFBZSxDQUFDLFFBQW9DO2FBQzVELENBQUM7U0FDSDtRQUNELFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUM1RDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvY2F0Y2gtdGFyZ2V0cy92YXJpYWJsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVY3MyU3RyaW5nVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3VjczItc3RyaW5nXCI7XG5pbXBvcnQgeyAkQ2F0Y2hUYXJnZXRUeXBlLCBDYXRjaFRhcmdldFR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFZhcmlhYmxlIHtcbiAgdHlwZTogQ2F0Y2hUYXJnZXRUeXBlLlZhcmlhYmxlO1xuICB2YXJpYWJsZTogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgJFZhcmlhYmxlOiBEb2N1bWVudElvVHlwZTxWYXJpYWJsZT4gPSBuZXcgRG9jdW1lbnRUeXBlPFZhcmlhYmxlPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7XG4gICAgICB0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe1xuICAgICAgICB0eXBlOiAkQ2F0Y2hUYXJnZXRUeXBlLFxuICAgICAgICB2YWx1ZTogQ2F0Y2hUYXJnZXRUeXBlLlZhcmlhYmxlIGFzIENhdGNoVGFyZ2V0VHlwZS5WYXJpYWJsZSxcbiAgICAgIH0pLFxuICAgIH0sXG4gICAgdmFyaWFibGU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$TypeOf = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.TypeOf }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3R5cGUtb2YudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBeUQ7QUFPNUMsUUFBQSxPQUFPLEdBQTJCLElBQUksdUJBQVksQ0FBUztJQUN0RSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsTUFBMkIsRUFBQyxDQUFDLEVBQUM7S0FDcEc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJhdm0xL2FjdGlvbnMvdHlwZS1vZi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkQWN0aW9uVHlwZSwgQWN0aW9uVHlwZSB9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFzZSB9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHlwZU9mIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5UeXBlT2Y7XG59XG5cbmV4cG9ydCBjb25zdCAkVHlwZU9mOiBEb2N1bWVudElvVHlwZTxUeXBlT2Y+ID0gbmV3IERvY3VtZW50VHlwZTxUeXBlT2Y+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlR5cGVPZiBhcyBBY3Rpb25UeXBlLlR5cGVPZn0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$Unknown = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.Unknown }) },
        actionCode: { type: new integer_1.IntegerType() },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3Vua25vd24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBaUQ7QUFFakQsZ0RBQXlEO0FBUTVDLFFBQUEsUUFBUSxHQUE0QixJQUFJLHVCQUFZLENBQVU7SUFDekUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLE9BQTZCLEVBQUMsQ0FBQyxFQUFDO1FBQ3JHLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBQztLQUN0QztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy91bmtub3duLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2ludGVnZXJcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDggfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBVbmtub3duIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Vbmtub3duO1xuICBhY3Rpb25Db2RlOiBVaW50ODtcbn1cblxuZXhwb3J0IGNvbnN0ICRVbmtub3duOiBEb2N1bWVudElvVHlwZTxVbmtub3duPiA9IG5ldyBEb2N1bWVudFR5cGU8VW5rbm93bj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkQWN0aW9uVHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuVW5rbm93biBhcyBBY3Rpb25UeXBlLlVua25vd259KX0sXG4gICAgYWN0aW9uQ29kZToge3R5cGU6IG5ldyBJbnRlZ2VyVHlwZSgpfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$WaitForFrame = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.WaitForFrame }) },
        frame: { type: new integer_1.IntegerType() },
        skipCount: { type: new integer_1.IntegerType() },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3dhaXQtZm9yLWZyYW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQWlEO0FBRWpELGdEQUF5RDtBQVM1QyxRQUFBLGFBQWEsR0FBaUMsSUFBSSx1QkFBWSxDQUFlO0lBQ3hGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxZQUF1QyxFQUFDLENBQUMsRUFBQztRQUMvRyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxFQUFFLEVBQUM7UUFDaEMsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsRUFBRSxFQUFDO0tBQ3JDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL3dhaXQtZm9yLWZyYW1lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2ludGVnZXJcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludFNpemUgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBXYWl0Rm9yRnJhbWUgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLldhaXRGb3JGcmFtZTtcbiAgZnJhbWU6IFVpbnRTaXplO1xuICBza2lwQ291bnQ6IFVpbnRTaXplO1xufVxuXG5leHBvcnQgY29uc3QgJFdhaXRGb3JGcmFtZTogRG9jdW1lbnRJb1R5cGU8V2FpdEZvckZyYW1lPiA9IG5ldyBEb2N1bWVudFR5cGU8V2FpdEZvckZyYW1lPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRBY3Rpb25UeXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5XYWl0Rm9yRnJhbWUgYXMgQWN0aW9uVHlwZS5XYWl0Rm9yRnJhbWV9KX0sXG4gICAgZnJhbWU6IHt0eXBlOiBuZXcgSW50ZWdlclR5cGUoKX0sXG4gICAgc2tpcENvdW50OiB7dHlwZTogbmV3IEludGVnZXJUeXBlKCl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const action_type_1 = __webpack_require__(3);
exports.$WaitForFrame2 = new document_1.DocumentType({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.WaitForFrame2 }) },
        skipCount: { type: new integer_1.IntegerType() },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3dhaXQtZm9yLWZyYW1lMi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUFpRDtBQUVqRCxnREFBeUQ7QUFRNUMsUUFBQSxjQUFjLEdBQWtDLElBQUksdUJBQVksQ0FBZ0I7SUFDM0YsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLGFBQXlDLEVBQUMsQ0FBQyxFQUFDO1FBQ2pILFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBQztLQUNyQztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImF2bTEvYWN0aW9ucy93YWl0LWZvci1mcmFtZTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IEludGVnZXJUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvaW50ZWdlclwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50U2l6ZSB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJEFjdGlvblR5cGUsIEFjdGlvblR5cGUgfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7IEFjdGlvbkJhc2UgfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFdhaXRGb3JGcmFtZTIgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLldhaXRGb3JGcmFtZTI7XG4gIHNraXBDb3VudDogVWludFNpemU7XG59XG5cbmV4cG9ydCBjb25zdCAkV2FpdEZvckZyYW1lMjogRG9jdW1lbnRJb1R5cGU8V2FpdEZvckZyYW1lMj4gPSBuZXcgRG9jdW1lbnRUeXBlPFdhaXRGb3JGcmFtZTI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLldhaXRGb3JGcmFtZTIgYXMgQWN0aW9uVHlwZS5XYWl0Rm9yRnJhbWUyfSl9LFxuICAgIHNraXBDb3VudDoge3R5cGU6IG5ldyBJbnRlZ2VyVHlwZSgpfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9


/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const action_1 = __webpack_require__(40);
const action_type_1 = __webpack_require__(3);
exports.$With = new document_1.DocumentType(() => ({
    properties: {
        action: { type: new literal_1.LiteralType({ type: action_type_1.$ActionType, value: action_type_1.ActionType.With }) },
        with: { type: new array_1.ArrayType({ itemType: action_1.$Action, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYXZtMS9hY3Rpb25zL3dpdGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsc0NBQTRDO0FBQzVDLGdEQUF5RDtBQVE1QyxRQUFBLEtBQUssR0FBeUIsSUFBSSx1QkFBWSxDQUFPLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDdkUsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx5QkFBVyxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLElBQXVCLEVBQUMsQ0FBQyxFQUFDO1FBQy9GLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsZ0JBQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUN0RTtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoiYXZtMS9hY3Rpb25zL3dpdGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRBY3Rpb24sIEFjdGlvbiB9IGZyb20gXCIuLi9hY3Rpb25cIjtcbmltcG9ydCB7ICRBY3Rpb25UeXBlLCBBY3Rpb25UeXBlIH0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQgeyBBY3Rpb25CYXNlIH0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBXaXRoIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5XaXRoO1xuICB3aXRoOiBBY3Rpb25bXTtcbn1cblxuZXhwb3J0IGNvbnN0ICRXaXRoOiBEb2N1bWVudElvVHlwZTxXaXRoPiA9IG5ldyBEb2N1bWVudFR5cGU8V2l0aD4oKCkgPT4gKHtcbiAgcHJvcGVydGllczoge1xuICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEFjdGlvblR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLldpdGggYXMgQWN0aW9uVHlwZS5XaXRofSl9LFxuICAgIHdpdGg6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJEFjdGlvbiwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pKTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const matrix_1 = __webpack_require__(13);
const _type_1 = __webpack_require__(34);
exports.$Bitmap = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$FillStyleType, value: _type_1.FillStyleType.Bitmap }) },
        bitmapId: { type: uint16_1.$Uint16 },
        matrix: { type: matrix_1.$Matrix },
        repeating: { type: boolean_1.$Boolean },
        smoothed: { type: boolean_1.$Boolean },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvYml0bWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUVqRCxzQ0FBNEM7QUFDNUMsbUNBQXdEO0FBVTNDLFFBQUEsT0FBTyxHQUEyQixJQUFJLHVCQUFZLENBQVM7SUFDdEUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxzQkFBYyxFQUFFLEtBQUssRUFBRSxxQkFBYSxDQUFDLE1BQThCLEVBQUMsQ0FBQyxFQUFDO1FBQzFHLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3pCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3ZCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzNCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO0tBQzNCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZmlsbC1zdHlsZXMvYml0bWFwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkTWF0cml4LCBNYXRyaXggfSBmcm9tIFwiLi4vbWF0cml4XCI7XG5pbXBvcnQgeyAkRmlsbFN0eWxlVHlwZSwgRmlsbFN0eWxlVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQml0bWFwIHtcbiAgdHlwZTogRmlsbFN0eWxlVHlwZS5CaXRtYXA7XG4gIGJpdG1hcElkOiBVaW50MTY7XG4gIG1hdHJpeDogTWF0cml4O1xuICByZXBlYXRpbmc6IGJvb2xlYW47XG4gIHNtb290aGVkOiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgJEJpdG1hcDogRG9jdW1lbnRJb1R5cGU8Qml0bWFwPiA9IG5ldyBEb2N1bWVudFR5cGU8Qml0bWFwPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkRmlsbFN0eWxlVHlwZSwgdmFsdWU6IEZpbGxTdHlsZVR5cGUuQml0bWFwIGFzIEZpbGxTdHlsZVR5cGUuQml0bWFwfSl9LFxuICAgIGJpdG1hcElkOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgbWF0cml4OiB7dHlwZTogJE1hdHJpeH0sXG4gICAgcmVwZWF0aW5nOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHNtb290aGVkOiB7dHlwZTogJEJvb2xlYW59LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const fixed8p8_1 = __webpack_require__(20);
const gradient_1 = __webpack_require__(57);
const matrix_1 = __webpack_require__(13);
const _type_1 = __webpack_require__(34);
exports.$FocalGradient = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$FillStyleType,
                value: _type_1.FillStyleType.FocalGradient,
            }),
        },
        matrix: { type: matrix_1.$Matrix },
        gradient: { type: gradient_1.$Gradient },
        focalPoint: { type: fixed8p8_1.Fixed8P8 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvZm9jYWwtZ3JhZGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxzREFBbUQ7QUFDbkQsMENBQWtEO0FBQ2xELHNDQUE0QztBQUM1QyxtQ0FBd0Q7QUFTM0MsUUFBQSxjQUFjLEdBQWtDLElBQUksdUJBQVksQ0FBZ0I7SUFDM0YsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQztnQkFDcEIsSUFBSSxFQUFFLHNCQUFjO2dCQUNwQixLQUFLLEVBQUUscUJBQWEsQ0FBQyxhQUE0QzthQUNsRSxDQUFDO1NBQ0g7UUFDRCxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN2QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsb0JBQVMsRUFBQztRQUMzQixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsbUJBQVEsRUFBQztLQUM3QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImZpbGwtc3R5bGVzL2ZvY2FsLWdyYWRpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IEZpeGVkOFA4IH0gZnJvbSBcIi4uL2ZpeGVkLXBvaW50L2ZpeGVkOHA4XCI7XG5pbXBvcnQgeyAkR3JhZGllbnQsIEdyYWRpZW50IH0gZnJvbSBcIi4uL2dyYWRpZW50XCI7XG5pbXBvcnQgeyAkTWF0cml4LCBNYXRyaXggfSBmcm9tIFwiLi4vbWF0cml4XCI7XG5pbXBvcnQgeyAkRmlsbFN0eWxlVHlwZSwgRmlsbFN0eWxlVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9jYWxHcmFkaWVudCB7XG4gIHR5cGU6IEZpbGxTdHlsZVR5cGUuRm9jYWxHcmFkaWVudDtcbiAgbWF0cml4OiBNYXRyaXg7XG4gIGdyYWRpZW50OiBHcmFkaWVudDtcbiAgZm9jYWxQb2ludDogRml4ZWQ4UDg7XG59XG5cbmV4cG9ydCBjb25zdCAkRm9jYWxHcmFkaWVudDogRG9jdW1lbnRJb1R5cGU8Rm9jYWxHcmFkaWVudD4gPSBuZXcgRG9jdW1lbnRUeXBlPEZvY2FsR3JhZGllbnQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHtcbiAgICAgIHR5cGU6IG5ldyBMaXRlcmFsVHlwZSh7XG4gICAgICAgIHR5cGU6ICRGaWxsU3R5bGVUeXBlLFxuICAgICAgICB2YWx1ZTogRmlsbFN0eWxlVHlwZS5Gb2NhbEdyYWRpZW50IGFzIEZpbGxTdHlsZVR5cGUuRm9jYWxHcmFkaWVudCxcbiAgICAgIH0pLFxuICAgIH0sXG4gICAgbWF0cml4OiB7dHlwZTogJE1hdHJpeH0sXG4gICAgZ3JhZGllbnQ6IHt0eXBlOiAkR3JhZGllbnR9LFxuICAgIGZvY2FsUG9pbnQ6IHt0eXBlOiBGaXhlZDhQOH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const gradient_1 = __webpack_require__(57);
const matrix_1 = __webpack_require__(13);
const _type_1 = __webpack_require__(34);
exports.$LinearGradient = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$FillStyleType,
                value: _type_1.FillStyleType.LinearGradient,
            }),
        },
        matrix: { type: matrix_1.$Matrix },
        gradient: { type: gradient_1.$Gradient },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvbGluZWFyLWdyYWRpZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsMENBQWtEO0FBQ2xELHNDQUE0QztBQUM1QyxtQ0FBd0Q7QUFRM0MsUUFBQSxlQUFlLEdBQW1DLElBQUksdUJBQVksQ0FBaUI7SUFDOUYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQztnQkFDcEIsSUFBSSxFQUFFLHNCQUFjO2dCQUNwQixLQUFLLEVBQUUscUJBQWEsQ0FBQyxjQUE4QzthQUNwRSxDQUFDO1NBQ0g7UUFDRCxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN2QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsb0JBQVMsRUFBQztLQUM1QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImZpbGwtc3R5bGVzL2xpbmVhci1ncmFkaWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkR3JhZGllbnQsIEdyYWRpZW50IH0gZnJvbSBcIi4uL2dyYWRpZW50XCI7XG5pbXBvcnQgeyAkTWF0cml4LCBNYXRyaXggfSBmcm9tIFwiLi4vbWF0cml4XCI7XG5pbXBvcnQgeyAkRmlsbFN0eWxlVHlwZSwgRmlsbFN0eWxlVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTGluZWFyR3JhZGllbnQge1xuICB0eXBlOiBGaWxsU3R5bGVUeXBlLkxpbmVhckdyYWRpZW50O1xuICBtYXRyaXg6IE1hdHJpeDtcbiAgZ3JhZGllbnQ6IEdyYWRpZW50O1xufVxuXG5leHBvcnQgY29uc3QgJExpbmVhckdyYWRpZW50OiBEb2N1bWVudElvVHlwZTxMaW5lYXJHcmFkaWVudD4gPSBuZXcgRG9jdW1lbnRUeXBlPExpbmVhckdyYWRpZW50Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7XG4gICAgICB0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe1xuICAgICAgICB0eXBlOiAkRmlsbFN0eWxlVHlwZSxcbiAgICAgICAgdmFsdWU6IEZpbGxTdHlsZVR5cGUuTGluZWFyR3JhZGllbnQgYXMgRmlsbFN0eWxlVHlwZS5MaW5lYXJHcmFkaWVudCxcbiAgICAgIH0pLFxuICAgIH0sXG4gICAgbWF0cml4OiB7dHlwZTogJE1hdHJpeH0sXG4gICAgZ3JhZGllbnQ6IHt0eXBlOiAkR3JhZGllbnR9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const gradient_1 = __webpack_require__(57);
const matrix_1 = __webpack_require__(13);
const _type_1 = __webpack_require__(34);
exports.$RadialGradient = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$FillStyleType,
                value: _type_1.FillStyleType.RadialGradient,
            }),
        },
        matrix: { type: matrix_1.$Matrix },
        gradient: { type: gradient_1.$Gradient },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvcmFkaWFsLWdyYWRpZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsMENBQWtEO0FBQ2xELHNDQUE0QztBQUM1QyxtQ0FBd0Q7QUFRM0MsUUFBQSxlQUFlLEdBQW1DLElBQUksdUJBQVksQ0FBaUI7SUFDOUYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQztnQkFDcEIsSUFBSSxFQUFFLHNCQUFjO2dCQUNwQixLQUFLLEVBQUUscUJBQWEsQ0FBQyxjQUE4QzthQUNwRSxDQUFDO1NBQ0g7UUFDRCxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN2QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsb0JBQVMsRUFBQztLQUM1QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImZpbGwtc3R5bGVzL3JhZGlhbC1ncmFkaWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkR3JhZGllbnQsIEdyYWRpZW50IH0gZnJvbSBcIi4uL2dyYWRpZW50XCI7XG5pbXBvcnQgeyAkTWF0cml4LCBNYXRyaXggfSBmcm9tIFwiLi4vbWF0cml4XCI7XG5pbXBvcnQgeyAkRmlsbFN0eWxlVHlwZSwgRmlsbFN0eWxlVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmFkaWFsR3JhZGllbnQge1xuICB0eXBlOiBGaWxsU3R5bGVUeXBlLlJhZGlhbEdyYWRpZW50O1xuICBtYXRyaXg6IE1hdHJpeDtcbiAgZ3JhZGllbnQ6IEdyYWRpZW50O1xufVxuXG5leHBvcnQgY29uc3QgJFJhZGlhbEdyYWRpZW50OiBEb2N1bWVudElvVHlwZTxSYWRpYWxHcmFkaWVudD4gPSBuZXcgRG9jdW1lbnRUeXBlPFJhZGlhbEdyYWRpZW50Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7XG4gICAgICB0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe1xuICAgICAgICB0eXBlOiAkRmlsbFN0eWxlVHlwZSxcbiAgICAgICAgdmFsdWU6IEZpbGxTdHlsZVR5cGUuUmFkaWFsR3JhZGllbnQgYXMgRmlsbFN0eWxlVHlwZS5SYWRpYWxHcmFkaWVudCxcbiAgICAgIH0pLFxuICAgIH0sXG4gICAgbWF0cml4OiB7dHlwZTogJE1hdHJpeH0sXG4gICAgZ3JhZGllbnQ6IHt0eXBlOiAkR3JhZGllbnR9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const straight_s_rgba8_1 = __webpack_require__(14);
const _type_1 = __webpack_require__(34);
exports.$Solid = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$FillStyleType, value: _type_1.FillStyleType.Solid }) },
        color: { type: straight_s_rgba8_1.$StraightSRgba8 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsbC1zdHlsZXMvc29saWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCwwREFBc0U7QUFDdEUsbUNBQXdEO0FBTzNDLFFBQUEsTUFBTSxHQUEwQixJQUFJLHVCQUFZLENBQVE7SUFDbkUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxzQkFBYyxFQUFFLEtBQUssRUFBRSxxQkFBYSxDQUFDLEtBQTRCLEVBQUMsQ0FBQyxFQUFDO1FBQ3hHLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxrQ0FBZSxFQUFDO0tBQy9CO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZmlsbC1zdHlsZXMvc29saWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJFN0cmFpZ2h0U1JnYmE4LCBTdHJhaWdodFNSZ2JhOCB9IGZyb20gXCIuLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5pbXBvcnQgeyAkRmlsbFN0eWxlVHlwZSwgRmlsbFN0eWxlVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU29saWQge1xuICB0eXBlOiBGaWxsU3R5bGVUeXBlLlNvbGlkO1xuICBjb2xvcjogU3RyYWlnaHRTUmdiYTg7XG59XG5cbmV4cG9ydCBjb25zdCAkU29saWQ6IERvY3VtZW50SW9UeXBlPFNvbGlkPiA9IG5ldyBEb2N1bWVudFR5cGU8U29saWQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRGaWxsU3R5bGVUeXBlLCB2YWx1ZTogRmlsbFN0eWxlVHlwZS5Tb2xpZCBhcyBGaWxsU3R5bGVUeXBlLlNvbGlkfSl9LFxuICAgIGNvbG9yOiB7dHlwZTogJFN0cmFpZ2h0U1JnYmE4fSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const fixed16p16_1 = __webpack_require__(25);
const fixed8p8_1 = __webpack_require__(20);
const straight_s_rgba8_1 = __webpack_require__(14);
const _type_1 = __webpack_require__(23);
exports.$Bevel = new document_1.DocumentType({
    properties: {
        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.Bevel }) },
        shadowColor: { type: straight_s_rgba8_1.$StraightSRgba8 },
        highlightColor: { type: straight_s_rgba8_1.$StraightSRgba8 },
        blurX: { type: fixed16p16_1.Fixed16P16 },
        blurY: { type: fixed16p16_1.Fixed16P16 },
        angle: { type: fixed16p16_1.Fixed16P16 },
        distance: { type: fixed16p16_1.Fixed16P16 },
        strength: { type: fixed8p8_1.Fixed8P8 },
        inner: { type: boolean_1.$Boolean },
        knockout: { type: boolean_1.$Boolean },
        compositeSource: { type: boolean_1.$Boolean },
        onTop: { type: boolean_1.$Boolean },
        passes: { type: new integer_1.IntegerType({ min: 0, max: 15 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9iZXZlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxnREFBNEM7QUFFNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBaUQ7QUFFakQsMERBQXVEO0FBQ3ZELHNEQUFtRDtBQUNuRCwwREFBc0U7QUFDdEUsbUNBQWtEO0FBa0JyQyxRQUFBLE1BQU0sR0FBMEIsSUFBSSx1QkFBWSxDQUFRO0lBQ25FLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsbUJBQVcsRUFBRSxLQUFLLEVBQUUsa0JBQVUsQ0FBQyxLQUF5QixFQUFDLENBQUMsRUFBQztRQUNqRyxXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0NBQWUsRUFBQztRQUNwQyxjQUFjLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0NBQWUsRUFBQztRQUN2QyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUN6QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUN6QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUN6QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUM1QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsbUJBQVEsRUFBQztRQUMxQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN2QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixlQUFlLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUNqQyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN2QixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFDLENBQWtCLEVBQUM7S0FDcEU7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJmaWx0ZXJzL2JldmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBJb1R5cGUgfSBmcm9tIFwia3J5by90eXBlc1wiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2ludGVnZXJcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDQgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IEZpeGVkMTZQMTYgfSBmcm9tIFwiLi4vZml4ZWQtcG9pbnQvZml4ZWQxNnAxNlwiO1xuaW1wb3J0IHsgRml4ZWQ4UDggfSBmcm9tIFwiLi4vZml4ZWQtcG9pbnQvZml4ZWQ4cDhcIjtcbmltcG9ydCB7ICRTdHJhaWdodFNSZ2JhOCwgU3RyYWlnaHRTUmdiYTggfSBmcm9tIFwiLi4vc3RyYWlnaHQtcy1yZ2JhOFwiO1xuaW1wb3J0IHsgJEZpbHRlclR5cGUsIEZpbHRlclR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEJldmVsIHtcbiAgZmlsdGVyOiBGaWx0ZXJUeXBlLkJldmVsO1xuICBzaGFkb3dDb2xvcjogU3RyYWlnaHRTUmdiYTg7XG4gIGhpZ2hsaWdodENvbG9yOiBTdHJhaWdodFNSZ2JhODtcbiAgYmx1clg6IEZpeGVkMTZQMTY7XG4gIGJsdXJZOiBGaXhlZDE2UDE2O1xuICBhbmdsZTogRml4ZWQxNlAxNjtcbiAgZGlzdGFuY2U6IEZpeGVkMTZQMTY7XG4gIHN0cmVuZ3RoOiBGaXhlZDhQODtcbiAgaW5uZXI6IGJvb2xlYW47XG4gIGtub2Nrb3V0OiBib29sZWFuO1xuICBjb21wb3NpdGVTb3VyY2U6IGJvb2xlYW47XG4gIG9uVG9wOiBib29sZWFuO1xuICBwYXNzZXM6IFVpbnQ0O1xufVxuXG5leHBvcnQgY29uc3QgJEJldmVsOiBEb2N1bWVudElvVHlwZTxCZXZlbD4gPSBuZXcgRG9jdW1lbnRUeXBlPEJldmVsPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBmaWx0ZXI6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRGaWx0ZXJUeXBlLCB2YWx1ZTogRmlsdGVyVHlwZS5CZXZlbCBhcyBGaWx0ZXJUeXBlLkJldmVsfSl9LFxuICAgIHNoYWRvd0NvbG9yOiB7dHlwZTogJFN0cmFpZ2h0U1JnYmE4fSxcbiAgICBoaWdobGlnaHRDb2xvcjoge3R5cGU6ICRTdHJhaWdodFNSZ2JhOH0sXG4gICAgYmx1clg6IHt0eXBlOiBGaXhlZDE2UDE2fSxcbiAgICBibHVyWToge3R5cGU6IEZpeGVkMTZQMTZ9LFxuICAgIGFuZ2xlOiB7dHlwZTogRml4ZWQxNlAxNn0sXG4gICAgZGlzdGFuY2U6IHt0eXBlOiBGaXhlZDE2UDE2fSxcbiAgICBzdHJlbmd0aDoge3R5cGU6IEZpeGVkOFA4fSxcbiAgICBpbm5lcjoge3R5cGU6ICRCb29sZWFufSxcbiAgICBrbm9ja291dDoge3R5cGU6ICRCb29sZWFufSxcbiAgICBjb21wb3NpdGVTb3VyY2U6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgb25Ub3A6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgcGFzc2VzOiB7dHlwZTogbmV3IEludGVnZXJUeXBlKHttaW46IDAsIG1heDogMTV9KSBhcyBJb1R5cGU8VWludDQ+fSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const fixed16p16_1 = __webpack_require__(25);
const _type_1 = __webpack_require__(23);
exports.$Blur = new document_1.DocumentType({
    properties: {
        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.Blur }) },
        blurX: { type: fixed16p16_1.Fixed16P16 },
        blurY: { type: fixed16p16_1.Fixed16P16 },
        passes: { type: new integer_1.IntegerType({ min: 0, max: 31 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9ibHVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQWlEO0FBRWpELDBEQUF1RDtBQUN2RCxtQ0FBa0Q7QUFTckMsUUFBQSxLQUFLLEdBQXlCLElBQUksdUJBQVksQ0FBTztJQUNoRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLG1CQUFXLEVBQUUsS0FBSyxFQUFFLGtCQUFVLENBQUMsSUFBdUIsRUFBQyxDQUFDLEVBQUM7UUFDL0YsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDekIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDekIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBQyxDQUFDLEVBQUM7S0FDbkQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJmaWx0ZXJzL2JsdXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IEludGVnZXJUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvaW50ZWdlclwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50NSB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgRml4ZWQxNlAxNiB9IGZyb20gXCIuLi9maXhlZC1wb2ludC9maXhlZDE2cDE2XCI7XG5pbXBvcnQgeyAkRmlsdGVyVHlwZSwgRmlsdGVyVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmx1ciB7XG4gIGZpbHRlcjogRmlsdGVyVHlwZS5CbHVyO1xuICBibHVyWDogRml4ZWQxNlAxNjtcbiAgYmx1clk6IEZpeGVkMTZQMTY7XG4gIHBhc3NlczogVWludDU7XG59XG5cbmV4cG9ydCBjb25zdCAkQmx1cjogRG9jdW1lbnRJb1R5cGU8Qmx1cj4gPSBuZXcgRG9jdW1lbnRUeXBlPEJsdXI+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGZpbHRlcjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEZpbHRlclR5cGUsIHZhbHVlOiBGaWx0ZXJUeXBlLkJsdXIgYXMgRmlsdGVyVHlwZS5CbHVyfSl9LFxuICAgIGJsdXJYOiB7dHlwZTogRml4ZWQxNlAxNn0sXG4gICAgYmx1clk6IHt0eXBlOiBGaXhlZDE2UDE2fSxcbiAgICBwYXNzZXM6IHt0eXBlOiBuZXcgSW50ZWdlclR5cGUoe21pbjogMCwgbWF4OiAzMX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const float64_1 = __webpack_require__(33);
const literal_1 = __webpack_require__(2);
const _type_1 = __webpack_require__(23);
exports.$ColorMatrix = new document_1.DocumentType({
    properties: {
        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.ColorMatrix }) },
        matrix: { type: new array_1.ArrayType({ itemType: new float64_1.Float64Type(), /* minLength: 20, */ maxLength: 20 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9jb2xvci1tYXRyaXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQWlEO0FBRWpELG1DQUFrRDtBQU9yQyxRQUFBLFlBQVksR0FBZ0MsSUFBSSx1QkFBWSxDQUFjO0lBQ3JGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsbUJBQVcsRUFBRSxLQUFLLEVBQUUsa0JBQVUsQ0FBQyxXQUFxQyxFQUFDLENBQUMsRUFBQztRQUM3RyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLElBQUkscUJBQVcsRUFBRSxFQUFFLG9CQUFvQixDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUMsQ0FBQyxFQUFDO0tBQ2pHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZmlsdGVycy9jb2xvci1tYXRyaXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBGbG9hdDY0VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2Zsb2F0NjRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgRmxvYXQzMiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJEZpbHRlclR5cGUsIEZpbHRlclR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbG9yTWF0cml4IHtcbiAgZmlsdGVyOiBGaWx0ZXJUeXBlLkNvbG9yTWF0cml4O1xuICBtYXRyaXg6IEZsb2F0MzJbXTtcbn1cblxuZXhwb3J0IGNvbnN0ICRDb2xvck1hdHJpeDogRG9jdW1lbnRJb1R5cGU8Q29sb3JNYXRyaXg+ID0gbmV3IERvY3VtZW50VHlwZTxDb2xvck1hdHJpeD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgZmlsdGVyOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkRmlsdGVyVHlwZSwgdmFsdWU6IEZpbHRlclR5cGUuQ29sb3JNYXRyaXggYXMgRmlsdGVyVHlwZS5Db2xvck1hdHJpeH0pfSxcbiAgICBtYXRyaXg6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogbmV3IEZsb2F0NjRUeXBlKCksIC8qIG1pbkxlbmd0aDogMjAsICovIG1heExlbmd0aDogMjB9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const float64_1 = __webpack_require__(33);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const straight_s_rgba8_1 = __webpack_require__(14);
const _type_1 = __webpack_require__(23);
exports.$Convolution = new document_1.DocumentType({
    properties: {
        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.Convolution }) },
        matrixWidth: { type: new integer_1.IntegerType() },
        matrixHeight: { type: new integer_1.IntegerType() },
        divisor: { type: new float64_1.Float64Type() },
        bias: { type: new float64_1.Float64Type() },
        matrix: { type: new array_1.ArrayType({ itemType: new float64_1.Float64Type(), /* minLength: 20, */ maxLength: 20 }) },
        defaultColor: { type: straight_s_rgba8_1.$StraightSRgba8 },
        clamp: { type: boolean_1.$Boolean },
        preserveAlpha: { type: boolean_1.$Boolean },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9jb252b2x1dGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQWlEO0FBQ2pELGdEQUFpRDtBQUVqRCwwREFBc0U7QUFDdEUsbUNBQWtEO0FBY3JDLFFBQUEsWUFBWSxHQUFnQyxJQUFJLHVCQUFZLENBQWM7SUFDckYsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxtQkFBVyxFQUFFLEtBQUssRUFBRSxrQkFBVSxDQUFDLFdBQXFDLEVBQUMsQ0FBQyxFQUFDO1FBQzdHLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBQztRQUN0QyxZQUFZLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxFQUFFLEVBQUM7UUFDdkMsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsRUFBRSxFQUFDO1FBQ2xDLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBQztRQUMvQixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLElBQUkscUJBQVcsRUFBRSxFQUFFLG9CQUFvQixDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUMsQ0FBQyxFQUFDO1FBQ2hHLFlBQVksRUFBRSxFQUFDLElBQUksRUFBRSxrQ0FBZSxFQUFDO1FBQ3JDLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3ZCLGFBQWEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO0tBQ2hDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZmlsdGVycy9jb252b2x1dGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgRmxvYXQ2NFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9mbG9hdDY0XCI7XG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2ludGVnZXJcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgRmxvYXQzMiwgVWludFNpemUgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRTdHJhaWdodFNSZ2JhOCwgU3RyYWlnaHRTUmdiYTggfSBmcm9tIFwiLi4vc3RyYWlnaHQtcy1yZ2JhOFwiO1xuaW1wb3J0IHsgJEZpbHRlclR5cGUsIEZpbHRlclR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbnZvbHV0aW9uIHtcbiAgZmlsdGVyOiBGaWx0ZXJUeXBlLkNvbnZvbHV0aW9uO1xuICBtYXRyaXhXaWR0aDogVWludFNpemU7XG4gIG1hdHJpeEhlaWdodDogVWludFNpemU7XG4gIGRpdmlzb3I6IEZsb2F0MzI7XG4gIGJpYXM6IEZsb2F0MzI7XG4gIG1hdHJpeDogRmxvYXQzMltdO1xuICBkZWZhdWx0Q29sb3I6IFN0cmFpZ2h0U1JnYmE4O1xuICBjbGFtcDogYm9vbGVhbjtcbiAgcHJlc2VydmVBbHBoYTogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNvbnN0ICRDb252b2x1dGlvbjogRG9jdW1lbnRJb1R5cGU8Q29udm9sdXRpb24+ID0gbmV3IERvY3VtZW50VHlwZTxDb252b2x1dGlvbj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgZmlsdGVyOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkRmlsdGVyVHlwZSwgdmFsdWU6IEZpbHRlclR5cGUuQ29udm9sdXRpb24gYXMgRmlsdGVyVHlwZS5Db252b2x1dGlvbn0pfSxcbiAgICBtYXRyaXhXaWR0aDoge3R5cGU6IG5ldyBJbnRlZ2VyVHlwZSgpfSxcbiAgICBtYXRyaXhIZWlnaHQ6IHt0eXBlOiBuZXcgSW50ZWdlclR5cGUoKX0sXG4gICAgZGl2aXNvcjoge3R5cGU6IG5ldyBGbG9hdDY0VHlwZSgpfSxcbiAgICBiaWFzOiB7dHlwZTogbmV3IEZsb2F0NjRUeXBlKCl9LFxuICAgIG1hdHJpeDoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBuZXcgRmxvYXQ2NFR5cGUoKSwgLyogbWluTGVuZ3RoOiAyMCwgKi8gbWF4TGVuZ3RoOiAyMH0pfSxcbiAgICBkZWZhdWx0Q29sb3I6IHt0eXBlOiAkU3RyYWlnaHRTUmdiYTh9LFxuICAgIGNsYW1wOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHByZXNlcnZlQWxwaGE6IHt0eXBlOiAkQm9vbGVhbn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const fixed16p16_1 = __webpack_require__(25);
const fixed8p8_1 = __webpack_require__(20);
const straight_s_rgba8_1 = __webpack_require__(14);
const _type_1 = __webpack_require__(23);
exports.$DropShadow = new document_1.DocumentType({
    properties: {
        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.DropShadow }) },
        color: { type: straight_s_rgba8_1.$StraightSRgba8 },
        blurX: { type: fixed16p16_1.Fixed16P16 },
        blurY: { type: fixed16p16_1.Fixed16P16 },
        angle: { type: fixed16p16_1.Fixed16P16 },
        distance: { type: fixed16p16_1.Fixed16P16 },
        strength: { type: fixed8p8_1.Fixed8P8 },
        inner: { type: boolean_1.$Boolean },
        knockout: { type: boolean_1.$Boolean },
        compositeSource: { type: boolean_1.$Boolean },
        passes: { type: new integer_1.IntegerType({ min: 0, max: 31 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9kcm9wLXNoYWRvdy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBaUQ7QUFFakQsMERBQXVEO0FBQ3ZELHNEQUFtRDtBQUNuRCwwREFBc0U7QUFDdEUsbUNBQWtEO0FBZ0JyQyxRQUFBLFdBQVcsR0FBK0IsSUFBSSx1QkFBWSxDQUFhO0lBQ2xGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsbUJBQVcsRUFBRSxLQUFLLEVBQUUsa0JBQVUsQ0FBQyxVQUFtQyxFQUFDLENBQUMsRUFBQztRQUMzRyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0NBQWUsRUFBQztRQUM5QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUN6QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUN6QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUN6QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUM1QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsbUJBQVEsRUFBQztRQUMxQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN2QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixlQUFlLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUNqQyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFDLENBQUMsRUFBQztLQUNuRDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImZpbHRlcnMvZHJvcC1zaGFkb3cuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQm9vbGVhbiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2Jvb2xlYW5cIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgSW50ZWdlclR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9pbnRlZ2VyXCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQ1IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyBGaXhlZDE2UDE2IH0gZnJvbSBcIi4uL2ZpeGVkLXBvaW50L2ZpeGVkMTZwMTZcIjtcbmltcG9ydCB7IEZpeGVkOFA4IH0gZnJvbSBcIi4uL2ZpeGVkLXBvaW50L2ZpeGVkOHA4XCI7XG5pbXBvcnQgeyAkU3RyYWlnaHRTUmdiYTgsIFN0cmFpZ2h0U1JnYmE4IH0gZnJvbSBcIi4uL3N0cmFpZ2h0LXMtcmdiYThcIjtcbmltcG9ydCB7ICRGaWx0ZXJUeXBlLCBGaWx0ZXJUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEcm9wU2hhZG93IHtcbiAgZmlsdGVyOiBGaWx0ZXJUeXBlLkRyb3BTaGFkb3c7XG4gIGNvbG9yOiBTdHJhaWdodFNSZ2JhODtcbiAgYmx1clg6IEZpeGVkMTZQMTY7XG4gIGJsdXJZOiBGaXhlZDE2UDE2O1xuICBhbmdsZTogRml4ZWQxNlAxNjtcbiAgZGlzdGFuY2U6IEZpeGVkMTZQMTY7XG4gIHN0cmVuZ3RoOiBGaXhlZDhQODtcbiAgaW5uZXI6IGJvb2xlYW47XG4gIGtub2Nrb3V0OiBib29sZWFuO1xuICBjb21wb3NpdGVTb3VyY2U6IGJvb2xlYW47XG4gIHBhc3NlczogVWludDU7XG59XG5cbmV4cG9ydCBjb25zdCAkRHJvcFNoYWRvdzogRG9jdW1lbnRJb1R5cGU8RHJvcFNoYWRvdz4gPSBuZXcgRG9jdW1lbnRUeXBlPERyb3BTaGFkb3c+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGZpbHRlcjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEZpbHRlclR5cGUsIHZhbHVlOiBGaWx0ZXJUeXBlLkRyb3BTaGFkb3cgYXMgRmlsdGVyVHlwZS5Ecm9wU2hhZG93fSl9LFxuICAgIGNvbG9yOiB7dHlwZTogJFN0cmFpZ2h0U1JnYmE4fSxcbiAgICBibHVyWDoge3R5cGU6IEZpeGVkMTZQMTZ9LFxuICAgIGJsdXJZOiB7dHlwZTogRml4ZWQxNlAxNn0sXG4gICAgYW5nbGU6IHt0eXBlOiBGaXhlZDE2UDE2fSxcbiAgICBkaXN0YW5jZToge3R5cGU6IEZpeGVkMTZQMTZ9LFxuICAgIHN0cmVuZ3RoOiB7dHlwZTogRml4ZWQ4UDh9LFxuICAgIGlubmVyOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGtub2Nrb3V0OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGNvbXBvc2l0ZVNvdXJjZToge3R5cGU6ICRCb29sZWFufSxcbiAgICBwYXNzZXM6IHt0eXBlOiBuZXcgSW50ZWdlclR5cGUoe21pbjogMCwgbWF4OiAzMX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const fixed16p16_1 = __webpack_require__(25);
const fixed8p8_1 = __webpack_require__(20);
const straight_s_rgba8_1 = __webpack_require__(14);
const _type_1 = __webpack_require__(23);
exports.$Glow = new document_1.DocumentType({
    properties: {
        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.Glow }) },
        color: { type: straight_s_rgba8_1.$StraightSRgba8 },
        blurX: { type: fixed16p16_1.Fixed16P16 },
        blurY: { type: fixed16p16_1.Fixed16P16 },
        strength: { type: fixed8p8_1.Fixed8P8 },
        inner: { type: boolean_1.$Boolean },
        knockout: { type: boolean_1.$Boolean },
        compositeSource: { type: boolean_1.$Boolean },
        passes: { type: new integer_1.IntegerType({ min: 0, max: 31 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9nbG93LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELGdEQUFpRDtBQUVqRCwwREFBdUQ7QUFDdkQsc0RBQW1EO0FBQ25ELDBEQUFzRTtBQUN0RSxtQ0FBa0Q7QUFjckMsUUFBQSxLQUFLLEdBQXlCLElBQUksdUJBQVksQ0FBTztJQUNoRSxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLG1CQUFXLEVBQUUsS0FBSyxFQUFFLGtCQUFVLENBQUMsSUFBdUIsRUFBQyxDQUFDLEVBQUM7UUFDL0YsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtDQUFlLEVBQUM7UUFDOUIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDekIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDekIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLG1CQUFRLEVBQUM7UUFDMUIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDdkIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDMUIsZUFBZSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDakMsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBQyxDQUFDLEVBQUM7S0FDbkQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJmaWx0ZXJzL2dsb3cuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQm9vbGVhbiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2Jvb2xlYW5cIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgSW50ZWdlclR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9pbnRlZ2VyXCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQ1IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyBGaXhlZDE2UDE2IH0gZnJvbSBcIi4uL2ZpeGVkLXBvaW50L2ZpeGVkMTZwMTZcIjtcbmltcG9ydCB7IEZpeGVkOFA4IH0gZnJvbSBcIi4uL2ZpeGVkLXBvaW50L2ZpeGVkOHA4XCI7XG5pbXBvcnQgeyAkU3RyYWlnaHRTUmdiYTgsIFN0cmFpZ2h0U1JnYmE4IH0gZnJvbSBcIi4uL3N0cmFpZ2h0LXMtcmdiYThcIjtcbmltcG9ydCB7ICRGaWx0ZXJUeXBlLCBGaWx0ZXJUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHbG93IHtcbiAgZmlsdGVyOiBGaWx0ZXJUeXBlLkdsb3c7XG4gIGNvbG9yOiBTdHJhaWdodFNSZ2JhODtcbiAgYmx1clg6IEZpeGVkMTZQMTY7XG4gIGJsdXJZOiBGaXhlZDE2UDE2O1xuICBzdHJlbmd0aDogRml4ZWQ4UDg7XG4gIGlubmVyOiBib29sZWFuO1xuICBrbm9ja291dDogYm9vbGVhbjtcbiAgY29tcG9zaXRlU291cmNlOiBib29sZWFuO1xuICBwYXNzZXM6IFVpbnQ1O1xufVxuXG5leHBvcnQgY29uc3QgJEdsb3c6IERvY3VtZW50SW9UeXBlPEdsb3c+ID0gbmV3IERvY3VtZW50VHlwZTxHbG93Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBmaWx0ZXI6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRGaWx0ZXJUeXBlLCB2YWx1ZTogRmlsdGVyVHlwZS5HbG93IGFzIEZpbHRlclR5cGUuR2xvd30pfSxcbiAgICBjb2xvcjoge3R5cGU6ICRTdHJhaWdodFNSZ2JhOH0sXG4gICAgYmx1clg6IHt0eXBlOiBGaXhlZDE2UDE2fSxcbiAgICBibHVyWToge3R5cGU6IEZpeGVkMTZQMTZ9LFxuICAgIHN0cmVuZ3RoOiB7dHlwZTogRml4ZWQ4UDh9LFxuICAgIGlubmVyOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGtub2Nrb3V0OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGNvbXBvc2l0ZVNvdXJjZToge3R5cGU6ICRCb29sZWFufSxcbiAgICBwYXNzZXM6IHt0eXBlOiBuZXcgSW50ZWdlclR5cGUoe21pbjogMCwgbWF4OiAzMX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const color_stop_1 = __webpack_require__(59);
const fixed16p16_1 = __webpack_require__(25);
const fixed8p8_1 = __webpack_require__(20);
const _type_1 = __webpack_require__(23);
exports.$GradientBevel = new document_1.DocumentType({
    properties: {
        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.GradientBevel }) },
        gradient: { type: new array_1.ArrayType({ itemType: color_stop_1.$ColorStop, maxLength: Infinity }) },
        blurX: { type: fixed16p16_1.Fixed16P16 },
        blurY: { type: fixed16p16_1.Fixed16P16 },
        angle: { type: fixed16p16_1.Fixed16P16 },
        distance: { type: fixed16p16_1.Fixed16P16 },
        strength: { type: fixed8p8_1.Fixed8P8 },
        inner: { type: boolean_1.$Boolean },
        knockout: { type: boolean_1.$Boolean },
        compositeSource: { type: boolean_1.$Boolean },
        onTop: { type: boolean_1.$Boolean },
        passes: { type: new integer_1.IntegerType({ min: 0, max: 15 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9ncmFkaWVudC1iZXZlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxnREFBNEM7QUFFNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQWlEO0FBRWpELDhDQUFzRDtBQUN0RCwwREFBdUQ7QUFDdkQsc0RBQW1EO0FBQ25ELG1DQUFrRDtBQWlCckMsUUFBQSxjQUFjLEdBQWtDLElBQUksdUJBQVksQ0FBZ0I7SUFDM0YsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxtQkFBVyxFQUFFLEtBQUssRUFBRSxrQkFBVSxDQUFDLGFBQXlDLEVBQUMsQ0FBQyxFQUFDO1FBQ2pILFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsdUJBQVUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUM1RSxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUN6QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUN6QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUN6QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUM1QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsbUJBQVEsRUFBQztRQUMxQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN2QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixlQUFlLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUNqQyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN2QixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFDLENBQWtCLEVBQUM7S0FDcEU7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJmaWx0ZXJzL2dyYWRpZW50LWJldmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBJb1R5cGUgfSBmcm9tIFwia3J5by90eXBlc1wiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgSW50ZWdlclR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9pbnRlZ2VyXCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQ0IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkQ29sb3JTdG9wLCBDb2xvclN0b3AgfSBmcm9tIFwiLi4vY29sb3Itc3RvcFwiO1xuaW1wb3J0IHsgRml4ZWQxNlAxNiB9IGZyb20gXCIuLi9maXhlZC1wb2ludC9maXhlZDE2cDE2XCI7XG5pbXBvcnQgeyBGaXhlZDhQOCB9IGZyb20gXCIuLi9maXhlZC1wb2ludC9maXhlZDhwOFwiO1xuaW1wb3J0IHsgJEZpbHRlclR5cGUsIEZpbHRlclR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdyYWRpZW50QmV2ZWwge1xuICBmaWx0ZXI6IEZpbHRlclR5cGUuR3JhZGllbnRCZXZlbDtcbiAgZ3JhZGllbnQ6IENvbG9yU3RvcFtdO1xuICBibHVyWDogRml4ZWQxNlAxNjtcbiAgYmx1clk6IEZpeGVkMTZQMTY7XG4gIGFuZ2xlOiBGaXhlZDE2UDE2O1xuICBkaXN0YW5jZTogRml4ZWQxNlAxNjtcbiAgc3RyZW5ndGg6IEZpeGVkOFA4O1xuICBpbm5lcjogYm9vbGVhbjtcbiAga25vY2tvdXQ6IGJvb2xlYW47XG4gIGNvbXBvc2l0ZVNvdXJjZTogYm9vbGVhbjtcbiAgb25Ub3A6IGJvb2xlYW47XG4gIHBhc3NlczogVWludDQ7XG59XG5cbmV4cG9ydCBjb25zdCAkR3JhZGllbnRCZXZlbDogRG9jdW1lbnRJb1R5cGU8R3JhZGllbnRCZXZlbD4gPSBuZXcgRG9jdW1lbnRUeXBlPEdyYWRpZW50QmV2ZWw+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGZpbHRlcjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJEZpbHRlclR5cGUsIHZhbHVlOiBGaWx0ZXJUeXBlLkdyYWRpZW50QmV2ZWwgYXMgRmlsdGVyVHlwZS5HcmFkaWVudEJldmVsfSl9LFxuICAgIGdyYWRpZW50OiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRDb2xvclN0b3AsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgYmx1clg6IHt0eXBlOiBGaXhlZDE2UDE2fSxcbiAgICBibHVyWToge3R5cGU6IEZpeGVkMTZQMTZ9LFxuICAgIGFuZ2xlOiB7dHlwZTogRml4ZWQxNlAxNn0sXG4gICAgZGlzdGFuY2U6IHt0eXBlOiBGaXhlZDE2UDE2fSxcbiAgICBzdHJlbmd0aDoge3R5cGU6IEZpeGVkOFA4fSxcbiAgICBpbm5lcjoge3R5cGU6ICRCb29sZWFufSxcbiAgICBrbm9ja291dDoge3R5cGU6ICRCb29sZWFufSxcbiAgICBjb21wb3NpdGVTb3VyY2U6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgb25Ub3A6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgcGFzc2VzOiB7dHlwZTogbmV3IEludGVnZXJUeXBlKHttaW46IDAsIG1heDogMTV9KSBhcyBJb1R5cGU8VWludDQ+fSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const color_stop_1 = __webpack_require__(59);
const fixed16p16_1 = __webpack_require__(25);
const fixed8p8_1 = __webpack_require__(20);
const _type_1 = __webpack_require__(23);
exports.$GradientGlow = new document_1.DocumentType({
    properties: {
        filter: { type: new literal_1.LiteralType({ type: _type_1.$FilterType, value: _type_1.FilterType.GradientGlow }) },
        gradient: { type: new array_1.ArrayType({ itemType: color_stop_1.$ColorStop, maxLength: Infinity }) },
        blurX: { type: fixed16p16_1.Fixed16P16 },
        blurY: { type: fixed16p16_1.Fixed16P16 },
        angle: { type: fixed16p16_1.Fixed16P16 },
        distance: { type: fixed16p16_1.Fixed16P16 },
        strength: { type: fixed8p8_1.Fixed8P8 },
        inner: { type: boolean_1.$Boolean },
        knockout: { type: boolean_1.$Boolean },
        compositeSource: { type: boolean_1.$Boolean },
        onTop: { type: boolean_1.$Boolean },
        passes: { type: new integer_1.IntegerType({ min: 0, max: 15 }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZmlsdGVycy9ncmFkaWVudC1nbG93LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGdEQUE0QztBQUU1Qyw0Q0FBNkM7QUFDN0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBaUQ7QUFFakQsOENBQXNEO0FBQ3RELDBEQUF1RDtBQUN2RCxzREFBbUQ7QUFDbkQsbUNBQWtEO0FBaUJyQyxRQUFBLGFBQWEsR0FBaUMsSUFBSSx1QkFBWSxDQUFlO0lBQ3hGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsbUJBQVcsRUFBRSxLQUFLLEVBQUUsa0JBQVUsQ0FBQyxZQUF1QyxFQUFDLENBQUMsRUFBQztRQUMvRyxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLHVCQUFVLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7UUFDNUUsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDekIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDekIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDekIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDNUIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLG1CQUFRLEVBQUM7UUFDMUIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDdkIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDMUIsZUFBZSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDakMsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDdkIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBQyxDQUFrQixFQUFDO0tBQ3BFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiZmlsdGVycy9ncmFkaWVudC1nbG93LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBJb1R5cGUgfSBmcm9tIFwia3J5by90eXBlc1wiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgSW50ZWdlclR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9pbnRlZ2VyXCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQ0IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkQ29sb3JTdG9wLCBDb2xvclN0b3AgfSBmcm9tIFwiLi4vY29sb3Itc3RvcFwiO1xuaW1wb3J0IHsgRml4ZWQxNlAxNiB9IGZyb20gXCIuLi9maXhlZC1wb2ludC9maXhlZDE2cDE2XCI7XG5pbXBvcnQgeyBGaXhlZDhQOCB9IGZyb20gXCIuLi9maXhlZC1wb2ludC9maXhlZDhwOFwiO1xuaW1wb3J0IHsgJEZpbHRlclR5cGUsIEZpbHRlclR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdyYWRpZW50R2xvdyB7XG4gIGZpbHRlcjogRmlsdGVyVHlwZS5HcmFkaWVudEdsb3c7XG4gIGdyYWRpZW50OiBDb2xvclN0b3BbXTtcbiAgYmx1clg6IEZpeGVkMTZQMTY7XG4gIGJsdXJZOiBGaXhlZDE2UDE2O1xuICBhbmdsZTogRml4ZWQxNlAxNjtcbiAgZGlzdGFuY2U6IEZpeGVkMTZQMTY7XG4gIHN0cmVuZ3RoOiBGaXhlZDhQODtcbiAgaW5uZXI6IGJvb2xlYW47XG4gIGtub2Nrb3V0OiBib29sZWFuO1xuICBjb21wb3NpdGVTb3VyY2U6IGJvb2xlYW47XG4gIG9uVG9wOiBib29sZWFuO1xuICBwYXNzZXM6IFVpbnQ0O1xufVxuXG5leHBvcnQgY29uc3QgJEdyYWRpZW50R2xvdzogRG9jdW1lbnRJb1R5cGU8R3JhZGllbnRHbG93PiA9IG5ldyBEb2N1bWVudFR5cGU8R3JhZGllbnRHbG93Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBmaWx0ZXI6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRGaWx0ZXJUeXBlLCB2YWx1ZTogRmlsdGVyVHlwZS5HcmFkaWVudEdsb3cgYXMgRmlsdGVyVHlwZS5HcmFkaWVudEdsb3d9KX0sXG4gICAgZ3JhZGllbnQ6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJENvbG9yU3RvcCwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBibHVyWDoge3R5cGU6IEZpeGVkMTZQMTZ9LFxuICAgIGJsdXJZOiB7dHlwZTogRml4ZWQxNlAxNn0sXG4gICAgYW5nbGU6IHt0eXBlOiBGaXhlZDE2UDE2fSxcbiAgICBkaXN0YW5jZToge3R5cGU6IEZpeGVkMTZQMTZ9LFxuICAgIHN0cmVuZ3RoOiB7dHlwZTogRml4ZWQ4UDh9LFxuICAgIGlubmVyOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGtub2Nrb3V0OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGNvbXBvc2l0ZVNvdXJjZToge3R5cGU6ICRCb29sZWFufSxcbiAgICBvblRvcDoge3R5cGU6ICRCb29sZWFufSxcbiAgICBwYXNzZXM6IHt0eXBlOiBuZXcgSW50ZWdlclR5cGUoe21pbjogMCwgbWF4OiAxNX0pIGFzIElvVHlwZTxVaW50ND59LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const _type_1 = __webpack_require__(41);
exports.$Bevel = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$JoinStyleType, value: _type_1.JoinStyleType.Bevel }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvam9pbi1zdHlsZXMvYmV2ZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxtQ0FBd0Q7QUFNM0MsUUFBQSxNQUFNLEdBQTBCLElBQUksdUJBQVksQ0FBUTtJQUNuRSxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHNCQUFjLEVBQUUsS0FBSyxFQUFFLHFCQUFhLENBQUMsS0FBNEIsRUFBQyxDQUFDLEVBQUM7S0FDekc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJqb2luLXN0eWxlcy9iZXZlbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkSm9pblN0eWxlVHlwZSwgSm9pblN0eWxlVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmV2ZWwge1xuICB0eXBlOiBKb2luU3R5bGVUeXBlLkJldmVsO1xufVxuXG5leHBvcnQgY29uc3QgJEJldmVsOiBEb2N1bWVudElvVHlwZTxCZXZlbD4gPSBuZXcgRG9jdW1lbnRUeXBlPEJldmVsPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkSm9pblN0eWxlVHlwZSwgdmFsdWU6IEpvaW5TdHlsZVR5cGUuQmV2ZWwgYXMgSm9pblN0eWxlVHlwZS5CZXZlbH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const __1 = __webpack_require__(12);
const _type_1 = __webpack_require__(41);
exports.$Miter = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$JoinStyleType, value: _type_1.JoinStyleType.Miter }) },
        limit: { type: __1.Fixed8P8 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvam9pbi1zdHlsZXMvbWl0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCwwQkFBOEI7QUFDOUIsbUNBQXdEO0FBTzNDLFFBQUEsTUFBTSxHQUEwQixJQUFJLHVCQUFZLENBQVE7SUFDbkUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxzQkFBYyxFQUFFLEtBQUssRUFBRSxxQkFBYSxDQUFDLEtBQTRCLEVBQUMsQ0FBQyxFQUFDO1FBQ3hHLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxZQUFRLEVBQUM7S0FDeEI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJqb2luLXN0eWxlcy9taXRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBGaXhlZDhQOCB9IGZyb20gXCIuLlwiO1xuaW1wb3J0IHsgJEpvaW5TdHlsZVR5cGUsIEpvaW5TdHlsZVR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1pdGVyIHtcbiAgdHlwZTogSm9pblN0eWxlVHlwZS5NaXRlcjtcbiAgbGltaXQ6IEZpeGVkOFA4O1xufVxuXG5leHBvcnQgY29uc3QgJE1pdGVyOiBEb2N1bWVudElvVHlwZTxNaXRlcj4gPSBuZXcgRG9jdW1lbnRUeXBlPE1pdGVyPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkSm9pblN0eWxlVHlwZSwgdmFsdWU6IEpvaW5TdHlsZVR5cGUuTWl0ZXIgYXMgSm9pblN0eWxlVHlwZS5NaXRlcn0pfSxcbiAgICBsaW1pdDoge3R5cGU6IEZpeGVkOFA4fSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const _type_1 = __webpack_require__(41);
exports.$Round = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$JoinStyleType, value: _type_1.JoinStyleType.Round }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvam9pbi1zdHlsZXMvcm91bmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxtQ0FBd0Q7QUFNM0MsUUFBQSxNQUFNLEdBQTBCLElBQUksdUJBQVksQ0FBUTtJQUNuRSxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHNCQUFjLEVBQUUsS0FBSyxFQUFFLHFCQUFhLENBQUMsS0FBNEIsRUFBQyxDQUFDLEVBQUM7S0FDekc7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJqb2luLXN0eWxlcy9yb3VuZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkSm9pblN0eWxlVHlwZSwgSm9pblN0eWxlVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUm91bmQge1xuICB0eXBlOiBKb2luU3R5bGVUeXBlLlJvdW5kO1xufVxuXG5leHBvcnQgY29uc3QgJFJvdW5kOiBEb2N1bWVudElvVHlwZTxSb3VuZD4gPSBuZXcgRG9jdW1lbnRUeXBlPFJvdW5kPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkSm9pblN0eWxlVHlwZSwgdmFsdWU6IEpvaW5TdHlsZVR5cGUuUm91bmQgYXMgSm9pblN0eWxlVHlwZS5Sb3VuZH0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const matrix_1 = __webpack_require__(13);
const _type_1 = __webpack_require__(35);
exports.$Bitmap = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$MorphFillStyleType,
                value: _type_1.MorphFillStyleType.Bitmap,
            }),
        },
        bitmapId: { type: uint16_1.$Uint16 },
        startMatrix: { type: matrix_1.$Matrix },
        endMatrix: { type: matrix_1.$Matrix },
        repeating: { type: boolean_1.$Boolean },
        smoothed: { type: boolean_1.$Boolean },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtZmlsbC1zdHlsZXMvYml0bWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUVqRCxzQ0FBNEM7QUFDNUMsbUNBQWtFO0FBV3JELFFBQUEsT0FBTyxHQUEyQixJQUFJLHVCQUFZLENBQVM7SUFDdEUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQztnQkFDcEIsSUFBSSxFQUFFLDJCQUFtQjtnQkFDekIsS0FBSyxFQUFFLDBCQUFrQixDQUFDLE1BQW1DO2FBQzlELENBQUM7U0FDSDtRQUNELFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3pCLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzVCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzFCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzNCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO0tBQzNCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoibW9ycGgtZmlsbC1zdHlsZXMvYml0bWFwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkTWF0cml4LCBNYXRyaXggfSBmcm9tIFwiLi4vbWF0cml4XCI7XG5pbXBvcnQgeyAkTW9ycGhGaWxsU3R5bGVUeXBlLCBNb3JwaEZpbGxTdHlsZVR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEJpdG1hcCB7XG4gIHR5cGU6IE1vcnBoRmlsbFN0eWxlVHlwZS5CaXRtYXA7XG4gIGJpdG1hcElkOiBVaW50MTY7XG4gIHN0YXJ0TWF0cml4OiBNYXRyaXg7XG4gIGVuZE1hdHJpeDogTWF0cml4O1xuICByZXBlYXRpbmc6IGJvb2xlYW47XG4gIHNtb290aGVkOiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgJEJpdG1hcDogRG9jdW1lbnRJb1R5cGU8Qml0bWFwPiA9IG5ldyBEb2N1bWVudFR5cGU8Qml0bWFwPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7XG4gICAgICB0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe1xuICAgICAgICB0eXBlOiAkTW9ycGhGaWxsU3R5bGVUeXBlLFxuICAgICAgICB2YWx1ZTogTW9ycGhGaWxsU3R5bGVUeXBlLkJpdG1hcCBhcyBNb3JwaEZpbGxTdHlsZVR5cGUuQml0bWFwLFxuICAgICAgfSksXG4gICAgfSxcbiAgICBiaXRtYXBJZDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIHN0YXJ0TWF0cml4OiB7dHlwZTogJE1hdHJpeH0sXG4gICAgZW5kTWF0cml4OiB7dHlwZTogJE1hdHJpeH0sXG4gICAgcmVwZWF0aW5nOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHNtb290aGVkOiB7dHlwZTogJEJvb2xlYW59LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const fixed8p8_1 = __webpack_require__(20);
const matrix_1 = __webpack_require__(13);
const morph_gradient_1 = __webpack_require__(61);
const _type_1 = __webpack_require__(35);
exports.$FocalGradient = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$MorphFillStyleType,
                value: _type_1.MorphFillStyleType.FocalGradient,
            }),
        },
        startMatrix: { type: matrix_1.$Matrix },
        endMatrix: { type: matrix_1.$Matrix },
        gradient: { type: morph_gradient_1.$MorphGradient },
        startFocalPoint: { type: fixed8p8_1.Fixed8P8 },
        endFocalPoint: { type: fixed8p8_1.Fixed8P8 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtZmlsbC1zdHlsZXMvZm9jYWwtZ3JhZGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxzREFBbUQ7QUFDbkQsc0NBQTRDO0FBQzVDLHNEQUFrRTtBQUNsRSxtQ0FBa0U7QUFXckQsUUFBQSxjQUFjLEdBQWtDLElBQUksdUJBQVksQ0FBZ0I7SUFDM0YsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQztnQkFDcEIsSUFBSSxFQUFFLDJCQUFtQjtnQkFDekIsS0FBSyxFQUFFLDBCQUFrQixDQUFDLGFBQWlEO2FBQzVFLENBQUM7U0FDSDtRQUNELFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzVCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzFCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSwrQkFBYyxFQUFDO1FBQ2hDLGVBQWUsRUFBRSxFQUFDLElBQUksRUFBRSxtQkFBUSxFQUFDO1FBQ2pDLGFBQWEsRUFBRSxFQUFDLElBQUksRUFBRSxtQkFBUSxFQUFDO0tBQ2hDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoibW9ycGgtZmlsbC1zdHlsZXMvZm9jYWwtZ3JhZGllbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgRml4ZWQ4UDggfSBmcm9tIFwiLi4vZml4ZWQtcG9pbnQvZml4ZWQ4cDhcIjtcbmltcG9ydCB7ICRNYXRyaXgsIE1hdHJpeCB9IGZyb20gXCIuLi9tYXRyaXhcIjtcbmltcG9ydCB7ICRNb3JwaEdyYWRpZW50LCBNb3JwaEdyYWRpZW50IH0gZnJvbSBcIi4uL21vcnBoLWdyYWRpZW50XCI7XG5pbXBvcnQgeyAkTW9ycGhGaWxsU3R5bGVUeXBlLCBNb3JwaEZpbGxTdHlsZVR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEZvY2FsR3JhZGllbnQge1xuICB0eXBlOiBNb3JwaEZpbGxTdHlsZVR5cGUuRm9jYWxHcmFkaWVudDtcbiAgc3RhcnRNYXRyaXg6IE1hdHJpeDtcbiAgZW5kTWF0cml4OiBNYXRyaXg7XG4gIGdyYWRpZW50OiBNb3JwaEdyYWRpZW50O1xuICBzdGFydEZvY2FsUG9pbnQ6IEZpeGVkOFA4O1xuICBlbmRGb2NhbFBvaW50OiBGaXhlZDhQODtcbn1cblxuZXhwb3J0IGNvbnN0ICRGb2NhbEdyYWRpZW50OiBEb2N1bWVudElvVHlwZTxGb2NhbEdyYWRpZW50PiA9IG5ldyBEb2N1bWVudFR5cGU8Rm9jYWxHcmFkaWVudD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge1xuICAgICAgdHlwZTogbmV3IExpdGVyYWxUeXBlKHtcbiAgICAgICAgdHlwZTogJE1vcnBoRmlsbFN0eWxlVHlwZSxcbiAgICAgICAgdmFsdWU6IE1vcnBoRmlsbFN0eWxlVHlwZS5Gb2NhbEdyYWRpZW50IGFzIE1vcnBoRmlsbFN0eWxlVHlwZS5Gb2NhbEdyYWRpZW50LFxuICAgICAgfSksXG4gICAgfSxcbiAgICBzdGFydE1hdHJpeDoge3R5cGU6ICRNYXRyaXh9LFxuICAgIGVuZE1hdHJpeDoge3R5cGU6ICRNYXRyaXh9LFxuICAgIGdyYWRpZW50OiB7dHlwZTogJE1vcnBoR3JhZGllbnR9LFxuICAgIHN0YXJ0Rm9jYWxQb2ludDoge3R5cGU6IEZpeGVkOFA4fSxcbiAgICBlbmRGb2NhbFBvaW50OiB7dHlwZTogRml4ZWQ4UDh9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint8_1 = __webpack_require__(22);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const straight_s_rgba8_1 = __webpack_require__(14);
exports.$MorphColorStop = new document_1.DocumentType({
    properties: {
        startRatio: { type: uint8_1.$Uint8 },
        startColor: { type: straight_s_rgba8_1.$StraightSRgba8 },
        endRatio: { type: uint8_1.$Uint8 },
        endColor: { type: straight_s_rgba8_1.$StraightSRgba8 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtY29sb3Itc3RvcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtDQUE2QztBQUM3QyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBRW5FLHlEQUFxRTtBQVN4RCxRQUFBLGVBQWUsR0FBbUMsSUFBSSx1QkFBWSxDQUFpQjtJQUM5RixVQUFVLEVBQUU7UUFDVixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsY0FBTSxFQUFDO1FBQzFCLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxrQ0FBZSxFQUFDO1FBQ25DLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxjQUFNLEVBQUM7UUFDeEIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtDQUFlLEVBQUM7S0FDbEM7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJtb3JwaC1jb2xvci1zdG9wLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQ4IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDhcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgVWludDggfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRTdHJhaWdodFNSZ2JhOCwgU3RyYWlnaHRTUmdiYTggfSBmcm9tIFwiLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTW9ycGhDb2xvclN0b3Age1xuICBzdGFydFJhdGlvOiBVaW50ODtcbiAgc3RhcnRDb2xvcjogU3RyYWlnaHRTUmdiYTg7XG4gIGVuZFJhdGlvOiBVaW50ODtcbiAgZW5kQ29sb3I6IFN0cmFpZ2h0U1JnYmE4O1xufVxuXG5leHBvcnQgY29uc3QgJE1vcnBoQ29sb3JTdG9wOiBEb2N1bWVudElvVHlwZTxNb3JwaENvbG9yU3RvcD4gPSBuZXcgRG9jdW1lbnRUeXBlPE1vcnBoQ29sb3JTdG9wPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBzdGFydFJhdGlvOiB7dHlwZTogJFVpbnQ4fSxcbiAgICBzdGFydENvbG9yOiB7dHlwZTogJFN0cmFpZ2h0U1JnYmE4fSxcbiAgICBlbmRSYXRpbzoge3R5cGU6ICRVaW50OH0sXG4gICAgZW5kQ29sb3I6IHt0eXBlOiAkU3RyYWlnaHRTUmdiYTh9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9


/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const matrix_1 = __webpack_require__(13);
const morph_gradient_1 = __webpack_require__(61);
const _type_1 = __webpack_require__(35);
exports.$LinearGradient = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$MorphFillStyleType,
                value: _type_1.MorphFillStyleType.LinearGradient,
            }),
        },
        startMatrix: { type: matrix_1.$Matrix },
        endMatrix: { type: matrix_1.$Matrix },
        gradient: { type: morph_gradient_1.$MorphGradient },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtZmlsbC1zdHlsZXMvbGluZWFyLWdyYWRpZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsc0NBQTRDO0FBQzVDLHNEQUFrRTtBQUNsRSxtQ0FBa0U7QUFTckQsUUFBQSxlQUFlLEdBQW1DLElBQUksdUJBQVksQ0FBaUI7SUFDOUYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQztnQkFDcEIsSUFBSSxFQUFFLDJCQUFtQjtnQkFDekIsS0FBSyxFQUFFLDBCQUFrQixDQUFDLGNBQW1EO2FBQzlFLENBQUM7U0FDSDtRQUNELFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzVCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzFCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSwrQkFBYyxFQUFDO0tBQ2pDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoibW9ycGgtZmlsbC1zdHlsZXMvbGluZWFyLWdyYWRpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRNYXRyaXgsIE1hdHJpeCB9IGZyb20gXCIuLi9tYXRyaXhcIjtcbmltcG9ydCB7ICRNb3JwaEdyYWRpZW50LCBNb3JwaEdyYWRpZW50IH0gZnJvbSBcIi4uL21vcnBoLWdyYWRpZW50XCI7XG5pbXBvcnQgeyAkTW9ycGhGaWxsU3R5bGVUeXBlLCBNb3JwaEZpbGxTdHlsZVR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIExpbmVhckdyYWRpZW50IHtcbiAgdHlwZTogTW9ycGhGaWxsU3R5bGVUeXBlLkxpbmVhckdyYWRpZW50O1xuICBzdGFydE1hdHJpeDogTWF0cml4O1xuICBlbmRNYXRyaXg6IE1hdHJpeDtcbiAgZ3JhZGllbnQ6IE1vcnBoR3JhZGllbnQ7XG59XG5cbmV4cG9ydCBjb25zdCAkTGluZWFyR3JhZGllbnQ6IERvY3VtZW50SW9UeXBlPExpbmVhckdyYWRpZW50PiA9IG5ldyBEb2N1bWVudFR5cGU8TGluZWFyR3JhZGllbnQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHtcbiAgICAgIHR5cGU6IG5ldyBMaXRlcmFsVHlwZSh7XG4gICAgICAgIHR5cGU6ICRNb3JwaEZpbGxTdHlsZVR5cGUsXG4gICAgICAgIHZhbHVlOiBNb3JwaEZpbGxTdHlsZVR5cGUuTGluZWFyR3JhZGllbnQgYXMgTW9ycGhGaWxsU3R5bGVUeXBlLkxpbmVhckdyYWRpZW50LFxuICAgICAgfSksXG4gICAgfSxcbiAgICBzdGFydE1hdHJpeDoge3R5cGU6ICRNYXRyaXh9LFxuICAgIGVuZE1hdHJpeDoge3R5cGU6ICRNYXRyaXh9LFxuICAgIGdyYWRpZW50OiB7dHlwZTogJE1vcnBoR3JhZGllbnR9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const matrix_1 = __webpack_require__(13);
const morph_gradient_1 = __webpack_require__(61);
const _type_1 = __webpack_require__(35);
exports.$RadialGradient = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$MorphFillStyleType,
                value: _type_1.MorphFillStyleType.RadialGradient,
            }),
        },
        startMatrix: { type: matrix_1.$Matrix },
        endMatrix: { type: matrix_1.$Matrix },
        gradient: { type: morph_gradient_1.$MorphGradient },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtZmlsbC1zdHlsZXMvcmFkaWFsLWdyYWRpZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsc0NBQTRDO0FBQzVDLHNEQUFrRTtBQUNsRSxtQ0FBa0U7QUFTckQsUUFBQSxlQUFlLEdBQW1DLElBQUksdUJBQVksQ0FBaUI7SUFDOUYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQztnQkFDcEIsSUFBSSxFQUFFLDJCQUFtQjtnQkFDekIsS0FBSyxFQUFFLDBCQUFrQixDQUFDLGNBQW1EO2FBQzlFLENBQUM7U0FDSDtRQUNELFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzVCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzFCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSwrQkFBYyxFQUFDO0tBQ2pDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoibW9ycGgtZmlsbC1zdHlsZXMvcmFkaWFsLWdyYWRpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRNYXRyaXgsIE1hdHJpeCB9IGZyb20gXCIuLi9tYXRyaXhcIjtcbmltcG9ydCB7ICRNb3JwaEdyYWRpZW50LCBNb3JwaEdyYWRpZW50IH0gZnJvbSBcIi4uL21vcnBoLWdyYWRpZW50XCI7XG5pbXBvcnQgeyAkTW9ycGhGaWxsU3R5bGVUeXBlLCBNb3JwaEZpbGxTdHlsZVR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJhZGlhbEdyYWRpZW50IHtcbiAgdHlwZTogTW9ycGhGaWxsU3R5bGVUeXBlLlJhZGlhbEdyYWRpZW50O1xuICBzdGFydE1hdHJpeDogTWF0cml4O1xuICBlbmRNYXRyaXg6IE1hdHJpeDtcbiAgZ3JhZGllbnQ6IE1vcnBoR3JhZGllbnQ7XG59XG5cbmV4cG9ydCBjb25zdCAkUmFkaWFsR3JhZGllbnQ6IERvY3VtZW50SW9UeXBlPFJhZGlhbEdyYWRpZW50PiA9IG5ldyBEb2N1bWVudFR5cGU8UmFkaWFsR3JhZGllbnQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHtcbiAgICAgIHR5cGU6IG5ldyBMaXRlcmFsVHlwZSh7XG4gICAgICAgIHR5cGU6ICRNb3JwaEZpbGxTdHlsZVR5cGUsXG4gICAgICAgIHZhbHVlOiBNb3JwaEZpbGxTdHlsZVR5cGUuUmFkaWFsR3JhZGllbnQgYXMgTW9ycGhGaWxsU3R5bGVUeXBlLlJhZGlhbEdyYWRpZW50LFxuICAgICAgfSksXG4gICAgfSxcbiAgICBzdGFydE1hdHJpeDoge3R5cGU6ICRNYXRyaXh9LFxuICAgIGVuZE1hdHJpeDoge3R5cGU6ICRNYXRyaXh9LFxuICAgIGdyYWRpZW50OiB7dHlwZTogJE1vcnBoR3JhZGllbnR9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const straight_s_rgba8_1 = __webpack_require__(14);
const _type_1 = __webpack_require__(35);
exports.$Solid = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$MorphFillStyleType,
                value: _type_1.MorphFillStyleType.Solid,
            }),
        },
        startColor: { type: straight_s_rgba8_1.$StraightSRgba8 },
        endColor: { type: straight_s_rgba8_1.$StraightSRgba8 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtZmlsbC1zdHlsZXMvc29saWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCwwREFBc0U7QUFDdEUsbUNBQWtFO0FBUXJELFFBQUEsTUFBTSxHQUEwQixJQUFJLHVCQUFZLENBQVE7SUFDbkUsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQztnQkFDcEIsSUFBSSxFQUFFLDJCQUFtQjtnQkFDekIsS0FBSyxFQUFFLDBCQUFrQixDQUFDLEtBQWlDO2FBQzVELENBQUM7U0FDSDtRQUNELFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxrQ0FBZSxFQUFDO1FBQ25DLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQ0FBZSxFQUFDO0tBQ2xDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoibW9ycGgtZmlsbC1zdHlsZXMvc29saWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJFN0cmFpZ2h0U1JnYmE4LCBTdHJhaWdodFNSZ2JhOCB9IGZyb20gXCIuLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5pbXBvcnQgeyAkTW9ycGhGaWxsU3R5bGVUeXBlLCBNb3JwaEZpbGxTdHlsZVR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNvbGlkIHtcbiAgdHlwZTogTW9ycGhGaWxsU3R5bGVUeXBlLlNvbGlkO1xuICBzdGFydENvbG9yOiBTdHJhaWdodFNSZ2JhODtcbiAgZW5kQ29sb3I6IFN0cmFpZ2h0U1JnYmE4O1xufVxuXG5leHBvcnQgY29uc3QgJFNvbGlkOiBEb2N1bWVudElvVHlwZTxTb2xpZD4gPSBuZXcgRG9jdW1lbnRUeXBlPFNvbGlkPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7XG4gICAgICB0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe1xuICAgICAgICB0eXBlOiAkTW9ycGhGaWxsU3R5bGVUeXBlLFxuICAgICAgICB2YWx1ZTogTW9ycGhGaWxsU3R5bGVUeXBlLlNvbGlkIGFzIE1vcnBoRmlsbFN0eWxlVHlwZS5Tb2xpZCxcbiAgICAgIH0pLFxuICAgIH0sXG4gICAgc3RhcnRDb2xvcjoge3R5cGU6ICRTdHJhaWdodFNSZ2JhOH0sXG4gICAgZW5kQ29sb3I6IHt0eXBlOiAkU3RyYWlnaHRTUmdiYTh9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const vector_2d_1 = __webpack_require__(36);
const _type_1 = __webpack_require__(42);
exports.$MorphCurvedEdge = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$MorphShapeRecordType,
                value: _type_1.MorphShapeRecordType.MorphCurvedEdge,
            }),
        },
        startControlDelta: { type: vector_2d_1.$Vector2D },
        endControlDelta: { type: vector_2d_1.$Vector2D },
        startAnchorDelta: { type: vector_2d_1.$Vector2D },
        endAnchorDelta: { type: vector_2d_1.$Vector2D },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtc2hhcGUtcmVjb3Jkcy9tb3JwaC1jdXJ2ZWQtZWRnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELDRDQUFtRDtBQUNuRCxtQ0FBc0U7QUFVekQsUUFBQSxnQkFBZ0IsR0FBb0MsSUFBSSx1QkFBWSxDQUFrQjtJQUNqRyxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUU7WUFDSixJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDO2dCQUNwQixJQUFJLEVBQUUsNkJBQXFCO2dCQUMzQixLQUFLLEVBQUUsNEJBQW9CLENBQUMsZUFBdUQ7YUFDcEYsQ0FBQztTQUNIO1FBQ0QsaUJBQWlCLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBQztRQUNwQyxlQUFlLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBQztRQUNsQyxnQkFBZ0IsRUFBRSxFQUFDLElBQUksRUFBRSxxQkFBUyxFQUFDO1FBQ25DLGNBQWMsRUFBRSxFQUFDLElBQUksRUFBRSxxQkFBUyxFQUFDO0tBQ2xDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoibW9ycGgtc2hhcGUtcmVjb3Jkcy9tb3JwaC1jdXJ2ZWQtZWRnZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyAkVmVjdG9yMkQsIFZlY3RvcjJEIH0gZnJvbSBcIi4uL3ZlY3Rvci0yZFwiO1xuaW1wb3J0IHsgJE1vcnBoU2hhcGVSZWNvcmRUeXBlLCBNb3JwaFNoYXBlUmVjb3JkVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTW9ycGhDdXJ2ZWRFZGdlIHtcbiAgdHlwZTogTW9ycGhTaGFwZVJlY29yZFR5cGUuTW9ycGhDdXJ2ZWRFZGdlO1xuICBzdGFydENvbnRyb2xEZWx0YTogVmVjdG9yMkQ7XG4gIGVuZENvbnRyb2xEZWx0YTogVmVjdG9yMkQ7XG4gIHN0YXJ0QW5jaG9yRGVsdGE6IFZlY3RvcjJEO1xuICBlbmRBbmNob3JEZWx0YTogVmVjdG9yMkQ7XG59XG5cbmV4cG9ydCBjb25zdCAkTW9ycGhDdXJ2ZWRFZGdlOiBEb2N1bWVudElvVHlwZTxNb3JwaEN1cnZlZEVkZ2U+ID0gbmV3IERvY3VtZW50VHlwZTxNb3JwaEN1cnZlZEVkZ2U+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHtcbiAgICAgIHR5cGU6IG5ldyBMaXRlcmFsVHlwZSh7XG4gICAgICAgIHR5cGU6ICRNb3JwaFNoYXBlUmVjb3JkVHlwZSxcbiAgICAgICAgdmFsdWU6IE1vcnBoU2hhcGVSZWNvcmRUeXBlLk1vcnBoQ3VydmVkRWRnZSBhcyBNb3JwaFNoYXBlUmVjb3JkVHlwZS5Nb3JwaEN1cnZlZEVkZ2UsXG4gICAgICB9KSxcbiAgICB9LFxuICAgIHN0YXJ0Q29udHJvbERlbHRhOiB7dHlwZTogJFZlY3RvcjJEfSxcbiAgICBlbmRDb250cm9sRGVsdGE6IHt0eXBlOiAkVmVjdG9yMkR9LFxuICAgIHN0YXJ0QW5jaG9yRGVsdGE6IHt0eXBlOiAkVmVjdG9yMkR9LFxuICAgIGVuZEFuY2hvckRlbHRhOiB7dHlwZTogJFZlY3RvcjJEfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const vector_2d_1 = __webpack_require__(36);
const _type_1 = __webpack_require__(42);
exports.$MorphStraightEdge = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$MorphShapeRecordType,
                value: _type_1.MorphShapeRecordType.MorphStraightEdge,
            }),
        },
        startDelta: { type: vector_2d_1.$Vector2D },
        endDelta: { type: vector_2d_1.$Vector2D },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtc2hhcGUtcmVjb3Jkcy9tb3JwaC1zdHJhaWdodC1lZGdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsNENBQW1EO0FBQ25ELG1DQUFzRTtBQVF6RCxRQUFBLGtCQUFrQixHQUFzQyxJQUFJLHVCQUFZLENBQW9CO0lBQ3ZHLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRTtZQUNKLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUM7Z0JBQ3BCLElBQUksRUFBRSw2QkFBcUI7Z0JBQzNCLEtBQUssRUFBRSw0QkFBb0IsQ0FBQyxpQkFBMkQ7YUFDeEYsQ0FBQztTQUNIO1FBQ0QsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLHFCQUFTLEVBQUM7UUFDN0IsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLHFCQUFTLEVBQUM7S0FDNUI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJtb3JwaC1zaGFwZS1yZWNvcmRzL21vcnBoLXN0cmFpZ2h0LWVkZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJFZlY3RvcjJELCBWZWN0b3IyRCB9IGZyb20gXCIuLi92ZWN0b3ItMmRcIjtcbmltcG9ydCB7ICRNb3JwaFNoYXBlUmVjb3JkVHlwZSwgTW9ycGhTaGFwZVJlY29yZFR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1vcnBoU3RyYWlnaHRFZGdlIHtcbiAgdHlwZTogTW9ycGhTaGFwZVJlY29yZFR5cGUuTW9ycGhTdHJhaWdodEVkZ2U7XG4gIHN0YXJ0RGVsdGE6IFZlY3RvcjJEO1xuICBlbmREZWx0YTogVmVjdG9yMkQ7XG59XG5cbmV4cG9ydCBjb25zdCAkTW9ycGhTdHJhaWdodEVkZ2U6IERvY3VtZW50SW9UeXBlPE1vcnBoU3RyYWlnaHRFZGdlPiA9IG5ldyBEb2N1bWVudFR5cGU8TW9ycGhTdHJhaWdodEVkZ2U+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHtcbiAgICAgIHR5cGU6IG5ldyBMaXRlcmFsVHlwZSh7XG4gICAgICAgIHR5cGU6ICRNb3JwaFNoYXBlUmVjb3JkVHlwZSxcbiAgICAgICAgdmFsdWU6IE1vcnBoU2hhcGVSZWNvcmRUeXBlLk1vcnBoU3RyYWlnaHRFZGdlIGFzIE1vcnBoU2hhcGVSZWNvcmRUeXBlLk1vcnBoU3RyYWlnaHRFZGdlLFxuICAgICAgfSksXG4gICAgfSxcbiAgICBzdGFydERlbHRhOiB7dHlwZTogJFZlY3RvcjJEfSxcbiAgICBlbmREZWx0YToge3R5cGU6ICRWZWN0b3IyRH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint32_1 = __webpack_require__(37);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const morph_fill_style_1 = __webpack_require__(62);
const morph_line_style_1 = __webpack_require__(92);
const vector_2d_1 = __webpack_require__(36);
const _type_1 = __webpack_require__(42);
exports.$MorphStyleChange = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$MorphShapeRecordType,
                value: _type_1.MorphShapeRecordType.MorphStyleChange,
            }),
        },
        startMoveTo: { type: vector_2d_1.$Vector2D, optional: true },
        endMoveTo: { type: vector_2d_1.$Vector2D, optional: true },
        leftFill: { type: uint32_1.$Uint32, optional: true },
        rightFill: { type: uint32_1.$Uint32, optional: true },
        lineStyle: { type: uint32_1.$Uint32, optional: true },
        fillStyles: {
            type: new array_1.ArrayType({ itemType: morph_fill_style_1.$MorphFillStyle, maxLength: Infinity }),
            optional: true,
        },
        lineStyles: {
            type: new array_1.ArrayType({ itemType: morph_line_style_1.$MorphLineStyle, maxLength: Infinity }),
            optional: true,
        },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtc2hhcGUtcmVjb3Jkcy9tb3JwaC1zdHlsZS1jaGFuZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBRWpELDBEQUFzRTtBQUN0RSwwREFBc0U7QUFDdEUsNENBQW1EO0FBQ25ELG1DQUFzRTtBQWF6RCxRQUFBLGlCQUFpQixHQUFxQyxJQUFJLHVCQUFZLENBQW1CO0lBQ3BHLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRTtZQUNKLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUM7Z0JBQ3BCLElBQUksRUFBRSw2QkFBcUI7Z0JBQzNCLEtBQUssRUFBRSw0QkFBb0IsQ0FBQyxnQkFBeUQ7YUFDdEYsQ0FBQztTQUNIO1FBQ0QsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLHFCQUFTLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUM5QyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQzVDLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDekMsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUMxQyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQzFDLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsa0NBQWUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUM7WUFDckUsUUFBUSxFQUFFLElBQUk7U0FDZjtRQUNELFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsa0NBQWUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUM7WUFDckUsUUFBUSxFQUFFLElBQUk7U0FDZjtLQUNGO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoibW9ycGgtc2hhcGUtcmVjb3Jkcy9tb3JwaC1zdHlsZS1jaGFuZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkVWludDMyIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDMyXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQzMiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJE1vcnBoRmlsbFN0eWxlLCBNb3JwaEZpbGxTdHlsZSB9IGZyb20gXCIuLi9tb3JwaC1maWxsLXN0eWxlXCI7XG5pbXBvcnQgeyAkTW9ycGhMaW5lU3R5bGUsIE1vcnBoTGluZVN0eWxlIH0gZnJvbSBcIi4uL21vcnBoLWxpbmUtc3R5bGVcIjtcbmltcG9ydCB7ICRWZWN0b3IyRCwgVmVjdG9yMkQgfSBmcm9tIFwiLi4vdmVjdG9yLTJkXCI7XG5pbXBvcnQgeyAkTW9ycGhTaGFwZVJlY29yZFR5cGUsIE1vcnBoU2hhcGVSZWNvcmRUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBNb3JwaFN0eWxlQ2hhbmdlIHtcbiAgdHlwZTogTW9ycGhTaGFwZVJlY29yZFR5cGUuTW9ycGhTdHlsZUNoYW5nZTtcbiAgc3RhcnRNb3ZlVG8/OiBWZWN0b3IyRDtcbiAgZW5kTW92ZVRvPzogVmVjdG9yMkQ7XG4gIGxlZnRGaWxsPzogVWludDMyO1xuICByaWdodEZpbGw/OiBVaW50MzI7XG4gIGxpbmVTdHlsZT86IFVpbnQzMjtcbiAgZmlsbFN0eWxlcz86IE1vcnBoRmlsbFN0eWxlW107XG4gIGxpbmVTdHlsZXM/OiBNb3JwaExpbmVTdHlsZVtdO1xufVxuXG5leHBvcnQgY29uc3QgJE1vcnBoU3R5bGVDaGFuZ2U6IERvY3VtZW50SW9UeXBlPE1vcnBoU3R5bGVDaGFuZ2U+ID0gbmV3IERvY3VtZW50VHlwZTxNb3JwaFN0eWxlQ2hhbmdlPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7XG4gICAgICB0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe1xuICAgICAgICB0eXBlOiAkTW9ycGhTaGFwZVJlY29yZFR5cGUsXG4gICAgICAgIHZhbHVlOiBNb3JwaFNoYXBlUmVjb3JkVHlwZS5Nb3JwaFN0eWxlQ2hhbmdlIGFzIE1vcnBoU2hhcGVSZWNvcmRUeXBlLk1vcnBoU3R5bGVDaGFuZ2UsXG4gICAgICB9KSxcbiAgICB9LFxuICAgIHN0YXJ0TW92ZVRvOiB7dHlwZTogJFZlY3RvcjJELCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgZW5kTW92ZVRvOiB7dHlwZTogJFZlY3RvcjJELCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgbGVmdEZpbGw6IHt0eXBlOiAkVWludDMyLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgcmlnaHRGaWxsOiB7dHlwZTogJFVpbnQzMiwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGxpbmVTdHlsZToge3R5cGU6ICRVaW50MzIsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBmaWxsU3R5bGVzOiB7XG4gICAgICB0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJE1vcnBoRmlsbFN0eWxlLCBtYXhMZW5ndGg6IEluZmluaXR5fSksXG4gICAgICBvcHRpb25hbDogdHJ1ZSxcbiAgICB9LFxuICAgIGxpbmVTdHlsZXM6IHtcbiAgICAgIHR5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkTW9ycGhMaW5lU3R5bGUsIG1heExlbmd0aDogSW5maW5pdHl9KSxcbiAgICAgIG9wdGlvbmFsOiB0cnVlLFxuICAgIH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const vector_2d_1 = __webpack_require__(36);
const _type_1 = __webpack_require__(43);
exports.$CurvedEdge = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$ShapeRecordType,
                value: _type_1.ShapeRecordType.CurvedEdge,
            }),
        },
        controlDelta: { type: vector_2d_1.$Vector2D },
        anchorDelta: { type: vector_2d_1.$Vector2D },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3Jkcy9jdXJ2ZWQtZWRnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELDRDQUFtRDtBQUNuRCxtQ0FBNEQ7QUFRL0MsUUFBQSxXQUFXLEdBQStCLElBQUksdUJBQVksQ0FBYTtJQUNsRixVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUU7WUFDSixJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDO2dCQUNwQixJQUFJLEVBQUUsd0JBQWdCO2dCQUN0QixLQUFLLEVBQUUsdUJBQWUsQ0FBQyxVQUF3QzthQUNoRSxDQUFDO1NBQ0g7UUFDRCxZQUFZLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBQztRQUMvQixXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsRUFBQztLQUMvQjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InNoYXBlLXJlY29yZHMvY3VydmVkLWVkZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJFZlY3RvcjJELCBWZWN0b3IyRCB9IGZyb20gXCIuLi92ZWN0b3ItMmRcIjtcbmltcG9ydCB7ICRTaGFwZVJlY29yZFR5cGUsIFNoYXBlUmVjb3JkVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ3VydmVkRWRnZSB7XG4gIHR5cGU6IFNoYXBlUmVjb3JkVHlwZS5DdXJ2ZWRFZGdlO1xuICBjb250cm9sRGVsdGE6IFZlY3RvcjJEO1xuICBhbmNob3JEZWx0YTogVmVjdG9yMkQ7XG59XG5cbmV4cG9ydCBjb25zdCAkQ3VydmVkRWRnZTogRG9jdW1lbnRJb1R5cGU8Q3VydmVkRWRnZT4gPSBuZXcgRG9jdW1lbnRUeXBlPEN1cnZlZEVkZ2U+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHtcbiAgICAgIHR5cGU6IG5ldyBMaXRlcmFsVHlwZSh7XG4gICAgICAgIHR5cGU6ICRTaGFwZVJlY29yZFR5cGUsXG4gICAgICAgIHZhbHVlOiBTaGFwZVJlY29yZFR5cGUuQ3VydmVkRWRnZSBhcyBTaGFwZVJlY29yZFR5cGUuQ3VydmVkRWRnZSxcbiAgICAgIH0pLFxuICAgIH0sXG4gICAgY29udHJvbERlbHRhOiB7dHlwZTogJFZlY3RvcjJEfSxcbiAgICBhbmNob3JEZWx0YToge3R5cGU6ICRWZWN0b3IyRH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const vector_2d_1 = __webpack_require__(36);
const _type_1 = __webpack_require__(43);
exports.$StraightEdge = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$ShapeRecordType,
                value: _type_1.ShapeRecordType.StraightEdge,
            }),
        },
        delta: { type: vector_2d_1.$Vector2D },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3Jkcy9zdHJhaWdodC1lZGdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsNENBQW1EO0FBQ25ELG1DQUE0RDtBQU8vQyxRQUFBLGFBQWEsR0FBaUMsSUFBSSx1QkFBWSxDQUFlO0lBQ3hGLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRTtZQUNKLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUM7Z0JBQ3BCLElBQUksRUFBRSx3QkFBZ0I7Z0JBQ3RCLEtBQUssRUFBRSx1QkFBZSxDQUFDLFlBQTRDO2FBQ3BFLENBQUM7U0FDSDtRQUNELEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxxQkFBUyxFQUFDO0tBQ3pCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoic2hhcGUtcmVjb3Jkcy9zdHJhaWdodC1lZGdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRWZWN0b3IyRCwgVmVjdG9yMkQgfSBmcm9tIFwiLi4vdmVjdG9yLTJkXCI7XG5pbXBvcnQgeyAkU2hhcGVSZWNvcmRUeXBlLCBTaGFwZVJlY29yZFR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0cmFpZ2h0RWRnZSB7XG4gIHR5cGU6IFNoYXBlUmVjb3JkVHlwZS5TdHJhaWdodEVkZ2U7XG4gIGRlbHRhOiBWZWN0b3IyRDtcbn1cblxuZXhwb3J0IGNvbnN0ICRTdHJhaWdodEVkZ2U6IERvY3VtZW50SW9UeXBlPFN0cmFpZ2h0RWRnZT4gPSBuZXcgRG9jdW1lbnRUeXBlPFN0cmFpZ2h0RWRnZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge1xuICAgICAgdHlwZTogbmV3IExpdGVyYWxUeXBlKHtcbiAgICAgICAgdHlwZTogJFNoYXBlUmVjb3JkVHlwZSxcbiAgICAgICAgdmFsdWU6IFNoYXBlUmVjb3JkVHlwZS5TdHJhaWdodEVkZ2UgYXMgU2hhcGVSZWNvcmRUeXBlLlN0cmFpZ2h0RWRnZSxcbiAgICAgIH0pLFxuICAgIH0sXG4gICAgZGVsdGE6IHt0eXBlOiAkVmVjdG9yMkR9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint32_1 = __webpack_require__(37);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const fill_style_1 = __webpack_require__(63);
const line_style_1 = __webpack_require__(95);
const vector_2d_1 = __webpack_require__(36);
const _type_1 = __webpack_require__(43);
exports.$StyleChange = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$ShapeRecordType,
                value: _type_1.ShapeRecordType.StyleChange,
            }),
        },
        moveTo: { type: vector_2d_1.$Vector2D, optional: true },
        leftFill: { type: uint32_1.$Uint32, optional: true },
        rightFill: { type: uint32_1.$Uint32, optional: true },
        lineStyle: { type: uint32_1.$Uint32, optional: true },
        fillStyles: {
            type: new array_1.ArrayType({ itemType: fill_style_1.$FillStyle, maxLength: Infinity }),
            optional: true,
        },
        lineStyles: {
            type: new array_1.ArrayType({ itemType: line_style_1.$LineStyle, maxLength: Infinity }),
            optional: true,
        },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUtcmVjb3Jkcy9zdHlsZS1jaGFuZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBRWpELDhDQUFzRDtBQUN0RCw4Q0FBc0Q7QUFDdEQsNENBQW1EO0FBQ25ELG1DQUE0RDtBQVkvQyxRQUFBLFlBQVksR0FBZ0MsSUFBSSx1QkFBWSxDQUFjO0lBQ3JGLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRTtZQUNKLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUM7Z0JBQ3BCLElBQUksRUFBRSx3QkFBZ0I7Z0JBQ3RCLEtBQUssRUFBRSx1QkFBZSxDQUFDLFdBQTBDO2FBQ2xFLENBQUM7U0FDSDtRQUNELE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxxQkFBUyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDekMsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUN6QyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQzFDLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDMUMsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSx1QkFBVSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQztZQUNoRSxRQUFRLEVBQUUsSUFBSTtTQUNmO1FBQ0QsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSx1QkFBVSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQztZQUNoRSxRQUFRLEVBQUUsSUFBSTtTQUNmO0tBQ0Y7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJzaGFwZS1yZWNvcmRzL3N0eWxlLWNoYW5nZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50MzIgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MzJcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEFycmF5VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2FycmF5XCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDMyIH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkRmlsbFN0eWxlLCBGaWxsU3R5bGUgfSBmcm9tIFwiLi4vZmlsbC1zdHlsZVwiO1xuaW1wb3J0IHsgJExpbmVTdHlsZSwgTGluZVN0eWxlIH0gZnJvbSBcIi4uL2xpbmUtc3R5bGVcIjtcbmltcG9ydCB7ICRWZWN0b3IyRCwgVmVjdG9yMkQgfSBmcm9tIFwiLi4vdmVjdG9yLTJkXCI7XG5pbXBvcnQgeyAkU2hhcGVSZWNvcmRUeXBlLCBTaGFwZVJlY29yZFR5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlQ2hhbmdlIHtcbiAgdHlwZTogU2hhcGVSZWNvcmRUeXBlLlN0eWxlQ2hhbmdlO1xuICBtb3ZlVG8/OiBWZWN0b3IyRDtcbiAgbGVmdEZpbGw/OiBVaW50MzI7XG4gIHJpZ2h0RmlsbD86IFVpbnQzMjtcbiAgbGluZVN0eWxlPzogVWludDMyO1xuICBmaWxsU3R5bGVzPzogRmlsbFN0eWxlW107XG4gIGxpbmVTdHlsZXM/OiBMaW5lU3R5bGVbXTtcbn1cblxuZXhwb3J0IGNvbnN0ICRTdHlsZUNoYW5nZTogRG9jdW1lbnRJb1R5cGU8U3R5bGVDaGFuZ2U+ID0gbmV3IERvY3VtZW50VHlwZTxTdHlsZUNoYW5nZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge1xuICAgICAgdHlwZTogbmV3IExpdGVyYWxUeXBlKHtcbiAgICAgICAgdHlwZTogJFNoYXBlUmVjb3JkVHlwZSxcbiAgICAgICAgdmFsdWU6IFNoYXBlUmVjb3JkVHlwZS5TdHlsZUNoYW5nZSBhcyBTaGFwZVJlY29yZFR5cGUuU3R5bGVDaGFuZ2UsXG4gICAgICB9KSxcbiAgICB9LFxuICAgIG1vdmVUbzoge3R5cGU6ICRWZWN0b3IyRCwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGxlZnRGaWxsOiB7dHlwZTogJFVpbnQzMiwgb3B0aW9uYWw6IHRydWV9LFxuICAgIHJpZ2h0RmlsbDoge3R5cGU6ICRVaW50MzIsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBsaW5lU3R5bGU6IHt0eXBlOiAkVWludDMyLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgZmlsbFN0eWxlczoge1xuICAgICAgdHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRGaWxsU3R5bGUsIG1heExlbmd0aDogSW5maW5pdHl9KSxcbiAgICAgIG9wdGlvbmFsOiB0cnVlLFxuICAgIH0sXG4gICAgbGluZVN0eWxlczoge1xuICAgICAgdHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRMaW5lU3R5bGUsIG1heExlbmd0aDogSW5maW5pdHl9KSxcbiAgICAgIG9wdGlvbmFsOiB0cnVlLFxuICAgIH0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const float64_1 = __webpack_require__(33);
const literal_1 = __webpack_require__(2);
const grid_fitting_1 = __webpack_require__(97);
const text_renderer_1 = __webpack_require__(98);
const _type_1 = __webpack_require__(5);
exports.$CsmTextSettings = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.CsmTextSettings }) },
        textId: { type: uint16_1.$Uint16 },
        renderer: { type: text_renderer_1.$TextRenderer },
        fitting: { type: grid_fitting_1.$GridFitting },
        thickness: { type: new float64_1.Float64Type() },
        sharpness: { type: new float64_1.Float64Type() },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9jc20tdGV4dC1zZXR0aW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCxnREFBaUQ7QUFFakQsdURBQWlFO0FBQ2pFLHlEQUFvRTtBQUVwRSxtQ0FBNEM7QUFXL0IsUUFBQSxnQkFBZ0IsR0FBb0MsSUFBSSx1QkFBWSxDQUFrQjtJQUNqRyxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxlQUEwQyxFQUFDLENBQUMsRUFBQztRQUMxRyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN2QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsNkJBQWEsRUFBQztRQUMvQixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsMkJBQVksRUFBQztRQUM3QixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxFQUFFLEVBQUM7UUFDcEMsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsRUFBRSxFQUFDO0tBQ3JDO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9jc20tdGV4dC1zZXR0aW5ncy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgRmxvYXQ2NFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9mbG9hdDY0XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IEZsb2F0MzIsIFVpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJEdyaWRGaXR0aW5nLCBHcmlkRml0dGluZyB9IGZyb20gXCIuLi90ZXh0L2dyaWQtZml0dGluZ1wiO1xuaW1wb3J0IHsgJFRleHRSZW5kZXJlciwgVGV4dFJlbmRlcmVyIH0gZnJvbSBcIi4uL3RleHQvdGV4dC1yZW5kZXJlclwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDc21UZXh0U2V0dGluZ3MgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5Dc21UZXh0U2V0dGluZ3M7XG4gIHRleHRJZDogVWludDE2O1xuICByZW5kZXJlcjogVGV4dFJlbmRlcmVyO1xuICBmaXR0aW5nOiBHcmlkRml0dGluZztcbiAgdGhpY2tuZXNzOiBGbG9hdDMyO1xuICBzaGFycG5lc3M6IEZsb2F0MzI7XG59XG5cbmV4cG9ydCBjb25zdCAkQ3NtVGV4dFNldHRpbmdzOiBEb2N1bWVudElvVHlwZTxDc21UZXh0U2V0dGluZ3M+ID0gbmV3IERvY3VtZW50VHlwZTxDc21UZXh0U2V0dGluZ3M+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5Dc21UZXh0U2V0dGluZ3MgYXMgVGFnVHlwZS5Dc21UZXh0U2V0dGluZ3N9KX0sXG4gICAgdGV4dElkOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgcmVuZGVyZXI6IHt0eXBlOiAkVGV4dFJlbmRlcmVyfSxcbiAgICBmaXR0aW5nOiB7dHlwZTogJEdyaWRGaXR0aW5nfSxcbiAgICB0aGlja25lc3M6IHt0eXBlOiBuZXcgRmxvYXQ2NFR5cGUoKX0sXG4gICAgc2hhcnBuZXNzOiB7dHlwZTogbmV3IEZsb2F0NjRUeXBlKCl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const buffer_1 = __webpack_require__(24);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const _type_1 = __webpack_require__(5);
exports.$DefineBinaryData = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineBinaryData }) },
        id: { type: new integer_1.IntegerType() },
        data: { type: new buffer_1.BufferType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtYmluYXJ5LWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsOENBQStDO0FBQy9DLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQWlEO0FBR2pELG1DQUE0QztBQVEvQixRQUFBLGlCQUFpQixHQUFxQyxJQUFJLHVCQUFZLENBQW1CO0lBQ3BHLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZ0JBQVEsRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLGdCQUE0QyxFQUFDLENBQUMsRUFBQztRQUM1RyxFQUFFLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxFQUFFLEVBQUM7UUFDN0IsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksbUJBQVUsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQ3BEO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9kZWZpbmUtYmluYXJ5LWRhdGEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBCdWZmZXJUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYnVmZmVyXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IEludGVnZXJUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvaW50ZWdlclwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lQmluYXJ5RGF0YSBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRlZmluZUJpbmFyeURhdGE7XG4gIGlkOiBVaW50MTY7XG4gIGRhdGE6IFVpbnQ4QXJyYXk7XG59XG5cbmV4cG9ydCBjb25zdCAkRGVmaW5lQmluYXJ5RGF0YTogRG9jdW1lbnRJb1R5cGU8RGVmaW5lQmluYXJ5RGF0YT4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZUJpbmFyeURhdGE+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5EZWZpbmVCaW5hcnlEYXRhIGFzIFRhZ1R5cGUuRGVmaW5lQmluYXJ5RGF0YX0pfSxcbiAgICBpZDoge3R5cGU6IG5ldyBJbnRlZ2VyVHlwZSgpfSxcbiAgICBkYXRhOiB7dHlwZTogbmV3IEJ1ZmZlclR5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const buffer_1 = __webpack_require__(24);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const image_type_1 = __webpack_require__(300);
const _type_1 = __webpack_require__(5);
exports.$DefineBitmap = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineBitmap }) },
        id: { type: uint16_1.$Uint16 },
        width: { type: uint16_1.$Uint16 },
        height: { type: uint16_1.$Uint16 },
        mediaType: { type: image_type_1.$ImageType },
        data: { type: new buffer_1.BufferType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtYml0bWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1Qyw4Q0FBK0M7QUFDL0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUVqRCw4Q0FBc0Q7QUFFdEQsbUNBQTRDO0FBVy9CLFFBQUEsYUFBYSxHQUFpQyxJQUFJLHVCQUFZLENBQWU7SUFDeEYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsWUFBb0MsRUFBQyxDQUFDLEVBQUM7UUFDcEcsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDbkIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDdEIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDdkIsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDN0IsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksbUJBQVUsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQ3BEO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9kZWZpbmUtYml0bWFwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQnVmZmVyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2J1ZmZlclwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJEltYWdlVHlwZSwgSW1hZ2VUeXBlIH0gZnJvbSBcIi4uL2ltYWdlLXR5cGVcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lQml0bWFwIGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuRGVmaW5lQml0bWFwO1xuICBpZDogVWludDE2O1xuICB3aWR0aDogVWludDE2O1xuICBoZWlnaHQ6IFVpbnQxNjtcbiAgbWVkaWFUeXBlOiBJbWFnZVR5cGU7XG4gIGRhdGE6IFVpbnQ4QXJyYXk7XG59XG5cbmV4cG9ydCBjb25zdCAkRGVmaW5lQml0bWFwOiBEb2N1bWVudElvVHlwZTxEZWZpbmVCaXRtYXA+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVCaXRtYXA+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5EZWZpbmVCaXRtYXAgYXMgVGFnVHlwZS5EZWZpbmVCaXRtYXB9KX0sXG4gICAgaWQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICB3aWR0aDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIGhlaWdodDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIG1lZGlhVHlwZToge3R5cGU6ICRJbWFnZVR5cGV9LFxuICAgIGRhdGE6IHt0eXBlOiBuZXcgQnVmZmVyVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const ucs2_string_1 = __webpack_require__(10);
const white_list_1 = __webpack_require__(64);
exports.$ImageType = new white_list_1.WhiteListType({
    itemType: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }),
    values: [
        "image/jpeg",
        "image/gif",
        "image/png",
        "image/x-tablesless-jpeg",
        "image/x-ajpeg",
        "image/x-swf-bmp",
        "image/x-swf-abmp",
    ],
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvaW1hZ2UtdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHdEQUF3RDtBQUN4RCxzREFBc0Q7QUFpQnpDLFFBQUEsVUFBVSxHQUE2QixJQUFJLDBCQUFhLENBQUM7SUFDcEUsUUFBUSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQztJQUNuRCxNQUFNLEVBQWdCO1FBQ3BCLFlBQVk7UUFDWixXQUFXO1FBQ1gsV0FBVztRQUNYLHlCQUF5QjtRQUN6QixlQUFlO1FBQ2YsaUJBQWlCO1FBQ2pCLGtCQUFrQjtLQUNuQjtDQUNGLENBQUMsQ0FBQyIsImZpbGUiOiJpbWFnZS10eXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVWNzMlN0cmluZ1R5cGUgfSBmcm9tIFwia3J5by90eXBlcy91Y3MyLXN0cmluZ1wiO1xuaW1wb3J0IHsgV2hpdGVMaXN0VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3doaXRlLWxpc3RcIjtcblxuLyoqXG4gKiAtIGB4LXRhYmxlc2xlc3MtanBlZ2A6IEpQRUcgZmlsZSB3aXRob3V0ICBUYWJsZXMvTWlzYyBjaHVuay4gSXQgaGFzIHRvIGJlIGRlZmluZWQgaW4gYVxuICogICBgRGVmaW5lSnBlZ1RhYmxlc2AgdGFnIGFuZCBpbmplY3RlZCBpbiB0aGUgZmlyc3QgU3RhcnQgT2YgRnJhbWUgKFNPRikgSlBFRyBjaHVuay5cbiAqIC0gYHgtYWpwZWdgOiBKUEVHIHdpdGggYWxwaGEgbWFzayAoc2VlIERlZmluZUpQRUczKTpcbiAqICAgYHgtYWpwZWdgIDo6IGBqcGVnX3NpemUodWludDE2YmUpYCBganBlZ2AgYGFscGhhYFxuICovXG5leHBvcnQgdHlwZSBJbWFnZVR5cGUgPVxuICBcImltYWdlL2pwZWdcIlxuICB8IFwiaW1hZ2UvZ2lmXCJcbiAgfCBcImltYWdlL3BuZ1wiXG4gIHwgXCJpbWFnZS94LXRhYmxlc2xlc3MtanBlZ1wiXG4gIHwgXCJpbWFnZS94LWFqcGVnXCJcbiAgfCBcImltYWdlL3gtc3dmLWJtcFwiXG4gIHwgXCJpbWFnZS94LXN3Zi1hYm1wXCI7XG5cbmV4cG9ydCBjb25zdCAkSW1hZ2VUeXBlOiBXaGl0ZUxpc3RUeXBlPEltYWdlVHlwZT4gPSBuZXcgV2hpdGVMaXN0VHlwZSh7XG4gIGl0ZW1UeXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KSxcbiAgdmFsdWVzOiA8SW1hZ2VUeXBlW10+IFtcbiAgICBcImltYWdlL2pwZWdcIixcbiAgICBcImltYWdlL2dpZlwiLFxuICAgIFwiaW1hZ2UvcG5nXCIsXG4gICAgXCJpbWFnZS94LXRhYmxlc2xlc3MtanBlZ1wiLFxuICAgIFwiaW1hZ2UveC1hanBlZ1wiLFxuICAgIFwiaW1hZ2UveC1zd2YtYm1wXCIsXG4gICAgXCJpbWFnZS94LXN3Zi1hYm1wXCIsXG4gIF0sXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=


/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const button_cond_action_1 = __webpack_require__(302);
const button_record_1 = __webpack_require__(304);
const _type_1 = __webpack_require__(5);
exports.$DefineButton = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineButton }) },
        buttonId: { type: uint16_1.$Uint16 },
        trackAsMenu: { type: boolean_1.$Boolean },
        characters: { type: new array_1.ArrayType({ itemType: button_record_1.$ButtonRecord, maxLength: Infinity }) },
        actions: { type: new array_1.ArrayType({ itemType: button_cond_action_1.$ButtonCondAction, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtYnV0dG9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsc0VBQW9GO0FBQ3BGLDREQUF1RTtBQUV2RSxtQ0FBNEM7QUFVL0IsUUFBQSxhQUFhLEdBQWlDLElBQUksdUJBQVksQ0FBZTtJQUN4RixVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxZQUFvQyxFQUFDLENBQUMsRUFBQztRQUNwRyxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN6QixXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUM3QixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLDZCQUFhLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7UUFDakYsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxzQ0FBaUIsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUNuRjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZGVmaW5lLWJ1dHRvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRCdXR0b25Db25kQWN0aW9uLCBCdXR0b25Db25kQWN0aW9uIH0gZnJvbSBcIi4uL2J1dHRvbnMvYnV0dG9uLWNvbmQtYWN0aW9uXCI7XG5pbXBvcnQgeyAkQnV0dG9uUmVjb3JkLCBCdXR0b25SZWNvcmQgfSBmcm9tIFwiLi4vYnV0dG9ucy9idXR0b24tcmVjb3JkXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZUJ1dHRvbiBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRlZmluZUJ1dHRvbjtcbiAgYnV0dG9uSWQ6IFVpbnQxNjtcbiAgdHJhY2tBc01lbnU6IGJvb2xlYW47XG4gIGNoYXJhY3RlcnM6IEJ1dHRvblJlY29yZFtdO1xuICBhY3Rpb25zOiBCdXR0b25Db25kQWN0aW9uW107XG59XG5cbmV4cG9ydCBjb25zdCAkRGVmaW5lQnV0dG9uOiBEb2N1bWVudElvVHlwZTxEZWZpbmVCdXR0b24+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVCdXR0b24+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5EZWZpbmVCdXR0b24gYXMgVGFnVHlwZS5EZWZpbmVCdXR0b259KX0sXG4gICAgYnV0dG9uSWQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICB0cmFja0FzTWVudToge3R5cGU6ICRCb29sZWFufSxcbiAgICBjaGFyYWN0ZXJzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRCdXR0b25SZWNvcmQsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgYWN0aW9uczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkQnV0dG9uQ29uZEFjdGlvbiwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const avm1_1 = __webpack_require__(39);
const button_cond_1 = __webpack_require__(303);
exports.$ButtonCondAction = new document_1.DocumentType({
    properties: {
        conditions: { type: button_cond_1.$ButtonCond, optional: true },
        actions: { type: new array_1.ArrayType({ itemType: avm1_1.$Action, maxLength: Infinity }), optional: true },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnV0dG9ucy9idXR0b24tY29uZC1hY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxrQ0FBa0M7QUFFbEMsK0NBQXdEO0FBTzNDLFFBQUEsaUJBQWlCLEdBQXFDLElBQUksdUJBQVksQ0FBbUI7SUFDcEcsVUFBVSxFQUFFO1FBQ1YsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUMvQyxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLGNBQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO0tBQ3pGO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiYnV0dG9ucy9idXR0b24tY29uZC1hY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyAkQWN0aW9uIH0gZnJvbSBcIi4uL2F2bTFcIjtcbmltcG9ydCB7IEFjdGlvbiB9IGZyb20gXCIuLi9hdm0xL2FjdGlvblwiO1xuaW1wb3J0IHsgJEJ1dHRvbkNvbmQsIEJ1dHRvbkNvbmQgfSBmcm9tIFwiLi9idXR0b24tY29uZFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEJ1dHRvbkNvbmRBY3Rpb24ge1xuICBjb25kaXRpb25zPzogQnV0dG9uQ29uZDtcbiAgYWN0aW9uczogQWN0aW9uW107XG59XG5cbmV4cG9ydCBjb25zdCAkQnV0dG9uQ29uZEFjdGlvbjogRG9jdW1lbnRJb1R5cGU8QnV0dG9uQ29uZEFjdGlvbj4gPSBuZXcgRG9jdW1lbnRUeXBlPEJ1dHRvbkNvbmRBY3Rpb24+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGNvbmRpdGlvbnM6IHt0eXBlOiAkQnV0dG9uQ29uZCwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGFjdGlvbnM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJEFjdGlvbiwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pLCBvcHRpb25hbDogdHJ1ZX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const uint32_1 = __webpack_require__(37);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
exports.$ButtonCond = new document_1.DocumentType({
    properties: {
        idleToOverDown: { type: boolean_1.$Boolean },
        outDownToIdle: { type: boolean_1.$Boolean },
        outDownToOverDown: { type: boolean_1.$Boolean },
        overDownToOutDown: { type: boolean_1.$Boolean },
        overDownToOverUp: { type: boolean_1.$Boolean },
        overUpToOverDown: { type: boolean_1.$Boolean },
        overUpToIdle: { type: boolean_1.$Boolean },
        idleToOverUp: { type: boolean_1.$Boolean },
        overDownToIdle: { type: boolean_1.$Boolean },
        keyPress: { type: uint32_1.$Uint32, optional: true },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnV0dG9ucy9idXR0b24tY29uZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQWdCdEQsUUFBQSxXQUFXLEdBQStCLElBQUksdUJBQVksQ0FBYTtJQUNsRixVQUFVLEVBQUU7UUFDVixjQUFjLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUNoQyxhQUFhLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMvQixpQkFBaUIsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ25DLGlCQUFpQixFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDbkMsZ0JBQWdCLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUNsQyxnQkFBZ0IsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ2xDLFlBQVksRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzlCLFlBQVksRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzlCLGNBQWMsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ2hDLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7S0FDMUM7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJidXR0b25zL2J1dHRvbi1jb25kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyAkVWludDMyIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDMyXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IFVpbnQzMiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEJ1dHRvbkNvbmQge1xuICBpZGxlVG9PdmVyRG93bjogYm9vbGVhbjtcbiAgb3V0RG93blRvSWRsZTogYm9vbGVhbjtcbiAgb3V0RG93blRvT3ZlckRvd246IGJvb2xlYW47XG4gIG92ZXJEb3duVG9PdXREb3duOiBib29sZWFuO1xuICBvdmVyRG93blRvT3ZlclVwOiBib29sZWFuO1xuICBvdmVyVXBUb092ZXJEb3duOiBib29sZWFuO1xuICBvdmVyVXBUb0lkbGU6IGJvb2xlYW47XG4gIGlkbGVUb092ZXJVcDogYm9vbGVhbjtcbiAgb3ZlckRvd25Ub0lkbGU6IGJvb2xlYW47XG4gIGtleVByZXNzPzogVWludDMyO1xufVxuXG5leHBvcnQgY29uc3QgJEJ1dHRvbkNvbmQ6IERvY3VtZW50SW9UeXBlPEJ1dHRvbkNvbmQ+ID0gbmV3IERvY3VtZW50VHlwZTxCdXR0b25Db25kPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBpZGxlVG9PdmVyRG93bjoge3R5cGU6ICRCb29sZWFufSxcbiAgICBvdXREb3duVG9JZGxlOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIG91dERvd25Ub092ZXJEb3duOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIG92ZXJEb3duVG9PdXREb3duOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIG92ZXJEb3duVG9PdmVyVXA6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgb3ZlclVwVG9PdmVyRG93bjoge3R5cGU6ICRCb29sZWFufSxcbiAgICBvdmVyVXBUb0lkbGU6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgaWRsZVRvT3ZlclVwOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIG92ZXJEb3duVG9JZGxlOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGtleVByZXNzOiB7dHlwZTogJFVpbnQzMiwgb3B0aW9uYWw6IHRydWV9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const blend_mode_1 = __webpack_require__(65);
const color_transform_with_alpha_1 = __webpack_require__(99);
const filter_1 = __webpack_require__(100);
const matrix_1 = __webpack_require__(13);
exports.$ButtonRecord = new document_1.DocumentType({
    properties: {
        stateHitTest: { type: boolean_1.$Boolean },
        stateDown: { type: boolean_1.$Boolean },
        stateOver: { type: boolean_1.$Boolean },
        stateUp: { type: boolean_1.$Boolean },
        characterId: { type: uint16_1.$Uint16 },
        depth: { type: uint16_1.$Uint16 },
        matrix: { type: matrix_1.$Matrix },
        colorTransform: { type: color_transform_with_alpha_1.$ColorTransformWithAlpha, optional: true },
        filters: { type: new array_1.ArrayType({ itemType: filter_1.$Filter, maxLength: Infinity }), optional: true },
        blendMode: { type: blend_mode_1.$BlendMode },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvYnV0dG9ucy9idXR0b24tcmVjb3JkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUVuRSw4Q0FBc0Q7QUFDdEQsOEVBQWtHO0FBQ2xHLHNDQUE0QztBQUM1QyxzQ0FBNEM7QUFlL0IsUUFBQSxhQUFhLEdBQWlDLElBQUksdUJBQVksQ0FBZTtJQUN4RixVQUFVLEVBQUU7UUFDVixZQUFZLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUM5QixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMzQixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMzQixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN6QixXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUM1QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN0QixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN2QixjQUFjLEVBQUUsRUFBQyxJQUFJLEVBQUUscURBQXdCLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUNoRSxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLGdCQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUN4RixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztLQUM5QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImJ1dHRvbnMvYnV0dG9uLXJlY29yZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkQmxlbmRNb2RlLCBCbGVuZE1vZGUgfSBmcm9tIFwiLi4vYmxlbmQtbW9kZVwiO1xuaW1wb3J0IHsgJENvbG9yVHJhbnNmb3JtV2l0aEFscGhhLCBDb2xvclRyYW5zZm9ybVdpdGhBbHBoYSB9IGZyb20gXCIuLi9jb2xvci10cmFuc2Zvcm0td2l0aC1hbHBoYVwiO1xuaW1wb3J0IHsgJEZpbHRlciwgRmlsdGVyIH0gZnJvbSBcIi4uL2ZpbHRlclwiO1xuaW1wb3J0IHsgJE1hdHJpeCwgTWF0cml4IH0gZnJvbSBcIi4uL21hdHJpeFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEJ1dHRvblJlY29yZCB7XG4gIHN0YXRlSGl0VGVzdDogYm9vbGVhbjtcbiAgc3RhdGVEb3duOiBib29sZWFuO1xuICBzdGF0ZU92ZXI6IGJvb2xlYW47XG4gIHN0YXRlVXA6IGJvb2xlYW47XG4gIGNoYXJhY3RlcklkOiBVaW50MTY7XG4gIGRlcHRoOiBVaW50MTY7XG4gIG1hdHJpeDogTWF0cml4O1xuICBjb2xvclRyYW5zZm9ybT86IENvbG9yVHJhbnNmb3JtV2l0aEFscGhhO1xuICBmaWx0ZXJzPzogRmlsdGVyW107XG4gIGJsZW5kTW9kZTogQmxlbmRNb2RlO1xufVxuXG5leHBvcnQgY29uc3QgJEJ1dHRvblJlY29yZDogRG9jdW1lbnRJb1R5cGU8QnV0dG9uUmVjb3JkPiA9IG5ldyBEb2N1bWVudFR5cGU8QnV0dG9uUmVjb3JkPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBzdGF0ZUhpdFRlc3Q6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgc3RhdGVEb3duOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHN0YXRlT3Zlcjoge3R5cGU6ICRCb29sZWFufSxcbiAgICBzdGF0ZVVwOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGNoYXJhY3RlcklkOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgZGVwdGg6IHt0eXBlOiAkVWludDE2fSxcbiAgICBtYXRyaXg6IHt0eXBlOiAkTWF0cml4fSxcbiAgICBjb2xvclRyYW5zZm9ybToge3R5cGU6ICRDb2xvclRyYW5zZm9ybVdpdGhBbHBoYSwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGZpbHRlcnM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJEZpbHRlciwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgYmxlbmRNb2RlOiB7dHlwZTogJEJsZW5kTW9kZX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const sint16_1 = __webpack_require__(26);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const fixed8p8_1 = __webpack_require__(20);
exports.$ColorTransform = new document_1.DocumentType({
    properties: {
        redMult: { type: fixed8p8_1.Fixed8P8 },
        greenMult: { type: fixed8p8_1.Fixed8P8 },
        blueMult: { type: fixed8p8_1.Fixed8P8 },
        redAdd: { type: sint16_1.$Sint16 },
        greenAdd: { type: sint16_1.$Sint16 },
        blueAdd: { type: sint16_1.$Sint16 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29sb3ItdHJhbnNmb3JtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFFbkUscURBQWtEO0FBV3JDLFFBQUEsZUFBZSxHQUFtQyxJQUFJLHVCQUFZLENBQWlCO0lBQzlGLFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxtQkFBUSxFQUFDO1FBQ3pCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxtQkFBUSxFQUFDO1FBQzNCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxtQkFBUSxFQUFDO1FBQzFCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3ZCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3pCLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO0tBQ3pCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoiY29sb3ItdHJhbnNmb3JtLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFNpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3NpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBTaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IEZpeGVkOFA4IH0gZnJvbSBcIi4vZml4ZWQtcG9pbnQvZml4ZWQ4cDhcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDb2xvclRyYW5zZm9ybSB7XG4gIHJlZE11bHQ6IEZpeGVkOFA4O1xuICBncmVlbk11bHQ6IEZpeGVkOFA4O1xuICBibHVlTXVsdDogRml4ZWQ4UDg7XG4gIHJlZEFkZDogU2ludDE2O1xuICBncmVlbkFkZDogU2ludDE2O1xuICBibHVlQWRkOiBTaW50MTY7XG59XG5cbmV4cG9ydCBjb25zdCAkQ29sb3JUcmFuc2Zvcm06IERvY3VtZW50SW9UeXBlPENvbG9yVHJhbnNmb3JtPiA9IG5ldyBEb2N1bWVudFR5cGU8Q29sb3JUcmFuc2Zvcm0+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHJlZE11bHQ6IHt0eXBlOiBGaXhlZDhQOH0sXG4gICAgZ3JlZW5NdWx0OiB7dHlwZTogRml4ZWQ4UDh9LFxuICAgIGJsdWVNdWx0OiB7dHlwZTogRml4ZWQ4UDh9LFxuICAgIHJlZEFkZDoge3R5cGU6ICRTaW50MTZ9LFxuICAgIGdyZWVuQWRkOiB7dHlwZTogJFNpbnQxNn0sXG4gICAgYmx1ZUFkZDoge3R5cGU6ICRTaW50MTZ9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9


/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const buffer_1 = __webpack_require__(24);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const _type_1 = __webpack_require__(5);
exports.$DefineCffFont = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineCffFont }) },
        id: { type: uint16_1.$Uint16 },
        fontName: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
        isItalic: { type: boolean_1.$Boolean },
        isBold: { type: boolean_1.$Boolean },
        data: { type: new buffer_1.BufferType({ maxLength: Infinity }), optional: true },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtY2ZmLWZvbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtREFBaUQ7QUFDakQsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1Qyw4Q0FBK0M7QUFDL0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBd0Q7QUFHeEQsbUNBQTRDO0FBVy9CLFFBQUEsY0FBYyxHQUFrQyxJQUFJLHVCQUFZLENBQWdCO0lBQzNGLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZ0JBQVEsRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLGFBQXNDLEVBQUMsQ0FBQyxFQUFDO1FBQ3RHLEVBQUUsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ25CLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUMzRCxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN4QixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxtQkFBVSxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztLQUNwRTtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZGVmaW5lLWNmZi1mb250LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBCdWZmZXJUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYnVmZmVyXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWNzMlN0cmluZ1R5cGUgfSBmcm9tIFwia3J5by90eXBlcy91Y3MyLXN0cmluZ1wiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZUNmZkZvbnQgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5EZWZpbmVDZmZGb250O1xuICBpZDogVWludDE2O1xuICBmb250TmFtZTogc3RyaW5nO1xuICBpc0l0YWxpYzogYm9vbGVhbjtcbiAgaXNCb2xkOiBib29sZWFuO1xuICBkYXRhPzogVWludDhBcnJheTtcbn1cblxuZXhwb3J0IGNvbnN0ICREZWZpbmVDZmZGb250OiBEb2N1bWVudElvVHlwZTxEZWZpbmVDZmZGb250PiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lQ2ZmRm9udD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZUNmZkZvbnQgYXMgVGFnVHlwZS5EZWZpbmVDZmZGb250fSl9LFxuICAgIGlkOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgZm9udE5hbWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgaXNJdGFsaWM6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgaXNCb2xkOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGRhdGE6IHt0eXBlOiBuZXcgQnVmZmVyVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pLCBvcHRpb25hbDogdHJ1ZX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const sint16_1 = __webpack_require__(26);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const rect_1 = __webpack_require__(44);
const straight_s_rgba8_1 = __webpack_require__(14);
const text_alignment_1 = __webpack_require__(101);
const _type_1 = __webpack_require__(5);
exports.$DefineDynamicText = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineDynamicText }) },
        id: { type: new integer_1.IntegerType() },
        bounds: { type: rect_1.$Rect },
        wordWrap: { type: boolean_1.$Boolean },
        multiline: { type: boolean_1.$Boolean },
        password: { type: boolean_1.$Boolean },
        readonly: { type: boolean_1.$Boolean },
        autoSize: { type: boolean_1.$Boolean },
        noSelect: { type: boolean_1.$Boolean },
        border: { type: boolean_1.$Boolean },
        wasStatic: { type: boolean_1.$Boolean },
        html: { type: boolean_1.$Boolean },
        useGlyphFont: { type: boolean_1.$Boolean },
        fontId: { type: uint16_1.$Uint16, optional: true },
        fontClass: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }), optional: true },
        fontSize: { type: new integer_1.IntegerType(), optional: true },
        color: { type: straight_s_rgba8_1.$StraightSRgba8, optional: true },
        maxLength: { type: new integer_1.IntegerType(), optional: true },
        align: { type: text_alignment_1.$TextAlignment, optional: true },
        marginLeft: { type: uint16_1.$Uint16 },
        marginRight: { type: uint16_1.$Uint16 },
        indent: { type: uint16_1.$Uint16 },
        leading: { type: sint16_1.$Sint16 },
        variableName: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }), optional: true },
        text: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }), optional: true },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtZHluYW1pYy10ZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGlEQUErQztBQUMvQyxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsZ0RBQWlEO0FBQ2pELHdEQUF3RDtBQUV4RCxrQ0FBc0M7QUFDdEMsMERBQXNFO0FBQ3RFLDJEQUF1RTtBQUV2RSxtQ0FBNEM7QUE4Qi9CLFFBQUEsa0JBQWtCLEdBQXNDLElBQUksdUJBQVksQ0FBb0I7SUFDdkcsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsaUJBQThDLEVBQUMsQ0FBQyxFQUFDO1FBQzlHLEVBQUUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBQztRQUM3QixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsWUFBSyxFQUFDO1FBQ3JCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzFCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzNCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzFCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzFCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzFCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzFCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3hCLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzNCLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3RCLFlBQVksRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzlCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDdkMsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDNUUsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDbkQsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtDQUFlLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUM5QyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUNwRCxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsK0JBQWMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQzdDLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzNCLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQzVCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3ZCLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3hCLFlBQVksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQy9FLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO0tBQ3hFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9kZWZpbmUtZHluYW1pYy10ZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyAkU2ludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvc2ludDE2XCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IEludGVnZXJUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvaW50ZWdlclwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVY3MyU3RyaW5nVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3VjczItc3RyaW5nXCI7XG5pbXBvcnQgeyBTaW50MTYsIFVpbnQxNiwgVWludFNpemUgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRSZWN0LCBSZWN0IH0gZnJvbSBcIi4uL3JlY3RcIjtcbmltcG9ydCB7ICRTdHJhaWdodFNSZ2JhOCwgU3RyYWlnaHRTUmdiYTggfSBmcm9tIFwiLi4vc3RyYWlnaHQtcy1yZ2JhOFwiO1xuaW1wb3J0IHsgJFRleHRBbGlnbm1lbnQsIFRleHRBbGlnbm1lbnQgfSBmcm9tIFwiLi4vdGV4dC90ZXh0LWFsaWdubWVudFwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVEeW5hbWljVGV4dCBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRlZmluZUR5bmFtaWNUZXh0O1xuICBpZDogVWludDE2O1xuICBib3VuZHM6IFJlY3Q7XG4gIHdvcmRXcmFwOiBib29sZWFuO1xuICBtdWx0aWxpbmU6IGJvb2xlYW47XG4gIHBhc3N3b3JkOiBib29sZWFuO1xuICByZWFkb25seTogYm9vbGVhbjtcbiAgYXV0b1NpemU6IGJvb2xlYW47XG4gIG5vU2VsZWN0OiBib29sZWFuO1xuICBib3JkZXI6IGJvb2xlYW47XG4gIHdhc1N0YXRpYzogYm9vbGVhbjtcbiAgaHRtbDogYm9vbGVhbjtcbiAgdXNlR2x5cGhGb250OiBib29sZWFuO1xuICBmb250SWQ/OiBVaW50MTY7XG4gIGZvbnRDbGFzcz86IHN0cmluZztcbiAgZm9udFNpemU/OiBVaW50MTY7XG4gIGNvbG9yPzogU3RyYWlnaHRTUmdiYTg7XG4gIG1heExlbmd0aD86IFVpbnRTaXplO1xuICBhbGlnbj86IFRleHRBbGlnbm1lbnQ7XG4gIG1hcmdpbkxlZnQ6IFVpbnQxNjtcbiAgbWFyZ2luUmlnaHQ6IFVpbnQxNjtcbiAgaW5kZW50OiBVaW50MTY7XG4gIGxlYWRpbmc6IFNpbnQxNjtcbiAgdmFyaWFibGVOYW1lPzogc3RyaW5nO1xuICB0ZXh0Pzogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgJERlZmluZUR5bmFtaWNUZXh0OiBEb2N1bWVudElvVHlwZTxEZWZpbmVEeW5hbWljVGV4dD4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZUR5bmFtaWNUZXh0Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lRHluYW1pY1RleHQgYXMgVGFnVHlwZS5EZWZpbmVEeW5hbWljVGV4dH0pfSxcbiAgICBpZDoge3R5cGU6IG5ldyBJbnRlZ2VyVHlwZSgpfSxcbiAgICBib3VuZHM6IHt0eXBlOiAkUmVjdH0sXG4gICAgd29yZFdyYXA6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgbXVsdGlsaW5lOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHBhc3N3b3JkOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHJlYWRvbmx5OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGF1dG9TaXplOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIG5vU2VsZWN0OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGJvcmRlcjoge3R5cGU6ICRCb29sZWFufSxcbiAgICB3YXNTdGF0aWM6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgaHRtbDoge3R5cGU6ICRCb29sZWFufSxcbiAgICB1c2VHbHlwaEZvbnQ6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgZm9udElkOiB7dHlwZTogJFVpbnQxNiwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGZvbnRDbGFzczoge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgZm9udFNpemU6IHt0eXBlOiBuZXcgSW50ZWdlclR5cGUoKSwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGNvbG9yOiB7dHlwZTogJFN0cmFpZ2h0U1JnYmE4LCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgbWF4TGVuZ3RoOiB7dHlwZTogbmV3IEludGVnZXJUeXBlKCksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBhbGlnbjoge3R5cGU6ICRUZXh0QWxpZ25tZW50LCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgbWFyZ2luTGVmdDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIG1hcmdpblJpZ2h0OiB7dHlwZTogJFVpbnQxNn0sXG4gICAgaW5kZW50OiB7dHlwZTogJFVpbnQxNn0sXG4gICAgbGVhZGluZzoge3R5cGU6ICRTaW50MTZ9LFxuICAgIHZhcmlhYmxlTmFtZToge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgdGV4dDoge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pLCBvcHRpb25hbDogdHJ1ZX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const glyph_1 = __webpack_require__(102);
const language_code_1 = __webpack_require__(66);
const font_layout_1 = __webpack_require__(309);
const _type_1 = __webpack_require__(5);
exports.$DefineFont = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineFont }) },
        id: { type: uint16_1.$Uint16 },
        fontName: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
        isSmall: { type: boolean_1.$Boolean },
        isShiftJis: { type: boolean_1.$Boolean },
        isAnsi: { type: boolean_1.$Boolean },
        isItalic: { type: boolean_1.$Boolean },
        isBold: { type: boolean_1.$Boolean },
        language: { type: language_code_1.$LanguageCode },
        glyphs: { type: new array_1.ArrayType({ itemType: glyph_1.$Glyph, maxLength: Infinity }), optional: true },
        codeUnits: { type: new array_1.ArrayType({ itemType: uint16_1.$Uint16, maxLength: Infinity }), optional: true },
        layout: { type: font_layout_1.$FontLayout, optional: true },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtZm9udC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELHdEQUF3RDtBQUV4RCxvQ0FBeUM7QUFDekMsb0RBQStEO0FBQy9ELHFEQUE4RDtBQUU5RCxtQ0FBNEM7QUFpQi9CLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsVUFBZ0MsRUFBQyxDQUFDLEVBQUM7UUFDaEcsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDbkIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQzNELE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3pCLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzVCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3hCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzFCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3hCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSw2QkFBYSxFQUFDO1FBQy9CLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsY0FBTSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDdEYsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxnQkFBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDMUYsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLHlCQUFXLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztLQUM1QztJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZGVmaW5lLWZvbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQm9vbGVhbiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2Jvb2xlYW5cIjtcbmltcG9ydCB7ICRVaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEFycmF5VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2FycmF5XCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWNzMlN0cmluZ1R5cGUgfSBmcm9tIFwia3J5by90eXBlcy91Y3MyLXN0cmluZ1wiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkR2x5cGgsIEdseXBoIH0gZnJvbSBcIi4uL2dseXBoXCI7XG5pbXBvcnQgeyAkTGFuZ3VhZ2VDb2RlLCBMYW5ndWFnZUNvZGUgfSBmcm9tIFwiLi4vbGFuZ3VhZ2UtY29kZVwiO1xuaW1wb3J0IHsgJEZvbnRMYXlvdXQsIEZvbnRMYXlvdXQgfSBmcm9tIFwiLi4vdGV4dC9mb250LWxheW91dFwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVGb250IGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuRGVmaW5lRm9udDtcbiAgaWQ6IFVpbnQxNjtcbiAgZm9udE5hbWU6IHN0cmluZztcbiAgaXNTbWFsbDogYm9vbGVhbjtcbiAgaXNTaGlmdEppczogYm9vbGVhbjtcbiAgaXNBbnNpOiBib29sZWFuO1xuICBpc0l0YWxpYzogYm9vbGVhbjtcbiAgaXNCb2xkOiBib29sZWFuO1xuICBsYW5ndWFnZTogTGFuZ3VhZ2VDb2RlO1xuICBnbHlwaHM/OiBHbHlwaFtdO1xuICBjb2RlVW5pdHM/OiBVaW50MTZbXTtcbiAgbGF5b3V0PzogRm9udExheW91dDtcbn1cblxuZXhwb3J0IGNvbnN0ICREZWZpbmVGb250OiBEb2N1bWVudElvVHlwZTxEZWZpbmVGb250PiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lRm9udD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZUZvbnQgYXMgVGFnVHlwZS5EZWZpbmVGb250fSl9LFxuICAgIGlkOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgZm9udE5hbWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgaXNTbWFsbDoge3R5cGU6ICRCb29sZWFufSxcbiAgICBpc1NoaWZ0SmlzOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGlzQW5zaToge3R5cGU6ICRCb29sZWFufSxcbiAgICBpc0l0YWxpYzoge3R5cGU6ICRCb29sZWFufSxcbiAgICBpc0JvbGQ6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgbGFuZ3VhZ2U6IHt0eXBlOiAkTGFuZ3VhZ2VDb2RlfSxcbiAgICBnbHlwaHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJEdseXBoLCBtYXhMZW5ndGg6IEluZmluaXR5fSksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBjb2RlVW5pdHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJFVpbnQxNiwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgbGF5b3V0OiB7dHlwZTogJEZvbnRMYXlvdXQsIG9wdGlvbmFsOiB0cnVlfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const sint16_1 = __webpack_require__(26);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const rect_1 = __webpack_require__(44);
const kerning_record_1 = __webpack_require__(310);
exports.$FontLayout = new document_1.DocumentType({
    properties: {
        ascent: { type: uint16_1.$Uint16 },
        descent: { type: uint16_1.$Uint16 },
        leading: { type: sint16_1.$Sint16 },
        advances: { type: new array_1.ArrayType({ itemType: sint16_1.$Sint16, maxLength: Infinity }) },
        bounds: { type: new array_1.ArrayType({ itemType: rect_1.$Rect, maxLength: Infinity }) },
        kerning: { type: new array_1.ArrayType({ itemType: kerning_record_1.$KerningRecord, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9mb250LWxheW91dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFFbkUsa0NBQXNDO0FBQ3RDLHFEQUFpRTtBQVdwRCxRQUFBLFdBQVcsR0FBK0IsSUFBSSx1QkFBWSxDQUFhO0lBQ2xGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3ZCLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3hCLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3hCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsZ0JBQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUN6RSxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLFlBQUssRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUNyRSxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLCtCQUFjLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDaEY7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXh0L2ZvbnQtbGF5b3V0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFNpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3NpbnQxNlwiO1xuaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgU2ludDE2LCBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRSZWN0LCBSZWN0IH0gZnJvbSBcIi4uL3JlY3RcIjtcbmltcG9ydCB7ICRLZXJuaW5nUmVjb3JkLCBLZXJuaW5nUmVjb3JkIH0gZnJvbSBcIi4va2VybmluZy1yZWNvcmRcIjtcblxuZXhwb3J0IGludGVyZmFjZSBGb250TGF5b3V0IHtcbiAgYXNjZW50OiBVaW50MTY7XG4gIGRlc2NlbnQ6IFVpbnQxNjtcbiAgbGVhZGluZzogU2ludDE2O1xuICBhZHZhbmNlczogU2ludDE2W107XG4gIGJvdW5kczogUmVjdFtdO1xuICBrZXJuaW5nOiBLZXJuaW5nUmVjb3JkW107XG59XG5cbmV4cG9ydCBjb25zdCAkRm9udExheW91dDogRG9jdW1lbnRJb1R5cGU8Rm9udExheW91dD4gPSBuZXcgRG9jdW1lbnRUeXBlPEZvbnRMYXlvdXQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGFzY2VudDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIGRlc2NlbnQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBsZWFkaW5nOiB7dHlwZTogJFNpbnQxNn0sXG4gICAgYWR2YW5jZXM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJFNpbnQxNiwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBib3VuZHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJFJlY3QsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAga2VybmluZzoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkS2VybmluZ1JlY29yZCwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const sint16_1 = __webpack_require__(26);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
exports.$KerningRecord = new document_1.DocumentType({
    properties: {
        left: { type: uint16_1.$Uint16 },
        right: { type: uint16_1.$Uint16 },
        adjustment: { type: sint16_1.$Sint16 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9rZXJuaW5nLXJlY29yZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQVN0RCxRQUFBLGNBQWMsR0FBa0MsSUFBSSx1QkFBWSxDQUFnQjtJQUMzRixVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUNyQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN0QixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztLQUM1QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRleHQva2VybmluZy1yZWNvcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkU2ludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvc2ludDE2XCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IFNpbnQxNiwgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2VybmluZ1JlY29yZCB7XG4gIGxlZnQ6IFVpbnQxNjtcbiAgcmlnaHQ6IFVpbnQxNjtcbiAgYWRqdXN0bWVudDogU2ludDE2O1xufVxuXG5leHBvcnQgY29uc3QgJEtlcm5pbmdSZWNvcmQ6IERvY3VtZW50SW9UeXBlPEtlcm5pbmdSZWNvcmQ+ID0gbmV3IERvY3VtZW50VHlwZTxLZXJuaW5nUmVjb3JkPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBsZWZ0OiB7dHlwZTogJFVpbnQxNn0sXG4gICAgcmlnaHQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBhZGp1c3RtZW50OiB7dHlwZTogJFNpbnQxNn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const csm_table_hint_1 = __webpack_require__(104);
const font_alignment_zone_1 = __webpack_require__(312);
const _type_1 = __webpack_require__(5);
exports.$DefineFontAlignZones = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$TagType,
                value: _type_1.TagType.DefineFontAlignZones,
            }),
        },
        fontId: { type: uint16_1.$Uint16 },
        csmTableHint: { type: csm_table_hint_1.$CsmTableHint },
        zones: { type: new array_1.ArrayType({ itemType: font_alignment_zone_1.$FontAlignmentZone, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtZm9udC1hbGlnbi16b25lcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsMkRBQXFFO0FBQ3JFLHFFQUFvRjtBQUVwRixtQ0FBNEM7QUFTL0IsUUFBQSxxQkFBcUIsR0FBeUMsSUFBSSx1QkFBWSxDQUF1QjtJQUNoSCxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUU7WUFDSixJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDO2dCQUNwQixJQUFJLEVBQUUsZ0JBQVE7Z0JBQ2QsS0FBSyxFQUFFLGVBQU8sQ0FBQyxvQkFBb0Q7YUFDcEUsQ0FBQztTQUNIO1FBQ0QsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDdkIsWUFBWSxFQUFFLEVBQUMsSUFBSSxFQUFFLDhCQUFhLEVBQUM7UUFDbkMsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSx3Q0FBa0IsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUNsRjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZGVmaW5lLWZvbnQtYWxpZ24tem9uZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJENzbVRhYmxlSGludCwgQ3NtVGFibGVIaW50IH0gZnJvbSBcIi4uL3RleHQvY3NtLXRhYmxlLWhpbnRcIjtcbmltcG9ydCB7ICRGb250QWxpZ25tZW50Wm9uZSwgRm9udEFsaWdubWVudFpvbmUgfSBmcm9tIFwiLi4vdGV4dC9mb250LWFsaWdubWVudC16b25lXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZUZvbnRBbGlnblpvbmVzIGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuRGVmaW5lRm9udEFsaWduWm9uZXM7XG4gIGZvbnRJZDogVWludDE2O1xuICBjc21UYWJsZUhpbnQ6IENzbVRhYmxlSGludDtcbiAgem9uZXM6IEZvbnRBbGlnbm1lbnRab25lW107XG59XG5cbmV4cG9ydCBjb25zdCAkRGVmaW5lRm9udEFsaWduWm9uZXM6IERvY3VtZW50SW9UeXBlPERlZmluZUZvbnRBbGlnblpvbmVzPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lRm9udEFsaWduWm9uZXM+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHtcbiAgICAgIHR5cGU6IG5ldyBMaXRlcmFsVHlwZSh7XG4gICAgICAgIHR5cGU6ICRUYWdUeXBlLFxuICAgICAgICB2YWx1ZTogVGFnVHlwZS5EZWZpbmVGb250QWxpZ25ab25lcyBhcyBUYWdUeXBlLkRlZmluZUZvbnRBbGlnblpvbmVzLFxuICAgICAgfSksXG4gICAgfSxcbiAgICBmb250SWQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBjc21UYWJsZUhpbnQ6IHt0eXBlOiAkQ3NtVGFibGVIaW50fSxcbiAgICB6b25lczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkRm9udEFsaWdubWVudFpvbmUsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const font_alignment_zone_data_1 = __webpack_require__(313);
exports.$FontAlignmentZone = new document_1.DocumentType({
    properties: {
        data: { type: new array_1.ArrayType({ itemType: font_alignment_zone_data_1.$FontAlignmentZoneData, maxLength: Infinity }) },
        hasX: { type: boolean_1.$Boolean },
        hasY: { type: boolean_1.$Boolean },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9mb250LWFsaWdubWVudC16b25lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGdEQUE0QztBQUM1Qyw0Q0FBNkM7QUFDN0Msa0RBQW1FO0FBQ25FLHlFQUEyRjtBQVE5RSxRQUFBLGtCQUFrQixHQUFzQyxJQUFJLHVCQUFZLENBQW9CO0lBQ3ZHLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsaURBQXNCLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7UUFDcEYsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDdEIsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7S0FDdkI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXh0L2ZvbnQtYWxpZ25tZW50LXpvbmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQm9vbGVhbiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2Jvb2xlYW5cIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEFycmF5VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2FycmF5XCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7ICRGb250QWxpZ25tZW50Wm9uZURhdGEsIEZvbnRBbGlnbm1lbnRab25lRGF0YSB9IGZyb20gXCIuL2ZvbnQtYWxpZ25tZW50LXpvbmUtZGF0YVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEZvbnRBbGlnbm1lbnRab25lIHtcbiAgZGF0YTogRm9udEFsaWdubWVudFpvbmVEYXRhW107XG4gIGhhc1g6IGJvb2xlYW47XG4gIGhhc1k6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjb25zdCAkRm9udEFsaWdubWVudFpvbmU6IERvY3VtZW50SW9UeXBlPEZvbnRBbGlnbm1lbnRab25lPiA9IG5ldyBEb2N1bWVudFR5cGU8Rm9udEFsaWdubWVudFpvbmU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGRhdGE6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJEZvbnRBbGlnbm1lbnRab25lRGF0YSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBoYXNYOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGhhc1k6IHt0eXBlOiAkQm9vbGVhbn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const float64_1 = __webpack_require__(33);
exports.$FontAlignmentZoneData = new document_1.DocumentType({
    properties: {
        origin: { type: new float64_1.Float64Type() },
        size: { type: new float64_1.Float64Type() },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9mb250LWFsaWdubWVudC16b25lLWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQVFwQyxRQUFBLHNCQUFzQixHQUEwQyxJQUFJLHVCQUFZLENBQXdCO0lBQ25ILFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBQztRQUNqQyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxFQUFFLEVBQUM7S0FDaEM7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXh0L2ZvbnQtYWxpZ25tZW50LXpvbmUtZGF0YS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgRmxvYXQ2NFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9mbG9hdDY0XCI7XG5pbXBvcnQgeyBGbG9hdDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9udEFsaWdubWVudFpvbmVEYXRhIHtcbiAgb3JpZ2luOiBGbG9hdDE2O1xuICBzaXplOiBGbG9hdDE2O1xufVxuXG5leHBvcnQgY29uc3QgJEZvbnRBbGlnbm1lbnRab25lRGF0YTogRG9jdW1lbnRJb1R5cGU8Rm9udEFsaWdubWVudFpvbmVEYXRhPiA9IG5ldyBEb2N1bWVudFR5cGU8Rm9udEFsaWdubWVudFpvbmVEYXRhPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBvcmlnaW46IHt0eXBlOiBuZXcgRmxvYXQ2NFR5cGUoKX0sXG4gICAgc2l6ZToge3R5cGU6IG5ldyBGbG9hdDY0VHlwZSgpfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const language_code_1 = __webpack_require__(66);
const _type_1 = __webpack_require__(5);
exports.$DefineFontInfo = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineFontInfo }) },
        fontId: { type: uint16_1.$Uint16 },
        fontName: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
        isSmall: { type: boolean_1.$Boolean },
        isShiftJis: { type: boolean_1.$Boolean },
        isAnsi: { type: boolean_1.$Boolean },
        isItalic: { type: boolean_1.$Boolean },
        isBold: { type: boolean_1.$Boolean },
        language: { type: language_code_1.$LanguageCode, optional: true },
        codeUnits: { type: new array_1.ArrayType({ itemType: uint16_1.$Uint16, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtZm9udC1pbmZvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWlEO0FBQ2pELGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsd0RBQXdEO0FBRXhELG9EQUErRDtBQUUvRCx5Q0FBa0Q7QUFlckMsUUFBQSxlQUFlLEdBQW1DLElBQUksdUJBQVksQ0FBaUI7SUFDOUYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsY0FBd0MsRUFBQyxDQUFDLEVBQUM7UUFDeEcsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDdkIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQzNELE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3pCLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzVCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3hCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzFCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3hCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSw2QkFBYSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDL0MsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxnQkFBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQzNFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9kZWZpbmUtZm9udC1pbmZvLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7IFVpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJExhbmd1YWdlQ29kZSwgTGFuZ3VhZ2VDb2RlIH0gZnJvbSBcIi4uL2xhbmd1YWdlLWNvZGVcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi4vdGFncy9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuLi90YWdzL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lRm9udEluZm8gZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5EZWZpbmVGb250SW5mbztcbiAgZm9udElkOiBVaW50MTY7XG4gIGZvbnROYW1lOiBzdHJpbmc7XG4gIGlzU21hbGw6IGJvb2xlYW47XG4gIGlzU2hpZnRKaXM6IGJvb2xlYW47XG4gIGlzQW5zaTogYm9vbGVhbjtcbiAgaXNJdGFsaWM6IGJvb2xlYW47XG4gIGlzQm9sZDogYm9vbGVhbjtcbiAgbGFuZ3VhZ2U/OiBMYW5ndWFnZUNvZGU7XG4gIGNvZGVVbml0czogVWludDE2W107XG59XG5cbmV4cG9ydCBjb25zdCAkRGVmaW5lRm9udEluZm86IERvY3VtZW50SW9UeXBlPERlZmluZUZvbnRJbmZvPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lRm9udEluZm8+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5EZWZpbmVGb250SW5mbyBhcyBUYWdUeXBlLkRlZmluZUZvbnRJbmZvfSl9LFxuICAgIGZvbnRJZDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIGZvbnROYW1lOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIGlzU21hbGw6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgaXNTaGlmdEppczoge3R5cGU6ICRCb29sZWFufSxcbiAgICBpc0Fuc2k6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgaXNJdGFsaWM6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgaXNCb2xkOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGxhbmd1YWdlOiB7dHlwZTogJExhbmd1YWdlQ29kZSwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGNvZGVVbml0czoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkVWludDE2LCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const _type_1 = __webpack_require__(5);
exports.$DefineFontName = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineFontName }) },
        fontId: { type: uint16_1.$Uint16 },
        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
        copyright: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtZm9udC1uYW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELHdEQUF3RDtBQUd4RCxtQ0FBNEM7QUFTL0IsUUFBQSxlQUFlLEdBQW1DLElBQUksdUJBQVksQ0FBaUI7SUFDOUYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsY0FBd0MsRUFBQyxDQUFDLEVBQUM7UUFDeEcsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDdkIsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQ3ZELFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUM3RDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZGVmaW5lLWZvbnQtbmFtZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVY3MyU3RyaW5nVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3VjczItc3RyaW5nXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lRm9udE5hbWUgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5EZWZpbmVGb250TmFtZTtcbiAgZm9udElkOiBVaW50MTY7XG4gIG5hbWU6IHN0cmluZztcbiAgY29weXJpZ2h0OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCAkRGVmaW5lRm9udE5hbWU6IERvY3VtZW50SW9UeXBlPERlZmluZUZvbnROYW1lPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lRm9udE5hbWU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5EZWZpbmVGb250TmFtZSBhcyBUYWdUeXBlLkRlZmluZUZvbnROYW1lfSl9LFxuICAgIGZvbnRJZDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIG5hbWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgY29weXJpZ2h0OiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const buffer_1 = __webpack_require__(24);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const _type_1 = __webpack_require__(5);
exports.$DefineJpeg = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineJpeg }) },
        id: { type: uint16_1.$Uint16 },
        image: { type: new buffer_1.BufferType({ maxLength: Infinity }) },
        alpha: { type: new buffer_1.BufferType({ maxLength: Infinity }), optional: true },
        deblocking: { type: uint16_1.$Uint16, optional: true },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtanBlZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsOENBQStDO0FBQy9DLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFHakQsbUNBQTRDO0FBVy9CLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsVUFBZ0MsRUFBQyxDQUFDLEVBQUM7UUFDaEcsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDbkIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksbUJBQVUsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQ3BELEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLG1CQUFVLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQ3BFLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7S0FDNUM7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2RlZmluZS1qcGVnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQnVmZmVyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2J1ZmZlclwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuLy8gVE9ETzogUmVtb3ZlIGluIGZhdm9yIG9mIGBEZWZpbmVCaXRtYXBgXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZUpwZWcgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5EZWZpbmVKcGVnO1xuICBpZDogVWludDE2O1xuICBpbWFnZTogVWludDhBcnJheTtcbiAgYWxwaGE/OiBVaW50OEFycmF5O1xuICBkZWJsb2NraW5nPzogVWludDE2O1xufVxuXG5leHBvcnQgY29uc3QgJERlZmluZUpwZWc6IERvY3VtZW50SW9UeXBlPERlZmluZUpwZWc+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVKcGVnPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lSnBlZyBhcyBUYWdUeXBlLkRlZmluZUpwZWd9KX0sXG4gICAgaWQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBpbWFnZToge3R5cGU6IG5ldyBCdWZmZXJUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIGFscGhhOiB7dHlwZTogbmV3IEJ1ZmZlclR5cGUoe21heExlbmd0aDogSW5maW5pdHl9KSwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGRlYmxvY2tpbmc6IHt0eXBlOiAkVWludDE2LCBvcHRpb25hbDogdHJ1ZX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const morph_shape_1 = __webpack_require__(318);
const rect_1 = __webpack_require__(44);
const _type_1 = __webpack_require__(5);
exports.$DefineMorphShape = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineMorphShape }) },
        id: { type: uint16_1.$Uint16 },
        startBounds: { type: rect_1.$Rect },
        endBounds: { type: rect_1.$Rect },
        startEdgeBounds: { type: rect_1.$Rect, optional: true },
        endEdgeBounds: { type: rect_1.$Rect, optional: true },
        hasNonScalingStrokes: { type: boolean_1.$Boolean },
        hasScalingStrokes: { type: boolean_1.$Boolean },
        shape: { type: morph_shape_1.$MorphShape },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtbW9ycGgtc2hhcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtREFBaUQ7QUFDakQsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBRWpELGdEQUF5RDtBQUN6RCxrQ0FBc0M7QUFFdEMsbUNBQTRDO0FBZS9CLFFBQUEsaUJBQWlCLEdBQXFDLElBQUksdUJBQVksQ0FBbUI7SUFDcEcsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsZ0JBQTRDLEVBQUMsQ0FBQyxFQUFDO1FBQzVHLEVBQUUsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ25CLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxZQUFLLEVBQUM7UUFDMUIsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLFlBQUssRUFBQztRQUN4QixlQUFlLEVBQUUsRUFBQyxJQUFJLEVBQUUsWUFBSyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDOUMsYUFBYSxFQUFFLEVBQUMsSUFBSSxFQUFFLFlBQUssRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQzVDLG9CQUFvQixFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDdEMsaUJBQWlCLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUNuQyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQVcsRUFBQztLQUMzQjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZGVmaW5lLW1vcnBoLXNoYXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkTW9ycGhTaGFwZSwgTW9ycGhTaGFwZSB9IGZyb20gXCIuLi9tb3JwaC1zaGFwZVwiO1xuaW1wb3J0IHsgJFJlY3QsIFJlY3QgfSBmcm9tIFwiLi4vcmVjdFwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVNb3JwaFNoYXBlIGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuRGVmaW5lTW9ycGhTaGFwZTtcbiAgaWQ6IFVpbnQxNjtcbiAgc3RhcnRCb3VuZHM6IFJlY3Q7XG4gIGVuZEJvdW5kczogUmVjdDtcbiAgLy8gVE9ETzogQ29tYmluZSBlZGdlQm91bmRzIHdpdGggc29tZXRoaW5nIGxpa2UgTW9ycGhSZWN0XG4gIHN0YXJ0RWRnZUJvdW5kcz86IFJlY3Q7XG4gIGVuZEVkZ2VCb3VuZHM/OiBSZWN0O1xuICBoYXNOb25TY2FsaW5nU3Ryb2tlczogYm9vbGVhbjtcbiAgaGFzU2NhbGluZ1N0cm9rZXM6IGJvb2xlYW47XG4gIHNoYXBlOiBNb3JwaFNoYXBlO1xufVxuXG5leHBvcnQgY29uc3QgJERlZmluZU1vcnBoU2hhcGU6IERvY3VtZW50SW9UeXBlPERlZmluZU1vcnBoU2hhcGU+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVNb3JwaFNoYXBlPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lTW9ycGhTaGFwZSBhcyBUYWdUeXBlLkRlZmluZU1vcnBoU2hhcGV9KX0sXG4gICAgaWQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBzdGFydEJvdW5kczoge3R5cGU6ICRSZWN0fSxcbiAgICBlbmRCb3VuZHM6IHt0eXBlOiAkUmVjdH0sXG4gICAgc3RhcnRFZGdlQm91bmRzOiB7dHlwZTogJFJlY3QsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBlbmRFZGdlQm91bmRzOiB7dHlwZTogJFJlY3QsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBoYXNOb25TY2FsaW5nU3Ryb2tlczoge3R5cGU6ICRCb29sZWFufSxcbiAgICBoYXNTY2FsaW5nU3Ryb2tlczoge3R5cGU6ICRCb29sZWFufSxcbiAgICBzaGFwZToge3R5cGU6ICRNb3JwaFNoYXBlfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const morph_fill_style_1 = __webpack_require__(62);
const morph_line_style_1 = __webpack_require__(92);
const morph_shape_record_1 = __webpack_require__(319);
exports.$MorphShape = new document_1.DocumentType({
    properties: {
        fillStyles: { type: new array_1.ArrayType({ itemType: morph_fill_style_1.$MorphFillStyle, maxLength: Infinity }) },
        lineStyles: { type: new array_1.ArrayType({ itemType: morph_line_style_1.$MorphLineStyle, maxLength: Infinity }) },
        records: { type: new array_1.ArrayType({ itemType: morph_shape_record_1.$MorphShapeRecord, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtc2hhcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSx5REFBcUU7QUFDckUseURBQXFFO0FBQ3JFLDZEQUEyRTtBQVE5RCxRQUFBLFdBQVcsR0FBK0IsSUFBSSx1QkFBWSxDQUFhO0lBQ2xGLFVBQVUsRUFBRTtRQUNWLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsa0NBQWUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUNuRixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLGtDQUFlLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7UUFDbkYsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxzQ0FBaUIsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUNuRjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6Im1vcnBoLXNoYXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgJE1vcnBoRmlsbFN0eWxlLCBNb3JwaEZpbGxTdHlsZSB9IGZyb20gXCIuL21vcnBoLWZpbGwtc3R5bGVcIjtcbmltcG9ydCB7ICRNb3JwaExpbmVTdHlsZSwgTW9ycGhMaW5lU3R5bGUgfSBmcm9tIFwiLi9tb3JwaC1saW5lLXN0eWxlXCI7XG5pbXBvcnQgeyAkTW9ycGhTaGFwZVJlY29yZCwgTW9ycGhTaGFwZVJlY29yZCB9IGZyb20gXCIuL21vcnBoLXNoYXBlLXJlY29yZFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1vcnBoU2hhcGUge1xuICBmaWxsU3R5bGVzOiBNb3JwaEZpbGxTdHlsZVtdO1xuICBsaW5lU3R5bGVzOiBNb3JwaExpbmVTdHlsZVtdO1xuICByZWNvcmRzOiBNb3JwaFNoYXBlUmVjb3JkW107XG59XG5cbmV4cG9ydCBjb25zdCAkTW9ycGhTaGFwZTogRG9jdW1lbnRJb1R5cGU8TW9ycGhTaGFwZT4gPSBuZXcgRG9jdW1lbnRUeXBlPE1vcnBoU2hhcGU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGZpbGxTdHlsZXM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJE1vcnBoRmlsbFN0eWxlLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIGxpbmVTdHlsZXM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJE1vcnBoTGluZVN0eWxlLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIHJlY29yZHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJE1vcnBoU2hhcGVSZWNvcmQsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=


/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
const tagged_union_1 = __webpack_require__(15);
const morphShapeRecords = __importStar(__webpack_require__(91));
exports.$MorphShapeRecord = new tagged_union_1.TaggedUnionType({
    variants: [
        morphShapeRecords.$MorphCurvedEdge,
        morphShapeRecords.$MorphStraightEdge,
        morphShapeRecords.$MorphStyleChange,
    ],
    tag: "type",
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvbW9ycGgtc2hhcGUtcmVjb3JkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLDBEQUEwRDtBQUMxRCx5RUFBMkQ7QUFPOUMsUUFBQSxpQkFBaUIsR0FBc0MsSUFBSSw4QkFBZSxDQUFtQjtJQUN4RyxRQUFRLEVBQUU7UUFDUixpQkFBaUIsQ0FBQyxnQkFBZ0I7UUFDbEMsaUJBQWlCLENBQUMsa0JBQWtCO1FBQ3BDLGlCQUFpQixDQUFDLGlCQUFpQjtLQUNwQztJQUNELEdBQUcsRUFBRSxNQUFNO0NBQ1osQ0FBQyxDQUFDIiwiZmlsZSI6Im1vcnBoLXNoYXBlLXJlY29yZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhZ2dlZFVuaW9uVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RhZ2dlZC11bmlvblwiO1xuaW1wb3J0ICogYXMgbW9ycGhTaGFwZVJlY29yZHMgZnJvbSBcIi4vbW9ycGgtc2hhcGUtcmVjb3Jkc1wiO1xuXG5leHBvcnQgdHlwZSBNb3JwaFNoYXBlUmVjb3JkID1cbiAgbW9ycGhTaGFwZVJlY29yZHMuTW9ycGhDdXJ2ZWRFZGdlXG4gIHwgbW9ycGhTaGFwZVJlY29yZHMuTW9ycGhTdHJhaWdodEVkZ2VcbiAgfCBtb3JwaFNoYXBlUmVjb3Jkcy5Nb3JwaFN0eWxlQ2hhbmdlO1xuXG5leHBvcnQgY29uc3QgJE1vcnBoU2hhcGVSZWNvcmQ6IFRhZ2dlZFVuaW9uVHlwZTxNb3JwaFNoYXBlUmVjb3JkPiA9IG5ldyBUYWdnZWRVbmlvblR5cGU8TW9ycGhTaGFwZVJlY29yZD4oe1xuICB2YXJpYW50czogW1xuICAgIG1vcnBoU2hhcGVSZWNvcmRzLiRNb3JwaEN1cnZlZEVkZ2UsXG4gICAgbW9ycGhTaGFwZVJlY29yZHMuJE1vcnBoU3RyYWlnaHRFZGdlLFxuICAgIG1vcnBoU2hhcGVSZWNvcmRzLiRNb3JwaFN0eWxlQ2hhbmdlLFxuICBdLFxuICB0YWc6IFwidHlwZVwiLFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const glyph_1 = __webpack_require__(102);
const _type_1 = __webpack_require__(5);
exports.$DefinePartialFont = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefinePartialFont }) },
        id: { type: uint16_1.$Uint16 },
        glyphs: { type: new array_1.ArrayType({ itemType: glyph_1.$Glyph, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtcGFydGlhbC1mb250LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1Qyw0Q0FBNkM7QUFDN0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUVqRCxvQ0FBeUM7QUFFekMsbUNBQTRDO0FBUS9CLFFBQUEsa0JBQWtCLEdBQXNDLElBQUksdUJBQVksQ0FBb0I7SUFDdkcsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsaUJBQThDLEVBQUMsQ0FBQyxFQUFDO1FBQzlHLEVBQUUsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ25CLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsY0FBTSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQ3ZFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9kZWZpbmUtcGFydGlhbC1mb250LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRHbHlwaCwgR2x5cGggfSBmcm9tIFwiLi4vZ2x5cGhcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lUGFydGlhbEZvbnQgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5EZWZpbmVQYXJ0aWFsRm9udDtcbiAgaWQ6IFVpbnQxNjtcbiAgZ2x5cGhzOiBHbHlwaFtdO1xufVxuXG5leHBvcnQgY29uc3QgJERlZmluZVBhcnRpYWxGb250OiBEb2N1bWVudElvVHlwZTxEZWZpbmVQYXJ0aWFsRm9udD4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZVBhcnRpYWxGb250Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lUGFydGlhbEZvbnQgYXMgVGFnVHlwZS5EZWZpbmVQYXJ0aWFsRm9udH0pfSxcbiAgICBpZDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIGdseXBoczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkR2x5cGgsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const buffer_1 = __webpack_require__(24);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const _type_1 = __webpack_require__(5);
exports.$DefinePartialJpeg = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefinePartialJpeg }) },
        id: { type: uint16_1.$Uint16 },
        data: { type: new buffer_1.BufferType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtcGFydGlhbC1qcGVnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1Qyw4Q0FBK0M7QUFDL0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUdqRCxtQ0FBNEM7QUFRL0IsUUFBQSxrQkFBa0IsR0FBc0MsSUFBSSx1QkFBWSxDQUFvQjtJQUN2RyxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxpQkFBOEMsRUFBQyxDQUFDLEVBQUM7UUFDOUcsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDbkIsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksbUJBQVUsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQ3BEO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9kZWZpbmUtcGFydGlhbC1qcGVnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQnVmZmVyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2J1ZmZlclwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVQYXJ0aWFsSnBlZyBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRlZmluZVBhcnRpYWxKcGVnO1xuICBpZDogVWludDE2O1xuICBkYXRhOiBVaW50OEFycmF5O1xufVxuXG5leHBvcnQgY29uc3QgJERlZmluZVBhcnRpYWxKcGVnOiBEb2N1bWVudElvVHlwZTxEZWZpbmVQYXJ0aWFsSnBlZz4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZVBhcnRpYWxKcGVnPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lUGFydGlhbEpwZWcgYXMgVGFnVHlwZS5EZWZpbmVQYXJ0aWFsSnBlZ30pfSxcbiAgICBpZDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIGRhdGE6IHt0eXBlOiBuZXcgQnVmZmVyVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const label_1 = __webpack_require__(323);
const scene_1 = __webpack_require__(324);
const _type_1 = __webpack_require__(5);
// tslint:disable-next-line:max-line-length
exports.$DefineSceneAndFrameLabelData = new document_1.DocumentType({
    properties: {
        type: {
            type: new literal_1.LiteralType({
                type: _type_1.$TagType,
                value: _type_1.TagType.DefineSceneAndFrameLabelData,
            }),
        },
        scenes: { type: new array_1.ArrayType({ itemType: scene_1.$Scene, maxLength: Infinity }) },
        labels: { type: new array_1.ArrayType({ itemType: label_1.$Label, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtc2NlbmUtYW5kLWZyYW1lLWxhYmVsLWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFDakQsNENBQWlEO0FBQ2pELDRDQUFpRDtBQUVqRCxtQ0FBNEM7QUFRNUMsMkNBQTJDO0FBQzlCLFFBQUEsNkJBQTZCLEdBQWlELElBQUksdUJBQVksQ0FBK0I7SUFDeEksVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQztnQkFDcEIsSUFBSSxFQUFFLGdCQUFRO2dCQUNkLEtBQUssRUFBRSxlQUFPLENBQUMsNEJBQW9FO2FBQ3BGLENBQUM7U0FDSDtRQUNELE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsY0FBTSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQ3RFLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsY0FBTSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQ3ZFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9kZWZpbmUtc2NlbmUtYW5kLWZyYW1lLWxhYmVsLWRhdGEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICRMYWJlbCwgTGFiZWwgfSBmcm9tIFwiLi4vY29udHJvbC9sYWJlbFwiO1xuaW1wb3J0IHsgJFNjZW5lLCBTY2VuZSB9IGZyb20gXCIuLi9jb250cm9sL3NjZW5lXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZVNjZW5lQW5kRnJhbWVMYWJlbERhdGEgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5EZWZpbmVTY2VuZUFuZEZyYW1lTGFiZWxEYXRhO1xuICBzY2VuZXM6IFNjZW5lW107XG4gIGxhYmVsczogTGFiZWxbXTtcbn1cblxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1heC1saW5lLWxlbmd0aFxuZXhwb3J0IGNvbnN0ICREZWZpbmVTY2VuZUFuZEZyYW1lTGFiZWxEYXRhOiBEb2N1bWVudElvVHlwZTxEZWZpbmVTY2VuZUFuZEZyYW1lTGFiZWxEYXRhPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lU2NlbmVBbmRGcmFtZUxhYmVsRGF0YT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge1xuICAgICAgdHlwZTogbmV3IExpdGVyYWxUeXBlKHtcbiAgICAgICAgdHlwZTogJFRhZ1R5cGUsXG4gICAgICAgIHZhbHVlOiBUYWdUeXBlLkRlZmluZVNjZW5lQW5kRnJhbWVMYWJlbERhdGEgYXMgVGFnVHlwZS5EZWZpbmVTY2VuZUFuZEZyYW1lTGFiZWxEYXRhLFxuICAgICAgfSksXG4gICAgfSxcbiAgICBzY2VuZXM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJFNjZW5lLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIGxhYmVsczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkTGFiZWwsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const ucs2_string_1 = __webpack_require__(10);
exports.$Label = new document_1.DocumentType({
    properties: {
        frame: { type: new integer_1.IntegerType() },
        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29udHJvbC9sYWJlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELHdEQUF3RDtBQU8zQyxRQUFBLE1BQU0sR0FBMEIsSUFBSSx1QkFBWSxDQUFRO0lBQ25FLFVBQVUsRUFBRTtRQUNWLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBQztRQUNoQyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSw0QkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDeEQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJjb250cm9sL2xhYmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2ludGVnZXJcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcblxuZXhwb3J0IGludGVyZmFjZSBMYWJlbCB7XG4gIGZyYW1lOiBudW1iZXI7XG4gIG5hbWU6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0ICRMYWJlbDogRG9jdW1lbnRJb1R5cGU8TGFiZWw+ID0gbmV3IERvY3VtZW50VHlwZTxMYWJlbD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgZnJhbWU6IHt0eXBlOiBuZXcgSW50ZWdlclR5cGUoKX0sXG4gICAgbmFtZToge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const integer_1 = __webpack_require__(11);
const ucs2_string_1 = __webpack_require__(10);
exports.$Scene = new document_1.DocumentType({
    properties: {
        offset: { type: new integer_1.IntegerType() },
        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29udHJvbC9zY2VuZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELHdEQUF3RDtBQU8zQyxRQUFBLE1BQU0sR0FBMEIsSUFBSSx1QkFBWSxDQUFRO0lBQ25FLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLEVBQUUsRUFBQztRQUNqQyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSw0QkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDeEQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJjb250cm9sL3NjZW5lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBJbnRlZ2VyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2ludGVnZXJcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTY2VuZSB7XG4gIG9mZnNldDogbnVtYmVyO1xuICBuYW1lOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCAkU2NlbmU6IERvY3VtZW50SW9UeXBlPFNjZW5lPiA9IG5ldyBEb2N1bWVudFR5cGU8U2NlbmU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIG9mZnNldDoge3R5cGU6IG5ldyBJbnRlZ2VyVHlwZSgpfSxcbiAgICBuYW1lOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const rect_1 = __webpack_require__(44);
const shape_1 = __webpack_require__(326);
const _type_1 = __webpack_require__(5);
exports.$DefineShape = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineShape }) },
        id: { type: uint16_1.$Uint16 },
        bounds: { type: rect_1.$Rect },
        edgeBounds: { type: rect_1.$Rect, optional: true },
        hasFillWinding: { type: boolean_1.$Boolean },
        hasNonScalingStrokes: { type: boolean_1.$Boolean },
        hasScalingStrokes: { type: boolean_1.$Boolean },
        shape: { type: shape_1.$Shape },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtc2hhcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtREFBaUQ7QUFDakQsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBRWpELGtDQUFzQztBQUN0QyxvQ0FBeUM7QUFFekMsbUNBQTRDO0FBYS9CLFFBQUEsWUFBWSxHQUFnQyxJQUFJLHVCQUFZLENBQWM7SUFDckYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsV0FBa0MsRUFBQyxDQUFDLEVBQUM7UUFDbEcsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDbkIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLFlBQUssRUFBQztRQUNyQixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsWUFBSyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDekMsY0FBYyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDaEMsb0JBQW9CLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN0QyxpQkFBaUIsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ25DLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxjQUFNLEVBQUM7S0FDdEI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2RlZmluZS1zaGFwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJFJlY3QsIFJlY3QgfSBmcm9tIFwiLi4vcmVjdFwiO1xuaW1wb3J0IHsgJFNoYXBlLCBTaGFwZSB9IGZyb20gXCIuLi9zaGFwZVwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVTaGFwZSBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRlZmluZVNoYXBlO1xuICBpZDogVWludDE2O1xuICBib3VuZHM6IFJlY3Q7XG4gIGVkZ2VCb3VuZHM/OiBSZWN0O1xuICBoYXNGaWxsV2luZGluZzogYm9vbGVhbjtcbiAgaGFzTm9uU2NhbGluZ1N0cm9rZXM6IGJvb2xlYW47XG4gIGhhc1NjYWxpbmdTdHJva2VzOiBib29sZWFuO1xuICBzaGFwZTogU2hhcGU7XG59XG5cbmV4cG9ydCBjb25zdCAkRGVmaW5lU2hhcGU6IERvY3VtZW50SW9UeXBlPERlZmluZVNoYXBlPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lU2hhcGU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5EZWZpbmVTaGFwZSBhcyBUYWdUeXBlLkRlZmluZVNoYXBlfSl9LFxuICAgIGlkOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgYm91bmRzOiB7dHlwZTogJFJlY3R9LFxuICAgIGVkZ2VCb3VuZHM6IHt0eXBlOiAkUmVjdCwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGhhc0ZpbGxXaW5kaW5nOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGhhc05vblNjYWxpbmdTdHJva2VzOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGhhc1NjYWxpbmdTdHJva2VzOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHNoYXBlOiB7dHlwZTogJFNoYXBlfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const fill_style_1 = __webpack_require__(63);
const line_style_1 = __webpack_require__(95);
const shape_record_1 = __webpack_require__(103);
exports.$Shape = new document_1.DocumentType({
    properties: {
        fillStyles: { type: new array_1.ArrayType({ itemType: fill_style_1.$FillStyle, maxLength: Infinity }) },
        lineStyles: { type: new array_1.ArrayType({ itemType: line_style_1.$LineStyle, maxLength: Infinity }) },
        records: { type: new array_1.ArrayType({ itemType: shape_record_1.$ShapeRecord, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc2hhcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSw2Q0FBcUQ7QUFDckQsNkNBQXFEO0FBQ3JELGlEQUEyRDtBQVE5QyxRQUFBLE1BQU0sR0FBMEIsSUFBSSx1QkFBWSxDQUFRO0lBQ25FLFVBQVUsRUFBRTtRQUNWLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsdUJBQVUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztRQUM5RSxVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLHVCQUFVLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7UUFDOUUsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSwyQkFBWSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQzlFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoic2hhcGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyAkRmlsbFN0eWxlLCBGaWxsU3R5bGUgfSBmcm9tIFwiLi9maWxsLXN0eWxlXCI7XG5pbXBvcnQgeyAkTGluZVN0eWxlLCBMaW5lU3R5bGUgfSBmcm9tIFwiLi9saW5lLXN0eWxlXCI7XG5pbXBvcnQgeyAkU2hhcGVSZWNvcmQsIFNoYXBlUmVjb3JkIH0gZnJvbSBcIi4vc2hhcGUtcmVjb3JkXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2hhcGUge1xuICBmaWxsU3R5bGVzOiBGaWxsU3R5bGVbXTtcbiAgbGluZVN0eWxlczogTGluZVN0eWxlW107XG4gIHJlY29yZHM6IFNoYXBlUmVjb3JkW107XG59XG5cbmV4cG9ydCBjb25zdCAkU2hhcGU6IERvY3VtZW50SW9UeXBlPFNoYXBlPiA9IG5ldyBEb2N1bWVudFR5cGU8U2hhcGU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGZpbGxTdHlsZXM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJEZpbGxTdHlsZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBsaW5lU3R5bGVzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRMaW5lU3R5bGUsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgcmVjb3Jkczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkU2hhcGVSZWNvcmQsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const sprite_tag_1 = __webpack_require__(328);
const _type_1 = __webpack_require__(5);
exports.$DefineSprite = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineSprite }) },
        id: { type: uint16_1.$Uint16 },
        frameCount: { type: uint16_1.$Uint16 },
        tags: { type: new array_1.ArrayType({ itemType: sprite_tag_1.$SpriteTag, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtc3ByaXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1Qyw0Q0FBNkM7QUFDN0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUdqRCw4Q0FBMkM7QUFFM0MsbUNBQTRDO0FBUy9CLFFBQUEsYUFBYSxHQUFpQyxJQUFJLHVCQUFZLENBQWU7SUFDeEYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsWUFBb0MsRUFBQyxDQUFDLEVBQUM7UUFDcEcsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDbkIsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDM0IsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSx1QkFBVSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQ3pFO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9kZWZpbmUtc3ByaXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IFNwcml0ZVRhZyB9IGZyb20gXCIuLlwiO1xuaW1wb3J0IHsgJFNwcml0ZVRhZyB9IGZyb20gXCIuLi9zcHJpdGUtdGFnXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZVNwcml0ZSBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRlZmluZVNwcml0ZTtcbiAgaWQ6IFVpbnQxNjtcbiAgZnJhbWVDb3VudDogVWludDE2O1xuICB0YWdzOiBTcHJpdGVUYWdbXTtcbn1cblxuZXhwb3J0IGNvbnN0ICREZWZpbmVTcHJpdGU6IERvY3VtZW50SW9UeXBlPERlZmluZVNwcml0ZT4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZVNwcml0ZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZVNwcml0ZSBhcyBUYWdUeXBlLkRlZmluZVNwcml0ZX0pfSxcbiAgICBpZDoge3R5cGU6ICRVaW50MTZ9LFxuICAgIGZyYW1lQ291bnQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICB0YWdzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRTcHJpdGVUYWcsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
const tagged_union_1 = __webpack_require__(15);
const tags = __importStar(__webpack_require__(96));
exports.$SpriteTag = new tagged_union_1.TaggedUnionType(() => ({
    variants: [
        tags.$DoAction,
        tags.$DoInitAction,
        tags.$FrameLabel,
        tags.$PlaceObject,
        tags.$RemoveObject,
        tags.$ShowFrame,
        tags.$SoundStreamBlock,
        tags.$SoundStreamHead,
        tags.$Unknown,
    ],
    tag: "type",
}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc3ByaXRlLXRhZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSwwREFBMEQ7QUFDMUQsbURBQXFDO0FBYXhCLFFBQUEsVUFBVSxHQUErQixJQUFJLDhCQUFlLENBQVksR0FBRyxFQUFFLENBQUMsQ0FBQztJQUMxRixRQUFRLEVBQUU7UUFDUixJQUFJLENBQUMsU0FBUztRQUNkLElBQUksQ0FBQyxhQUFhO1FBQ2xCLElBQUksQ0FBQyxXQUFXO1FBQ2hCLElBQUksQ0FBQyxZQUFZO1FBQ2pCLElBQUksQ0FBQyxhQUFhO1FBQ2xCLElBQUksQ0FBQyxVQUFVO1FBQ2YsSUFBSSxDQUFDLGlCQUFpQjtRQUN0QixJQUFJLENBQUMsZ0JBQWdCO1FBQ3JCLElBQUksQ0FBQyxRQUFRO0tBQ2Q7SUFDRCxHQUFHLEVBQUUsTUFBTTtDQUNaLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6InNwcml0ZS10YWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUYWdnZWRVbmlvblR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90YWdnZWQtdW5pb25cIjtcbmltcG9ydCAqIGFzIHRhZ3MgZnJvbSBcIi4vdGFncy9pbmRleFwiO1xuXG5leHBvcnQgdHlwZSBTcHJpdGVUYWcgPVxuICB0YWdzLkRvQWN0aW9uXG4gIHwgdGFncy5Eb0luaXRBY3Rpb25cbiAgfCB0YWdzLkZyYW1lTGFiZWxcbiAgfCB0YWdzLlBsYWNlT2JqZWN0XG4gIHwgdGFncy5SZW1vdmVPYmplY3RcbiAgfCB0YWdzLlNob3dGcmFtZVxuICB8IHRhZ3MuU291bmRTdHJlYW1IZWFkXG4gIHwgdGFncy5Tb3VuZFN0cmVhbUJsb2NrXG4gIHwgdGFncy5Vbmtub3duO1xuXG5leHBvcnQgY29uc3QgJFNwcml0ZVRhZzogVGFnZ2VkVW5pb25UeXBlPFNwcml0ZVRhZz4gPSBuZXcgVGFnZ2VkVW5pb25UeXBlPFNwcml0ZVRhZz4oKCkgPT4gKHtcbiAgdmFyaWFudHM6IFtcbiAgICB0YWdzLiREb0FjdGlvbixcbiAgICB0YWdzLiREb0luaXRBY3Rpb24sXG4gICAgdGFncy4kRnJhbWVMYWJlbCxcbiAgICB0YWdzLiRQbGFjZU9iamVjdCxcbiAgICB0YWdzLiRSZW1vdmVPYmplY3QsXG4gICAgdGFncy4kU2hvd0ZyYW1lLFxuICAgIHRhZ3MuJFNvdW5kU3RyZWFtQmxvY2ssXG4gICAgdGFncy4kU291bmRTdHJlYW1IZWFkLFxuICAgIHRhZ3MuJFVua25vd24sXG4gIF0sXG4gIHRhZzogXCJ0eXBlXCIsXG59KSk7XG4iXSwic291cmNlUm9vdCI6IiJ9


/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const matrix_1 = __webpack_require__(13);
const rect_1 = __webpack_require__(44);
const text_record_1 = __webpack_require__(330);
const _type_1 = __webpack_require__(5);
exports.$DefineText = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DefineText }) },
        id: { type: uint16_1.$Uint16 },
        bounds: { type: rect_1.$Rect },
        matrix: { type: matrix_1.$Matrix },
        records: { type: new array_1.ArrayType({ itemType: text_record_1.$TextRecord, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kZWZpbmUtdGV4dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxnREFBNEM7QUFDNUMsNENBQTZDO0FBQzdDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsc0NBQTRDO0FBQzVDLGtDQUFzQztBQUN0QyxxREFBOEQ7QUFFOUQsbUNBQTRDO0FBVS9CLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsVUFBZ0MsRUFBQyxDQUFDLEVBQUM7UUFDaEcsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7UUFDbkIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLFlBQUssRUFBQztRQUNyQixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN2QixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLHlCQUFXLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDN0U7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2RlZmluZS10ZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRNYXRyaXgsIE1hdHJpeCB9IGZyb20gXCIuLi9tYXRyaXhcIjtcbmltcG9ydCB7ICRSZWN0LCBSZWN0IH0gZnJvbSBcIi4uL3JlY3RcIjtcbmltcG9ydCB7ICRUZXh0UmVjb3JkLCBUZXh0UmVjb3JkIH0gZnJvbSBcIi4uL3RleHQvdGV4dC1yZWNvcmRcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lVGV4dCBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRlZmluZVRleHQ7XG4gIGlkOiBVaW50MTY7XG4gIGJvdW5kczogUmVjdDtcbiAgbWF0cml4OiBNYXRyaXg7XG4gIHJlY29yZHM6IFRleHRSZWNvcmRbXTtcbn1cblxuZXhwb3J0IGNvbnN0ICREZWZpbmVUZXh0OiBEb2N1bWVudElvVHlwZTxEZWZpbmVUZXh0PiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lVGV4dD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZVRleHQgYXMgVGFnVHlwZS5EZWZpbmVUZXh0fSl9LFxuICAgIGlkOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgYm91bmRzOiB7dHlwZTogJFJlY3R9LFxuICAgIG1hdHJpeDoge3R5cGU6ICRNYXRyaXh9LFxuICAgIHJlY29yZHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJFRleHRSZWNvcmQsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const sint16_1 = __webpack_require__(26);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const straight_s_rgba8_1 = __webpack_require__(14);
const glyph_entry_1 = __webpack_require__(331);
exports.$TextRecord = new document_1.DocumentType({
    properties: {
        fontId: { type: uint16_1.$Uint16, optional: true },
        color: { type: straight_s_rgba8_1.$StraightSRgba8, optional: true },
        offsetX: { type: sint16_1.$Sint16 },
        offsetY: { type: sint16_1.$Sint16 },
        fontSize: { type: uint16_1.$Uint16, optional: true },
        entries: { type: new array_1.ArrayType({ itemType: glyph_entry_1.$GlyphEntry, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC90ZXh0LXJlY29yZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFFbkUsMERBQXNFO0FBQ3RFLCtDQUF3RDtBQVczQyxRQUFBLFdBQVcsR0FBK0IsSUFBSSx1QkFBWSxDQUFhO0lBQ2xGLFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDdkMsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtDQUFlLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUM5QyxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN4QixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN4QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQ3pDLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUseUJBQVcsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUM3RTtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRleHQvdGV4dC1yZWNvcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkU2ludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvc2ludDE2XCI7XG5pbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBTaW50MTYsIFVpbnQxNiB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgJFN0cmFpZ2h0U1JnYmE4LCBTdHJhaWdodFNSZ2JhOCB9IGZyb20gXCIuLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5pbXBvcnQgeyAkR2x5cGhFbnRyeSwgR2x5cGhFbnRyeSB9IGZyb20gXCIuL2dseXBoLWVudHJ5XCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGV4dFJlY29yZCB7XG4gIGZvbnRJZD86IFVpbnQxNjtcbiAgY29sb3I/OiBTdHJhaWdodFNSZ2JhODtcbiAgb2Zmc2V0WDogU2ludDE2O1xuICBvZmZzZXRZOiBTaW50MTY7XG4gIGZvbnRTaXplPzogVWludDE2O1xuICBlbnRyaWVzOiBHbHlwaEVudHJ5W107XG59XG5cbmV4cG9ydCBjb25zdCAkVGV4dFJlY29yZDogRG9jdW1lbnRJb1R5cGU8VGV4dFJlY29yZD4gPSBuZXcgRG9jdW1lbnRUeXBlPFRleHRSZWNvcmQ+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGZvbnRJZDoge3R5cGU6ICRVaW50MTYsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBjb2xvcjoge3R5cGU6ICRTdHJhaWdodFNSZ2JhOCwgb3B0aW9uYWw6IHRydWV9LFxuICAgIG9mZnNldFg6IHt0eXBlOiAkU2ludDE2fSxcbiAgICBvZmZzZXRZOiB7dHlwZTogJFNpbnQxNn0sXG4gICAgZm9udFNpemU6IHt0eXBlOiAkVWludDE2LCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgZW50cmllczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkR2x5cGhFbnRyeSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const sint32_1 = __webpack_require__(47);
const uint32_1 = __webpack_require__(37);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
exports.$GlyphEntry = new document_1.DocumentType({
    properties: {
        index: { type: uint32_1.$Uint32 },
        advance: { type: sint32_1.$Sint32 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9nbHlwaC1lbnRyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQVF0RCxRQUFBLFdBQVcsR0FBK0IsSUFBSSx1QkFBWSxDQUFhO0lBQ2xGLFVBQVUsRUFBRTtRQUNWLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3RCLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO0tBQ3pCO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMiLCJmaWxlIjoidGV4dC9nbHlwaC1lbnRyeS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRTaW50MzIgfSBmcm9tIFwia3J5by9idWlsdGlucy9zaW50MzJcIjtcbmltcG9ydCB7ICRVaW50MzIgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MzJcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgU2ludDMyLCBVaW50MzIgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHbHlwaEVudHJ5IHtcbiAgaW5kZXg6IFVpbnQzMjtcbiAgYWR2YW5jZTogU2ludDMyO1xufVxuXG5leHBvcnQgY29uc3QgJEdseXBoRW50cnk6IERvY3VtZW50SW9UeXBlPEdseXBoRW50cnk+ID0gbmV3IERvY3VtZW50VHlwZTxHbHlwaEVudHJ5Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBpbmRleDoge3R5cGU6ICRVaW50MzJ9LFxuICAgIGFkdmFuY2U6IHt0eXBlOiAkU2ludDMyfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const avm1 = __importStar(__webpack_require__(39));
const _type_1 = __webpack_require__(5);
exports.$DoAction = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DoAction }) },
        actions: { type: new array_1.ArrayType({ itemType: avm1.$Action, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kby1hY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELG9EQUFzQztBQUV0QyxtQ0FBNEM7QUFPL0IsUUFBQSxTQUFTLEdBQTZCLElBQUksdUJBQVksQ0FBVztJQUM1RSxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxRQUE0QixFQUFDLENBQUMsRUFBQztRQUM1RixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDOUU7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2RvLWFjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEFycmF5VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2FycmF5XCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0ICogYXMgYXZtMSBmcm9tIFwiLi4vYXZtMS9pbmRleFwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEb0FjdGlvbiBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRvQWN0aW9uO1xuICBhY3Rpb25zOiBhdm0xLkFjdGlvbltdO1xufVxuXG5leHBvcnQgY29uc3QgJERvQWN0aW9uOiBEb2N1bWVudElvVHlwZTxEb0FjdGlvbj4gPSBuZXcgRG9jdW1lbnRUeXBlPERvQWN0aW9uPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuRG9BY3Rpb24gYXMgVGFnVHlwZS5Eb0FjdGlvbn0pfSxcbiAgICBhY3Rpb25zOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6IGF2bTEuJEFjdGlvbiwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const avm1 = __importStar(__webpack_require__(39));
const _type_1 = __webpack_require__(5);
exports.$DoInitAction = new document_1.DocumentType(() => ({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.DoInitAction }) },
        spriteId: { type: uint16_1.$Uint16 },
        actions: { type: new array_1.ArrayType({ itemType: avm1.$Action, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9kby1pbml0LWFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBRWpELG9EQUFzQztBQUV0QyxtQ0FBNEM7QUFRL0IsUUFBQSxhQUFhLEdBQWlDLElBQUksdUJBQVksQ0FBZSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQy9GLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZ0JBQVEsRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLFlBQW9DLEVBQUMsQ0FBQyxFQUFDO1FBQ3BHLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3pCLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUM5RTtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoidGFncy9kby1pbml0LWFjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50MTYgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MTZcIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEFycmF5VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2FycmF5XCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgKiBhcyBhdm0xIGZyb20gXCIuLi9hdm0xL2luZGV4XCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERvSW5pdEFjdGlvbiBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRvSW5pdEFjdGlvbjtcbiAgc3ByaXRlSWQ6IFVpbnQxNjtcbiAgYWN0aW9uczogYXZtMS5BY3Rpb25bXTtcbn1cblxuZXhwb3J0IGNvbnN0ICREb0luaXRBY3Rpb246IERvY3VtZW50SW9UeXBlPERvSW5pdEFjdGlvbj4gPSBuZXcgRG9jdW1lbnRUeXBlPERvSW5pdEFjdGlvbj4oKCkgPT4gKHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5Eb0luaXRBY3Rpb24gYXMgVGFnVHlwZS5Eb0luaXRBY3Rpb259KX0sXG4gICAgc3ByaXRlSWQ6IHt0eXBlOiAkVWludDE2fSxcbiAgICBhY3Rpb25zOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6IGF2bTEuJEFjdGlvbiwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pKTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const _type_1 = __webpack_require__(5);
exports.$EnableDebugger = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.EnableDebugger }) },
        password: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9lbmFibGUtZGVidWdnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBd0Q7QUFFeEQsbUNBQTRDO0FBTy9CLFFBQUEsZUFBZSxHQUFtQyxJQUFJLHVCQUFZLENBQWlCO0lBQzlGLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZ0JBQVEsRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLGNBQXdDLEVBQUMsQ0FBQyxFQUFDO1FBQ3hHLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLDRCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUM1RDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvZW5hYmxlLWRlYnVnZ2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRW5hYmxlRGVidWdnZXIgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5FbmFibGVEZWJ1Z2dlcjtcbiAgcGFzc3dvcmQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0ICRFbmFibGVEZWJ1Z2dlcjogRG9jdW1lbnRJb1R5cGU8RW5hYmxlRGVidWdnZXI+ID0gbmV3IERvY3VtZW50VHlwZTxFbmFibGVEZWJ1Z2dlcj4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLkVuYWJsZURlYnVnZ2VyIGFzIFRhZ1R5cGUuRW5hYmxlRGVidWdnZXJ9KX0sXG4gICAgcGFzc3dvcmQ6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const named_id_1 = __webpack_require__(105);
const _type_1 = __webpack_require__(5);
exports.$ExportAssets = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.ExportAssets }) },
        assets: { type: new array_1.ArrayType({ itemType: named_id_1.$NamedId, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9leHBvcnQtYXNzZXRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELDBDQUFnRDtBQUVoRCxtQ0FBNEM7QUFPL0IsUUFBQSxhQUFhLEdBQWlDLElBQUksdUJBQVksQ0FBZTtJQUN4RixVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxZQUFvQyxFQUFDLENBQUMsRUFBQztRQUNwRyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLG1CQUFRLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDekU7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2V4cG9ydC1hc3NldHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7ICROYW1lZElkLCBOYW1lZElkIH0gZnJvbSBcIi4uL25hbWVkLWlkXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEV4cG9ydEFzc2V0cyBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkV4cG9ydEFzc2V0cztcbiAgYXNzZXRzOiBOYW1lZElkW107XG59XG5cbmV4cG9ydCBjb25zdCAkRXhwb3J0QXNzZXRzOiBEb2N1bWVudElvVHlwZTxFeHBvcnRBc3NldHM+ID0gbmV3IERvY3VtZW50VHlwZTxFeHBvcnRBc3NldHM+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5FeHBvcnRBc3NldHMgYXMgVGFnVHlwZS5FeHBvcnRBc3NldHN9KX0sXG4gICAgYXNzZXRzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICROYW1lZElkLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const _type_1 = __webpack_require__(5);
exports.$FileAttributes = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.FileAttributes }) },
        useDirectBlit: { type: boolean_1.$Boolean },
        useGpu: { type: boolean_1.$Boolean },
        hasMetadata: { type: boolean_1.$Boolean },
        useAs3: { type: boolean_1.$Boolean },
        noCrossDomainCaching: { type: boolean_1.$Boolean },
        useRelativeUrls: { type: boolean_1.$Boolean },
        useNetwork: { type: boolean_1.$Boolean },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9maWxlLWF0dHJpYnV0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtREFBaUQ7QUFDakQsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsbUNBQTRDO0FBYS9CLFFBQUEsZUFBZSxHQUFtQyxJQUFJLHVCQUFZLENBQWlCO0lBQzlGLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZ0JBQVEsRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLGNBQXdDLEVBQUMsQ0FBQyxFQUFDO1FBQ3hHLGFBQWEsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQy9CLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3hCLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQzdCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFDO1FBQ3hCLG9CQUFvQixFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDdEMsZUFBZSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7UUFDakMsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUM7S0FDN0I7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2ZpbGUtYXR0cmlidXRlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRmlsZUF0dHJpYnV0ZXMgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5GaWxlQXR0cmlidXRlcztcbiAgdXNlRGlyZWN0QmxpdDogYm9vbGVhbjtcbiAgdXNlR3B1OiBib29sZWFuO1xuICBoYXNNZXRhZGF0YTogYm9vbGVhbjtcbiAgdXNlQXMzOiBib29sZWFuO1xuICBub0Nyb3NzRG9tYWluQ2FjaGluZzogYm9vbGVhbjtcbiAgdXNlUmVsYXRpdmVVcmxzOiBib29sZWFuO1xuICB1c2VOZXR3b3JrOiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgJEZpbGVBdHRyaWJ1dGVzOiBEb2N1bWVudElvVHlwZTxGaWxlQXR0cmlidXRlcz4gPSBuZXcgRG9jdW1lbnRUeXBlPEZpbGVBdHRyaWJ1dGVzPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuRmlsZUF0dHJpYnV0ZXMgYXMgVGFnVHlwZS5GaWxlQXR0cmlidXRlc30pfSxcbiAgICB1c2VEaXJlY3RCbGl0OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHVzZUdwdToge3R5cGU6ICRCb29sZWFufSxcbiAgICBoYXNNZXRhZGF0YToge3R5cGU6ICRCb29sZWFufSxcbiAgICB1c2VBczM6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgbm9Dcm9zc0RvbWFpbkNhY2hpbmc6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgdXNlUmVsYXRpdmVVcmxzOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHVzZU5ldHdvcms6IHt0eXBlOiAkQm9vbGVhbn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const _type_1 = __webpack_require__(5);
exports.$FrameLabel = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.FrameLabel }) },
        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
        anchorFlag: { type: boolean_1.$Boolean, optional: true },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9mcmFtZS1sYWJlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxnREFBNEM7QUFDNUMsa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBd0Q7QUFFeEQsbUNBQTRDO0FBUy9CLFFBQUEsV0FBVyxHQUErQixJQUFJLHVCQUFZLENBQWE7SUFDbEYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsVUFBZ0MsRUFBQyxDQUFDLEVBQUM7UUFDaEcsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQ3ZELFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7S0FDN0M7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2ZyYW1lLWxhYmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJEJvb2xlYW4gfSBmcm9tIFwia3J5by9idWlsdGlucy9ib29sZWFuXCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWNzMlN0cmluZ1R5cGUgfSBmcm9tIFwia3J5by90eXBlcy91Y3MyLXN0cmluZ1wiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBGcmFtZUxhYmVsIGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuRnJhbWVMYWJlbDtcbiAgbmFtZTogc3RyaW5nO1xuICAvLyBUT0RPOiBSZW5hbWUgdG8gYGlzQW5jaG9yYCBhbmQgbWFrZSByZXF1aXJlZFxuICBhbmNob3JGbGFnPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNvbnN0ICRGcmFtZUxhYmVsOiBEb2N1bWVudElvVHlwZTxGcmFtZUxhYmVsPiA9IG5ldyBEb2N1bWVudFR5cGU8RnJhbWVMYWJlbD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLkZyYW1lTGFiZWwgYXMgVGFnVHlwZS5GcmFtZUxhYmVsfSl9LFxuICAgIG5hbWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgYW5jaG9yRmxhZzoge3R5cGU6ICRCb29sZWFuLCBvcHRpb25hbDogdHJ1ZX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const named_id_1 = __webpack_require__(105);
const _type_1 = __webpack_require__(5);
exports.$ImportAssets = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.ImportAssets }) },
        url: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
        assets: { type: new array_1.ArrayType({ itemType: named_id_1.$NamedId, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9pbXBvcnQtYXNzZXRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLDRDQUE2QztBQUM3QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELHdEQUF3RDtBQUN4RCwwQ0FBZ0Q7QUFFaEQsbUNBQTRDO0FBUS9CLFFBQUEsYUFBYSxHQUFpQyxJQUFJLHVCQUFZLENBQWU7SUFDeEYsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsWUFBb0MsRUFBQyxDQUFDLEVBQUM7UUFDcEcsR0FBRyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQ3RELE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsbUJBQVEsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUN6RTtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3MvaW1wb3J0LWFzc2V0cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEFycmF5VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2FycmF5XCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWNzMlN0cmluZ1R5cGUgfSBmcm9tIFwia3J5by90eXBlcy91Y3MyLXN0cmluZ1wiO1xuaW1wb3J0IHsgJE5hbWVkSWQsIE5hbWVkSWQgfSBmcm9tIFwiLi4vbmFtZWQtaWRcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW1wb3J0QXNzZXRzIGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuSW1wb3J0QXNzZXRzO1xuICB1cmw6IHN0cmluZztcbiAgYXNzZXRzOiBOYW1lZElkW107XG59XG5cbmV4cG9ydCBjb25zdCAkSW1wb3J0QXNzZXRzOiBEb2N1bWVudElvVHlwZTxJbXBvcnRBc3NldHM+ID0gbmV3IERvY3VtZW50VHlwZTxJbXBvcnRBc3NldHM+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5JbXBvcnRBc3NldHMgYXMgVGFnVHlwZS5JbXBvcnRBc3NldHN9KX0sXG4gICAgdXJsOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIGFzc2V0czoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkTmFtZWRJZCwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const buffer_1 = __webpack_require__(24);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const _type_1 = __webpack_require__(5);
exports.$JpegTables = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.JpegTables }) },
        data: { type: new buffer_1.BufferType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9qcGVnLXRhYmxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1Qyw4Q0FBK0M7QUFDL0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUVqRCxtQ0FBNEM7QUFPL0IsUUFBQSxXQUFXLEdBQStCLElBQUksdUJBQVksQ0FBYTtJQUNsRixVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxVQUFnQyxFQUFDLENBQUMsRUFBQztRQUNoRyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxtQkFBVSxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDcEQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL2pwZWctdGFibGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQnVmZmVyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2J1ZmZlclwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSnBlZ1RhYmxlcyBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkpwZWdUYWJsZXM7XG4gIGRhdGE6IFVpbnQ4QXJyYXk7XG59XG5cbmV4cG9ydCBjb25zdCAkSnBlZ1RhYmxlczogRG9jdW1lbnRJb1R5cGU8SnBlZ1RhYmxlcz4gPSBuZXcgRG9jdW1lbnRUeXBlPEpwZWdUYWJsZXM+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5KcGVnVGFibGVzIGFzIFRhZ1R5cGUuSnBlZ1RhYmxlc30pfSxcbiAgICBkYXRhOiB7dHlwZTogbmV3IEJ1ZmZlclR5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const _type_1 = __webpack_require__(5);
exports.$Metadata = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.Metadata }) },
        metadata: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9tZXRhZGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELHdEQUF3RDtBQUV4RCxtQ0FBNEM7QUFPL0IsUUFBQSxTQUFTLEdBQTZCLElBQUksdUJBQVksQ0FBVztJQUM1RSxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxRQUE0QixFQUFDLENBQUMsRUFBQztRQUM1RixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSw0QkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDNUQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL21ldGFkYXRhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWV0YWRhdGEgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5NZXRhZGF0YTtcbiAgbWV0YWRhdGE6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0ICRNZXRhZGF0YTogRG9jdW1lbnRJb1R5cGU8TWV0YWRhdGE+ID0gbmV3IERvY3VtZW50VHlwZTxNZXRhZGF0YT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLk1ldGFkYXRhIGFzIFRhZ1R5cGUuTWV0YWRhdGF9KX0sXG4gICAgbWV0YWRhdGE6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const ucs2_string_1 = __webpack_require__(10);
const clip_actions_1 = __webpack_require__(342);
const color_transform_with_alpha_1 = __webpack_require__(99);
const filter_1 = __webpack_require__(100);
const matrix_1 = __webpack_require__(13);
const straight_s_rgba8_1 = __webpack_require__(14);
const _type_1 = __webpack_require__(5);
exports.$PlaceObject = new document_1.DocumentType(() => ({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.PlaceObject }) },
        isMove: { type: boolean_1.$Boolean },
        depth: { type: uint16_1.$Uint16 },
        characterId: { type: uint16_1.$Uint16, optional: true },
        matrix: { type: matrix_1.$Matrix, optional: true },
        colorTransform: { type: color_transform_with_alpha_1.$ColorTransformWithAlpha, optional: true },
        ratio: { type: uint16_1.$Uint16, optional: true },
        name: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }), optional: true },
        clipDepth: { type: uint16_1.$Uint16, optional: true },
        filters: { type: new array_1.ArrayType({ itemType: filter_1.$Filter, maxLength: Infinity }), optional: true },
        bitmapCache: { type: boolean_1.$Boolean, optional: true },
        visible: { type: boolean_1.$Boolean, optional: true },
        backgroundColor: { type: straight_s_rgba8_1.$StraightSRgba8, optional: true },
        clipActions: { type: new array_1.ArrayType({ itemType: clip_actions_1.$ClipActions, maxLength: Infinity }), optional: true },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9wbGFjZS1vYmplY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtREFBaUQ7QUFDakQsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1Qyw0Q0FBNkM7QUFDN0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUNqRCx3REFBd0Q7QUFHeEQsa0RBQTREO0FBQzVELDhFQUFrRztBQUNsRyxzQ0FBNEM7QUFDNUMsc0NBQTRDO0FBQzVDLDBEQUFzRTtBQUV0RSxtQ0FBNEM7QUF1Qi9CLFFBQUEsWUFBWSxHQUFnQyxJQUFJLHVCQUFZLENBQWMsR0FBRyxFQUFFLENBQUMsQ0FBQztJQUM1RixVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxXQUFrQyxFQUFDLENBQUMsRUFBQztRQUNsRyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN4QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUN0QixXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQzVDLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDdkMsY0FBYyxFQUFFLEVBQUMsSUFBSSxFQUFFLHFEQUF3QixFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDaEUsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUN0QyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSw0QkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUN2RSxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQzFDLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsZ0JBQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQ3hGLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxrQkFBUSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDN0MsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztRQUN6QyxlQUFlLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0NBQWUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1FBQ3hELFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsMkJBQVksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO0tBQ2xHO0lBQ0QsVUFBVSxFQUFFLHNCQUFTLENBQUMsU0FBUztDQUNoQyxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL3BsYWNlLW9iamVjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRCb29sZWFuIH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvYm9vbGVhblwiO1xuaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBVY3MyU3RyaW5nVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3VjczItc3RyaW5nXCI7XG5pbXBvcnQgeyBVaW50MTYgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IEJsZW5kTW9kZSB9IGZyb20gXCIuLi9ibGVuZC1tb2RlXCI7XG5pbXBvcnQgeyAkQ2xpcEFjdGlvbnMsIENsaXBBY3Rpb25zIH0gZnJvbSBcIi4uL2NsaXAtYWN0aW9uc1wiO1xuaW1wb3J0IHsgJENvbG9yVHJhbnNmb3JtV2l0aEFscGhhLCBDb2xvclRyYW5zZm9ybVdpdGhBbHBoYSB9IGZyb20gXCIuLi9jb2xvci10cmFuc2Zvcm0td2l0aC1hbHBoYVwiO1xuaW1wb3J0IHsgJEZpbHRlciwgRmlsdGVyIH0gZnJvbSBcIi4uL2ZpbHRlclwiO1xuaW1wb3J0IHsgJE1hdHJpeCwgTWF0cml4IH0gZnJvbSBcIi4uL21hdHJpeFwiO1xuaW1wb3J0IHsgJFN0cmFpZ2h0U1JnYmE4LCBTdHJhaWdodFNSZ2JhOCB9IGZyb20gXCIuLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBsYWNlT2JqZWN0IGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuUGxhY2VPYmplY3Q7XG4gIC8vIFRPRE86IFJlbmFtZSB0byBgaXNVcGRhdGVgXG4gIGlzTW92ZTogYm9vbGVhbjtcbiAgZGVwdGg6IFVpbnQxNjtcbiAgY2hhcmFjdGVySWQ/OiBVaW50MTY7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgbWF0cml4PzogTWF0cml4O1xuICBjb2xvclRyYW5zZm9ybT86IENvbG9yVHJhbnNmb3JtV2l0aEFscGhhO1xuICAvLyBUT0RPOiBCZXR0ZXIgdHlwZT8gVGhlIHJhdGlvIGlzIGByYXRpbyAvICgxIDw8IDE2KWBcbiAgcmF0aW8/OiBVaW50MTY7XG4gIG5hbWU/OiBzdHJpbmc7XG4gIGNsaXBEZXB0aD86IFVpbnQxNjtcbiAgZmlsdGVycz86IEZpbHRlcltdO1xuICBibGVuZE1vZGU/OiBCbGVuZE1vZGU7XG4gIGJpdG1hcENhY2hlPzogYm9vbGVhbjtcbiAgdmlzaWJsZT86IGJvb2xlYW47XG4gIGJhY2tncm91bmRDb2xvcj86IFN0cmFpZ2h0U1JnYmE4O1xuICBjbGlwQWN0aW9ucz86IENsaXBBY3Rpb25zW107XG59XG5cbmV4cG9ydCBjb25zdCAkUGxhY2VPYmplY3Q6IERvY3VtZW50SW9UeXBlPFBsYWNlT2JqZWN0PiA9IG5ldyBEb2N1bWVudFR5cGU8UGxhY2VPYmplY3Q+KCgpID0+ICh7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuUGxhY2VPYmplY3QgYXMgVGFnVHlwZS5QbGFjZU9iamVjdH0pfSxcbiAgICBpc01vdmU6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgZGVwdGg6IHt0eXBlOiAkVWludDE2fSxcbiAgICBjaGFyYWN0ZXJJZDoge3R5cGU6ICRVaW50MTYsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBtYXRyaXg6IHt0eXBlOiAkTWF0cml4LCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgY29sb3JUcmFuc2Zvcm06IHt0eXBlOiAkQ29sb3JUcmFuc2Zvcm1XaXRoQWxwaGEsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICByYXRpbzoge3R5cGU6ICRVaW50MTYsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBuYW1lOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBjbGlwRGVwdGg6IHt0eXBlOiAkVWludDE2LCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgZmlsdGVyczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkRmlsdGVyLCBtYXhMZW5ndGg6IEluZmluaXR5fSksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICBiaXRtYXBDYWNoZToge3R5cGU6ICRCb29sZWFuLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgdmlzaWJsZToge3R5cGU6ICRCb29sZWFuLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgYmFja2dyb3VuZENvbG9yOiB7dHlwZTogJFN0cmFpZ2h0U1JnYmE4LCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgY2xpcEFjdGlvbnM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJENsaXBBY3Rpb25zLCBtYXhMZW5ndGg6IEluZmluaXR5fSksIG9wdGlvbmFsOiB0cnVlfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pKTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint8_1 = __webpack_require__(22);
const case_style_1 = __webpack_require__(0);
const array_1 = __webpack_require__(6);
const document_1 = __webpack_require__(1);
const avm1_1 = __webpack_require__(39);
const clip_event_flags_1 = __webpack_require__(343);
exports.$ClipActions = new document_1.DocumentType({
    properties: {
        events: { type: clip_event_flags_1.$ClipEventFlags },
        keyCode: { type: uint8_1.$Uint8, optional: true },
        actions: { type: new array_1.ArrayType({ itemType: avm1_1.$Action, maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY2xpcC1hY3Rpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0NBQTZDO0FBQzdDLGdEQUE0QztBQUM1Qyw0Q0FBNkM7QUFDN0Msa0RBQW1FO0FBRW5FLGlDQUFpQztBQUVqQyx5REFBcUU7QUFReEQsUUFBQSxZQUFZLEdBQWdDLElBQUksdUJBQVksQ0FBYztJQUNyRixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0NBQWUsRUFBQztRQUMvQixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsY0FBTSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDdkMsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxjQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDekU7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJjbGlwLWFjdGlvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkVWludDggfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50OFwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQXJyYXlUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYXJyYXlcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgVWludDggfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7ICRBY3Rpb24gfSBmcm9tIFwiLi9hdm0xXCI7XG5pbXBvcnQgeyBBY3Rpb24gfSBmcm9tIFwiLi9hdm0xL2FjdGlvblwiO1xuaW1wb3J0IHsgJENsaXBFdmVudEZsYWdzLCBDbGlwRXZlbnRGbGFncyB9IGZyb20gXCIuL2NsaXAtZXZlbnQtZmxhZ3NcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDbGlwQWN0aW9ucyB7XG4gIGV2ZW50czogQ2xpcEV2ZW50RmxhZ3M7XG4gIGtleUNvZGU/OiBVaW50ODtcbiAgYWN0aW9uczogQWN0aW9uW107XG59XG5cbmV4cG9ydCBjb25zdCAkQ2xpcEFjdGlvbnM6IERvY3VtZW50SW9UeXBlPENsaXBBY3Rpb25zPiA9IG5ldyBEb2N1bWVudFR5cGU8Q2xpcEFjdGlvbnM+KHtcbiAgcHJvcGVydGllczoge1xuICAgIGV2ZW50czoge3R5cGU6ICRDbGlwRXZlbnRGbGFnc30sXG4gICAga2V5Q29kZToge3R5cGU6ICRVaW50OCwgb3B0aW9uYWw6IHRydWV9LFxuICAgIGFjdGlvbnM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJEFjdGlvbiwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==


/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const boolean_1 = __webpack_require__(8);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
exports.$ClipEventFlags = new document_1.DocumentType({
    properties: {
        keyUp: { type: boolean_1.$Boolean },
        keyDown: { type: boolean_1.$Boolean },
        mouseUp: { type: boolean_1.$Boolean },
        mouseDown: { type: boolean_1.$Boolean },
        mouseMove: { type: boolean_1.$Boolean },
        unload: { type: boolean_1.$Boolean },
        enterFrame: { type: boolean_1.$Boolean },
        load: { type: boolean_1.$Boolean },
        dragOver: { type: boolean_1.$Boolean },
        rollOut: { type: boolean_1.$Boolean },
        rollOver: { type: boolean_1.$Boolean },
        releaseOutside: { type: boolean_1.$Boolean },
        release: { type: boolean_1.$Boolean },
        press: { type: boolean_1.$Boolean },
        initialize: { type: boolean_1.$Boolean },
        data: { type: boolean_1.$Boolean },
        construct: { type: boolean_1.$Boolean },
        keyPress: { type: boolean_1.$Boolean },
        dragOut: { type: boolean_1.$Boolean },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY2xpcC1ldmVudC1mbGFncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxnREFBNEM7QUFDNUMsa0RBQW1FO0FBd0J0RCxRQUFBLGVBQWUsR0FBbUMsSUFBSSx1QkFBWSxDQUFpQjtJQUM5RixVQUFVLEVBQUU7UUFDVixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN2QixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN6QixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN6QixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMzQixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMzQixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN4QixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUM1QixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN0QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN6QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixjQUFjLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUNoQyxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN6QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN2QixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUM1QixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUN0QixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMzQixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztRQUMxQixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsa0JBQVEsRUFBQztLQUMxQjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImNsaXAtZXZlbnQtZmxhZ3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkQm9vbGVhbiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL2Jvb2xlYW5cIjtcbmltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENsaXBFdmVudEZsYWdzIHtcbiAga2V5VXA6IGJvb2xlYW47XG4gIGtleURvd246IGJvb2xlYW47XG4gIG1vdXNlVXA6IGJvb2xlYW47XG4gIG1vdXNlRG93bjogYm9vbGVhbjtcbiAgbW91c2VNb3ZlOiBib29sZWFuO1xuICB1bmxvYWQ6IGJvb2xlYW47XG4gIGVudGVyRnJhbWU6IGJvb2xlYW47XG4gIGxvYWQ6IGJvb2xlYW47XG4gIGRyYWdPdmVyOiBib29sZWFuO1xuICByb2xsT3V0OiBib29sZWFuO1xuICByb2xsT3ZlcjogYm9vbGVhbjtcbiAgcmVsZWFzZU91dHNpZGU6IGJvb2xlYW47XG4gIHJlbGVhc2U6IGJvb2xlYW47XG4gIHByZXNzOiBib29sZWFuO1xuICBpbml0aWFsaXplOiBib29sZWFuO1xuICBkYXRhOiBib29sZWFuO1xuICBjb25zdHJ1Y3Q6IGJvb2xlYW47XG4gIGtleVByZXNzOiBib29sZWFuO1xuICBkcmFnT3V0OiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgJENsaXBFdmVudEZsYWdzOiBEb2N1bWVudElvVHlwZTxDbGlwRXZlbnRGbGFncz4gPSBuZXcgRG9jdW1lbnRUeXBlPENsaXBFdmVudEZsYWdzPih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICBrZXlVcDoge3R5cGU6ICRCb29sZWFufSxcbiAgICBrZXlEb3duOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIG1vdXNlVXA6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgbW91c2VEb3duOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIG1vdXNlTW92ZToge3R5cGU6ICRCb29sZWFufSxcbiAgICB1bmxvYWQ6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgZW50ZXJGcmFtZToge3R5cGU6ICRCb29sZWFufSxcbiAgICBsb2FkOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGRyYWdPdmVyOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIHJvbGxPdXQ6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgcm9sbE92ZXI6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgcmVsZWFzZU91dHNpZGU6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgcmVsZWFzZToge3R5cGU6ICRCb29sZWFufSxcbiAgICBwcmVzczoge3R5cGU6ICRCb29sZWFufSxcbiAgICBpbml0aWFsaXplOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGRhdGE6IHt0eXBlOiAkQm9vbGVhbn0sXG4gICAgY29uc3RydWN0OiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGtleVByZXNzOiB7dHlwZTogJEJvb2xlYW59LFxuICAgIGRyYWdPdXQ6IHt0eXBlOiAkQm9vbGVhbn0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=


/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const _type_1 = __webpack_require__(5);
exports.$RemoveObject = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.RemoveObject }) },
        characterId: { type: uint16_1.$Uint16, optional: true },
        depth: { type: uint16_1.$Uint16 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9yZW1vdmUtb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBR2pELG1DQUE0QztBQVEvQixRQUFBLGFBQWEsR0FBaUMsSUFBSSx1QkFBWSxDQUFlO0lBQ3hGLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZ0JBQVEsRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLFlBQW9DLEVBQUMsQ0FBQyxFQUFDO1FBQ3BHLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7UUFDNUMsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFPLEVBQUM7S0FDdkI7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL3JlbW92ZS1vYmplY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlbW92ZU9iamVjdCBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLlJlbW92ZU9iamVjdDtcbiAgY2hhcmFjdGVySWQ/OiBVaW50MTY7XG4gIGRlcHRoOiBVaW50MTY7XG59XG5cbmV4cG9ydCBjb25zdCAkUmVtb3ZlT2JqZWN0OiBEb2N1bWVudElvVHlwZTxSZW1vdmVPYmplY3Q+ID0gbmV3IERvY3VtZW50VHlwZTxSZW1vdmVPYmplY3Q+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5SZW1vdmVPYmplY3QgYXMgVGFnVHlwZS5SZW1vdmVPYmplY3R9KX0sXG4gICAgY2hhcmFjdGVySWQ6IHt0eXBlOiAkVWludDE2LCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgZGVwdGg6IHt0eXBlOiAkVWludDE2fSxcbiAgfSxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const s_rgb8_1 = __webpack_require__(87);
const _type_1 = __webpack_require__(5);
exports.$SetBackgroundColor = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.SetBackgroundColor }) },
        color: { type: s_rgb8_1.$SRgb8 },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9zZXQtYmFja2dyb3VuZC1jb2xvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxrREFBbUU7QUFDbkUsZ0RBQWlEO0FBQ2pELHNDQUEwQztBQUUxQyxtQ0FBNEM7QUFPL0IsUUFBQSxtQkFBbUIsR0FBdUMsSUFBSSx1QkFBWSxDQUFxQjtJQUMxRyxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxrQkFBZ0QsRUFBQyxDQUFDLEVBQUM7UUFDaEgsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGVBQU0sRUFBQztLQUN0QjtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3Mvc2V0LWJhY2tncm91bmQtY29sb3IuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgJFNSZ2I4LCBTUmdiOCB9IGZyb20gXCIuLi9zLXJnYjhcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2V0QmFja2dyb3VuZENvbG9yIGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuU2V0QmFja2dyb3VuZENvbG9yO1xuICBjb2xvcjogU1JnYjg7XG59XG5cbmV4cG9ydCBjb25zdCAkU2V0QmFja2dyb3VuZENvbG9yOiBEb2N1bWVudElvVHlwZTxTZXRCYWNrZ3JvdW5kQ29sb3I+ID0gbmV3IERvY3VtZW50VHlwZTxTZXRCYWNrZ3JvdW5kQ29sb3I+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5TZXRCYWNrZ3JvdW5kQ29sb3IgYXMgVGFnVHlwZS5TZXRCYWNrZ3JvdW5kQ29sb3J9KX0sXG4gICAgY29sb3I6IHt0eXBlOiAkU1JnYjh9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const _type_1 = __webpack_require__(5);
exports.$ShowFrame = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.ShowFrame }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9zaG93LWZyYW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsbUNBQTRDO0FBTS9CLFFBQUEsVUFBVSxHQUE4QixJQUFJLHVCQUFZLENBQVk7SUFDL0UsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsU0FBOEIsRUFBQyxDQUFDLEVBQUM7S0FDL0Y7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL3Nob3ctZnJhbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgX1RhZyB9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7ICRUYWdUeXBlLCBUYWdUeXBlIH0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTaG93RnJhbWUgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5TaG93RnJhbWU7XG59XG5cbmV4cG9ydCBjb25zdCAkU2hvd0ZyYW1lOiBEb2N1bWVudElvVHlwZTxTaG93RnJhbWU+ID0gbmV3IERvY3VtZW50VHlwZTxTaG93RnJhbWU+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5TaG93RnJhbWUgYXMgVGFnVHlwZS5TaG93RnJhbWV9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const buffer_1 = __webpack_require__(24);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const _type_1 = __webpack_require__(5);
exports.$SoundStreamBlock = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.SoundStreamBlock }) },
        data: { type: new buffer_1.BufferType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9zb3VuZC1zdHJlYW0tYmxvY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsOENBQStDO0FBQy9DLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFHakQsbUNBQTRDO0FBTy9CLFFBQUEsaUJBQWlCLEdBQXFDLElBQUksdUJBQVksQ0FBbUI7SUFDcEcsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsZ0JBQTRDLEVBQUMsQ0FBQyxFQUFDO1FBQzVHLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLG1CQUFVLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztLQUNwRDtJQUNELFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InRhZ3Mvc291bmQtc3RyZWFtLWJsb2NrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgQnVmZmVyVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2J1ZmZlclwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU291bmRTdHJlYW1CbG9jayBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLlNvdW5kU3RyZWFtQmxvY2s7XG4gIGRhdGE6IFVpbnQ4QXJyYXk7XG59XG5cbmV4cG9ydCBjb25zdCAkU291bmRTdHJlYW1CbG9jazogRG9jdW1lbnRJb1R5cGU8U291bmRTdHJlYW1CbG9jaz4gPSBuZXcgRG9jdW1lbnRUeXBlPFNvdW5kU3RyZWFtQmxvY2s+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5Tb3VuZFN0cmVhbUJsb2NrIGFzIFRhZ1R5cGUuU291bmRTdHJlYW1CbG9ja30pfSxcbiAgICBkYXRhOiB7dHlwZTogbmV3IEJ1ZmZlclR5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const sint16_1 = __webpack_require__(26);
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const audio_coding_format_1 = __webpack_require__(349);
const sound_rate_1 = __webpack_require__(350);
const sound_size_1 = __webpack_require__(351);
const sound_type_1 = __webpack_require__(352);
const _type_1 = __webpack_require__(5);
exports.$SoundStreamHead = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.SoundStreamHead }) },
        playbackSoundRate: { type: sound_rate_1.$SoundRate },
        playbackSoundSize: { type: sound_size_1.$SoundSize },
        playbackSoundType: { type: sound_type_1.$SoundType },
        streamSoundCompression: { type: audio_coding_format_1.$AudioCodingFormat },
        streamSoundRate: { type: sound_rate_1.$SoundRate },
        streamSoundSize: { type: new literal_1.LiteralType({ type: sound_size_1.$SoundSize, value: 16 }) },
        streamSoundType: { type: sound_type_1.$SoundType },
        streamSoundSampleCount: { type: uint16_1.$Uint16 },
        latencySeek: { type: sint16_1.$Sint16, optional: true },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy9zb3VuZC1zdHJlYW0taGVhZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxpREFBK0M7QUFDL0MsZ0RBQTRDO0FBQzVDLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsc0VBQXFGO0FBQ3JGLG9EQUE0RDtBQUM1RCxvREFBNEQ7QUFDNUQsb0RBQTREO0FBRTVELG1DQUE0QztBQWUvQixRQUFBLGdCQUFnQixHQUFvQyxJQUFJLHVCQUFZLENBQWtCO0lBQ2pHLFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZ0JBQVEsRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLGVBQTBDLEVBQUMsQ0FBQyxFQUFDO1FBQzFHLGlCQUFpQixFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLEVBQUM7UUFDckMsaUJBQWlCLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUNyQyxpQkFBaUIsRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFDO1FBQ3JDLHNCQUFzQixFQUFFLEVBQUMsSUFBSSxFQUFFLHdDQUFrQixFQUFDO1FBQ2xELGVBQWUsRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxFQUFDO1FBQ25DLGVBQWUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBRSxLQUFLLEVBQUUsRUFBUSxFQUFDLENBQUMsRUFBQztRQUM3RSxlQUFlLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsRUFBQztRQUNuQyxzQkFBc0IsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFDO1FBQ3ZDLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7S0FDN0M7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL3NvdW5kLXN0cmVhbS1oZWFkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFNpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3NpbnQxNlwiO1xuaW1wb3J0IHsgJFVpbnQxNiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQxNlwiO1xuaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRJb1R5cGUsIERvY3VtZW50VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2RvY3VtZW50XCI7XG5pbXBvcnQgeyBMaXRlcmFsVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL2xpdGVyYWxcIjtcbmltcG9ydCB7IFNpbnQxNiwgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyAkQXVkaW9Db2RpbmdGb3JtYXQsIEF1ZGlvQ29kaW5nRm9ybWF0IH0gZnJvbSBcIi4uL3NvdW5kL2F1ZGlvLWNvZGluZy1mb3JtYXRcIjtcbmltcG9ydCB7ICRTb3VuZFJhdGUsIFNvdW5kUmF0ZSB9IGZyb20gXCIuLi9zb3VuZC9zb3VuZC1yYXRlXCI7XG5pbXBvcnQgeyAkU291bmRTaXplLCBTb3VuZFNpemUgfSBmcm9tIFwiLi4vc291bmQvc291bmQtc2l6ZVwiO1xuaW1wb3J0IHsgJFNvdW5kVHlwZSwgU291bmRUeXBlIH0gZnJvbSBcIi4uL3NvdW5kL3NvdW5kLXR5cGVcIjtcbmltcG9ydCB7IF9UYWcgfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQgeyAkVGFnVHlwZSwgVGFnVHlwZSB9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU291bmRTdHJlYW1IZWFkIGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuU291bmRTdHJlYW1IZWFkO1xuICBwbGF5YmFja1NvdW5kUmF0ZTogU291bmRSYXRlO1xuICBwbGF5YmFja1NvdW5kU2l6ZTogU291bmRTaXplO1xuICBwbGF5YmFja1NvdW5kVHlwZTogU291bmRUeXBlO1xuICBzdHJlYW1Tb3VuZENvbXByZXNzaW9uOiBBdWRpb0NvZGluZ0Zvcm1hdDtcbiAgc3RyZWFtU291bmRSYXRlOiBTb3VuZFJhdGU7XG4gIHN0cmVhbVNvdW5kU2l6ZTogU291bmRTaXplO1xuICBzdHJlYW1Tb3VuZFR5cGU6IFNvdW5kVHlwZTtcbiAgc3RyZWFtU291bmRTYW1wbGVDb3VudDogVWludDE2O1xuICBsYXRlbmN5U2Vlaz86IFNpbnQxNjtcbn1cblxuZXhwb3J0IGNvbnN0ICRTb3VuZFN0cmVhbUhlYWQ6IERvY3VtZW50SW9UeXBlPFNvdW5kU3RyZWFtSGVhZD4gPSBuZXcgRG9jdW1lbnRUeXBlPFNvdW5kU3RyZWFtSGVhZD4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogJFRhZ1R5cGUsIHZhbHVlOiBUYWdUeXBlLlNvdW5kU3RyZWFtSGVhZCBhcyBUYWdUeXBlLlNvdW5kU3RyZWFtSGVhZH0pfSxcbiAgICBwbGF5YmFja1NvdW5kUmF0ZToge3R5cGU6ICRTb3VuZFJhdGV9LFxuICAgIHBsYXliYWNrU291bmRTaXplOiB7dHlwZTogJFNvdW5kU2l6ZX0sXG4gICAgcGxheWJhY2tTb3VuZFR5cGU6IHt0eXBlOiAkU291bmRUeXBlfSxcbiAgICBzdHJlYW1Tb3VuZENvbXByZXNzaW9uOiB7dHlwZTogJEF1ZGlvQ29kaW5nRm9ybWF0fSxcbiAgICBzdHJlYW1Tb3VuZFJhdGU6IHt0eXBlOiAkU291bmRSYXRlfSxcbiAgICBzdHJlYW1Tb3VuZFNpemU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRTb3VuZFNpemUsIHZhbHVlOiAxNiBhcyAxNn0pfSxcbiAgICBzdHJlYW1Tb3VuZFR5cGU6IHt0eXBlOiAkU291bmRUeXBlfSxcbiAgICBzdHJlYW1Tb3VuZFNhbXBsZUNvdW50OiB7dHlwZTogJFVpbnQxNn0sXG4gICAgbGF0ZW5jeVNlZWs6IHt0eXBlOiAkU2ludDE2LCBvcHRpb25hbDogdHJ1ZX0sXG4gIH0sXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var AudioCodingFormat;
(function (AudioCodingFormat) {
    AudioCodingFormat[AudioCodingFormat["UncompressedNativeEndian"] = 0] = "UncompressedNativeEndian";
    AudioCodingFormat[AudioCodingFormat["Adpcm"] = 1] = "Adpcm";
    AudioCodingFormat[AudioCodingFormat["Mp3"] = 2] = "Mp3";
    AudioCodingFormat[AudioCodingFormat["UncompressedLittleEndian"] = 3] = "UncompressedLittleEndian";
    AudioCodingFormat[AudioCodingFormat["Nellymoser16"] = 4] = "Nellymoser16";
    AudioCodingFormat[AudioCodingFormat["Nellymoser8"] = 5] = "Nellymoser8";
    AudioCodingFormat[AudioCodingFormat["Nellymoser"] = 6] = "Nellymoser";
    AudioCodingFormat[AudioCodingFormat["Speex"] = 7] = "Speex";
})(AudioCodingFormat = exports.AudioCodingFormat || (exports.AudioCodingFormat = {}));
exports.$AudioCodingFormat = new ts_enum_1.TsEnumType({
    enum: AudioCodingFormat,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc291bmQvYXVkaW8tY29kaW5nLWZvcm1hdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxpQkFTWDtBQVRELFdBQVksaUJBQWlCO0lBQzNCLGlHQUF3QixDQUFBO0lBQ3hCLDJEQUFLLENBQUE7SUFDTCx1REFBRyxDQUFBO0lBQ0gsaUdBQXdCLENBQUE7SUFDeEIseUVBQVksQ0FBQTtJQUNaLHVFQUFXLENBQUE7SUFDWCxxRUFBVSxDQUFBO0lBQ1YsMkRBQUssQ0FBQTtBQUNQLENBQUMsRUFUVyxpQkFBaUIsR0FBakIseUJBQWlCLEtBQWpCLHlCQUFpQixRQVM1QjtBQUVZLFFBQUEsa0JBQWtCLEdBQWtDLElBQUksb0JBQVUsQ0FBb0I7SUFDakcsSUFBSSxFQUFFLGlCQUFpQjtJQUN2QixVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJzb3VuZC9hdWRpby1jb2RpbmctZm9ybWF0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FzZVN0eWxlIH0gZnJvbSBcImtyeW8vY2FzZS1zdHlsZVwiO1xuaW1wb3J0IHsgVHNFbnVtVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3RzLWVudW1cIjtcblxuZXhwb3J0IGVudW0gQXVkaW9Db2RpbmdGb3JtYXQge1xuICBVbmNvbXByZXNzZWROYXRpdmVFbmRpYW4sXG4gIEFkcGNtLFxuICBNcDMsXG4gIFVuY29tcHJlc3NlZExpdHRsZUVuZGlhbixcbiAgTmVsbHltb3NlcjE2LFxuICBOZWxseW1vc2VyOCxcbiAgTmVsbHltb3NlcixcbiAgU3BlZXgsXG59XG5cbmV4cG9ydCBjb25zdCAkQXVkaW9Db2RpbmdGb3JtYXQ6IFRzRW51bVR5cGU8QXVkaW9Db2RpbmdGb3JtYXQ+ID0gbmV3IFRzRW51bVR5cGU8QXVkaW9Db2RpbmdGb3JtYXQ+KHtcbiAgZW51bTogQXVkaW9Db2RpbmdGb3JtYXQsXG4gIGNoYW5nZUNhc2U6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint32_1 = __webpack_require__(37);
const white_list_1 = __webpack_require__(64);
exports.$SoundRate = new white_list_1.WhiteListType({
    itemType: uint32_1.$Uint32,
    values: [5500, 11000, 22000, 44000],
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc291bmQvc291bmQtcmF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxzREFBc0Q7QUFJekMsUUFBQSxVQUFVLEdBQTZCLElBQUksMEJBQWEsQ0FBWTtJQUMvRSxRQUFRLEVBQUUsZ0JBQU87SUFDakIsTUFBTSxFQUFFLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDO0NBQ3BDLENBQUMsQ0FBQyIsImZpbGUiOiJzb3VuZC9zb3VuZC1yYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgJFVpbnQzMiB9IGZyb20gXCJrcnlvL2J1aWx0aW5zL3VpbnQzMlwiO1xuaW1wb3J0IHsgV2hpdGVMaXN0VHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzL3doaXRlLWxpc3RcIjtcblxuZXhwb3J0IHR5cGUgU291bmRSYXRlID0gNTUwMCB8IDExMDAwIHwgMjIwMDAgfCA0NDAwMDtcblxuZXhwb3J0IGNvbnN0ICRTb3VuZFJhdGU6IFdoaXRlTGlzdFR5cGU8U291bmRSYXRlPiA9IG5ldyBXaGl0ZUxpc3RUeXBlPFNvdW5kUmF0ZT4oe1xuICBpdGVtVHlwZTogJFVpbnQzMixcbiAgdmFsdWVzOiBbNTUwMCwgMTEwMDAsIDIyMDAwLCA0NDAwMF0sXG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint32_1 = __webpack_require__(37);
const white_list_1 = __webpack_require__(64);
exports.$SoundSize = new white_list_1.WhiteListType({
    itemType: uint32_1.$Uint32,
    values: [8, 16],
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc291bmQvc291bmQtc2l6ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUErQztBQUMvQyxzREFBc0Q7QUFJekMsUUFBQSxVQUFVLEdBQTZCLElBQUksMEJBQWEsQ0FBWTtJQUMvRSxRQUFRLEVBQUUsZ0JBQU87SUFDakIsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQztDQUNoQixDQUFDLENBQUMiLCJmaWxlIjoic291bmQvc291bmQtc2l6ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ICRVaW50MzIgfSBmcm9tIFwia3J5by9idWlsdGlucy91aW50MzJcIjtcbmltcG9ydCB7IFdoaXRlTGlzdFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy93aGl0ZS1saXN0XCI7XG5cbmV4cG9ydCB0eXBlIFNvdW5kU2l6ZSA9IDggfCAxNjtcblxuZXhwb3J0IGNvbnN0ICRTb3VuZFNpemU6IFdoaXRlTGlzdFR5cGU8U291bmRTaXplPiA9IG5ldyBXaGl0ZUxpc3RUeXBlPFNvdW5kU2l6ZT4oe1xuICBpdGVtVHlwZTogJFVpbnQzMixcbiAgdmFsdWVzOiBbOCwgMTZdLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var SoundType;
(function (SoundType) {
    SoundType[SoundType["Mono"] = 0] = "Mono";
    SoundType[SoundType["Stereo"] = 1] = "Stereo";
})(SoundType = exports.SoundType || (exports.SoundType = {}));
exports.$SoundType = new ts_enum_1.TsEnumType({
    enum: SoundType,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvc291bmQvc291bmQtdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdEQUE0QztBQUM1QyxnREFBZ0Q7QUFFaEQsSUFBWSxTQUdYO0FBSEQsV0FBWSxTQUFTO0lBQ25CLHlDQUFJLENBQUE7SUFDSiw2Q0FBTSxDQUFBO0FBQ1IsQ0FBQyxFQUhXLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBR3BCO0FBRVksUUFBQSxVQUFVLEdBQTBCLElBQUksb0JBQVUsQ0FBWTtJQUN6RSxJQUFJLEVBQUUsU0FBUztJQUNmLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6InNvdW5kL3NvdW5kLXR5cGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBUc0VudW1UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdHMtZW51bVwiO1xuXG5leHBvcnQgZW51bSBTb3VuZFR5cGUge1xuICBNb25vLFxuICBTdGVyZW8sXG59XG5cbmV4cG9ydCBjb25zdCAkU291bmRUeXBlOiBUc0VudW1UeXBlPFNvdW5kVHlwZT4gPSBuZXcgVHNFbnVtVHlwZTxTb3VuZFR5cGU+KHtcbiAgZW51bTogU291bmRUeXBlLFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const buffer_1 = __webpack_require__(24);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const _type_1 = __webpack_require__(5);
exports.$Telemetry = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.Telemetry }) },
        password: { type: new buffer_1.BufferType({ maxLength: Infinity }), optional: true },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy90ZWxlbWV0cnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBNEM7QUFDNUMsOENBQStDO0FBQy9DLGtEQUFtRTtBQUNuRSxnREFBaUQ7QUFFakQsbUNBQTRDO0FBTy9CLFFBQUEsVUFBVSxHQUE4QixJQUFJLHVCQUFZLENBQVk7SUFDL0UsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxnQkFBUSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsU0FBOEIsRUFBQyxDQUFDLEVBQUM7UUFDOUYsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksbUJBQVUsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7S0FDeEU7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL3RlbGVtZXRyeS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IEJ1ZmZlclR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9idWZmZXJcIjtcbmltcG9ydCB7IERvY3VtZW50SW9UeXBlLCBEb2N1bWVudFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0IHsgTGl0ZXJhbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRlbGVtZXRyeSBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLlRlbGVtZXRyeTtcbiAgcGFzc3dvcmQ/OiBVaW50OEFycmF5O1xufVxuXG5leHBvcnQgY29uc3QgJFRlbGVtZXRyeTogRG9jdW1lbnRJb1R5cGU8VGVsZW1ldHJ5PiA9IG5ldyBEb2N1bWVudFR5cGU8VGVsZW1ldHJ5Pih7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiAkVGFnVHlwZSwgdmFsdWU6IFRhZ1R5cGUuVGVsZW1ldHJ5IGFzIFRhZ1R5cGUuVGVsZW1ldHJ5fSl9LFxuICAgIHBhc3N3b3JkOiB7dHlwZTogbmV3IEJ1ZmZlclR5cGUoe21heExlbmd0aDogSW5maW5pdHl9KSwgb3B0aW9uYWw6IHRydWV9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uint16_1 = __webpack_require__(7);
const case_style_1 = __webpack_require__(0);
const buffer_1 = __webpack_require__(24);
const document_1 = __webpack_require__(1);
const literal_1 = __webpack_require__(2);
const _type_1 = __webpack_require__(5);
exports.$Unknown = new document_1.DocumentType({
    properties: {
        type: { type: new literal_1.LiteralType({ type: _type_1.$TagType, value: _type_1.TagType.Unknown }) },
        code: { type: uint16_1.$Uint16 },
        data: { type: new buffer_1.BufferType({ maxLength: Infinity }) },
    },
    changeCase: case_style_1.CaseStyle.SnakeCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGFncy91bmtub3duLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQStDO0FBQy9DLGdEQUE0QztBQUM1Qyw4Q0FBK0M7QUFDL0Msa0RBQW1FO0FBQ25FLGdEQUFpRDtBQUdqRCxtQ0FBNEM7QUFRL0IsUUFBQSxRQUFRLEdBQTRCLElBQUksdUJBQVksQ0FBVTtJQUN6RSxVQUFVLEVBQUU7UUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFRLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxPQUEwQixFQUFDLENBQUMsRUFBQztRQUMxRixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQU8sRUFBQztRQUNyQixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxtQkFBVSxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7S0FDcEQ7SUFDRCxVQUFVLEVBQUUsc0JBQVMsQ0FBQyxTQUFTO0NBQ2hDLENBQUMsQ0FBQyIsImZpbGUiOiJ0YWdzL3Vua25vd24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAkVWludDE2IH0gZnJvbSBcImtyeW8vYnVpbHRpbnMvdWludDE2XCI7XG5pbXBvcnQgeyBDYXNlU3R5bGUgfSBmcm9tIFwia3J5by9jYXNlLXN0eWxlXCI7XG5pbXBvcnQgeyBCdWZmZXJUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvYnVmZmVyXCI7XG5pbXBvcnQgeyBEb2N1bWVudElvVHlwZSwgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IExpdGVyYWxUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvbGl0ZXJhbFwiO1xuaW1wb3J0IHsgVWludDE2IH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyBfVGFnIH0gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHsgJFRhZ1R5cGUsIFRhZ1R5cGUgfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFVua25vd24gZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5Vbmtub3duO1xuICBjb2RlOiBVaW50MTY7XG4gIGRhdGE6IFVpbnQ4QXJyYXk7XG59XG5cbmV4cG9ydCBjb25zdCAkVW5rbm93bjogRG9jdW1lbnRJb1R5cGU8VW5rbm93bj4gPSBuZXcgRG9jdW1lbnRUeXBlPFVua25vd24+KHtcbiAgcHJvcGVydGllczoge1xuICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6ICRUYWdUeXBlLCB2YWx1ZTogVGFnVHlwZS5Vbmtub3duIGFzIFRhZ1R5cGUuVW5rbm93bn0pfSxcbiAgICBjb2RlOiB7dHlwZTogJFVpbnQxNn0sXG4gICAgZGF0YToge3R5cGU6IG5ldyBCdWZmZXJUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICB9LFxuICBjaGFuZ2VDYXNlOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var csm_table_hint_1 = __webpack_require__(104);
exports.CsmTableHint = csm_table_hint_1.CsmTableHint;
var grid_fitting_1 = __webpack_require__(97);
exports.GridFitting = grid_fitting_1.GridFitting;
var text_alignment_1 = __webpack_require__(101);
exports.TextAlignment = text_alignment_1.TextAlignment;
var text_renderer_1 = __webpack_require__(98);
exports.TextRenderer = text_renderer_1.TextRenderer;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdGV4dC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUE4QztBQUF0Qyx3Q0FBQSxZQUFZLENBQUE7QUFLcEIsK0NBQTJDO0FBQW5DLHFDQUFBLFdBQVcsQ0FBQTtBQUVuQixtREFBK0M7QUFBdkMseUNBQUEsYUFBYSxDQUFBO0FBRXJCLGlEQUE2QztBQUFyQyx1Q0FBQSxZQUFZLENBQUEiLCJmaWxlIjoidGV4dC9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7Q3NtVGFibGVIaW50fSBmcm9tIFwiLi9jc20tdGFibGUtaGludFwiO1xuZXhwb3J0IHtGb250QWxpZ25tZW50Wm9uZX0gZnJvbSBcIi4vZm9udC1hbGlnbm1lbnQtem9uZVwiO1xuZXhwb3J0IHtGb250QWxpZ25tZW50Wm9uZURhdGF9IGZyb20gXCIuL2ZvbnQtYWxpZ25tZW50LXpvbmUtZGF0YVwiO1xuZXhwb3J0IHtGb250TGF5b3V0fSBmcm9tIFwiLi9mb250LWxheW91dFwiO1xuZXhwb3J0IHtHbHlwaEVudHJ5fSBmcm9tIFwiLi9nbHlwaC1lbnRyeVwiO1xuZXhwb3J0IHtHcmlkRml0dGluZ30gZnJvbSBcIi4vZ3JpZC1maXR0aW5nXCI7XG5leHBvcnQge0tlcm5pbmdSZWNvcmR9IGZyb20gXCIuL2tlcm5pbmctcmVjb3JkXCI7XG5leHBvcnQge1RleHRBbGlnbm1lbnR9IGZyb20gXCIuL3RleHQtYWxpZ25tZW50XCI7XG5leHBvcnQge1RleHRSZWNvcmR9IGZyb20gXCIuL3RleHQtcmVjb3JkXCI7XG5leHBvcnQge1RleHRSZW5kZXJlcn0gZnJvbSBcIi4vdGV4dC1yZW5kZXJlclwiO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const case_style_1 = __webpack_require__(0);
const ts_enum_1 = __webpack_require__(9);
var CompressionMethod;
(function (CompressionMethod) {
    CompressionMethod[CompressionMethod["None"] = 0] = "None";
    CompressionMethod[CompressionMethod["Deflate"] = 1] = "Deflate";
    CompressionMethod[CompressionMethod["Lzma"] = 2] = "Lzma";
})(CompressionMethod = exports.CompressionMethod || (exports.CompressionMethod = {}));
exports.$CompressionMethod = new ts_enum_1.TsEnumType({
    enum: CompressionMethod,
    changeCase: case_style_1.CaseStyle.KebabCase,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29tcHJlc3Npb24tbWV0aG9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQTRDO0FBQzVDLGdEQUFnRDtBQUVoRCxJQUFZLGlCQUlYO0FBSkQsV0FBWSxpQkFBaUI7SUFDM0IseURBQUksQ0FBQTtJQUNKLCtEQUFPLENBQUE7SUFDUCx5REFBSSxDQUFBO0FBQ04sQ0FBQyxFQUpXLGlCQUFpQixHQUFqQix5QkFBaUIsS0FBakIseUJBQWlCLFFBSTVCO0FBRVksUUFBQSxrQkFBa0IsR0FBa0MsSUFBSSxvQkFBVSxDQUFvQjtJQUNqRyxJQUFJLEVBQUUsaUJBQWlCO0lBQ3ZCLFVBQVUsRUFBRSxzQkFBUyxDQUFDLFNBQVM7Q0FDaEMsQ0FBQyxDQUFDIiwiZmlsZSI6ImNvbXByZXNzaW9uLW1ldGhvZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VTdHlsZSB9IGZyb20gXCJrcnlvL2Nhc2Utc3R5bGVcIjtcbmltcG9ydCB7IFRzRW51bVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cy1lbnVtXCI7XG5cbmV4cG9ydCBlbnVtIENvbXByZXNzaW9uTWV0aG9kIHtcbiAgTm9uZSxcbiAgRGVmbGF0ZSxcbiAgTHptYSxcbn1cblxuZXhwb3J0IGNvbnN0ICRDb21wcmVzc2lvbk1ldGhvZDogVHNFbnVtVHlwZTxDb21wcmVzc2lvbk1ldGhvZD4gPSBuZXcgVHNFbnVtVHlwZTxDb21wcmVzc2lvbk1ldGhvZD4oe1xuICBlbnVtOiBDb21wcmVzc2lvbk1ldGhvZCxcbiAgY2hhbmdlQ2FzZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==


/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const fixed_point_1 = __webpack_require__(48);
// tslint:disable-next-line:variable-name
exports.Ufixed8P8 = fixed_point_1.createFixedPoint({
    signed: false,
    intBits: 8,
    fracBits: 8,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZml4ZWQtcG9pbnQvdWZpeGVkOHA4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsK0NBQW9GO0FBSXBGLHlDQUF5QztBQUM1QixRQUFBLFNBQVMsR0FBMEIsOEJBQWdCLENBQUM7SUFDL0QsTUFBTSxFQUFFLEtBQUs7SUFDYixPQUFPLEVBQUUsQ0FBQztJQUNWLFFBQVEsRUFBRSxDQUFDO0NBQ1osQ0FBQyxDQUFDIiwiZmlsZSI6ImZpeGVkLXBvaW50L3VmaXhlZDhwOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhZ2dlZCB9IGZyb20gXCJ0cy10YWdnZWRcIjtcbmltcG9ydCB7IGNyZWF0ZUZpeGVkUG9pbnQsIEZpeGVkUG9pbnQsIEZpeGVkUG9pbnRDb25zdHJ1Y3RvciB9IGZyb20gXCIuL2ZpeGVkLXBvaW50XCI7XG5cbmV4cG9ydCB0eXBlIFVmaXhlZDhQOCA9IFRhZ2dlZDxGaXhlZFBvaW50LCBcIlVmaXhlZDhQOFwiPjtcblxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOnZhcmlhYmxlLW5hbWVcbmV4cG9ydCBjb25zdCBVZml4ZWQ4UDg6IEZpeGVkUG9pbnRDb25zdHJ1Y3RvciA9IGNyZWF0ZUZpeGVkUG9pbnQoe1xuICBzaWduZWQ6IGZhbHNlLFxuICBpbnRCaXRzOiA4LFxuICBmcmFjQml0czogOCxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const fixed_point_1 = __webpack_require__(48);
// tslint:disable-next-line:variable-name
exports.Ufixed16P16 = fixed_point_1.createFixedPoint({
    signed: false,
    intBits: 16,
    fracBits: 16,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvZml4ZWQtcG9pbnQvdWZpeGVkMTZwMTYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSwrQ0FBb0Y7QUFJcEYseUNBQXlDO0FBQzVCLFFBQUEsV0FBVyxHQUEwQiw4QkFBZ0IsQ0FBQztJQUNqRSxNQUFNLEVBQUUsS0FBSztJQUNiLE9BQU8sRUFBRSxFQUFFO0lBQ1gsUUFBUSxFQUFFLEVBQUU7Q0FDYixDQUFDLENBQUMiLCJmaWxlIjoiZml4ZWQtcG9pbnQvdWZpeGVkMTZwMTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUYWdnZWQgfSBmcm9tIFwidHMtdGFnZ2VkXCI7XG5pbXBvcnQgeyBjcmVhdGVGaXhlZFBvaW50LCBGaXhlZFBvaW50LCBGaXhlZFBvaW50Q29uc3RydWN0b3IgfSBmcm9tIFwiLi9maXhlZC1wb2ludFwiO1xuXG5leHBvcnQgdHlwZSBVZml4ZWQxNlAxNiA9IFRhZ2dlZDxGaXhlZFBvaW50LCBcIlVmaXhlZDE2UDE2XCI+O1xuXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6dmFyaWFibGUtbmFtZVxuZXhwb3J0IGNvbnN0IFVmaXhlZDE2UDE2OiBGaXhlZFBvaW50Q29uc3RydWN0b3IgPSBjcmVhdGVGaXhlZFBvaW50KHtcbiAgc2lnbmVkOiBmYWxzZSxcbiAgaW50Qml0czogMTYsXG4gIGZyYWNCaXRzOiAxNixcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9


/***/ }),
/* 359 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__display_object__ = __webpack_require__(45);

class InteractiveObject extends __WEBPACK_IMPORTED_MODULE_0__display_object__["a" /* DisplayObject */] {
}
/* harmony export (immutable) */ __webpack_exports__["a"] = InteractiveObject;



/***/ }),
/* 360 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = decodeSwfMorphShape;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incident__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incident___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_incident__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_swf_tree__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_swf_tree___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_swf_tree__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_swf_tree_morph_shape_records_type__ = __webpack_require__(42);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_swf_tree_morph_shape_records_type___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_swf_tree_morph_shape_records_type__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__display_character__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__decode_swf_shape__ = __webpack_require__(107);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__morph_fill_style__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__morph_line_style__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__morph_path__ = __webpack_require__(113);








/**
 * Converts a space-optimized morph shape definition to a list of simpler paths for easier processing/rendering
 */
function decodeSwfMorphShape(tag) {
    const converter = new SwfMorphShapeDecoder(tag.shape.fillStyles, tag.shape.lineStyles);
    for (const record of tag.shape.records) {
        switch (record.type) {
            case __WEBPACK_IMPORTED_MODULE_2_swf_tree_morph_shape_records_type__["MorphShapeRecordType"].MorphCurvedEdge:
                converter.applyCurvedEdge(record);
                break;
            case __WEBPACK_IMPORTED_MODULE_2_swf_tree_morph_shape_records_type__["MorphShapeRecordType"].MorphStraightEdge:
                converter.applyStraightEdge(record);
                break;
            case __WEBPACK_IMPORTED_MODULE_2_swf_tree_morph_shape_records_type__["MorphShapeRecordType"].MorphStyleChange:
                converter.applyStyleChange(record);
                break;
            default:
                throw new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("UnreachableCode");
        }
    }
    const shape = converter.getShape();
    return { id: tag.id, type: __WEBPACK_IMPORTED_MODULE_3__display_character__["b" /* CharacterType */].MorphShape, paths: shape.paths };
}
var SegmentType;
(function (SegmentType) {
    SegmentType[SegmentType["Straight"] = 0] = "Straight";
    SegmentType[SegmentType["Curved"] = 1] = "Curved";
})(SegmentType || (SegmentType = {}));
function createStraightSegment(startX, startY, endX, endY) {
    return { type: SegmentType.Straight, startX, startY, endX, endY };
}
function createCurvedSegment(startX, startY, controlX, controlY, endX, endY) {
    return { type: SegmentType.Curved, startX, startY, controlX, controlY, endX, endY };
}
/**
 * Normalize the fill style from the SWF format to the renderer format
 */
function decodeFillStyle(old) {
    switch (old.type) {
        case __WEBPACK_IMPORTED_MODULE_1_swf_tree__["MorphFillStyleType"].Solid:
            return {
                type: __WEBPACK_IMPORTED_MODULE_5__morph_fill_style__["a" /* MorphFillStyleType */].Solid,
                startColor: Object(__WEBPACK_IMPORTED_MODULE_4__decode_swf_shape__["b" /* normalizeStraightSRgba */])(old.startColor),
                endColor: Object(__WEBPACK_IMPORTED_MODULE_4__decode_swf_shape__["b" /* normalizeStraightSRgba */])(old.endColor),
            };
        default:
            console.warn(old);
            throw new Error("Unknown fill type");
    }
}
/**
 * Normalize the line style from the SWF format to the renderer format
 */
function decodeLineStyle(old) {
    // TODO...
    return {
        type: __WEBPACK_IMPORTED_MODULE_6__morph_line_style__["a" /* MorphLineStyleType */].Solid,
        startColor: { r: 0, g: 0, b: 0, a: 1 },
        endColor: { r: 0, g: 0, b: 0, a: 1 },
        width: [0, 1200],
    };
}
/**
 * Create a new layer with the supplied styles.
 */
function createStyleLayer(swfFillStyles, swfLineStyles) {
    const fills = [];
    for (const swfFillStyle of swfFillStyles) {
        fills.push({
            style: decodeFillStyle(swfFillStyle),
            segments: [],
        });
    }
    const lines = [];
    for (const swfLineStyle of swfLineStyles) {
        lines.push({
            style: decodeLineStyle(swfLineStyle),
            segments: [],
        });
    }
    return { fills, lines };
}
/**
 * Extract a sequence of continuous segments, removes them from openSet.
 */
function extractContinuous(openSet) {
    const first = openSet.shift();
    if (first === undefined) {
        throw new Error("FailedAssertion: openSet should not be empty");
    }
    const result = [first];
    let startX = first.startX[0];
    let startY = first.startY[0];
    let endX = first.endX[0];
    let endY = first.endY[0];
    for (let i = 0, len = openSet.length; i < len; i++) {
        const current = openSet[i];
        if (current.startX[0] === endX && current.startY[0] === endY) {
            openSet.splice(i, 1);
            i--;
            len--;
            endX = current.endX[0];
            endY = current.endY[0];
            result.push(current);
        }
        else if (current.endX[0] === startX && current.endY[0] === startY) {
            openSet.splice(i, 1);
            i--;
            len--;
            startX = current.startX[0];
            startY = current.startY[0];
            result.unshift(current);
        }
    }
    // TODO: Repeat until reaching fixed point? Currently there are some cases when a continuous path is not collected
    // if its segments are disordered.
    return result;
}
/**
 * Converts a list of segments (in their definition order) to a list of path commands.
 */
function segmentsToCommands(segments) {
    const openSet = [...segments];
    const result = [];
    while (openSet.length > 0) {
        const sequence = extractContinuous(openSet);
        result.push({
            type: __WEBPACK_IMPORTED_MODULE_7__morph_path__["a" /* MorphCommandType */].MoveTo,
            x: sequence[0].startX,
            y: sequence[0].startY,
        });
        for (const segment of sequence) {
            switch (segment.type) {
                case SegmentType.Straight:
                    result.push({
                        type: __WEBPACK_IMPORTED_MODULE_7__morph_path__["a" /* MorphCommandType */].LineTo,
                        endX: segment.endX,
                        endY: segment.endY,
                    });
                    break;
                case SegmentType.Curved:
                    result.push({
                        type: __WEBPACK_IMPORTED_MODULE_7__morph_path__["a" /* MorphCommandType */].CurveTo,
                        controlX: segment.controlX,
                        controlY: segment.controlY,
                        endX: segment.endX,
                        endY: segment.endY,
                    });
                    break;
                default:
                    throw new Error("Failed assertion: unexpected segment type");
            }
        }
    }
    return result;
}
/**
 * Converts a layer to a list of paths with style
 */
function layerToPaths(layer) {
    const paths = [];
    for (const fillSet of layer.fills) {
        const commands = segmentsToCommands(fillSet.segments);
        if (commands.length > 0) {
            paths.push({ commands, fill: fillSet.style });
        }
    }
    for (const lineSet of layer.lines) {
        const commands = segmentsToCommands(lineSet.segments);
        if (commands.length > 0) {
            paths.push({ commands, line: lineSet.style });
        }
    }
    return paths;
}
/**
 * Maintains the state of the decoder while it consumes morph shape records.
 */
class SwfMorphShapeDecoder {
    constructor(swfFillStyles, swfLineStyles) {
        this.x = [0, 0];
        this.y = [0, 0];
        this.layers = [];
        this.leftFill = undefined;
        this.rightFill = undefined;
        this.lineFill = undefined;
        this.setNewStyles(swfFillStyles, swfLineStyles);
    }
    applyStyleChange(record) {
        if (record.leftFill !== undefined) {
            this.setLeftFillById(record.leftFill);
        }
        if (record.rightFill !== undefined) {
            this.setRightFillById(record.rightFill);
        }
        if (record.lineStyle !== undefined) {
            this.setLineFillById(record.lineStyle);
        }
        if (record.startMoveTo !== undefined) {
            if (record.endMoveTo === undefined) {
                // TODO: Use Incident
                throw new Error("Expected endMoveTo to be defined");
            }
            this.x = [record.startMoveTo.x, record.endMoveTo.x];
            this.y = [record.startMoveTo.y, record.endMoveTo.y];
        }
    }
    applyStraightEdge(record) {
        const endX = [this.x[0] + record.startDelta.x, this.x[1] + record.endDelta.x];
        const endY = [this.y[0] + record.startDelta.y, this.y[1] + record.endDelta.y];
        if (this.leftFill !== undefined) {
            this.leftFill.segments.push(createStraightSegment(this.x, this.y, endX, endY));
        }
        if (this.rightFill !== undefined) {
            this.rightFill.segments.push(createStraightSegment(endX, endY, this.x, this.y));
        }
        if (this.lineFill !== undefined) {
            this.lineFill.segments.push(createStraightSegment(this.x, this.y, endX, endY));
        }
        this.x = endX;
        this.y = endY;
    }
    applyCurvedEdge(record) {
        const controlX = [this.x[0] + record.startControlDelta.x, this.x[1] + record.endControlDelta.x];
        const controlY = [this.y[0] + record.startControlDelta.y, this.y[1] + record.endControlDelta.y];
        const endX = [this.x[0] + record.startAnchorDelta.x, this.x[1] + record.endAnchorDelta.x];
        const endY = [this.y[0] + record.startAnchorDelta.y, this.y[1] + record.endAnchorDelta.y];
        if (this.leftFill !== undefined) {
            this.leftFill.segments.push(createCurvedSegment(this.x, this.y, controlX, controlY, endX, endY));
        }
        if (this.rightFill !== undefined) {
            this.rightFill.segments.push(createCurvedSegment(endX, endY, controlX, controlY, this.x, this.y));
        }
        if (this.lineFill !== undefined) {
            this.lineFill.segments.push(createCurvedSegment(this.x, this.y, controlX, controlY, endX, endY));
        }
        this.x = endX;
        this.y = endY;
    }
    getShape() {
        const paths = [];
        for (const layer of this.layers) {
            for (const path of layerToPaths(layer)) {
                paths.push(path);
            }
        }
        return { paths };
    }
    setNewStyles(swfFillStyles, swfLineStyles) {
        const layer = createStyleLayer(swfFillStyles, swfLineStyles);
        this.layers.push(layer);
        this.leftFill = undefined;
        this.rightFill = undefined;
        this.lineFill = undefined;
    }
    setLeftFillById(fillId) {
        if (fillId === 0) {
            this.leftFill = undefined;
            return;
        }
        const currentLayer = this.layers[this.layers.length - 1];
        const fillIndex = fillId - 1;
        this.leftFill = currentLayer.fills[fillIndex];
        if (this.leftFill === undefined) {
            throw new Error("Invalid fill ID");
        }
    }
    setRightFillById(fillId) {
        if (fillId === 0) {
            this.rightFill = undefined;
            return;
        }
        const currentLayer = this.layers[this.layers.length - 1];
        const fillIndex = fillId - 1;
        this.rightFill = currentLayer.fills[fillIndex];
        if (this.rightFill === undefined) {
            throw new Error("Invalid fill ID");
        }
    }
    setLineFillById(fillId) {
        if (fillId === 0) {
            this.lineFill = undefined;
            return;
        }
        const currentLayer = this.layers[this.layers.length - 1];
        const fillIndex = fillId - 1;
        this.lineFill = currentLayer.lines[fillIndex];
        if (this.lineFill === undefined) {
            throw new Error("Invalid fill ID");
        }
    }
}


/***/ }),
/* 361 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__display_object__ = __webpack_require__(45);

class MorphShape extends __WEBPACK_IMPORTED_MODULE_0__display_object__["a" /* DisplayObject */] {
    constructor(character) {
        super();
        this.character = character;
        this.ratio = 0;
    }
    nextFrame(isMainLoop, runScripts) {
    }
    visit(visitor) {
        return visitor.visitMorphShape(this);
    }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = MorphShape;



/***/ }),
/* 362 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__display_object__ = __webpack_require__(45);

class Shape extends __WEBPACK_IMPORTED_MODULE_0__display_object__["a" /* DisplayObject */] {
    constructor(character) {
        super();
        this.character = character;
    }
    nextFrame(isMainLoop, runScripts) { }
    visit(visitor) {
        return visitor.visitShape(this);
    }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = Shape;



/***/ }),
/* 363 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = startPlayer;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incident__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incident___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_incident__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__display_loader__ = __webpack_require__(364);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__display_sprite__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__display_stage__ = __webpack_require__(402);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_clock__ = __webpack_require__(127);





/**
 * The first tick is after `1000 / frameRate` ms.
 *
 * @param clock Clock used to control the loop.
 * @param frameRate Ticks per second
 * @param onTick
 * @return {Loop}
 */
function startLoop(clock, frameRate, onTick) {
    const startTime = clock.getTime();
    let shift = 0;
    let nextTickCount = 0;
    let handle = undefined;
    function handleTick() {
        onTick();
        scheduleNextTick();
    }
    function scheduleNextTick() {
        nextTickCount++;
        const targetTime = startTime + shift + (1000 * nextTickCount / frameRate);
        let timeout = targetTime - clock.getTime();
        if (timeout < 0) {
            shift += -timeout;
            console.warn(`Unable to maintain frameRate (missed by ${-timeout}ms)`);
            timeout = 0;
        }
        // if (nextTickCount > 1) {
        //   return;
        // }
        handle = clock.setTimeout(timeout, handleTick);
    }
    scheduleNextTick();
    return {
        destroy() {
            if (handle !== undefined) {
                clock.clearTimeout(handle);
                handle = undefined;
            }
        },
    };
}
var PlayerState;
(function (PlayerState) {
    PlayerState[PlayerState["AWAITING_HEADER"] = 0] = "AWAITING_HEADER";
    PlayerState[PlayerState["RUNNING"] = 1] = "RUNNING";
    PlayerState[PlayerState["DESTROYED"] = 2] = "DESTROYED";
})(PlayerState || (PlayerState = {}));
class Player {
    constructor(options) {
        this.movieUrl = options.movieUrl;
        this.clock = new __WEBPACK_IMPORTED_MODULE_4__services_clock__["a" /* ChildClock */](options.clock);
        this.renderer = options.renderer;
        this.rootLoader = undefined;
        this.stage = undefined;
        // this.state = PlayerState.AWAITING_HEADER;
        // // this.avm = new Avm();
        // this.stage = new Stage();
    }
    pause() {
        this.clock.pause();
    }
    resume() {
        this.clock.resume();
    }
    destroy() {
        if (this.mainLoop !== undefined) {
            this.mainLoop.destroy();
        }
        // this.state = PlayerState.DESTROYED;
    }
    start() {
        if (this.rootLoader !== undefined) {
            throw new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("Duplicate `start` call");
        }
        this.rootLoader = Object(__WEBPACK_IMPORTED_MODULE_1__display_loader__["b" /* loadSwf */])(this.movieUrl);
        // this.rootLoader.events.once(LoaderEvent.SwfHeader, header => this.handleSwfHeaderLoaded(header));
        this.rootLoader.events.once(__WEBPACK_IMPORTED_MODULE_1__display_loader__["a" /* LoaderEvent */].Complete, movie => this.handleSwfLoaded(movie));
    }
    // private handleSwfHeaderLoaded(header: SwfHeader): void {
    //   if (this.rootLoader === undefined || this.stage !== undefined) {
    //     console.error(new Incident("Unexpected state at `handleSwfHeaderLoaded`"));
    //     return;
    //   }
    //   this.stage = new RootStage(header, this.rootLoader);
    //
    //   this.mainLoop = startLoop(this.clock, header.frameRate.valueOf(), () => this.onTick());
    // }
    handleSwfLoaded(movie) {
        if (this.rootLoader === undefined || this.stage !== undefined) {
            console.error(new __WEBPACK_IMPORTED_MODULE_0_incident__["Incident"]("Unexpected state at `handleSwfHeaderLoaded`"));
            return;
        }
        this.stage = new __WEBPACK_IMPORTED_MODULE_3__display_stage__["a" /* Stage */](movie.header.frameSize);
        const rootSprite = new __WEBPACK_IMPORTED_MODULE_2__display_sprite__["b" /* RootSprite */](movie);
        this.stage.addChild(rootSprite);
        this.mainLoop = startLoop(this.clock, movie.header.frameRate.valueOf(), () => this.onTick());
    }
    onTick() {
        const stage = this.stage;
        stage.nextFrame(true, false); // TODO: Run scripts
        this.renderer.render(stage);
    }
}
function startPlayer(options) {
    const player = new Player(options);
    player.start();
    return player;
}


/***/ }),
/* 364 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoaderEvent; });
/* harmony export (immutable) */ __webpack_exports__["b"] = loadSwf;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_events__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_events___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_events__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__browser_xhr_loader__ = __webpack_require__(365);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__display_object__ = __webpack_require__(45);

 // TODO: Abstract this

var LoaderEvent;
(function (LoaderEvent) {
    LoaderEvent["SwfHeader"] = "LoaderEvent.SwfHeader";
    LoaderEvent["Complete"] = "LoaderEvent.Complete";
})(LoaderEvent || (LoaderEvent = {}));
/**
 * You can insert a loader in the display tree, it will display data as it loads it.
 */
class SwfLoader extends __WEBPACK_IMPORTED_MODULE_2__display_object__["a" /* DisplayObject */] {
    constructor(url) {
        super();
        this.url = url;
        this.events = new __WEBPACK_IMPORTED_MODULE_0_events__["EventEmitter"]();
        this.sprite = undefined;
    }
    start() {
        Object(__WEBPACK_IMPORTED_MODULE_1__browser_xhr_loader__["a" /* getMovie */])(this.url).then(movie => this.handleMovieLoaded(movie));
    }
    visit(visitor) {
        return visitor.visitLoader(this);
    }
    nextFrame(isMainLoop, runScripts) {
        if (this.sprite === undefined) {
            return;
        }
        console.log("Updating loader");
    }
    handleMovieLoaded(movie) {
        this.events.emit(LoaderEvent.SwfHeader, movie.header);
        // this.sprite = new Sprite();
        this.events.emit(LoaderEvent.Complete, movie);
    }
}
/* unused harmony export SwfLoader */

function loadSwf(swfUrl) {
    const loader = new SwfLoader(swfUrl);
    loader.start();
    return loader;
}


/***/ }),
/* 365 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getMovie;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_swf_parser__ = __webpack_require__(366);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_swf_parser___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_swf_parser__);

async function getMovie(uri) {
    return new Promise((resolve, reject) => {
        const xhr = new XMLHttpRequest();
        xhr.open("GET", uri, true);
        xhr.responseType = "arraybuffer";
        xhr.onload = function (ev) {
            if (this.status === 200) {
                try {
                    const response = this.response;
                    const movie = Object(__WEBPACK_IMPORTED_MODULE_0_swf_parser__["parseBytes"])(new Uint8Array(response));
                    resolve(movie);
                }
                catch (err) {
                    reject(err);
                }
            }
            else {
                reject(new Error("Unknown error"));
            }
        };
        xhr.send();
    });
}


/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
const ast = __importStar(__webpack_require__(12));
exports.ast = ast;
const movie_1 = __webpack_require__(367);
const stream_1 = __webpack_require__(70);
function parseBytes(bytes) {
    const byteStream = new stream_1.Stream(bytes);
    return movie_1.parseMovie(byteStream);
}
exports.parseBytes = parseBytes;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsOENBQWdDO0FBSXZCLGtCQUFHO0FBSFosMkNBQTZDO0FBQzdDLHFDQUFrQztBQUlsQyxvQkFBMkIsS0FBaUI7SUFDMUMsTUFBTSxVQUFVLEdBQVcsSUFBSSxlQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDN0MsTUFBTSxDQUFDLGtCQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDaEMsQ0FBQztBQUhELGdDQUdDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYXN0IGZyb20gXCJzd2YtdHJlZVwiO1xuaW1wb3J0IHsgcGFyc2VNb3ZpZSB9IGZyb20gXCIuL3BhcnNlcnMvbW92aWVcIjtcbmltcG9ydCB7IFN0cmVhbSB9IGZyb20gXCIuL3N0cmVhbVwiO1xuXG5leHBvcnQgeyBhc3QgfTtcblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQnl0ZXMoYnl0ZXM6IFVpbnQ4QXJyYXkpOiBhc3QuTW92aWUge1xuICBjb25zdCBieXRlU3RyZWFtOiBTdHJlYW0gPSBuZXcgU3RyZWFtKGJ5dGVzKTtcbiAgcmV0dXJuIHBhcnNlTW92aWUoYnl0ZVN0cmVhbSk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9


/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const swf_tree_1 = __webpack_require__(12);
const zlib = __importStar(__webpack_require__(370));
const concat_bytes_1 = __webpack_require__(394);
const parse_context_1 = __webpack_require__(395);
const stream_1 = __webpack_require__(70);
const header_1 = __webpack_require__(396);
const tags_1 = __webpack_require__(397);
function parseDecompressedMovie(byteStream) {
    // TODO(demurgos): take parse context or version as an argument
    const context = new parse_context_1.DefaultParseContext(0);
    const header = header_1.parseHeader(byteStream);
    const tags = [];
    while (byteStream.available() > 0) {
        // A null byte indicates the end-of-tags
        if (byteStream.peekUint8() === 0) {
            byteStream.skip(1);
            break;
        }
        tags.push(tags_1.parseTag(byteStream, context));
    }
    return { header, tags };
}
exports.parseDecompressedMovie = parseDecompressedMovie;
function parseMovie(byteStream) {
    const startPos = byteStream.bytePos;
    const headerSignature = header_1.parseSwfSignature(byteStream);
    switch (headerSignature.compressionMethod) {
        case swf_tree_1.CompressionMethod.None:
            byteStream.bytePos = startPos;
            return parseDecompressedMovie(byteStream);
        case swf_tree_1.CompressionMethod.Deflate:
            const curPos = byteStream.bytePos;
            byteStream.bytePos = startPos;
            const signature = byteStream.takeBytes(curPos - startPos);
            const tail = byteStream.tailBytes();
            const tailBuffer = Buffer.from(tail);
            // TODO: remove cast
            const deflated = zlib.inflateSync(tailBuffer);
            const decompressed = concat_bytes_1.concatBytes([signature, deflated]);
            return parseDecompressedMovie(new stream_1.Stream(decompressed));
        case swf_tree_1.CompressionMethod.Lzma:
            throw new incident_1.Incident("NotImplemented", "Support for LZMA compression is not implemented yet");
        default:
            throw new incident_1.Incident("UnknownCompressionMethod", "Unknown compression method");
    }
}
exports.parseMovie = parseMovie;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcGFyc2Vycy9tb3ZpZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSx1Q0FBb0M7QUFFcEMsdUNBQStFO0FBQy9FLDJDQUE2QjtBQUM3QixrREFBOEM7QUFDOUMsb0RBQXFFO0FBQ3JFLHNDQUFtQztBQUNuQyxxQ0FBMEQ7QUFDMUQsaUNBQWtDO0FBRWxDLGdDQUF1QyxVQUFrQjtJQUN2RCwrREFBK0Q7SUFDL0QsTUFBTSxPQUFPLEdBQWlCLElBQUksbUNBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFekQsTUFBTSxNQUFNLEdBQVcsb0JBQVcsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUMvQyxNQUFNLElBQUksR0FBVSxFQUFFLENBQUM7SUFDdkIsT0FBTyxVQUFVLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUM7UUFDbEMsd0NBQXdDO1FBQ3hDLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkIsS0FBSyxDQUFDO1FBQ1IsQ0FBQztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsZUFBUSxDQUFDLFVBQVUsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFDRCxNQUFNLENBQUMsRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFDLENBQUM7QUFDeEIsQ0FBQztBQWZELHdEQWVDO0FBRUQsb0JBQTJCLFVBQWtCO0lBQzNDLE1BQU0sUUFBUSxHQUFhLFVBQVUsQ0FBQyxPQUFPLENBQUM7SUFDOUMsTUFBTSxlQUFlLEdBQWlCLDBCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3BFLE1BQU0sQ0FBQyxDQUFDLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7UUFDMUMsS0FBSyw0QkFBaUIsQ0FBQyxJQUFJO1lBQ3pCLFVBQVUsQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDO1lBQzlCLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUM1QyxLQUFLLDRCQUFpQixDQUFDLE9BQU87WUFDNUIsTUFBTSxNQUFNLEdBQWEsVUFBVSxDQUFDLE9BQU8sQ0FBQztZQUM1QyxVQUFVLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQztZQUM5QixNQUFNLFNBQVMsR0FBZSxVQUFVLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUMsQ0FBQztZQUN0RSxNQUFNLElBQUksR0FBZSxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUM7WUFDaEQsTUFBTSxVQUFVLEdBQVcsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFjLENBQUMsQ0FBQztZQUN2RCxvQkFBb0I7WUFDcEIsTUFBTSxRQUFRLEdBQVcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUN0RCxNQUFNLFlBQVksR0FBZSwwQkFBVyxDQUFDLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDcEUsTUFBTSxDQUFDLHNCQUFzQixDQUFDLElBQUksZUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7UUFDMUQsS0FBSyw0QkFBaUIsQ0FBQyxJQUFJO1lBQ3pCLE1BQU0sSUFBSSxtQkFBUSxDQUFDLGdCQUFnQixFQUFFLHFEQUFxRCxDQUFDLENBQUM7UUFDOUY7WUFDRSxNQUFNLElBQUksbUJBQVEsQ0FBQywwQkFBMEIsRUFBRSw0QkFBNEIsQ0FBQyxDQUFDO0lBQ2pGLENBQUM7QUFDSCxDQUFDO0FBdEJELGdDQXNCQyIsImZpbGUiOiJwYXJzZXJzL21vdmllLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcbmltcG9ydCB7IFVpbnRTaXplIH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQgeyBDb21wcmVzc2lvbk1ldGhvZCwgSGVhZGVyLCBNb3ZpZSwgU3dmU2lnbmF0dXJlLCBUYWcgfSBmcm9tIFwic3dmLXRyZWVcIjtcbmltcG9ydCAqIGFzIHpsaWIgZnJvbSBcInpsaWJcIjtcbmltcG9ydCB7IGNvbmNhdEJ5dGVzIH0gZnJvbSBcIi4uL2NvbmNhdC1ieXRlc1wiO1xuaW1wb3J0IHsgRGVmYXVsdFBhcnNlQ29udGV4dCwgUGFyc2VDb250ZXh0IH0gZnJvbSBcIi4uL3BhcnNlLWNvbnRleHRcIjtcbmltcG9ydCB7IFN0cmVhbSB9IGZyb20gXCIuLi9zdHJlYW1cIjtcbmltcG9ydCB7IHBhcnNlSGVhZGVyLCBwYXJzZVN3ZlNpZ25hdHVyZSB9IGZyb20gXCIuL2hlYWRlclwiO1xuaW1wb3J0IHsgcGFyc2VUYWcgfSBmcm9tIFwiLi90YWdzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZURlY29tcHJlc3NlZE1vdmllKGJ5dGVTdHJlYW06IFN0cmVhbSk6IE1vdmllIHtcbiAgLy8gVE9ETyhkZW11cmdvcyk6IHRha2UgcGFyc2UgY29udGV4dCBvciB2ZXJzaW9uIGFzIGFuIGFyZ3VtZW50XG4gIGNvbnN0IGNvbnRleHQ6IFBhcnNlQ29udGV4dCA9IG5ldyBEZWZhdWx0UGFyc2VDb250ZXh0KDApO1xuXG4gIGNvbnN0IGhlYWRlcjogSGVhZGVyID0gcGFyc2VIZWFkZXIoYnl0ZVN0cmVhbSk7XG4gIGNvbnN0IHRhZ3M6IFRhZ1tdID0gW107XG4gIHdoaWxlIChieXRlU3RyZWFtLmF2YWlsYWJsZSgpID4gMCkge1xuICAgIC8vIEEgbnVsbCBieXRlIGluZGljYXRlcyB0aGUgZW5kLW9mLXRhZ3NcbiAgICBpZiAoYnl0ZVN0cmVhbS5wZWVrVWludDgoKSA9PT0gMCkge1xuICAgICAgYnl0ZVN0cmVhbS5za2lwKDEpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHRhZ3MucHVzaChwYXJzZVRhZyhieXRlU3RyZWFtLCBjb250ZXh0KSk7XG4gIH1cbiAgcmV0dXJuIHtoZWFkZXIsIHRhZ3N9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VNb3ZpZShieXRlU3RyZWFtOiBTdHJlYW0pOiBNb3ZpZSB7XG4gIGNvbnN0IHN0YXJ0UG9zOiBVaW50U2l6ZSA9IGJ5dGVTdHJlYW0uYnl0ZVBvcztcbiAgY29uc3QgaGVhZGVyU2lnbmF0dXJlOiBTd2ZTaWduYXR1cmUgPSBwYXJzZVN3ZlNpZ25hdHVyZShieXRlU3RyZWFtKTtcbiAgc3dpdGNoIChoZWFkZXJTaWduYXR1cmUuY29tcHJlc3Npb25NZXRob2QpIHtcbiAgICBjYXNlIENvbXByZXNzaW9uTWV0aG9kLk5vbmU6XG4gICAgICBieXRlU3RyZWFtLmJ5dGVQb3MgPSBzdGFydFBvcztcbiAgICAgIHJldHVybiBwYXJzZURlY29tcHJlc3NlZE1vdmllKGJ5dGVTdHJlYW0pO1xuICAgIGNhc2UgQ29tcHJlc3Npb25NZXRob2QuRGVmbGF0ZTpcbiAgICAgIGNvbnN0IGN1clBvczogVWludFNpemUgPSBieXRlU3RyZWFtLmJ5dGVQb3M7XG4gICAgICBieXRlU3RyZWFtLmJ5dGVQb3MgPSBzdGFydFBvcztcbiAgICAgIGNvbnN0IHNpZ25hdHVyZTogVWludDhBcnJheSA9IGJ5dGVTdHJlYW0udGFrZUJ5dGVzKGN1clBvcyAtIHN0YXJ0UG9zKTtcbiAgICAgIGNvbnN0IHRhaWw6IFVpbnQ4QXJyYXkgPSBieXRlU3RyZWFtLnRhaWxCeXRlcygpO1xuICAgICAgY29uc3QgdGFpbEJ1ZmZlcjogQnVmZmVyID0gQnVmZmVyLmZyb20odGFpbCBhcyBCdWZmZXIpO1xuICAgICAgLy8gVE9ETzogcmVtb3ZlIGNhc3RcbiAgICAgIGNvbnN0IGRlZmxhdGVkOiBCdWZmZXIgPSB6bGliLmluZmxhdGVTeW5jKHRhaWxCdWZmZXIpO1xuICAgICAgY29uc3QgZGVjb21wcmVzc2VkOiBVaW50OEFycmF5ID0gY29uY2F0Qnl0ZXMoW3NpZ25hdHVyZSwgZGVmbGF0ZWRdKTtcbiAgICAgIHJldHVybiBwYXJzZURlY29tcHJlc3NlZE1vdmllKG5ldyBTdHJlYW0oZGVjb21wcmVzc2VkKSk7XG4gICAgY2FzZSBDb21wcmVzc2lvbk1ldGhvZC5Mem1hOlxuICAgICAgdGhyb3cgbmV3IEluY2lkZW50KFwiTm90SW1wbGVtZW50ZWRcIiwgXCJTdXBwb3J0IGZvciBMWk1BIGNvbXByZXNzaW9uIGlzIG5vdCBpbXBsZW1lbnRlZCB5ZXRcIik7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBJbmNpZGVudChcIlVua25vd25Db21wcmVzc2lvbk1ldGhvZFwiLCBcIlVua25vd24gY29tcHJlc3Npb24gbWV0aG9kXCIpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(30).Buffer))

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return (b64.length * 3 / 4) - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr((len * 3 / 4) - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0; i < l; i += 4) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}


/***/ }),
/* 369 */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var Buffer = __webpack_require__(30).Buffer;
var Transform = __webpack_require__(371).Transform;
var binding = __webpack_require__(383);
var util = __webpack_require__(122);
var assert = __webpack_require__(121).ok;
var kMaxLength = __webpack_require__(30).kMaxLength;
var kRangeErrorMessage = 'Cannot create final Buffer. It would be larger ' + 'than 0x' + kMaxLength.toString(16) + ' bytes';

// zlib doesn't provide these, so kludge them in following the same
// const naming scheme zlib uses.
binding.Z_MIN_WINDOWBITS = 8;
binding.Z_MAX_WINDOWBITS = 15;
binding.Z_DEFAULT_WINDOWBITS = 15;

// fewer than 64 bytes per chunk is stupid.
// technically it could work with as few as 8, but even 64 bytes
// is absurdly low.  Usually a MB or more is best.
binding.Z_MIN_CHUNK = 64;
binding.Z_MAX_CHUNK = Infinity;
binding.Z_DEFAULT_CHUNK = 16 * 1024;

binding.Z_MIN_MEMLEVEL = 1;
binding.Z_MAX_MEMLEVEL = 9;
binding.Z_DEFAULT_MEMLEVEL = 8;

binding.Z_MIN_LEVEL = -1;
binding.Z_MAX_LEVEL = 9;
binding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;

// expose all the zlib constants
var bkeys = Object.keys(binding);
for (var bk = 0; bk < bkeys.length; bk++) {
  var bkey = bkeys[bk];
  if (bkey.match(/^Z/)) {
    Object.defineProperty(exports, bkey, {
      enumerable: true, value: binding[bkey], writable: false
    });
  }
}

// translation table for return codes.
var codes = {
  Z_OK: binding.Z_OK,
  Z_STREAM_END: binding.Z_STREAM_END,
  Z_NEED_DICT: binding.Z_NEED_DICT,
  Z_ERRNO: binding.Z_ERRNO,
  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,
  Z_DATA_ERROR: binding.Z_DATA_ERROR,
  Z_MEM_ERROR: binding.Z_MEM_ERROR,
  Z_BUF_ERROR: binding.Z_BUF_ERROR,
  Z_VERSION_ERROR: binding.Z_VERSION_ERROR
};

var ckeys = Object.keys(codes);
for (var ck = 0; ck < ckeys.length; ck++) {
  var ckey = ckeys[ck];
  codes[codes[ckey]] = ckey;
}

Object.defineProperty(exports, 'codes', {
  enumerable: true, value: Object.freeze(codes), writable: false
});

exports.Deflate = Deflate;
exports.Inflate = Inflate;
exports.Gzip = Gzip;
exports.Gunzip = Gunzip;
exports.DeflateRaw = DeflateRaw;
exports.InflateRaw = InflateRaw;
exports.Unzip = Unzip;

exports.createDeflate = function (o) {
  return new Deflate(o);
};

exports.createInflate = function (o) {
  return new Inflate(o);
};

exports.createDeflateRaw = function (o) {
  return new DeflateRaw(o);
};

exports.createInflateRaw = function (o) {
  return new InflateRaw(o);
};

exports.createGzip = function (o) {
  return new Gzip(o);
};

exports.createGunzip = function (o) {
  return new Gunzip(o);
};

exports.createUnzip = function (o) {
  return new Unzip(o);
};

// Convenience methods.
// compress/decompress a string or buffer in one step.
exports.deflate = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Deflate(opts), buffer, callback);
};

exports.deflateSync = function (buffer, opts) {
  return zlibBufferSync(new Deflate(opts), buffer);
};

exports.gzip = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Gzip(opts), buffer, callback);
};

exports.gzipSync = function (buffer, opts) {
  return zlibBufferSync(new Gzip(opts), buffer);
};

exports.deflateRaw = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new DeflateRaw(opts), buffer, callback);
};

exports.deflateRawSync = function (buffer, opts) {
  return zlibBufferSync(new DeflateRaw(opts), buffer);
};

exports.unzip = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Unzip(opts), buffer, callback);
};

exports.unzipSync = function (buffer, opts) {
  return zlibBufferSync(new Unzip(opts), buffer);
};

exports.inflate = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Inflate(opts), buffer, callback);
};

exports.inflateSync = function (buffer, opts) {
  return zlibBufferSync(new Inflate(opts), buffer);
};

exports.gunzip = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Gunzip(opts), buffer, callback);
};

exports.gunzipSync = function (buffer, opts) {
  return zlibBufferSync(new Gunzip(opts), buffer);
};

exports.inflateRaw = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new InflateRaw(opts), buffer, callback);
};

exports.inflateRawSync = function (buffer, opts) {
  return zlibBufferSync(new InflateRaw(opts), buffer);
};

function zlibBuffer(engine, buffer, callback) {
  var buffers = [];
  var nread = 0;

  engine.on('error', onError);
  engine.on('end', onEnd);

  engine.end(buffer);
  flow();

  function flow() {
    var chunk;
    while (null !== (chunk = engine.read())) {
      buffers.push(chunk);
      nread += chunk.length;
    }
    engine.once('readable', flow);
  }

  function onError(err) {
    engine.removeListener('end', onEnd);
    engine.removeListener('readable', flow);
    callback(err);
  }

  function onEnd() {
    var buf;
    var err = null;

    if (nread >= kMaxLength) {
      err = new RangeError(kRangeErrorMessage);
    } else {
      buf = Buffer.concat(buffers, nread);
    }

    buffers = [];
    engine.close();
    callback(err, buf);
  }
}

function zlibBufferSync(engine, buffer) {
  if (typeof buffer === 'string') buffer = Buffer.from(buffer);

  if (!Buffer.isBuffer(buffer)) throw new TypeError('Not a string or buffer');

  var flushFlag = engine._finishFlushFlag;

  return engine._processChunk(buffer, flushFlag);
}

// generic zlib
// minimal 2-byte header
function Deflate(opts) {
  if (!(this instanceof Deflate)) return new Deflate(opts);
  Zlib.call(this, opts, binding.DEFLATE);
}

function Inflate(opts) {
  if (!(this instanceof Inflate)) return new Inflate(opts);
  Zlib.call(this, opts, binding.INFLATE);
}

// gzip - bigger header, same deflate compression
function Gzip(opts) {
  if (!(this instanceof Gzip)) return new Gzip(opts);
  Zlib.call(this, opts, binding.GZIP);
}

function Gunzip(opts) {
  if (!(this instanceof Gunzip)) return new Gunzip(opts);
  Zlib.call(this, opts, binding.GUNZIP);
}

// raw - no header
function DeflateRaw(opts) {
  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);
  Zlib.call(this, opts, binding.DEFLATERAW);
}

function InflateRaw(opts) {
  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);
  Zlib.call(this, opts, binding.INFLATERAW);
}

// auto-detect header.
function Unzip(opts) {
  if (!(this instanceof Unzip)) return new Unzip(opts);
  Zlib.call(this, opts, binding.UNZIP);
}

function isValidFlushFlag(flag) {
  return flag === binding.Z_NO_FLUSH || flag === binding.Z_PARTIAL_FLUSH || flag === binding.Z_SYNC_FLUSH || flag === binding.Z_FULL_FLUSH || flag === binding.Z_FINISH || flag === binding.Z_BLOCK;
}

// the Zlib class they all inherit from
// This thing manages the queue of requests, and returns
// true or false if there is anything in the queue when
// you call the .write() method.

function Zlib(opts, mode) {
  var _this = this;

  this._opts = opts = opts || {};
  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;

  Transform.call(this, opts);

  if (opts.flush && !isValidFlushFlag(opts.flush)) {
    throw new Error('Invalid flush flag: ' + opts.flush);
  }
  if (opts.finishFlush && !isValidFlushFlag(opts.finishFlush)) {
    throw new Error('Invalid flush flag: ' + opts.finishFlush);
  }

  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;
  this._finishFlushFlag = typeof opts.finishFlush !== 'undefined' ? opts.finishFlush : binding.Z_FINISH;

  if (opts.chunkSize) {
    if (opts.chunkSize < exports.Z_MIN_CHUNK || opts.chunkSize > exports.Z_MAX_CHUNK) {
      throw new Error('Invalid chunk size: ' + opts.chunkSize);
    }
  }

  if (opts.windowBits) {
    if (opts.windowBits < exports.Z_MIN_WINDOWBITS || opts.windowBits > exports.Z_MAX_WINDOWBITS) {
      throw new Error('Invalid windowBits: ' + opts.windowBits);
    }
  }

  if (opts.level) {
    if (opts.level < exports.Z_MIN_LEVEL || opts.level > exports.Z_MAX_LEVEL) {
      throw new Error('Invalid compression level: ' + opts.level);
    }
  }

  if (opts.memLevel) {
    if (opts.memLevel < exports.Z_MIN_MEMLEVEL || opts.memLevel > exports.Z_MAX_MEMLEVEL) {
      throw new Error('Invalid memLevel: ' + opts.memLevel);
    }
  }

  if (opts.strategy) {
    if (opts.strategy != exports.Z_FILTERED && opts.strategy != exports.Z_HUFFMAN_ONLY && opts.strategy != exports.Z_RLE && opts.strategy != exports.Z_FIXED && opts.strategy != exports.Z_DEFAULT_STRATEGY) {
      throw new Error('Invalid strategy: ' + opts.strategy);
    }
  }

  if (opts.dictionary) {
    if (!Buffer.isBuffer(opts.dictionary)) {
      throw new Error('Invalid dictionary: it should be a Buffer instance');
    }
  }

  this._handle = new binding.Zlib(mode);

  var self = this;
  this._hadError = false;
  this._handle.onerror = function (message, errno) {
    // there is no way to cleanly recover.
    // continuing only obscures problems.
    _close(self);
    self._hadError = true;

    var error = new Error(message);
    error.errno = errno;
    error.code = exports.codes[errno];
    self.emit('error', error);
  };

  var level = exports.Z_DEFAULT_COMPRESSION;
  if (typeof opts.level === 'number') level = opts.level;

  var strategy = exports.Z_DEFAULT_STRATEGY;
  if (typeof opts.strategy === 'number') strategy = opts.strategy;

  this._handle.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS, level, opts.memLevel || exports.Z_DEFAULT_MEMLEVEL, strategy, opts.dictionary);

  this._buffer = Buffer.allocUnsafe(this._chunkSize);
  this._offset = 0;
  this._level = level;
  this._strategy = strategy;

  this.once('end', this.close);

  Object.defineProperty(this, '_closed', {
    get: function () {
      return !_this._handle;
    },
    configurable: true,
    enumerable: true
  });
}

util.inherits(Zlib, Transform);

Zlib.prototype.params = function (level, strategy, callback) {
  if (level < exports.Z_MIN_LEVEL || level > exports.Z_MAX_LEVEL) {
    throw new RangeError('Invalid compression level: ' + level);
  }
  if (strategy != exports.Z_FILTERED && strategy != exports.Z_HUFFMAN_ONLY && strategy != exports.Z_RLE && strategy != exports.Z_FIXED && strategy != exports.Z_DEFAULT_STRATEGY) {
    throw new TypeError('Invalid strategy: ' + strategy);
  }

  if (this._level !== level || this._strategy !== strategy) {
    var self = this;
    this.flush(binding.Z_SYNC_FLUSH, function () {
      assert(self._handle, 'zlib binding closed');
      self._handle.params(level, strategy);
      if (!self._hadError) {
        self._level = level;
        self._strategy = strategy;
        if (callback) callback();
      }
    });
  } else {
    process.nextTick(callback);
  }
};

Zlib.prototype.reset = function () {
  assert(this._handle, 'zlib binding closed');
  return this._handle.reset();
};

// This is the _flush function called by the transform class,
// internally, when the last chunk has been written.
Zlib.prototype._flush = function (callback) {
  this._transform(Buffer.alloc(0), '', callback);
};

Zlib.prototype.flush = function (kind, callback) {
  var _this2 = this;

  var ws = this._writableState;

  if (typeof kind === 'function' || kind === undefined && !callback) {
    callback = kind;
    kind = binding.Z_FULL_FLUSH;
  }

  if (ws.ended) {
    if (callback) process.nextTick(callback);
  } else if (ws.ending) {
    if (callback) this.once('end', callback);
  } else if (ws.needDrain) {
    if (callback) {
      this.once('drain', function () {
        return _this2.flush(kind, callback);
      });
    }
  } else {
    this._flushFlag = kind;
    this.write(Buffer.alloc(0), '', callback);
  }
};

Zlib.prototype.close = function (callback) {
  _close(this, callback);
  process.nextTick(emitCloseNT, this);
};

function _close(engine, callback) {
  if (callback) process.nextTick(callback);

  // Caller may invoke .close after a zlib error (which will null _handle).
  if (!engine._handle) return;

  engine._handle.close();
  engine._handle = null;
}

function emitCloseNT(self) {
  self.emit('close');
}

Zlib.prototype._transform = function (chunk, encoding, cb) {
  var flushFlag;
  var ws = this._writableState;
  var ending = ws.ending || ws.ended;
  var last = ending && (!chunk || ws.length === chunk.length);

  if (chunk !== null && !Buffer.isBuffer(chunk)) return cb(new Error('invalid input'));

  if (!this._handle) return cb(new Error('zlib binding closed'));

  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag
  // (or whatever flag was provided using opts.finishFlush).
  // If it's explicitly flushing at some other time, then we use
  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression
  // goodness.
  if (last) flushFlag = this._finishFlushFlag;else {
    flushFlag = this._flushFlag;
    // once we've flushed the last of the queue, stop flushing and
    // go back to the normal behavior.
    if (chunk.length >= ws.length) {
      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;
    }
  }

  this._processChunk(chunk, flushFlag, cb);
};

Zlib.prototype._processChunk = function (chunk, flushFlag, cb) {
  var availInBefore = chunk && chunk.length;
  var availOutBefore = this._chunkSize - this._offset;
  var inOff = 0;

  var self = this;

  var async = typeof cb === 'function';

  if (!async) {
    var buffers = [];
    var nread = 0;

    var error;
    this.on('error', function (er) {
      error = er;
    });

    assert(this._handle, 'zlib binding closed');
    do {
      var res = this._handle.writeSync(flushFlag, chunk, // in
      inOff, // in_off
      availInBefore, // in_len
      this._buffer, // out
      this._offset, //out_off
      availOutBefore); // out_len
    } while (!this._hadError && callback(res[0], res[1]));

    if (this._hadError) {
      throw error;
    }

    if (nread >= kMaxLength) {
      _close(this);
      throw new RangeError(kRangeErrorMessage);
    }

    var buf = Buffer.concat(buffers, nread);
    _close(this);

    return buf;
  }

  assert(this._handle, 'zlib binding closed');
  var req = this._handle.write(flushFlag, chunk, // in
  inOff, // in_off
  availInBefore, // in_len
  this._buffer, // out
  this._offset, //out_off
  availOutBefore); // out_len

  req.buffer = chunk;
  req.callback = callback;

  function callback(availInAfter, availOutAfter) {
    // When the callback is used in an async write, the callback's
    // context is the `req` object that was created. The req object
    // is === this._handle, and that's why it's important to null
    // out the values after they are done being used. `this._handle`
    // can stay in memory longer than the callback and buffer are needed.
    if (this) {
      this.buffer = null;
      this.callback = null;
    }

    if (self._hadError) return;

    var have = availOutBefore - availOutAfter;
    assert(have >= 0, 'have should not go down');

    if (have > 0) {
      var out = self._buffer.slice(self._offset, self._offset + have);
      self._offset += have;
      // serve some output to the consumer.
      if (async) {
        self.push(out);
      } else {
        buffers.push(out);
        nread += out.length;
      }
    }

    // exhausted the output buffer, or used all the input create a new one.
    if (availOutAfter === 0 || self._offset >= self._chunkSize) {
      availOutBefore = self._chunkSize;
      self._offset = 0;
      self._buffer = Buffer.allocUnsafe(self._chunkSize);
    }

    if (availOutAfter === 0) {
      // Not actually done.  Need to reprocess.
      // Also, update the availInBefore to the availInAfter value,
      // so that if we have to hit it a third (fourth, etc.) time,
      // it'll have the correct byte counts.
      inOff += availInBefore - availInAfter;
      availInBefore = availInAfter;

      if (!async) return true;

      var newReq = self._handle.write(flushFlag, chunk, inOff, availInBefore, self._buffer, self._offset, self._chunkSize);
      newReq.callback = callback; // this same function
      newReq.buffer = chunk;
      return;
    }

    if (!async) return false;

    // finished with the chunk.
    cb();
  }
};

util.inherits(Deflate, Zlib);
util.inherits(Inflate, Zlib);
util.inherits(Gzip, Zlib);
util.inherits(Gunzip, Zlib);
util.inherits(DeflateRaw, Zlib);
util.inherits(InflateRaw, Zlib);
util.inherits(Unzip, Zlib);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(31)))

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = __webpack_require__(50).EventEmitter;
var inherits = __webpack_require__(38);

inherits(Stream, EE);
Stream.Readable = __webpack_require__(68);
Stream.Writable = __webpack_require__(379);
Stream.Duplex = __webpack_require__(380);
Stream.Transform = __webpack_require__(381);
Stream.PassThrough = __webpack_require__(382);

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};


/***/ }),
/* 372 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = __webpack_require__(52).Buffer;
var util = __webpack_require__(374);

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}

/***/ }),
/* 374 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(376);
// On some exotic environments, it's not clear which object `setimmeidate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)))

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27), __webpack_require__(31)))

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {
/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)))

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.



module.exports = PassThrough;

var Transform = __webpack_require__(120);

/*<replacement>*/
var util = __webpack_require__(46);
util.inherits = __webpack_require__(38);
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(69);


/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(32);


/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(68).Transform


/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(68).PassThrough


/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer, process) {
/* eslint camelcase: "off" */

var assert = __webpack_require__(121);

var Zstream = __webpack_require__(386);
var zlib_deflate = __webpack_require__(387);
var zlib_inflate = __webpack_require__(390);
var constants = __webpack_require__(393);

for (var key in constants) {
  exports[key] = constants[key];
}

// zlib modes
exports.NONE = 0;
exports.DEFLATE = 1;
exports.INFLATE = 2;
exports.GZIP = 3;
exports.GUNZIP = 4;
exports.DEFLATERAW = 5;
exports.INFLATERAW = 6;
exports.UNZIP = 7;

var GZIP_HEADER_ID1 = 0x1f;
var GZIP_HEADER_ID2 = 0x8b;

/**
 * Emulate Node's zlib C++ layer for use by the JS layer in index.js
 */
function Zlib(mode) {
  if (typeof mode !== 'number' || mode < exports.DEFLATE || mode > exports.UNZIP) {
    throw new TypeError('Bad argument');
  }

  this.dictionary = null;
  this.err = 0;
  this.flush = 0;
  this.init_done = false;
  this.level = 0;
  this.memLevel = 0;
  this.mode = mode;
  this.strategy = 0;
  this.windowBits = 0;
  this.write_in_progress = false;
  this.pending_close = false;
  this.gzip_id_bytes_read = 0;
}

Zlib.prototype.close = function () {
  if (this.write_in_progress) {
    this.pending_close = true;
    return;
  }

  this.pending_close = false;

  assert(this.init_done, 'close before init');
  assert(this.mode <= exports.UNZIP);

  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {
    zlib_deflate.deflateEnd(this.strm);
  } else if (this.mode === exports.INFLATE || this.mode === exports.GUNZIP || this.mode === exports.INFLATERAW || this.mode === exports.UNZIP) {
    zlib_inflate.inflateEnd(this.strm);
  }

  this.mode = exports.NONE;

  this.dictionary = null;
};

Zlib.prototype.write = function (flush, input, in_off, in_len, out, out_off, out_len) {
  return this._write(true, flush, input, in_off, in_len, out, out_off, out_len);
};

Zlib.prototype.writeSync = function (flush, input, in_off, in_len, out, out_off, out_len) {
  return this._write(false, flush, input, in_off, in_len, out, out_off, out_len);
};

Zlib.prototype._write = function (async, flush, input, in_off, in_len, out, out_off, out_len) {
  assert.equal(arguments.length, 8);

  assert(this.init_done, 'write before init');
  assert(this.mode !== exports.NONE, 'already finalized');
  assert.equal(false, this.write_in_progress, 'write already in progress');
  assert.equal(false, this.pending_close, 'close is pending');

  this.write_in_progress = true;

  assert.equal(false, flush === undefined, 'must provide flush value');

  this.write_in_progress = true;

  if (flush !== exports.Z_NO_FLUSH && flush !== exports.Z_PARTIAL_FLUSH && flush !== exports.Z_SYNC_FLUSH && flush !== exports.Z_FULL_FLUSH && flush !== exports.Z_FINISH && flush !== exports.Z_BLOCK) {
    throw new Error('Invalid flush value');
  }

  if (input == null) {
    input = Buffer.alloc(0);
    in_len = 0;
    in_off = 0;
  }

  this.strm.avail_in = in_len;
  this.strm.input = input;
  this.strm.next_in = in_off;
  this.strm.avail_out = out_len;
  this.strm.output = out;
  this.strm.next_out = out_off;
  this.flush = flush;

  if (!async) {
    // sync version
    this._process();

    if (this._checkError()) {
      return this._afterSync();
    }
    return;
  }

  // async version
  var self = this;
  process.nextTick(function () {
    self._process();
    self._after();
  });

  return this;
};

Zlib.prototype._afterSync = function () {
  var avail_out = this.strm.avail_out;
  var avail_in = this.strm.avail_in;

  this.write_in_progress = false;

  return [avail_in, avail_out];
};

Zlib.prototype._process = function () {
  var next_expected_header_byte = null;

  // If the avail_out is left at 0, then it means that it ran out
  // of room.  If there was avail_out left over, then it means
  // that all of the input was consumed.
  switch (this.mode) {
    case exports.DEFLATE:
    case exports.GZIP:
    case exports.DEFLATERAW:
      this.err = zlib_deflate.deflate(this.strm, this.flush);
      break;
    case exports.UNZIP:
      if (this.strm.avail_in > 0) {
        next_expected_header_byte = this.strm.next_in;
      }

      switch (this.gzip_id_bytes_read) {
        case 0:
          if (next_expected_header_byte === null) {
            break;
          }

          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID1) {
            this.gzip_id_bytes_read = 1;
            next_expected_header_byte++;

            if (this.strm.avail_in === 1) {
              // The only available byte was already read.
              break;
            }
          } else {
            this.mode = exports.INFLATE;
            break;
          }

        // fallthrough
        case 1:
          if (next_expected_header_byte === null) {
            break;
          }

          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID2) {
            this.gzip_id_bytes_read = 2;
            this.mode = exports.GUNZIP;
          } else {
            // There is no actual difference between INFLATE and INFLATERAW
            // (after initialization).
            this.mode = exports.INFLATE;
          }

          break;
        default:
          throw new Error('invalid number of gzip magic number bytes read');
      }

    // fallthrough
    case exports.INFLATE:
    case exports.GUNZIP:
    case exports.INFLATERAW:
      this.err = zlib_inflate.inflate(this.strm, this.flush

      // If data was encoded with dictionary
      );if (this.err === exports.Z_NEED_DICT && this.dictionary) {
        // Load it
        this.err = zlib_inflate.inflateSetDictionary(this.strm, this.dictionary);
        if (this.err === exports.Z_OK) {
          // And try to decode again
          this.err = zlib_inflate.inflate(this.strm, this.flush);
        } else if (this.err === exports.Z_DATA_ERROR) {
          // Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.
          // Make it possible for After() to tell a bad dictionary from bad
          // input.
          this.err = exports.Z_NEED_DICT;
        }
      }
      while (this.strm.avail_in > 0 && this.mode === exports.GUNZIP && this.err === exports.Z_STREAM_END && this.strm.next_in[0] !== 0x00) {
        // Bytes remain in input buffer. Perhaps this is another compressed
        // member in the same archive, or just trailing garbage.
        // Trailing zero bytes are okay, though, since they are frequently
        // used for padding.

        this.reset();
        this.err = zlib_inflate.inflate(this.strm, this.flush);
      }
      break;
    default:
      throw new Error('Unknown mode ' + this.mode);
  }
};

Zlib.prototype._checkError = function () {
  // Acceptable error states depend on the type of zlib stream.
  switch (this.err) {
    case exports.Z_OK:
    case exports.Z_BUF_ERROR:
      if (this.strm.avail_out !== 0 && this.flush === exports.Z_FINISH) {
        this._error('unexpected end of file');
        return false;
      }
      break;
    case exports.Z_STREAM_END:
      // normal statuses, not fatal
      break;
    case exports.Z_NEED_DICT:
      if (this.dictionary == null) {
        this._error('Missing dictionary');
      } else {
        this._error('Bad dictionary');
      }
      return false;
    default:
      // something else.
      this._error('Zlib error');
      return false;
  }

  return true;
};

Zlib.prototype._after = function () {
  if (!this._checkError()) {
    return;
  }

  var avail_out = this.strm.avail_out;
  var avail_in = this.strm.avail_in;

  this.write_in_progress = false;

  // call the write() cb
  this.callback(avail_in, avail_out);

  if (this.pending_close) {
    this.close();
  }
};

Zlib.prototype._error = function (message) {
  if (this.strm.msg) {
    message = this.strm.msg;
  }
  this.onerror(message, this.err

  // no hope of rescue.
  );this.write_in_progress = false;
  if (this.pending_close) {
    this.close();
  }
};

Zlib.prototype.init = function (windowBits, level, memLevel, strategy, dictionary) {
  assert(arguments.length === 4 || arguments.length === 5, 'init(windowBits, level, memLevel, strategy, [dictionary])');

  assert(windowBits >= 8 && windowBits <= 15, 'invalid windowBits');
  assert(level >= -1 && level <= 9, 'invalid compression level');

  assert(memLevel >= 1 && memLevel <= 9, 'invalid memlevel');

  assert(strategy === exports.Z_FILTERED || strategy === exports.Z_HUFFMAN_ONLY || strategy === exports.Z_RLE || strategy === exports.Z_FIXED || strategy === exports.Z_DEFAULT_STRATEGY, 'invalid strategy');

  this._init(level, windowBits, memLevel, strategy, dictionary);
  this._setDictionary();
};

Zlib.prototype.params = function () {
  throw new Error('deflateParams Not supported');
};

Zlib.prototype.reset = function () {
  this._reset();
  this._setDictionary();
};

Zlib.prototype._init = function (level, windowBits, memLevel, strategy, dictionary) {
  this.level = level;
  this.windowBits = windowBits;
  this.memLevel = memLevel;
  this.strategy = strategy;

  this.flush = exports.Z_NO_FLUSH;

  this.err = exports.Z_OK;

  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP) {
    this.windowBits += 16;
  }

  if (this.mode === exports.UNZIP) {
    this.windowBits += 32;
  }

  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW) {
    this.windowBits = -1 * this.windowBits;
  }

  this.strm = new Zstream();

  switch (this.mode) {
    case exports.DEFLATE:
    case exports.GZIP:
    case exports.DEFLATERAW:
      this.err = zlib_deflate.deflateInit2(this.strm, this.level, exports.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);
      break;
    case exports.INFLATE:
    case exports.GUNZIP:
    case exports.INFLATERAW:
    case exports.UNZIP:
      this.err = zlib_inflate.inflateInit2(this.strm, this.windowBits);
      break;
    default:
      throw new Error('Unknown mode ' + this.mode);
  }

  if (this.err !== exports.Z_OK) {
    this._error('Init error');
  }

  this.dictionary = dictionary;

  this.write_in_progress = false;
  this.init_done = true;
};

Zlib.prototype._setDictionary = function () {
  if (this.dictionary == null) {
    return;
  }

  this.err = exports.Z_OK;

  switch (this.mode) {
    case exports.DEFLATE:
    case exports.DEFLATERAW:
      this.err = zlib_deflate.deflateSetDictionary(this.strm, this.dictionary);
      break;
    default:
      break;
  }

  if (this.err !== exports.Z_OK) {
    this._error('Failed to set dictionary');
  }
};

Zlib.prototype._reset = function () {
  this.err = exports.Z_OK;

  switch (this.mode) {
    case exports.DEFLATE:
    case exports.DEFLATERAW:
    case exports.GZIP:
      this.err = zlib_deflate.deflateReset(this.strm);
      break;
    case exports.INFLATE:
    case exports.INFLATERAW:
    case exports.GUNZIP:
      this.err = zlib_inflate.inflateReset(this.strm);
      break;
    default:
      break;
  }

  if (this.err !== exports.Z_OK) {
    this._error('Failed to reset stream');
  }
};

exports.Zlib = Zlib;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(30).Buffer, __webpack_require__(31)))

/***/ }),
/* 384 */
/***/ (function(module, exports) {

module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}

/***/ }),
/* 385 */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function ZStream() {
  /* next input byte */
  this.input = null; // JS specific, because we have no pointers
  this.next_in = 0;
  /* number of bytes available at input */
  this.avail_in = 0;
  /* total number of input bytes read so far */
  this.total_in = 0;
  /* next output byte should be put there */
  this.output = null; // JS specific, because we have no pointers
  this.next_out = 0;
  /* remaining free space at output */
  this.avail_out = 0;
  /* total number of bytes output so far */
  this.total_out = 0;
  /* last error message, NULL if no error */
  this.msg = ''/*Z_NULL*/;
  /* not visible by applications */
  this.state = null;
  /* best guess about the data type: binary or text */
  this.data_type = 2/*Z_UNKNOWN*/;
  /* adler32 value of the uncompressed data */
  this.adler = 0;
}

module.exports = ZStream;


/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils   = __webpack_require__(53);
var trees   = __webpack_require__(388);
var adler32 = __webpack_require__(123);
var crc32   = __webpack_require__(124);
var msg     = __webpack_require__(389);

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
var Z_NO_FLUSH      = 0;
var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
//var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
//var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
//var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;


/* compression levels */
//var Z_NO_COMPRESSION      = 0;
//var Z_BEST_SPEED          = 1;
//var Z_BEST_COMPRESSION    = 9;
var Z_DEFAULT_COMPRESSION = -1;


var Z_FILTERED            = 1;
var Z_HUFFMAN_ONLY        = 2;
var Z_RLE                 = 3;
var Z_FIXED               = 4;
var Z_DEFAULT_STRATEGY    = 0;

/* Possible values of the data_type field (though see inflate()) */
//var Z_BINARY              = 0;
//var Z_TEXT                = 1;
//var Z_ASCII               = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;


/* The deflate compression method */
var Z_DEFLATED  = 8;

/*============================================================================*/


var MAX_MEM_LEVEL = 9;
/* Maximum value for memLevel in deflateInit2 */
var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_MEM_LEVEL = 8;


var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */
var LITERALS      = 256;
/* number of literal bytes 0..255 */
var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */
var D_CODES       = 30;
/* number of distance codes */
var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */
var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */
var MAX_BITS  = 15;
/* All codes must not exceed MAX_BITS bits */

var MIN_MATCH = 3;
var MAX_MATCH = 258;
var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);

var PRESET_DICT = 0x20;

var INIT_STATE = 42;
var EXTRA_STATE = 69;
var NAME_STATE = 73;
var COMMENT_STATE = 91;
var HCRC_STATE = 103;
var BUSY_STATE = 113;
var FINISH_STATE = 666;

var BS_NEED_MORE      = 1; /* block not completed, need more input or more output */
var BS_BLOCK_DONE     = 2; /* block flush performed */
var BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
var BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */

var OS_CODE = 0x03; // Unix :) . Don't detect, use this default.

function err(strm, errorCode) {
  strm.msg = msg[errorCode];
  return errorCode;
}

function rank(f) {
  return ((f) << 1) - ((f) > 4 ? 9 : 0);
}

function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }


/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */
function flush_pending(strm) {
  var s = strm.state;

  //_tr_flush_bits(s);
  var len = s.pending;
  if (len > strm.avail_out) {
    len = strm.avail_out;
  }
  if (len === 0) { return; }

  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);
  strm.next_out += len;
  s.pending_out += len;
  strm.total_out += len;
  strm.avail_out -= len;
  s.pending -= len;
  if (s.pending === 0) {
    s.pending_out = 0;
  }
}


function flush_block_only(s, last) {
  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);
  s.block_start = s.strstart;
  flush_pending(s.strm);
}


function put_byte(s, b) {
  s.pending_buf[s.pending++] = b;
}


/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */
function putShortMSB(s, b) {
//  put_byte(s, (Byte)(b >> 8));
//  put_byte(s, (Byte)(b & 0xff));
  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
  s.pending_buf[s.pending++] = b & 0xff;
}


/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */
function read_buf(strm, buf, start, size) {
  var len = strm.avail_in;

  if (len > size) { len = size; }
  if (len === 0) { return 0; }

  strm.avail_in -= len;

  // zmemcpy(buf, strm->next_in, len);
  utils.arraySet(buf, strm.input, strm.next_in, len, start);
  if (strm.state.wrap === 1) {
    strm.adler = adler32(strm.adler, buf, len, start);
  }

  else if (strm.state.wrap === 2) {
    strm.adler = crc32(strm.adler, buf, len, start);
  }

  strm.next_in += len;
  strm.total_in += len;

  return len;
}


/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */
function longest_match(s, cur_match) {
  var chain_length = s.max_chain_length;      /* max hash chain length */
  var scan = s.strstart; /* current string */
  var match;                       /* matched string */
  var len;                           /* length of current match */
  var best_len = s.prev_length;              /* best match length so far */
  var nice_match = s.nice_match;             /* stop if match long enough */
  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?
      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;

  var _win = s.window; // shortcut

  var wmask = s.w_mask;
  var prev  = s.prev;

  /* Stop when cur_match becomes <= limit. To simplify the code,
   * we prevent matches with the string of window index 0.
   */

  var strend = s.strstart + MAX_MATCH;
  var scan_end1  = _win[scan + best_len - 1];
  var scan_end   = _win[scan + best_len];

  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */
  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

  /* Do not waste too much time if we already have a good match: */
  if (s.prev_length >= s.good_match) {
    chain_length >>= 2;
  }
  /* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */
  if (nice_match > s.lookahead) { nice_match = s.lookahead; }

  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

  do {
    // Assert(cur_match < s->strstart, "no future");
    match = cur_match;

    /* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

    if (_win[match + best_len]     !== scan_end  ||
        _win[match + best_len - 1] !== scan_end1 ||
        _win[match]                !== _win[scan] ||
        _win[++match]              !== _win[scan + 1]) {
      continue;
    }

    /* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */
    scan += 2;
    match++;
    // Assert(*scan == *match, "match[2]?");

    /* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */
    do {
      /*jshint noempty:false*/
    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             scan < strend);

    // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

    len = MAX_MATCH - (strend - scan);
    scan = strend - MAX_MATCH;

    if (len > best_len) {
      s.match_start = cur_match;
      best_len = len;
      if (len >= nice_match) {
        break;
      }
      scan_end1  = _win[scan + best_len - 1];
      scan_end   = _win[scan + best_len];
    }
  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);

  if (best_len <= s.lookahead) {
    return best_len;
  }
  return s.lookahead;
}


/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */
function fill_window(s) {
  var _w_size = s.w_size;
  var p, n, m, more, str;

  //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

  do {
    more = s.window_size - s.lookahead - s.strstart;

    // JS ints have 32 bit, block below not needed
    /* Deal with !@#$% 64K limit: */
    //if (sizeof(int) <= 2) {
    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
    //        more = wsize;
    //
    //  } else if (more == (unsigned)(-1)) {
    //        /* Very unlikely, but possible on 16 bit machine if
    //         * strstart == 0 && lookahead == 1 (input done a byte at time)
    //         */
    //        more--;
    //    }
    //}


    /* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */
    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {

      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);
      s.match_start -= _w_size;
      s.strstart -= _w_size;
      /* we now have strstart >= MAX_DIST */
      s.block_start -= _w_size;

      /* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

      n = s.hash_size;
      p = n;
      do {
        m = s.head[--p];
        s.head[p] = (m >= _w_size ? m - _w_size : 0);
      } while (--n);

      n = _w_size;
      p = n;
      do {
        m = s.prev[--p];
        s.prev[p] = (m >= _w_size ? m - _w_size : 0);
        /* If n is not on any hash chain, prev[n] is garbage but
         * its value will never be used.
         */
      } while (--n);

      more += _w_size;
    }
    if (s.strm.avail_in === 0) {
      break;
    }

    /* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */
    //Assert(more >= 2, "more < 2");
    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
    s.lookahead += n;

    /* Initialize the hash value now that we have some input: */
    if (s.lookahead + s.insert >= MIN_MATCH) {
      str = s.strstart - s.insert;
      s.ins_h = s.window[str];

      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;
//#if MIN_MATCH != 3
//        Call update_hash() MIN_MATCH-3 more times
//#endif
      while (s.insert) {
        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

        s.prev[str & s.w_mask] = s.head[s.ins_h];
        s.head[s.ins_h] = str;
        str++;
        s.insert--;
        if (s.lookahead + s.insert < MIN_MATCH) {
          break;
        }
      }
    }
    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);

  /* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */
//  if (s.high_water < s.window_size) {
//    var curr = s.strstart + s.lookahead;
//    var init = 0;
//
//    if (s.high_water < curr) {
//      /* Previous high water mark below current data -- zero WIN_INIT
//       * bytes or up to end of window, whichever is less.
//       */
//      init = s.window_size - curr;
//      if (init > WIN_INIT)
//        init = WIN_INIT;
//      zmemzero(s->window + curr, (unsigned)init);
//      s->high_water = curr + init;
//    }
//    else if (s->high_water < (ulg)curr + WIN_INIT) {
//      /* High water mark at or above current data, but below current data
//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
//       * to end of window, whichever is less.
//       */
//      init = (ulg)curr + WIN_INIT - s->high_water;
//      if (init > s->window_size - s->high_water)
//        init = s->window_size - s->high_water;
//      zmemzero(s->window + s->high_water, (unsigned)init);
//      s->high_water += init;
//    }
//  }
//
//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
//    "not enough room for search");
}

/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 * This function does not insert new strings in the dictionary since
 * uncompressible data is probably not useful. This function is used
 * only for the level=0 compression option.
 * NOTE: this function should be optimized to avoid extra copying from
 * window to pending_buf.
 */
function deflate_stored(s, flush) {
  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */
  var max_block_size = 0xffff;

  if (max_block_size > s.pending_buf_size - 5) {
    max_block_size = s.pending_buf_size - 5;
  }

  /* Copy as much as possible from input to output: */
  for (;;) {
    /* Fill the window as much as possible: */
    if (s.lookahead <= 1) {

      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||
      //  s->block_start >= (long)s->w_size, "slide too late");
//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
//        s.block_start >= s.w_size)) {
//        throw  new Error("slide too late");
//      }

      fill_window(s);
      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }

      if (s.lookahead === 0) {
        break;
      }
      /* flush the current block */
    }
    //Assert(s->block_start >= 0L, "block gone");
//    if (s.block_start < 0) throw new Error("block gone");

    s.strstart += s.lookahead;
    s.lookahead = 0;

    /* Emit a stored block if pending_buf will be full: */
    var max_start = s.block_start + max_block_size;

    if (s.strstart === 0 || s.strstart >= max_start) {
      /* strstart == 0 is possible when wraparound on 16-bit machine */
      s.lookahead = s.strstart - max_start;
      s.strstart = max_start;
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/


    }
    /* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */
    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }

  s.insert = 0;

  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }

  if (s.strstart > s.block_start) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_NEED_MORE;
}

/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */
function deflate_fast(s, flush) {
  var hash_head;        /* head of the hash chain */
  var bflush;           /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break; /* flush the current block */
      }
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */
    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */
    }
    if (s.match_length >= MIN_MATCH) {
      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

      /*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;

      /* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */
      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {
        s.match_length--; /* string at strstart already in table */
        do {
          s.strstart++;
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
          /* strstart never exceeds WSIZE-MAX_MATCH, so there are
           * always MIN_MATCH bytes ahead.
           */
        } while (--s.match_length !== 0);
        s.strstart++;
      } else
      {
        s.strstart += s.match_length;
        s.match_length = 0;
        s.ins_h = s.window[s.strstart];
        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;

//#if MIN_MATCH != 3
//                Call UPDATE_HASH() MIN_MATCH-3 more times
//#endif
        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
         * matter since it will be recomputed at next deflate call.
         */
      }
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s.window[s.strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */
function deflate_slow(s, flush) {
  var hash_head;          /* head of hash chain */
  var bflush;              /* set if current block must be flushed */

  var max_insert;

  /* Process the input block. */
  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     */
    s.prev_length = s.match_length;
    s.prev_match = s.match_start;
    s.match_length = MIN_MATCH - 1;

    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&
        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */

      if (s.match_length <= 5 &&
         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {

        /* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */
        s.match_length = MIN_MATCH - 1;
      }
    }
    /* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */
    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
      max_insert = s.strstart + s.lookahead - MIN_MATCH;
      /* Do not insert strings in hash table beyond this. */

      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);

      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/
      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);
      /* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */
      s.lookahead -= s.prev_length - 1;
      s.prev_length -= 2;
      do {
        if (++s.strstart <= max_insert) {
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
        }
      } while (--s.prev_length !== 0);
      s.match_available = 0;
      s.match_length = MIN_MATCH - 1;
      s.strstart++;

      if (bflush) {
        /*** FLUSH_BLOCK(s, 0); ***/
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
        /***/
      }

    } else if (s.match_available) {
      /* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */
      //Tracevv((stderr,"%c", s->window[s->strstart-1]));
      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

      if (bflush) {
        /*** FLUSH_BLOCK_ONLY(s, 0) ***/
        flush_block_only(s, false);
        /***/
      }
      s.strstart++;
      s.lookahead--;
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    } else {
      /* There is no previous match to compare with, wait for
       * the next step to decide.
       */
      s.match_available = 1;
      s.strstart++;
      s.lookahead--;
    }
  }
  //Assert (flush != Z_NO_FLUSH, "no flush?");
  if (s.match_available) {
    //Tracevv((stderr,"%c", s->window[s->strstart-1]));
    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

    s.match_available = 0;
  }
  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_BLOCK_DONE;
}


/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */
function deflate_rle(s, flush) {
  var bflush;            /* set if current block must be flushed */
  var prev;              /* byte at distance one to match */
  var scan, strend;      /* scan goes up to strend for length of run */

  var _win = s.window;

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */
    if (s.lookahead <= MAX_MATCH) {
      fill_window(s);
      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* See how many times the previous byte repeats */
    s.match_length = 0;
    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
      scan = s.strstart - 1;
      prev = _win[scan];
      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
        strend = s.strstart + MAX_MATCH;
        do {
          /*jshint noempty:false*/
        } while (prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 scan < strend);
        s.match_length = MAX_MATCH - (strend - scan);
        if (s.match_length > s.lookahead) {
          s.match_length = s.lookahead;
        }
      }
      //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
    }

    /* Emit match if have run of MIN_MATCH or longer, else emit literal */
    if (s.match_length >= MIN_MATCH) {
      //check_match(s, s.strstart, s.strstart - 1, s.match_length);

      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;
      s.strstart += s.match_length;
      s.match_length = 0;
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s->window[s->strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */
function deflate_huff(s, flush) {
  var bflush;             /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we have a literal to write. */
    if (s.lookahead === 0) {
      fill_window(s);
      if (s.lookahead === 0) {
        if (flush === Z_NO_FLUSH) {
          return BS_NEED_MORE;
        }
        break;      /* flush the current block */
      }
    }

    /* Output a literal byte */
    s.match_length = 0;
    //Tracevv((stderr,"%c", s->window[s->strstart]));
    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
    s.lookahead--;
    s.strstart++;
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */
function Config(good_length, max_lazy, nice_length, max_chain, func) {
  this.good_length = good_length;
  this.max_lazy = max_lazy;
  this.nice_length = nice_length;
  this.max_chain = max_chain;
  this.func = func;
}

var configuration_table;

configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */

  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */
];


/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */
function lm_init(s) {
  s.window_size = 2 * s.w_size;

  /*** CLEAR_HASH(s); ***/
  zero(s.head); // Fill with NIL (= 0);

  /* Set the default configuration parameters:
   */
  s.max_lazy_match = configuration_table[s.level].max_lazy;
  s.good_match = configuration_table[s.level].good_length;
  s.nice_match = configuration_table[s.level].nice_length;
  s.max_chain_length = configuration_table[s.level].max_chain;

  s.strstart = 0;
  s.block_start = 0;
  s.lookahead = 0;
  s.insert = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  s.ins_h = 0;
}


function DeflateState() {
  this.strm = null;            /* pointer back to this zlib stream */
  this.status = 0;            /* as the name implies */
  this.pending_buf = null;      /* output still pending */
  this.pending_buf_size = 0;  /* size of pending_buf */
  this.pending_out = 0;       /* next pending byte to output to the stream */
  this.pending = 0;           /* nb of bytes in the pending buffer */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.gzhead = null;         /* gzip header information to write */
  this.gzindex = 0;           /* where in extra, name, or comment */
  this.method = Z_DEFLATED; /* can only be DEFLATED */
  this.last_flush = -1;   /* value of flush param for previous deflate call */

  this.w_size = 0;  /* LZ77 window size (32K by default) */
  this.w_bits = 0;  /* log2(w_size)  (8..16) */
  this.w_mask = 0;  /* w_size - 1 */

  this.window = null;
  /* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

  this.window_size = 0;
  /* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

  this.prev = null;
  /* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

  this.head = null;   /* Heads of the hash chains or NIL. */

  this.ins_h = 0;       /* hash index of string to be inserted */
  this.hash_size = 0;   /* number of elements in hash table */
  this.hash_bits = 0;   /* log2(hash_size) */
  this.hash_mask = 0;   /* hash_size-1 */

  this.hash_shift = 0;
  /* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

  this.block_start = 0;
  /* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

  this.match_length = 0;      /* length of best match */
  this.prev_match = 0;        /* previous match */
  this.match_available = 0;   /* set if previous match exists */
  this.strstart = 0;          /* start of string to insert */
  this.match_start = 0;       /* start of matching string */
  this.lookahead = 0;         /* number of valid bytes ahead in window */

  this.prev_length = 0;
  /* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

  this.max_chain_length = 0;
  /* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

  this.max_lazy_match = 0;
  /* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */
  // That's alias to max_lazy_match, don't use directly
  //this.max_insert_length = 0;
  /* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

  this.level = 0;     /* compression level (1..9) */
  this.strategy = 0;  /* favor or force Huffman coding*/

  this.good_match = 0;
  /* Use a faster search when the previous match is longer than this */

  this.nice_match = 0; /* Stop searching when current match exceeds this */

              /* used by trees.c: */

  /* Didn't use ct_data typedef below to suppress compiler warning */

  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

  // Use flat array of DOUBLE size, with interleaved fata,
  // because JS does not support effective
  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);
  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);
  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);
  zero(this.dyn_ltree);
  zero(this.dyn_dtree);
  zero(this.bl_tree);

  this.l_desc   = null;         /* desc. for literal tree */
  this.d_desc   = null;         /* desc. for distance tree */
  this.bl_desc  = null;         /* desc. for bit length tree */

  //ush bl_count[MAX_BITS+1];
  this.bl_count = new utils.Buf16(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */
  zero(this.heap);

  this.heap_len = 0;               /* number of elements in the heap */
  this.heap_max = 0;               /* element of largest frequency */
  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];
  zero(this.depth);
  /* Depth of each subtree used as tie breaker for trees of equal frequency
   */

  this.l_buf = 0;          /* buffer index for literals or lengths */

  this.lit_bufsize = 0;
  /* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

  this.last_lit = 0;      /* running index in l_buf */

  this.d_buf = 0;
  /* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */

  this.opt_len = 0;       /* bit length of current block with optimal trees */
  this.static_len = 0;    /* bit length of current block with static trees */
  this.matches = 0;       /* number of string matches in current block */
  this.insert = 0;        /* bytes at end of window left to insert */


  this.bi_buf = 0;
  /* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */
  this.bi_valid = 0;
  /* Number of valid bits in bi_buf.  All bits above the last valid bit
   * are always zero.
   */

  // Used for window memory init. We safely ignore it for JS. That makes
  // sense only for pointers and memory check tools.
  //this.high_water = 0;
  /* High water mark offset in window for initialized bytes -- bytes above
   * this are set to zero in order to avoid memory check warnings when
   * longest match routines access bytes past the input.  This is then
   * updated to the new high water mark.
   */
}


function deflateResetKeep(strm) {
  var s;

  if (!strm || !strm.state) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.total_in = strm.total_out = 0;
  strm.data_type = Z_UNKNOWN;

  s = strm.state;
  s.pending = 0;
  s.pending_out = 0;

  if (s.wrap < 0) {
    s.wrap = -s.wrap;
    /* was made negative by deflate(..., Z_FINISH); */
  }
  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);
  strm.adler = (s.wrap === 2) ?
    0  // crc32(0, Z_NULL, 0)
  :
    1; // adler32(0, Z_NULL, 0)
  s.last_flush = Z_NO_FLUSH;
  trees._tr_init(s);
  return Z_OK;
}


function deflateReset(strm) {
  var ret = deflateResetKeep(strm);
  if (ret === Z_OK) {
    lm_init(strm.state);
  }
  return ret;
}


function deflateSetHeader(strm, head) {
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }
  strm.state.gzhead = head;
  return Z_OK;
}


function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {
  if (!strm) { // === Z_NULL
    return Z_STREAM_ERROR;
  }
  var wrap = 1;

  if (level === Z_DEFAULT_COMPRESSION) {
    level = 6;
  }

  if (windowBits < 0) { /* suppress zlib wrapper */
    wrap = 0;
    windowBits = -windowBits;
  }

  else if (windowBits > 15) {
    wrap = 2;           /* write gzip wrapper instead */
    windowBits -= 16;
  }


  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||
    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||
    strategy < 0 || strategy > Z_FIXED) {
    return err(strm, Z_STREAM_ERROR);
  }


  if (windowBits === 8) {
    windowBits = 9;
  }
  /* until 256-byte window bug fixed */

  var s = new DeflateState();

  strm.state = s;
  s.strm = strm;

  s.wrap = wrap;
  s.gzhead = null;
  s.w_bits = windowBits;
  s.w_size = 1 << s.w_bits;
  s.w_mask = s.w_size - 1;

  s.hash_bits = memLevel + 7;
  s.hash_size = 1 << s.hash_bits;
  s.hash_mask = s.hash_size - 1;
  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);

  s.window = new utils.Buf8(s.w_size * 2);
  s.head = new utils.Buf16(s.hash_size);
  s.prev = new utils.Buf16(s.w_size);

  // Don't need mem init magic for JS.
  //s.high_water = 0;  /* nothing written to s->window yet */

  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */

  s.pending_buf_size = s.lit_bufsize * 4;

  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);
  //s->pending_buf = (uchf *) overlay;
  s.pending_buf = new utils.Buf8(s.pending_buf_size);

  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)
  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);
  s.d_buf = 1 * s.lit_bufsize;

  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;
  s.l_buf = (1 + 2) * s.lit_bufsize;

  s.level = level;
  s.strategy = strategy;
  s.method = method;

  return deflateReset(strm);
}

function deflateInit(strm, level) {
  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
}


function deflate(strm, flush) {
  var old_flush, s;
  var beg, val; // for gzip header write only

  if (!strm || !strm.state ||
    flush > Z_BLOCK || flush < 0) {
    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
  }

  s = strm.state;

  if (!strm.output ||
      (!strm.input && strm.avail_in !== 0) ||
      (s.status === FINISH_STATE && flush !== Z_FINISH)) {
    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);
  }

  s.strm = strm; /* just in case */
  old_flush = s.last_flush;
  s.last_flush = flush;

  /* Write the header */
  if (s.status === INIT_STATE) {

    if (s.wrap === 2) { // GZIP header
      strm.adler = 0;  //crc32(0L, Z_NULL, 0);
      put_byte(s, 31);
      put_byte(s, 139);
      put_byte(s, 8);
      if (!s.gzhead) { // s->gzhead == Z_NULL
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, OS_CODE);
        s.status = BUSY_STATE;
      }
      else {
        put_byte(s, (s.gzhead.text ? 1 : 0) +
                    (s.gzhead.hcrc ? 2 : 0) +
                    (!s.gzhead.extra ? 0 : 4) +
                    (!s.gzhead.name ? 0 : 8) +
                    (!s.gzhead.comment ? 0 : 16)
                );
        put_byte(s, s.gzhead.time & 0xff);
        put_byte(s, (s.gzhead.time >> 8) & 0xff);
        put_byte(s, (s.gzhead.time >> 16) & 0xff);
        put_byte(s, (s.gzhead.time >> 24) & 0xff);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, s.gzhead.os & 0xff);
        if (s.gzhead.extra && s.gzhead.extra.length) {
          put_byte(s, s.gzhead.extra.length & 0xff);
          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
        }
        if (s.gzhead.hcrc) {
          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
        }
        s.gzindex = 0;
        s.status = EXTRA_STATE;
      }
    }
    else // DEFLATE header
    {
      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;
      var level_flags = -1;

      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
        level_flags = 0;
      } else if (s.level < 6) {
        level_flags = 1;
      } else if (s.level === 6) {
        level_flags = 2;
      } else {
        level_flags = 3;
      }
      header |= (level_flags << 6);
      if (s.strstart !== 0) { header |= PRESET_DICT; }
      header += 31 - (header % 31);

      s.status = BUSY_STATE;
      putShortMSB(s, header);

      /* Save the adler32 of the preset dictionary: */
      if (s.strstart !== 0) {
        putShortMSB(s, strm.adler >>> 16);
        putShortMSB(s, strm.adler & 0xffff);
      }
      strm.adler = 1; // adler32(0L, Z_NULL, 0);
    }
  }

//#ifdef GZIP
  if (s.status === EXTRA_STATE) {
    if (s.gzhead.extra/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */

      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            break;
          }
        }
        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);
        s.gzindex++;
      }
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (s.gzindex === s.gzhead.extra.length) {
        s.gzindex = 0;
        s.status = NAME_STATE;
      }
    }
    else {
      s.status = NAME_STATE;
    }
  }
  if (s.status === NAME_STATE) {
    if (s.gzhead.name/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.name.length) {
          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.gzindex = 0;
        s.status = COMMENT_STATE;
      }
    }
    else {
      s.status = COMMENT_STATE;
    }
  }
  if (s.status === COMMENT_STATE) {
    if (s.gzhead.comment/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.comment.length) {
          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.status = HCRC_STATE;
      }
    }
    else {
      s.status = HCRC_STATE;
    }
  }
  if (s.status === HCRC_STATE) {
    if (s.gzhead.hcrc) {
      if (s.pending + 2 > s.pending_buf_size) {
        flush_pending(strm);
      }
      if (s.pending + 2 <= s.pending_buf_size) {
        put_byte(s, strm.adler & 0xff);
        put_byte(s, (strm.adler >> 8) & 0xff);
        strm.adler = 0; //crc32(0L, Z_NULL, 0);
        s.status = BUSY_STATE;
      }
    }
    else {
      s.status = BUSY_STATE;
    }
  }
//#endif

  /* Flush as much pending output as possible */
  if (s.pending !== 0) {
    flush_pending(strm);
    if (strm.avail_out === 0) {
      /* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */
      s.last_flush = -1;
      return Z_OK;
    }

    /* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */
  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&
    flush !== Z_FINISH) {
    return err(strm, Z_BUF_ERROR);
  }

  /* User must not provide more input after the first FINISH: */
  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
    return err(strm, Z_BUF_ERROR);
  }

  /* Start a new block or continue the current one.
   */
  if (strm.avail_in !== 0 || s.lookahead !== 0 ||
    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {
    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :
      (s.strategy === Z_RLE ? deflate_rle(s, flush) :
        configuration_table[s.level].func(s, flush));

    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
      s.status = FINISH_STATE;
    }
    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
      if (strm.avail_out === 0) {
        s.last_flush = -1;
        /* avoid BUF_ERROR next call, see above */
      }
      return Z_OK;
      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */
    }
    if (bstate === BS_BLOCK_DONE) {
      if (flush === Z_PARTIAL_FLUSH) {
        trees._tr_align(s);
      }
      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */

        trees._tr_stored_block(s, 0, 0, false);
        /* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */
        if (flush === Z_FULL_FLUSH) {
          /*** CLEAR_HASH(s); ***/             /* forget history */
          zero(s.head); // Fill with NIL (= 0);

          if (s.lookahead === 0) {
            s.strstart = 0;
            s.block_start = 0;
            s.insert = 0;
          }
        }
      }
      flush_pending(strm);
      if (strm.avail_out === 0) {
        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */
        return Z_OK;
      }
    }
  }
  //Assert(strm->avail_out > 0, "bug2");
  //if (strm.avail_out <= 0) { throw new Error("bug2");}

  if (flush !== Z_FINISH) { return Z_OK; }
  if (s.wrap <= 0) { return Z_STREAM_END; }

  /* Write the trailer */
  if (s.wrap === 2) {
    put_byte(s, strm.adler & 0xff);
    put_byte(s, (strm.adler >> 8) & 0xff);
    put_byte(s, (strm.adler >> 16) & 0xff);
    put_byte(s, (strm.adler >> 24) & 0xff);
    put_byte(s, strm.total_in & 0xff);
    put_byte(s, (strm.total_in >> 8) & 0xff);
    put_byte(s, (strm.total_in >> 16) & 0xff);
    put_byte(s, (strm.total_in >> 24) & 0xff);
  }
  else
  {
    putShortMSB(s, strm.adler >>> 16);
    putShortMSB(s, strm.adler & 0xffff);
  }

  flush_pending(strm);
  /* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */
  if (s.wrap > 0) { s.wrap = -s.wrap; }
  /* write the trailer only once! */
  return s.pending !== 0 ? Z_OK : Z_STREAM_END;
}

function deflateEnd(strm) {
  var status;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  status = strm.state.status;
  if (status !== INIT_STATE &&
    status !== EXTRA_STATE &&
    status !== NAME_STATE &&
    status !== COMMENT_STATE &&
    status !== HCRC_STATE &&
    status !== BUSY_STATE &&
    status !== FINISH_STATE
  ) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.state = null;

  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
}


/* =========================================================================
 * Initializes the compression dictionary from the given byte
 * sequence without producing any compressed output.
 */
function deflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var s;
  var str, n;
  var wrap;
  var avail;
  var next;
  var input;
  var tmpDict;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  s = strm.state;
  wrap = s.wrap;

  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {
    return Z_STREAM_ERROR;
  }

  /* when using zlib wrappers, compute Adler-32 for provided dictionary */
  if (wrap === 1) {
    /* adler32(strm->adler, dictionary, dictLength); */
    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
  }

  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */

  /* if dictionary would fill window, just replace the history */
  if (dictLength >= s.w_size) {
    if (wrap === 0) {            /* already empty otherwise */
      /*** CLEAR_HASH(s); ***/
      zero(s.head); // Fill with NIL (= 0);
      s.strstart = 0;
      s.block_start = 0;
      s.insert = 0;
    }
    /* use the tail */
    // dictionary = dictionary.slice(dictLength - s.w_size);
    tmpDict = new utils.Buf8(s.w_size);
    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);
    dictionary = tmpDict;
    dictLength = s.w_size;
  }
  /* insert dictionary into window and hash */
  avail = strm.avail_in;
  next = strm.next_in;
  input = strm.input;
  strm.avail_in = dictLength;
  strm.next_in = 0;
  strm.input = dictionary;
  fill_window(s);
  while (s.lookahead >= MIN_MATCH) {
    str = s.strstart;
    n = s.lookahead - (MIN_MATCH - 1);
    do {
      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

      s.prev[str & s.w_mask] = s.head[s.ins_h];

      s.head[s.ins_h] = str;
      str++;
    } while (--n);
    s.strstart = str;
    s.lookahead = MIN_MATCH - 1;
    fill_window(s);
  }
  s.strstart += s.lookahead;
  s.block_start = s.strstart;
  s.insert = s.lookahead;
  s.lookahead = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  strm.next_in = next;
  strm.input = input;
  strm.avail_in = avail;
  s.wrap = wrap;
  return Z_OK;
}


exports.deflateInit = deflateInit;
exports.deflateInit2 = deflateInit2;
exports.deflateReset = deflateReset;
exports.deflateResetKeep = deflateResetKeep;
exports.deflateSetHeader = deflateSetHeader;
exports.deflate = deflate;
exports.deflateEnd = deflateEnd;
exports.deflateSetDictionary = deflateSetDictionary;
exports.deflateInfo = 'pako deflate (from Nodeca project)';

/* Not implemented
exports.deflateBound = deflateBound;
exports.deflateCopy = deflateCopy;
exports.deflateParams = deflateParams;
exports.deflatePending = deflatePending;
exports.deflatePrime = deflatePrime;
exports.deflateTune = deflateTune;
*/


/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils = __webpack_require__(53);

/* Public constants ==========================================================*/
/* ===========================================================================*/


//var Z_FILTERED          = 1;
//var Z_HUFFMAN_ONLY      = 2;
//var Z_RLE               = 3;
var Z_FIXED               = 4;
//var Z_DEFAULT_STRATEGY  = 0;

/* Possible values of the data_type field (though see inflate()) */
var Z_BINARY              = 0;
var Z_TEXT                = 1;
//var Z_ASCII             = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;

/*============================================================================*/


function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }

// From zutil.h

var STORED_BLOCK = 0;
var STATIC_TREES = 1;
var DYN_TREES    = 2;
/* The three kinds of block type */

var MIN_MATCH    = 3;
var MAX_MATCH    = 258;
/* The minimum and maximum match lengths */

// From deflate.h
/* ===========================================================================
 * Internal compression state.
 */

var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */

var LITERALS      = 256;
/* number of literal bytes 0..255 */

var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */

var D_CODES       = 30;
/* number of distance codes */

var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */

var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */

var MAX_BITS      = 15;
/* All codes must not exceed MAX_BITS bits */

var Buf_size      = 16;
/* size of bit buffer in bi_buf */


/* ===========================================================================
 * Constants
 */

var MAX_BL_BITS = 7;
/* Bit length codes must not exceed MAX_BL_BITS bits */

var END_BLOCK   = 256;
/* end of block literal code */

var REP_3_6     = 16;
/* repeat previous bit length 3-6 times (2 bits of repeat count) */

var REPZ_3_10   = 17;
/* repeat a zero length 3-10 times  (3 bits of repeat count) */

var REPZ_11_138 = 18;
/* repeat a zero length 11-138 times  (7 bits of repeat count) */

/* eslint-disable comma-spacing,array-bracket-spacing */
var extra_lbits =   /* extra bits for each length code */
  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];

var extra_dbits =   /* extra bits for each distance code */
  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];

var extra_blbits =  /* extra bits for each bit length code */
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];

var bl_order =
  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
/* eslint-enable comma-spacing,array-bracket-spacing */

/* The lengths of the bit length codes are sent in order of decreasing
 * probability, to avoid transmitting the lengths for unused bit length codes.
 */

/* ===========================================================================
 * Local data. These are initialized only once.
 */

// We pre-fill arrays with 0 to avoid uninitialized gaps

var DIST_CODE_LEN = 512; /* see definition of array dist_code below */

// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1
var static_ltree  = new Array((L_CODES + 2) * 2);
zero(static_ltree);
/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

var static_dtree  = new Array(D_CODES * 2);
zero(static_dtree);
/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

var _dist_code    = new Array(DIST_CODE_LEN);
zero(_dist_code);
/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

var _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);
zero(_length_code);
/* length code for each normalized match length (0 == MIN_MATCH) */

var base_length   = new Array(LENGTH_CODES);
zero(base_length);
/* First normalized length for each code (0 = MIN_MATCH) */

var base_dist     = new Array(D_CODES);
zero(base_dist);
/* First normalized distance for each code (0 = distance of 1) */


function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {

  this.static_tree  = static_tree;  /* static tree or NULL */
  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */
  this.extra_base   = extra_base;   /* base index for extra_bits */
  this.elems        = elems;        /* max number of elements in the tree */
  this.max_length   = max_length;   /* max bit length for the codes */

  // show if `static_tree` has data or dummy - needed for monomorphic objects
  this.has_stree    = static_tree && static_tree.length;
}


var static_l_desc;
var static_d_desc;
var static_bl_desc;


function TreeDesc(dyn_tree, stat_desc) {
  this.dyn_tree = dyn_tree;     /* the dynamic tree */
  this.max_code = 0;            /* largest code with non zero frequency */
  this.stat_desc = stat_desc;   /* the corresponding static tree */
}



function d_code(dist) {
  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
}


/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */
function put_short(s, w) {
//    put_byte(s, (uch)((w) & 0xff));
//    put_byte(s, (uch)((ush)(w) >> 8));
  s.pending_buf[s.pending++] = (w) & 0xff;
  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
}


/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */
function send_bits(s, value, length) {
  if (s.bi_valid > (Buf_size - length)) {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    put_short(s, s.bi_buf);
    s.bi_buf = value >> (Buf_size - s.bi_valid);
    s.bi_valid += length - Buf_size;
  } else {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    s.bi_valid += length;
  }
}


function send_code(s, c, tree) {
  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);
}


/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */
function bi_reverse(code, len) {
  var res = 0;
  do {
    res |= code & 1;
    code >>>= 1;
    res <<= 1;
  } while (--len > 0);
  return res >>> 1;
}


/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */
function bi_flush(s) {
  if (s.bi_valid === 16) {
    put_short(s, s.bi_buf);
    s.bi_buf = 0;
    s.bi_valid = 0;

  } else if (s.bi_valid >= 8) {
    s.pending_buf[s.pending++] = s.bi_buf & 0xff;
    s.bi_buf >>= 8;
    s.bi_valid -= 8;
  }
}


/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */
function gen_bitlen(s, desc)
//    deflate_state *s;
//    tree_desc *desc;    /* the tree descriptor */
{
  var tree            = desc.dyn_tree;
  var max_code        = desc.max_code;
  var stree           = desc.stat_desc.static_tree;
  var has_stree       = desc.stat_desc.has_stree;
  var extra           = desc.stat_desc.extra_bits;
  var base            = desc.stat_desc.extra_base;
  var max_length      = desc.stat_desc.max_length;
  var h;              /* heap index */
  var n, m;           /* iterate over the tree elements */
  var bits;           /* bit length */
  var xbits;          /* extra bits */
  var f;              /* frequency */
  var overflow = 0;   /* number of elements with bit length too large */

  for (bits = 0; bits <= MAX_BITS; bits++) {
    s.bl_count[bits] = 0;
  }

  /* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */
  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */

  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {
    n = s.heap[h];
    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;
    if (bits > max_length) {
      bits = max_length;
      overflow++;
    }
    tree[n * 2 + 1]/*.Len*/ = bits;
    /* We overwrite tree[n].Dad which is no longer needed */

    if (n > max_code) { continue; } /* not a leaf node */

    s.bl_count[bits]++;
    xbits = 0;
    if (n >= base) {
      xbits = extra[n - base];
    }
    f = tree[n * 2]/*.Freq*/;
    s.opt_len += f * (bits + xbits);
    if (has_stree) {
      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);
    }
  }
  if (overflow === 0) { return; }

  // Trace((stderr,"\nbit length overflow\n"));
  /* This happens for example on obj2 and pic of the Calgary corpus */

  /* Find the first bit length which could increase: */
  do {
    bits = max_length - 1;
    while (s.bl_count[bits] === 0) { bits--; }
    s.bl_count[bits]--;      /* move one leaf down the tree */
    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */
    s.bl_count[max_length]--;
    /* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */
    overflow -= 2;
  } while (overflow > 0);

  /* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */
  for (bits = max_length; bits !== 0; bits--) {
    n = s.bl_count[bits];
    while (n !== 0) {
      m = s.heap[--h];
      if (m > max_code) { continue; }
      if (tree[m * 2 + 1]/*.Len*/ !== bits) {
        // Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;
        tree[m * 2 + 1]/*.Len*/ = bits;
      }
      n--;
    }
  }
}


/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */
function gen_codes(tree, max_code, bl_count)
//    ct_data *tree;             /* the tree to decorate */
//    int max_code;              /* largest code with non zero frequency */
//    ushf *bl_count;            /* number of codes at each bit length */
{
  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */
  var code = 0;              /* running code value */
  var bits;                  /* bit index */
  var n;                     /* code index */

  /* The distribution counts are first used to generate the code values
   * without bit reversal.
   */
  for (bits = 1; bits <= MAX_BITS; bits++) {
    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;
  }
  /* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */
  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
  //        "inconsistent bit counts");
  //Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

  for (n = 0;  n <= max_code; n++) {
    var len = tree[n * 2 + 1]/*.Len*/;
    if (len === 0) { continue; }
    /* Now reverse the bits */
    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);

    //Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
  }
}


/* ===========================================================================
 * Initialize the various 'constant' tables.
 */
function tr_static_init() {
  var n;        /* iterates over tree elements */
  var bits;     /* bit counter */
  var length;   /* length value */
  var code;     /* code value */
  var dist;     /* distance index */
  var bl_count = new Array(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  // do check in _tr_init()
  //if (static_init_done) return;

  /* For some embedded targets, global variables are not initialized: */
/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

  /* Initialize the mapping length (0..255) -> length code (0..28) */
  length = 0;
  for (code = 0; code < LENGTH_CODES - 1; code++) {
    base_length[code] = length;
    for (n = 0; n < (1 << extra_lbits[code]); n++) {
      _length_code[length++] = code;
    }
  }
  //Assert (length == 256, "tr_static_init: length != 256");
  /* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */
  _length_code[length - 1] = code;

  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
  dist = 0;
  for (code = 0; code < 16; code++) {
    base_dist[code] = dist;
    for (n = 0; n < (1 << extra_dbits[code]); n++) {
      _dist_code[dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: dist != 256");
  dist >>= 7; /* from now on, all distances are divided by 128 */
  for (; code < D_CODES; code++) {
    base_dist[code] = dist << 7;
    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {
      _dist_code[256 + dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: 256+dist != 512");

  /* Construct the codes of the static literal tree */
  for (bits = 0; bits <= MAX_BITS; bits++) {
    bl_count[bits] = 0;
  }

  n = 0;
  while (n <= 143) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  while (n <= 255) {
    static_ltree[n * 2 + 1]/*.Len*/ = 9;
    n++;
    bl_count[9]++;
  }
  while (n <= 279) {
    static_ltree[n * 2 + 1]/*.Len*/ = 7;
    n++;
    bl_count[7]++;
  }
  while (n <= 287) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  /* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */
  gen_codes(static_ltree, L_CODES + 1, bl_count);

  /* The static distance tree is trivial: */
  for (n = 0; n < D_CODES; n++) {
    static_dtree[n * 2 + 1]/*.Len*/ = 5;
    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);
  }

  // Now data ready and we can init static trees
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);
  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);
  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);

  //static_init_done = true;
}


/* ===========================================================================
 * Initialize a new block.
 */
function init_block(s) {
  var n; /* iterates over tree elements */

  /* Initialize the trees. */
  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }

  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;
  s.opt_len = s.static_len = 0;
  s.last_lit = s.matches = 0;
}


/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */
function bi_windup(s)
{
  if (s.bi_valid > 8) {
    put_short(s, s.bi_buf);
  } else if (s.bi_valid > 0) {
    //put_byte(s, (Byte)s->bi_buf);
    s.pending_buf[s.pending++] = s.bi_buf;
  }
  s.bi_buf = 0;
  s.bi_valid = 0;
}

/* ===========================================================================
 * Copy a stored block, storing first the length and its
 * one's complement if requested.
 */
function copy_block(s, buf, len, header)
//DeflateState *s;
//charf    *buf;    /* the input data */
//unsigned len;     /* its length */
//int      header;  /* true if block header must be written */
{
  bi_windup(s);        /* align on byte boundary */

  if (header) {
    put_short(s, len);
    put_short(s, ~len);
  }
//  while (len--) {
//    put_byte(s, *buf++);
//  }
  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);
  s.pending += len;
}

/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */
function smaller(tree, n, m, depth) {
  var _n2 = n * 2;
  var _m2 = m * 2;
  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||
         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));
}

/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */
function pqdownheap(s, tree, k)
//    deflate_state *s;
//    ct_data *tree;  /* the tree to restore */
//    int k;               /* node to move down */
{
  var v = s.heap[k];
  var j = k << 1;  /* left son of k */
  while (j <= s.heap_len) {
    /* Set j to the smallest of the two sons: */
    if (j < s.heap_len &&
      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {
      j++;
    }
    /* Exit if v is smaller than both sons */
    if (smaller(tree, v, s.heap[j], s.depth)) { break; }

    /* Exchange v with the smallest son */
    s.heap[k] = s.heap[j];
    k = j;

    /* And continue down the tree, setting j to the left son of k */
    j <<= 1;
  }
  s.heap[k] = v;
}


// inlined manually
// var SMALLEST = 1;

/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */
function compress_block(s, ltree, dtree)
//    deflate_state *s;
//    const ct_data *ltree; /* literal tree */
//    const ct_data *dtree; /* distance tree */
{
  var dist;           /* distance of matched string */
  var lc;             /* match length or unmatched char (if dist == 0) */
  var lx = 0;         /* running index in l_buf */
  var code;           /* the code to send */
  var extra;          /* number of extra bits to send */

  if (s.last_lit !== 0) {
    do {
      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);
      lc = s.pending_buf[s.l_buf + lx];
      lx++;

      if (dist === 0) {
        send_code(s, lc, ltree); /* send a literal byte */
        //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
      } else {
        /* Here, lc is the match length - MIN_MATCH */
        code = _length_code[lc];
        send_code(s, code + LITERALS + 1, ltree); /* send the length code */
        extra = extra_lbits[code];
        if (extra !== 0) {
          lc -= base_length[code];
          send_bits(s, lc, extra);       /* send the extra length bits */
        }
        dist--; /* dist is now the match distance - 1 */
        code = d_code(dist);
        //Assert (code < D_CODES, "bad d_code");

        send_code(s, code, dtree);       /* send the distance code */
        extra = extra_dbits[code];
        if (extra !== 0) {
          dist -= base_dist[code];
          send_bits(s, dist, extra);   /* send the extra distance bits */
        }
      } /* literal or match pair ? */

      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */
      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
      //       "pendingBuf overflow");

    } while (lx < s.last_lit);
  }

  send_code(s, END_BLOCK, ltree);
}


/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */
function build_tree(s, desc)
//    deflate_state *s;
//    tree_desc *desc; /* the tree descriptor */
{
  var tree     = desc.dyn_tree;
  var stree    = desc.stat_desc.static_tree;
  var has_stree = desc.stat_desc.has_stree;
  var elems    = desc.stat_desc.elems;
  var n, m;          /* iterate over heap elements */
  var max_code = -1; /* largest code with non zero frequency */
  var node;          /* new node being created */

  /* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */
  s.heap_len = 0;
  s.heap_max = HEAP_SIZE;

  for (n = 0; n < elems; n++) {
    if (tree[n * 2]/*.Freq*/ !== 0) {
      s.heap[++s.heap_len] = max_code = n;
      s.depth[n] = 0;

    } else {
      tree[n * 2 + 1]/*.Len*/ = 0;
    }
  }

  /* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */
  while (s.heap_len < 2) {
    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);
    tree[node * 2]/*.Freq*/ = 1;
    s.depth[node] = 0;
    s.opt_len--;

    if (has_stree) {
      s.static_len -= stree[node * 2 + 1]/*.Len*/;
    }
    /* node is 0 or 1 so it does not have extra bits */
  }
  desc.max_code = max_code;

  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */
  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }

  /* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */
  node = elems;              /* next internal node of the tree */
  do {
    //pqremove(s, tree, n);  /* n = node of least frequency */
    /*** pqremove ***/
    n = s.heap[1/*SMALLEST*/];
    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];
    pqdownheap(s, tree, 1/*SMALLEST*/);
    /***/

    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */

    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
    s.heap[--s.heap_max] = m;

    /* Create a new node father of n and m */
    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;
    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;

    /* and insert the new node in the heap */
    s.heap[1/*SMALLEST*/] = node++;
    pqdownheap(s, tree, 1/*SMALLEST*/);

  } while (s.heap_len >= 2);

  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];

  /* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */
  gen_bitlen(s, desc);

  /* The field len is now set, we can generate the bit codes */
  gen_codes(tree, max_code, s.bl_count);
}


/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */
function scan_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree;   /* the tree to be scanned */
//    int max_code;    /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      s.bl_tree[curlen * 2]/*.Freq*/ += count;

    } else if (curlen !== 0) {

      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }
      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;

    } else if (count <= 10) {
      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;

    } else {
      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;
    }

    count = 0;
    prevlen = curlen;

    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */
function send_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree; /* the tree to be scanned */
//    int max_code;       /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  /* tree[max_code+1].Len = -1; */  /* guard already set */
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);

    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        send_code(s, curlen, s.bl_tree);
        count--;
      }
      //Assert(count >= 3 && count <= 6, " 3_6?");
      send_code(s, REP_3_6, s.bl_tree);
      send_bits(s, count - 3, 2);

    } else if (count <= 10) {
      send_code(s, REPZ_3_10, s.bl_tree);
      send_bits(s, count - 3, 3);

    } else {
      send_code(s, REPZ_11_138, s.bl_tree);
      send_bits(s, count - 11, 7);
    }

    count = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */
function build_bl_tree(s) {
  var max_blindex;  /* index of last bit length code of non zero freq */

  /* Determine the bit length frequencies for literal and distance trees */
  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);

  /* Build the bit length tree: */
  build_tree(s, s.bl_desc);
  /* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

  /* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */
  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {
      break;
    }
  }
  /* Update opt_len to include the bit length tree and counts */
  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
  //Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
  //        s->opt_len, s->static_len));

  return max_blindex;
}


/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */
function send_all_trees(s, lcodes, dcodes, blcodes)
//    deflate_state *s;
//    int lcodes, dcodes, blcodes; /* number of codes for each tree */
{
  var rank;                    /* index in bl_order */

  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
  //        "too many codes");
  //Tracev((stderr, "\nbl counts: "));
  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */
  send_bits(s, dcodes - 1,   5);
  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */
  for (rank = 0; rank < blcodes; rank++) {
    //Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);
  }
  //Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */
  //Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */
  //Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
}


/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "black list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */
function detect_data_type(s) {
  /* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */
  var black_mask = 0xf3ffc07f;
  var n;

  /* Check for non-textual ("black-listed") bytes. */
  for (n = 0; n <= 31; n++, black_mask >>>= 1) {
    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {
      return Z_BINARY;
    }
  }

  /* Check for textual ("white-listed") bytes. */
  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||
      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {
    return Z_TEXT;
  }
  for (n = 32; n < LITERALS; n++) {
    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {
      return Z_TEXT;
    }
  }

  /* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */
  return Z_BINARY;
}


var static_init_done = false;

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */
function _tr_init(s)
{

  if (!static_init_done) {
    tr_static_init();
    static_init_done = true;
  }

  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);
  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);
  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);

  s.bi_buf = 0;
  s.bi_valid = 0;

  /* Initialize the first block of the first file: */
  init_block(s);
}


/* ===========================================================================
 * Send a stored block
 */
function _tr_stored_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */
  copy_block(s, buf, stored_len, true); /* with header */
}


/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */
function _tr_align(s) {
  send_bits(s, STATIC_TREES << 1, 3);
  send_code(s, END_BLOCK, static_ltree);
  bi_flush(s);
}


/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and output the encoded block to the zip file.
 */
function _tr_flush_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block, or NULL if too old */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */
  var max_blindex = 0;        /* index of last bit length code of non zero freq */

  /* Build the Huffman trees unless a stored block is forced */
  if (s.level > 0) {

    /* Check if the file is binary or text */
    if (s.strm.data_type === Z_UNKNOWN) {
      s.strm.data_type = detect_data_type(s);
    }

    /* Construct the literal and distance trees */
    build_tree(s, s.l_desc);
    // Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));

    build_tree(s, s.d_desc);
    // Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));
    /* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

    /* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */
    max_blindex = build_bl_tree(s);

    /* Determine the best encoding. Compute the block lengths in bytes. */
    opt_lenb = (s.opt_len + 3 + 7) >>> 3;
    static_lenb = (s.static_len + 3 + 7) >>> 3;

    // Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
    //        s->last_lit));

    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }

  } else {
    // Assert(buf != (char*)0, "lost buf");
    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */
  }

  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {
    /* 4: two words for the lengths */

    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */
    _tr_stored_block(s, buf, stored_len, last);

  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {

    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
    compress_block(s, static_ltree, static_dtree);

  } else {
    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);
    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);
    compress_block(s, s.dyn_ltree, s.dyn_dtree);
  }
  // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
  /* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */
  init_block(s);

  if (last) {
    bi_windup(s);
  }
  // Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
  //       s->compressed_len-7*last));
}

/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */
function _tr_tally(s, dist, lc)
//    deflate_state *s;
//    unsigned dist;  /* distance of matched string */
//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
{
  //var out_length, in_length, dcode;

  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;
  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;

  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;
  s.last_lit++;

  if (dist === 0) {
    /* lc is the unmatched char */
    s.dyn_ltree[lc * 2]/*.Freq*/++;
  } else {
    s.matches++;
    /* Here, lc is the match length - MIN_MATCH */
    dist--;             /* dist = match distance - 1 */
    //Assert((ush)dist < (ush)MAX_DIST(s) &&
    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
    //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;
    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;
  }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility

//#ifdef TRUNCATE_BLOCK
//  /* Try to guess if it is profitable to stop the current block here */
//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
//    /* Compute an upper bound for the compressed length */
//    out_length = s.last_lit*8;
//    in_length = s.strstart - s.block_start;
//
//    for (dcode = 0; dcode < D_CODES; dcode++) {
//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
//    }
//    out_length >>>= 3;
//    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
//    //       s->last_lit, in_length, out_length,
//    //       100L - out_length*100L/in_length));
//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
//      return true;
//    }
//  }
//#endif

  return (s.last_lit === s.lit_bufsize - 1);
  /* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */
}

exports._tr_init  = _tr_init;
exports._tr_stored_block = _tr_stored_block;
exports._tr_flush_block  = _tr_flush_block;
exports._tr_tally = _tr_tally;
exports._tr_align = _tr_align;


/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {
  2:      'need dictionary',     /* Z_NEED_DICT       2  */
  1:      'stream end',          /* Z_STREAM_END      1  */
  0:      '',                    /* Z_OK              0  */
  '-1':   'file error',          /* Z_ERRNO         (-1) */
  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */
  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */
  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */
  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */
  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */
};


/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils         = __webpack_require__(53);
var adler32       = __webpack_require__(123);
var crc32         = __webpack_require__(124);
var inflate_fast  = __webpack_require__(391);
var inflate_table = __webpack_require__(392);

var CODES = 0;
var LENS = 1;
var DISTS = 2;

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
//var Z_NO_FLUSH      = 0;
//var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
//var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;

/* The deflate compression method */
var Z_DEFLATED  = 8;


/* STATES ====================================================================*/
/* ===========================================================================*/


var    HEAD = 1;       /* i: waiting for magic header */
var    FLAGS = 2;      /* i: waiting for method and flags (gzip) */
var    TIME = 3;       /* i: waiting for modification time (gzip) */
var    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */
var    EXLEN = 5;      /* i: waiting for extra length (gzip) */
var    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */
var    NAME = 7;       /* i: waiting for end of file name (gzip) */
var    COMMENT = 8;    /* i: waiting for end of comment (gzip) */
var    HCRC = 9;       /* i: waiting for header crc (gzip) */
var    DICTID = 10;    /* i: waiting for dictionary check value */
var    DICT = 11;      /* waiting for inflateSetDictionary() call */
var        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */
var        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */
var        STORED = 14;    /* i: waiting for stored size (length and complement) */
var        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */
var        COPY = 16;      /* i/o: waiting for input or output to copy stored block */
var        TABLE = 17;     /* i: waiting for dynamic block table lengths */
var        LENLENS = 18;   /* i: waiting for code length code lengths */
var        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */
var            LEN_ = 20;      /* i: same as LEN below, but only first time in */
var            LEN = 21;       /* i: waiting for length/lit/eob code */
var            LENEXT = 22;    /* i: waiting for length extra bits */
var            DIST = 23;      /* i: waiting for distance code */
var            DISTEXT = 24;   /* i: waiting for distance extra bits */
var            MATCH = 25;     /* o: waiting for output space to copy string */
var            LIT = 26;       /* o: waiting for output space to write literal */
var    CHECK = 27;     /* i: waiting for 32-bit check value */
var    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */
var    DONE = 29;      /* finished check, done -- remain here until reset */
var    BAD = 30;       /* got a data error -- remain here until reset */
var    MEM = 31;       /* got an inflate() memory error -- remain here until reset */
var    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */

/* ===========================================================================*/



var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);

var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_WBITS = MAX_WBITS;


function zswap32(q) {
  return  (((q >>> 24) & 0xff) +
          ((q >>> 8) & 0xff00) +
          ((q & 0xff00) << 8) +
          ((q & 0xff) << 24));
}


function InflateState() {
  this.mode = 0;             /* current inflate mode */
  this.last = false;          /* true if processing last block */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.havedict = false;      /* true if dictionary provided */
  this.flags = 0;             /* gzip header method and flags (0 if zlib) */
  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */
  this.check = 0;             /* protected copy of check value */
  this.total = 0;             /* protected copy of output count */
  // TODO: may be {}
  this.head = null;           /* where to save gzip header information */

  /* sliding window */
  this.wbits = 0;             /* log base 2 of requested window size */
  this.wsize = 0;             /* window size or zero if not using window */
  this.whave = 0;             /* valid bytes in the window */
  this.wnext = 0;             /* window write index */
  this.window = null;         /* allocated sliding window, if needed */

  /* bit accumulator */
  this.hold = 0;              /* input bit accumulator */
  this.bits = 0;              /* number of bits in "in" */

  /* for string and stored block copying */
  this.length = 0;            /* literal or length of data to copy */
  this.offset = 0;            /* distance back to copy string from */

  /* for table and code decoding */
  this.extra = 0;             /* extra bits needed */

  /* fixed and dynamic code tables */
  this.lencode = null;          /* starting table for length/literal codes */
  this.distcode = null;         /* starting table for distance codes */
  this.lenbits = 0;           /* index bits for lencode */
  this.distbits = 0;          /* index bits for distcode */

  /* dynamic table building */
  this.ncode = 0;             /* number of code length code lengths */
  this.nlen = 0;              /* number of length code lengths */
  this.ndist = 0;             /* number of distance code lengths */
  this.have = 0;              /* number of code lengths in lens[] */
  this.next = null;              /* next available space in codes[] */

  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */
  this.work = new utils.Buf16(288); /* work area for code table building */

  /*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */
  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */
  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */
  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */
  this.sane = 0;                   /* if false, allow invalid distance too far */
  this.back = 0;                   /* bits back of last unprocessed length/lit */
  this.was = 0;                    /* initial length of match */
}

function inflateResetKeep(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  strm.total_in = strm.total_out = state.total = 0;
  strm.msg = ''; /*Z_NULL*/
  if (state.wrap) {       /* to support ill-conceived Java test suite */
    strm.adler = state.wrap & 1;
  }
  state.mode = HEAD;
  state.last = 0;
  state.havedict = 0;
  state.dmax = 32768;
  state.head = null/*Z_NULL*/;
  state.hold = 0;
  state.bits = 0;
  //state.lencode = state.distcode = state.next = state.codes;
  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);
  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);

  state.sane = 1;
  state.back = -1;
  //Tracev((stderr, "inflate: reset\n"));
  return Z_OK;
}

function inflateReset(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  state.wsize = 0;
  state.whave = 0;
  state.wnext = 0;
  return inflateResetKeep(strm);

}

function inflateReset2(strm, windowBits) {
  var wrap;
  var state;

  /* get the state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;

  /* extract wrap request from windowBits parameter */
  if (windowBits < 0) {
    wrap = 0;
    windowBits = -windowBits;
  }
  else {
    wrap = (windowBits >> 4) + 1;
    if (windowBits < 48) {
      windowBits &= 15;
    }
  }

  /* set number of window bits, free window if different */
  if (windowBits && (windowBits < 8 || windowBits > 15)) {
    return Z_STREAM_ERROR;
  }
  if (state.window !== null && state.wbits !== windowBits) {
    state.window = null;
  }

  /* update state and reset the rest of it */
  state.wrap = wrap;
  state.wbits = windowBits;
  return inflateReset(strm);
}

function inflateInit2(strm, windowBits) {
  var ret;
  var state;

  if (!strm) { return Z_STREAM_ERROR; }
  //strm.msg = Z_NULL;                 /* in case we return an error */

  state = new InflateState();

  //if (state === Z_NULL) return Z_MEM_ERROR;
  //Tracev((stderr, "inflate: allocated\n"));
  strm.state = state;
  state.window = null/*Z_NULL*/;
  ret = inflateReset2(strm, windowBits);
  if (ret !== Z_OK) {
    strm.state = null/*Z_NULL*/;
  }
  return ret;
}

function inflateInit(strm) {
  return inflateInit2(strm, DEF_WBITS);
}


/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */
var virgin = true;

var lenfix, distfix; // We have no pointers in JS, so keep tables separate

function fixedtables(state) {
  /* build fixed huffman tables if first call (may not be thread safe) */
  if (virgin) {
    var sym;

    lenfix = new utils.Buf32(512);
    distfix = new utils.Buf32(32);

    /* literal/length table */
    sym = 0;
    while (sym < 144) { state.lens[sym++] = 8; }
    while (sym < 256) { state.lens[sym++] = 9; }
    while (sym < 280) { state.lens[sym++] = 7; }
    while (sym < 288) { state.lens[sym++] = 8; }

    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });

    /* distance table */
    sym = 0;
    while (sym < 32) { state.lens[sym++] = 5; }

    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });

    /* do this just once */
    virgin = false;
  }

  state.lencode = lenfix;
  state.lenbits = 9;
  state.distcode = distfix;
  state.distbits = 5;
}


/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */
function updatewindow(strm, src, end, copy) {
  var dist;
  var state = strm.state;

  /* if it hasn't been done already, allocate space for the window */
  if (state.window === null) {
    state.wsize = 1 << state.wbits;
    state.wnext = 0;
    state.whave = 0;

    state.window = new utils.Buf8(state.wsize);
  }

  /* copy state->wsize or less output bytes into the circular window */
  if (copy >= state.wsize) {
    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);
    state.wnext = 0;
    state.whave = state.wsize;
  }
  else {
    dist = state.wsize - state.wnext;
    if (dist > copy) {
      dist = copy;
    }
    //zmemcpy(state->window + state->wnext, end - copy, dist);
    utils.arraySet(state.window, src, end - copy, dist, state.wnext);
    copy -= dist;
    if (copy) {
      //zmemcpy(state->window, end - copy, copy);
      utils.arraySet(state.window, src, end - copy, copy, 0);
      state.wnext = copy;
      state.whave = state.wsize;
    }
    else {
      state.wnext += dist;
      if (state.wnext === state.wsize) { state.wnext = 0; }
      if (state.whave < state.wsize) { state.whave += dist; }
    }
  }
  return 0;
}

function inflate(strm, flush) {
  var state;
  var input, output;          // input/output buffers
  var next;                   /* next input INDEX */
  var put;                    /* next output INDEX */
  var have, left;             /* available input and output */
  var hold;                   /* bit buffer */
  var bits;                   /* bits in bit buffer */
  var _in, _out;              /* save starting available input and output */
  var copy;                   /* number of stored or match bytes to copy */
  var from;                   /* where to copy match bytes from */
  var from_source;
  var here = 0;               /* current decoding table entry */
  var here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
  //var last;                   /* parent table entry */
  var last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
  var len;                    /* length to copy for repeats, bits to drop */
  var ret;                    /* return code */
  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */
  var opts;

  var n; // temporary var for NEED_BITS

  var order = /* permutation of code lengths */
    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];


  if (!strm || !strm.state || !strm.output ||
      (!strm.input && strm.avail_in !== 0)) {
    return Z_STREAM_ERROR;
  }

  state = strm.state;
  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */


  //--- LOAD() ---
  put = strm.next_out;
  output = strm.output;
  left = strm.avail_out;
  next = strm.next_in;
  input = strm.input;
  have = strm.avail_in;
  hold = state.hold;
  bits = state.bits;
  //---

  _in = have;
  _out = left;
  ret = Z_OK;

  inf_leave: // goto emulation
  for (;;) {
    switch (state.mode) {
      case HEAD:
        if (state.wrap === 0) {
          state.mode = TYPEDO;
          break;
        }
        //=== NEEDBITS(16);
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */
          state.check = 0/*crc32(0L, Z_NULL, 0)*/;
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//

          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          state.mode = FLAGS;
          break;
        }
        state.flags = 0;           /* expect zlib header */
        if (state.head) {
          state.head.done = false;
        }
        if (!(state.wrap & 1) ||   /* check if zlib header allowed */
          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {
          strm.msg = 'incorrect header check';
          state.mode = BAD;
          break;
        }
        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
        len = (hold & 0x0f)/*BITS(4)*/ + 8;
        if (state.wbits === 0) {
          state.wbits = len;
        }
        else if (len > state.wbits) {
          strm.msg = 'invalid window size';
          state.mode = BAD;
          break;
        }
        state.dmax = 1 << len;
        //Tracev((stderr, "inflate:   zlib header ok\n"));
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = hold & 0x200 ? DICTID : TYPE;
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        break;
      case FLAGS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.flags = hold;
        if ((state.flags & 0xff) !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        if (state.flags & 0xe000) {
          strm.msg = 'unknown header flags set';
          state.mode = BAD;
          break;
        }
        if (state.head) {
          state.head.text = ((hold >> 8) & 1);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = TIME;
        /* falls through */
      case TIME:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.time = hold;
        }
        if (state.flags & 0x0200) {
          //=== CRC4(state.check, hold)
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          hbuf[2] = (hold >>> 16) & 0xff;
          hbuf[3] = (hold >>> 24) & 0xff;
          state.check = crc32(state.check, hbuf, 4, 0);
          //===
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = OS;
        /* falls through */
      case OS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.xflags = (hold & 0xff);
          state.head.os = (hold >> 8);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = EXLEN;
        /* falls through */
      case EXLEN:
        if (state.flags & 0x0400) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length = hold;
          if (state.head) {
            state.head.extra_len = hold;
          }
          if (state.flags & 0x0200) {
            //=== CRC2(state.check, hold);
            hbuf[0] = hold & 0xff;
            hbuf[1] = (hold >>> 8) & 0xff;
            state.check = crc32(state.check, hbuf, 2, 0);
            //===//
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        else if (state.head) {
          state.head.extra = null/*Z_NULL*/;
        }
        state.mode = EXTRA;
        /* falls through */
      case EXTRA:
        if (state.flags & 0x0400) {
          copy = state.length;
          if (copy > have) { copy = have; }
          if (copy) {
            if (state.head) {
              len = state.head.extra_len - state.length;
              if (!state.head.extra) {
                // Use untyped array for more convenient processing later
                state.head.extra = new Array(state.head.extra_len);
              }
              utils.arraySet(
                state.head.extra,
                input,
                next,
                // extra field is limited to 65536 bytes
                // - no need for additional size check
                copy,
                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                len
              );
              //zmemcpy(state.head.extra + len, next,
              //        len + copy > state.head.extra_max ?
              //        state.head.extra_max - len : copy);
            }
            if (state.flags & 0x0200) {
              state.check = crc32(state.check, input, copy, next);
            }
            have -= copy;
            next += copy;
            state.length -= copy;
          }
          if (state.length) { break inf_leave; }
        }
        state.length = 0;
        state.mode = NAME;
        /* falls through */
      case NAME:
        if (state.flags & 0x0800) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            // TODO: 2 or 1 bytes?
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.name_max*/)) {
              state.head.name += String.fromCharCode(len);
            }
          } while (len && copy < have);

          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.name = null;
        }
        state.length = 0;
        state.mode = COMMENT;
        /* falls through */
      case COMMENT:
        if (state.flags & 0x1000) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.comm_max*/)) {
              state.head.comment += String.fromCharCode(len);
            }
          } while (len && copy < have);
          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.comment = null;
        }
        state.mode = HCRC;
        /* falls through */
      case HCRC:
        if (state.flags & 0x0200) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.check & 0xffff)) {
            strm.msg = 'header crc mismatch';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        if (state.head) {
          state.head.hcrc = ((state.flags >> 9) & 1);
          state.head.done = true;
        }
        strm.adler = state.check = 0;
        state.mode = TYPE;
        break;
      case DICTID:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        strm.adler = state.check = zswap32(hold);
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = DICT;
        /* falls through */
      case DICT:
        if (state.havedict === 0) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          return Z_NEED_DICT;
        }
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = TYPE;
        /* falls through */
      case TYPE:
        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case TYPEDO:
        if (state.last) {
          //--- BYTEBITS() ---//
          hold >>>= bits & 7;
          bits -= bits & 7;
          //---//
          state.mode = CHECK;
          break;
        }
        //=== NEEDBITS(3); */
        while (bits < 3) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.last = (hold & 0x01)/*BITS(1)*/;
        //--- DROPBITS(1) ---//
        hold >>>= 1;
        bits -= 1;
        //---//

        switch ((hold & 0x03)/*BITS(2)*/) {
          case 0:                             /* stored block */
            //Tracev((stderr, "inflate:     stored block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = STORED;
            break;
          case 1:                             /* fixed block */
            fixedtables(state);
            //Tracev((stderr, "inflate:     fixed codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = LEN_;             /* decode codes */
            if (flush === Z_TREES) {
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
              break inf_leave;
            }
            break;
          case 2:                             /* dynamic block */
            //Tracev((stderr, "inflate:     dynamic codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = TABLE;
            break;
          case 3:
            strm.msg = 'invalid block type';
            state.mode = BAD;
        }
        //--- DROPBITS(2) ---//
        hold >>>= 2;
        bits -= 2;
        //---//
        break;
      case STORED:
        //--- BYTEBITS() ---// /* go to byte boundary */
        hold >>>= bits & 7;
        bits -= bits & 7;
        //---//
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
          strm.msg = 'invalid stored block lengths';
          state.mode = BAD;
          break;
        }
        state.length = hold & 0xffff;
        //Tracev((stderr, "inflate:       stored length %u\n",
        //        state.length));
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = COPY_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case COPY_:
        state.mode = COPY;
        /* falls through */
      case COPY:
        copy = state.length;
        if (copy) {
          if (copy > have) { copy = have; }
          if (copy > left) { copy = left; }
          if (copy === 0) { break inf_leave; }
          //--- zmemcpy(put, next, copy); ---
          utils.arraySet(output, input, next, copy, put);
          //---//
          have -= copy;
          next += copy;
          left -= copy;
          put += copy;
          state.length -= copy;
          break;
        }
        //Tracev((stderr, "inflate:       stored end\n"));
        state.mode = TYPE;
        break;
      case TABLE:
        //=== NEEDBITS(14); */
        while (bits < 14) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
//#ifndef PKZIP_BUG_WORKAROUND
        if (state.nlen > 286 || state.ndist > 30) {
          strm.msg = 'too many length or distance symbols';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracev((stderr, "inflate:       table sizes ok\n"));
        state.have = 0;
        state.mode = LENLENS;
        /* falls through */
      case LENLENS:
        while (state.have < state.ncode) {
          //=== NEEDBITS(3);
          while (bits < 3) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);
          //--- DROPBITS(3) ---//
          hold >>>= 3;
          bits -= 3;
          //---//
        }
        while (state.have < 19) {
          state.lens[order[state.have++]] = 0;
        }
        // We have separate tables & no pointers. 2 commented lines below not needed.
        //state.next = state.codes;
        //state.lencode = state.next;
        // Switch to use dynamic table
        state.lencode = state.lendyn;
        state.lenbits = 7;

        opts = { bits: state.lenbits };
        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
        state.lenbits = opts.bits;

        if (ret) {
          strm.msg = 'invalid code lengths set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, "inflate:       code lengths ok\n"));
        state.have = 0;
        state.mode = CODELENS;
        /* falls through */
      case CODELENS:
        while (state.have < state.nlen + state.ndist) {
          for (;;) {
            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          if (here_val < 16) {
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            state.lens[state.have++] = here_val;
          }
          else {
            if (here_val === 16) {
              //=== NEEDBITS(here.bits + 2);
              n = here_bits + 2;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              if (state.have === 0) {
                strm.msg = 'invalid bit length repeat';
                state.mode = BAD;
                break;
              }
              len = state.lens[state.have - 1];
              copy = 3 + (hold & 0x03);//BITS(2);
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
            }
            else if (here_val === 17) {
              //=== NEEDBITS(here.bits + 3);
              n = here_bits + 3;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 3 + (hold & 0x07);//BITS(3);
              //--- DROPBITS(3) ---//
              hold >>>= 3;
              bits -= 3;
              //---//
            }
            else {
              //=== NEEDBITS(here.bits + 7);
              n = here_bits + 7;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 11 + (hold & 0x7f);//BITS(7);
              //--- DROPBITS(7) ---//
              hold >>>= 7;
              bits -= 7;
              //---//
            }
            if (state.have + copy > state.nlen + state.ndist) {
              strm.msg = 'invalid bit length repeat';
              state.mode = BAD;
              break;
            }
            while (copy--) {
              state.lens[state.have++] = len;
            }
          }
        }

        /* handle error breaks in while */
        if (state.mode === BAD) { break; }

        /* check for end-of-block code (better have one) */
        if (state.lens[256] === 0) {
          strm.msg = 'invalid code -- missing end-of-block';
          state.mode = BAD;
          break;
        }

        /* build code tables -- note: do not change the lenbits or distbits
           values here (9 and 6) without reading the comments in inftrees.h
           concerning the ENOUGH constants, which depend on those values */
        state.lenbits = 9;

        opts = { bits: state.lenbits };
        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.lenbits = opts.bits;
        // state.lencode = state.next;

        if (ret) {
          strm.msg = 'invalid literal/lengths set';
          state.mode = BAD;
          break;
        }

        state.distbits = 6;
        //state.distcode.copy(state.codes);
        // Switch to use dynamic table
        state.distcode = state.distdyn;
        opts = { bits: state.distbits };
        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.distbits = opts.bits;
        // state.distcode = state.next;

        if (ret) {
          strm.msg = 'invalid distances set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, 'inflate:       codes ok\n'));
        state.mode = LEN_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case LEN_:
        state.mode = LEN;
        /* falls through */
      case LEN:
        if (have >= 6 && left >= 258) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          inflate_fast(strm, _out);
          //--- LOAD() ---
          put = strm.next_out;
          output = strm.output;
          left = strm.avail_out;
          next = strm.next_in;
          input = strm.input;
          have = strm.avail_in;
          hold = state.hold;
          bits = state.bits;
          //---

          if (state.mode === TYPE) {
            state.back = -1;
          }
          break;
        }
        state.back = 0;
        for (;;) {
          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if (here_bits <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if (here_op && (here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.lencode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        state.length = here_val;
        if (here_op === 0) {
          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
          //        "inflate:         literal '%c'\n" :
          //        "inflate:         literal 0x%02x\n", here.val));
          state.mode = LIT;
          break;
        }
        if (here_op & 32) {
          //Tracevv((stderr, "inflate:         end of block\n"));
          state.back = -1;
          state.mode = TYPE;
          break;
        }
        if (here_op & 64) {
          strm.msg = 'invalid literal/length code';
          state.mode = BAD;
          break;
        }
        state.extra = here_op & 15;
        state.mode = LENEXT;
        /* falls through */
      case LENEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
        //Tracevv((stderr, "inflate:         length %u\n", state.length));
        state.was = state.length;
        state.mode = DIST;
        /* falls through */
      case DIST:
        for (;;) {
          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if ((here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.distcode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        if (here_op & 64) {
          strm.msg = 'invalid distance code';
          state.mode = BAD;
          break;
        }
        state.offset = here_val;
        state.extra = (here_op) & 15;
        state.mode = DISTEXT;
        /* falls through */
      case DISTEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
//#ifdef INFLATE_STRICT
        if (state.offset > state.dmax) {
          strm.msg = 'invalid distance too far back';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracevv((stderr, "inflate:         distance %u\n", state.offset));
        state.mode = MATCH;
        /* falls through */
      case MATCH:
        if (left === 0) { break inf_leave; }
        copy = _out - left;
        if (state.offset > copy) {         /* copy from window */
          copy = state.offset - copy;
          if (copy > state.whave) {
            if (state.sane) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break;
            }
// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//          Trace((stderr, "inflate.c too far\n"));
//          copy -= state.whave;
//          if (copy > state.length) { copy = state.length; }
//          if (copy > left) { copy = left; }
//          left -= copy;
//          state.length -= copy;
//          do {
//            output[put++] = 0;
//          } while (--copy);
//          if (state.length === 0) { state.mode = LEN; }
//          break;
//#endif
          }
          if (copy > state.wnext) {
            copy -= state.wnext;
            from = state.wsize - copy;
          }
          else {
            from = state.wnext - copy;
          }
          if (copy > state.length) { copy = state.length; }
          from_source = state.window;
        }
        else {                              /* copy from output */
          from_source = output;
          from = put - state.offset;
          copy = state.length;
        }
        if (copy > left) { copy = left; }
        left -= copy;
        state.length -= copy;
        do {
          output[put++] = from_source[from++];
        } while (--copy);
        if (state.length === 0) { state.mode = LEN; }
        break;
      case LIT:
        if (left === 0) { break inf_leave; }
        output[put++] = state.length;
        left--;
        state.mode = LEN;
        break;
      case CHECK:
        if (state.wrap) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            // Use '|' instead of '+' to make sure that result is signed
            hold |= input[next++] << bits;
            bits += 8;
          }
          //===//
          _out -= left;
          strm.total_out += _out;
          state.total += _out;
          if (_out) {
            strm.adler = state.check =
                /*UPDATE(state.check, put - _out, _out);*/
                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));

          }
          _out = left;
          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too
          if ((state.flags ? hold : zswap32(hold)) !== state.check) {
            strm.msg = 'incorrect data check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   check matches trailer\n"));
        }
        state.mode = LENGTH;
        /* falls through */
      case LENGTH:
        if (state.wrap && state.flags) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.total & 0xffffffff)) {
            strm.msg = 'incorrect length check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   length matches trailer\n"));
        }
        state.mode = DONE;
        /* falls through */
      case DONE:
        ret = Z_STREAM_END;
        break inf_leave;
      case BAD:
        ret = Z_DATA_ERROR;
        break inf_leave;
      case MEM:
        return Z_MEM_ERROR;
      case SYNC:
        /* falls through */
      default:
        return Z_STREAM_ERROR;
    }
  }

  // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

  /*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

  //--- RESTORE() ---
  strm.next_out = put;
  strm.avail_out = left;
  strm.next_in = next;
  strm.avail_in = have;
  state.hold = hold;
  state.bits = bits;
  //---

  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&
                      (state.mode < CHECK || flush !== Z_FINISH))) {
    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
      state.mode = MEM;
      return Z_MEM_ERROR;
    }
  }
  _in -= strm.avail_in;
  _out -= strm.avail_out;
  strm.total_in += _in;
  strm.total_out += _out;
  state.total += _out;
  if (state.wrap && _out) {
    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));
  }
  strm.data_type = state.bits + (state.last ? 64 : 0) +
                    (state.mode === TYPE ? 128 : 0) +
                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {
    ret = Z_BUF_ERROR;
  }
  return ret;
}

function inflateEnd(strm) {

  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {
    return Z_STREAM_ERROR;
  }

  var state = strm.state;
  if (state.window) {
    state.window = null;
  }
  strm.state = null;
  return Z_OK;
}

function inflateGetHeader(strm, head) {
  var state;

  /* check state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }

  /* save header structure */
  state.head = head;
  head.done = false;
  return Z_OK;
}

function inflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var state;
  var dictid;
  var ret;

  /* check state */
  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }
  state = strm.state;

  if (state.wrap !== 0 && state.mode !== DICT) {
    return Z_STREAM_ERROR;
  }

  /* check for correct dictionary identifier */
  if (state.mode === DICT) {
    dictid = 1; /* adler32(0, null, 0)*/
    /* dictid = adler32(dictid, dictionary, dictLength); */
    dictid = adler32(dictid, dictionary, dictLength, 0);
    if (dictid !== state.check) {
      return Z_DATA_ERROR;
    }
  }
  /* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */
  ret = updatewindow(strm, dictionary, dictLength, dictLength);
  if (ret) {
    state.mode = MEM;
    return Z_MEM_ERROR;
  }
  state.havedict = 1;
  // Tracev((stderr, "inflate:   dictionary set\n"));
  return Z_OK;
}

exports.inflateReset = inflateReset;
exports.inflateReset2 = inflateReset2;
exports.inflateResetKeep = inflateResetKeep;
exports.inflateInit = inflateInit;
exports.inflateInit2 = inflateInit2;
exports.inflate = inflate;
exports.inflateEnd = inflateEnd;
exports.inflateGetHeader = inflateGetHeader;
exports.inflateSetDictionary = inflateSetDictionary;
exports.inflateInfo = 'pako inflate (from Nodeca project)';

/* Not implemented
exports.inflateCopy = inflateCopy;
exports.inflateGetDictionary = inflateGetDictionary;
exports.inflateMark = inflateMark;
exports.inflatePrime = inflatePrime;
exports.inflateSync = inflateSync;
exports.inflateSyncPoint = inflateSyncPoint;
exports.inflateUndermine = inflateUndermine;
*/


/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// See state defs from inflate.js
var BAD = 30;       /* got a data error -- remain here until reset */
var TYPE = 12;      /* i: waiting for type bits, including last-flag bit */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */
module.exports = function inflate_fast(strm, start) {
  var state;
  var _in;                    /* local strm.input */
  var last;                   /* have enough input while in < last */
  var _out;                   /* local strm.output */
  var beg;                    /* inflate()'s initial strm.output */
  var end;                    /* while out < end, enough space available */
//#ifdef INFLATE_STRICT
  var dmax;                   /* maximum distance from zlib header */
//#endif
  var wsize;                  /* window size or zero if not using window */
  var whave;                  /* valid bytes in the window */
  var wnext;                  /* window write index */
  // Use `s_window` instead `window`, avoid conflict with instrumentation tools
  var s_window;               /* allocated sliding window, if wsize != 0 */
  var hold;                   /* local strm.hold */
  var bits;                   /* local strm.bits */
  var lcode;                  /* local strm.lencode */
  var dcode;                  /* local strm.distcode */
  var lmask;                  /* mask for first level of length codes */
  var dmask;                  /* mask for first level of distance codes */
  var here;                   /* retrieved table entry */
  var op;                     /* code bits, operation, extra bits, or */
                              /*  window position, window bytes to copy */
  var len;                    /* match length, unused bytes */
  var dist;                   /* match distance */
  var from;                   /* where to copy match from */
  var from_source;


  var input, output; // JS specific, because we have no pointers

  /* copy state to local variables */
  state = strm.state;
  //here = state.here;
  _in = strm.next_in;
  input = strm.input;
  last = _in + (strm.avail_in - 5);
  _out = strm.next_out;
  output = strm.output;
  beg = _out - (start - strm.avail_out);
  end = _out + (strm.avail_out - 257);
//#ifdef INFLATE_STRICT
  dmax = state.dmax;
//#endif
  wsize = state.wsize;
  whave = state.whave;
  wnext = state.wnext;
  s_window = state.window;
  hold = state.hold;
  bits = state.bits;
  lcode = state.lencode;
  dcode = state.distcode;
  lmask = (1 << state.lenbits) - 1;
  dmask = (1 << state.distbits) - 1;


  /* decode literals and length/distances until end-of-block or not enough
     input data or output space */

  top:
  do {
    if (bits < 15) {
      hold += input[_in++] << bits;
      bits += 8;
      hold += input[_in++] << bits;
      bits += 8;
    }

    here = lcode[hold & lmask];

    dolen:
    for (;;) { // Goto emulation
      op = here >>> 24/*here.bits*/;
      hold >>>= op;
      bits -= op;
      op = (here >>> 16) & 0xff/*here.op*/;
      if (op === 0) {                          /* literal */
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        output[_out++] = here & 0xffff/*here.val*/;
      }
      else if (op & 16) {                     /* length base */
        len = here & 0xffff/*here.val*/;
        op &= 15;                           /* number of extra bits */
        if (op) {
          if (bits < op) {
            hold += input[_in++] << bits;
            bits += 8;
          }
          len += hold & ((1 << op) - 1);
          hold >>>= op;
          bits -= op;
        }
        //Tracevv((stderr, "inflate:         length %u\n", len));
        if (bits < 15) {
          hold += input[_in++] << bits;
          bits += 8;
          hold += input[_in++] << bits;
          bits += 8;
        }
        here = dcode[hold & dmask];

        dodist:
        for (;;) { // goto emulation
          op = here >>> 24/*here.bits*/;
          hold >>>= op;
          bits -= op;
          op = (here >>> 16) & 0xff/*here.op*/;

          if (op & 16) {                      /* distance base */
            dist = here & 0xffff/*here.val*/;
            op &= 15;                       /* number of extra bits */
            if (bits < op) {
              hold += input[_in++] << bits;
              bits += 8;
              if (bits < op) {
                hold += input[_in++] << bits;
                bits += 8;
              }
            }
            dist += hold & ((1 << op) - 1);
//#ifdef INFLATE_STRICT
            if (dist > dmax) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break top;
            }
//#endif
            hold >>>= op;
            bits -= op;
            //Tracevv((stderr, "inflate:         distance %u\n", dist));
            op = _out - beg;                /* max distance in output */
            if (dist > op) {                /* see if copy from window */
              op = dist - op;               /* distance back in window */
              if (op > whave) {
                if (state.sane) {
                  strm.msg = 'invalid distance too far back';
                  state.mode = BAD;
                  break top;
                }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//                if (len <= op - whave) {
//                  do {
//                    output[_out++] = 0;
//                  } while (--len);
//                  continue top;
//                }
//                len -= op - whave;
//                do {
//                  output[_out++] = 0;
//                } while (--op > whave);
//                if (op === 0) {
//                  from = _out - dist;
//                  do {
//                    output[_out++] = output[from++];
//                  } while (--len);
//                  continue top;
//                }
//#endif
              }
              from = 0; // window index
              from_source = s_window;
              if (wnext === 0) {           /* very common case */
                from += wsize - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              else if (wnext < op) {      /* wrap around window */
                from += wsize + wnext - op;
                op -= wnext;
                if (op < len) {         /* some from end of window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = 0;
                  if (wnext < len) {  /* some from start of window */
                    op = wnext;
                    len -= op;
                    do {
                      output[_out++] = s_window[from++];
                    } while (--op);
                    from = _out - dist;      /* rest from output */
                    from_source = output;
                  }
                }
              }
              else {                      /* contiguous in window */
                from += wnext - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              while (len > 2) {
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                len -= 3;
              }
              if (len) {
                output[_out++] = from_source[from++];
                if (len > 1) {
                  output[_out++] = from_source[from++];
                }
              }
            }
            else {
              from = _out - dist;          /* copy direct from output */
              do {                        /* minimum length is three */
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                len -= 3;
              } while (len > 2);
              if (len) {
                output[_out++] = output[from++];
                if (len > 1) {
                  output[_out++] = output[from++];
                }
              }
            }
          }
          else if ((op & 64) === 0) {          /* 2nd level distance code */
            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
            continue dodist;
          }
          else {
            strm.msg = 'invalid distance code';
            state.mode = BAD;
            break top;
          }

          break; // need to emulate goto via "continue"
        }
      }
      else if ((op & 64) === 0) {              /* 2nd level length code */
        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
        continue dolen;
      }
      else if (op & 32) {                     /* end-of-block */
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.mode = TYPE;
        break top;
      }
      else {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break top;
      }

      break; // need to emulate goto via "continue"
    }
  } while (_in < last && _out < end);

  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
  len = bits >> 3;
  _in -= len;
  bits -= len << 3;
  hold &= (1 << bits) - 1;

  /* update state and return */
  strm.next_in = _in;
  strm.next_out = _out;
  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));
  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));
  state.hold = hold;
  state.bits = bits;
  return;
};


/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils = __webpack_require__(53);

var MAXBITS = 15;
var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);

var CODES = 0;
var LENS = 1;
var DISTS = 2;

var lbase = [ /* Length codes 257..285 base */
  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0
];

var lext = [ /* Length codes 257..285 extra */
  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
];

var dbase = [ /* Distance codes 0..29 base */
  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
  8193, 12289, 16385, 24577, 0, 0
];

var dext = [ /* Distance codes 0..29 extra */
  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
  28, 28, 29, 29, 64, 64
];

module.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)
{
  var bits = opts.bits;
      //here = opts.here; /* table entry for duplication */

  var len = 0;               /* a code's length in bits */
  var sym = 0;               /* index of code symbols */
  var min = 0, max = 0;          /* minimum and maximum code lengths */
  var root = 0;              /* number of index bits for root table */
  var curr = 0;              /* number of index bits for current table */
  var drop = 0;              /* code bits to drop for sub-table */
  var left = 0;                   /* number of prefix codes available */
  var used = 0;              /* code entries in table used */
  var huff = 0;              /* Huffman code */
  var incr;              /* for incrementing code, index */
  var fill;              /* index for replicating entries */
  var low;               /* low bits for current root entry */
  var mask;              /* mask for low root bits */
  var next;             /* next available space in table */
  var base = null;     /* base value table to use */
  var base_index = 0;
//  var shoextra;    /* extra bits table to use */
  var end;                    /* use base and extra for symbol > end */
  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */
  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */
  var extra = null;
  var extra_index = 0;

  var here_bits, here_op, here_val;

  /*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
  for (len = 0; len <= MAXBITS; len++) {
    count[len] = 0;
  }
  for (sym = 0; sym < codes; sym++) {
    count[lens[lens_index + sym]]++;
  }

  /* bound code lengths, force root to be within code lengths */
  root = bits;
  for (max = MAXBITS; max >= 1; max--) {
    if (count[max] !== 0) { break; }
  }
  if (root > max) {
    root = max;
  }
  if (max === 0) {                     /* no symbols to code at all */
    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;


    //table.op[opts.table_index] = 64;
    //table.bits[opts.table_index] = 1;
    //table.val[opts.table_index++] = 0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;

    opts.bits = 1;
    return 0;     /* no symbols, but wait for decoding to report error */
  }
  for (min = 1; min < max; min++) {
    if (count[min] !== 0) { break; }
  }
  if (root < min) {
    root = min;
  }

  /* check for an over-subscribed or incomplete set of lengths */
  left = 1;
  for (len = 1; len <= MAXBITS; len++) {
    left <<= 1;
    left -= count[len];
    if (left < 0) {
      return -1;
    }        /* over-subscribed */
  }
  if (left > 0 && (type === CODES || max !== 1)) {
    return -1;                      /* incomplete set */
  }

  /* generate offsets into symbol table for each length for sorting */
  offs[1] = 0;
  for (len = 1; len < MAXBITS; len++) {
    offs[len + 1] = offs[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (sym = 0; sym < codes; sym++) {
    if (lens[lens_index + sym] !== 0) {
      work[offs[lens[lens_index + sym]]++] = sym;
    }
  }

  /*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

  /* set up for code type */
  // poor man optimization - use if-else instead of switch,
  // to avoid deopts in old v8
  if (type === CODES) {
    base = extra = work;    /* dummy value--not used */
    end = 19;

  } else if (type === LENS) {
    base = lbase;
    base_index -= 257;
    extra = lext;
    extra_index -= 257;
    end = 256;

  } else {                    /* DISTS */
    base = dbase;
    extra = dext;
    end = -1;
  }

  /* initialize opts for loop */
  huff = 0;                   /* starting code */
  sym = 0;                    /* starting code symbol */
  len = min;                  /* starting code length */
  next = table_index;              /* current table to fill in */
  curr = root;                /* current table index bits */
  drop = 0;                   /* current bits to drop from code for index */
  low = -1;                   /* trigger new sub-table when len > root */
  used = 1 << root;          /* use root table entries */
  mask = used - 1;            /* mask for comparing low */

  /* check available table space */
  if ((type === LENS && used > ENOUGH_LENS) ||
    (type === DISTS && used > ENOUGH_DISTS)) {
    return 1;
  }

  /* process all codes and make table entries */
  for (;;) {
    /* create table entry */
    here_bits = len - drop;
    if (work[sym] < end) {
      here_op = 0;
      here_val = work[sym];
    }
    else if (work[sym] > end) {
      here_op = extra[extra_index + work[sym]];
      here_val = base[base_index + work[sym]];
    }
    else {
      here_op = 32 + 64;         /* end of block */
      here_val = 0;
    }

    /* replicate for those indices with low len bits equal to huff */
    incr = 1 << (len - drop);
    fill = 1 << curr;
    min = fill;                 /* save offset to next table */
    do {
      fill -= incr;
      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;
    } while (fill !== 0);

    /* backwards increment the len-bit code huff */
    incr = 1 << (len - 1);
    while (huff & incr) {
      incr >>= 1;
    }
    if (incr !== 0) {
      huff &= incr - 1;
      huff += incr;
    } else {
      huff = 0;
    }

    /* go to next symbol, update count, len */
    sym++;
    if (--count[len] === 0) {
      if (len === max) { break; }
      len = lens[lens_index + work[sym]];
    }

    /* create new sub-table if needed */
    if (len > root && (huff & mask) !== low) {
      /* if first time, transition to sub-tables */
      if (drop === 0) {
        drop = root;
      }

      /* increment past last table */
      next += min;            /* here min is 1 << curr */

      /* determine length of next table */
      curr = len - drop;
      left = 1 << curr;
      while (curr + drop < max) {
        left -= count[curr + drop];
        if (left <= 0) { break; }
        curr++;
        left <<= 1;
      }

      /* check for enough space */
      used += 1 << curr;
      if ((type === LENS && used > ENOUGH_LENS) ||
        (type === DISTS && used > ENOUGH_DISTS)) {
        return 1;
      }

      /* point entry in root table to sub-table */
      low = huff & mask;
      /*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/
      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;
    }
  }

  /* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */
  if (huff !== 0) {
    //table.op[next + huff] = 64;            /* invalid code marker */
    //table.bits[next + huff] = len - drop;
    //table.val[next + huff] = 0;
    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;
  }

  /* set return parameters */
  //opts.table_index += used;
  opts.bits = root;
  return 0;
};


/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {

  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH:         0,
  Z_PARTIAL_FLUSH:    1,
  Z_SYNC_FLUSH:       2,
  Z_FULL_FLUSH:       3,
  Z_FINISH:           4,
  Z_BLOCK:            5,
  Z_TREES:            6,

  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK:               0,
  Z_STREAM_END:       1,
  Z_NEED_DICT:        2,
  Z_ERRNO:           -1,
  Z_STREAM_ERROR:    -2,
  Z_DATA_ERROR:      -3,
  //Z_MEM_ERROR:     -4,
  Z_BUF_ERROR:       -5,
  //Z_VERSION_ERROR: -6,

  /* compression levels */
  Z_NO_COMPRESSION:         0,
  Z_BEST_SPEED:             1,
  Z_BEST_COMPRESSION:       9,
  Z_DEFAULT_COMPRESSION:   -1,


  Z_FILTERED:               1,
  Z_HUFFMAN_ONLY:           2,
  Z_RLE:                    3,
  Z_FIXED:                  4,
  Z_DEFAULT_STRATEGY:       0,

  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY:                 0,
  Z_TEXT:                   1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN:                2,

  /* The deflate compression method */
  Z_DEFLATED:               8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};


/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function concatBytes(chunks) {
    let totalSize = 0;
    for (const chunk of chunks) {
        totalSize += chunk.length;
    }
    const result = new Uint8Array(totalSize);
    let offset = 0;
    for (const chunk of chunks) {
        result.set(chunk, offset);
        offset += chunk.length;
    }
    return result;
}
exports.concatBytes = concatBytes;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvY29uY2F0LWJ5dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEscUJBQTRCLE1BQW9CO0lBQzlDLElBQUksU0FBUyxHQUFhLENBQUMsQ0FBQztJQUM1QixHQUFHLENBQUMsQ0FBQyxNQUFNLEtBQUssSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQzNCLFNBQVMsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDO0lBQzVCLENBQUM7SUFDRCxNQUFNLE1BQU0sR0FBZSxJQUFJLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNyRCxJQUFJLE1BQU0sR0FBYSxDQUFDLENBQUM7SUFDekIsR0FBRyxDQUFDLENBQUMsTUFBTSxLQUFLLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQztRQUMzQixNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztRQUMxQixNQUFNLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQztJQUN6QixDQUFDO0lBQ0QsTUFBTSxDQUFDLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBWkQsa0NBWUMiLCJmaWxlIjoiY29uY2F0LWJ5dGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVWludFNpemUgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdEJ5dGVzKGNodW5rczogVWludDhBcnJheVtdKTogVWludDhBcnJheSB7XG4gIGxldCB0b3RhbFNpemU6IFVpbnRTaXplID0gMDtcbiAgZm9yIChjb25zdCBjaHVuayBvZiBjaHVua3MpIHtcbiAgICB0b3RhbFNpemUgKz0gY2h1bmsubGVuZ3RoO1xuICB9XG4gIGNvbnN0IHJlc3VsdDogVWludDhBcnJheSA9IG5ldyBVaW50OEFycmF5KHRvdGFsU2l6ZSk7XG4gIGxldCBvZmZzZXQ6IFVpbnRTaXplID0gMDtcbiAgZm9yIChjb25zdCBjaHVuayBvZiBjaHVua3MpIHtcbiAgICByZXN1bHQuc2V0KGNodW5rLCBvZmZzZXQpO1xuICAgIG9mZnNldCArPSBjaHVuay5sZW5ndGg7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=


/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
class DefaultParseContext {
    constructor(version) {
        this.version = version;
        this.glyphCounts = new Map();
    }
    getVersion() {
        return this.version;
    }
    setGlyphCount(fontId, glyphCount) {
        this.glyphCounts.set(fontId, glyphCount);
    }
    getGlyphCount(fontId) {
        return this.glyphCounts.get(fontId);
    }
}
exports.DefaultParseContext = DefaultParseContext;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcGFyc2UtY29udGV4dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQW9CQTtJQUlFLFlBQVksT0FBa0I7UUFDNUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDO0lBQy9CLENBQUM7SUFFRCxVQUFVO1FBQ1IsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQztJQUVELGFBQWEsQ0FBQyxNQUFjLEVBQUUsVUFBb0I7UUFDaEQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxhQUFhLENBQUMsTUFBYztRQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdEMsQ0FBQztDQUNGO0FBcEJELGtEQW9CQyIsImZpbGUiOiJwYXJzZS1jb250ZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVWludDE2LCBVaW50OCwgVWludFNpemUgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcblxuLyoqXG4gKiBSZXR1cm4gdGhlIG1ham9yIFNXRiB2ZXJzaW9uIG9yIHVuZGVmaW5lZCBpZiB0aGUgdmVyc2lvbiBpcyB1bmtub3duLlxuICovXG5leHBvcnQgdHlwZSBWZXJzaW9uUHJvdmlkZXIgPSAoKSA9PiBVaW50OCB8IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBUeXBlIHJlcHJlc2VudGluZyBhIGZ1bmN0aW9uIHJldHVybmluZyB0aGUgbnVtYmVyIG9mIGdseXBocyBpbiB0aGUgZm9udCB3aXRoIElEIGBmb250SWRgLlxuICogSWYgdGhlIGZvbnQgaXMgbm90IGtub3duLCByZXR1cm5zIHVuZGVmaW5lZC5cbiAqL1xuZXhwb3J0IHR5cGUgR2x5cGhDb3VudFByb3ZpZGVyID0gKGZvbnRJZDogVWludDE2KSA9PiBVaW50U2l6ZSB8IHVuZGVmaW5lZDtcblxuZXhwb3J0IGludGVyZmFjZSBQYXJzZUNvbnRleHQge1xuICByZWFkb25seSBnZXRWZXJzaW9uOiBWZXJzaW9uUHJvdmlkZXI7XG4gIHJlYWRvbmx5IGdldEdseXBoQ291bnQ6IEdseXBoQ291bnRQcm92aWRlcjtcblxuICBzZXRHbHlwaENvdW50KGZvbnRJZDogVWludDE2LCBnbHlwaENvdW50OiBVaW50U2l6ZSk6IHZvaWQ7XG59XG5cbmV4cG9ydCBjbGFzcyBEZWZhdWx0UGFyc2VDb250ZXh0IGltcGxlbWVudHMgUGFyc2VDb250ZXh0IHtcbiAgcHJpdmF0ZSByZWFkb25seSB2ZXJzaW9uOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIHByaXZhdGUgcmVhZG9ubHkgZ2x5cGhDb3VudHM6IE1hcDxVaW50MTYsIFVpbnRTaXplPjtcblxuICBjb25zdHJ1Y3Rvcih2ZXJzaW9uPzogVWludFNpemUpIHtcbiAgICB0aGlzLnZlcnNpb24gPSB2ZXJzaW9uO1xuICAgIHRoaXMuZ2x5cGhDb3VudHMgPSBuZXcgTWFwKCk7XG4gIH1cblxuICBnZXRWZXJzaW9uKCk6IFVpbnQ4IHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy52ZXJzaW9uO1xuICB9XG5cbiAgc2V0R2x5cGhDb3VudChmb250SWQ6IFVpbnQxNiwgZ2x5cGhDb3VudDogVWludFNpemUpOiB2b2lkIHtcbiAgICB0aGlzLmdseXBoQ291bnRzLnNldChmb250SWQsIGdseXBoQ291bnQpO1xuICB9XG5cbiAgZ2V0R2x5cGhDb3VudChmb250SWQ6IFVpbnQxNik6IFVpbnRTaXplIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5nbHlwaENvdW50cy5nZXQoZm9udElkKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==


/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const swf_tree_1 = __webpack_require__(12);
const incomplete_stream_1 = __webpack_require__(54);
const basic_data_types_1 = __webpack_require__(28);
function parseCompressionMethod(byteStream) {
    if (byteStream.byteEnd < 3) {
        throw incomplete_stream_1.createIncompleteStreamError(3);
    }
    // Read FWS, CWS or ZWS
    if (byteStream.bytes[byteStream.bytePos + 1] !== "W".charCodeAt(0)
        || byteStream.bytes[byteStream.bytePos + 2] !== "S".charCodeAt(0)) {
        throw incident_1.Incident("InvalidCompressionMethod", "Invalid compression method");
    }
    let result;
    switch (byteStream.bytes[byteStream.bytePos]) {
        case "F".charCodeAt(0):
            result = swf_tree_1.CompressionMethod.None;
            break;
        case "C".charCodeAt(0):
            result = swf_tree_1.CompressionMethod.Deflate;
            break;
        case "Z".charCodeAt(0):
            result = swf_tree_1.CompressionMethod.Lzma;
            break;
        default:
            throw incident_1.Incident("InvalidCompressionMethod", "Invalid compression method");
    }
    byteStream.bytePos += 3;
    return result;
}
exports.parseCompressionMethod = parseCompressionMethod;
function parseSwfSignature(byteStream) {
    if (byteStream.byteEnd < 8) {
        throw incomplete_stream_1.createIncompleteStreamError(8);
    }
    const compressionMethod = parseCompressionMethod(byteStream);
    const swfVersion = byteStream.readUint8();
    const uncompressedFileLength = byteStream.readUint32LE();
    return { compressionMethod, swfVersion, uncompressedFileLength };
}
exports.parseSwfSignature = parseSwfSignature;
function parseHeader(byteStream) {
    const signature = parseSwfSignature(byteStream);
    const frameSize = basic_data_types_1.parseRect(byteStream);
    const frameRate = byteStream.readUfixed8P8LE();
    const frameCount = byteStream.readUint16LE();
    return Object.assign({}, signature, { frameSize, frameRate, frameCount });
}
exports.parseHeader = parseHeader;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcGFyc2Vycy9oZWFkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFFcEMsdUNBQW9GO0FBQ3BGLG1FQUEwRTtBQUUxRSx5REFBK0M7QUFFL0MsZ0NBQXVDLFVBQWtCO0lBQ3ZELEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMzQixNQUFNLCtDQUEyQixDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFDRCx1QkFBdUI7SUFDdkIsRUFBRSxDQUFDLENBQ0QsVUFBVSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1dBQzNELFVBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FDbEUsQ0FBQyxDQUFDLENBQUM7UUFDRCxNQUFNLG1CQUFRLENBQUMsMEJBQTBCLEVBQUUsNEJBQTRCLENBQUMsQ0FBQztJQUMzRSxDQUFDO0lBRUQsSUFBSSxNQUF5QixDQUFDO0lBQzlCLE1BQU0sQ0FBQyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM3QyxLQUFLLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3BCLE1BQU0sR0FBRyw0QkFBaUIsQ0FBQyxJQUFJLENBQUM7WUFDaEMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUNwQixNQUFNLEdBQUcsNEJBQWlCLENBQUMsT0FBTyxDQUFDO1lBQ25DLEtBQUssQ0FBQztRQUNSLEtBQUssR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDcEIsTUFBTSxHQUFHLDRCQUFpQixDQUFDLElBQUksQ0FBQztZQUNoQyxLQUFLLENBQUM7UUFDUjtZQUNFLE1BQU0sbUJBQVEsQ0FBQywwQkFBMEIsRUFBRSw0QkFBNEIsQ0FBQyxDQUFDO0lBQzdFLENBQUM7SUFDRCxVQUFVLENBQUMsT0FBTyxJQUFJLENBQUMsQ0FBQztJQUN4QixNQUFNLENBQUMsTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUE1QkQsd0RBNEJDO0FBRUQsMkJBQWtDLFVBQWtCO0lBQ2xELEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMzQixNQUFNLCtDQUEyQixDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxNQUFNLGlCQUFpQixHQUFzQixzQkFBc0IsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNoRixNQUFNLFVBQVUsR0FBVSxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDakQsTUFBTSxzQkFBc0IsR0FBVyxVQUFVLENBQUMsWUFBWSxFQUFFLENBQUM7SUFFakUsTUFBTSxDQUFDLEVBQUMsaUJBQWlCLEVBQUUsVUFBVSxFQUFFLHNCQUFzQixFQUFDLENBQUM7QUFDakUsQ0FBQztBQVZELDhDQVVDO0FBRUQscUJBQTRCLFVBQWtCO0lBQzVDLE1BQU0sU0FBUyxHQUFpQixpQkFBaUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUM5RCxNQUFNLFNBQVMsR0FBUyw0QkFBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzlDLE1BQU0sU0FBUyxHQUFjLFVBQVUsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMxRCxNQUFNLFVBQVUsR0FBVyxVQUFVLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDckQsTUFBTSxtQkFBSyxTQUFTLElBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxVQUFVLElBQUU7QUFDMUQsQ0FBQztBQU5ELGtDQU1DIiwiZmlsZSI6InBhcnNlcnMvaGVhZGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcbmltcG9ydCB7IFVpbnQxNiwgVWludDMyLCBVaW50OCB9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHsgQ29tcHJlc3Npb25NZXRob2QsIEhlYWRlciwgUmVjdCwgU3dmU2lnbmF0dXJlLCBVZml4ZWQ4UDggfSBmcm9tIFwic3dmLXRyZWVcIjtcbmltcG9ydCB7IGNyZWF0ZUluY29tcGxldGVTdHJlYW1FcnJvciB9IGZyb20gXCIuLi9lcnJvcnMvaW5jb21wbGV0ZS1zdHJlYW1cIjtcbmltcG9ydCB7IFN0cmVhbSB9IGZyb20gXCIuLi9zdHJlYW1cIjtcbmltcG9ydCB7IHBhcnNlUmVjdCB9IGZyb20gXCIuL2Jhc2ljLWRhdGEtdHlwZXNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ29tcHJlc3Npb25NZXRob2QoYnl0ZVN0cmVhbTogU3RyZWFtKTogQ29tcHJlc3Npb25NZXRob2Qge1xuICBpZiAoYnl0ZVN0cmVhbS5ieXRlRW5kIDwgMykge1xuICAgIHRocm93IGNyZWF0ZUluY29tcGxldGVTdHJlYW1FcnJvcigzKTtcbiAgfVxuICAvLyBSZWFkIEZXUywgQ1dTIG9yIFpXU1xuICBpZiAoXG4gICAgYnl0ZVN0cmVhbS5ieXRlc1tieXRlU3RyZWFtLmJ5dGVQb3MgKyAxXSAhPT0gXCJXXCIuY2hhckNvZGVBdCgwKVxuICAgIHx8IGJ5dGVTdHJlYW0uYnl0ZXNbYnl0ZVN0cmVhbS5ieXRlUG9zICsgMl0gIT09IFwiU1wiLmNoYXJDb2RlQXQoMClcbiAgKSB7XG4gICAgdGhyb3cgSW5jaWRlbnQoXCJJbnZhbGlkQ29tcHJlc3Npb25NZXRob2RcIiwgXCJJbnZhbGlkIGNvbXByZXNzaW9uIG1ldGhvZFwiKTtcbiAgfVxuXG4gIGxldCByZXN1bHQ6IENvbXByZXNzaW9uTWV0aG9kO1xuICBzd2l0Y2ggKGJ5dGVTdHJlYW0uYnl0ZXNbYnl0ZVN0cmVhbS5ieXRlUG9zXSkge1xuICAgIGNhc2UgXCJGXCIuY2hhckNvZGVBdCgwKTpcbiAgICAgIHJlc3VsdCA9IENvbXByZXNzaW9uTWV0aG9kLk5vbmU7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwiQ1wiLmNoYXJDb2RlQXQoMCk6XG4gICAgICByZXN1bHQgPSBDb21wcmVzc2lvbk1ldGhvZC5EZWZsYXRlO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcIlpcIi5jaGFyQ29kZUF0KDApOlxuICAgICAgcmVzdWx0ID0gQ29tcHJlc3Npb25NZXRob2QuTHptYTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBJbmNpZGVudChcIkludmFsaWRDb21wcmVzc2lvbk1ldGhvZFwiLCBcIkludmFsaWQgY29tcHJlc3Npb24gbWV0aG9kXCIpO1xuICB9XG4gIGJ5dGVTdHJlYW0uYnl0ZVBvcyArPSAzO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VTd2ZTaWduYXR1cmUoYnl0ZVN0cmVhbTogU3RyZWFtKTogU3dmU2lnbmF0dXJlIHtcbiAgaWYgKGJ5dGVTdHJlYW0uYnl0ZUVuZCA8IDgpIHtcbiAgICB0aHJvdyBjcmVhdGVJbmNvbXBsZXRlU3RyZWFtRXJyb3IoOCk7XG4gIH1cblxuICBjb25zdCBjb21wcmVzc2lvbk1ldGhvZDogQ29tcHJlc3Npb25NZXRob2QgPSBwYXJzZUNvbXByZXNzaW9uTWV0aG9kKGJ5dGVTdHJlYW0pO1xuICBjb25zdCBzd2ZWZXJzaW9uOiBVaW50OCA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQ4KCk7XG4gIGNvbnN0IHVuY29tcHJlc3NlZEZpbGVMZW5ndGg6IFVpbnQzMiA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQzMkxFKCk7XG5cbiAgcmV0dXJuIHtjb21wcmVzc2lvbk1ldGhvZCwgc3dmVmVyc2lvbiwgdW5jb21wcmVzc2VkRmlsZUxlbmd0aH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUhlYWRlcihieXRlU3RyZWFtOiBTdHJlYW0pOiBIZWFkZXIge1xuICBjb25zdCBzaWduYXR1cmU6IFN3ZlNpZ25hdHVyZSA9IHBhcnNlU3dmU2lnbmF0dXJlKGJ5dGVTdHJlYW0pO1xuICBjb25zdCBmcmFtZVNpemU6IFJlY3QgPSBwYXJzZVJlY3QoYnl0ZVN0cmVhbSk7XG4gIGNvbnN0IGZyYW1lUmF0ZTogVWZpeGVkOFA4ID0gYnl0ZVN0cmVhbS5yZWFkVWZpeGVkOFA4TEUoKTtcbiAgY29uc3QgZnJhbWVDb3VudDogVWludDE2ID0gYnl0ZVN0cmVhbS5yZWFkVWludDE2TEUoKTtcbiAgcmV0dXJuIHsuLi5zaWduYXR1cmUsIGZyYW1lU2l6ZSwgZnJhbWVSYXRlLCBmcmFtZUNvdW50fTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==


/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const swf_tree_1 = __webpack_require__(12);
const stream_1 = __webpack_require__(70);
const avm1_1 = __webpack_require__(71);
const basic_data_types_1 = __webpack_require__(28);
const button_1 = __webpack_require__(398);
const display_1 = __webpack_require__(125);
const image_1 = __webpack_require__(399);
const morph_shape_1 = __webpack_require__(400);
const shape_1 = __webpack_require__(72);
const text_1 = __webpack_require__(401);
/**
 * Read tags until the end of the stream or "end-of-tags".
 */
function parseTagBlockString(byteStream, context) {
    const tags = [];
    while (byteStream.available() > 0) {
        // A null byte indicates the end-of-tags
        if (byteStream.peekUint8() === 0) {
            byteStream.skip(1);
            break;
        }
        tags.push(parseTag(byteStream, context));
    }
    return tags;
}
exports.parseTagBlockString = parseTagBlockString;
function parseTag(byteStream, context) {
    const { code, length } = parseTagHeader(byteStream);
    const tag = parseTagBody(byteStream.take(length), code, context);
    switch (tag.type) {
        case swf_tree_1.TagType.DefineFont:
            if (tag.glyphs !== undefined) {
                context.setGlyphCount(tag.id, tag.glyphs.length);
            }
            else {
                // TODO: Explain why we are using 0: does it make sense? Maybe `undefined` is better?
                context.setGlyphCount(tag.id, 0);
            }
            break;
        default:
            break;
    }
    return tag;
}
exports.parseTag = parseTag;
function parseTagHeader(byteStream) {
    const codeAndLength = byteStream.readUint16LE();
    const code = codeAndLength >>> 6;
    const maxLength = (1 << 6) - 1;
    const length = codeAndLength & maxLength;
    if (length === maxLength) {
        return { code, length: byteStream.readUint32LE() };
    }
    else {
        return { code, length };
    }
}
// tslint:disable-next-line:cyclomatic-complexity
function parseTagBody(byteStream, tagCode, context) {
    switch (tagCode) {
        case 1:
            return { type: swf_tree_1.TagType.ShowFrame };
        case 2:
            return parseDefineShape(byteStream);
        case 4:
            return parsePlaceObject(byteStream);
        case 5:
            return parseRemoveObject(byteStream);
        case 9:
            return parseSetBackgroundColor(byteStream);
        case 11:
            return parseDefineText(byteStream);
        case 12:
            return parseDoAction(byteStream);
        case 20:
            return parseDefineBitsLossless(byteStream);
        case 22:
            return parseDefineShape2(byteStream);
        case 26: {
            const swfVersion = context.getVersion();
            if (swfVersion === undefined) {
                throw new incident_1.Incident("Missing SWF version, unable to parse placeObject2");
            }
            return parsePlaceObject2(byteStream, swfVersion);
        }
        case 28:
            return parseRemoveObject2(byteStream);
        case 32:
            return parseDefineShape3(byteStream);
        case 34:
            return parseDefineButton2(byteStream);
        case 35: {
            const swfVersion = context.getVersion();
            if (swfVersion === undefined) {
                throw new incident_1.Incident("Missing SWF version, unable to parse defineBitsJpeg3");
            }
            return parseDefineBitsJpeg3(byteStream, swfVersion);
        }
        case 36:
            return parseDefineBitsLossless2(byteStream);
        case 37:
            return parseDefineEditText(byteStream);
        case 39:
            return parseDefineSprite(byteStream, context);
        case 43:
            return parseFrameLabel(byteStream);
        case 46:
            return parseDefineMorphShape(byteStream);
        case 56:
            return parseExportAssets(byteStream);
        case 57:
            return parseImportAssets(byteStream);
        case 59:
            return parseDoInitAction(byteStream);
        case 69:
            return parseFileAttributes(byteStream);
        case 70: {
            const swfVersion = context.getVersion();
            if (swfVersion === undefined) {
                throw new incident_1.Incident("Missing SWF version, unable to parse placeObject3");
            }
            return parsePlaceObject3(byteStream, swfVersion);
        }
        case 71:
            return parseImportAssets2(byteStream);
        case 73:
            return parseDefineFontAlignZones(byteStream, context.getGlyphCount.bind(context));
        case 74:
            return parseCsmTextSettings(byteStream);
        case 75:
            return parseDefineFont(byteStream);
        case 77:
            return parseMetadata(byteStream);
        case 83:
            return parseDefineShape4(byteStream);
        case 84:
            return parseDefineMorphShape2(byteStream);
        case 86:
            return parseDefineSceneAndFrameLabelData(byteStream);
        case 88:
            return parseDefineFontName(byteStream);
        default:
            return { type: swf_tree_1.TagType.Unknown, code: tagCode, data: Uint8Array.from(byteStream.bytes) };
    }
}
function parseDefineBitsJpeg3(byteStream, swfVersion) {
    const id = byteStream.readUint16LE();
    const bytePos = byteStream.bytePos;
    const dataSize = byteStream.readUint32LE();
    let data = byteStream.takeBytes(dataSize);
    let mediaType;
    let imageDimensions;
    if (image_1.testImageStart(data, image_1.JPEG_START) || (swfVersion < 8 && image_1.testImageStart(data, image_1.ERRONEOUS_JPEG_START))) {
        mediaType = "image/jpeg";
        imageDimensions = image_1.getJpegImageDimensions(new stream_1.Stream(data));
        if (byteStream.available() > 0) {
            mediaType = "image/x-ajpeg";
            byteStream.bytePos = bytePos;
            data = byteStream.tailBytes();
        }
    }
    else if (image_1.testImageStart(data, image_1.PNG_START)) {
        mediaType = "image/png";
        imageDimensions = image_1.getPngImageDimensions(new stream_1.Stream(data));
    }
    else if (image_1.testImageStart(data, image_1.GIF_START)) {
        mediaType = "image/gif";
        imageDimensions = image_1.getGifImageDimensions(new stream_1.Stream(data));
    }
    else {
        throw new incident_1.Incident("UnknownBitmapType");
    }
    return Object.assign({ type: swf_tree_1.TagType.DefineBitmap, id }, imageDimensions, { mediaType, data });
}
exports.parseDefineBitsJpeg3 = parseDefineBitsJpeg3;
function parseDefineBitsLossless(byteStream) {
    return parseDefineBitsLosslessAny(byteStream, "image/x-swf-bmp");
}
exports.parseDefineBitsLossless = parseDefineBitsLossless;
function parseDefineBitsLossless2(byteStream) {
    return parseDefineBitsLosslessAny(byteStream, "image/x-swf-abmp");
}
exports.parseDefineBitsLossless2 = parseDefineBitsLossless2;
function parseDefineBitsLosslessAny(byteStream, mediaType) {
    const id = byteStream.readUint16LE();
    const startPos = byteStream.bytePos;
    byteStream.skip(1); // BitmapFormat
    const width = byteStream.readUint16LE();
    const height = byteStream.readUint16LE();
    byteStream.bytePos = startPos;
    const data = byteStream.tailBytes();
    return { type: swf_tree_1.TagType.DefineBitmap, id, width, height, mediaType, data };
}
exports.parseDefineBitsLosslessAny = parseDefineBitsLosslessAny;
function parseDefineButton2(byteStream) {
    const buttonId = byteStream.readUint16LE();
    const flags = byteStream.readUint8();
    const trackAsMenu = (flags & (1 << 0)) !== 0;
    const actionOffset = byteStream.readUint16LE();
    const characters = button_1.parseButtonRecordString(byteStream, button_1.ButtonVersion.Button2);
    const actions = actionOffset === 0 ? [] : button_1.parseButton2CondActionString(byteStream);
    return { type: swf_tree_1.TagType.DefineButton, buttonId, trackAsMenu, characters, actions };
}
exports.parseDefineButton2 = parseDefineButton2;
function parseCsmTextSettings(byteStream) {
    const textId = byteStream.readUint16LE();
    const renderer = text_1.parseTextRendererBits(byteStream);
    const fitting = text_1.parseGridFittingBits(byteStream);
    byteStream.skipBits(3);
    const thickness = byteStream.readFloat32BE();
    const sharpness = byteStream.readFloat32BE();
    byteStream.skip(1);
    return { type: swf_tree_1.TagType.CsmTextSettings, textId, renderer, fitting, thickness, sharpness };
}
exports.parseCsmTextSettings = parseCsmTextSettings;
function parseDefineFont(byteStream) {
    const id = byteStream.readUint16LE();
    const hasLayout = byteStream.readBoolBits();
    const isShiftJis = byteStream.readBoolBits();
    const isAnsi = byteStream.readBoolBits();
    const isSmall = byteStream.readBoolBits();
    const useWideOffsets = byteStream.readBoolBits();
    const useWideCodes = byteStream.readBoolBits();
    const isItalic = byteStream.readBoolBits();
    const isBold = byteStream.readBoolBits();
    const language = text_1.parseLanguageCode(byteStream);
    const fontNameLength = byteStream.readUint8();
    const fontName = byteStream.take(fontNameLength).readCString();
    const glyphCount = byteStream.readUint16LE();
    if (glyphCount === 0) {
        // System font
        return {
            type: swf_tree_1.TagType.DefineFont,
            id,
            fontName,
            isSmall,
            isShiftJis,
            isAnsi,
            isItalic,
            isBold,
            language,
        };
    }
    const glyphs = text_1.parseOffsetGlyphs(byteStream, glyphCount, useWideOffsets);
    const codeUnits = new Array(glyphCount);
    for (let i = 0; i < codeUnits.length; i++) {
        codeUnits[i] = useWideCodes ? byteStream.readUint16LE() : byteStream.readUint8();
    }
    const layout = hasLayout ? text_1.parseFontLayout(byteStream, glyphCount) : undefined;
    return {
        type: swf_tree_1.TagType.DefineFont,
        id,
        fontName,
        isSmall,
        isShiftJis,
        isAnsi,
        isItalic,
        isBold,
        language,
        glyphs,
        codeUnits,
        layout,
    };
}
exports.parseDefineFont = parseDefineFont;
function parseDefineFontAlignZones(byteStream, glyphCountProvider) {
    const fontId = byteStream.readUint16LE();
    const glyphCount = glyphCountProvider(fontId);
    if (glyphCount === undefined) {
        throw new incident_1.Incident("ParseError", `ParseDefineFontAlignZones: Unknown font for id: ${fontId}`);
    }
    const csmTableHint = text_1.parseCsmTableHintBits(byteStream);
    byteStream.skipBits(6);
    const zones = [];
    for (let i = 0; i < glyphCount; i++) {
        zones.push(text_1.parseFontAlignmentZone(byteStream));
    }
    return { type: swf_tree_1.TagType.DefineFontAlignZones, fontId, csmTableHint, zones };
}
exports.parseDefineFontAlignZones = parseDefineFontAlignZones;
function parseDefineFontName(byteStream) {
    const fontId = byteStream.readUint16LE();
    const name = byteStream.readCString();
    const copyright = byteStream.readCString();
    return { type: swf_tree_1.TagType.DefineFontName, fontId, name, copyright };
}
exports.parseDefineFontName = parseDefineFontName;
function parseDefineMorphShape(byteStream) {
    return parseDefineMorphShapeAny(byteStream, morph_shape_1.MorphShapeVersion.MorphShape1);
}
exports.parseDefineMorphShape = parseDefineMorphShape;
function parseDefineMorphShape2(byteStream) {
    return parseDefineMorphShapeAny(byteStream, morph_shape_1.MorphShapeVersion.MorphShape2);
}
exports.parseDefineMorphShape2 = parseDefineMorphShape2;
function parseDefineMorphShapeAny(byteStream, morphShapeVersion) {
    const id = byteStream.readUint16LE();
    const startBounds = basic_data_types_1.parseRect(byteStream);
    const endBounds = basic_data_types_1.parseRect(byteStream);
    let startEdgeBounds = undefined;
    let endEdgeBounds = undefined;
    let hasNonScalingStrokes = false;
    let hasScalingStrokes = false;
    if (morphShapeVersion === morph_shape_1.MorphShapeVersion.MorphShape2) {
        startEdgeBounds = basic_data_types_1.parseRect(byteStream);
        endEdgeBounds = basic_data_types_1.parseRect(byteStream);
        const flags = byteStream.readUint8();
        // (Skip first 6 bits)
        hasNonScalingStrokes = (flags & (1 << 1)) !== 0;
        hasScalingStrokes = (flags & (1 << 0)) !== 0;
    }
    const shape = morph_shape_1.parseMorphShape(byteStream, morphShapeVersion);
    return {
        type: swf_tree_1.TagType.DefineMorphShape,
        id,
        startBounds,
        endBounds,
        startEdgeBounds,
        endEdgeBounds,
        hasNonScalingStrokes,
        hasScalingStrokes,
        shape,
    };
}
exports.parseDefineMorphShapeAny = parseDefineMorphShapeAny;
function parseDefineSceneAndFrameLabelData(byteStream) {
    const sceneCount = byteStream.readEncodedUint32LE();
    const scenes = [];
    for (let i = 0; i < sceneCount; i++) {
        const offset = byteStream.readEncodedUint32LE();
        const name = byteStream.readCString();
        scenes.push({ offset, name });
    }
    const labelCount = byteStream.readEncodedUint32LE();
    const labels = [];
    for (let i = 0; i < labelCount; i++) {
        const frame = byteStream.readEncodedUint32LE();
        const name = byteStream.readCString();
        labels.push({ frame, name });
    }
    return {
        type: swf_tree_1.TagType.DefineSceneAndFrameLabelData,
        scenes,
        labels,
    };
}
exports.parseDefineSceneAndFrameLabelData = parseDefineSceneAndFrameLabelData;
function parseDefineShape(byteStream) {
    return parseDefineShapeAny(byteStream, shape_1.ShapeVersion.Shape1);
}
exports.parseDefineShape = parseDefineShape;
function parseDefineShape2(byteStream) {
    return parseDefineShapeAny(byteStream, shape_1.ShapeVersion.Shape2);
}
exports.parseDefineShape2 = parseDefineShape2;
function parseDefineShape3(byteStream) {
    return parseDefineShapeAny(byteStream, shape_1.ShapeVersion.Shape3);
}
exports.parseDefineShape3 = parseDefineShape3;
function parseDefineShape4(byteStream) {
    return parseDefineShapeAny(byteStream, shape_1.ShapeVersion.Shape4);
}
exports.parseDefineShape4 = parseDefineShape4;
function parseDefineShapeAny(byteStream, shapeVersion) {
    const id = byteStream.readUint16LE();
    const bounds = basic_data_types_1.parseRect(byteStream);
    let edgeBounds = undefined;
    let hasFillWinding = false;
    let hasNonScalingStrokes = false;
    let hasScalingStrokes = false;
    if (shapeVersion === shape_1.ShapeVersion.Shape4) {
        edgeBounds = basic_data_types_1.parseRect(byteStream);
        const flags = byteStream.readUint8();
        // (Skip first 5 bits)
        hasFillWinding = (flags & (1 << 2)) !== 0;
        hasNonScalingStrokes = (flags & (1 << 1)) !== 0;
        hasScalingStrokes = (flags & (1 << 0)) !== 0;
    }
    const shape = shape_1.parseShape(byteStream, shapeVersion);
    return {
        type: swf_tree_1.TagType.DefineShape,
        id,
        bounds,
        edgeBounds,
        hasFillWinding,
        hasNonScalingStrokes,
        hasScalingStrokes,
        shape,
    };
}
function parseDefineEditText(byteStream) {
    const id = byteStream.readUint16LE();
    const bounds = basic_data_types_1.parseRect(byteStream);
    const flags = byteStream.readUint16BE();
    const hasText = (flags & (1 << 15)) !== 0;
    const wordWrap = (flags & (1 << 14)) !== 0;
    const multiline = (flags & (1 << 13)) !== 0;
    const password = (flags & (1 << 12)) !== 0;
    const readonly = (flags & (1 << 11)) !== 0;
    const hasColor = (flags & (1 << 10)) !== 0;
    const hasMaxLength = (flags & (1 << 9)) !== 0;
    const hasFont = (flags & (1 << 8)) !== 0;
    const hasFontClass = (flags & (1 << 7)) !== 0;
    const autoSize = (flags & (1 << 6)) !== 0;
    const hasLayout = (flags & (1 << 5)) !== 0;
    const noSelect = (flags & (1 << 4)) !== 0;
    const border = (flags & (1 << 3)) !== 0;
    const wasStatic = (flags & (1 << 2)) !== 0;
    const html = (flags & (1 << 1)) !== 0;
    const useGlyphFont = (flags & (1 << 0)) !== 0;
    const fontId = hasFont ? byteStream.readUint16LE() : undefined;
    const fontClass = hasFontClass ? byteStream.readCString() : undefined;
    const fontSize = hasFont ? byteStream.readUint16LE() : undefined;
    const color = hasColor ? basic_data_types_1.parseStraightSRgba8(byteStream) : undefined;
    const maxLength = hasMaxLength ? byteStream.readUint16LE() : undefined;
    const align = hasLayout ? text_1.parseTextAlignment(byteStream) : undefined;
    const marginLeft = hasLayout ? byteStream.readUint16LE() : 0;
    const marginRight = hasLayout ? byteStream.readUint16LE() : 0;
    const indent = hasLayout ? byteStream.readUint16LE() : 0;
    const leading = hasLayout ? byteStream.readSint16LE() : 0;
    const rawVariableName = byteStream.readCString();
    const variableName = rawVariableName.length > 0 ? rawVariableName : undefined;
    const text = hasText ? byteStream.readCString() : undefined;
    return {
        type: swf_tree_1.TagType.DefineDynamicText,
        id,
        bounds,
        wordWrap,
        multiline,
        password,
        readonly,
        autoSize,
        noSelect,
        border,
        wasStatic,
        html,
        useGlyphFont,
        fontId,
        fontClass,
        fontSize,
        color,
        maxLength,
        align,
        marginLeft,
        marginRight,
        indent,
        leading,
        variableName,
        text,
    };
}
exports.parseDefineEditText = parseDefineEditText;
function parseDefineSprite(byteStream, context) {
    const id = byteStream.readUint16LE();
    const frameCount = byteStream.readUint16LE();
    const tags = parseTagBlockString(byteStream, context);
    return {
        type: swf_tree_1.TagType.DefineSprite,
        id,
        frameCount,
        // TODO: Check validity of the tags
        tags: tags,
    };
}
exports.parseDefineSprite = parseDefineSprite;
function parseDefineText(byteStream) {
    const id = byteStream.readUint16LE();
    const bounds = basic_data_types_1.parseRect(byteStream);
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    const indexBits = byteStream.readUint8();
    const advanceBits = byteStream.readUint8();
    const records = text_1.parseTextRecordString(byteStream, false, indexBits, advanceBits);
    return { type: swf_tree_1.TagType.DefineText, id, bounds, matrix, records };
}
exports.parseDefineText = parseDefineText;
function parseDefineText2(byteStream) {
    const id = byteStream.readUint16LE();
    const bounds = basic_data_types_1.parseRect(byteStream);
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    const indexBits = byteStream.readUint8();
    const advanceBits = byteStream.readUint8();
    const records = text_1.parseTextRecordString(byteStream, true, indexBits, advanceBits);
    return { type: swf_tree_1.TagType.DefineText, id, bounds, matrix, records };
}
exports.parseDefineText2 = parseDefineText2;
function parseDoAction(byteStream) {
    return { type: swf_tree_1.TagType.DoAction, actions: avm1_1.parseActionsString(byteStream) };
}
exports.parseDoAction = parseDoAction;
function parseDoInitAction(byteStream) {
    const spriteId = byteStream.readUint16LE();
    return { type: swf_tree_1.TagType.DoInitAction, spriteId, actions: avm1_1.parseActionsString(byteStream) };
}
exports.parseDoInitAction = parseDoInitAction;
function parseExportAssets(byteStream) {
    const assetCount = byteStream.readUint16LE();
    const assets = [];
    for (let i = 0; i < assetCount; i++) {
        const id = byteStream.readUint16LE();
        const name = byteStream.readCString();
        assets.push({ id, name });
    }
    return {
        type: swf_tree_1.TagType.ExportAssets,
        assets,
    };
}
exports.parseExportAssets = parseExportAssets;
function parseFileAttributes(byteStream) {
    const flags = byteStream.readUint8();
    byteStream.skip(3);
    return {
        type: swf_tree_1.TagType.FileAttributes,
        useDirectBlit: (flags & (1 << 6)) !== 0,
        useGpu: (flags & (1 << 5)) !== 0,
        hasMetadata: (flags & (1 << 4)) !== 0,
        useAs3: (flags & (1 << 3)) !== 0,
        noCrossDomainCaching: (flags & (1 << 2)) !== 0,
        useRelativeUrls: (flags & (1 << 1)) !== 0,
        useNetwork: (flags & (1 << 0)) !== 0,
    };
}
exports.parseFileAttributes = parseFileAttributes;
function parseFrameLabel(byteStream) {
    const name = byteStream.readCString();
    const anchorFlag = byteStream.available() > 1 && byteStream.readUint8() !== 0;
    return {
        type: swf_tree_1.TagType.FrameLabel,
        name,
        anchorFlag,
    };
}
exports.parseFrameLabel = parseFrameLabel;
function parseImportAssets(byteStream) {
    const url = byteStream.readCString();
    const assetCount = byteStream.readUint16LE();
    const assets = [];
    for (let i = 0; i < assetCount; i++) {
        const id = byteStream.readUint16LE();
        const name = byteStream.readCString();
        assets.push({ id, name });
    }
    return {
        type: swf_tree_1.TagType.ImportAssets,
        url,
        assets,
    };
}
exports.parseImportAssets = parseImportAssets;
function parseImportAssets2(byteStream) {
    const url = byteStream.readCString();
    byteStream.skip(2);
    const assetCount = byteStream.readUint16LE();
    const assets = [];
    for (let i = 0; i < assetCount; i++) {
        const id = byteStream.readUint16LE();
        const name = byteStream.readCString();
        assets.push({ id, name });
    }
    return {
        type: swf_tree_1.TagType.ImportAssets,
        url,
        assets,
    };
}
exports.parseImportAssets2 = parseImportAssets2;
function parseMetadata(byteStream) {
    return { type: swf_tree_1.TagType.Metadata, metadata: byteStream.readCString() };
}
exports.parseMetadata = parseMetadata;
function parsePlaceObject(byteStream) {
    const characterId = byteStream.readUint16LE();
    const depth = byteStream.readUint16LE();
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    let colorTransform = undefined;
    if (byteStream.available() > 0) {
        colorTransform = Object.assign({}, basic_data_types_1.parseColorTransform(byteStream), { alphaMult: swf_tree_1.Fixed8P8.fromValue(1), alphaAdd: 0 });
    }
    return {
        type: swf_tree_1.TagType.PlaceObject,
        isMove: false,
        depth,
        characterId,
        matrix,
        colorTransform,
        filters: undefined,
    };
}
exports.parsePlaceObject = parsePlaceObject;
function parsePlaceObject2(byteStream, swfVersion) {
    const hasClipActions = byteStream.readBoolBits();
    const hasClipDepth = byteStream.readBoolBits();
    const hasName = byteStream.readBoolBits();
    const hasRatio = byteStream.readBoolBits();
    const hasColorTransform = byteStream.readBoolBits();
    const hasMatrix = byteStream.readBoolBits();
    const hasCharacterId = byteStream.readBoolBits();
    const isMove = byteStream.readBoolBits();
    const depth = byteStream.readUint16LE();
    const characterId = hasCharacterId ? byteStream.readUint16LE() : undefined;
    const matrix = hasMatrix ? basic_data_types_1.parseMatrix(byteStream) : undefined;
    const colorTransform = hasColorTransform ?
        basic_data_types_1.parseColorTransformWithAlpha(byteStream) :
        undefined;
    const ratio = hasRatio ? byteStream.readUint16LE() : undefined;
    const name = hasName ? byteStream.readCString() : undefined;
    const clipDepth = hasClipDepth ? byteStream.readUint16LE() : undefined;
    const clipActions = hasClipActions ?
        display_1.parseClipActionsString(byteStream, swfVersion >= 6) :
        undefined;
    return {
        type: swf_tree_1.TagType.PlaceObject,
        isMove,
        depth,
        characterId,
        matrix,
        colorTransform,
        ratio,
        name,
        clipDepth,
        filters: undefined,
        clipActions,
    };
}
exports.parsePlaceObject2 = parsePlaceObject2;
function parsePlaceObject3(byteStream, swfVersion) {
    const flags = byteStream.readUint16BE();
    const hasClipActions = (flags & (1 << 15)) !== 0;
    const hasClipDepth = (flags & (1 << 14)) !== 0;
    const hasName = (flags & (1 << 13)) !== 0;
    const hasRatio = (flags & (1 << 12)) !== 0;
    const hasColorTransform = (flags & (1 << 11)) !== 0;
    const hasMatrix = (flags & (1 << 10)) !== 0;
    const hasCharacterId = (flags & (1 << 9)) !== 0;
    const isMove = (flags & (1 << 8)) !== 0;
    // Reserved: (flags & (1 << 7))
    const hasBackgroundColor = (flags & (1 << 6)) !== 0;
    const hasVisibility = (flags & (1 << 5)) !== 0;
    const hasImage = (flags & (1 << 4)) !== 0;
    const hasClassName = (flags & (1 << 3)) !== 0;
    const hasCacheHint = (flags & (1 << 2)) !== 0;
    const hasBlendMode = (flags & (1 << 1)) !== 0;
    const hasFilters = (flags & (1 << 0)) !== 0;
    const depth = byteStream.readUint16LE();
    const className = hasClassName || (hasImage && hasCharacterId) ?
        byteStream.readCString() :
        undefined;
    const characterId = hasCharacterId ? byteStream.readUint16LE() : undefined;
    const matrix = hasMatrix ? basic_data_types_1.parseMatrix(byteStream) : undefined;
    const colorTransform = hasColorTransform ?
        basic_data_types_1.parseColorTransformWithAlpha(byteStream) :
        undefined;
    const ratio = hasRatio ? byteStream.readUint16LE() : undefined;
    const name = hasName ? byteStream.readCString() : undefined;
    const clipDepth = hasClipDepth ? byteStream.readUint16LE() : undefined;
    const filters = hasFilters ? display_1.parseFilterList(byteStream) : [];
    const blendMode = hasBlendMode ? display_1.parseBlendMode(byteStream) : swf_tree_1.BlendMode.Normal;
    const useBitmapCache = hasCacheHint ? byteStream.readUint8() !== 0 : false;
    const isVisible = hasVisibility ? byteStream.readUint8() !== 0 : false;
    // This does not match the spec, see Shumway
    // https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/swf/parser/module.ts#L158
    // TODO(demurgos): Check if it is RGBA or ARGB
    const backgroundColor = hasBackgroundColor ? basic_data_types_1.parseStraightSRgba8(byteStream) : undefined;
    const clipActions = hasClipActions ?
        display_1.parseClipActionsString(byteStream, swfVersion >= 6) :
        undefined;
    return {
        type: swf_tree_1.TagType.PlaceObject,
        isMove,
        depth,
        characterId,
        matrix,
        colorTransform,
        ratio,
        name,
        className,
        clipDepth,
        filters,
        blendMode,
        bitmapCache: useBitmapCache,
        visible: isVisible,
        backgroundColor,
        clipActions,
    };
}
exports.parsePlaceObject3 = parsePlaceObject3;
function parseRemoveObject(byteStream) {
    const characterId = byteStream.readUint16LE();
    const depth = byteStream.readUint16LE();
    return { type: swf_tree_1.TagType.RemoveObject, characterId, depth };
}
exports.parseRemoveObject = parseRemoveObject;
function parseRemoveObject2(byteStream) {
    const depth = byteStream.readUint16LE();
    return { type: swf_tree_1.TagType.RemoveObject, depth };
}
exports.parseRemoveObject2 = parseRemoveObject2;
function parseSetBackgroundColor(byteStream) {
    return { type: swf_tree_1.TagType.SetBackgroundColor, color: basic_data_types_1.parseSRgb8(byteStream) };
}
exports.parseSetBackgroundColor = parseSetBackgroundColor;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const blend_mode_1 = __webpack_require__(65);
const incomplete_stream_1 = __webpack_require__(54);
const avm1_1 = __webpack_require__(71);
const basic_data_types_1 = __webpack_require__(28);
const display_1 = __webpack_require__(125);
var ButtonVersion;
(function (ButtonVersion) {
    ButtonVersion[ButtonVersion["Button1"] = 0] = "Button1";
    ButtonVersion[ButtonVersion["Button2"] = 1] = "Button2";
})(ButtonVersion = exports.ButtonVersion || (exports.ButtonVersion = {}));
function parseButtonRecordString(byteStream, buttonVersion) {
    const result = [];
    while (true) {
        if (byteStream.available() === 0) {
            throw incomplete_stream_1.createIncompleteStreamError();
        }
        if (byteStream.peekUint8() === 0) {
            // Consume end of string
            byteStream.skip(1);
            break;
        }
        result.push(parseButtonRecord(byteStream, buttonVersion));
    }
    return result;
}
exports.parseButtonRecordString = parseButtonRecordString;
function parseButtonRecord(byteStream, buttonVersion) {
    const flags = byteStream.readUint8();
    // (Skip first 2 bits)
    const hasBlendMode = (flags & (1 << 5)) !== 0;
    const hasFilterList = (flags & (1 << 4)) !== 0;
    const stateHitTest = (flags & (1 << 3)) !== 0;
    const stateDown = (flags & (1 << 2)) !== 0;
    const stateOver = (flags & (1 << 1)) !== 0;
    const stateUp = (flags & (1 << 0)) !== 0;
    const characterId = byteStream.readUint16LE();
    const depth = byteStream.readUint16LE();
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    let colorTransform = undefined;
    if (buttonVersion !== ButtonVersion.Button1) {
        colorTransform = basic_data_types_1.parseColorTransformWithAlpha(byteStream);
    }
    let filters = undefined;
    if (buttonVersion !== ButtonVersion.Button1 && hasFilterList) {
        filters = display_1.parseFilterList(byteStream);
    }
    let blendMode = blend_mode_1.BlendMode.Normal;
    if (buttonVersion !== ButtonVersion.Button1 && hasBlendMode) {
        blendMode = display_1.parseBlendMode(byteStream);
    }
    return {
        stateHitTest,
        stateDown,
        stateOver,
        stateUp,
        characterId,
        depth,
        matrix,
        colorTransform,
        filters,
        blendMode,
    };
}
exports.parseButtonRecord = parseButtonRecord;
/**
 * Reads a string of at least one Button2 cond actions
 */
function parseButton2CondActionString(byteStream) {
    const result = [];
    let nextActionOffset;
    do {
        nextActionOffset = byteStream.readUint16LE();
        result.push(parseButton2CondAction(byteStream));
    } while (nextActionOffset !== 0);
    return result;
}
exports.parseButton2CondActionString = parseButton2CondActionString;
function parseButton2CondAction(byteStream) {
    const conditions = parseButtonCond(byteStream);
    const actions = avm1_1.parseActionsString(byteStream);
    return { conditions, actions };
}
exports.parseButton2CondAction = parseButton2CondAction;
function parseButtonCond(byteStream) {
    const bitStream = byteStream.asBitStream();
    const idleToOverDown = bitStream.readBoolBits();
    const outDownToIdle = bitStream.readBoolBits();
    const outDownToOverDown = bitStream.readBoolBits();
    const overDownToOutDown = bitStream.readBoolBits();
    const overDownToOverUp = bitStream.readBoolBits();
    const overUpToOverDown = bitStream.readBoolBits();
    const overUpToIdle = bitStream.readBoolBits();
    const idleToOverUp = bitStream.readBoolBits();
    let keyPress = bitStream.readUint32Bits(7);
    if (keyPress === 0) {
        keyPress = undefined;
    }
    else if (keyPress === 7
        || (9 <= keyPress && keyPress <= 12)
        || (20 <= keyPress && keyPress <= 31)
        || keyPress > 126) {
        throw new incident_1.Incident("InvalidKeyCode", { code: keyPress });
    }
    const overDownToIdle = bitStream.readBoolBits();
    bitStream.align();
    return {
        idleToOverDown,
        outDownToIdle,
        outDownToOverDown,
        overDownToOutDown,
        overDownToOverUp,
        overUpToOverDown,
        overUpToIdle,
        idleToOverUp,
        overDownToIdle,
        keyPress,
    };
}
exports.parseButtonCond = parseButtonCond;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
// SWF and PNG spec (5.2 PNG Signature)
exports.PNG_START = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);
exports.GIF_START = new Uint8Array([0x47, 0x49, 0x46, 0x38, 0x39, 0x61]); // "GIF89a"
exports.JPEG_START = new Uint8Array([0xff, 0xd8]); // SOI marker
exports.ERRONEOUS_JPEG_START = new Uint8Array([0xff, 0xd9, 0xff, 0xd8, 0xff, 0xd8]);
/**
 * Reads image properties from a byte stream with the content of a PNG image.
 * It trusts that the image has a valid PNG signature (first 8 bytes).
 *
 * @see https://www.w3.org/TR/PNG/#5Chunk-layout
 * @see https://www.w3.org/TR/PNG/#5ChunkOrdering
 * @see https://www.w3.org/TR/PNG/#11IHDR
 */
function getPngImageDimensions(byteStream) {
    // Skip signature (8 bytes) and size of chunk (4 bytes)
    byteStream.skip(12);
    const chunkType = byteStream.readUint32LE();
    const IHDR_CHUNK_TYPE = 0x49484452;
    if (chunkType !== IHDR_CHUNK_TYPE) {
        throw new incident_1.Incident("InvalidPngFile", { byteStream }, "Expected first chunk to be `IHDR`");
    }
    const width = byteStream.readUint32LE();
    const height = byteStream.readUint32LE();
    return { width, height };
}
exports.getPngImageDimensions = getPngImageDimensions;
/**
 * Returns the JPEG chunks: assumes all the chunks are complete.
 */
function* readJpegChunks(byteStream) {
    const bytes = byteStream.takeBytes(byteStream.available());
    let i = 0;
    const byteCount = bytes.length;
    function getNextChunkIndex(search) {
        // A chunk marker starts with `0xff` followed by any byte except `0x00` (ff 00 is escaped ff)
        // or `0xff` (padding)
        while ((search + 1) < byteCount) {
            if (bytes[search] === 0xff && (bytes[search + 1] !== 0x00 && bytes[search + 1] !== 0xff)) {
                return search;
            }
            else {
                search++;
            }
        }
        return undefined;
    }
    let chunkStart = getNextChunkIndex(i);
    while (chunkStart !== undefined) {
        const code = bytes[chunkStart + 1];
        i += 2;
        if ((code >= 0xc0 && code <= 0xc7)
            || (code >= 0xc9 && code <= 0xcf)
            || (code >= 0xda && code <= 0xef)
            || code === 0xfe) {
            i += (bytes[i] << 8) + bytes[i + 1]; // Advance by `size` if present (Uint16LE)
        }
        const nextChunkStart = getNextChunkIndex(i);
        yield bytes.subarray(chunkStart, nextChunkStart);
        chunkStart = nextChunkStart;
    }
}
exports.readJpegChunks = readJpegChunks;
// export function readJpeg(byteStream: ByteStream, fixJpeg: boolean): [Uint8Array, ImageProperties] {
//   let height: Uint16 | undefined = undefined;
//   let width: Uint16 | undefined = undefined;
//
//   const JPEG_SOI = new Uint8Array([0xff, 0xd8]);
//   const JPEG_EOI = new Uint8Array([0xff, 0xd9]);
//   const chunks: Uint8Array[] = [];
//   if (fixJpeg) {
//     chunks.push(JPEG_SOI);
//   }
//   for (const chunk of readJpegChunks(byteStream)) {
//     const code: Uint8 = chunk[1];
//     if (fixJpeg) {
//       if (code === 0xd8 || code === 0xd9) { // SOI or EOI
//         continue;
//       }
//     }
//     chunks.push(chunk);
//     if ((code & 0xfc) === 0xc0 && chunk.length >= 9) { // SOF: 0b110000xx
//       const frameHeight: Uint16 = (chunk[5] << 8) + chunk[6];
//       const frameWidth: Uint16 = (chunk[5] << 8) + chunk[6];
//       if (height === undefined) {
//         height = frameHeight;
//       } else if (height !== frameHeight) {
//         // TODO: console.warn or error
//       }
//       if (width === undefined) {
//         width = frameWidth;
//       } else if (width !== frameWidth) {
//         // TODO: console.warn or error
//       }
//       // TODO: Inject JPEG table in first SOF if needed?
//     }
//   }
//   if (fixJpeg) {
//     chunks.push(JPEG_EOI);
//   }
//   if (width === undefined || height === undefined) {
//     throw new Incident("InvalidJpeg", "Frame dimensions not found");
//   }
//   return [concatBytes(chunks), {width, height, hasAlpha: false}];
// }
function getJpegImageDimensions(byteStream) {
    let height = undefined;
    let width = undefined;
    for (const chunk of readJpegChunks(byteStream)) {
        const code = chunk[1];
        if ((code & 0xfc) === 0xc0 && chunk.length >= 9) {
            // TODO: Check why TSLint is confused here
            // tslint:disable-next-line:restrict-plus-operands
            const frameHeight = (chunk[5] << 8) + chunk[6];
            // tslint:disable-next-line:restrict-plus-operands
            const frameWidth = (chunk[7] << 8) + chunk[8];
            if (height === undefined || width === undefined) {
                height = frameHeight;
                width = frameWidth;
            }
            else if (height !== frameHeight || width !== frameWidth) {
                // TODO: console.warn or error
            }
        }
    }
    if (width === undefined || height === undefined) {
        throw new incident_1.Incident("InvalidJpeg", "Frame dimensions not found");
    }
    return { width, height };
}
exports.getJpegImageDimensions = getJpegImageDimensions;
function getGifImageDimensions(byteStream) {
    byteStream.skip(6); // GIF header: "GIF89a" in ASCII for SWF
    const width = byteStream.readUint16BE();
    const height = byteStream.readUint16BE();
    return { width, height };
}
exports.getGifImageDimensions = getGifImageDimensions;
/**
 * Returns a boolean indicating if `imageData` starts with `startBytes`
 */
function testImageStart(imageData, startBytes) {
    if (imageData.length < startBytes.length) {
        return false;
    }
    for (let i = 0; i < startBytes.length; i++) {
        if (imageData[i] !== startBytes[i]) {
            return false;
        }
    }
    return true;
}
exports.testImageStart = testImageStart;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvcGFyc2Vycy9pbWFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFvQztBQVNwQyx1Q0FBdUM7QUFDMUIsUUFBQSxTQUFTLEdBQWUsSUFBSSxVQUFVLENBQUMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUN6RixRQUFBLFNBQVMsR0FBZSxJQUFJLFVBQVUsQ0FBQyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVc7QUFDekYsUUFBQSxVQUFVLEdBQWUsSUFBSSxVQUFVLENBQUMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLGFBQWE7QUFDcEUsUUFBQSxvQkFBb0IsR0FBZSxJQUFJLFVBQVUsQ0FBQyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUVyRzs7Ozs7OztHQU9HO0FBQ0gsK0JBQXNDLFVBQXNCO0lBQzFELHVEQUF1RDtJQUN2RCxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3BCLE1BQU0sU0FBUyxHQUFXLFVBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNwRCxNQUFNLGVBQWUsR0FBVyxVQUFVLENBQUM7SUFDM0MsRUFBRSxDQUFDLENBQUMsU0FBUyxLQUFLLGVBQWUsQ0FBQyxDQUFDLENBQUM7UUFDbEMsTUFBTSxJQUFJLG1CQUFRLENBQUMsZ0JBQWdCLEVBQUUsRUFBQyxVQUFVLEVBQUMsRUFBRSxtQ0FBbUMsQ0FBQyxDQUFDO0lBQzFGLENBQUM7SUFDRCxNQUFNLEtBQUssR0FBVyxVQUFVLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDaEQsTUFBTSxNQUFNLEdBQVcsVUFBVSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ2pELE1BQU0sQ0FBQyxFQUFDLEtBQUssRUFBRSxNQUFNLEVBQUMsQ0FBQztBQUN6QixDQUFDO0FBWEQsc0RBV0M7QUFFRDs7R0FFRztBQUNILFFBQWUsQ0FBQyxnQkFBZ0IsVUFBc0I7SUFDcEQsTUFBTSxLQUFLLEdBQWUsVUFBVSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUN2RSxJQUFJLENBQUMsR0FBYSxDQUFDLENBQUM7SUFDcEIsTUFBTSxTQUFTLEdBQWEsS0FBSyxDQUFDLE1BQU0sQ0FBQztJQUV6QywyQkFBMkIsTUFBZ0I7UUFDekMsNkZBQTZGO1FBQzdGLHNCQUFzQjtRQUN0QixPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxHQUFHLFNBQVMsRUFBRSxDQUFDO1lBQ2hDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxLQUFLLElBQUksSUFBSSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDekYsTUFBTSxDQUFDLE1BQU0sQ0FBQztZQUNoQixDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ04sTUFBTSxFQUFFLENBQUM7WUFDWCxDQUFDO1FBQ0gsQ0FBQztRQUNELE1BQU0sQ0FBQyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUVELElBQUksVUFBVSxHQUF1QixpQkFBaUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxRCxPQUFPLFVBQVUsS0FBSyxTQUFTLEVBQUUsQ0FBQztRQUNoQyxNQUFNLElBQUksR0FBVSxLQUFLLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzFDLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDUCxFQUFFLENBQUMsQ0FDRCxDQUFDLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQztlQUMzQixDQUFDLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQztlQUM5QixDQUFDLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQztlQUM5QixJQUFJLEtBQUssSUFDZCxDQUFDLENBQUMsQ0FBQztZQUNELENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsMENBQTBDO1FBQ2pGLENBQUM7UUFDRCxNQUFNLGNBQWMsR0FBdUIsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDaEUsTUFBTSxLQUFLLENBQUMsUUFBUSxDQUFDLFVBQVUsRUFBRSxjQUFjLENBQUMsQ0FBQztRQUNqRCxVQUFVLEdBQUcsY0FBYyxDQUFDO0lBQzlCLENBQUM7QUFDSCxDQUFDO0FBbENELHdDQWtDQztBQUVELHNHQUFzRztBQUN0RyxnREFBZ0Q7QUFDaEQsK0NBQStDO0FBQy9DLEVBQUU7QUFDRixtREFBbUQ7QUFDbkQsbURBQW1EO0FBQ25ELHFDQUFxQztBQUNyQyxtQkFBbUI7QUFDbkIsNkJBQTZCO0FBQzdCLE1BQU07QUFDTixzREFBc0Q7QUFDdEQsb0NBQW9DO0FBQ3BDLHFCQUFxQjtBQUNyQiw0REFBNEQ7QUFDNUQsb0JBQW9CO0FBQ3BCLFVBQVU7QUFDVixRQUFRO0FBQ1IsMEJBQTBCO0FBQzFCLDRFQUE0RTtBQUM1RSxnRUFBZ0U7QUFDaEUsK0RBQStEO0FBQy9ELG9DQUFvQztBQUNwQyxnQ0FBZ0M7QUFDaEMsNkNBQTZDO0FBQzdDLHlDQUF5QztBQUN6QyxVQUFVO0FBQ1YsbUNBQW1DO0FBQ25DLDhCQUE4QjtBQUM5QiwyQ0FBMkM7QUFDM0MseUNBQXlDO0FBQ3pDLFVBQVU7QUFDViwyREFBMkQ7QUFDM0QsUUFBUTtBQUNSLE1BQU07QUFDTixtQkFBbUI7QUFDbkIsNkJBQTZCO0FBQzdCLE1BQU07QUFDTix1REFBdUQ7QUFDdkQsdUVBQXVFO0FBQ3ZFLE1BQU07QUFDTixvRUFBb0U7QUFDcEUsSUFBSTtBQUVKLGdDQUF1QyxVQUFzQjtJQUMzRCxJQUFJLE1BQU0sR0FBdUIsU0FBUyxDQUFDO0lBQzNDLElBQUksS0FBSyxHQUF1QixTQUFTLENBQUM7SUFFMUMsR0FBRyxDQUFDLENBQUMsTUFBTSxLQUFLLElBQUksY0FBYyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMvQyxNQUFNLElBQUksR0FBVSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0IsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLEtBQUssQ0FBQyxNQUFNLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoRCwwQ0FBMEM7WUFDMUMsa0RBQWtEO1lBQ2xELE1BQU0sV0FBVyxHQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN2RCxrREFBa0Q7WUFDbEQsTUFBTSxVQUFVLEdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3RELEVBQUUsQ0FBQyxDQUFDLE1BQU0sS0FBSyxTQUFTLElBQUksS0FBSyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hELE1BQU0sR0FBRyxXQUFXLENBQUM7Z0JBQ3JCLEtBQUssR0FBRyxVQUFVLENBQUM7WUFDckIsQ0FBQztZQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLEtBQUssV0FBVyxJQUFJLEtBQUssS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDO2dCQUMxRCw4QkFBOEI7WUFDaEMsQ0FBQztRQUNILENBQUM7SUFDSCxDQUFDO0lBQ0QsRUFBRSxDQUFDLENBQUMsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztRQUNoRCxNQUFNLElBQUksbUJBQVEsQ0FBQyxhQUFhLEVBQUUsNEJBQTRCLENBQUMsQ0FBQztJQUNsRSxDQUFDO0lBQ0QsTUFBTSxDQUFDLEVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBQyxDQUFDO0FBQ3pCLENBQUM7QUF4QkQsd0RBd0JDO0FBRUQsK0JBQXNDLFVBQXNCO0lBQzFELFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyx3Q0FBd0M7SUFDNUQsTUFBTSxLQUFLLEdBQVcsVUFBVSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ2hELE1BQU0sTUFBTSxHQUFXLFVBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNqRCxNQUFNLENBQUMsRUFBQyxLQUFLLEVBQUUsTUFBTSxFQUFDLENBQUM7QUFDekIsQ0FBQztBQUxELHNEQUtDO0FBRUQ7O0dBRUc7QUFDSCx3QkFBK0IsU0FBcUIsRUFBRSxVQUFzQjtJQUMxRSxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ3pDLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDZixDQUFDO0lBQ0QsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQVcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7UUFDbkQsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkMsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUNmLENBQUM7SUFDSCxDQUFDO0lBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQztBQUNkLENBQUM7QUFWRCx3Q0FVQyIsImZpbGUiOiJwYXJzZXJzL2ltYWdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcbmltcG9ydCB7IFVpbnQxNiwgVWludDMyLCBVaW50OCwgVWludFNpemUgfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7IEJ5dGVTdHJlYW0gfSBmcm9tIFwiLi4vc3RyZWFtXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW1hZ2VEaW1lbnNpb25zIHtcbiAgd2lkdGg6IG51bWJlcjtcbiAgaGVpZ2h0OiBudW1iZXI7XG59XG5cbi8vIFNXRiBhbmQgUE5HIHNwZWMgKDUuMiBQTkcgU2lnbmF0dXJlKVxuZXhwb3J0IGNvbnN0IFBOR19TVEFSVDogVWludDhBcnJheSA9IG5ldyBVaW50OEFycmF5KFsweDg5LCAweDUwLCAweDRlLCAweDQ3LCAweDBkLCAweDBhLCAweDFhLCAweDBhXSk7XG5leHBvcnQgY29uc3QgR0lGX1NUQVJUOiBVaW50OEFycmF5ID0gbmV3IFVpbnQ4QXJyYXkoWzB4NDcsIDB4NDksIDB4NDYsIDB4MzgsIDB4MzksIDB4NjFdKTsgLy8gXCJHSUY4OWFcIlxuZXhwb3J0IGNvbnN0IEpQRUdfU1RBUlQ6IFVpbnQ4QXJyYXkgPSBuZXcgVWludDhBcnJheShbMHhmZiwgMHhkOF0pOyAvLyBTT0kgbWFya2VyXG5leHBvcnQgY29uc3QgRVJST05FT1VTX0pQRUdfU1RBUlQ6IFVpbnQ4QXJyYXkgPSBuZXcgVWludDhBcnJheShbMHhmZiwgMHhkOSwgMHhmZiwgMHhkOCwgMHhmZiwgMHhkOF0pO1xuXG4vKipcbiAqIFJlYWRzIGltYWdlIHByb3BlcnRpZXMgZnJvbSBhIGJ5dGUgc3RyZWFtIHdpdGggdGhlIGNvbnRlbnQgb2YgYSBQTkcgaW1hZ2UuXG4gKiBJdCB0cnVzdHMgdGhhdCB0aGUgaW1hZ2UgaGFzIGEgdmFsaWQgUE5HIHNpZ25hdHVyZSAoZmlyc3QgOCBieXRlcykuXG4gKlxuICogQHNlZSBodHRwczovL3d3dy53My5vcmcvVFIvUE5HLyM1Q2h1bmstbGF5b3V0XG4gKiBAc2VlIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9QTkcvIzVDaHVua09yZGVyaW5nXG4gKiBAc2VlIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9QTkcvIzExSUhEUlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UG5nSW1hZ2VEaW1lbnNpb25zKGJ5dGVTdHJlYW06IEJ5dGVTdHJlYW0pOiBJbWFnZURpbWVuc2lvbnMge1xuICAvLyBTa2lwIHNpZ25hdHVyZSAoOCBieXRlcykgYW5kIHNpemUgb2YgY2h1bmsgKDQgYnl0ZXMpXG4gIGJ5dGVTdHJlYW0uc2tpcCgxMik7XG4gIGNvbnN0IGNodW5rVHlwZTogVWludDMyID0gYnl0ZVN0cmVhbS5yZWFkVWludDMyTEUoKTtcbiAgY29uc3QgSUhEUl9DSFVOS19UWVBFOiBVaW50MzIgPSAweDQ5NDg0NDUyO1xuICBpZiAoY2h1bmtUeXBlICE9PSBJSERSX0NIVU5LX1RZUEUpIHtcbiAgICB0aHJvdyBuZXcgSW5jaWRlbnQoXCJJbnZhbGlkUG5nRmlsZVwiLCB7Ynl0ZVN0cmVhbX0sIFwiRXhwZWN0ZWQgZmlyc3QgY2h1bmsgdG8gYmUgYElIRFJgXCIpO1xuICB9XG4gIGNvbnN0IHdpZHRoOiBVaW50MzIgPSBieXRlU3RyZWFtLnJlYWRVaW50MzJMRSgpO1xuICBjb25zdCBoZWlnaHQ6IFVpbnQzMiA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQzMkxFKCk7XG4gIHJldHVybiB7d2lkdGgsIGhlaWdodH07XG59XG5cbi8qKlxuICogUmV0dXJucyB0aGUgSlBFRyBjaHVua3M6IGFzc3VtZXMgYWxsIHRoZSBjaHVua3MgYXJlIGNvbXBsZXRlLlxuICovXG5leHBvcnQgZnVuY3Rpb24qIHJlYWRKcGVnQ2h1bmtzKGJ5dGVTdHJlYW06IEJ5dGVTdHJlYW0pOiBJdGVyYWJsZTxVaW50OEFycmF5PiB7XG4gIGNvbnN0IGJ5dGVzOiBVaW50OEFycmF5ID0gYnl0ZVN0cmVhbS50YWtlQnl0ZXMoYnl0ZVN0cmVhbS5hdmFpbGFibGUoKSk7XG4gIGxldCBpOiBVaW50U2l6ZSA9IDA7XG4gIGNvbnN0IGJ5dGVDb3VudDogVWludFNpemUgPSBieXRlcy5sZW5ndGg7XG5cbiAgZnVuY3Rpb24gZ2V0TmV4dENodW5rSW5kZXgoc2VhcmNoOiBVaW50U2l6ZSk6IG51bWJlciB8IHVuZGVmaW5lZCB7XG4gICAgLy8gQSBjaHVuayBtYXJrZXIgc3RhcnRzIHdpdGggYDB4ZmZgIGZvbGxvd2VkIGJ5IGFueSBieXRlIGV4Y2VwdCBgMHgwMGAgKGZmIDAwIGlzIGVzY2FwZWQgZmYpXG4gICAgLy8gb3IgYDB4ZmZgIChwYWRkaW5nKVxuICAgIHdoaWxlICgoc2VhcmNoICsgMSkgPCBieXRlQ291bnQpIHtcbiAgICAgIGlmIChieXRlc1tzZWFyY2hdID09PSAweGZmICYmIChieXRlc1tzZWFyY2ggKyAxXSAhPT0gMHgwMCAmJiBieXRlc1tzZWFyY2ggKyAxXSAhPT0gMHhmZikpIHtcbiAgICAgICAgcmV0dXJuIHNlYXJjaDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNlYXJjaCsrO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgbGV0IGNodW5rU3RhcnQ6IG51bWJlciB8IHVuZGVmaW5lZCA9IGdldE5leHRDaHVua0luZGV4KGkpO1xuICB3aGlsZSAoY2h1bmtTdGFydCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgY29uc3QgY29kZTogVWludDggPSBieXRlc1tjaHVua1N0YXJ0ICsgMV07XG4gICAgaSArPSAyO1xuICAgIGlmIChcbiAgICAgIChjb2RlID49IDB4YzAgJiYgY29kZSA8PSAweGM3KVxuICAgICAgfHwgKGNvZGUgPj0gMHhjOSAmJiBjb2RlIDw9IDB4Y2YpXG4gICAgICB8fCAoY29kZSA+PSAweGRhICYmIGNvZGUgPD0gMHhlZilcbiAgICAgIHx8IGNvZGUgPT09IDB4ZmVcbiAgICApIHtcbiAgICAgIGkgKz0gKGJ5dGVzW2ldIDw8IDgpICsgYnl0ZXNbaSArIDFdOyAvLyBBZHZhbmNlIGJ5IGBzaXplYCBpZiBwcmVzZW50IChVaW50MTZMRSlcbiAgICB9XG4gICAgY29uc3QgbmV4dENodW5rU3RhcnQ6IG51bWJlciB8IHVuZGVmaW5lZCA9IGdldE5leHRDaHVua0luZGV4KGkpO1xuICAgIHlpZWxkIGJ5dGVzLnN1YmFycmF5KGNodW5rU3RhcnQsIG5leHRDaHVua1N0YXJ0KTtcbiAgICBjaHVua1N0YXJ0ID0gbmV4dENodW5rU3RhcnQ7XG4gIH1cbn1cblxuLy8gZXhwb3J0IGZ1bmN0aW9uIHJlYWRKcGVnKGJ5dGVTdHJlYW06IEJ5dGVTdHJlYW0sIGZpeEpwZWc6IGJvb2xlYW4pOiBbVWludDhBcnJheSwgSW1hZ2VQcm9wZXJ0aWVzXSB7XG4vLyAgIGxldCBoZWlnaHQ6IFVpbnQxNiB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbi8vICAgbGV0IHdpZHRoOiBVaW50MTYgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG4vL1xuLy8gICBjb25zdCBKUEVHX1NPSSA9IG5ldyBVaW50OEFycmF5KFsweGZmLCAweGQ4XSk7XG4vLyAgIGNvbnN0IEpQRUdfRU9JID0gbmV3IFVpbnQ4QXJyYXkoWzB4ZmYsIDB4ZDldKTtcbi8vICAgY29uc3QgY2h1bmtzOiBVaW50OEFycmF5W10gPSBbXTtcbi8vICAgaWYgKGZpeEpwZWcpIHtcbi8vICAgICBjaHVua3MucHVzaChKUEVHX1NPSSk7XG4vLyAgIH1cbi8vICAgZm9yIChjb25zdCBjaHVuayBvZiByZWFkSnBlZ0NodW5rcyhieXRlU3RyZWFtKSkge1xuLy8gICAgIGNvbnN0IGNvZGU6IFVpbnQ4ID0gY2h1bmtbMV07XG4vLyAgICAgaWYgKGZpeEpwZWcpIHtcbi8vICAgICAgIGlmIChjb2RlID09PSAweGQ4IHx8IGNvZGUgPT09IDB4ZDkpIHsgLy8gU09JIG9yIEVPSVxuLy8gICAgICAgICBjb250aW51ZTtcbi8vICAgICAgIH1cbi8vICAgICB9XG4vLyAgICAgY2h1bmtzLnB1c2goY2h1bmspO1xuLy8gICAgIGlmICgoY29kZSAmIDB4ZmMpID09PSAweGMwICYmIGNodW5rLmxlbmd0aCA+PSA5KSB7IC8vIFNPRjogMGIxMTAwMDB4eFxuLy8gICAgICAgY29uc3QgZnJhbWVIZWlnaHQ6IFVpbnQxNiA9IChjaHVua1s1XSA8PCA4KSArIGNodW5rWzZdO1xuLy8gICAgICAgY29uc3QgZnJhbWVXaWR0aDogVWludDE2ID0gKGNodW5rWzVdIDw8IDgpICsgY2h1bmtbNl07XG4vLyAgICAgICBpZiAoaGVpZ2h0ID09PSB1bmRlZmluZWQpIHtcbi8vICAgICAgICAgaGVpZ2h0ID0gZnJhbWVIZWlnaHQ7XG4vLyAgICAgICB9IGVsc2UgaWYgKGhlaWdodCAhPT0gZnJhbWVIZWlnaHQpIHtcbi8vICAgICAgICAgLy8gVE9ETzogY29uc29sZS53YXJuIG9yIGVycm9yXG4vLyAgICAgICB9XG4vLyAgICAgICBpZiAod2lkdGggPT09IHVuZGVmaW5lZCkge1xuLy8gICAgICAgICB3aWR0aCA9IGZyYW1lV2lkdGg7XG4vLyAgICAgICB9IGVsc2UgaWYgKHdpZHRoICE9PSBmcmFtZVdpZHRoKSB7XG4vLyAgICAgICAgIC8vIFRPRE86IGNvbnNvbGUud2FybiBvciBlcnJvclxuLy8gICAgICAgfVxuLy8gICAgICAgLy8gVE9ETzogSW5qZWN0IEpQRUcgdGFibGUgaW4gZmlyc3QgU09GIGlmIG5lZWRlZD9cbi8vICAgICB9XG4vLyAgIH1cbi8vICAgaWYgKGZpeEpwZWcpIHtcbi8vICAgICBjaHVua3MucHVzaChKUEVHX0VPSSk7XG4vLyAgIH1cbi8vICAgaWYgKHdpZHRoID09PSB1bmRlZmluZWQgfHwgaGVpZ2h0ID09PSB1bmRlZmluZWQpIHtcbi8vICAgICB0aHJvdyBuZXcgSW5jaWRlbnQoXCJJbnZhbGlkSnBlZ1wiLCBcIkZyYW1lIGRpbWVuc2lvbnMgbm90IGZvdW5kXCIpO1xuLy8gICB9XG4vLyAgIHJldHVybiBbY29uY2F0Qnl0ZXMoY2h1bmtzKSwge3dpZHRoLCBoZWlnaHQsIGhhc0FscGhhOiBmYWxzZX1dO1xuLy8gfVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SnBlZ0ltYWdlRGltZW5zaW9ucyhieXRlU3RyZWFtOiBCeXRlU3RyZWFtKTogSW1hZ2VEaW1lbnNpb25zIHtcbiAgbGV0IGhlaWdodDogVWludDE2IHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuICBsZXQgd2lkdGg6IFVpbnQxNiB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcblxuICBmb3IgKGNvbnN0IGNodW5rIG9mIHJlYWRKcGVnQ2h1bmtzKGJ5dGVTdHJlYW0pKSB7XG4gICAgY29uc3QgY29kZTogVWludDggPSBjaHVua1sxXTtcbiAgICBpZiAoKGNvZGUgJiAweGZjKSA9PT0gMHhjMCAmJiBjaHVuay5sZW5ndGggPj0gOSkgeyAvLyBTT0Y6IDBiMTEwMDAweHhcbiAgICAgIC8vIFRPRE86IENoZWNrIHdoeSBUU0xpbnQgaXMgY29uZnVzZWQgaGVyZVxuICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOnJlc3RyaWN0LXBsdXMtb3BlcmFuZHNcbiAgICAgIGNvbnN0IGZyYW1lSGVpZ2h0OiBVaW50MTYgPSAoY2h1bmtbNV0gPDwgOCkgKyBjaHVua1s2XTtcbiAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpyZXN0cmljdC1wbHVzLW9wZXJhbmRzXG4gICAgICBjb25zdCBmcmFtZVdpZHRoOiBVaW50MTYgPSAoY2h1bmtbN10gPDwgOCkgKyBjaHVua1s4XTtcbiAgICAgIGlmIChoZWlnaHQgPT09IHVuZGVmaW5lZCB8fCB3aWR0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGhlaWdodCA9IGZyYW1lSGVpZ2h0O1xuICAgICAgICB3aWR0aCA9IGZyYW1lV2lkdGg7XG4gICAgICB9IGVsc2UgaWYgKGhlaWdodCAhPT0gZnJhbWVIZWlnaHQgfHwgd2lkdGggIT09IGZyYW1lV2lkdGgpIHtcbiAgICAgICAgLy8gVE9ETzogY29uc29sZS53YXJuIG9yIGVycm9yXG4gICAgICB9XG4gICAgfVxuICB9XG4gIGlmICh3aWR0aCA9PT0gdW5kZWZpbmVkIHx8IGhlaWdodCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IEluY2lkZW50KFwiSW52YWxpZEpwZWdcIiwgXCJGcmFtZSBkaW1lbnNpb25zIG5vdCBmb3VuZFwiKTtcbiAgfVxuICByZXR1cm4ge3dpZHRoLCBoZWlnaHR9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0R2lmSW1hZ2VEaW1lbnNpb25zKGJ5dGVTdHJlYW06IEJ5dGVTdHJlYW0pOiBJbWFnZURpbWVuc2lvbnMge1xuICBieXRlU3RyZWFtLnNraXAoNik7IC8vIEdJRiBoZWFkZXI6IFwiR0lGODlhXCIgaW4gQVNDSUkgZm9yIFNXRlxuICBjb25zdCB3aWR0aDogVWludDE2ID0gYnl0ZVN0cmVhbS5yZWFkVWludDE2QkUoKTtcbiAgY29uc3QgaGVpZ2h0OiBVaW50MTYgPSBieXRlU3RyZWFtLnJlYWRVaW50MTZCRSgpO1xuICByZXR1cm4ge3dpZHRoLCBoZWlnaHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBib29sZWFuIGluZGljYXRpbmcgaWYgYGltYWdlRGF0YWAgc3RhcnRzIHdpdGggYHN0YXJ0Qnl0ZXNgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0ZXN0SW1hZ2VTdGFydChpbWFnZURhdGE6IFVpbnQ4QXJyYXksIHN0YXJ0Qnl0ZXM6IFVpbnQ4QXJyYXkpOiBib29sZWFuIHtcbiAgaWYgKGltYWdlRGF0YS5sZW5ndGggPCBzdGFydEJ5dGVzLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBmb3IgKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgc3RhcnRCeXRlcy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChpbWFnZURhdGFbaV0gIT09IHN0YXJ0Qnl0ZXNbaV0pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=


/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const swf_tree_1 = __webpack_require__(12);
const cap_style_1 = __webpack_require__(49);
const _type_1 = __webpack_require__(41);
const _type_2 = __webpack_require__(42);
const _type_3 = __webpack_require__(43);
const basic_data_types_1 = __webpack_require__(28);
const gradient_1 = __webpack_require__(126);
const shape_1 = __webpack_require__(72);
var MorphShapeVersion;
(function (MorphShapeVersion) {
    MorphShapeVersion[MorphShapeVersion["MorphShape1"] = 1] = "MorphShape1";
    MorphShapeVersion[MorphShapeVersion["MorphShape2"] = 2] = "MorphShape2";
})(MorphShapeVersion = exports.MorphShapeVersion || (exports.MorphShapeVersion = {}));
function parseMorphShape(byteStream, morphShapeVersion) {
    byteStream.skip(4); // Skip offset (uint32)
    const bitStream = byteStream.asBitStream();
    const result = parseMorphShapeBits(bitStream, morphShapeVersion);
    bitStream.align();
    return result;
}
exports.parseMorphShape = parseMorphShape;
function parseMorphShapeBits(bitStream, morphShapeVersion) {
    const styles = parseMorphShapeStylesBits(bitStream, morphShapeVersion);
    const startRecords = parseMorphShapeStartRecordStringBits(bitStream, styles.fillBits, styles.lineBits, morphShapeVersion);
    bitStream.align();
    // TODO: We should be able to skip these bits (no styles used for the endRecords)
    const fillBits = bitStream.readUint32Bits(4);
    const lineBits = bitStream.readUint32Bits(4);
    const records = parseMorphShapeEndRecordStringBits(bitStream, startRecords, fillBits, lineBits, morphShapeVersion);
    return {
        fillStyles: styles.fill,
        lineStyles: styles.line,
        records,
    };
}
exports.parseMorphShapeBits = parseMorphShapeBits;
function parseMorphShapeStylesBits(bitStream, morphShapeVersion) {
    const byteStream = bitStream.asByteStream();
    const fill = parseMorphFillStyleList(byteStream);
    const line = parseMorphLineStyleList(byteStream, morphShapeVersion);
    bitStream = byteStream.asBitStream();
    const fillBits = bitStream.readUint32Bits(4);
    const lineBits = bitStream.readUint32Bits(4);
    return { fill, line, fillBits, lineBits };
}
exports.parseMorphShapeStylesBits = parseMorphShapeStylesBits;
function parseMorphShapeStartRecordStringBits(bitStream, fillBits, lineBits, morphShapeVersion) {
    const result = [];
    while (true) {
        const bytePos = bitStream.bytePos;
        const bitPos = bitStream.bitPos;
        const head = bitStream.readUint16Bits(6);
        if (head === 0) {
            break;
        }
        else {
            bitStream.bytePos = bytePos;
            bitStream.bitPos = bitPos;
        }
        const isEdge = bitStream.readBoolBits();
        if (isEdge) {
            const isStraightEdge = bitStream.readBoolBits();
            if (isStraightEdge) {
                result.push(shape_1.parseStraightEdgeBits(bitStream));
            }
            else {
                result.push(shape_1.parseCurvedEdgeBits(bitStream));
            }
        }
        else {
            let styles;
            [styles, [fillBits, lineBits]] = parseMorphStyleChangeBits(bitStream, fillBits, lineBits, morphShapeVersion);
            result.push(styles);
        }
    }
    return result;
}
exports.parseMorphShapeStartRecordStringBits = parseMorphShapeStartRecordStringBits;
function asCurvedEdge(edge) {
    if (edge.type === _type_3.ShapeRecordType.CurvedEdge) {
        return edge;
    }
    return {
        type: _type_3.ShapeRecordType.CurvedEdge,
        controlDelta: { x: edge.delta.x / 2, y: edge.delta.y / 2 },
        anchorDelta: { x: edge.delta.x / 2, y: edge.delta.y / 2 },
    };
}
function asMorphEdge(startEdge, endEdge) {
    if (startEdge.type === _type_3.ShapeRecordType.StraightEdge && endEdge.type === _type_3.ShapeRecordType.StraightEdge) {
        return {
            type: _type_2.MorphShapeRecordType.MorphStraightEdge,
            startDelta: startEdge.delta,
            endDelta: endEdge.delta,
        };
    }
    const startCurve = asCurvedEdge(startEdge);
    const endCurve = asCurvedEdge(endEdge);
    return {
        type: _type_2.MorphShapeRecordType.MorphCurvedEdge,
        startControlDelta: startCurve.controlDelta,
        endControlDelta: endCurve.controlDelta,
        startAnchorDelta: startCurve.anchorDelta,
        endAnchorDelta: endCurve.anchorDelta,
    };
}
function parseMorphShapeEndRecordStringBits(bitStream, startRecords, fillBits, lineBits, morphShapeVersion) {
    const result = [];
    for (const startRecord of startRecords) {
        if (startRecord.type === _type_2.MorphShapeRecordType.MorphStyleChange && startRecord.startMoveTo === undefined) {
            // The end shape contains only edge (straight or curved) or moveTo records, it matches the start records
            continue;
        }
        const bytePos = bitStream.bytePos;
        const bitPos = bitStream.bitPos;
        const head = bitStream.readUint16Bits(6);
        if (head === 0) {
            throw new incident_1.Incident("MissingMorphShapeEndRecords");
        }
        else {
            bitStream.bytePos = bytePos;
            bitStream.bitPos = bitPos;
        }
        const isEdge = bitStream.readBoolBits();
        if (isEdge) {
            if (startRecord.type !== _type_3.ShapeRecordType.StraightEdge && startRecord.type !== _type_3.ShapeRecordType.CurvedEdge) {
                throw new incident_1.Incident("UnexpectedEdge");
            }
            const startEdge = startRecord;
            const isStraightEdge = bitStream.readBoolBits();
            // tslint:disable-next-line:max-line-length
            const endEdge = isStraightEdge ? shape_1.parseStraightEdgeBits(bitStream) : shape_1.parseCurvedEdgeBits(bitStream);
            result.push(asMorphEdge(startEdge, endEdge));
        }
        else {
            if (startRecord.type !== _type_2.MorphShapeRecordType.MorphStyleChange) {
                throw new incident_1.Incident("UnexpectedStyleChange");
            }
            const startStyle = startRecord;
            let styleChange;
            [styleChange, [fillBits, lineBits]] = parseMorphStyleChangeBits(bitStream, fillBits, lineBits, morphShapeVersion);
            if (styleChange.startMoveTo === undefined) {
                throw new incident_1.Incident("ExpectedMoveTo");
            }
            result.push(Object.assign({}, startStyle, { endMoveTo: styleChange.startMoveTo }));
        }
    }
    const head = bitStream.readUint16Bits(6);
    if (head !== 0) {
        throw new incident_1.Incident("ExtraMorphShapeEndRecords");
    }
    return result;
}
exports.parseMorphShapeEndRecordStringBits = parseMorphShapeEndRecordStringBits;
function parseMorphStyleChangeBits(bitStream, fillBits, lineBits, morphShapeVersion) {
    const hasNewStyles = bitStream.readBoolBits();
    const changeLineStyle = bitStream.readBoolBits();
    const changeRightFill = bitStream.readBoolBits();
    const changeLeftFill = bitStream.readBoolBits();
    const hasMoveTo = bitStream.readBoolBits();
    let moveTo = undefined;
    if (hasMoveTo) {
        const nBits = bitStream.readUint16Bits(5);
        const x = bitStream.readSint32Bits(nBits);
        const y = bitStream.readSint32Bits(nBits);
        moveTo = { x, y };
    }
    const leftFill = changeLeftFill ? bitStream.readUint16Bits(fillBits) : undefined;
    const rightFill = changeRightFill ? bitStream.readUint16Bits(fillBits) : undefined;
    const lineStyle = changeLineStyle ? bitStream.readUint16Bits(lineBits) : undefined;
    let fillStyles = undefined;
    let lineStyles = undefined;
    if (hasNewStyles) {
        const styles = parseMorphShapeStylesBits(bitStream, morphShapeVersion);
        fillStyles = styles.fill;
        lineStyles = styles.line;
        fillBits = styles.fillBits;
        lineBits = styles.lineBits;
    }
    const styleChangeRecord = {
        type: _type_2.MorphShapeRecordType.MorphStyleChange,
        startMoveTo: moveTo,
        endMoveTo: undefined,
        leftFill,
        rightFill,
        lineStyle,
        fillStyles,
        lineStyles,
    };
    return [styleChangeRecord, [fillBits, lineBits]];
}
exports.parseMorphStyleChangeBits = parseMorphStyleChangeBits;
function parseMorphFillStyleList(byteStream) {
    const result = [];
    const len = shape_1.parseListLength(byteStream, true);
    for (let i = 0; i < len; i++) {
        result.push(parseMorphFillStyle(byteStream, true));
    }
    return result;
}
exports.parseMorphFillStyleList = parseMorphFillStyleList;
function parseMorphFillStyle(byteStream, withAlpha) {
    // TODO: Remove `withAlph` parameter (always true)
    switch (byteStream.readUint8()) {
        case 0x00:
            return parseMorphSolidFill(byteStream, withAlpha);
        case 0x10:
            return parseMorphLinearGradientFill(byteStream, withAlpha);
        case 0x12:
            return parseMorphRadialGradientFill(byteStream, withAlpha);
        case 0x13:
            // TODO: Check if this requires shapeVersion >= Shape4
            return parseMorphFocalGradientFill(byteStream, withAlpha);
        case 0x40:
            return parseMorphBitmapFill(byteStream, true, true);
        case 0x41:
            return parseMorphBitmapFill(byteStream, false, true);
        case 0x42:
            return parseMorphBitmapFill(byteStream, true, false);
        case 0x43:
            return parseMorphBitmapFill(byteStream, false, false);
        default:
            throw new Error("Unexpected morph fill style");
    }
}
exports.parseMorphFillStyle = parseMorphFillStyle;
function parseMorphBitmapFill(byteStream, repeating, smoothed) {
    const bitmapId = byteStream.readUint16LE();
    const startMatrix = basic_data_types_1.parseMatrix(byteStream);
    const endMatrix = basic_data_types_1.parseMatrix(byteStream);
    return {
        type: swf_tree_1.MorphFillStyleType.Bitmap,
        bitmapId,
        startMatrix,
        endMatrix,
        repeating,
        smoothed,
    };
}
exports.parseMorphBitmapFill = parseMorphBitmapFill;
function parseMorphFocalGradientFill(byteStream, withAlpha) {
    const startMatrix = basic_data_types_1.parseMatrix(byteStream);
    const endMatrix = basic_data_types_1.parseMatrix(byteStream);
    const gradient = gradient_1.parseMorphGradient(byteStream, withAlpha);
    const startFocalPoint = byteStream.readFixed8P8LE();
    const endFocalPoint = byteStream.readFixed8P8LE();
    return {
        type: swf_tree_1.MorphFillStyleType.FocalGradient,
        startMatrix,
        endMatrix,
        gradient,
        startFocalPoint,
        endFocalPoint,
    };
}
exports.parseMorphFocalGradientFill = parseMorphFocalGradientFill;
function parseMorphLinearGradientFill(byteStream, withAlpha) {
    const startMatrix = basic_data_types_1.parseMatrix(byteStream);
    const endMatrix = basic_data_types_1.parseMatrix(byteStream);
    const gradient = gradient_1.parseMorphGradient(byteStream, withAlpha);
    const focalPoint = byteStream.readFixed8P8LE();
    return {
        type: swf_tree_1.MorphFillStyleType.LinearGradient,
        startMatrix,
        endMatrix,
        gradient,
    };
}
exports.parseMorphLinearGradientFill = parseMorphLinearGradientFill;
function parseMorphRadialGradientFill(byteStream, withAlpha) {
    const startMatrix = basic_data_types_1.parseMatrix(byteStream);
    const endMatrix = basic_data_types_1.parseMatrix(byteStream);
    const gradient = gradient_1.parseMorphGradient(byteStream, withAlpha);
    return {
        type: swf_tree_1.MorphFillStyleType.RadialGradient,
        startMatrix,
        endMatrix,
        gradient,
    };
}
exports.parseMorphRadialGradientFill = parseMorphRadialGradientFill;
function parseMorphSolidFill(byteStream, withAlpha) {
    let startColor;
    let endColor;
    if (withAlpha) {
        startColor = basic_data_types_1.parseStraightSRgba8(byteStream);
        endColor = basic_data_types_1.parseStraightSRgba8(byteStream);
    }
    else {
        startColor = Object.assign({}, basic_data_types_1.parseSRgb8(byteStream), { a: 255 });
        endColor = Object.assign({}, basic_data_types_1.parseSRgb8(byteStream), { a: 255 });
    }
    return {
        type: swf_tree_1.MorphFillStyleType.Solid,
        startColor,
        endColor,
    };
}
exports.parseMorphSolidFill = parseMorphSolidFill;
function parseMorphLineStyleList(byteStream, morphShapeVersion) {
    const result = [];
    const len = shape_1.parseListLength(byteStream, true);
    for (let i = 0; i < len; i++) {
        if (morphShapeVersion < MorphShapeVersion.MorphShape2) {
            result.push(parseMorphLineStyle1(byteStream));
        }
        else {
            result.push(parseMorphLineStyle2(byteStream));
        }
    }
    return result;
}
exports.parseMorphLineStyleList = parseMorphLineStyleList;
function parseMorphLineStyle1(byteStream) {
    const startWidth = byteStream.readUint16LE();
    const endWidth = byteStream.readUint16LE();
    const startColor = basic_data_types_1.parseStraightSRgba8(byteStream);
    const endColor = basic_data_types_1.parseStraightSRgba8(byteStream);
    return {
        startWidth,
        endWidth,
        startCap: cap_style_1.CapStyle.Round,
        endCap: cap_style_1.CapStyle.Round,
        join: { type: _type_1.JoinStyleType.Round },
        noHScale: false,
        noVScale: false,
        noClose: false,
        pixelHinting: false,
        fill: {
            type: swf_tree_1.MorphFillStyleType.Solid,
            startColor,
            endColor,
        },
    };
}
exports.parseMorphLineStyle1 = parseMorphLineStyle1;
function parseMorphLineStyle2(byteStream) {
    const startWidth = byteStream.readUint16LE();
    const endWidth = byteStream.readUint16LE();
    const flags = byteStream.readUint16LE();
    // (Skip first 5 bits)
    const noClose = (flags & (1 << 10)) !== 0;
    const endCapStyleId = ((flags >>> 8) & 0b11);
    const startCapStyleId = ((flags >>> 6) & 0b11);
    const joinStyleId = ((flags >>> 4) & 0b11);
    const hasFill = (flags & (1 << 3)) !== 0;
    const noHScale = (flags & (1 << 2)) !== 0;
    const noVScale = (flags & (1 << 1)) !== 0;
    const pixelHinting = (flags & (1 << 0)) !== 0;
    let join;
    switch (joinStyleId) {
        case 0:
            join = { type: _type_1.JoinStyleType.Round };
            break;
        case 1:
            join = { type: _type_1.JoinStyleType.Bevel };
            break;
        case 2:
            join = { type: _type_1.JoinStyleType.Miter, limit: byteStream.readFixed8P8LE() };
            break;
        default:
            throw new incident_1.Incident("UnexpectedJoinStyleId", { id: joinStyleId });
    }
    let fill;
    if (hasFill) {
        fill = parseMorphFillStyle(byteStream, true);
    }
    else {
        const startColor = basic_data_types_1.parseStraightSRgba8(byteStream);
        const endColor = basic_data_types_1.parseStraightSRgba8(byteStream);
        fill = { type: swf_tree_1.MorphFillStyleType.Solid, startColor, endColor };
    }
    return {
        startWidth,
        endWidth,
        startCap: shape_1.capStyleFromId(startCapStyleId),
        endCap: shape_1.capStyleFromId(endCapStyleId),
        join,
        noHScale,
        noVScale,
        noClose,
        pixelHinting,
        fill,
    };
}
exports.parseMorphLineStyle2 = parseMorphLineStyle2;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(4);
const swf_tree_1 = __webpack_require__(12);
const basic_data_types_1 = __webpack_require__(28);
const shape_1 = __webpack_require__(72);
function parseGridFittingBits(bitStream) {
    const code = bitStream.readUint32Bits(3);
    switch (code) {
        case 0:
            return swf_tree_1.text.GridFitting.None;
        case 1:
            return swf_tree_1.text.GridFitting.Pixel;
        case 2:
            return swf_tree_1.text.GridFitting.SubPixel;
        default:
            throw new incident_1.Incident("UnreachableCode");
    }
}
exports.parseGridFittingBits = parseGridFittingBits;
function parseLanguageCode(byteStream) {
    const code = byteStream.readUint8();
    switch (code) {
        case 0:
            return swf_tree_1.LanguageCode.Auto;
        case 1:
            return swf_tree_1.LanguageCode.Latin;
        case 2:
            return swf_tree_1.LanguageCode.Japanese;
        case 3:
            return swf_tree_1.LanguageCode.Korean;
        case 4:
            return swf_tree_1.LanguageCode.SimplifiedChinese;
        case 5:
            return swf_tree_1.LanguageCode.TraditionalChinese;
        default:
            throw new incident_1.Incident("UnreachableCode");
    }
}
exports.parseLanguageCode = parseLanguageCode;
function parseTextRendererBits(bitStream) {
    const code = bitStream.readUint32Bits(2);
    switch (code) {
        case 0:
            return swf_tree_1.text.TextRenderer.Normal;
        case 1:
            return swf_tree_1.text.TextRenderer.Advanced;
        default:
            throw new incident_1.Incident("UnreachableCode");
    }
}
exports.parseTextRendererBits = parseTextRendererBits;
function parseTextRecordString(byteStream, hasAlpha, indexBits, advanceBits) {
    const result = [];
    while (byteStream.peekUint8() !== 0) {
        result.push(parseTextRecord(byteStream, hasAlpha, indexBits, advanceBits));
    }
    byteStream.skip(1); // End of records
    return result;
}
exports.parseTextRecordString = parseTextRecordString;
function parseTextRecord(byteStream, hasAlpha, indexBits, advanceBits) {
    const flags = byteStream.readUint8();
    const hasFont = (flags & (1 << 3)) !== 0;
    const hasColor = (flags & (1 << 2)) !== 0;
    const hasOffsetX = (flags & (1 << 1)) !== 0;
    const hasOffsetY = (flags & (1 << 0)) !== 0;
    const fontId = hasFont ? byteStream.readUint16LE() : undefined;
    let color = undefined;
    if (hasColor) {
        color = hasAlpha ? basic_data_types_1.parseStraightSRgba8(byteStream) : Object.assign({}, basic_data_types_1.parseSRgb8(byteStream), { a: 255 });
    }
    const offsetX = hasOffsetX ? byteStream.readSint16LE() : 0;
    const offsetY = hasOffsetY ? byteStream.readSint16LE() : 0;
    const fontSize = hasFont ? byteStream.readUint16LE() : undefined;
    const entryCount = byteStream.readUint8();
    const bitStream = byteStream.asBitStream();
    const entries = [];
    for (let i = 0; i < entryCount; i++) {
        const index = bitStream.readUint32Bits(indexBits);
        const advance = bitStream.readSint32Bits(advanceBits);
        entries.push({ index, advance });
    }
    bitStream.align();
    return { fontId, color, offsetX, offsetY, fontSize, entries };
}
exports.parseTextRecord = parseTextRecord;
function parseCsmTableHintBits(bitStream) {
    switch (bitStream.readUint16Bits(2)) {
        case 0:
            return swf_tree_1.text.CsmTableHint.Thin;
        case 1:
            return swf_tree_1.text.CsmTableHint.Medium;
        case 2:
            return swf_tree_1.text.CsmTableHint.Thick;
        default:
            throw new incident_1.Incident("UnreachableCode");
    }
}
exports.parseCsmTableHintBits = parseCsmTableHintBits;
function parseFontAlignmentZone(byteStream) {
    const zoneDataCount = byteStream.readUint8();
    // TODO: Assert zoneDataCount === 2
    const data = [];
    for (let i = 0; i < zoneDataCount; i++) {
        data.push(parseFontAlignmentZoneData(byteStream));
    }
    const flags = byteStream.readUint8();
    const hasY = (flags & (1 << 1)) !== 0;
    const hasX = (flags & (1 << 0)) !== 0;
    return { data, hasX, hasY };
}
exports.parseFontAlignmentZone = parseFontAlignmentZone;
function parseFontAlignmentZoneData(byteStream) {
    const origin = byteStream.readFloat16BE();
    const size = byteStream.readFloat16BE();
    return { origin, size };
}
exports.parseFontAlignmentZoneData = parseFontAlignmentZoneData;
function parseOffsetGlyphs(byteStream, glyphCount, useWideOffset) {
    const startPos = byteStream.bytePos;
    const offsets = new Array(glyphCount + 1);
    for (let i = 0; i < offsets.length; i++) {
        offsets[i] = useWideOffset ? byteStream.readUint32LE() : byteStream.readUint16LE();
    }
    const result = [];
    for (let i = 1; i < offsets.length; i++) {
        const length = offsets[i] - (byteStream.bytePos - startPos);
        result.push(shape_1.parseGlyph(byteStream.take(length)));
    }
    return result;
}
exports.parseOffsetGlyphs = parseOffsetGlyphs;
function parseFontLayout(byteStream, glyphCount) {
    const ascent = byteStream.readUint16LE();
    const descent = byteStream.readUint16LE();
    const leading = byteStream.readUint16LE();
    const advances = new Array(glyphCount);
    for (let i = 0; i < advances.length; i++) {
        advances[i] = byteStream.readUint16LE();
    }
    const bounds = new Array(glyphCount);
    for (let i = 0; i < bounds.length; i++) {
        bounds[i] = basic_data_types_1.parseRect(byteStream);
    }
    const kerning = new Array(byteStream.readUint16LE());
    for (let i = 0; i < kerning.length; i++) {
        kerning[i] = parseKerningRecord(byteStream);
    }
    return { ascent, descent, leading, advances, bounds, kerning };
}
exports.parseFontLayout = parseFontLayout;
function parseKerningRecord(byteStream) {
    const left = byteStream.readUint16LE();
    const right = byteStream.readUint16LE();
    const adjustment = byteStream.readSint16LE();
    return { left, right, adjustment };
}
exports.parseKerningRecord = parseKerningRecord;
function parseTextAlignment(byteStream) {
    switch (byteStream.readUint8()) {
        case 0:
            return swf_tree_1.text.TextAlignment.Left;
        case 1:
            return swf_tree_1.text.TextAlignment.Right;
        case 2:
            return swf_tree_1.text.TextAlignment.Center;
        case 3:
            return swf_tree_1.text.TextAlignment.Justify;
        default:
            throw new incident_1.Incident("UnreachableCode");
    }
}
exports.parseTextAlignment = parseTextAlignment;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 402 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__display_object_container__ = __webpack_require__(114);

// TODO: Get rid of these default values (they should never be needed)
const DEFAULT_BACKGROUND_COLOR = Object.freeze({ r: 255, g: 255, b: 255 });
/**
 * A stage represent a drawing area. It holds the root of its display tree.
 */
class Stage extends __WEBPACK_IMPORTED_MODULE_0__display_object_container__["a" /* DisplayObjectContainer */] {
    constructor(frameSizeInTwips) {
        super();
        this.backgroundColor = DEFAULT_BACKGROUND_COLOR;
        this.width = (frameSizeInTwips.xMax.valueOf() - frameSizeInTwips.xMin.valueOf()) / 20;
        this.height = (frameSizeInTwips.yMax.valueOf() - frameSizeInTwips.yMin.valueOf()) / 20;
    }
    visit(visitor) {
        return visitor.visitStage(this);
    }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = Stage;

// /**
//  * Primary stage created for the root SWF file.
//  */
// export class RootStage extends Stage {
//   movie: MovieClip;
//   loader: SwfLoader;
//
//   constructor(header: Header, loader: SwfLoader) {
//     super(header.frameSize);
//     this.movie = new MovieClip([]);
//   }
// }


/***/ }),
/* 403 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__domu_player__ = __webpack_require__(73);

// Default size of an <embed> element (Firefox 59)
const DEFAULT_WIDTH = 240;
const DEFAULT_HEIGHT = 200;
// https://helpx.adobe.com/flash/kb/flash-object-embed-tag-attributes.html
class XSwfElement extends HTMLElement {
    get name() {
        return this.getAttribute("name") || "";
    }
    set name(value) {
        this.setAttribute("name", value);
    }
    get src() {
        return this.getAttribute("src") || "";
    }
    set src(value) {
        this.setAttribute("src", value);
    }
    get width() {
        return this.getAttribute("width") || "";
    }
    set width(value) {
        this.setAttribute("width", value);
    }
    get height() {
        return this.getAttribute("height") || "";
    }
    set height(value) {
        this.setAttribute("height", value);
    }
    constructor() {
        super();
        const size = this.getSize();
        this.domuPlayer = Object(__WEBPACK_IMPORTED_MODULE_0__domu_player__["a" /* createDomuPlayer */])({ container: this, viewportSize: size });
        this.style.display = "inline-block";
        this.style.width = `${size.width}px`;
        this.style.height = `${size.height}px`;
        const src = this.getAttribute("src");
        if (src === null) {
            return;
        }
        this.domuPlayer.setMovieUrl(src);
    }
    getSize() {
        const widthAttr = this.getAttribute("width");
        let width = widthAttr === null ? DEFAULT_WIDTH : parseInt(widthAttr, 10);
        if (isNaN(width)) {
            width = DEFAULT_WIDTH;
        }
        const heightAttr = this.getAttribute("height");
        let height = heightAttr === null ? DEFAULT_HEIGHT : parseInt(heightAttr, 10);
        if (isNaN(width)) {
            height = DEFAULT_HEIGHT;
        }
        return { width, height };
    }
    static get observedAttributes() {
        return [
            "width",
            "height",
            "src",
            // "pluginspage",
            "src",
            "id",
            "play",
            "loop",
            "menu",
            "quality",
            "scale",
            "align",
            "salign",
            "wmode",
            "bgcolor",
            "base",
            "allowFullScreen",
            "fullScreenAspectRatio",
            "flashvars",
            "browserzoom",
        ];
    }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = XSwfElement;



/***/ })
/******/ ]);
//# sourceMappingURL=main.js.map