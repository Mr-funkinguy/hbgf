/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 148);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(154);
var array_1 = __webpack_require__(69);
exports.ArrayType = array_1.ArrayType;
var boolean_1 = __webpack_require__(71);
exports.BooleanType = boolean_1.BooleanType;
var buffer_1 = __webpack_require__(72);
exports.BufferType = buffer_1.BufferType;
var codepoint_string_1 = __webpack_require__(74);
exports.CodepointStringType = codepoint_string_1.CodepointStringType;
var date_1 = __webpack_require__(77);
exports.DateType = date_1.DateType;
var document_1 = __webpack_require__(79);
exports.DocumentType = document_1.DocumentType;
var float64_1 = __webpack_require__(84);
exports.Float64Type = float64_1.Float64Type;
var int32_1 = __webpack_require__(85);
exports.Int32Type = int32_1.Int32Type;
var literal_1 = __webpack_require__(54);
exports.LiteralType = literal_1.LiteralType;
var map_1 = __webpack_require__(87);
exports.MapType = map_1.MapType;
var null_1 = __webpack_require__(88);
exports.NullType = null_1.NullType;
var simple_enum_1 = __webpack_require__(55);
exports.SimpleEnumType = simple_enum_1.SimpleEnumType;
var tagged_union_1 = __webpack_require__(89);
exports.TaggedUnionType = tagged_union_1.TaggedUnionType;
var typed_union_1 = __webpack_require__(90);
exports.TypedUnionType = typed_union_1.TypedUnionType;
var ucs2_string_1 = __webpack_require__(91);
exports.Ucs2StringType = ucs2_string_1.Ucs2StringType;
var union_1 = __webpack_require__(56);
exports.UnionType = union_1.UnionType;
const array = __webpack_require__(69);
exports.array = array;
const boolean = __webpack_require__(71);
exports.boolean = boolean;
const buffer = __webpack_require__(72);
exports.buffer = buffer;
const codepointString = __webpack_require__(74);
exports.codepointString = codepointString;
const date = __webpack_require__(77);
exports.date = date;
const document = __webpack_require__(79);
exports.document = document;
const float64 = __webpack_require__(84);
exports.float64 = float64;
const int32 = __webpack_require__(85);
exports.int32 = int32;
const literal = __webpack_require__(54);
exports.literal = literal;
const map = __webpack_require__(87);
exports.map = map;
const _null = __webpack_require__(88);
exports.null = _null;
const simpleEnum = __webpack_require__(55);
exports.simpleEnum = simpleEnum;
const taggedUnion = __webpack_require__(89);
exports.taggedUnion = taggedUnion;
const typedUnion = __webpack_require__(90);
exports.typedUnion = typedUnion;
const ucs2String = __webpack_require__(91);
exports.ucs2String = ucs2String;
const union = __webpack_require__(56);
exports.union = union;
const errors = __webpack_require__(167);
exports.errors = errors;
var rename_1 = __webpack_require__(53);
exports.CaseStyle = rename_1.CaseStyle;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9pbmRleC5lczUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxvQkFBa0I7QUFJbEIsdUNBQXdDO0FBQWhDLDRCQUFBLFNBQVMsQ0FBQTtBQUNqQiwyQ0FBNEM7QUFBcEMsZ0NBQUEsV0FBVyxDQUFBO0FBQ25CLHlDQUEwQztBQUFsQyw4QkFBQSxVQUFVLENBQUE7QUFDbEIsNkRBQTZEO0FBQXJELGlEQUFBLG1CQUFtQixDQUFBO0FBQzNCLHFDQUFzQztBQUE5QiwwQkFBQSxRQUFRLENBQUE7QUFDaEIsNkNBQThDO0FBQXRDLGtDQUFBLFlBQVksQ0FBQTtBQUNwQiwyQ0FBNEM7QUFBcEMsZ0NBQUEsV0FBVyxDQUFBO0FBQ25CLHVDQUF3QztBQUFoQyw0QkFBQSxTQUFTLENBQUE7QUFDakIsMkNBQTRDO0FBQXBDLGdDQUFBLFdBQVcsQ0FBQTtBQUNuQixtQ0FBb0M7QUFBNUIsd0JBQUEsT0FBTyxDQUFBO0FBQ2YscUNBQXNDO0FBQTlCLDBCQUFBLFFBQVEsQ0FBQTtBQUNoQixtREFBbUQ7QUFBM0MsdUNBQUEsY0FBYyxDQUFBO0FBQ3RCLHFEQUFxRDtBQUE3Qyx5Q0FBQSxlQUFlLENBQUE7QUFDdkIsbURBQW1EO0FBQTNDLHVDQUFBLGNBQWMsQ0FBQTtBQUN0QixtREFBbUQ7QUFBM0MsdUNBQUEsY0FBYyxDQUFBO0FBQ3RCLHVDQUF3QztBQUFoQyw0QkFBQSxTQUFTLENBQUE7QUFFakIsdUNBQXVDO0FBaUJyQyxzQkFBSztBQWhCUCwyQ0FBMkM7QUFpQnpDLDBCQUFPO0FBaEJULHlDQUF5QztBQWlCdkMsd0JBQU07QUFoQlIsNERBQTZEO0FBaUIzRCwwQ0FBZTtBQWhCakIscUNBQXNDO0FBaUJwQyxvQkFBSTtBQWhCTiw2Q0FBOEM7QUFpQjVDLDRCQUFRO0FBaEJWLDJDQUE0QztBQWlCMUMsMEJBQU87QUFoQlQsdUNBQXdDO0FBaUJ0QyxzQkFBSztBQWhCUCwyQ0FBNEM7QUFpQjFDLDBCQUFPO0FBaEJULG1DQUFvQztBQWlCbEMsa0JBQUc7QUFoQkwsc0NBQXVDO0FBaUI1QixxQkFBSTtBQWhCZixrREFBbUQ7QUFpQmpELGdDQUFVO0FBaEJaLG9EQUFxRDtBQWlCbkQsa0NBQVc7QUFoQmIsa0RBQW1EO0FBaUJqRCxnQ0FBVTtBQWhCWixrREFBbUQ7QUFpQmpELGdDQUFVO0FBaEJaLHVDQUF3QztBQWlCdEMsc0JBQUs7QUFHUCx5Q0FBeUM7QUFDakMsd0JBQU07QUFFZCwyQ0FBMkM7QUFBbkMsNkJBQUEsU0FBUyxDQUFBIiwiZmlsZSI6ImxpYi9pbmRleC5lczUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCJlczYtc2hpbVwiO1xuXG5leHBvcnQge1R5cGUsIFNlcmlhbGl6YWJsZVR5cGUsIFZlcnNpb25lZFR5cGV9IGZyb20gXCIuL2ludGVyZmFjZXNcIjtcblxuZXhwb3J0IHtBcnJheVR5cGV9IGZyb20gXCIuL3R5cGVzL2FycmF5XCI7XG5leHBvcnQge0Jvb2xlYW5UeXBlfSBmcm9tIFwiLi90eXBlcy9ib29sZWFuXCI7XG5leHBvcnQge0J1ZmZlclR5cGV9IGZyb20gXCIuL3R5cGVzL2J1ZmZlclwiO1xuZXhwb3J0IHtDb2RlcG9pbnRTdHJpbmdUeXBlfSBmcm9tIFwiLi90eXBlcy9jb2RlcG9pbnQtc3RyaW5nXCI7XG5leHBvcnQge0RhdGVUeXBlfSBmcm9tIFwiLi90eXBlcy9kYXRlXCI7XG5leHBvcnQge0RvY3VtZW50VHlwZX0gZnJvbSBcIi4vdHlwZXMvZG9jdW1lbnRcIjtcbmV4cG9ydCB7RmxvYXQ2NFR5cGV9IGZyb20gXCIuL3R5cGVzL2Zsb2F0NjRcIjtcbmV4cG9ydCB7SW50MzJUeXBlfSBmcm9tIFwiLi90eXBlcy9pbnQzMlwiO1xuZXhwb3J0IHtMaXRlcmFsVHlwZX0gZnJvbSBcIi4vdHlwZXMvbGl0ZXJhbFwiO1xuZXhwb3J0IHtNYXBUeXBlfSBmcm9tIFwiLi90eXBlcy9tYXBcIjtcbmV4cG9ydCB7TnVsbFR5cGV9IGZyb20gXCIuL3R5cGVzL251bGxcIjtcbmV4cG9ydCB7U2ltcGxlRW51bVR5cGV9IGZyb20gXCIuL3R5cGVzL3NpbXBsZS1lbnVtXCI7XG5leHBvcnQge1RhZ2dlZFVuaW9uVHlwZX0gZnJvbSBcIi4vdHlwZXMvdGFnZ2VkLXVuaW9uXCI7XG5leHBvcnQge1R5cGVkVW5pb25UeXBlfSBmcm9tIFwiLi90eXBlcy90eXBlZC11bmlvblwiO1xuZXhwb3J0IHtVY3MyU3RyaW5nVHlwZX0gZnJvbSBcIi4vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmV4cG9ydCB7VW5pb25UeXBlfSBmcm9tIFwiLi90eXBlcy91bmlvblwiO1xuXG5pbXBvcnQgKiBhcyBhcnJheSBmcm9tIFwiLi90eXBlcy9hcnJheVwiO1xuaW1wb3J0ICogYXMgYm9vbGVhbiBmcm9tIFwiLi90eXBlcy9ib29sZWFuXCI7XG5pbXBvcnQgKiBhcyBidWZmZXIgZnJvbSBcIi4vdHlwZXMvYnVmZmVyXCI7XG5pbXBvcnQgKiBhcyBjb2RlcG9pbnRTdHJpbmcgIGZyb20gXCIuL3R5cGVzL2NvZGVwb2ludC1zdHJpbmdcIjtcbmltcG9ydCAqIGFzIGRhdGUgIGZyb20gXCIuL3R5cGVzL2RhdGVcIjtcbmltcG9ydCAqIGFzIGRvY3VtZW50ICBmcm9tIFwiLi90eXBlcy9kb2N1bWVudFwiO1xuaW1wb3J0ICogYXMgZmxvYXQ2NCAgZnJvbSBcIi4vdHlwZXMvZmxvYXQ2NFwiO1xuaW1wb3J0ICogYXMgaW50MzIgIGZyb20gXCIuL3R5cGVzL2ludDMyXCI7XG5pbXBvcnQgKiBhcyBsaXRlcmFsICBmcm9tIFwiLi90eXBlcy9saXRlcmFsXCI7XG5pbXBvcnQgKiBhcyBtYXAgIGZyb20gXCIuL3R5cGVzL21hcFwiO1xuaW1wb3J0ICogYXMgX251bGwgIGZyb20gXCIuL3R5cGVzL251bGxcIjtcbmltcG9ydCAqIGFzIHNpbXBsZUVudW0gIGZyb20gXCIuL3R5cGVzL3NpbXBsZS1lbnVtXCI7XG5pbXBvcnQgKiBhcyB0YWdnZWRVbmlvbiAgZnJvbSBcIi4vdHlwZXMvdGFnZ2VkLXVuaW9uXCI7XG5pbXBvcnQgKiBhcyB0eXBlZFVuaW9uICBmcm9tIFwiLi90eXBlcy90eXBlZC11bmlvblwiO1xuaW1wb3J0ICogYXMgdWNzMlN0cmluZyAgZnJvbSBcIi4vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCAqIGFzIHVuaW9uICBmcm9tIFwiLi90eXBlcy91bmlvblwiO1xuZXhwb3J0IHtcbiAgYXJyYXksXG4gIGJvb2xlYW4sXG4gIGJ1ZmZlcixcbiAgY29kZXBvaW50U3RyaW5nLFxuICBkYXRlLFxuICBkb2N1bWVudCxcbiAgZmxvYXQ2NCxcbiAgaW50MzIsXG4gIGxpdGVyYWwsXG4gIG1hcCxcbiAgX251bGwgYXMgbnVsbCxcbiAgc2ltcGxlRW51bSxcbiAgdGFnZ2VkVW5pb24sXG4gIHR5cGVkVW5pb24sXG4gIHVjczJTdHJpbmcsXG4gIHVuaW9uLFxufTtcblxuaW1wb3J0ICogYXMgZXJyb3JzIGZyb20gXCIuL2Vycm9ycy9pbmRleFwiO1xuZXhwb3J0IHtlcnJvcnN9O1xuXG5leHBvcnQge0Nhc2VTdHlsZX0gZnJvbSBcIi4vaGVscGVycy9yZW5hbWVcIjtcbiJdfQ==


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var ActionType;
(function (ActionType) {
    ActionType[ActionType["Unknown"] = 0] = "Unknown";
    ActionType[ActionType["Add"] = 1] = "Add";
    ActionType[ActionType["Add2"] = 2] = "Add2";
    ActionType[ActionType["And"] = 3] = "And";
    ActionType[ActionType["AsciiToChar"] = 4] = "AsciiToChar";
    ActionType[ActionType["BitAnd"] = 5] = "BitAnd";
    ActionType[ActionType["BitLShift"] = 6] = "BitLShift";
    ActionType[ActionType["BitOr"] = 7] = "BitOr";
    ActionType[ActionType["BitRShift"] = 8] = "BitRShift";
    ActionType[ActionType["BitURShift"] = 9] = "BitURShift";
    ActionType[ActionType["BitXor"] = 10] = "BitXor";
    ActionType[ActionType["Call"] = 11] = "Call";
    ActionType[ActionType["CallFunction"] = 12] = "CallFunction";
    ActionType[ActionType["CallMethod"] = 13] = "CallMethod";
    ActionType[ActionType["CastOp"] = 14] = "CastOp";
    ActionType[ActionType["CharToAscii"] = 15] = "CharToAscii";
    ActionType[ActionType["CloneSprite"] = 16] = "CloneSprite";
    ActionType[ActionType["ConstantPool"] = 17] = "ConstantPool";
    ActionType[ActionType["Decrement"] = 18] = "Decrement";
    ActionType[ActionType["DefineFunction"] = 19] = "DefineFunction";
    ActionType[ActionType["DefineFunction2"] = 20] = "DefineFunction2";
    ActionType[ActionType["DefineLocal"] = 21] = "DefineLocal";
    ActionType[ActionType["DefineLocal2"] = 22] = "DefineLocal2";
    ActionType[ActionType["Delete"] = 23] = "Delete";
    ActionType[ActionType["Delete2"] = 24] = "Delete2";
    ActionType[ActionType["Divide"] = 25] = "Divide";
    ActionType[ActionType["EndDrag"] = 26] = "EndDrag";
    ActionType[ActionType["Enumerate"] = 27] = "Enumerate";
    ActionType[ActionType["Enumerate2"] = 28] = "Enumerate2";
    ActionType[ActionType["Equals"] = 29] = "Equals";
    ActionType[ActionType["Equals2"] = 30] = "Equals2";
    ActionType[ActionType["Extends"] = 31] = "Extends";
    ActionType[ActionType["FsCommand2"] = 32] = "FsCommand2";
    ActionType[ActionType["GetMember"] = 33] = "GetMember";
    ActionType[ActionType["GetProperty"] = 34] = "GetProperty";
    ActionType[ActionType["GetTime"] = 35] = "GetTime";
    ActionType[ActionType["GetUrl"] = 36] = "GetUrl";
    ActionType[ActionType["GetUrl2"] = 37] = "GetUrl2";
    ActionType[ActionType["GetVariable"] = 38] = "GetVariable";
    ActionType[ActionType["GotoFrame"] = 39] = "GotoFrame";
    ActionType[ActionType["GotoFrame2"] = 40] = "GotoFrame2";
    ActionType[ActionType["GotoLabel"] = 41] = "GotoLabel";
    ActionType[ActionType["Greater"] = 42] = "Greater";
    ActionType[ActionType["If"] = 43] = "If";
    ActionType[ActionType["ImplementsOp"] = 44] = "ImplementsOp";
    ActionType[ActionType["Increment"] = 45] = "Increment";
    ActionType[ActionType["InitArray"] = 46] = "InitArray";
    ActionType[ActionType["InitObject"] = 47] = "InitObject";
    ActionType[ActionType["InstanceOf"] = 48] = "InstanceOf";
    ActionType[ActionType["Jump"] = 49] = "Jump";
    ActionType[ActionType["Less"] = 50] = "Less";
    ActionType[ActionType["Less2"] = 51] = "Less2";
    ActionType[ActionType["MbAsciiToChar"] = 52] = "MbAsciiToChar";
    ActionType[ActionType["MbCharToAscii"] = 53] = "MbCharToAscii";
    ActionType[ActionType["MbStringExtract"] = 54] = "MbStringExtract";
    ActionType[ActionType["MbStringLength"] = 55] = "MbStringLength";
    ActionType[ActionType["Modulo"] = 56] = "Modulo";
    ActionType[ActionType["Multiply"] = 57] = "Multiply";
    ActionType[ActionType["NewMethod"] = 58] = "NewMethod";
    ActionType[ActionType["NewObject"] = 59] = "NewObject";
    ActionType[ActionType["NextFrame"] = 60] = "NextFrame";
    ActionType[ActionType["Not"] = 61] = "Not";
    ActionType[ActionType["Or"] = 62] = "Or";
    ActionType[ActionType["Play"] = 63] = "Play";
    ActionType[ActionType["Pop"] = 64] = "Pop";
    ActionType[ActionType["PreviousFrame"] = 65] = "PreviousFrame";
    ActionType[ActionType["Push"] = 66] = "Push";
    ActionType[ActionType["PushDuplicate"] = 67] = "PushDuplicate";
    ActionType[ActionType["RandomNumber"] = 68] = "RandomNumber";
    ActionType[ActionType["RemoveSprite"] = 69] = "RemoveSprite";
    ActionType[ActionType["Return"] = 70] = "Return";
    ActionType[ActionType["SetMember"] = 71] = "SetMember";
    ActionType[ActionType["SetProperty"] = 72] = "SetProperty";
    ActionType[ActionType["SetTarget"] = 73] = "SetTarget";
    ActionType[ActionType["SetTarget2"] = 74] = "SetTarget2";
    ActionType[ActionType["SetVariable"] = 75] = "SetVariable";
    ActionType[ActionType["StackSwap"] = 76] = "StackSwap";
    ActionType[ActionType["StartDrag"] = 77] = "StartDrag";
    ActionType[ActionType["Stop"] = 78] = "Stop";
    ActionType[ActionType["StopSounds"] = 79] = "StopSounds";
    ActionType[ActionType["StoreRegister"] = 80] = "StoreRegister";
    ActionType[ActionType["StrictEquals"] = 81] = "StrictEquals";
    ActionType[ActionType["StrictMode"] = 82] = "StrictMode";
    ActionType[ActionType["StringAdd"] = 83] = "StringAdd";
    ActionType[ActionType["StringEquals"] = 84] = "StringEquals";
    ActionType[ActionType["StringExtract"] = 85] = "StringExtract";
    ActionType[ActionType["StringGreater"] = 86] = "StringGreater";
    ActionType[ActionType["StringLength"] = 87] = "StringLength";
    ActionType[ActionType["StringLess"] = 88] = "StringLess";
    ActionType[ActionType["Subtract"] = 89] = "Subtract";
    ActionType[ActionType["TargetPath"] = 90] = "TargetPath";
    ActionType[ActionType["Throw"] = 91] = "Throw";
    ActionType[ActionType["ToggleQuality"] = 92] = "ToggleQuality";
    ActionType[ActionType["ToInteger"] = 93] = "ToInteger";
    ActionType[ActionType["ToNumber"] = 94] = "ToNumber";
    ActionType[ActionType["ToString"] = 95] = "ToString";
    ActionType[ActionType["Trace"] = 96] = "Trace";
    ActionType[ActionType["Try"] = 97] = "Try";
    ActionType[ActionType["TypeOf"] = 98] = "TypeOf";
    ActionType[ActionType["WaitForFrame"] = 99] = "WaitForFrame";
    ActionType[ActionType["WaitForFrame2"] = 100] = "WaitForFrame2";
    ActionType[ActionType["With"] = 101] = "With";
})(ActionType = exports.ActionType || (exports.ActionType = {}));
(function (ActionType) {
    ActionType.type = new kryo_1.SimpleEnumType({
        enum: ActionType,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(ActionType = exports.ActionType || (exports.ActionType = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbi10eXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQStDO0FBRS9DLElBQVksVUF1R1g7QUF2R0QsV0FBWSxVQUFVO0lBQ3BCLGlEQUFPLENBQUE7SUFDUCx5Q0FBRyxDQUFBO0lBQ0gsMkNBQUksQ0FBQTtJQUNKLHlDQUFHLENBQUE7SUFDSCx5REFBVyxDQUFBO0lBQ1gsK0NBQU0sQ0FBQTtJQUNOLHFEQUFTLENBQUE7SUFDVCw2Q0FBSyxDQUFBO0lBQ0wscURBQVMsQ0FBQTtJQUNULHVEQUFVLENBQUE7SUFDVixnREFBTSxDQUFBO0lBQ04sNENBQUksQ0FBQTtJQUNKLDREQUFZLENBQUE7SUFDWix3REFBVSxDQUFBO0lBQ1YsZ0RBQU0sQ0FBQTtJQUNOLDBEQUFXLENBQUE7SUFDWCwwREFBVyxDQUFBO0lBQ1gsNERBQVksQ0FBQTtJQUNaLHNEQUFTLENBQUE7SUFDVCxnRUFBYyxDQUFBO0lBQ2Qsa0VBQWUsQ0FBQTtJQUNmLDBEQUFXLENBQUE7SUFDWCw0REFBWSxDQUFBO0lBQ1osZ0RBQU0sQ0FBQTtJQUNOLGtEQUFPLENBQUE7SUFDUCxnREFBTSxDQUFBO0lBQ04sa0RBQU8sQ0FBQTtJQUNQLHNEQUFTLENBQUE7SUFDVCx3REFBVSxDQUFBO0lBQ1YsZ0RBQU0sQ0FBQTtJQUNOLGtEQUFPLENBQUE7SUFDUCxrREFBTyxDQUFBO0lBQ1Asd0RBQVUsQ0FBQTtJQUNWLHNEQUFTLENBQUE7SUFDVCwwREFBVyxDQUFBO0lBQ1gsa0RBQU8sQ0FBQTtJQUNQLGdEQUFNLENBQUE7SUFDTixrREFBTyxDQUFBO0lBQ1AsMERBQVcsQ0FBQTtJQUNYLHNEQUFTLENBQUE7SUFDVCx3REFBVSxDQUFBO0lBQ1Ysc0RBQVMsQ0FBQTtJQUNULGtEQUFPLENBQUE7SUFDUCx3Q0FBRSxDQUFBO0lBQ0YsNERBQVksQ0FBQTtJQUNaLHNEQUFTLENBQUE7SUFDVCxzREFBUyxDQUFBO0lBQ1Qsd0RBQVUsQ0FBQTtJQUNWLHdEQUFVLENBQUE7SUFDViw0Q0FBSSxDQUFBO0lBQ0osNENBQUksQ0FBQTtJQUNKLDhDQUFLLENBQUE7SUFDTCw4REFBYSxDQUFBO0lBQ2IsOERBQWEsQ0FBQTtJQUNiLGtFQUFlLENBQUE7SUFDZixnRUFBYyxDQUFBO0lBQ2QsZ0RBQU0sQ0FBQTtJQUNOLG9EQUFRLENBQUE7SUFDUixzREFBUyxDQUFBO0lBQ1Qsc0RBQVMsQ0FBQTtJQUNULHNEQUFTLENBQUE7SUFDVCwwQ0FBRyxDQUFBO0lBQ0gsd0NBQUUsQ0FBQTtJQUNGLDRDQUFJLENBQUE7SUFDSiwwQ0FBRyxDQUFBO0lBQ0gsOERBQWEsQ0FBQTtJQUNiLDRDQUFJLENBQUE7SUFDSiw4REFBYSxDQUFBO0lBQ2IsNERBQVksQ0FBQTtJQUNaLDREQUFZLENBQUE7SUFDWixnREFBTSxDQUFBO0lBQ04sc0RBQVMsQ0FBQTtJQUNULDBEQUFXLENBQUE7SUFDWCxzREFBUyxDQUFBO0lBQ1Qsd0RBQVUsQ0FBQTtJQUNWLDBEQUFXLENBQUE7SUFDWCxzREFBUyxDQUFBO0lBQ1Qsc0RBQVMsQ0FBQTtJQUNULDRDQUFJLENBQUE7SUFDSix3REFBVSxDQUFBO0lBQ1YsOERBQWEsQ0FBQTtJQUNiLDREQUFZLENBQUE7SUFDWix3REFBVSxDQUFBO0lBQ1Ysc0RBQVMsQ0FBQTtJQUNULDREQUFZLENBQUE7SUFDWiw4REFBYSxDQUFBO0lBQ2IsOERBQWEsQ0FBQTtJQUNiLDREQUFZLENBQUE7SUFDWix3REFBVSxDQUFBO0lBQ1Ysb0RBQVEsQ0FBQTtJQUNSLHdEQUFVLENBQUE7SUFDViw4Q0FBSyxDQUFBO0lBQ0wsOERBQWEsQ0FBQTtJQUNiLHNEQUFTLENBQUE7SUFDVCxvREFBUSxDQUFBO0lBQ1Isb0RBQVEsQ0FBQTtJQUNSLDhDQUFLLENBQUE7SUFDTCwwQ0FBRyxDQUFBO0lBQ0gsZ0RBQU0sQ0FBQTtJQUNOLDREQUFZLENBQUE7SUFDWiwrREFBYSxDQUFBO0lBQ2IsNkNBQUksQ0FBQTtBQUNOLENBQUMsRUF2R1csVUFBVSxHQUFWLGtCQUFVLEtBQVYsa0JBQVUsUUF1R3JCO0FBRUQsV0FBaUIsVUFBVTtJQW9HWixlQUFJLEdBQStCLElBQUkscUJBQWMsQ0FBYTtRQUM3RSxJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUF4R2dCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBd0cxQiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb24tdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBTaW1wbGVFbnVtVHlwZX0gZnJvbSBcImtyeW9cIjtcblxuZXhwb3J0IGVudW0gQWN0aW9uVHlwZSB7XG4gIFVua25vd24sXG4gIEFkZCxcbiAgQWRkMixcbiAgQW5kLFxuICBBc2NpaVRvQ2hhcixcbiAgQml0QW5kLFxuICBCaXRMU2hpZnQsXG4gIEJpdE9yLFxuICBCaXRSU2hpZnQsXG4gIEJpdFVSU2hpZnQsXG4gIEJpdFhvcixcbiAgQ2FsbCxcbiAgQ2FsbEZ1bmN0aW9uLFxuICBDYWxsTWV0aG9kLFxuICBDYXN0T3AsXG4gIENoYXJUb0FzY2lpLFxuICBDbG9uZVNwcml0ZSxcbiAgQ29uc3RhbnRQb29sLFxuICBEZWNyZW1lbnQsXG4gIERlZmluZUZ1bmN0aW9uLFxuICBEZWZpbmVGdW5jdGlvbjIsXG4gIERlZmluZUxvY2FsLFxuICBEZWZpbmVMb2NhbDIsXG4gIERlbGV0ZSxcbiAgRGVsZXRlMixcbiAgRGl2aWRlLFxuICBFbmREcmFnLFxuICBFbnVtZXJhdGUsXG4gIEVudW1lcmF0ZTIsXG4gIEVxdWFscyxcbiAgRXF1YWxzMixcbiAgRXh0ZW5kcyxcbiAgRnNDb21tYW5kMixcbiAgR2V0TWVtYmVyLFxuICBHZXRQcm9wZXJ0eSxcbiAgR2V0VGltZSxcbiAgR2V0VXJsLFxuICBHZXRVcmwyLFxuICBHZXRWYXJpYWJsZSxcbiAgR290b0ZyYW1lLFxuICBHb3RvRnJhbWUyLFxuICBHb3RvTGFiZWwsXG4gIEdyZWF0ZXIsXG4gIElmLFxuICBJbXBsZW1lbnRzT3AsXG4gIEluY3JlbWVudCxcbiAgSW5pdEFycmF5LFxuICBJbml0T2JqZWN0LFxuICBJbnN0YW5jZU9mLFxuICBKdW1wLFxuICBMZXNzLFxuICBMZXNzMixcbiAgTWJBc2NpaVRvQ2hhcixcbiAgTWJDaGFyVG9Bc2NpaSxcbiAgTWJTdHJpbmdFeHRyYWN0LFxuICBNYlN0cmluZ0xlbmd0aCxcbiAgTW9kdWxvLFxuICBNdWx0aXBseSxcbiAgTmV3TWV0aG9kLFxuICBOZXdPYmplY3QsXG4gIE5leHRGcmFtZSxcbiAgTm90LFxuICBPcixcbiAgUGxheSxcbiAgUG9wLFxuICBQcmV2aW91c0ZyYW1lLFxuICBQdXNoLFxuICBQdXNoRHVwbGljYXRlLFxuICBSYW5kb21OdW1iZXIsXG4gIFJlbW92ZVNwcml0ZSxcbiAgUmV0dXJuLFxuICBTZXRNZW1iZXIsXG4gIFNldFByb3BlcnR5LFxuICBTZXRUYXJnZXQsXG4gIFNldFRhcmdldDIsXG4gIFNldFZhcmlhYmxlLFxuICBTdGFja1N3YXAsXG4gIFN0YXJ0RHJhZyxcbiAgU3RvcCxcbiAgU3RvcFNvdW5kcyxcbiAgU3RvcmVSZWdpc3RlcixcbiAgU3RyaWN0RXF1YWxzLFxuICBTdHJpY3RNb2RlLFxuICBTdHJpbmdBZGQsXG4gIFN0cmluZ0VxdWFscyxcbiAgU3RyaW5nRXh0cmFjdCxcbiAgU3RyaW5nR3JlYXRlcixcbiAgU3RyaW5nTGVuZ3RoLFxuICBTdHJpbmdMZXNzLFxuICBTdWJ0cmFjdCxcbiAgVGFyZ2V0UGF0aCxcbiAgVGhyb3csXG4gIFRvZ2dsZVF1YWxpdHksXG4gIFRvSW50ZWdlcixcbiAgVG9OdW1iZXIsXG4gIFRvU3RyaW5nLFxuICBUcmFjZSxcbiAgVHJ5LFxuICBUeXBlT2YsXG4gIFdhaXRGb3JGcmFtZSxcbiAgV2FpdEZvckZyYW1lMixcbiAgV2l0aCxcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBBY3Rpb25UeXBlIHtcbiAgZXhwb3J0IHR5cGUgSnNvbiA9XG4gICAgXCJ1bmtub3duXCJcbiAgICB8IFwiYWRkXCJcbiAgICB8IFwiYWRkMlwiXG4gICAgfCBcImFuZFwiXG4gICAgfCBcImFzY2lpLXRvLWNoYXJcIlxuICAgIHwgXCJiaXQtYW5kXCJcbiAgICB8IFwiYml0LWwtc2hpZnRcIlxuICAgIHwgXCJiaXQtci1zaGlmdFwiXG4gICAgfCBcImJpdC11LXItc2hpZnRcIlxuICAgIHwgXCJiaXQteG9yXCJcbiAgICB8IFwiY2FsbFwiXG4gICAgfCBcImNhbGwtZnVuY3Rpb25cIlxuICAgIHwgXCJjYWxsLW1ldGhvZFwiXG4gICAgfCBcImNhc3Qtb3BcIlxuICAgIHwgXCJjaGFyLXRvLWFzY2lpXCJcbiAgICB8IFwiY2xvbmUtc3ByaXRlXCJcbiAgICB8IFwiY29uc3RhbnQtcG9vbFwiXG4gICAgfCBcImRlY3JlbWVudFwiXG4gICAgfCBcImRlZmluZS1mdW5jdGlvblwiXG4gICAgfCBcImRlZmluZS1mdW5jdGlvbjJcIlxuICAgIHwgXCJkZWZpbmUtbG9jYWxcIlxuICAgIHwgXCJkZWZpbmUtbG9jYWwyXCJcbiAgICB8IFwiZGVsZXRlXCJcbiAgICB8IFwiZGVsZXRlMlwiXG4gICAgfCBcImRpdmlkZVwiXG4gICAgfCBcImVuZC1kcmFnXCJcbiAgICB8IFwiZW51bWVyYXRlXCJcbiAgICB8IFwiZW51bWVyYXRlMlwiXG4gICAgfCBcImVxdWFsc1wiXG4gICAgfCBcImVxdWFsczJcIlxuICAgIHwgXCJleHRlbmRzXCJcbiAgICB8IFwiZnMtY29tbWFuZDJcIlxuICAgIHwgXCJnZXQtbWVtYmVyXCJcbiAgICB8IFwiZ2V0LXByb3BlcnR5XCJcbiAgICB8IFwiZ2V0LXRpbWVcIlxuICAgIHwgXCJnZXQtdXJsXCJcbiAgICB8IFwiZ2V0LXVybDJcIlxuICAgIHwgXCJnZXQtdmFyaWFibGVcIlxuICAgIHwgXCJnb3RvLWZyYW1lXCJcbiAgICB8IFwiZ290by1mcmFtZTJcIlxuICAgIHwgXCJnb3RvLWxhYmVsXCJcbiAgICB8IFwiZ3JlYXRlclwiXG4gICAgfCBcImlmXCJcbiAgICB8IFwiaW1wbGVtZW50cy1vcFwiXG4gICAgfCBcImluY3JlbWVudFwiXG4gICAgfCBcImluaXQtYXJyYXlcIlxuICAgIHwgXCJpbml0LW9iamVjdFwiXG4gICAgfCBcImluc3RhbmNlLW9mXCJcbiAgICB8IFwianVtcFwiXG4gICAgfCBcImxlc3NcIlxuICAgIHwgXCJsZXNzMlwiXG4gICAgfCBcIm1iLWFzY2lpLXRvLWNoYXJcIlxuICAgIHwgXCJtYi1jaGFyLXRvLWFzY2lpXCJcbiAgICB8IFwibWItc3RyaW5nLWV4dHJhY3RcIlxuICAgIHwgXCJtYi1zdHJpbmctbGVuZ3RoXCJcbiAgICB8IFwibW9kdWxvXCJcbiAgICB8IFwibXVsdGlwbHlcIlxuICAgIHwgXCJuZXctbWV0aG9kXCJcbiAgICB8IFwibWV3LW9iamVjdFwiXG4gICAgfCBcIm5leHQtZnJhbWVcIlxuICAgIHwgXCJub3RcIlxuICAgIHwgXCJvclwiXG4gICAgfCBcInBsYXlcIlxuICAgIHwgXCJwb3BcIlxuICAgIHwgXCJwcmV2aW91cy1mcmFtZVwiXG4gICAgfCBcInB1c2hcIlxuICAgIHwgXCJyYW5kb20tbnVtYmVyXCJcbiAgICB8IFwicmVtb3ZlLXNwcml0ZVwiXG4gICAgfCBcInJldHVyblwiXG4gICAgfCBcInNldC1tZW1iZXJcIlxuICAgIHwgXCJzZXQtcHJvcGVydHlcIlxuICAgIHwgXCJzZXQtdGFyZ2V0XCJcbiAgICB8IFwic2V0LXRhcmdldDJcIlxuICAgIHwgXCJzZXQtdmFyaWFibGVcIlxuICAgIHwgXCJzdGFjay1zd2FwXCJcbiAgICB8IFwic3RhcnQtZHJhZ1wiXG4gICAgfCBcInN0b3BcIlxuICAgIHwgXCJzdG9wLXNvdW5kc1wiXG4gICAgfCBcInN0b3JlLXJlZ2lzdGVyXCJcbiAgICB8IFwic3RyaWN0LWVxdWFsc1wiXG4gICAgfCBcInN0cmluZy1leHRyYWN0XCJcbiAgICB8IFwic3RyaW5nLWdyZWF0ZXJcIlxuICAgIHwgXCJzdHJpbmctbGVuZ3RoXCJcbiAgICB8IFwic3RyaW5nLWxlc3NcIlxuICAgIHwgXCJzdWJ0cmFjdFwiXG4gICAgfCBcInRhcmdldC1wYXRoXCJcbiAgICB8IFwidGhyb3dcIlxuICAgIHwgXCJ0b2dnbGUtcXVhbGl0eVwiXG4gICAgfCBcInRvLWludGVnZXJcIlxuICAgIHwgXCJ0by1udW1iZXJcIlxuICAgIHwgXCJ0by1zdHJpbmdcIlxuICAgIHwgXCJ0cmFjZVwiXG4gICAgfCBcInRyeVwiXG4gICAgfCBcInR5cGUtb2ZcIlxuICAgIHwgXCJ3YWl0LWZvci1mcmFtZVwiXG4gICAgfCBcIndhaXQtZm9yLWZyYW1lMlwiXG4gICAgfCBcIndpdGhcIjtcblxuICBleHBvcnQgY29uc3QgdHlwZTogU2ltcGxlRW51bVR5cGU8QWN0aW9uVHlwZT4gPSBuZXcgU2ltcGxlRW51bVR5cGU8QWN0aW9uVHlwZT4oe1xuICAgIGVudW06IEFjdGlvblR5cGUsXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var incident_1 = __webpack_require__(155);
exports.Incident = incident_1.Incident;
exports.default = incident_1.Incident;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFvQztBQUM1Qix1Q0FBUTtBQUVoQixrQkFBZ0IsbUJBQVEsQ0FBQyIsImZpbGUiOiJsaWIvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiLi9pbmNpZGVudFwiO1xuZXhwb3J0IHtJbmNpZGVudH1cbmV4cG9ydCB7U3RhdGljSW5jaWRlbnR9IGZyb20gXCIuL2ludGVyZmFjZXNcIjtcbmV4cG9ydCAgZGVmYXVsdCBJbmNpZGVudDtcbiJdfQ==


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var TagType;
(function (TagType) {
    TagType[TagType["CharacterSet"] = 0] = "CharacterSet";
    TagType[TagType["CsmTextSettings"] = 1] = "CsmTextSettings";
    TagType[TagType["DebugId"] = 2] = "DebugId";
    TagType[TagType["DefineBehaviour"] = 3] = "DefineBehaviour";
    TagType[TagType["DefineBinaryData"] = 4] = "DefineBinaryData";
    TagType[TagType["DefineBitmap"] = 5] = "DefineBitmap";
    TagType[TagType["DefineButton"] = 6] = "DefineButton";
    TagType[TagType["DefineButton2"] = 7] = "DefineButton2";
    TagType[TagType["DefineButtonColorTransform"] = 8] = "DefineButtonColorTransform";
    TagType[TagType["DefineButtonSound"] = 9] = "DefineButtonSound";
    TagType[TagType["DefineCffFont"] = 10] = "DefineCffFont";
    TagType[TagType["DefineCommandObject"] = 11] = "DefineCommandObject";
    TagType[TagType["DefineDynamicText"] = 12] = "DefineDynamicText";
    TagType[TagType["DefinePartialFont"] = 13] = "DefinePartialFont";
    TagType[TagType["DefineFont"] = 14] = "DefineFont";
    TagType[TagType["DefineFontAlignZones"] = 15] = "DefineFontAlignZones";
    TagType[TagType["DefineFontInfo"] = 16] = "DefineFontInfo";
    TagType[TagType["DefineFontName"] = 17] = "DefineFontName";
    TagType[TagType["DefineFunction"] = 18] = "DefineFunction";
    TagType[TagType["DefineJpeg"] = 19] = "DefineJpeg";
    TagType[TagType["DefineMorphShape"] = 20] = "DefineMorphShape";
    TagType[TagType["DefineMorphShape2"] = 21] = "DefineMorphShape2";
    TagType[TagType["DefinePartialJpeg"] = 22] = "DefinePartialJpeg";
    TagType[TagType["DefineScalingGrid"] = 23] = "DefineScalingGrid";
    TagType[TagType["DefineSceneAndFrameLabelData"] = 24] = "DefineSceneAndFrameLabelData";
    TagType[TagType["DefineShape"] = 25] = "DefineShape";
    TagType[TagType["DefineSound"] = 26] = "DefineSound";
    TagType[TagType["DefineSprite"] = 27] = "DefineSprite";
    TagType[TagType["DefineText"] = 28] = "DefineText";
    TagType[TagType["DefineTextFormat"] = 29] = "DefineTextFormat";
    TagType[TagType["DefineVideo"] = 30] = "DefineVideo";
    TagType[TagType["DefineVideoStream"] = 31] = "DefineVideoStream";
    TagType[TagType["DoAbc"] = 32] = "DoAbc";
    TagType[TagType["DoAbcDefine"] = 33] = "DoAbcDefine";
    TagType[TagType["DoAction"] = 34] = "DoAction";
    TagType[TagType["DoInitAction"] = 35] = "DoInitAction";
    TagType[TagType["EnableDebugger"] = 36] = "EnableDebugger";
    TagType[TagType["ExportAssets"] = 37] = "ExportAssets";
    TagType[TagType["ExternalFont"] = 38] = "ExternalFont";
    TagType[TagType["FileAttributes"] = 39] = "FileAttributes";
    TagType[TagType["FrameLabel"] = 40] = "FrameLabel";
    TagType[TagType["FreeAll"] = 41] = "FreeAll";
    TagType[TagType["FreeCharacter"] = 42] = "FreeCharacter";
    TagType[TagType["GenCommand"] = 43] = "GenCommand";
    TagType[TagType["GenerateFrame"] = 44] = "GenerateFrame";
    TagType[TagType["GenTagObjects"] = 45] = "GenTagObjects";
    TagType[TagType["ImportAssets"] = 46] = "ImportAssets";
    TagType[TagType["JpegTables"] = 47] = "JpegTables";
    TagType[TagType["Metadata"] = 48] = "Metadata";
    TagType[TagType["NameCharacter"] = 49] = "NameCharacter";
    TagType[TagType["PathsArePostscript"] = 50] = "PathsArePostscript";
    TagType[TagType["PlaceFunction"] = 51] = "PlaceFunction";
    TagType[TagType["PlaceObject"] = 52] = "PlaceObject";
    TagType[TagType["ProductInfo"] = 53] = "ProductInfo";
    TagType[TagType["Protect"] = 54] = "Protect";
    TagType[TagType["RemoveObject"] = 55] = "RemoveObject";
    TagType[TagType["ScriptLimits"] = 56] = "ScriptLimits";
    TagType[TagType["SetBackgroundColor"] = 57] = "SetBackgroundColor";
    TagType[TagType["SetTabIndex"] = 58] = "SetTabIndex";
    TagType[TagType["ShowFrame"] = 59] = "ShowFrame";
    TagType[TagType["SoundStreamHead"] = 60] = "SoundStreamHead";
    TagType[TagType["SoundStreamHead2"] = 61] = "SoundStreamHead2";
    TagType[TagType["SoundStreamBlock"] = 62] = "SoundStreamBlock";
    TagType[TagType["StartSound"] = 63] = "StartSound";
    TagType[TagType["StartSound2"] = 64] = "StartSound2";
    TagType[TagType["StopSound"] = 65] = "StopSound";
    TagType[TagType["SymbolClass"] = 66] = "SymbolClass";
    TagType[TagType["SyncFrame"] = 67] = "SyncFrame";
    TagType[TagType["Telemetry"] = 68] = "Telemetry";
    TagType[TagType["VideoFrame"] = 69] = "VideoFrame";
    TagType[TagType["Unknown"] = 70] = "Unknown";
})(TagType = exports.TagType || (exports.TagType = {}));
(function (TagType) {
    TagType.type = new kryo_1.SimpleEnumType({
        enum: TagType,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(TagType = exports.TagType || (exports.TagType = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL190eXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQStDO0FBRS9DLElBQVksT0F3RVg7QUF4RUQsV0FBWSxPQUFPO0lBQ2pCLHFEQUFZLENBQUE7SUFDWiwyREFBZSxDQUFBO0lBQ2YsMkNBQU8sQ0FBQTtJQUNQLDJEQUFlLENBQUE7SUFDZiw2REFBZ0IsQ0FBQTtJQUNoQixxREFBWSxDQUFBO0lBQ1oscURBQVksQ0FBQTtJQUNaLHVEQUFhLENBQUE7SUFDYixpRkFBMEIsQ0FBQTtJQUMxQiwrREFBaUIsQ0FBQTtJQUNqQix3REFBYSxDQUFBO0lBQ2Isb0VBQW1CLENBQUE7SUFDbkIsZ0VBQWlCLENBQUE7SUFDakIsZ0VBQWlCLENBQUE7SUFDakIsa0RBQVUsQ0FBQTtJQUNWLHNFQUFvQixDQUFBO0lBQ3BCLDBEQUFjLENBQUE7SUFDZCwwREFBYyxDQUFBO0lBQ2QsMERBQWMsQ0FBQTtJQUNkLGtEQUFVLENBQUE7SUFDViw4REFBZ0IsQ0FBQTtJQUNoQixnRUFBaUIsQ0FBQTtJQUNqQixnRUFBaUIsQ0FBQTtJQUNqQixnRUFBaUIsQ0FBQTtJQUNqQixzRkFBNEIsQ0FBQTtJQUM1QixvREFBVyxDQUFBO0lBQ1gsb0RBQVcsQ0FBQTtJQUNYLHNEQUFZLENBQUE7SUFDWixrREFBVSxDQUFBO0lBQ1YsOERBQWdCLENBQUE7SUFDaEIsb0RBQVcsQ0FBQTtJQUNYLGdFQUFpQixDQUFBO0lBQ2pCLHdDQUFLLENBQUE7SUFDTCxvREFBVyxDQUFBO0lBQ1gsOENBQVEsQ0FBQTtJQUNSLHNEQUFZLENBQUE7SUFDWiwwREFBYyxDQUFBO0lBQ2Qsc0RBQVksQ0FBQTtJQUNaLHNEQUFZLENBQUE7SUFDWiwwREFBYyxDQUFBO0lBQ2Qsa0RBQVUsQ0FBQTtJQUNWLDRDQUFPLENBQUE7SUFDUCx3REFBYSxDQUFBO0lBQ2Isa0RBQVUsQ0FBQTtJQUNWLHdEQUFhLENBQUE7SUFDYix3REFBYSxDQUFBO0lBQ2Isc0RBQVksQ0FBQTtJQUNaLGtEQUFVLENBQUE7SUFDViw4Q0FBUSxDQUFBO0lBQ1Isd0RBQWEsQ0FBQTtJQUNiLGtFQUFrQixDQUFBO0lBQ2xCLHdEQUFhLENBQUE7SUFDYixvREFBVyxDQUFBO0lBQ1gsb0RBQVcsQ0FBQTtJQUNYLDRDQUFPLENBQUE7SUFDUCxzREFBWSxDQUFBO0lBQ1osc0RBQVksQ0FBQTtJQUNaLGtFQUFrQixDQUFBO0lBQ2xCLG9EQUFXLENBQUE7SUFDWCxnREFBUyxDQUFBO0lBQ1QsNERBQWUsQ0FBQTtJQUNmLDhEQUFnQixDQUFBO0lBQ2hCLDhEQUFnQixDQUFBO0lBQ2hCLGtEQUFVLENBQUE7SUFDVixvREFBVyxDQUFBO0lBQ1gsZ0RBQVMsQ0FBQTtJQUNULG9EQUFXLENBQUE7SUFDWCxnREFBUyxDQUFBO0lBQ1QsZ0RBQVMsQ0FBQTtJQUNULGtEQUFVLENBQUE7SUFDViw0Q0FBTyxDQUFBO0FBQ1QsQ0FBQyxFQXhFVyxPQUFPLEdBQVAsZUFBTyxLQUFQLGVBQU8sUUF3RWxCO0FBRUQsV0FBaUIsT0FBTztJQWdGVCxZQUFJLEdBQTRCLElBQUkscUJBQWMsQ0FBVTtRQUN2RSxJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQXBGZ0IsT0FBTyxHQUFQLGVBQU8sS0FBUCxlQUFPLFFBb0Z2QiIsImZpbGUiOiJsaWIvdGFncy9fdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBTaW1wbGVFbnVtVHlwZX0gZnJvbSBcImtyeW9cIjtcblxuZXhwb3J0IGVudW0gVGFnVHlwZSB7XG4gIENoYXJhY3RlclNldCxcbiAgQ3NtVGV4dFNldHRpbmdzLFxuICBEZWJ1Z0lkLFxuICBEZWZpbmVCZWhhdmlvdXIsXG4gIERlZmluZUJpbmFyeURhdGEsXG4gIERlZmluZUJpdG1hcCxcbiAgRGVmaW5lQnV0dG9uLFxuICBEZWZpbmVCdXR0b24yLFxuICBEZWZpbmVCdXR0b25Db2xvclRyYW5zZm9ybSxcbiAgRGVmaW5lQnV0dG9uU291bmQsXG4gIERlZmluZUNmZkZvbnQsXG4gIERlZmluZUNvbW1hbmRPYmplY3QsXG4gIERlZmluZUR5bmFtaWNUZXh0LFxuICBEZWZpbmVQYXJ0aWFsRm9udCxcbiAgRGVmaW5lRm9udCxcbiAgRGVmaW5lRm9udEFsaWduWm9uZXMsXG4gIERlZmluZUZvbnRJbmZvLFxuICBEZWZpbmVGb250TmFtZSxcbiAgRGVmaW5lRnVuY3Rpb24sXG4gIERlZmluZUpwZWcsXG4gIERlZmluZU1vcnBoU2hhcGUsXG4gIERlZmluZU1vcnBoU2hhcGUyLFxuICBEZWZpbmVQYXJ0aWFsSnBlZyxcbiAgRGVmaW5lU2NhbGluZ0dyaWQsXG4gIERlZmluZVNjZW5lQW5kRnJhbWVMYWJlbERhdGEsXG4gIERlZmluZVNoYXBlLFxuICBEZWZpbmVTb3VuZCxcbiAgRGVmaW5lU3ByaXRlLFxuICBEZWZpbmVUZXh0LFxuICBEZWZpbmVUZXh0Rm9ybWF0LFxuICBEZWZpbmVWaWRlbyxcbiAgRGVmaW5lVmlkZW9TdHJlYW0sXG4gIERvQWJjLFxuICBEb0FiY0RlZmluZSxcbiAgRG9BY3Rpb24sXG4gIERvSW5pdEFjdGlvbixcbiAgRW5hYmxlRGVidWdnZXIsXG4gIEV4cG9ydEFzc2V0cyxcbiAgRXh0ZXJuYWxGb250LFxuICBGaWxlQXR0cmlidXRlcyxcbiAgRnJhbWVMYWJlbCxcbiAgRnJlZUFsbCxcbiAgRnJlZUNoYXJhY3RlcixcbiAgR2VuQ29tbWFuZCxcbiAgR2VuZXJhdGVGcmFtZSxcbiAgR2VuVGFnT2JqZWN0cyxcbiAgSW1wb3J0QXNzZXRzLFxuICBKcGVnVGFibGVzLFxuICBNZXRhZGF0YSxcbiAgTmFtZUNoYXJhY3RlcixcbiAgUGF0aHNBcmVQb3N0c2NyaXB0LFxuICBQbGFjZUZ1bmN0aW9uLFxuICBQbGFjZU9iamVjdCxcbiAgUHJvZHVjdEluZm8sXG4gIFByb3RlY3QsXG4gIFJlbW92ZU9iamVjdCxcbiAgU2NyaXB0TGltaXRzLFxuICBTZXRCYWNrZ3JvdW5kQ29sb3IsXG4gIFNldFRhYkluZGV4LFxuICBTaG93RnJhbWUsXG4gIFNvdW5kU3RyZWFtSGVhZCxcbiAgU291bmRTdHJlYW1IZWFkMixcbiAgU291bmRTdHJlYW1CbG9jayxcbiAgU3RhcnRTb3VuZCxcbiAgU3RhcnRTb3VuZDIsXG4gIFN0b3BTb3VuZCxcbiAgU3ltYm9sQ2xhc3MsXG4gIFN5bmNGcmFtZSxcbiAgVGVsZW1ldHJ5LFxuICBWaWRlb0ZyYW1lLFxuICBVbmtub3duLFxufVxuXG5leHBvcnQgbmFtZXNwYWNlIFRhZ1R5cGUge1xuICBleHBvcnQgdHlwZSBKc29uID1cbiAgICBcImNoYXJhY3Rlci1zZXRcIlxuICAgIHwgXCJjc20tdGV4dC1zZXR0aW5nc1wiXG4gICAgfCBcImRlYnVnLWlkXCJcbiAgICB8IFwiZGVmaW5lLWJlaGF2aW91clwiXG4gICAgfCBcImRlZmluZS1iaW5hcnktZGF0YVwiXG4gICAgfCBcImRlZmluZS1iaXRtYXBcIlxuICAgIHwgXCJkZWZpbmUtYnV0dG9uXCJcbiAgICB8IFwiZGVmaW5lLWJ1dHRvbjJcIlxuICAgIHwgXCJkZWZpbmUtYnV0dG9uLWNvbG9yLXRyYW5zZm9ybVwiXG4gICAgfCBcImRlZmluZS1idXR0b24tc291bmRcIlxuICAgIHwgXCJkZWZpbmUtY29tbWFuZC1vYmplY3RcIlxuICAgIHwgXCJkZWZpbmUtZWRpdC10ZXh0XCJcbiAgICB8IFwiZGVmaW5lLWZvbnRcIlxuICAgIHwgXCJkZWZpbmUtZm9udDJcIlxuICAgIHwgXCJkZWZpbmUtZm9udDNcIlxuICAgIHwgXCJkZWZpbmUtZm9udDRcIlxuICAgIHwgXCJkZWZpbmUtZm9udC1hbGlnbi16b25lc1wiXG4gICAgfCBcImRlZmluZS1mb250LWluZm9cIlxuICAgIHwgXCJkZWZpbmUtZm9udC1pbmZvMlwiXG4gICAgfCBcImRlZmluZS1mb250LW5hbWVcIlxuICAgIHwgXCJkZWZpbmUtZnVuY3Rpb25cIlxuICAgIHwgXCJkZWZpbmUtanBlZ1wiXG4gICAgfCBcImRlZmluZS1tb3JwaC1zaGFwZVwiXG4gICAgfCBcImRlZmluZS1tb3JwaC1zaGFwZTJcIlxuICAgIHwgXCJkZWZpbmUtcGFydGlhbC1qcGVnXCJcbiAgICB8IFwiZGVmaW5lLXNjYWxpbmctZ3JpZFwiXG4gICAgfCBcImRlZmluZS1zY2VuZS1hbmQtZnJhbWUtbGFiZWwtZGF0YVwiXG4gICAgfCBcImRlZmluZS1zaGFwZVwiXG4gICAgfCBcImRlZmluZS1zaGFwZTJcIlxuICAgIHwgXCJkZWZpbmUtc2hhcGUzXCJcbiAgICB8IFwiZGVmaW5lLXNoYXBlNFwiXG4gICAgfCBcImRlZmluZS1zb3VuZFwiXG4gICAgfCBcImRlZmluZS1zcHJpdGVcIlxuICAgIHwgXCJkZWZpbmUtdGV4dFwiXG4gICAgfCBcImRlZmluZS10ZXh0MlwiXG4gICAgfCBcImRlZmluZS10ZXh0LWZvcm1hdFwiXG4gICAgfCBcImRlZmluZS12aWRlb1wiXG4gICAgfCBcImRlZmluZS12aWRlby1zdHJlYW1cIlxuICAgIHwgXCJkby1hYmNcIlxuICAgIHwgXCJkby1hYmMtZGVmaW5lXCJcbiAgICB8IFwiZG8tYWN0aW9uXCJcbiAgICB8IFwiZG8taW5pdC1hY3Rpb25cIlxuICAgIHwgXCJlbmFibGUtZGVidWdnZXJcIlxuICAgIHwgXCJleHBvcnQtYXNzZXRzXCJcbiAgICB8IFwiZXh0ZXJuYWwtZm9udFwiXG4gICAgfCBcImZpbGUtYXR0cmlidXRlc1wiXG4gICAgfCBcImZyYW1lLWxhYmVsXCJcbiAgICB8IFwiZnJlZS1hbGxcIlxuICAgIHwgXCJmcmVlLWNoYXJhY3RlclwiXG4gICAgfCBcImdlbi1jb21tYW5kXCJcbiAgICB8IFwiZ2VuZXJhdGUtZnJhbWVcIlxuICAgIHwgXCJnZW5UYWctb2JqZWN0c1wiXG4gICAgfCBcImltcG9ydC1hc3NldHNcIlxuICAgIHwgXCJqcGVnLXRhYmxlc1wiXG4gICAgfCBcIm1ldGFkYXRhXCJcbiAgICB8IFwibmFtZS1jaGFyYWN0ZXJcIlxuICAgIHwgXCJwYXRocy1hcmUtcG9zdHNjcmlwdFwiXG4gICAgfCBcInBsYWNlLWZ1bmN0aW9uXCJcbiAgICB8IFwicGxhY2Utb2JqZWN0XCJcbiAgICB8IFwicHJvZHVjdC1pbmZvXCJcbiAgICB8IFwicHJvdGVjdFwiXG4gICAgfCBcInJlbW92ZS1vYmplY3RcIlxuICAgIHwgXCJzY3JpcHQtbGltaXRzXCJcbiAgICB8IFwic2V0LWJhY2tncm91bmQtY29sb3JcIlxuICAgIHwgXCJzZXQtdGFiLWluZGV4XCJcbiAgICB8IFwic2hvdy1mcmFtZVwiXG4gICAgfCBcInNvdW5kLXN0cmVhbS1oZWFkXCJcbiAgICB8IFwic291bmQtc3RyZWFtLWhlYWQyXCJcbiAgICB8IFwic291bmQtc3RyZWFtLWJsb2NrXCJcbiAgICB8IFwic3RhcnQtc291bmRcIlxuICAgIHwgXCJzdGFydC1zb3VuZDJcIlxuICAgIHwgXCJzdG9wLXNvdW5kXCJcbiAgICB8IFwic3ltYm9sLWNsYXNzXCJcbiAgICB8IFwic3luYy1mcmFtZVwiXG4gICAgfCBcInRlbGVtZXRyeVwiXG4gICAgfCBcInZpZGVvLWZyYW1lXCJcbiAgICB8IFwidW5rbm93blwiO1xuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBTaW1wbGVFbnVtVHlwZTxUYWdUeXBlPiA9IG5ldyBTaW1wbGVFbnVtVHlwZTxUYWdUeXBlPih7XG4gICAgZW51bTogVGFnVHlwZSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(156)
var ieee754 = __webpack_require__(157)
var isArray = __webpack_require__(158)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const s_rgb8_1 = __webpack_require__(58);
var StraightSRgba8;
(function (StraightSRgba8) {
    StraightSRgba8.type = new kryo_1.DocumentType({
        properties: Object.assign({}, s_rgb8_1.SRgb8.type.properties, { a: { type: new kryo_1.Int32Type() } }),
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StraightSRgba8 = exports.StraightSRgba8 || (exports.StraightSRgba8 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zdHJhaWdodC1zLXJnYmE4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXdEO0FBRXhELHFDQUErQjtBQUsvQixJQUFpQixjQUFjLENBWTlCO0FBWkQsV0FBaUIsY0FBYztJQUtoQixtQkFBSSxHQUFpQyxJQUFJLG1CQUFZLENBQWlCO1FBQ2pGLFVBQVUsb0JBQ0wsY0FBSyxDQUFDLElBQUksQ0FBQyxVQUFVLElBQ3hCLENBQUMsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQyxHQUMzQjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVpnQixjQUFjLEdBQWQsc0JBQWMsS0FBZCxzQkFBYyxRQVk5QiIsImZpbGUiOiJsaWIvc3RyYWlnaHQtcy1yZ2JhOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7U3RyYWlnaHRTUmdiYSBhcyBfU3RyYWlnaHRTUmdiYSwgVWludDh9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtTUmdiOH0gZnJvbSBcIi4vcy1yZ2I4XCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RyYWlnaHRTUmdiYTggZXh0ZW5kcyBfU3RyYWlnaHRTUmdiYTxVaW50OD4ge1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFN0cmFpZ2h0U1JnYmE4IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIGV4dGVuZHMgU1JnYjguSnNvbiB7XG4gICAgYTogbnVtYmVyO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxTdHJhaWdodFNSZ2JhOD4gPSBuZXcgRG9jdW1lbnRUeXBlPFN0cmFpZ2h0U1JnYmE4Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgLi4uU1JnYjgudHlwZS5wcm9wZXJ0aWVzLFxuICAgICAgYToge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const avm1 = __webpack_require__(46);
exports.avm1 = avm1;
const fillStyles = __webpack_require__(101);
exports.fillStyles = fillStyles;
const filters = __webpack_require__(104);
exports.filters = filters;
const joinStyles = __webpack_require__(105);
exports.joinStyles = joinStyles;
const shapeRecords = __webpack_require__(301);
exports.shapeRecords = shapeRecords;
const tags = __webpack_require__(111);
exports.tags = tags;
const text = __webpack_require__(332);
exports.text = text;
var blend_mode_1 = __webpack_require__(333);
exports.BlendMode = blend_mode_1.BlendMode;
var cap_style_1 = __webpack_require__(109);
exports.CapStyle = cap_style_1.CapStyle;
var clip_actions_1 = __webpack_require__(125);
exports.ClipActions = clip_actions_1.ClipActions;
var clip_event_flags_1 = __webpack_require__(334);
exports.ClipEventFlags = clip_event_flags_1.ClipEventFlags;
var color_space_1 = __webpack_require__(102);
exports.ColorSpace = color_space_1.ColorSpace;
var color_stop_1 = __webpack_require__(39);
exports.ColorStop = color_stop_1.ColorStop;
var color_transform_1 = __webpack_require__(65);
exports.ColorTransform = color_transform_1.ColorTransform;
var color_transform_with_alpha_1 = __webpack_require__(335);
exports.ColorTransformWithAlpha = color_transform_with_alpha_1.ColorTransformWithAlpha;
var compression_method_1 = __webpack_require__(127);
exports.CompressionMethod = compression_method_1.CompressionMethod;
var fill_style_1 = __webpack_require__(43);
exports.FillStyle = fill_style_1.FillStyle;
var filter_1 = __webpack_require__(126);
exports.Filter = filter_1.Filter;
var glyph_1 = __webpack_require__(60);
exports.Glyph = glyph_1.Glyph;
var gradient_1 = __webpack_require__(38);
exports.Gradient = gradient_1.Gradient;
var gradient_spread_1 = __webpack_require__(103);
exports.GradientSpread = gradient_spread_1.GradientSpread;
var header_1 = __webpack_require__(128);
exports.Header = header_1.Header;
var join_style_1 = __webpack_require__(110);
exports.JoinStyle = join_style_1.JoinStyle;
var language_code_1 = __webpack_require__(62);
exports.LanguageCode = language_code_1.LanguageCode;
var line_style_1 = __webpack_require__(59);
exports.LineStyle = line_style_1.LineStyle;
var matrix_1 = __webpack_require__(63);
exports.Matrix = matrix_1.Matrix;
var movie_1 = __webpack_require__(336);
exports.Movie = movie_1.Movie;
var named_id_1 = __webpack_require__(64);
exports.NamedId = named_id_1.NamedId;
var rect_1 = __webpack_require__(19);
exports.Rect = rect_1.Rect;
var s_rgb8_1 = __webpack_require__(58);
exports.SRgb8 = s_rgb8_1.SRgb8;
var shape_1 = __webpack_require__(122);
exports.Shape = shape_1.Shape;
var shape_record_1 = __webpack_require__(61);
exports.ShapeRecord = shape_record_1.ShapeRecord;
var straight_s_rgba8_1 = __webpack_require__(5);
exports.StraightSRgba8 = straight_s_rgba8_1.StraightSRgba8;
var swf_signature_1 = __webpack_require__(130);
exports.SwfSignature = swf_signature_1.SwfSignature;
var tag_1 = __webpack_require__(131);
exports.Tag = tag_1.Tag;
var vector_2d_1 = __webpack_require__(41);
exports.Vector2D = vector_2d_1.Vector2D;
var _type_1 = __webpack_require__(17);
exports.FillStyleType = _type_1.FillStyleType;
var _type_2 = __webpack_require__(13);
exports.FilterType = _type_2.FilterType;
var _type_3 = __webpack_require__(40);
exports.JoinStyleType = _type_3.JoinStyleType;
var _type_4 = __webpack_require__(42);
exports.ShapeRecordType = _type_4.ShapeRecordType;
var _type_5 = __webpack_require__(3);
exports.TagType = _type_5.TagType;
var label_1 = __webpack_require__(120);
exports.Label = label_1.Label;
var scene_1 = __webpack_require__(121);
exports.Scene = scene_1.Scene;
var fixed8p8_1 = __webpack_require__(15);
exports.Fixed8P8 = fixed8p8_1.Fixed8P8;
var fixed16p16_1 = __webpack_require__(18);
exports.Fixed16P16 = fixed16p16_1.Fixed16P16;
var fixed_point_1 = __webpack_require__(23);
exports.FixedPoint = fixed_point_1.FixedPoint;
var type_1 = __webpack_require__(24);
exports.FixedPointType = type_1.FixedPointType;
var ufixed8p8_1 = __webpack_require__(129);
exports.Ufixed8P8 = ufixed8p8_1.Ufixed8P8;
var ufixed16p16_1 = __webpack_require__(337);
exports.Ufixed16P16 = ufixed16p16_1.Ufixed16P16;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHFDQUFxQztBQVE3QixvQkFBSTtBQVBaLGtEQUFrRDtBQU9wQyxnQ0FBVTtBQU54QiwyQ0FBMkM7QUFNakIsMEJBQU87QUFMakMsa0RBQWtEO0FBS2YsZ0NBQVU7QUFKN0Msc0RBQXNEO0FBSVAsb0NBQVk7QUFIM0QscUNBQXFDO0FBR3dCLG9CQUFJO0FBRmpFLHFDQUFxQztBQUU4QixvQkFBSTtBQUV2RSwyQ0FBdUM7QUFBL0IsaUNBQUEsU0FBUyxDQUFBO0FBQ2pCLHlDQUFxQztBQUE3QiwrQkFBQSxRQUFRLENBQUE7QUFDaEIsK0NBQTJDO0FBQW5DLHFDQUFBLFdBQVcsQ0FBQTtBQUNuQix1REFBa0Q7QUFBMUMsNENBQUEsY0FBYyxDQUFBO0FBQ3RCLDZDQUF5QztBQUFqQyxtQ0FBQSxVQUFVLENBQUE7QUFDbEIsMkNBQXVDO0FBQS9CLGlDQUFBLFNBQVMsQ0FBQTtBQUNqQixxREFBaUQ7QUFBekMsMkNBQUEsY0FBYyxDQUFBO0FBQ3RCLDJFQUFxRTtBQUE3RCwrREFBQSx1QkFBdUIsQ0FBQTtBQUMvQiwyREFBdUQ7QUFBL0MsaURBQUEsaUJBQWlCLENBQUE7QUFDekIsMkNBQXVDO0FBQS9CLGlDQUFBLFNBQVMsQ0FBQTtBQUNqQixtQ0FBZ0M7QUFBeEIsMEJBQUEsTUFBTSxDQUFBO0FBQ2QsaUNBQThCO0FBQXRCLHdCQUFBLEtBQUssQ0FBQTtBQUNiLHVDQUFvQztBQUE1Qiw4QkFBQSxRQUFRLENBQUE7QUFDaEIscURBQWlEO0FBQXpDLDJDQUFBLGNBQWMsQ0FBQTtBQUN0QixtQ0FBZ0M7QUFBeEIsMEJBQUEsTUFBTSxDQUFBO0FBQ2QsMkNBQXVDO0FBQS9CLGlDQUFBLFNBQVMsQ0FBQTtBQUNqQixpREFBNkM7QUFBckMsdUNBQUEsWUFBWSxDQUFBO0FBQ3BCLDJDQUF1QztBQUEvQixpQ0FBQSxTQUFTLENBQUE7QUFDakIsbUNBQWdDO0FBQXhCLDBCQUFBLE1BQU0sQ0FBQTtBQUNkLGlDQUE4QjtBQUF0Qix3QkFBQSxLQUFLLENBQUE7QUFDYix1Q0FBbUM7QUFBM0IsNkJBQUEsT0FBTyxDQUFBO0FBQ2YsK0JBQTRCO0FBQXBCLHNCQUFBLElBQUksQ0FBQTtBQUNaLG1DQUErQjtBQUF2Qix5QkFBQSxLQUFLLENBQUE7QUFDYixpQ0FBOEI7QUFBdEIsd0JBQUEsS0FBSyxDQUFBO0FBQ2IsK0NBQTJDO0FBQW5DLHFDQUFBLFdBQVcsQ0FBQTtBQUNuQix1REFBa0Q7QUFBMUMsNENBQUEsY0FBYyxDQUFBO0FBQ3RCLGlEQUE2QztBQUFyQyx1Q0FBQSxZQUFZLENBQUE7QUFDcEIsNkJBQTBCO0FBQWxCLG9CQUFBLEdBQUcsQ0FBQTtBQUNYLHlDQUFxQztBQUE3QiwrQkFBQSxRQUFRLENBQUE7QUFFaEIsNkNBQWtEO0FBQTFDLGdDQUFBLGFBQWEsQ0FBQTtBQUNyQix5Q0FBMkM7QUFBbkMsNkJBQUEsVUFBVSxDQUFBO0FBQ2xCLDZDQUFrRDtBQUExQyxnQ0FBQSxhQUFhLENBQUE7QUFDckIsK0NBQXNEO0FBQTlDLGtDQUFBLGVBQWUsQ0FBQTtBQUN2QixzQ0FBcUM7QUFBN0IsMEJBQUEsT0FBTyxDQUFBO0FBRWYseUNBQXNDO0FBQTlCLHdCQUFBLEtBQUssQ0FBQTtBQUNiLHlDQUFzQztBQUE5Qix3QkFBQSxLQUFLLENBQUE7QUFFYixtREFBZ0Q7QUFBeEMsOEJBQUEsUUFBUSxDQUFBO0FBQ2hCLHVEQUFvRDtBQUE1QyxrQ0FBQSxVQUFVLENBQUE7QUFDbEIseURBQXFEO0FBQTdDLG1DQUFBLFVBQVUsQ0FBQTtBQUNsQiwyQ0FBa0Q7QUFBMUMsZ0NBQUEsY0FBYyxDQUFBO0FBQ3RCLHFEQUFrRDtBQUExQyxnQ0FBQSxTQUFTLENBQUE7QUFDakIseURBQXNEO0FBQTlDLG9DQUFBLFdBQVcsQ0FBQSIsImZpbGUiOiJsaWIvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBhdm0xIGZyb20gXCIuL2F2bTEvaW5kZXhcIjtcbmltcG9ydCAqIGFzIGZpbGxTdHlsZXMgZnJvbSBcIi4vZmlsbC1zdHlsZXMvaW5kZXhcIjtcbmltcG9ydCAqIGFzIGZpbHRlcnMgZnJvbSBcIi4vZmlsdGVycy9pbmRleFwiO1xuaW1wb3J0ICogYXMgam9pblN0eWxlcyBmcm9tIFwiLi9qb2luLXN0eWxlcy9pbmRleFwiO1xuaW1wb3J0ICogYXMgc2hhcGVSZWNvcmRzIGZyb20gXCIuL3NoYXBlLXJlY29yZHMvaW5kZXhcIjtcbmltcG9ydCAqIGFzIHRhZ3MgZnJvbSBcIi4vdGFncy9pbmRleFwiO1xuaW1wb3J0ICogYXMgdGV4dCBmcm9tIFwiLi90ZXh0L2luZGV4XCI7XG5cbmV4cG9ydCB7YXZtMSwgZmlsbFN0eWxlcywgZmlsdGVycywgam9pblN0eWxlcywgc2hhcGVSZWNvcmRzLCB0YWdzLCB0ZXh0fTtcblxuZXhwb3J0IHtCbGVuZE1vZGV9IGZyb20gXCIuL2JsZW5kLW1vZGVcIjtcbmV4cG9ydCB7Q2FwU3R5bGV9IGZyb20gXCIuL2NhcC1zdHlsZVwiO1xuZXhwb3J0IHtDbGlwQWN0aW9uc30gZnJvbSBcIi4vY2xpcC1hY3Rpb25zXCI7XG5leHBvcnQge0NsaXBFdmVudEZsYWdzfSBmcm9tIFwiLi9jbGlwLWV2ZW50LWZsYWdzXCI7XG5leHBvcnQge0NvbG9yU3BhY2V9IGZyb20gXCIuL2NvbG9yLXNwYWNlXCI7XG5leHBvcnQge0NvbG9yU3RvcH0gZnJvbSBcIi4vY29sb3Itc3RvcFwiO1xuZXhwb3J0IHtDb2xvclRyYW5zZm9ybX0gZnJvbSBcIi4vY29sb3ItdHJhbnNmb3JtXCI7XG5leHBvcnQge0NvbG9yVHJhbnNmb3JtV2l0aEFscGhhfSBmcm9tIFwiLi9jb2xvci10cmFuc2Zvcm0td2l0aC1hbHBoYVwiO1xuZXhwb3J0IHtDb21wcmVzc2lvbk1ldGhvZH0gZnJvbSBcIi4vY29tcHJlc3Npb24tbWV0aG9kXCI7XG5leHBvcnQge0ZpbGxTdHlsZX0gZnJvbSBcIi4vZmlsbC1zdHlsZVwiO1xuZXhwb3J0IHtGaWx0ZXJ9IGZyb20gXCIuL2ZpbHRlclwiO1xuZXhwb3J0IHtHbHlwaH0gZnJvbSBcIi4vZ2x5cGhcIjtcbmV4cG9ydCB7R3JhZGllbnR9IGZyb20gXCIuL2dyYWRpZW50XCI7XG5leHBvcnQge0dyYWRpZW50U3ByZWFkfSBmcm9tIFwiLi9ncmFkaWVudC1zcHJlYWRcIjtcbmV4cG9ydCB7SGVhZGVyfSBmcm9tIFwiLi9oZWFkZXJcIjtcbmV4cG9ydCB7Sm9pblN0eWxlfSBmcm9tIFwiLi9qb2luLXN0eWxlXCI7XG5leHBvcnQge0xhbmd1YWdlQ29kZX0gZnJvbSBcIi4vbGFuZ3VhZ2UtY29kZVwiO1xuZXhwb3J0IHtMaW5lU3R5bGV9IGZyb20gXCIuL2xpbmUtc3R5bGVcIjtcbmV4cG9ydCB7TWF0cml4fSBmcm9tIFwiLi9tYXRyaXhcIjtcbmV4cG9ydCB7TW92aWV9IGZyb20gXCIuL21vdmllXCI7XG5leHBvcnQge05hbWVkSWR9IGZyb20gXCIuL25hbWVkLWlkXCI7XG5leHBvcnQge1JlY3R9IGZyb20gXCIuL3JlY3RcIjtcbmV4cG9ydCB7U1JnYjh9IGZyb20gXCIuL3MtcmdiOFwiO1xuZXhwb3J0IHtTaGFwZX0gZnJvbSBcIi4vc2hhcGVcIjtcbmV4cG9ydCB7U2hhcGVSZWNvcmR9IGZyb20gXCIuL3NoYXBlLXJlY29yZFwiO1xuZXhwb3J0IHtTdHJhaWdodFNSZ2JhOH0gZnJvbSBcIi4vc3RyYWlnaHQtcy1yZ2JhOFwiO1xuZXhwb3J0IHtTd2ZTaWduYXR1cmV9IGZyb20gXCIuL3N3Zi1zaWduYXR1cmVcIjtcbmV4cG9ydCB7VGFnfSBmcm9tIFwiLi90YWdcIjtcbmV4cG9ydCB7VmVjdG9yMkR9IGZyb20gXCIuL3ZlY3Rvci0yZFwiO1xuXG5leHBvcnQge0ZpbGxTdHlsZVR5cGV9IGZyb20gXCIuL2ZpbGwtc3R5bGVzL190eXBlXCI7XG5leHBvcnQge0ZpbHRlclR5cGV9IGZyb20gXCIuL2ZpbHRlcnMvX3R5cGVcIjtcbmV4cG9ydCB7Sm9pblN0eWxlVHlwZX0gZnJvbSBcIi4vam9pbi1zdHlsZXMvX3R5cGVcIjtcbmV4cG9ydCB7U2hhcGVSZWNvcmRUeXBlfSBmcm9tIFwiLi9zaGFwZS1yZWNvcmRzL190eXBlXCI7XG5leHBvcnQge1RhZ1R5cGV9IGZyb20gXCIuL3RhZ3MvX3R5cGVcIjtcblxuZXhwb3J0IHtMYWJlbH0gZnJvbSBcIi4vY29udHJvbC9sYWJlbFwiO1xuZXhwb3J0IHtTY2VuZX0gZnJvbSBcIi4vY29udHJvbC9zY2VuZVwiO1xuXG5leHBvcnQge0ZpeGVkOFA4fSBmcm9tIFwiLi9maXhlZC1wb2ludC9maXhlZDhwOFwiO1xuZXhwb3J0IHtGaXhlZDE2UDE2fSBmcm9tIFwiLi9maXhlZC1wb2ludC9maXhlZDE2cDE2XCI7XG5leHBvcnQge0ZpeGVkUG9pbnR9IGZyb20gXCIuL2ZpeGVkLXBvaW50L2ZpeGVkLXBvaW50XCI7XG5leHBvcnQge0ZpeGVkUG9pbnRUeXBlfSBmcm9tIFwiLi9maXhlZC1wb2ludC90eXBlXCI7XG5leHBvcnQge1VmaXhlZDhQOH0gZnJvbSBcIi4vZml4ZWQtcG9pbnQvdWZpeGVkOHA4XCI7XG5leHBvcnQge1VmaXhlZDE2UDE2fSBmcm9tIFwiLi9maXhlZC1wb2ludC91Zml4ZWQxNnAxNlwiO1xuIl19


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var UnknownFormatError;
(function (UnknownFormatError) {
    UnknownFormatError.name = "UnknownFormat";
    function format({ format }) {
        return `Unknown format ${JSON.stringify(format)}, supported formats: bson, json or qs`;
    }
    UnknownFormatError.format = format;
    function create(unknownFormat) {
        return new incident_1.Incident(UnknownFormatError.name, { format: unknownFormat }, format);
    }
    UnknownFormatError.create = create;
})(UnknownFormatError = exports.UnknownFormatError || (exports.UnknownFormatError = {}));
exports.default = UnknownFormatError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvdW5rbm93bi1mb3JtYXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBa0M7QUFFbEMsSUFBaUIsa0JBQWtCLENBaUJsQztBQWpCRCxXQUFpQixrQkFBa0I7SUFFcEIsdUJBQUksR0FBUyxlQUFlLENBQUM7SUFTMUMsZ0JBQXVCLEVBQUMsTUFBTSxFQUFPO1FBQ25DLE1BQU0sQ0FBQyxrQkFBa0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsdUNBQXVDLENBQUM7SUFDekYsQ0FBQztJQUZlLHlCQUFNLFNBRXJCLENBQUE7SUFDRCxnQkFBdUIsYUFBcUI7UUFDMUMsTUFBTSxDQUFDLElBQUksbUJBQVEsQ0FBQyxtQkFBQSxJQUFJLEVBQUUsRUFBQyxNQUFNLEVBQUUsYUFBYSxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUZlLHlCQUFNLFNBRXJCLENBQUE7QUFDSCxDQUFDLEVBakJnQixrQkFBa0IsR0FBbEIsMEJBQWtCLEtBQWxCLDBCQUFrQixRQWlCbEM7QUFTRCxrQkFBZSxrQkFBa0IsQ0FBQyIsImZpbGUiOiJsaWIvZXJyb3JzL3Vua25vd24tZm9ybWF0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmNpZGVudH0gZnJvbSBcImluY2lkZW50XCI7XG5cbmV4cG9ydCBuYW1lc3BhY2UgVW5rbm93bkZvcm1hdEVycm9yIHtcbiAgZXhwb3J0IHR5cGUgTmFtZSA9IFwiVW5rbm93bkZvcm1hdFwiO1xuICBleHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiVW5rbm93bkZvcm1hdFwiO1xuICBleHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICAgIC8qKlxuICAgICAqIFRoZSB1bmtub3duIGZvcm1hdC5cbiAgICAgKi9cbiAgICBmb3JtYXQ6IHN0cmluZztcbiAgfVxuICBleHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbiAgZXhwb3J0IHR5cGUgVHlwZSA9IEluY2lkZW50PE5hbWUsIERhdGEsIENhdXNlPjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7Zm9ybWF0fTogRGF0YSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBVbmtub3duIGZvcm1hdCAke0pTT04uc3RyaW5naWZ5KGZvcm1hdCl9LCBzdXBwb3J0ZWQgZm9ybWF0czogYnNvbiwganNvbiBvciBxc2A7XG4gIH1cbiAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZSh1bmtub3duRm9ybWF0OiBzdHJpbmcpOiBUeXBlIHtcbiAgICByZXR1cm4gbmV3IEluY2lkZW50KG5hbWUsIHtmb3JtYXQ6IHVua25vd25Gb3JtYXR9LCBmb3JtYXQpO1xuICB9XG59XG5cbi8qKlxuICogVGhpcyBlcnJvciBpcyB0aHJvd24gd2hlbiB0aGUgcHJvdmlkZWQgZm9ybWF0IGZvciBzZXJpYWxpemF0aW9uIG9yIGRlc2VyaWFsaXphdGlvbiBpcyB1bnN1cHBvcnRlZC5cbiAqXG4gKiBDdXJyZW50bHksIG9ubHkgdGhlIHR3byBmb3JtYXQgXCJqc29uLWRvY1wiIGFuZCBcImJzb24tZG9jXCIgYXJlIHN1cHBvcnRlZC5cbiAqL1xuZXhwb3J0IHR5cGUgVW5rbm93bkZvcm1hdEVycm9yID0gVW5rbm93bkZvcm1hdEVycm9yLlR5cGU7XG5cbmV4cG9ydCBkZWZhdWx0IFVua25vd25Gb3JtYXRFcnJvcjtcbiJdfQ==


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
// TODO(demurgos): Rename to InvalidTypeError ?
var WrongTypeError;
(function (WrongTypeError) {
    WrongTypeError.name = "WrongType";
    function format({ typeName, value, variableName }) {
        // TODO(demurgos): use utils.repr instead of stringifying value directly (because its type, `any`, is unsafe)
        if (typeof variableName === "string") {
            return `Expected type ${typeName} but received ${value} for ${variableName}`;
        }
        else {
            return `Expected type ${typeName} but received ${value}`;
        }
    }
    WrongTypeError.format = format;
    function create(typeName, value, variableName) {
        return incident_1.Incident(WrongTypeError.name, { typeName, value, variableName }, format);
    }
    WrongTypeError.create = create;
})(WrongTypeError = exports.WrongTypeError || (exports.WrongTypeError = {}));
exports.default = WrongTypeError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvd3JvbmctdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUVsQywrQ0FBK0M7QUFDL0MsSUFBaUIsY0FBYyxDQWlDOUI7QUFqQ0QsV0FBaUIsY0FBYztJQUVoQixtQkFBSSxHQUFTLFdBQVcsQ0FBQztJQW9CdEMsZ0JBQXVCLEVBQUMsUUFBUSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQU87UUFDMUQsNkdBQTZHO1FBQzdHLEVBQUUsQ0FBQyxDQUFDLE9BQU8sWUFBWSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDckMsTUFBTSxDQUFDLGlCQUFpQixRQUFRLGlCQUFpQixLQUFLLFFBQVEsWUFBWSxFQUFFLENBQUM7UUFDL0UsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sTUFBTSxDQUFDLGlCQUFpQixRQUFRLGlCQUFpQixLQUFLLEVBQUUsQ0FBQztRQUMzRCxDQUFDO0lBQ0gsQ0FBQztJQVBlLHFCQUFNLFNBT3JCLENBQUE7SUFDRCxnQkFBdUIsUUFBZ0IsRUFBRSxLQUFVLEVBQUUsWUFBcUI7UUFDeEUsTUFBTSxDQUFDLG1CQUFRLENBQUMsZUFBQSxJQUFJLEVBQUUsRUFBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFGZSxxQkFBTSxTQUVyQixDQUFBO0FBQ0gsQ0FBQyxFQWpDZ0IsY0FBYyxHQUFkLHNCQUFjLEtBQWQsc0JBQWMsUUFpQzlCO0FBSUQsa0JBQWUsY0FBYyxDQUFDIiwiZmlsZSI6ImxpYi9lcnJvcnMvd3JvbmctdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5jaWRlbnR9IGZyb20gXCJpbmNpZGVudFwiO1xuXG4vLyBUT0RPKGRlbXVyZ29zKTogUmVuYW1lIHRvIEludmFsaWRUeXBlRXJyb3IgP1xuZXhwb3J0IG5hbWVzcGFjZSBXcm9uZ1R5cGVFcnJvciB7XG4gIGV4cG9ydCB0eXBlIE5hbWUgPSBcIldyb25nVHlwZVwiO1xuICBleHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiV3JvbmdUeXBlXCI7XG4gIGV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gICAgLyoqXG4gICAgICogVGhlIGV4cGVjdGVkIEphdmFzY3JpcHQgdHlwZS4gVGhpcyBpcyBvbmUgb2YgdGhlIHBvc3NpYmxlIHJlc3VsdHMgb2ZcbiAgICAgKiB0aGUgYHR5cGVvZmAgb3BlcmF0b3IuXG4gICAgICovXG4gICAgdHlwZU5hbWU6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSB0aGF0IGhhcyBhIHByb2JsZW0gd2l0aCBpdHMgdHlwZS5cbiAgICAgKi9cbiAgICB2YWx1ZTogYW55O1xuXG4gICAgLyoqXG4gICAgICogVGhlIG5hbWUgb2YgdGhlIHZhcmlhYmxlIHRoYXQgaGFzIGEgcHJvYmxlbSB3aXRoIGl0cyB0eXBlLlxuICAgICAqL1xuICAgIHZhcmlhYmxlTmFtZT86IHN0cmluZztcbiAgfVxuICBleHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbiAgZXhwb3J0IHR5cGUgVHlwZSA9IEluY2lkZW50PE5hbWUsIERhdGEsIENhdXNlPjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7dHlwZU5hbWUsIHZhbHVlLCB2YXJpYWJsZU5hbWV9OiBEYXRhKTogc3RyaW5nIHtcbiAgICAvLyBUT0RPKGRlbXVyZ29zKTogdXNlIHV0aWxzLnJlcHIgaW5zdGVhZCBvZiBzdHJpbmdpZnlpbmcgdmFsdWUgZGlyZWN0bHkgKGJlY2F1c2UgaXRzIHR5cGUsIGBhbnlgLCBpcyB1bnNhZmUpXG4gICAgaWYgKHR5cGVvZiB2YXJpYWJsZU5hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHJldHVybiBgRXhwZWN0ZWQgdHlwZSAke3R5cGVOYW1lfSBidXQgcmVjZWl2ZWQgJHt2YWx1ZX0gZm9yICR7dmFyaWFibGVOYW1lfWA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBgRXhwZWN0ZWQgdHlwZSAke3R5cGVOYW1lfSBidXQgcmVjZWl2ZWQgJHt2YWx1ZX1gO1xuICAgIH1cbiAgfVxuICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlKHR5cGVOYW1lOiBzdHJpbmcsIHZhbHVlOiBhbnksIHZhcmlhYmxlTmFtZT86IHN0cmluZyk6IFR5cGUge1xuICAgIHJldHVybiBJbmNpZGVudChuYW1lLCB7dHlwZU5hbWUsIHZhbHVlLCB2YXJpYWJsZU5hbWV9LCBmb3JtYXQpO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIFdyb25nVHlwZUVycm9yID0gV3JvbmdUeXBlRXJyb3IuVHlwZTtcblxuZXhwb3J0IGRlZmF1bHQgV3JvbmdUeXBlRXJyb3I7XG4iXX0=


/***/ }),
/* 9 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var NotImplementedError;
(function (NotImplementedError) {
    NotImplementedError.name = "NotImplemented";
    function create(message) {
        return incident_1.Incident(NotImplementedError.name, message);
    }
    NotImplementedError.create = create;
})(NotImplementedError = exports.NotImplementedError || (exports.NotImplementedError = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvbm90LWltcGxlbWVudGVkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQWtDO0FBRWxDLElBQWlCLG1CQUFtQixDQVNuQztBQVRELFdBQWlCLG1CQUFtQjtJQUVyQix3QkFBSSxHQUFTLGdCQUFnQixDQUFDO0lBSTNDLGdCQUF1QixPQUFlO1FBQ3BDLE1BQU0sQ0FBQyxtQkFBUSxDQUFDLG9CQUFBLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRmUsMEJBQU0sU0FFckIsQ0FBQTtBQUNILENBQUMsRUFUZ0IsbUJBQW1CLEdBQW5CLDJCQUFtQixLQUFuQiwyQkFBbUIsUUFTbkMiLCJmaWxlIjoibGliL2Vycm9ycy9ub3QtaW1wbGVtZW50ZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IG5hbWVzcGFjZSBOb3RJbXBsZW1lbnRlZEVycm9yIHtcbiAgZXhwb3J0IHR5cGUgTmFtZSA9IFwiTm90SW1wbGVtZW50ZWRcIjtcbiAgZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcIk5vdEltcGxlbWVudGVkXCI7XG4gIGV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7fVxuICBleHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbiAgZXhwb3J0IHR5cGUgVHlwZSA9IEluY2lkZW50PE5hbWUsIERhdGEsIENhdXNlPjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZShtZXNzYWdlOiBzdHJpbmcpOiBUeXBlIHtcbiAgICByZXR1cm4gSW5jaWRlbnQobmFtZSwgbWVzc2FnZSk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgTm90SW1wbGVtZW50ZWRFcnJvciA9IE5vdEltcGxlbWVudGVkRXJyb3IuVHlwZTtcbiJdfQ==


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var ValueType;
(function (ValueType) {
    ValueType[ValueType["CString"] = 0] = "CString";
    ValueType[ValueType["Float32"] = 1] = "Float32";
    ValueType[ValueType["Null"] = 2] = "Null";
    ValueType[ValueType["Undefined"] = 3] = "Undefined";
    ValueType[ValueType["Register"] = 4] = "Register";
    ValueType[ValueType["Boolean"] = 5] = "Boolean";
    ValueType[ValueType["Float64"] = 6] = "Float64";
    ValueType[ValueType["Int32"] = 7] = "Int32";
    ValueType[ValueType["Constant"] = 8] = "Constant";
})(ValueType = exports.ValueType || (exports.ValueType = {}));
(function (ValueType) {
    ValueType.type = new kryo_1.SimpleEnumType({
        enum: ValueType,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(ValueType = exports.ValueType || (exports.ValueType = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL3ZhbHVlLXR5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBK0M7QUFFL0MsSUFBWSxTQVVYO0FBVkQsV0FBWSxTQUFTO0lBQ25CLCtDQUFPLENBQUE7SUFDUCwrQ0FBTyxDQUFBO0lBQ1AseUNBQUksQ0FBQTtJQUNKLG1EQUFTLENBQUE7SUFDVCxpREFBUSxDQUFBO0lBQ1IsK0NBQU8sQ0FBQTtJQUNQLCtDQUFPLENBQUE7SUFDUCwyQ0FBSyxDQUFBO0lBQ0wsaURBQVEsQ0FBQTtBQUNWLENBQUMsRUFWVyxTQUFTLEdBQVQsaUJBQVMsS0FBVCxpQkFBUyxRQVVwQjtBQUVELFdBQWlCLFNBQVM7SUFZWCxjQUFJLEdBQThCLElBQUkscUJBQWMsQ0FBWTtRQUMzRSxJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWhCZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFnQnpCIiwiZmlsZSI6ImxpYi9hdm0xL3ZhbHVlLXR5cGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgU2ltcGxlRW51bVR5cGV9IGZyb20gXCJrcnlvXCI7XG5cbmV4cG9ydCBlbnVtIFZhbHVlVHlwZSB7XG4gIENTdHJpbmcsXG4gIEZsb2F0MzIsXG4gIE51bGwsXG4gIFVuZGVmaW5lZCxcbiAgUmVnaXN0ZXIsXG4gIEJvb2xlYW4sXG4gIEZsb2F0NjQsXG4gIEludDMyLFxuICBDb25zdGFudCxcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBWYWx1ZVR5cGUge1xuICBleHBvcnQgdHlwZSBKc29uID1cbiAgICBcImMtc3RyaW5nXCJcbiAgICB8IFwiZmxvYXQzMlwiXG4gICAgfCBcIm51bGxcIlxuICAgIHwgXCJ1bmRlZmluZWRcIlxuICAgIHwgXCJyZWdpc3RlclwiXG4gICAgfCBcImJvb2xlYW5cIlxuICAgIHwgXCJmbG9hdDY0XCJcbiAgICB8IFwiaW50MzJcIlxuICAgIHwgXCJjb25zdGFudFwiO1xuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBTaW1wbGVFbnVtVHlwZTxWYWx1ZVR5cGU+ID0gbmV3IFNpbXBsZUVudW1UeXBlPFZhbHVlVHlwZT4oe1xuICAgIGVudW06IFZhbHVlVHlwZSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 12 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var FilterType;
(function (FilterType) {
    FilterType[FilterType["DropShadow"] = 0] = "DropShadow";
    FilterType[FilterType["Blur"] = 1] = "Blur";
    FilterType[FilterType["Glow"] = 2] = "Glow";
    FilterType[FilterType["Bevel"] = 3] = "Bevel";
    FilterType[FilterType["GradientGlow"] = 4] = "GradientGlow";
    FilterType[FilterType["Convolution"] = 5] = "Convolution";
    FilterType[FilterType["ColorMatrix"] = 6] = "ColorMatrix";
    FilterType[FilterType["GradientBevel"] = 7] = "GradientBevel";
})(FilterType = exports.FilterType || (exports.FilterType = {}));
(function (FilterType) {
    FilterType.type = new kryo_1.SimpleEnumType({
        enum: FilterType,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(FilterType = exports.FilterType || (exports.FilterType = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWx0ZXJzL190eXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQStDO0FBRS9DLElBQVksVUFTWDtBQVRELFdBQVksVUFBVTtJQUNwQix1REFBVSxDQUFBO0lBQ1YsMkNBQUksQ0FBQTtJQUNKLDJDQUFJLENBQUE7SUFDSiw2Q0FBSyxDQUFBO0lBQ0wsMkRBQVksQ0FBQTtJQUNaLHlEQUFXLENBQUE7SUFDWCx5REFBVyxDQUFBO0lBQ1gsNkRBQWEsQ0FBQTtBQUNmLENBQUMsRUFUVyxVQUFVLEdBQVYsa0JBQVUsS0FBVixrQkFBVSxRQVNyQjtBQUVELFdBQWlCLFVBQVU7SUFXWixlQUFJLEdBQStCLElBQUkscUJBQWMsQ0FBYTtRQUM3RSxJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFmZ0IsVUFBVSxHQUFWLGtCQUFVLEtBQVYsa0JBQVUsUUFlMUIiLCJmaWxlIjoibGliL2ZpbHRlcnMvX3R5cGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgU2ltcGxlRW51bVR5cGV9IGZyb20gXCJrcnlvXCI7XG5cbmV4cG9ydCBlbnVtIEZpbHRlclR5cGUge1xuICBEcm9wU2hhZG93LFxuICBCbHVyLFxuICBHbG93LFxuICBCZXZlbCxcbiAgR3JhZGllbnRHbG93LFxuICBDb252b2x1dGlvbixcbiAgQ29sb3JNYXRyaXgsXG4gIEdyYWRpZW50QmV2ZWwsXG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRmlsdGVyVHlwZSB7XG4gIGV4cG9ydCB0eXBlIEpzb24gPVxuICAgIFwiZHJvcC1zaGFkb3dcIlxuICAgIHwgXCJibHVyXCJcbiAgICB8IFwiZ2xvd1wiXG4gICAgfCBcImJldmVsLWZpbHRlclwiXG4gICAgfCBcImdyYWRpZW50LWdsb3dcIlxuICAgIHwgXCJjb252b2x1dGlvblwiXG4gICAgfCBcImNvbG9yLW1hdHJpeFwiXG4gICAgfCBcImdyYWRpZW50LWJldmVsXCI7XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IFNpbXBsZUVudW1UeXBlPEZpbHRlclR5cGU+ID0gbmV3IFNpbXBsZUVudW1UeXBlPEZpbHRlclR5cGU+KHtcbiAgICBlbnVtOiBGaWx0ZXJUeXBlLFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
// TODO(demurgos): Simplify the way circular dependencies are references are defined
var Action;
(function (Action) {
    Action.type = new kryo_1.TaggedUnionType({ variants: [], tag: "action" });
})(Action = exports.Action || (exports.Action = {}));
var Tag;
(function (Tag) {
    Tag.type = new kryo_1.TaggedUnionType({ variants: [], tag: "type" });
})(Tag = exports.Tag || (exports.Tag = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9fY2lyY3VsYXItcmVmZXJlbmNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxQztBQUlyQyxvRkFBb0Y7QUFFcEYsSUFBaUIsTUFBTSxDQUV0QjtBQUZELFdBQWlCLE1BQU07SUFDUixXQUFJLEdBQTZCLElBQUksc0JBQWUsQ0FBVSxFQUFDLFFBQVEsRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBQyxDQUFDLENBQUM7QUFDNUcsQ0FBQyxFQUZnQixNQUFNLEdBQU4sY0FBTSxLQUFOLGNBQU0sUUFFdEI7QUFFRCxJQUFpQixHQUFHLENBRW5CO0FBRkQsV0FBaUIsR0FBRztJQUNMLFFBQUksR0FBMEIsSUFBSSxzQkFBZSxDQUFPLEVBQUMsUUFBUSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFDLENBQUMsQ0FBQztBQUNwRyxDQUFDLEVBRmdCLEdBQUcsR0FBSCxXQUFHLEtBQUgsV0FBRyxRQUVuQiIsImZpbGUiOiJsaWIvX2NpcmN1bGFyLXJlZmVyZW5jZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1RhZ2dlZFVuaW9uVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uIGFzICRBY3Rpb259IGZyb20gXCIuL2F2bTEvYWN0aW9uXCI7XG5pbXBvcnQge1RhZyBhcyAkVGFnfSBmcm9tIFwiLi90YWdcIjtcblxuLy8gVE9ETyhkZW11cmdvcyk6IFNpbXBsaWZ5IHRoZSB3YXkgY2lyY3VsYXIgZGVwZW5kZW5jaWVzIGFyZSByZWZlcmVuY2VzIGFyZSBkZWZpbmVkXG5cbmV4cG9ydCBuYW1lc3BhY2UgQWN0aW9uIHtcbiAgZXhwb3J0IGNvbnN0IHR5cGU6IFRhZ2dlZFVuaW9uVHlwZTwkQWN0aW9uPiA9IG5ldyBUYWdnZWRVbmlvblR5cGU8JEFjdGlvbj4oe3ZhcmlhbnRzOiBbXSwgdGFnOiBcImFjdGlvblwifSk7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVGFnIHtcbiAgZXhwb3J0IGNvbnN0IHR5cGU6IFRhZ2dlZFVuaW9uVHlwZTwkVGFnPiA9IG5ldyBUYWdnZWRVbmlvblR5cGU8JFRhZz4oe3ZhcmlhbnRzOiBbXSwgdGFnOiBcInR5cGVcIn0pO1xufVxuIl19


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const fixed_point_1 = __webpack_require__(23);
const type_1 = __webpack_require__(24);
/**
 * Signed Fixed-Point number with an 8-bit integer part and an 8-bit fractional part
 */
class Fixed8P8 extends fixed_point_1.FixedPoint {
    constructor(epsilons) {
        super(epsilons, Fixed8P8.signed, Fixed8P8.intBits, Fixed8P8.fracBits);
    }
    static fromEpsilons(epsilons) {
        return new Fixed8P8(epsilons);
    }
    static fromValue(value) {
        return new Fixed8P8(value * Math.pow(2, Fixed8P8.fracBits));
    }
}
Fixed8P8.signed = true;
Fixed8P8.intBits = 8;
Fixed8P8.fracBits = 8;
Fixed8P8.type = new type_1.FixedPointType({ type: Fixed8P8 });
exports.Fixed8P8 = Fixed8P8;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maXhlZC1wb2ludC9maXhlZDhwOC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLCtDQUF5QztBQUN6QyxpQ0FBc0M7QUFFdEM7O0dBRUc7QUFDSCxjQUFzQixTQUFRLHdCQUFVO0lBTXRDLFlBQXNCLFFBQWdCO1FBQ3BDLEtBQUssQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBRUQsTUFBTSxDQUFDLFlBQVksQ0FBQyxRQUFnQjtRQUNsQyxNQUFNLENBQUMsSUFBSSxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBYTtRQUM1QixNQUFNLENBQUMsSUFBSSxRQUFRLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQzlELENBQUM7O0FBZk0sZUFBTSxHQUFZLElBQUksQ0FBQztBQUN2QixnQkFBTyxHQUFXLENBQUMsQ0FBQztBQUNwQixpQkFBUSxHQUFXLENBQUMsQ0FBQztBQUNyQixhQUFJLEdBQTZCLElBQUkscUJBQWMsQ0FBVyxFQUFDLElBQUksRUFBRSxRQUFRLEVBQUMsQ0FBQyxDQUFDO0FBSnpGLDRCQWlCQyIsImZpbGUiOiJsaWIvZml4ZWQtcG9pbnQvZml4ZWQ4cDguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1NpbnQxNn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0ZpeGVkUG9pbnR9IGZyb20gXCIuL2ZpeGVkLXBvaW50XCI7XG5pbXBvcnQge0ZpeGVkUG9pbnRUeXBlfSBmcm9tIFwiLi90eXBlXCI7XG5cbi8qKlxuICogU2lnbmVkIEZpeGVkLVBvaW50IG51bWJlciB3aXRoIGFuIDgtYml0IGludGVnZXIgcGFydCBhbmQgYW4gOC1iaXQgZnJhY3Rpb25hbCBwYXJ0XG4gKi9cbmV4cG9ydCBjbGFzcyBGaXhlZDhQOCBleHRlbmRzIEZpeGVkUG9pbnQge1xuICBzdGF0aWMgc2lnbmVkOiBib29sZWFuID0gdHJ1ZTtcbiAgc3RhdGljIGludEJpdHM6IG51bWJlciA9IDg7XG4gIHN0YXRpYyBmcmFjQml0czogbnVtYmVyID0gODtcbiAgc3RhdGljIHR5cGU6IEZpeGVkUG9pbnRUeXBlPEZpeGVkOFA4PiA9IG5ldyBGaXhlZFBvaW50VHlwZTxGaXhlZDhQOD4oe3R5cGU6IEZpeGVkOFA4fSk7XG5cbiAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKGVwc2lsb25zOiBudW1iZXIpIHtcbiAgICBzdXBlcihlcHNpbG9ucywgRml4ZWQ4UDguc2lnbmVkLCBGaXhlZDhQOC5pbnRCaXRzLCBGaXhlZDhQOC5mcmFjQml0cyk7XG4gIH1cblxuICBzdGF0aWMgZnJvbUVwc2lsb25zKGVwc2lsb25zOiBTaW50MTYpOiBGaXhlZDhQOCB7XG4gICAgcmV0dXJuIG5ldyBGaXhlZDhQOChlcHNpbG9ucyk7XG4gIH1cblxuICBzdGF0aWMgZnJvbVZhbHVlKHZhbHVlOiBudW1iZXIpOiBGaXhlZDhQOCB7XG4gICAgcmV0dXJuIG5ldyBGaXhlZDhQOCh2YWx1ZSAqIE1hdGgucG93KDIsIEZpeGVkOFA4LmZyYWNCaXRzKSk7XG4gIH1cbn1cbiJdfQ==


/***/ }),
/* 16 */
/***/ (function(module, exports) {

// Copyright (c) 2008, Fair Oaks Labs, Inc.
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
// 
//  * Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
//  * Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation
//    and/or other materials provided with the distribution.
// 
//  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//
//
// Modifications to writeIEEE754 to support negative zeroes made by Brian White

var readIEEE754 = function(buffer, offset, endian, mLen, nBytes) {
  var e, m,
      bBE = (endian === 'big'),
      eLen = nBytes * 8 - mLen - 1,
      eMax = (1 << eLen) - 1,
      eBias = eMax >> 1,
      nBits = -7,
      i = bBE ? 0 : (nBytes - 1),
      d = bBE ? 1 : -1,
      s = buffer[offset + i];

  i += d;

  e = s & ((1 << (-nBits)) - 1);
  s >>= (-nBits);
  nBits += eLen;
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);

  m = e & ((1 << (-nBits)) - 1);
  e >>= (-nBits);
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);

  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity);
  } else {
    m = m + Math.pow(2, mLen);
    e = e - eBias;
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
};

var writeIEEE754 = function(buffer, value, offset, endian, mLen, nBytes) {
  var e, m, c,
      bBE = (endian === 'big'),
      eLen = nBytes * 8 - mLen - 1,
      eMax = (1 << eLen) - 1,
      eBias = eMax >> 1,
      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),
      i = bBE ? (nBytes-1) : 0,
      d = bBE ? -1 : 1,
      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

  value = Math.abs(value);

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0;
    e = eMax;
  } else {
    e = Math.floor(Math.log(value) / Math.LN2);
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e+eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * Math.pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }

    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
      e = 0;
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);

  e = (e << mLen) | m;
  eLen += mLen;
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);

  buffer[offset + i - d] |= s * 128;
};

exports.readIEEE754 = readIEEE754;
exports.writeIEEE754 = writeIEEE754;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var FillStyleType;
(function (FillStyleType) {
    FillStyleType[FillStyleType["Bitmap"] = 0] = "Bitmap";
    FillStyleType[FillStyleType["FocalGradient"] = 1] = "FocalGradient";
    FillStyleType[FillStyleType["LinearGradient"] = 2] = "LinearGradient";
    FillStyleType[FillStyleType["RadialGradient"] = 3] = "RadialGradient";
    FillStyleType[FillStyleType["Solid"] = 4] = "Solid";
})(FillStyleType = exports.FillStyleType || (exports.FillStyleType = {}));
(function (FillStyleType) {
    FillStyleType.type = new kryo_1.SimpleEnumType({
        enum: FillStyleType,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(FillStyleType = exports.FillStyleType || (exports.FillStyleType = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWxsLXN0eWxlcy9fdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUErQztBQUUvQyxJQUFZLGFBTVg7QUFORCxXQUFZLGFBQWE7SUFDdkIscURBQU0sQ0FBQTtJQUNOLG1FQUFhLENBQUE7SUFDYixxRUFBYyxDQUFBO0lBQ2QscUVBQWMsQ0FBQTtJQUNkLG1EQUFLLENBQUE7QUFDUCxDQUFDLEVBTlcsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFNeEI7QUFFRCxXQUFpQixhQUFhO0lBUWYsa0JBQUksR0FBa0MsSUFBSSxxQkFBYyxDQUFnQjtRQUNuRixJQUFJLEVBQUUsYUFBYTtRQUNuQixNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFaZ0IsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFZN0IiLCJmaWxlIjoibGliL2ZpbGwtc3R5bGVzL190eXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIFNpbXBsZUVudW1UeXBlfSBmcm9tIFwia3J5b1wiO1xuXG5leHBvcnQgZW51bSBGaWxsU3R5bGVUeXBlIHtcbiAgQml0bWFwLFxuICBGb2NhbEdyYWRpZW50LFxuICBMaW5lYXJHcmFkaWVudCxcbiAgUmFkaWFsR3JhZGllbnQsXG4gIFNvbGlkLFxufVxuXG5leHBvcnQgbmFtZXNwYWNlIEZpbGxTdHlsZVR5cGUge1xuICBleHBvcnQgdHlwZSBKc29uID1cbiAgICBcImJpdG1hcFwiXG4gICAgfCBcImZvY2FsLWdyYWRpZW50XCJcbiAgICB8IFwibGluZWFyLWdyYWRpZW50XCJcbiAgICB8IFwicmFkaWFsLWdyYWRpZW50XCJcbiAgICB8IFwic29saWRcIjtcblxuICBleHBvcnQgY29uc3QgdHlwZTogU2ltcGxlRW51bVR5cGU8RmlsbFN0eWxlVHlwZT4gPSBuZXcgU2ltcGxlRW51bVR5cGU8RmlsbFN0eWxlVHlwZT4oe1xuICAgIGVudW06IEZpbGxTdHlsZVR5cGUsXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const fixed_point_1 = __webpack_require__(23);
const type_1 = __webpack_require__(24);
/**
 * Signed Fixed-Point number with an 16-bit integer part and an 16-bit fractional part
 */
class Fixed16P16 extends fixed_point_1.FixedPoint {
    constructor(epsilons) {
        super(epsilons, Fixed16P16.signed, Fixed16P16.intBits, Fixed16P16.fracBits);
    }
    static fromEpsilons(epsilons) {
        return new Fixed16P16(epsilons);
    }
    static fromValue(value) {
        return new Fixed16P16(value * Math.pow(2, Fixed16P16.fracBits));
    }
}
Fixed16P16.signed = true;
Fixed16P16.intBits = 16;
Fixed16P16.fracBits = 16;
Fixed16P16.type = new type_1.FixedPointType({ type: Fixed16P16 });
exports.Fixed16P16 = Fixed16P16;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maXhlZC1wb2ludC9maXhlZDE2cDE2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsK0NBQXlDO0FBQ3pDLGlDQUFzQztBQUV0Qzs7R0FFRztBQUNILGdCQUF3QixTQUFRLHdCQUFVO0lBTXhDLFlBQXNCLFFBQWdCO1FBQ3BDLEtBQUssQ0FBQyxRQUFRLEVBQUUsVUFBVSxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5RSxDQUFDO0lBRUQsTUFBTSxDQUFDLFlBQVksQ0FBQyxRQUFnQjtRQUNsQyxNQUFNLENBQUMsSUFBSSxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBYTtRQUM1QixNQUFNLENBQUMsSUFBSSxVQUFVLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ2xFLENBQUM7O0FBZk0saUJBQU0sR0FBWSxJQUFJLENBQUM7QUFDdkIsa0JBQU8sR0FBVyxFQUFFLENBQUM7QUFDckIsbUJBQVEsR0FBVyxFQUFFLENBQUM7QUFDdEIsZUFBSSxHQUErQixJQUFJLHFCQUFjLENBQWEsRUFBQyxJQUFJLEVBQUUsVUFBVSxFQUFDLENBQUMsQ0FBQztBQUovRixnQ0FpQkMiLCJmaWxlIjoibGliL2ZpeGVkLXBvaW50L2ZpeGVkMTZwMTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1NpbnQzMn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0ZpeGVkUG9pbnR9IGZyb20gXCIuL2ZpeGVkLXBvaW50XCI7XG5pbXBvcnQge0ZpeGVkUG9pbnRUeXBlfSBmcm9tIFwiLi90eXBlXCI7XG5cbi8qKlxuICogU2lnbmVkIEZpeGVkLVBvaW50IG51bWJlciB3aXRoIGFuIDE2LWJpdCBpbnRlZ2VyIHBhcnQgYW5kIGFuIDE2LWJpdCBmcmFjdGlvbmFsIHBhcnRcbiAqL1xuZXhwb3J0IGNsYXNzIEZpeGVkMTZQMTYgZXh0ZW5kcyBGaXhlZFBvaW50IHtcbiAgc3RhdGljIHNpZ25lZDogYm9vbGVhbiA9IHRydWU7XG4gIHN0YXRpYyBpbnRCaXRzOiBudW1iZXIgPSAxNjtcbiAgc3RhdGljIGZyYWNCaXRzOiBudW1iZXIgPSAxNjtcbiAgc3RhdGljIHR5cGU6IEZpeGVkUG9pbnRUeXBlPEZpeGVkMTZQMTY+ID0gbmV3IEZpeGVkUG9pbnRUeXBlPEZpeGVkMTZQMTY+KHt0eXBlOiBGaXhlZDE2UDE2fSk7XG5cbiAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKGVwc2lsb25zOiBudW1iZXIpIHtcbiAgICBzdXBlcihlcHNpbG9ucywgRml4ZWQxNlAxNi5zaWduZWQsIEZpeGVkMTZQMTYuaW50Qml0cywgRml4ZWQxNlAxNi5mcmFjQml0cyk7XG4gIH1cblxuICBzdGF0aWMgZnJvbUVwc2lsb25zKGVwc2lsb25zOiBTaW50MzIpOiBGaXhlZDE2UDE2IHtcbiAgICByZXR1cm4gbmV3IEZpeGVkMTZQMTYoZXBzaWxvbnMpO1xuICB9XG5cbiAgc3RhdGljIGZyb21WYWx1ZSh2YWx1ZTogbnVtYmVyKTogRml4ZWQxNlAxNiB7XG4gICAgcmV0dXJuIG5ldyBGaXhlZDE2UDE2KHZhbHVlICogTWF0aC5wb3coMiwgRml4ZWQxNlAxNi5mcmFjQml0cykpO1xuICB9XG59XG4iXX0=


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var Rect;
(function (Rect) {
    Rect.type = new kryo_1.DocumentType({
        properties: {
            xMin: { type: new kryo_1.Int32Type() },
            xMax: { type: new kryo_1.Int32Type() },
            yMin: { type: new kryo_1.Int32Type() },
            yMax: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Rect = exports.Rect || (exports.Rect = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9yZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXdEO0FBVXhELElBQWlCLElBQUksQ0FpQnBCO0FBakJELFdBQWlCLElBQUk7SUFRTixTQUFJLEdBQXVCLElBQUksbUJBQVksQ0FBTztRQUM3RCxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDN0IsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQzdCLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztZQUM3QixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7U0FDOUI7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFqQmdCLElBQUksR0FBSixZQUFJLEtBQUosWUFBSSxRQWlCcEIiLCJmaWxlIjoibGliL3JlY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1NpbnQxNn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVjdCB7XG4gIHhNaW46IFNpbnQxNjtcbiAgeE1heDogU2ludDE2O1xuICB5TWluOiBTaW50MTY7XG4gIHlNYXg6IFNpbnQxNjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBSZWN0IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB4X21pbjogbnVtYmVyO1xuICAgIHhfbWF4OiBudW1iZXI7XG4gICAgeV9taW46IG51bWJlcjtcbiAgICB5X21heDogbnVtYmVyO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxSZWN0PiA9IG5ldyBEb2N1bWVudFR5cGU8UmVjdD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHhNaW46IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgeE1heDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICB5TWluOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIHlNYXg6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.



/*<replacement>*/

var processNextTick = __webpack_require__(44);
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = __webpack_require__(25);
util.inherits = __webpack_require__(26);
/*</replacement>*/

var Readable = __webpack_require__(132);
var Writable = __webpack_require__(136);

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  processNextTick(cb, err);
};

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const swf_tree_1 = __webpack_require__(6);
function parseRect(byteStream) {
    const bitStream = byteStream.asBitStream();
    const result = parseRectBits(bitStream);
    bitStream.align();
    return result;
}
exports.parseRect = parseRect;
function parseRectBits(bitStream) {
    const nBits = bitStream.readUint16Bits(5);
    const xMin = bitStream.readSint16Bits(nBits);
    const xMax = bitStream.readSint16Bits(nBits);
    const yMin = bitStream.readSint16Bits(nBits);
    const yMax = bitStream.readSint16Bits(nBits);
    return { xMin, xMax, yMin, yMax };
}
exports.parseRectBits = parseRectBits;
function parseSRgb8(byteStream) {
    return {
        r: byteStream.readUint8(),
        g: byteStream.readUint8(),
        b: byteStream.readUint8(),
    };
}
exports.parseSRgb8 = parseSRgb8;
function parseStraightSRgba8(byteStream) {
    return {
        r: byteStream.readUint8(),
        g: byteStream.readUint8(),
        b: byteStream.readUint8(),
        a: byteStream.readUint8(),
    };
}
exports.parseStraightSRgba8 = parseStraightSRgba8;
function parseMatrix(byteStream) {
    const bitStream = byteStream.asBitStream();
    const result = parseMatrixBits(bitStream);
    bitStream.align();
    return result;
}
exports.parseMatrix = parseMatrix;
function parseMatrixBits(bitStream) {
    const hasScale = bitStream.readBoolBits();
    let scaleX;
    let scaleY;
    if (hasScale) {
        const scaleBits = bitStream.readUint16Bits(5);
        scaleX = bitStream.readFixed16P16Bits(scaleBits);
        scaleY = bitStream.readFixed16P16Bits(scaleBits);
    }
    else {
        scaleX = swf_tree_1.Fixed16P16.fromValue(1);
        scaleY = swf_tree_1.Fixed16P16.fromValue(1);
    }
    const hasSkew = bitStream.readBoolBits();
    let skew0;
    let skew1;
    if (hasScale) {
        const skewBits = bitStream.readUint16Bits(5);
        skew0 = bitStream.readFixed16P16Bits(skewBits);
        skew1 = bitStream.readFixed16P16Bits(skewBits);
    }
    else {
        skew0 = swf_tree_1.Fixed16P16.fromValue(0);
        skew1 = swf_tree_1.Fixed16P16.fromValue(0);
    }
    const translateBits = bitStream.readUint16Bits(5);
    const translateX = bitStream.readSint16Bits(translateBits);
    const translateY = bitStream.readSint16Bits(translateBits);
    return {
        scaleX,
        scaleY,
        rotateSkew0: skew0,
        rotateSkew1: skew1,
        translateX,
        translateY,
    };
}
exports.parseMatrixBits = parseMatrixBits;
function parseColorTransform(byteStream) {
    const bitStream = byteStream.asBitStream();
    const result = parseColorTransformBits(bitStream);
    bitStream.align();
    return result;
}
exports.parseColorTransform = parseColorTransform;
function parseColorTransformBits(bitStream) {
    const hasAdd = bitStream.readBoolBits();
    const hasMult = bitStream.readBoolBits();
    const nBits = bitStream.readUint16Bits(4);
    let redMult;
    let greenMult;
    let blueMult;
    if (hasMult) {
        redMult = swf_tree_1.Fixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));
        greenMult = swf_tree_1.Fixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));
        blueMult = swf_tree_1.Fixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));
    }
    else {
        redMult = swf_tree_1.Fixed16P16.fromValue(1);
        greenMult = swf_tree_1.Fixed16P16.fromValue(1);
        blueMult = swf_tree_1.Fixed16P16.fromValue(1);
    }
    let redAdd;
    let greenAdd;
    let blueAdd;
    if (hasAdd) {
        redAdd = bitStream.readSint16Bits(nBits);
        greenAdd = bitStream.readSint16Bits(nBits);
        blueAdd = bitStream.readSint16Bits(nBits);
    }
    else {
        redAdd = 0;
        greenAdd = 0;
        blueAdd = 0;
    }
    return {
        redMult,
        greenMult,
        blueMult,
        redAdd,
        greenAdd,
        blueAdd,
    };
}
exports.parseColorTransformBits = parseColorTransformBits;
function parseColorTransformWithAlpha(byteStream) {
    const bitStream = byteStream.asBitStream();
    const result = parseColorTransformWithAlphaBits(bitStream);
    byteStream.align();
    return result;
}
exports.parseColorTransformWithAlpha = parseColorTransformWithAlpha;
function parseColorTransformWithAlphaBits(bitStream) {
    const hasAdd = bitStream.readBoolBits();
    const hasMult = bitStream.readBoolBits();
    const nBits = bitStream.readUint16Bits(4);
    let redMult;
    let greenMult;
    let blueMult;
    let alphaMult;
    if (hasMult) {
        redMult = swf_tree_1.Fixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));
        greenMult = swf_tree_1.Fixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));
        blueMult = swf_tree_1.Fixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));
        alphaMult = swf_tree_1.Fixed8P8.fromEpsilons(bitStream.readSint16Bits(nBits));
    }
    else {
        redMult = swf_tree_1.Fixed16P16.fromValue(1);
        greenMult = swf_tree_1.Fixed16P16.fromValue(1);
        blueMult = swf_tree_1.Fixed16P16.fromValue(1);
        alphaMult = swf_tree_1.Fixed16P16.fromValue(1);
    }
    let redAdd;
    let greenAdd;
    let blueAdd;
    let alphaAdd;
    if (hasAdd) {
        redAdd = bitStream.readSint16Bits(nBits);
        greenAdd = bitStream.readSint16Bits(nBits);
        blueAdd = bitStream.readSint16Bits(nBits);
        alphaAdd = bitStream.readSint16Bits(nBits);
    }
    else {
        redAdd = 0;
        greenAdd = 0;
        blueAdd = 0;
        alphaAdd = 0;
    }
    return {
        redMult,
        greenMult,
        blueMult,
        alphaMult,
        redAdd,
        greenAdd,
        blueAdd,
        alphaAdd,
    };
}
exports.parseColorTransformWithAlphaBits = parseColorTransformWithAlphaBits;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 22 */
/***/ (function(module, exports) {

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Copyright 2009 Google Inc. All Rights Reserved

/**
 * Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "Long". This
 * implementation is derived from LongLib in GWT.
 *
 * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
 * values as *signed* integers.  See the from* functions below for more
 * convenient ways of constructing Longs.
 *
 * The internal representation of a Long is the two given signed, 32-bit values.
 * We use 32-bit pieces because these are the size of integers on which
 * Javascript performs bit-operations.  For operations like addition and
 * multiplication, we split each number into 16-bit pieces, which can easily be
 * multiplied within Javascript's floating-point representation without overflow
 * or change in sign.
 *
 * In the algorithms below, we frequently reduce the negative case to the
 * positive case by negating the input(s) and then post-processing the result.
 * Note that we must ALWAYS check specially whether those values are MIN_VALUE
 * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
 * a positive number, it overflows back into a negative).  Not handling this
 * case would often result in infinite recursion.
 *
 * @class
 * @param {number} low  the low (signed) 32 bits of the Long.
 * @param {number} high the high (signed) 32 bits of the Long.
 * @return {Long}
 */
function Long(low, high) {
  if(!(this instanceof Long)) return new Long(low, high);
  
  this._bsontype = 'Long';
  /**
   * @type {number}
   * @ignore
   */
  this.low_ = low | 0;  // force into 32 signed bits.

  /**
   * @type {number}
   * @ignore
   */
  this.high_ = high | 0;  // force into 32 signed bits.
};

/**
 * Return the int value.
 *
 * @method
 * @return {number} the value, assuming it is a 32-bit integer.
 */
Long.prototype.toInt = function() {
  return this.low_;
};

/**
 * Return the Number value.
 *
 * @method
 * @return {number} the closest floating-point representation to this value.
 */
Long.prototype.toNumber = function() {
  return this.high_ * Long.TWO_PWR_32_DBL_ +
         this.getLowBitsUnsigned();
};

/**
 * Return the JSON value.
 *
 * @method
 * @return {string} the JSON representation.
 */
Long.prototype.toJSON = function() {
  return this.toString();
}

/**
 * Return the String value.
 *
 * @method
 * @param {number} [opt_radix] the radix in which the text should be written.
 * @return {string} the textual representation of this value.
 */
Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error('radix out of range: ' + radix);
  }

  if (this.isZero()) {
    return '0';
  }

  if (this.isNegative()) {
    if (this.equals(Long.MIN_VALUE)) {
      // We need to change the Long value before it can be negated, so we remove
      // the bottom-most digit in this base and then recurse to do the rest.
      var radixLong = Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return '-' + this.negate().toString(radix);
    }
  }

  // Do several (6) digits each time through the loop, so as to
  // minimize the calls to the very expensive emulated div.
  var radixToPower = Long.fromNumber(Math.pow(radix, 6));

  var rem = this;
  var result = '';
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
    var digits = intval.toString(radix);

    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = '0' + digits;
      }
      result = '' + digits + result;
    }
  }
};

/**
 * Return the high 32-bits value.
 *
 * @method
 * @return {number} the high 32-bits as a signed value.
 */
Long.prototype.getHighBits = function() {
  return this.high_;
};

/**
 * Return the low 32-bits value.
 *
 * @method
 * @return {number} the low 32-bits as a signed value.
 */
Long.prototype.getLowBits = function() {
  return this.low_;
};

/**
 * Return the low unsigned 32-bits value.
 *
 * @method
 * @return {number} the low 32-bits as an unsigned value.
 */
Long.prototype.getLowBitsUnsigned = function() {
  return (this.low_ >= 0) ?
      this.low_ : Long.TWO_PWR_32_DBL_ + this.low_;
};

/**
 * Returns the number of bits needed to represent the absolute value of this Long.
 *
 * @method
 * @return {number} Returns the number of bits needed to represent the absolute value of this Long.
 */
Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(Long.MIN_VALUE)) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31; bit > 0; bit--) {
      if ((val & (1 << bit)) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};

/**
 * Return whether this value is zero.
 *
 * @method
 * @return {boolean} whether this value is zero.
 */
Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};

/**
 * Return whether this value is negative.
 *
 * @method
 * @return {boolean} whether this value is negative.
 */
Long.prototype.isNegative = function() {
  return this.high_ < 0;
};

/**
 * Return whether this value is odd.
 *
 * @method
 * @return {boolean} whether this value is odd.
 */
Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};

/**
 * Return whether this Long equals the other
 *
 * @method
 * @param {Long} other Long to compare against.
 * @return {boolean} whether this Long equals the other
 */
Long.prototype.equals = function(other) {
  return (this.high_ == other.high_) && (this.low_ == other.low_);
};

/**
 * Return whether this Long does not equal the other.
 *
 * @method
 * @param {Long} other Long to compare against.
 * @return {boolean} whether this Long does not equal the other.
 */
Long.prototype.notEquals = function(other) {
  return (this.high_ != other.high_) || (this.low_ != other.low_);
};

/**
 * Return whether this Long is less than the other.
 *
 * @method
 * @param {Long} other Long to compare against.
 * @return {boolean} whether this Long is less than the other.
 */
Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};

/**
 * Return whether this Long is less than or equal to the other.
 *
 * @method
 * @param {Long} other Long to compare against.
 * @return {boolean} whether this Long is less than or equal to the other.
 */
Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};

/**
 * Return whether this Long is greater than the other.
 *
 * @method
 * @param {Long} other Long to compare against.
 * @return {boolean} whether this Long is greater than the other.
 */
Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};

/**
 * Return whether this Long is greater than or equal to the other.
 *
 * @method
 * @param {Long} other Long to compare against.
 * @return {boolean} whether this Long is greater than or equal to the other.
 */
Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};

/**
 * Compares this Long with the given one.
 *
 * @method
 * @param {Long} other Long to compare against.
 * @return {boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.
 */
Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }

  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }

  // at this point, the signs are the same, so subtraction will not overflow
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};

/**
 * The negation of this value.
 *
 * @method
 * @return {Long} the negation of this value.
 */
Long.prototype.negate = function() {
  if (this.equals(Long.MIN_VALUE)) {
    return Long.MIN_VALUE;
  } else {
    return this.not().add(Long.ONE);
  }
};

/**
 * Returns the sum of this and the given Long.
 *
 * @method
 * @param {Long} other Long to add to this one.
 * @return {Long} the sum of this and the given Long.
 */
Long.prototype.add = function(other) {
  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 0xFFFF;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 0xFFFF;

  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 0xFFFF;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 0xFFFF;

  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 0xFFFF;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 0xFFFF;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 0xFFFF;
  c48 += a48 + b48;
  c48 &= 0xFFFF;
  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
};

/**
 * Returns the difference of this and the given Long.
 *
 * @method
 * @param {Long} other Long to subtract from this.
 * @return {Long} the difference of this and the given Long.
 */
Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};

/**
 * Returns the product of this and the given Long.
 *
 * @method
 * @param {Long} other Long to multiply with this.
 * @return {Long} the product of this and the other.
 */
Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return Long.ZERO;
  } else if (other.isZero()) {
    return Long.ZERO;
  }

  if (this.equals(Long.MIN_VALUE)) {
    return other.isOdd() ? Long.MIN_VALUE : Long.ZERO;
  } else if (other.equals(Long.MIN_VALUE)) {
    return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;
  }

  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else if (other.isNegative()) {
    return this.multiply(other.negate()).negate();
  }

  // If both Longs are small, use float multiplication
  if (this.lessThan(Long.TWO_PWR_24_) &&
      other.lessThan(Long.TWO_PWR_24_)) {
    return Long.fromNumber(this.toNumber() * other.toNumber());
  }

  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.
  // We can skip products that would overflow.

  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 0xFFFF;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 0xFFFF;

  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 0xFFFF;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 0xFFFF;

  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 0xFFFF;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 0xFFFF;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 0xFFFF;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 0xFFFF;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 0xFFFF;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 0xFFFF;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 0xFFFF;
  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
};

/**
 * Returns this Long divided by the given one.
 *
 * @method
 * @param {Long} other Long by which to divide.
 * @return {Long} this Long divided by the given one.
 */
Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error('division by zero');
  } else if (this.isZero()) {
    return Long.ZERO;
  }

  if (this.equals(Long.MIN_VALUE)) {
    if (other.equals(Long.ONE) ||
        other.equals(Long.NEG_ONE)) {
      return Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
    } else if (other.equals(Long.MIN_VALUE)) {
      return Long.ONE;
    } else {
      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
      var halfThis = this.shiftRight(1);
      var approx = halfThis.div(other).shiftLeft(1);
      if (approx.equals(Long.ZERO)) {
        return other.isNegative() ? Long.ONE : Long.NEG_ONE;
      } else {
        var rem = this.subtract(other.multiply(approx));
        var result = approx.add(rem.div(other));
        return result;
      }
    }
  } else if (other.equals(Long.MIN_VALUE)) {
    return Long.ZERO;
  }

  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else if (other.isNegative()) {
    return this.div(other.negate()).negate();
  }

  // Repeat the following until the remainder is less than other:  find a
  // floating-point that approximates remainder / other *from below*, add this
  // into the result, and subtract it from the remainder.  It is critical that
  // the approximate value is less than or equal to the real value so that the
  // remainder never becomes negative.
  var res = Long.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    // Approximate the result of division. This may be a little greater or
    // smaller than the actual value.
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

    // We will tweak the approximate result by changing it in the 48-th digit or
    // the smallest non-fractional digit, whichever is larger.
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

    // Decrease the approximation until it is smaller than the remainder.  Note
    // that if it is too large, the product overflows and is negative.
    var approxRes = Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }

    // We know the answer can't be zero... and actually, zero would cause
    // infinite recursion since we would make no progress.
    if (approxRes.isZero()) {
      approxRes = Long.ONE;
    }

    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};

/**
 * Returns this Long modulo the given one.
 *
 * @method
 * @param {Long} other Long by which to mod.
 * @return {Long} this Long modulo the given one.
 */
Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};

/**
 * The bitwise-NOT of this value.
 *
 * @method
 * @return {Long} the bitwise-NOT of this value.
 */
Long.prototype.not = function() {
  return Long.fromBits(~this.low_, ~this.high_);
};

/**
 * Returns the bitwise-AND of this Long and the given one.
 *
 * @method
 * @param {Long} other the Long with which to AND.
 * @return {Long} the bitwise-AND of this and the other.
 */
Long.prototype.and = function(other) {
  return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};

/**
 * Returns the bitwise-OR of this Long and the given one.
 *
 * @method
 * @param {Long} other the Long with which to OR.
 * @return {Long} the bitwise-OR of this and the other.
 */
Long.prototype.or = function(other) {
  return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};

/**
 * Returns the bitwise-XOR of this Long and the given one.
 *
 * @method
 * @param {Long} other the Long with which to XOR.
 * @return {Long} the bitwise-XOR of this and the other.
 */
Long.prototype.xor = function(other) {
  return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};

/**
 * Returns this Long with bits shifted to the left by the given amount.
 *
 * @method
 * @param {number} numBits the number of bits by which to shift.
 * @return {Long} this shifted to the left by the given amount.
 */
Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return Long.fromBits(
                 low << numBits,
                 (high << numBits) | (low >>> (32 - numBits)));
    } else {
      return Long.fromBits(0, low << (numBits - 32));
    }
  }
};

/**
 * Returns this Long with bits shifted to the right by the given amount.
 *
 * @method
 * @param {number} numBits the number of bits by which to shift.
 * @return {Long} this shifted to the right by the given amount.
 */
Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return Long.fromBits(
                 (low >>> numBits) | (high << (32 - numBits)),
                 high >> numBits);
    } else {
      return Long.fromBits(
                 high >> (numBits - 32),
                 high >= 0 ? 0 : -1);
    }
  }
};

/**
 * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.
 *
 * @method
 * @param {number} numBits the number of bits by which to shift.
 * @return {Long} this shifted to the right by the given amount, with zeros placed into the new leading bits.
 */
Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return Long.fromBits(
                 (low >>> numBits) | (high << (32 - numBits)),
                 high >>> numBits);
    } else if (numBits == 32) {
      return Long.fromBits(high, 0);
    } else {
      return Long.fromBits(high >>> (numBits - 32), 0);
    }
  }
};

/**
 * Returns a Long representing the given (32-bit) integer value.
 *
 * @method
 * @param {number} value the 32-bit integer in question.
 * @return {Long} the corresponding Long value.
 */
Long.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = Long.INT_CACHE_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }

  var obj = new Long(value | 0, value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    Long.INT_CACHE_[value] = obj;
  }
  return obj;
};

/**
 * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.
 *
 * @method
 * @param {number} value the number in question.
 * @return {Long} the corresponding Long value.
 */
Long.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return Long.ZERO;
  } else if (value <= -Long.TWO_PWR_63_DBL_) {
    return Long.MIN_VALUE;
  } else if (value + 1 >= Long.TWO_PWR_63_DBL_) {
    return Long.MAX_VALUE;
  } else if (value < 0) {
    return Long.fromNumber(-value).negate();
  } else {
    return new Long(
               (value % Long.TWO_PWR_32_DBL_) | 0,
               (value / Long.TWO_PWR_32_DBL_) | 0);
  }
};

/**
 * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.
 *
 * @method
 * @param {number} lowBits the low 32-bits.
 * @param {number} highBits the high 32-bits.
 * @return {Long} the corresponding Long value.
 */
Long.fromBits = function(lowBits, highBits) {
  return new Long(lowBits, highBits);
};

/**
 * Returns a Long representation of the given string, written using the given radix.
 *
 * @method
 * @param {string} str the textual representation of the Long.
 * @param {number} opt_radix the radix in which the text is written.
 * @return {Long} the corresponding Long value.
 */
Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error('number format error: empty string');
  }

  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error('radix out of range: ' + radix);
  }

  if (str.charAt(0) == '-') {
    return Long.fromString(str.substring(1), radix).negate();
  } else if (str.indexOf('-') >= 0) {
    throw Error('number format error: interior "-" character: ' + str);
  }

  // Do several (8) digits each time through the loop, so as to
  // minimize the calls to the very expensive emulated div.
  var radixToPower = Long.fromNumber(Math.pow(radix, 8));

  var result = Long.ZERO;
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(Long.fromNumber(value));
    }
  }
  return result;
};

// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
// from* methods on which they depend.


/**
 * A cache of the Long representations of small integer values.
 * @type {Object}
 * @ignore
 */
Long.INT_CACHE_ = {};

// NOTE: the compiler should inline these constant values below and then remove
// these variables, so there should be no runtime penalty for these.

/**
 * Number used repeated below in calculations.  This must appear before the
 * first call to any from* function below.
 * @type {number}
 * @ignore
 */
Long.TWO_PWR_16_DBL_ = 1 << 16;

/**
 * @type {number}
 * @ignore
 */
Long.TWO_PWR_24_DBL_ = 1 << 24;

/**
 * @type {number}
 * @ignore
 */
Long.TWO_PWR_32_DBL_ = Long.TWO_PWR_16_DBL_ * Long.TWO_PWR_16_DBL_;

/**
 * @type {number}
 * @ignore
 */
Long.TWO_PWR_31_DBL_ = Long.TWO_PWR_32_DBL_ / 2;

/**
 * @type {number}
 * @ignore
 */
Long.TWO_PWR_48_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_16_DBL_;

/**
 * @type {number}
 * @ignore
 */
Long.TWO_PWR_64_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_32_DBL_;

/**
 * @type {number}
 * @ignore
 */
Long.TWO_PWR_63_DBL_ = Long.TWO_PWR_64_DBL_ / 2;

/** @type {Long} */
Long.ZERO = Long.fromInt(0);

/** @type {Long} */
Long.ONE = Long.fromInt(1);

/** @type {Long} */
Long.NEG_ONE = Long.fromInt(-1);

/** @type {Long} */
Long.MAX_VALUE =
    Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);

/** @type {Long} */
Long.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);

/**
 * @type {Long}
 * @ignore
 */
Long.TWO_PWR_24_ = Long.fromInt(1 << 24);

/**
 * Expose.
 */
module.exports = Long;
module.exports.Long = Long;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
class FixedPoint extends Number {
    constructor(epsilons, signed, intBits, fracBits) {
        super(epsilons * Math.pow(2, -fracBits));
        this.epsilons = epsilons;
        this.signed = signed;
        this.intBits = intBits;
        this.fracBits = fracBits;
    }
    toJSON() {
        return this.valueOf();
    }
}
exports.FixedPoint = FixedPoint;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maXhlZC1wb2ludC9maXhlZC1wb2ludC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdCQUF3QixTQUFRLE1BQU07SUFNcEMsWUFBWSxRQUFnQixFQUFFLE1BQWUsRUFBRSxPQUFlLEVBQUUsUUFBZ0I7UUFDOUUsS0FBSyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDM0IsQ0FBQztJQUVELE1BQU07UUFDSixNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3hCLENBQUM7Q0FDRjtBQWpCRCxnQ0FpQkMiLCJmaWxlIjoibGliL2ZpeGVkLXBvaW50L2ZpeGVkLXBvaW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEZpeGVkUG9pbnQgZXh0ZW5kcyBOdW1iZXIge1xuICBwdWJsaWMgZXBzaWxvbnM6IG51bWJlcjtcbiAgcHJvdGVjdGVkIHNpZ25lZDogYm9vbGVhbjtcbiAgcHJvdGVjdGVkIGludEJpdHM6IG51bWJlcjtcbiAgcHJvdGVjdGVkIGZyYWNCaXRzOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IoZXBzaWxvbnM6IG51bWJlciwgc2lnbmVkOiBib29sZWFuLCBpbnRCaXRzOiBudW1iZXIsIGZyYWNCaXRzOiBudW1iZXIpIHtcbiAgICBzdXBlcihlcHNpbG9ucyAqIE1hdGgucG93KDIsIC1mcmFjQml0cykpO1xuICAgIHRoaXMuZXBzaWxvbnMgPSBlcHNpbG9ucztcbiAgICB0aGlzLnNpZ25lZCA9IHNpZ25lZDtcbiAgICB0aGlzLmludEJpdHMgPSBpbnRCaXRzO1xuICAgIHRoaXMuZnJhY0JpdHMgPSBmcmFjQml0cztcbiAgfVxuXG4gIHRvSlNPTigpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnZhbHVlT2YoKTtcbiAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEZpeGVkUG9pbnRDb25zdHJ1Y3RvcjxUIGV4dGVuZHMgRml4ZWRQb2ludD4ge1xuICByZWFkb25seSBzaWduZWQ6IGJvb2xlYW47XG4gIHJlYWRvbmx5IGludEJpdHM6IG51bWJlcjtcbiAgcmVhZG9ubHkgZnJhY0JpdHM6IG51bWJlcjtcblxuICBmcm9tRXBzaWxvbnMoZXBzaWxvbnM6IG51bWJlcik6IFQ7XG5cbiAgZnJvbVZhbHVlKHZhbHVlOiBudW1iZXIpOiBUO1xufVxuIl19


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const kryo = __webpack_require__(0);
exports.name = "fixed-point";
class FixedPointType {
    constructor(options) {
        this.name = exports.name;
        this.type = options.type;
        const signed = this.type.signed;
        const intBits = this.type.intBits;
        const fracBits = this.type.fracBits;
        if (intBits % 4 !== 0 || intBits % 4 !== 0 || intBits + fracBits > 32) {
            throw new incident_1.Incident("InvalidFixedPointTypeOptions", "The length of each part must be a multiple of 4, and the sum <= 32");
        }
        this.outPattern = new RegExp(`^([+-])0x([0-9a-f]{${intBits / 4}})\.([0-9a-f]{${fracBits / 4}})$`);
    }
    toJSON() {
        throw kryo.errors.NotImplementedError.create("FixedPointType#toJSON");
    }
    readTrusted(format, input) {
        switch (format) {
            case "bson":
            case "json":
            case "qs":
                const execArray = this.outPattern.exec(input);
                const sign = execArray[1] === "-" ? -1 : 1;
                const intPart = parseInt(execArray[2], 16);
                const fracPart = parseInt(execArray[3], 16);
                const epsilons = sign * (intPart * Math.pow(2, this.type.fracBits) + fracPart);
                return this.type.fromEpsilons(epsilons);
            default:
                return undefined;
        }
    }
    read(format, input) {
        switch (format) {
            case "bson":
            case "json":
            case "qs":
                if (typeof input !== "string") {
                    throw kryo.errors.WrongTypeError.create("string", input);
                }
                const execArray = this.outPattern.exec(input);
                if (execArray === null) {
                    throw new incident_1.Incident("InvalidFixedPoint", "The provided input does not matched the expected pattern");
                }
                const sign = execArray[1] === "-" ? -1 : 1;
                const intPart = parseInt(execArray[2], 16);
                const fracPart = parseInt(execArray[3], 16);
                const epsilons = sign * (intPart * Math.pow(2, this.type.fracBits) + fracPart);
                return this.type.fromEpsilons(epsilons);
            default:
                throw kryo.errors.UnknownFormatError.create(format);
        }
    }
    write(format, val) {
        switch (format) {
            case "bson":
            case "json":
            case "qs":
                const sign = val.epsilons < 0 ? "-" : "+";
                const fracPart = Math.abs(val.epsilons) % Math.pow(2, this.type.fracBits);
                const intPart = (Math.abs(val.epsilons) - fracPart) / Math.pow(2, this.type.fracBits);
                // TODO(demurgos): Remove `any` when type definitions for ES2018 strings are available
                const fracStr = fracPart.toString(16).padStart(this.type.fracBits / 4, "0");
                const intStr = intPart.toString(16).padStart(this.type.intBits / 4, "0");
                return `${sign}0x${intStr}.${fracStr}`;
            default:
                return undefined;
        }
    }
    testError(val) {
        if (!(val instanceof this.type)) {
            return kryo.errors.WrongTypeError.create("FixedPointNumber", val);
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        return val1.epsilons === val2.epsilons;
    }
    clone(val) {
        return this.type.fromEpsilons(val.epsilons);
    }
    diff(oldVal, newVal) {
        return newVal.epsilons === oldVal.epsilons ? undefined : newVal.epsilons - oldVal.epsilons;
    }
    patch(oldVal, diff) {
        return diff === undefined ? this.clone(oldVal) : this.type.fromEpsilons(oldVal.epsilons + diff);
    }
    reverseDiff(diff) {
        return diff && -diff;
    }
    squash(diff1, diff2) {
        if (diff1 === undefined) {
            return diff2;
        }
        else if (diff2 === undefined) {
            return diff1;
        }
        return diff2 === -diff1 ? undefined : diff1 + diff2;
    }
}
exports.FixedPointType = FixedPointType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))

/***/ }),
/* 26 */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),
/* 27 */
/***/ (function(module, exports) {

/**
 * A class representation of the BSON Double type.
 *
 * @class
 * @param {number} value the number we want to represent as a double.
 * @return {Double}
 */
function Double(value) {
  if(!(this instanceof Double)) return new Double(value);

  this._bsontype = 'Double';
  this.value = value;
}

/**
 * Access the number value.
 *
 * @method
 * @return {number} returns the wrapped double number.
 */
Double.prototype.valueOf = function() {
  return this.value;
};

/**
 * @ignore
 */
Double.prototype.toJSON = function() {
  return this.value;
}

module.exports = Double;
module.exports.Double = Double;


/***/ }),
/* 28 */
/***/ (function(module, exports) {

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Copyright 2009 Google Inc. All Rights Reserved

/**
 * This type is for INTERNAL use in MongoDB only and should not be used in applications.
 * The appropriate corresponding type is the JavaScript Date type.
 * 
 * Defines a Timestamp class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "Timestamp". This
 * implementation is derived from TimestampLib in GWT.
 *
 * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
 * values as *signed* integers.  See the from* functions below for more
 * convenient ways of constructing Timestamps.
 *
 * The internal representation of a Timestamp is the two given signed, 32-bit values.
 * We use 32-bit pieces because these are the size of integers on which
 * Javascript performs bit-operations.  For operations like addition and
 * multiplication, we split each number into 16-bit pieces, which can easily be
 * multiplied within Javascript's floating-point representation without overflow
 * or change in sign.
 *
 * In the algorithms below, we frequently reduce the negative case to the
 * positive case by negating the input(s) and then post-processing the result.
 * Note that we must ALWAYS check specially whether those values are MIN_VALUE
 * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
 * a positive number, it overflows back into a negative).  Not handling this
 * case would often result in infinite recursion.
 *
 * @class
 * @param {number} low  the low (signed) 32 bits of the Timestamp.
 * @param {number} high the high (signed) 32 bits of the Timestamp.
 */
function Timestamp(low, high) {
  if(!(this instanceof Timestamp)) return new Timestamp(low, high);
  this._bsontype = 'Timestamp';
  /**
   * @type {number}
   * @ignore
   */
  this.low_ = low | 0;  // force into 32 signed bits.

  /**
   * @type {number}
   * @ignore
   */
  this.high_ = high | 0;  // force into 32 signed bits.
};

/**
 * Return the int value.
 *
 * @return {number} the value, assuming it is a 32-bit integer.
 */
Timestamp.prototype.toInt = function() {
  return this.low_;
};

/**
 * Return the Number value.
 *
 * @method
 * @return {number} the closest floating-point representation to this value.
 */
Timestamp.prototype.toNumber = function() {
  return this.high_ * Timestamp.TWO_PWR_32_DBL_ +
         this.getLowBitsUnsigned();
};

/**
 * Return the JSON value.
 *
 * @method
 * @return {string} the JSON representation.
 */
Timestamp.prototype.toJSON = function() {
  return this.toString();
}

/**
 * Return the String value.
 *
 * @method
 * @param {number} [opt_radix] the radix in which the text should be written.
 * @return {string} the textual representation of this value.
 */
Timestamp.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error('radix out of range: ' + radix);
  }

  if (this.isZero()) {
    return '0';
  }

  if (this.isNegative()) {
    if (this.equals(Timestamp.MIN_VALUE)) {
      // We need to change the Timestamp value before it can be negated, so we remove
      // the bottom-most digit in this base and then recurse to do the rest.
      var radixTimestamp = Timestamp.fromNumber(radix);
      var div = this.div(radixTimestamp);
      var rem = div.multiply(radixTimestamp).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return '-' + this.negate().toString(radix);
    }
  }

  // Do several (6) digits each time through the loop, so as to
  // minimize the calls to the very expensive emulated div.
  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));

  var rem = this;
  var result = '';
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
    var digits = intval.toString(radix);

    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = '0' + digits;
      }
      result = '' + digits + result;
    }
  }
};

/**
 * Return the high 32-bits value.
 *
 * @method
 * @return {number} the high 32-bits as a signed value.
 */
Timestamp.prototype.getHighBits = function() {
  return this.high_;
};

/**
 * Return the low 32-bits value.
 *
 * @method
 * @return {number} the low 32-bits as a signed value.
 */
Timestamp.prototype.getLowBits = function() {
  return this.low_;
};

/**
 * Return the low unsigned 32-bits value.
 *
 * @method
 * @return {number} the low 32-bits as an unsigned value.
 */
Timestamp.prototype.getLowBitsUnsigned = function() {
  return (this.low_ >= 0) ?
      this.low_ : Timestamp.TWO_PWR_32_DBL_ + this.low_;
};

/**
 * Returns the number of bits needed to represent the absolute value of this Timestamp.
 *
 * @method
 * @return {number} Returns the number of bits needed to represent the absolute value of this Timestamp.
 */
Timestamp.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(Timestamp.MIN_VALUE)) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31; bit > 0; bit--) {
      if ((val & (1 << bit)) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};

/**
 * Return whether this value is zero.
 *
 * @method
 * @return {boolean} whether this value is zero.
 */
Timestamp.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};

/**
 * Return whether this value is negative.
 *
 * @method
 * @return {boolean} whether this value is negative.
 */
Timestamp.prototype.isNegative = function() {
  return this.high_ < 0;
};

/**
 * Return whether this value is odd.
 *
 * @method
 * @return {boolean} whether this value is odd.
 */
Timestamp.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};

/**
 * Return whether this Timestamp equals the other
 *
 * @method
 * @param {Timestamp} other Timestamp to compare against.
 * @return {boolean} whether this Timestamp equals the other
 */
Timestamp.prototype.equals = function(other) {
  return (this.high_ == other.high_) && (this.low_ == other.low_);
};

/**
 * Return whether this Timestamp does not equal the other.
 *
 * @method
 * @param {Timestamp} other Timestamp to compare against.
 * @return {boolean} whether this Timestamp does not equal the other.
 */
Timestamp.prototype.notEquals = function(other) {
  return (this.high_ != other.high_) || (this.low_ != other.low_);
};

/**
 * Return whether this Timestamp is less than the other.
 *
 * @method
 * @param {Timestamp} other Timestamp to compare against.
 * @return {boolean} whether this Timestamp is less than the other.
 */
Timestamp.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};

/**
 * Return whether this Timestamp is less than or equal to the other.
 *
 * @method
 * @param {Timestamp} other Timestamp to compare against.
 * @return {boolean} whether this Timestamp is less than or equal to the other.
 */
Timestamp.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};

/**
 * Return whether this Timestamp is greater than the other.
 *
 * @method
 * @param {Timestamp} other Timestamp to compare against.
 * @return {boolean} whether this Timestamp is greater than the other.
 */
Timestamp.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};

/**
 * Return whether this Timestamp is greater than or equal to the other.
 *
 * @method
 * @param {Timestamp} other Timestamp to compare against.
 * @return {boolean} whether this Timestamp is greater than or equal to the other.
 */
Timestamp.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};

/**
 * Compares this Timestamp with the given one.
 *
 * @method
 * @param {Timestamp} other Timestamp to compare against.
 * @return {boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.
 */
Timestamp.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }

  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }

  // at this point, the signs are the same, so subtraction will not overflow
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};

/**
 * The negation of this value.
 *
 * @method
 * @return {Timestamp} the negation of this value.
 */
Timestamp.prototype.negate = function() {
  if (this.equals(Timestamp.MIN_VALUE)) {
    return Timestamp.MIN_VALUE;
  } else {
    return this.not().add(Timestamp.ONE);
  }
};

/**
 * Returns the sum of this and the given Timestamp.
 *
 * @method
 * @param {Timestamp} other Timestamp to add to this one.
 * @return {Timestamp} the sum of this and the given Timestamp.
 */
Timestamp.prototype.add = function(other) {
  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 0xFFFF;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 0xFFFF;

  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 0xFFFF;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 0xFFFF;

  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 0xFFFF;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 0xFFFF;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 0xFFFF;
  c48 += a48 + b48;
  c48 &= 0xFFFF;
  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
};

/**
 * Returns the difference of this and the given Timestamp.
 *
 * @method
 * @param {Timestamp} other Timestamp to subtract from this.
 * @return {Timestamp} the difference of this and the given Timestamp.
 */
Timestamp.prototype.subtract = function(other) {
  return this.add(other.negate());
};

/**
 * Returns the product of this and the given Timestamp.
 *
 * @method
 * @param {Timestamp} other Timestamp to multiply with this.
 * @return {Timestamp} the product of this and the other.
 */
Timestamp.prototype.multiply = function(other) {
  if (this.isZero()) {
    return Timestamp.ZERO;
  } else if (other.isZero()) {
    return Timestamp.ZERO;
  }

  if (this.equals(Timestamp.MIN_VALUE)) {
    return other.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;
  } else if (other.equals(Timestamp.MIN_VALUE)) {
    return this.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;
  }

  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else if (other.isNegative()) {
    return this.multiply(other.negate()).negate();
  }

  // If both Timestamps are small, use float multiplication
  if (this.lessThan(Timestamp.TWO_PWR_24_) &&
      other.lessThan(Timestamp.TWO_PWR_24_)) {
    return Timestamp.fromNumber(this.toNumber() * other.toNumber());
  }

  // Divide each Timestamp into 4 chunks of 16 bits, and then add up 4x4 products.
  // We can skip products that would overflow.

  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 0xFFFF;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 0xFFFF;

  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 0xFFFF;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 0xFFFF;

  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 0xFFFF;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 0xFFFF;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 0xFFFF;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 0xFFFF;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 0xFFFF;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 0xFFFF;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 0xFFFF;
  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
};

/**
 * Returns this Timestamp divided by the given one.
 *
 * @method
 * @param {Timestamp} other Timestamp by which to divide.
 * @return {Timestamp} this Timestamp divided by the given one.
 */
Timestamp.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error('division by zero');
  } else if (this.isZero()) {
    return Timestamp.ZERO;
  }

  if (this.equals(Timestamp.MIN_VALUE)) {
    if (other.equals(Timestamp.ONE) ||
        other.equals(Timestamp.NEG_ONE)) {
      return Timestamp.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
    } else if (other.equals(Timestamp.MIN_VALUE)) {
      return Timestamp.ONE;
    } else {
      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
      var halfThis = this.shiftRight(1);
      var approx = halfThis.div(other).shiftLeft(1);
      if (approx.equals(Timestamp.ZERO)) {
        return other.isNegative() ? Timestamp.ONE : Timestamp.NEG_ONE;
      } else {
        var rem = this.subtract(other.multiply(approx));
        var result = approx.add(rem.div(other));
        return result;
      }
    }
  } else if (other.equals(Timestamp.MIN_VALUE)) {
    return Timestamp.ZERO;
  }

  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else if (other.isNegative()) {
    return this.div(other.negate()).negate();
  }

  // Repeat the following until the remainder is less than other:  find a
  // floating-point that approximates remainder / other *from below*, add this
  // into the result, and subtract it from the remainder.  It is critical that
  // the approximate value is less than or equal to the real value so that the
  // remainder never becomes negative.
  var res = Timestamp.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    // Approximate the result of division. This may be a little greater or
    // smaller than the actual value.
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

    // We will tweak the approximate result by changing it in the 48-th digit or
    // the smallest non-fractional digit, whichever is larger.
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

    // Decrease the approximation until it is smaller than the remainder.  Note
    // that if it is too large, the product overflows and is negative.
    var approxRes = Timestamp.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = Timestamp.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }

    // We know the answer can't be zero... and actually, zero would cause
    // infinite recursion since we would make no progress.
    if (approxRes.isZero()) {
      approxRes = Timestamp.ONE;
    }

    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};

/**
 * Returns this Timestamp modulo the given one.
 *
 * @method
 * @param {Timestamp} other Timestamp by which to mod.
 * @return {Timestamp} this Timestamp modulo the given one.
 */
Timestamp.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};

/**
 * The bitwise-NOT of this value.
 *
 * @method
 * @return {Timestamp} the bitwise-NOT of this value.
 */
Timestamp.prototype.not = function() {
  return Timestamp.fromBits(~this.low_, ~this.high_);
};

/**
 * Returns the bitwise-AND of this Timestamp and the given one.
 *
 * @method
 * @param {Timestamp} other the Timestamp with which to AND.
 * @return {Timestamp} the bitwise-AND of this and the other.
 */
Timestamp.prototype.and = function(other) {
  return Timestamp.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};

/**
 * Returns the bitwise-OR of this Timestamp and the given one.
 *
 * @method
 * @param {Timestamp} other the Timestamp with which to OR.
 * @return {Timestamp} the bitwise-OR of this and the other.
 */
Timestamp.prototype.or = function(other) {
  return Timestamp.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};

/**
 * Returns the bitwise-XOR of this Timestamp and the given one.
 *
 * @method
 * @param {Timestamp} other the Timestamp with which to XOR.
 * @return {Timestamp} the bitwise-XOR of this and the other.
 */
Timestamp.prototype.xor = function(other) {
  return Timestamp.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};

/**
 * Returns this Timestamp with bits shifted to the left by the given amount.
 *
 * @method
 * @param {number} numBits the number of bits by which to shift.
 * @return {Timestamp} this shifted to the left by the given amount.
 */
Timestamp.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return Timestamp.fromBits(
                 low << numBits,
                 (high << numBits) | (low >>> (32 - numBits)));
    } else {
      return Timestamp.fromBits(0, low << (numBits - 32));
    }
  }
};

/**
 * Returns this Timestamp with bits shifted to the right by the given amount.
 *
 * @method
 * @param {number} numBits the number of bits by which to shift.
 * @return {Timestamp} this shifted to the right by the given amount.
 */
Timestamp.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return Timestamp.fromBits(
                 (low >>> numBits) | (high << (32 - numBits)),
                 high >> numBits);
    } else {
      return Timestamp.fromBits(
                 high >> (numBits - 32),
                 high >= 0 ? 0 : -1);
    }
  }
};

/**
 * Returns this Timestamp with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.
 *
 * @method
 * @param {number} numBits the number of bits by which to shift.
 * @return {Timestamp} this shifted to the right by the given amount, with zeros placed into the new leading bits.
 */
Timestamp.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return Timestamp.fromBits(
                 (low >>> numBits) | (high << (32 - numBits)),
                 high >>> numBits);
    } else if (numBits == 32) {
      return Timestamp.fromBits(high, 0);
    } else {
      return Timestamp.fromBits(high >>> (numBits - 32), 0);
    }
  }
};

/**
 * Returns a Timestamp representing the given (32-bit) integer value.
 *
 * @method
 * @param {number} value the 32-bit integer in question.
 * @return {Timestamp} the corresponding Timestamp value.
 */
Timestamp.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = Timestamp.INT_CACHE_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }

  var obj = new Timestamp(value | 0, value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    Timestamp.INT_CACHE_[value] = obj;
  }
  return obj;
};

/**
 * Returns a Timestamp representing the given value, provided that it is a finite number. Otherwise, zero is returned.
 *
 * @method
 * @param {number} value the number in question.
 * @return {Timestamp} the corresponding Timestamp value.
 */
Timestamp.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return Timestamp.ZERO;
  } else if (value <= -Timestamp.TWO_PWR_63_DBL_) {
    return Timestamp.MIN_VALUE;
  } else if (value + 1 >= Timestamp.TWO_PWR_63_DBL_) {
    return Timestamp.MAX_VALUE;
  } else if (value < 0) {
    return Timestamp.fromNumber(-value).negate();
  } else {
    return new Timestamp(
               (value % Timestamp.TWO_PWR_32_DBL_) | 0,
               (value / Timestamp.TWO_PWR_32_DBL_) | 0);
  }
};

/**
 * Returns a Timestamp representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.
 *
 * @method
 * @param {number} lowBits the low 32-bits.
 * @param {number} highBits the high 32-bits.
 * @return {Timestamp} the corresponding Timestamp value.
 */
Timestamp.fromBits = function(lowBits, highBits) {
  return new Timestamp(lowBits, highBits);
};

/**
 * Returns a Timestamp representation of the given string, written using the given radix.
 *
 * @method
 * @param {string} str the textual representation of the Timestamp.
 * @param {number} opt_radix the radix in which the text is written.
 * @return {Timestamp} the corresponding Timestamp value.
 */
Timestamp.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error('number format error: empty string');
  }

  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error('radix out of range: ' + radix);
  }

  if (str.charAt(0) == '-') {
    return Timestamp.fromString(str.substring(1), radix).negate();
  } else if (str.indexOf('-') >= 0) {
    throw Error('number format error: interior "-" character: ' + str);
  }

  // Do several (8) digits each time through the loop, so as to
  // minimize the calls to the very expensive emulated div.
  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));

  var result = Timestamp.ZERO;
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = Timestamp.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(Timestamp.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(Timestamp.fromNumber(value));
    }
  }
  return result;
};

// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
// from* methods on which they depend.


/**
 * A cache of the Timestamp representations of small integer values.
 * @type {Object}
 * @ignore
 */
Timestamp.INT_CACHE_ = {};

// NOTE: the compiler should inline these constant values below and then remove
// these variables, so there should be no runtime penalty for these.

/**
 * Number used repeated below in calculations.  This must appear before the
 * first call to any from* function below.
 * @type {number}
 * @ignore
 */
Timestamp.TWO_PWR_16_DBL_ = 1 << 16;

/**
 * @type {number}
 * @ignore
 */
Timestamp.TWO_PWR_24_DBL_ = 1 << 24;

/**
 * @type {number}
 * @ignore
 */
Timestamp.TWO_PWR_32_DBL_ = Timestamp.TWO_PWR_16_DBL_ * Timestamp.TWO_PWR_16_DBL_;

/**
 * @type {number}
 * @ignore
 */
Timestamp.TWO_PWR_31_DBL_ = Timestamp.TWO_PWR_32_DBL_ / 2;

/**
 * @type {number}
 * @ignore
 */
Timestamp.TWO_PWR_48_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_16_DBL_;

/**
 * @type {number}
 * @ignore
 */
Timestamp.TWO_PWR_64_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_32_DBL_;

/**
 * @type {number}
 * @ignore
 */
Timestamp.TWO_PWR_63_DBL_ = Timestamp.TWO_PWR_64_DBL_ / 2;

/** @type {Timestamp} */
Timestamp.ZERO = Timestamp.fromInt(0);

/** @type {Timestamp} */
Timestamp.ONE = Timestamp.fromInt(1);

/** @type {Timestamp} */
Timestamp.NEG_ONE = Timestamp.fromInt(-1);

/** @type {Timestamp} */
Timestamp.MAX_VALUE =
    Timestamp.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);

/** @type {Timestamp} */
Timestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);

/**
 * @type {Timestamp}
 * @ignore
 */
Timestamp.TWO_PWR_24_ = Timestamp.fromInt(1 << 24);

/**
 * Expose.
 */
module.exports = Timestamp;
module.exports.Timestamp = Timestamp;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer, process) {/**
 * Machine id.
 *
 * Create a random 3-byte value (i.e. unique for this
 * process). Other drivers use a md5 of the machine id here, but
 * that would mean an asyc call to gethostname, so we don't bother.
 * @ignore
 */
var MACHINE_ID = parseInt(Math.random() * 0xFFFFFF, 10);

// Regular expression that checks for hex value
var checkForHexRegExp = new RegExp("^[0-9a-fA-F]{24}$");
var hasBufferType = false;

// Check if buffer exists
try {
  if(Buffer && Buffer.from) hasBufferType = true;
} catch(err) {};

/**
* Create a new ObjectID instance
*
* @class
* @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.
* @property {number} generationTime The generation time of this ObjectId instance
* @return {ObjectID} instance of ObjectID.
*/
var ObjectID = function ObjectID(id) {
  // Duck-typing to support ObjectId from different npm packages
  if(id instanceof ObjectID) return id;
  if(!(this instanceof ObjectID)) return new ObjectID(id);

  this._bsontype = 'ObjectID';

  // The most common usecase (blank id, new objectId instance)
  if(id == null || typeof id == 'number') {
    // Generate a new id
    this.id = this.generate(id);
    // If we are caching the hex string
    if(ObjectID.cacheHexString) this.__id = this.toString('hex');
    // Return the object
    return;
  }

  // Check if the passed in id is valid
  var valid = ObjectID.isValid(id);

  // Throw an error if it's not a valid setup
  if(!valid && id != null){
    throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");
  } else if(valid && typeof id == 'string' && id.length == 24 && hasBufferType) {
    return new ObjectID(new Buffer(id, 'hex'));
  } else if(valid && typeof id == 'string' && id.length == 24) {
    return ObjectID.createFromHexString(id);
  } else if(id != null && id.length === 12) {
    // assume 12 byte string
    this.id = id;
  } else if(id != null && id.toHexString) {
    // Duck-typing to support ObjectId from different npm packages
    return id;
  } else {
    throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");
  }

  if(ObjectID.cacheHexString) this.__id = this.toString('hex');
};

// Allow usage of ObjectId as well as ObjectID
var ObjectId = ObjectID;

// Precomputed hex table enables speedy hex string conversion
var hexTable = [];
for (var i = 0; i < 256; i++) {
  hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);
}

/**
* Return the ObjectID id as a 24 byte hex string representation
*
* @method
* @return {string} return the 24 byte hex string representation.
*/
ObjectID.prototype.toHexString = function() {
  if(ObjectID.cacheHexString && this.__id) return this.__id;

  var hexString = '';
  if(!this.id || !this.id.length) {
    throw new Error('invalid ObjectId, ObjectId.id must be either a string or a Buffer, but is [' + JSON.stringify(this.id) + ']');
  }

  if(this.id instanceof _Buffer) {
    hexString = convertToHex(this.id);
    if(ObjectID.cacheHexString) this.__id = hexString;
    return hexString;
  }

  for (var i = 0; i < this.id.length; i++) {
    hexString += hexTable[this.id.charCodeAt(i)];
  }

  if(ObjectID.cacheHexString) this.__id = hexString;
  return hexString;
};

/**
* Update the ObjectID index used in generating new ObjectID's on the driver
*
* @method
* @return {number} returns next index value.
* @ignore
*/
ObjectID.prototype.get_inc = function() {
  return ObjectID.index = (ObjectID.index + 1) % 0xFFFFFF;
};

/**
* Update the ObjectID index used in generating new ObjectID's on the driver
*
* @method
* @return {number} returns next index value.
* @ignore
*/
ObjectID.prototype.getInc = function() {
  return this.get_inc();
};

/**
* Generate a 12 byte id buffer used in ObjectID's
*
* @method
* @param {number} [time] optional parameter allowing to pass in a second based timestamp.
* @return {Buffer} return the 12 byte id buffer string.
*/
ObjectID.prototype.generate = function(time) {
  if ('number' != typeof time) {
    time = ~~(Date.now()/1000);
  }

  // Use pid
  var pid = (typeof process === 'undefined' ? Math.floor(Math.random() * 100000) : process.pid) % 0xFFFF;
  var inc = this.get_inc();
  // Buffer used
  var buffer = new Buffer(12);
  // Encode time
  buffer[3] = time & 0xff;
  buffer[2] = (time >> 8) & 0xff;
  buffer[1] = (time >> 16) & 0xff;
  buffer[0] = (time >> 24) & 0xff;
  // Encode machine
  buffer[6] = MACHINE_ID & 0xff;
  buffer[5] = (MACHINE_ID >> 8) & 0xff;
  buffer[4] = (MACHINE_ID >> 16) & 0xff;
  // Encode pid
  buffer[8] = pid & 0xff;
  buffer[7] = (pid >> 8) & 0xff;
  // Encode index
  buffer[11] = inc & 0xff;
  buffer[10] = (inc >> 8) & 0xff;
  buffer[9] = (inc >> 16) & 0xff;
  // Return the buffer
  return buffer;
};

/**
* Converts the id into a 24 byte hex string for printing
*
* @param {String} format The Buffer toString format parameter.
* @return {String} return the 24 byte hex string representation.
* @ignore
*/
ObjectID.prototype.toString = function(format) {
  // Is the id a buffer then use the buffer toString method to return the format
  if(this.id && this.id.copy) {
    return this.id.toString(typeof format === 'string' ? format : 'hex');
  }

  // if(this.buffer )
  return this.toHexString();
};

/**
* Converts to a string representation of this Id.
*
* @return {String} return the 24 byte hex string representation.
* @ignore
*/
ObjectID.prototype.inspect = ObjectID.prototype.toString;

/**
* Converts to its JSON representation.
*
* @return {String} return the 24 byte hex string representation.
* @ignore
*/
ObjectID.prototype.toJSON = function() {
  return this.toHexString();
};

/**
* Compares the equality of this ObjectID with `otherID`.
*
* @method
* @param {object} otherID ObjectID instance to compare against.
* @return {boolean} the result of comparing two ObjectID's
*/
ObjectID.prototype.equals = function equals (otherId) {
  var id;

  if(otherId instanceof ObjectID) {
    return this.toString() == otherId.toString();
  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12 && this.id instanceof _Buffer) {
    return otherId === this.id.toString('binary');
  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 24) {
    return otherId.toLowerCase() === this.toHexString();
  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12) {
    return otherId === this.id;
  } else if(otherId != null && (otherId instanceof ObjectID || otherId.toHexString)) {
    return otherId.toHexString() === this.toHexString();
  } else {
    return false;
  }
}

/**
* Returns the generation date (accurate up to the second) that this ID was generated.
*
* @method
* @return {date} the generation date
*/
ObjectID.prototype.getTimestamp = function() {
  var timestamp = new Date();
  var time = this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;
  timestamp.setTime(Math.floor(time) * 1000);
  return timestamp;
}

/**
* @ignore
*/
ObjectID.index = ~~(Math.random() * 0xFFFFFF);

/**
* @ignore
*/
ObjectID.createPk = function createPk () {
  return new ObjectID();
};

/**
* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.
*
* @method
* @param {number} time an integer number representing a number of seconds.
* @return {ObjectID} return the created ObjectID
*/
ObjectID.createFromTime = function createFromTime (time) {
  var buffer = new Buffer([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
  // Encode time into first 4 bytes
  buffer[3] = time & 0xff;
  buffer[2] = (time >> 8) & 0xff;
  buffer[1] = (time >> 16) & 0xff;
  buffer[0] = (time >> 24) & 0xff;
  // Return the new objectId
  return new ObjectID(buffer);
};

// Lookup tables
var encodeLookup = '0123456789abcdef'.split('')
var decodeLookup = []
var i = 0
while (i < 10) decodeLookup[0x30 + i] = i++
while (i < 16) decodeLookup[0x41 - 10 + i] = decodeLookup[0x61 - 10 + i] = i++

var _Buffer = Buffer;
var convertToHex = function(bytes) {
  return bytes.toString('hex');
}

/**
* Creates an ObjectID from a hex string representation of an ObjectID.
*
* @method
* @param {string} hexString create a ObjectID from a passed in 24 byte hexstring.
* @return {ObjectID} return the created ObjectID
*/
ObjectID.createFromHexString = function createFromHexString (string) {
  // Throw an error if it's not a valid setup
  if(typeof string === 'undefined' || string != null && string.length != 24) {
    throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");
  }

  // Use Buffer.from method if available
  if(hasBufferType) return new ObjectID(new Buffer(string, 'hex'));

  // Calculate lengths
  var array = new _Buffer(12);
  var n = 0;
  var i = 0;

  while (i < 24) {
    array[n++] = decodeLookup[string.charCodeAt(i++)] << 4 | decodeLookup[string.charCodeAt(i++)]
  }

  return new ObjectID(array);
};

/**
* Checks if a value is a valid bson ObjectId
*
* @method
* @return {boolean} return true if the value is a valid bson ObjectId, return false otherwise.
*/
ObjectID.isValid = function isValid(id) {
  if(id == null) return false;

  if(typeof id == 'number') {
    return true;
  }

  if(typeof id == 'string') {
    return id.length == 12 || (id.length == 24 && checkForHexRegExp.test(id));
  }

  if(id instanceof ObjectID) {
    return true;
  }

  if(id instanceof _Buffer) {
    return true;
  }

  // Duck-Typing detection of ObjectId like objects
  if(id.toHexString) {
    return id.id.length == 12 || (id.id.length == 24 && checkForHexRegExp.test(id.id));
  }

  return false;
};

/**
* @ignore
*/
Object.defineProperty(ObjectID.prototype, "generationTime", {
   enumerable: true
 , get: function () {
     return this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;
   }
 , set: function (value) {
     // Encode time into first 4 bytes
     this.id[3] = value & 0xff;
     this.id[2] = (value >> 8) & 0xff;
     this.id[1] = (value >> 16) & 0xff;
     this.id[0] = (value >> 24) & 0xff;
   }
});

/**
 * Expose.
 */
module.exports = ObjectID;
module.exports.ObjectID = ObjectID;
module.exports.ObjectId = ObjectID;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer, __webpack_require__(12)))

/***/ }),
/* 30 */
/***/ (function(module, exports) {

/**
 * A class representation of the BSON RegExp type.
 *
 * @class
 * @return {BSONRegExp} A MinKey instance
 */
function BSONRegExp(pattern, options) {
  if(!(this instanceof BSONRegExp)) return new BSONRegExp();

  // Execute
  this._bsontype = 'BSONRegExp';
  this.pattern = pattern || '';
  this.options = options || '';

  // Validate options
  for(var i = 0; i < this.options.length; i++) {
    if(!(this.options[i] == 'i'
      || this.options[i] == 'm'
      || this.options[i] == 'x'
      || this.options[i] == 'l'
      || this.options[i] == 's'
      || this.options[i] == 'u'
    )) {
      throw new Error('the regular expression options [' + this.options[i] + "] is not supported");
    }
  }
}

module.exports = BSONRegExp;
module.exports.BSONRegExp = BSONRegExp;


/***/ }),
/* 31 */
/***/ (function(module, exports) {

/**
 * A class representation of the BSON Symbol type.
 *
 * @class
 * @deprecated
 * @param {string} value the string representing the symbol.
 * @return {Symbol}
 */
function Symbol(value) {
  if(!(this instanceof Symbol)) return new Symbol(value);
  this._bsontype = 'Symbol';
  this.value = value;
}

/**
 * Access the wrapped string value.
 *
 * @method
 * @return {String} returns the wrapped string.
 */
Symbol.prototype.valueOf = function() {
  return this.value;
};

/**
 * @ignore
 */
Symbol.prototype.toString = function() {
  return this.value;
}

/**
 * @ignore
 */
Symbol.prototype.inspect = function() {
  return this.value;
}

/**
 * @ignore
 */
Symbol.prototype.toJSON = function() {
  return this.value;
}

module.exports = Symbol;
module.exports.Symbol = Symbol;

/***/ }),
/* 32 */
/***/ (function(module, exports) {

/**
 * A class representation of the BSON Code type.
 *
 * @class
 * @param {(string|function)} code a string or function.
 * @param {Object} [scope] an optional scope for the function.
 * @return {Code}
 */
var Code = function Code(code, scope) {
  if(!(this instanceof Code)) return new Code(code, scope);
  this._bsontype = 'Code';
  this.code = code;
  this.scope = scope;
};

/**
 * @ignore
 */
Code.prototype.toJSON = function() {
  return {scope:this.scope, code:this.code};
}

module.exports = Code;
module.exports.Code = Code;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {

var Long = __webpack_require__(22);

var PARSE_STRING_REGEXP = /^(\+|\-)?(\d+|(\d*\.\d*))?(E|e)?([\-\+])?(\d+)?$/;
var PARSE_INF_REGEXP = /^(\+|\-)?(Infinity|inf)$/i;
var PARSE_NAN_REGEXP = /^(\+|\-)?NaN$/i;

var EXPONENT_MAX = 6111;
var EXPONENT_MIN = -6176;
var EXPONENT_BIAS = 6176;
var MAX_DIGITS = 34;

// Nan value bits as 32 bit values (due to lack of longs)
var NAN_BUFFER = [0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();
// Infinity value bits 32 bit values (due to lack of longs)
var INF_NEGATIVE_BUFFER = [0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();
var INF_POSITIVE_BUFFER = [0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();

var EXPONENT_REGEX = /^([\-\+])?(\d+)?$/;


// Detect if the value is a digit
var isDigit = function(value) {
  return !isNaN(parseInt(value, 10));
}

// Divide two uint128 values
var divideu128 = function(value) {
  var DIVISOR = Long.fromNumber(1000 * 1000 * 1000);
  var _rem = Long.fromNumber(0);
  var i = 0;

  if(!value.parts[0] && !value.parts[1] &&
     !value.parts[2] && !value.parts[3]) {
    return { quotient: value, rem: _rem };
  }

  for(var i = 0; i <= 3; i++) {
    // Adjust remainder to match value of next dividend
    _rem = _rem.shiftLeft(32);
    // Add the divided to _rem
    _rem = _rem.add(new Long(value.parts[i], 0));
    value.parts[i] = _rem.div(DIVISOR).low_;
    _rem = _rem.modulo(DIVISOR);
  }

  return { quotient: value, rem: _rem };
}

// Multiply two Long values and return the 128 bit value
var multiply64x2 = function(left, right) {
  if(!left && !right) {
    return {high: Long.fromNumber(0), low: Long.fromNumber(0)};
  }

  var leftHigh = left.shiftRightUnsigned(32);
  var leftLow = new Long(left.getLowBits(), 0);
  var rightHigh = right.shiftRightUnsigned(32);
  var rightLow = new Long(right.getLowBits(), 0);

  var productHigh = leftHigh.multiply(rightHigh);
  var productMid = leftHigh.multiply(rightLow);
  var productMid2 = leftLow.multiply(rightHigh);
  var productLow = leftLow.multiply(rightLow);

  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));
  productMid = new Long(productMid.getLowBits(), 0)
                .add(productMid2)
                .add(productLow.shiftRightUnsigned(32));

  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));
  productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));

  // Return the 128 bit result
  return {high: productHigh, low: productLow};
}

var lessThan = function(left, right) {
  // Make values unsigned
  var uhleft = left.high_ >>> 0;
  var uhright = right.high_ >>> 0;

  // Compare high bits first
  if(uhleft < uhright) {
    return true
  } else if(uhleft == uhright) {
    var ulleft = left.low_ >>> 0;
    var ulright = right.low_ >>> 0;
    if(ulleft < ulright) return true;
  }

  return false;
}

var longtoHex = function(value) {
  var buffer = new Buffer(8);
  var index = 0;
  // Encode the low 64 bits of the decimal
  // Encode low bits
  buffer[index++] = value.low_ & 0xff;
  buffer[index++] = (value.low_ >> 8) & 0xff;
  buffer[index++] = (value.low_ >> 16) & 0xff;
  buffer[index++] = (value.low_ >> 24) & 0xff;
  // Encode high bits
  buffer[index++] = value.high_ & 0xff;
  buffer[index++] = (value.high_ >> 8) & 0xff;
  buffer[index++] = (value.high_ >> 16) & 0xff;
  buffer[index++] = (value.high_ >> 24) & 0xff;
  return buffer.reverse().toString('hex');
}

var int32toHex = function(value) {
  var buffer = new Buffer(4);
  var index = 0;
  // Encode the low 64 bits of the decimal
  // Encode low bits
  buffer[index++] = value & 0xff;
  buffer[index++] = (value >> 8) & 0xff;
  buffer[index++] = (value >> 16) & 0xff;
  buffer[index++] = (value >> 24) & 0xff;
  return buffer.reverse().toString('hex');
}

var Decimal128 = function(bytes) {
  this._bsontype = 'Decimal128';
  this.bytes = bytes;
}

Decimal128.fromString = function(string) {
  // Parse state tracking
  var isNegative = false;
  var sawRadix = false;
  var foundNonZero = false;

  // Total number of significant digits (no leading or trailing zero)
  var significantDigits = 0;
  // Total number of significand digits read
  var nDigitsRead = 0;
  // Total number of digits (no leading zeros)
  var nDigits = 0;
  // The number of the digits after radix
  var radixPosition = 0;
  // The index of the first non-zero in *str*
  var firstNonZero = 0;

  // Digits Array
  var digits = [0];
  // The number of digits in digits
  var nDigitsStored = 0;
  // Insertion pointer for digits
  var digitsInsert = 0;
  // The index of the first non-zero digit
  var firstDigit = 0;
  // The index of the last digit
  var lastDigit = 0;

  // Exponent
  var exponent = 0;
  // loop index over array
  var i = 0;
  // The high 17 digits of the significand
  var significandHigh = [0, 0];
  // The low 17 digits of the significand
  var significandLow = [0, 0];
  // The biased exponent
  var biasedExponent = 0;

  // Read index
  var index = 0;

  // Trim the string
  string = string.trim();

  // Results
  var stringMatch = string.match(PARSE_STRING_REGEXP);
  var infMatch = string.match(PARSE_INF_REGEXP);
  var nanMatch = string.match(PARSE_NAN_REGEXP);

  // Validate the string
  if(!stringMatch
    && ! infMatch
    && ! nanMatch || string.length == 0) {
      throw new Error("" + string + " not a valid Decimal128 string");
  }

  // Check if we have an illegal exponent format
  if(stringMatch && stringMatch[4] && stringMatch[2] === undefined) {
    throw new Error("" + string + " not a valid Decimal128 string");
  }

  // Get the negative or positive sign
  if(string[index] == '+' || string[index] == '-') {
    isNegative = string[index++] == '-';
  }

  // Check if user passed Infinity or NaN
  if(!isDigit(string[index]) && string[index] != '.') {
    if(string[index] == 'i' || string[index] == 'I') {
      return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));
    } else if(string[index] == 'N') {
      return new Decimal128(new Buffer(NAN_BUFFER));
    }
  }

  // Read all the digits
  while(isDigit(string[index]) || string[index] == '.') {
    if(string[index] == '.') {
      if(sawRadix) {
        return new Decimal128(new Buffer(NAN_BUFFER));
      }

      sawRadix = true;
      index = index + 1;
      continue;
    }

    if(nDigitsStored < 34) {
      if(string[index] != '0' || foundNonZero) {
        if(!foundNonZero) {
          firstNonZero = nDigitsRead;
        }

        foundNonZero = true;

        // Only store 34 digits
        digits[digitsInsert++] = parseInt(string[index], 10);
        nDigitsStored = nDigitsStored + 1;
      }
    }

    if(foundNonZero) {
      nDigits = nDigits + 1;
    }

    if(sawRadix) {
      radixPosition = radixPosition + 1;
    }

    nDigitsRead = nDigitsRead + 1;
    index = index + 1;
  }

  if(sawRadix && !nDigitsRead) {
    throw new Error("" + string + " not a valid Decimal128 string");
  }

  // Read exponent if exists
  if(string[index] == 'e' || string[index] == 'E') {
    // Read exponent digits
    var match = string.substr(++index).match(EXPONENT_REGEX);

    // No digits read
    if(!match || !match[2]) {
      return new Decimal128(new Buffer(NAN_BUFFER));
    }

    // Get exponent
    exponent = parseInt(match[0], 10);

    // Adjust the index
    index = index + match[0].length;
  }

  // Return not a number
  if(string[index]) {
    return new Decimal128(new Buffer(NAN_BUFFER));
  }

  // Done reading input
  // Find first non-zero digit in digits
  firstDigit = 0;

  if(!nDigitsStored) {
    firstDigit = 0;
    lastDigit = 0;
    digits[0] = 0;
    nDigits = 1;
    nDigitsStored = 1;
    significantDigits = 0;
  } else {
    lastDigit = nDigitsStored - 1;
    significantDigits = nDigits;

    if(exponent != 0 && significantDigits != 1) {
      while(string[firstNonZero + significantDigits - 1] == '0') {
        significantDigits = significantDigits - 1;
      }
    }
  }

  // Normalization of exponent
  // Correct exponent based on radix position, and shift significand as needed
  // to represent user input

  // Overflow prevention
  if(exponent <= radixPosition && radixPosition - exponent > (1 << 14)) {
    exponent = EXPONENT_MIN;
  } else {
    exponent = exponent - radixPosition;
  }

  // Attempt to normalize the exponent
  while(exponent > EXPONENT_MAX) {
    // Shift exponent to significand and decrease
    lastDigit = lastDigit + 1;

    if(lastDigit - firstDigit > MAX_DIGITS) {
      // Check if we have a zero then just hard clamp, otherwise fail
      var digitsString = digits.join('');
      if(digitsString.match(/^0+$/)) {
        exponent = EXPONENT_MAX;
        break;
      } else {
        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));
      }
    }

    exponent = exponent - 1;
  }

  while(exponent < EXPONENT_MIN || nDigitsStored < nDigits) {
    // Shift last digit
    if(lastDigit == 0) {
      exponent = EXPONENT_MIN;
      significantDigits = 0;
      break;
    }

    if(nDigitsStored < nDigits) {
      // adjust to match digits not stored
      nDigits = nDigits - 1;
    } else {
      // adjust to round
      lastDigit = lastDigit - 1;
    }

    if(exponent < EXPONENT_MAX) {
      exponent = exponent + 1;
    } else {
      // Check if we have a zero then just hard clamp, otherwise fail
      var digitsString = digits.join('');
      if(digitsString.match(/^0+$/)) {
        exponent = EXPONENT_MAX;
        break;
      } else {
        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))
      }
    }
  }


  // Round
  // We've normalized the exponent, but might still need to round.
  if((lastDigit - firstDigit + 1 < significantDigits) && string[significantDigits] != '0') {
    var endOfString = nDigitsRead;

    // If we have seen a radix point, 'string' is 1 longer than we have
    // documented with ndigits_read, so inc the position of the first nonzero
    // digit and the position that digits are read to.
    if(sawRadix && exponent == EXPONENT_MIN) {
      firstNonZero = firstNonZero + 1;
      endOfString = endOfString + 1;
    }

    var roundDigit = parseInt(string[firstNonZero + lastDigit + 1], 10);
    var roundBit = 0;

    if(roundDigit >= 5) {
      roundBit = 1;

      if(roundDigit == 5) {
        roundBit = digits[lastDigit] % 2 == 1;

        for(var i = firstNonZero + lastDigit + 2; i < endOfString; i++) {
          if(parseInt(string[i], 10)) {
            roundBit = 1;
            break;
          }
        }
      }
    }

    if(roundBit) {
      var dIdx = lastDigit;

      for(; dIdx >= 0; dIdx--) {
        if(++digits[dIdx] > 9) {
          digits[dIdx] = 0;

          // overflowed most significant digit
          if(dIdx == 0) {
            if(exponent < EXPONENT_MAX) {
              exponent = exponent + 1;
              digits[dIdx] = 1;
            } else {
              return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))
            }
          }
        } else {
          break;
        }
      }
    }
  }

  // Encode significand
  // The high 17 digits of the significand
  significandHigh = Long.fromNumber(0);
  // The low 17 digits of the significand
  significandLow = Long.fromNumber(0);

  // read a zero
  if(significantDigits == 0) {
    significandHigh = Long.fromNumber(0);
    significandLow = Long.fromNumber(0);
  } else if(lastDigit - firstDigit < 17) {
    var dIdx = firstDigit;
    significandLow = Long.fromNumber(digits[dIdx++]);
    significandHigh = new Long(0, 0);

    for(; dIdx <= lastDigit; dIdx++) {
      significandLow = significandLow.multiply(Long.fromNumber(10));
      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));
    }
  } else {
    var dIdx = firstDigit;
    significandHigh = Long.fromNumber(digits[dIdx++]);

    for(; dIdx <= lastDigit - 17; dIdx++) {
      significandHigh = significandHigh.multiply(Long.fromNumber(10));
      significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));
    }

    significandLow = Long.fromNumber(digits[dIdx++]);

    for(; dIdx <= lastDigit; dIdx++) {
      significandLow = significandLow.multiply(Long.fromNumber(10));
      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));
    }
  }

  var significand = multiply64x2(significandHigh, Long.fromString("100000000000000000"));

  significand.low = significand.low.add(significandLow);

  if(lessThan(significand.low, significandLow)) {
    significand.high = significand.high.add(Long.fromNumber(1));
  }

  // Biased exponent
  var biasedExponent = (exponent + EXPONENT_BIAS);
  var dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };

  // Encode combination, exponent, and significand.
  if(significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber)) {
    // Encode '11' into bits 1 to 3
    dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));
    dec.high = dec.high.or(Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47)));
    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));
  } else {
    dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));
    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));
  }

  dec.low = significand.low;

  // Encode sign
  if(isNegative) {
    dec.high = dec.high.or(Long.fromString('9223372036854775808'));
  }

  // Encode into a buffer
  var buffer = new Buffer(16);
  var index = 0;

  // Encode the low 64 bits of the decimal
  // Encode low bits
  buffer[index++] = dec.low.low_ & 0xff;
  buffer[index++] = (dec.low.low_ >> 8) & 0xff;
  buffer[index++] = (dec.low.low_ >> 16) & 0xff;
  buffer[index++] = (dec.low.low_ >> 24) & 0xff;
  // Encode high bits
  buffer[index++] = dec.low.high_ & 0xff;
  buffer[index++] = (dec.low.high_ >> 8) & 0xff;
  buffer[index++] = (dec.low.high_ >> 16) & 0xff;
  buffer[index++] = (dec.low.high_ >> 24) & 0xff;

  // Encode the high 64 bits of the decimal
  // Encode low bits
  buffer[index++] = dec.high.low_ & 0xff;
  buffer[index++] = (dec.high.low_ >> 8) & 0xff;
  buffer[index++] = (dec.high.low_ >> 16) & 0xff;
  buffer[index++] = (dec.high.low_ >> 24) & 0xff;
  // Encode high bits
  buffer[index++] = dec.high.high_ & 0xff;
  buffer[index++] = (dec.high.high_ >> 8) & 0xff;
  buffer[index++] = (dec.high.high_ >> 16) & 0xff;
  buffer[index++] = (dec.high.high_ >> 24) & 0xff;

  // Return the new Decimal128
  return new Decimal128(buffer);
}

// Extract least significant 5 bits
var COMBINATION_MASK = 0x1f;
// Extract least significant 14 bits
var EXPONENT_MASK = 0x3fff;
// Value of combination field for Inf
var COMBINATION_INFINITY = 30;
// Value of combination field for NaN
var COMBINATION_NAN = 31;
// Value of combination field for NaN
var COMBINATION_SNAN = 32;
// decimal128 exponent bias
var EXPONENT_BIAS = 6176;

Decimal128.prototype.toString = function() {
  // Note: bits in this routine are referred to starting at 0,
  // from the sign bit, towards the coefficient.

  // bits 0 - 31
  var high;
  // bits 32 - 63
  var midh;
  // bits 64 - 95
  var midl;
  // bits 96 - 127
  var low;
  // bits 1 - 5
  var combination;
  // decoded biased exponent (14 bits)
  var biased_exponent;
  // the number of significand digits
  var significand_digits = 0;
  // the base-10 digits in the significand
  var significand = new Array(36);
  for(var i = 0; i < significand.length; i++) significand[i] = 0;
  // read pointer into significand
  var index = 0;

  // unbiased exponent
  var exponent;
  // the exponent if scientific notation is used
  var scientific_exponent;

  // true if the number is zero
  var is_zero = false;

  // the most signifcant significand bits (50-46)
  var significand_msb;
  // temporary storage for significand decoding
  var significand128 = {parts: new Array(4)};
  // indexing variables
  var i;
  var j, k;

  // Output string
  var string = [];

  // Unpack index
  var index = 0;

  // Buffer reference
  var buffer = this.bytes;

  // Unpack the low 64bits into a long
  low = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
  midl = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;

  // Unpack the high 64bits into a long
  midh = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
  high = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;

  // Unpack index
  var index = 0;

  // Create the state of the decimal
  var dec = {
    low: new Long(low, midl),
    high: new Long(midh, high) };

  if(dec.high.lessThan(Long.ZERO)) {
    string.push('-');
  }

  // Decode combination field and exponent
  combination = (high >> 26) & COMBINATION_MASK;

  if((combination >> 3) == 3) {
    // Check for 'special' values
    if(combination == COMBINATION_INFINITY) {
      return string.join('') + "Infinity";
    } else if(combination == COMBINATION_NAN) {
      return "NaN";
    } else {
      biased_exponent = (high >> 15) & EXPONENT_MASK;
      significand_msb = 0x08 + ((high >> 14) & 0x01);
    }
  } else {
    significand_msb = (high >> 14) & 0x07;
    biased_exponent = (high >> 17) & EXPONENT_MASK;
  }

  exponent = biased_exponent - EXPONENT_BIAS;

  // Create string of significand digits

  // Convert the 114-bit binary number represented by
  // (significand_high, significand_low) to at most 34 decimal
  // digits through modulo and division.
  significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);
  significand128.parts[1] = midh;
  significand128.parts[2] = midl;
  significand128.parts[3] = low;

  if(significand128.parts[0] == 0 && significand128.parts[1] == 0
    && significand128.parts[2] == 0 && significand128.parts[3] == 0) {
      is_zero = true;
  } else {
    for(var k = 3; k >= 0; k--) {
      var least_digits = 0;
      // Peform the divide
      var result = divideu128(significand128);
      significand128 = result.quotient;
      least_digits = result.rem.low_;

      // We now have the 9 least significant digits (in base 2).
      // Convert and output to string.
      if(!least_digits) continue;

      for(var j = 8; j >= 0; j--) {
        // significand[k * 9 + j] = Math.round(least_digits % 10);
        significand[k * 9 + j] = least_digits % 10;
        // least_digits = Math.round(least_digits / 10);
        least_digits = Math.floor(least_digits / 10);
      }
    }
  }

  // Output format options:
  // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd
  // Regular    - ddd.ddd

  if(is_zero) {
    significand_digits = 1;
    significand[index] = 0;
  } else {
    significand_digits = 36;
    var i = 0;

    while(!significand[index]) {
      i++;
      significand_digits = significand_digits - 1;
      index = index + 1;
    }
  }

  scientific_exponent = significand_digits - 1 + exponent;

  // The scientific exponent checks are dictated by the string conversion
  // specification and are somewhat arbitrary cutoffs.
  //
  // We must check exponent > 0, because if this is the case, the number
  // has trailing zeros.  However, we *cannot* output these trailing zeros,
  // because doing so would change the precision of the value, and would
  // change stored data if the string converted number is round tripped.

  if(scientific_exponent >= 34 || scientific_exponent <= -7 ||
    exponent > 0) {
    // Scientific format
    string.push(significand[index++]);
    significand_digits = significand_digits - 1;

    if(significand_digits) {
      string.push('.');
    }

    for(var i = 0; i < significand_digits; i++) {
      string.push(significand[index++]);
    }

    // Exponent
    string.push('E');
    if(scientific_exponent > 0) {
      string.push('+' + scientific_exponent);
    } else {
      string.push(scientific_exponent);
    }
  } else {
    // Regular format with no decimal place
    if(exponent >= 0) {
      for(var i = 0; i < significand_digits; i++) {
        string.push(significand[index++]);
      }
    } else {
      var radix_position = significand_digits + exponent;

      // non-zero digits before radix
      if(radix_position > 0) {
        for(var i = 0; i < radix_position; i++) {
          string.push(significand[index++]);
        }
      } else {
        string.push('0');
      }

      string.push('.');
      // add leading zeros after radix
      while(radix_position++ < 0) {
        string.push('0');
      }

      for(var i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {
        string.push(significand[index++]);
      }
    }
  }

  return string.join('');
}

Decimal128.prototype.toJSON = function() {
  return { "$numberDecimal": this.toString() };
}

module.exports = Decimal128;
module.exports.Decimal128 = Decimal128;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))

/***/ }),
/* 34 */
/***/ (function(module, exports) {

/**
 * A class representation of the BSON MinKey type.
 *
 * @class
 * @return {MinKey} A MinKey instance
 */
function MinKey() {
  if(!(this instanceof MinKey)) return new MinKey();
  
  this._bsontype = 'MinKey';
}

module.exports = MinKey;
module.exports.MinKey = MinKey;

/***/ }),
/* 35 */
/***/ (function(module, exports) {

/**
 * A class representation of the BSON MaxKey type.
 *
 * @class
 * @return {MaxKey} A MaxKey instance
 */
function MaxKey() {
  if(!(this instanceof MaxKey)) return new MaxKey();
  
  this._bsontype = 'MaxKey';  
}

module.exports = MaxKey;
module.exports.MaxKey = MaxKey;

/***/ }),
/* 36 */
/***/ (function(module, exports) {

/**
 * A class representation of the BSON DBRef type.
 *
 * @class
 * @param {string} namespace the collection name.
 * @param {ObjectID} oid the reference ObjectID.
 * @param {string} [db] optional db name, if omitted the reference is local to the current db.
 * @return {DBRef}
 */
function DBRef(namespace, oid, db) {
  if(!(this instanceof DBRef)) return new DBRef(namespace, oid, db);
  
  this._bsontype = 'DBRef';
  this.namespace = namespace;
  this.oid = oid;
  this.db = db;
};

/**
 * @ignore
 * @api private
 */
DBRef.prototype.toJSON = function() {
  return {
    '$ref':this.namespace,
    '$id':this.oid,
    '$db':this.db == null ? '' : this.db
  };
}

module.exports = DBRef;
module.exports.DBRef = DBRef;

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * Module dependencies.
 * @ignore
 */

// Test if we're in Node via presence of "global" not absence of "window"
// to support hybrid environments like Electron
if(typeof global !== 'undefined') {
  var Buffer = __webpack_require__(4).Buffer; // TODO just use global Buffer
}

/**
 * A class representation of the BSON Binary type.
 *
 * Sub types
 *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type.
 *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.
 *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type.
 *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type.
 *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type.
 *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type.
 *
 * @class
 * @param {Buffer} buffer a buffer object containing the binary data.
 * @param {Number} [subType] the option binary type.
 * @return {Binary}
 */
function Binary(buffer, subType) {
  if(!(this instanceof Binary)) return new Binary(buffer, subType);

  this._bsontype = 'Binary';

  if(buffer instanceof Number) {
    this.sub_type = buffer;
    this.position = 0;
  } else {
    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;
    this.position = 0;
  }

  if(buffer != null && !(buffer instanceof Number)) {
    // Only accept Buffer, Uint8Array or Arrays
    if(typeof buffer == 'string') {
      // Different ways of writing the length of the string for the different types
      if(typeof Buffer != 'undefined') {
        this.buffer = new Buffer(buffer);
      } else if(typeof Uint8Array != 'undefined' || (Object.prototype.toString.call(buffer) == '[object Array]')) {
        this.buffer = writeStringToArray(buffer);
      } else {
        throw new Error("only String, Buffer, Uint8Array or Array accepted");
      }
    } else {
      this.buffer = buffer;
    }
    this.position = buffer.length;
  } else {
    if(typeof Buffer != 'undefined') {
      this.buffer =  new Buffer(Binary.BUFFER_SIZE);
    } else if(typeof Uint8Array != 'undefined'){
      this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));
    } else {
      this.buffer = new Array(Binary.BUFFER_SIZE);
    }
    // Set position to start of buffer
    this.position = 0;
  }
};

/**
 * Updates this binary with byte_value.
 *
 * @method
 * @param {string} byte_value a single byte we wish to write.
 */
Binary.prototype.put = function put(byte_value) {
  // If it's a string and a has more than one character throw an error
  if(byte_value['length'] != null && typeof byte_value != 'number' && byte_value.length != 1) throw new Error("only accepts single character String, Uint8Array or Array");
  if(typeof byte_value != 'number' && byte_value < 0 || byte_value > 255) throw new Error("only accepts number in a valid unsigned byte range 0-255");

  // Decode the byte value once
  var decoded_byte = null;
  if(typeof byte_value == 'string') {
    decoded_byte = byte_value.charCodeAt(0);
  } else if(byte_value['length'] != null) {
    decoded_byte = byte_value[0];
  } else {
    decoded_byte = byte_value;
  }

  if(this.buffer.length > this.position) {
    this.buffer[this.position++] = decoded_byte;
  } else {
    if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {
      // Create additional overflow buffer
      var buffer = new Buffer(Binary.BUFFER_SIZE + this.buffer.length);
      // Combine the two buffers together
      this.buffer.copy(buffer, 0, 0, this.buffer.length);
      this.buffer = buffer;
      this.buffer[this.position++] = decoded_byte;
    } else {
      var buffer = null;
      // Create a new buffer (typed or normal array)
      if(Object.prototype.toString.call(this.buffer) == '[object Uint8Array]') {
        buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));
      } else {
        buffer = new Array(Binary.BUFFER_SIZE + this.buffer.length);
      }

      // We need to copy all the content to the new array
      for(var i = 0; i < this.buffer.length; i++) {
        buffer[i] = this.buffer[i];
      }

      // Reassign the buffer
      this.buffer = buffer;
      // Write the byte
      this.buffer[this.position++] = decoded_byte;
    }
  }
};

/**
 * Writes a buffer or string to the binary.
 *
 * @method
 * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object.
 * @param {number} offset specify the binary of where to write the content.
 * @return {null}
 */
Binary.prototype.write = function write(string, offset) {
  offset = typeof offset == 'number' ? offset : this.position;

  // If the buffer is to small let's extend the buffer
  if(this.buffer.length < offset + string.length) {
    var buffer = null;
    // If we are in node.js
    if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {
      buffer = new Buffer(this.buffer.length + string.length);
      this.buffer.copy(buffer, 0, 0, this.buffer.length);
    } else if(Object.prototype.toString.call(this.buffer) == '[object Uint8Array]') {
      // Create a new buffer
      buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))
      // Copy the content
      for(var i = 0; i < this.position; i++) {
        buffer[i] = this.buffer[i];
      }
    }

    // Assign the new buffer
    this.buffer = buffer;
  }

  if(typeof Buffer != 'undefined' && Buffer.isBuffer(string) && Buffer.isBuffer(this.buffer)) {
    string.copy(this.buffer, offset, 0, string.length);
    this.position = (offset + string.length) > this.position ? (offset + string.length) : this.position;
    // offset = string.length
  } else if(typeof Buffer != 'undefined' && typeof string == 'string' && Buffer.isBuffer(this.buffer)) {
    this.buffer.write(string, offset, 'binary');
    this.position = (offset + string.length) > this.position ? (offset + string.length) : this.position;
    // offset = string.length;
  } else if(Object.prototype.toString.call(string) == '[object Uint8Array]'
    || Object.prototype.toString.call(string) == '[object Array]' && typeof string != 'string') {
    for(var i = 0; i < string.length; i++) {
      this.buffer[offset++] = string[i];
    }

    this.position = offset > this.position ? offset : this.position;
  } else if(typeof string == 'string') {
    for(var i = 0; i < string.length; i++) {
      this.buffer[offset++] = string.charCodeAt(i);
    }

    this.position = offset > this.position ? offset : this.position;
  }
};

/**
 * Reads **length** bytes starting at **position**.
 *
 * @method
 * @param {number} position read from the given position in the Binary.
 * @param {number} length the number of bytes to read.
 * @return {Buffer}
 */
Binary.prototype.read = function read(position, length) {
  length = length && length > 0
    ? length
    : this.position;

  // Let's return the data based on the type we have
  if(this.buffer['slice']) {
    return this.buffer.slice(position, position + length);
  } else {
    // Create a buffer to keep the result
    var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(length)) : new Array(length);
    for(var i = 0; i < length; i++) {
      buffer[i] = this.buffer[position++];
    }
  }
  // Return the buffer
  return buffer;
};

/**
 * Returns the value of this binary as a string.
 *
 * @method
 * @return {string}
 */
Binary.prototype.value = function value(asRaw) {
  asRaw = asRaw == null ? false : asRaw;

  // Optimize to serialize for the situation where the data == size of buffer
  if(asRaw && typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer) && this.buffer.length == this.position)
    return this.buffer;

  // If it's a node.js buffer object
  if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {
    return asRaw ? this.buffer.slice(0, this.position) : this.buffer.toString('binary', 0, this.position);
  } else {
    if(asRaw) {
      // we support the slice command use it
      if(this.buffer['slice'] != null) {
        return this.buffer.slice(0, this.position);
      } else {
        // Create a new buffer to copy content to
        var newBuffer = Object.prototype.toString.call(this.buffer) == '[object Uint8Array]' ? new Uint8Array(new ArrayBuffer(this.position)) : new Array(this.position);
        // Copy content
        for(var i = 0; i < this.position; i++) {
          newBuffer[i] = this.buffer[i];
        }
        // Return the buffer
        return newBuffer;
      }
    } else {
      return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);
    }
  }
};

/**
 * Length.
 *
 * @method
 * @return {number} the length of the binary.
 */
Binary.prototype.length = function length() {
  return this.position;
};

/**
 * @ignore
 */
Binary.prototype.toJSON = function() {
  return this.buffer != null ? this.buffer.toString('base64') : '';
}

/**
 * @ignore
 */
Binary.prototype.toString = function(format) {
  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';
}

/**
 * Binary default subtype
 * @ignore
 */
var BSON_BINARY_SUBTYPE_DEFAULT = 0;

/**
 * @ignore
 */
var writeStringToArray = function(data) {
  // Create a buffer
  var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(data.length)) : new Array(data.length);
  // Write the content to the buffer
  for(var i = 0; i < data.length; i++) {
    buffer[i] = data.charCodeAt(i);
  }
  // Write the string to the buffer
  return buffer;
}

/**
 * Convert Array ot Uint8Array to Binary String
 *
 * @ignore
 */
var convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {
  var result = "";
  for(var i = startIndex; i < endIndex; i++) {
   result = result + String.fromCharCode(byteArray[i]);
  }
  return result;
};

Binary.BUFFER_SIZE = 256;

/**
 * Default BSON type
 *
 * @classconstant SUBTYPE_DEFAULT
 **/
Binary.SUBTYPE_DEFAULT = 0;
/**
 * Function BSON type
 *
 * @classconstant SUBTYPE_DEFAULT
 **/
Binary.SUBTYPE_FUNCTION = 1;
/**
 * Byte Array BSON type
 *
 * @classconstant SUBTYPE_DEFAULT
 **/
Binary.SUBTYPE_BYTE_ARRAY = 2;
/**
 * OLD UUID BSON type
 *
 * @classconstant SUBTYPE_DEFAULT
 **/
Binary.SUBTYPE_UUID_OLD = 3;
/**
 * UUID BSON type
 *
 * @classconstant SUBTYPE_DEFAULT
 **/
Binary.SUBTYPE_UUID = 4;
/**
 * MD5 BSON type
 *
 * @classconstant SUBTYPE_DEFAULT
 **/
Binary.SUBTYPE_MD5 = 5;
/**
 * User BSON type
 *
 * @classconstant SUBTYPE_DEFAULT
 **/
Binary.SUBTYPE_USER_DEFINED = 128;

/**
 * Expose.
 */
module.exports = Binary;
module.exports.Binary = Binary;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const color_space_1 = __webpack_require__(102);
const color_stop_1 = __webpack_require__(39);
const gradient_spread_1 = __webpack_require__(103);
var Gradient;
(function (Gradient) {
    Gradient.type = new kryo_1.DocumentType({
        properties: {
            spread: { type: gradient_spread_1.GradientSpread.type },
            colorSpace: { type: color_space_1.ColorSpace.type },
            colors: { type: new kryo_1.ArrayType({ itemType: color_stop_1.ColorStop.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Gradient = exports.Gradient || (exports.Gradient = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9ncmFkaWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUF3RDtBQUN4RCwrQ0FBeUM7QUFDekMsNkNBQXVDO0FBQ3ZDLHVEQUFpRDtBQVFqRCxJQUFpQixRQUFRLENBZXhCO0FBZkQsV0FBaUIsUUFBUTtJQU9WLGFBQUksR0FBMkIsSUFBSSxtQkFBWSxDQUFXO1FBQ3JFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxnQ0FBYyxDQUFDLElBQUksRUFBQztZQUNuQyxVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUM7WUFDbkMsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxzQkFBUyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUMvRTtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWZnQixRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQWV4QiIsImZpbGUiOiJsaWIvZ3JhZGllbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FycmF5VHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0NvbG9yU3BhY2V9IGZyb20gXCIuL2NvbG9yLXNwYWNlXCI7XG5pbXBvcnQge0NvbG9yU3RvcH0gZnJvbSBcIi4vY29sb3Itc3RvcFwiO1xuaW1wb3J0IHtHcmFkaWVudFNwcmVhZH0gZnJvbSBcIi4vZ3JhZGllbnQtc3ByZWFkXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR3JhZGllbnQge1xuICBzcHJlYWQ6IEdyYWRpZW50U3ByZWFkO1xuICBjb2xvclNwYWNlOiBDb2xvclNwYWNlO1xuICBjb2xvcnM6IENvbG9yU3RvcFtdO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdyYWRpZW50IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBzcHJlYWQ6IEdyYWRpZW50U3ByZWFkLkpzb247XG4gICAgY29sb3Jfc3BhY2U6IENvbG9yU3BhY2U7XG4gICAgY29sb3JzOiBDb2xvclN0b3AuSnNvbltdO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxHcmFkaWVudD4gPSBuZXcgRG9jdW1lbnRUeXBlPEdyYWRpZW50Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgc3ByZWFkOiB7dHlwZTogR3JhZGllbnRTcHJlYWQudHlwZX0sXG4gICAgICBjb2xvclNwYWNlOiB7dHlwZTogQ29sb3JTcGFjZS50eXBlfSxcbiAgICAgIGNvbG9yczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBDb2xvclN0b3AudHlwZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const straight_s_rgba8_1 = __webpack_require__(5);
var ColorStop;
(function (ColorStop) {
    ColorStop.type = new kryo_1.DocumentType({
        properties: {
            ratio: { type: new kryo_1.Int32Type() },
            color: { type: straight_s_rgba8_1.StraightSRgba8.type },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ColorStop = exports.ColorStop || (exports.ColorStop = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb2xvci1zdG9wLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXdEO0FBRXhELHlEQUFrRDtBQU9sRCxJQUFpQixTQUFTLENBYXpCO0FBYkQsV0FBaUIsU0FBUztJQU1YLGNBQUksR0FBNEIsSUFBSSxtQkFBWSxDQUFZO1FBQ3ZFLFVBQVUsRUFBRTtZQUNWLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztZQUM5QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsaUNBQWMsQ0FBQyxJQUFJLEVBQUM7U0FDbkM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFiZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFhekIiLCJmaWxlIjoibGliL2NvbG9yLXN0b3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1VpbnQ4fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7U3RyYWlnaHRTUmdiYTh9IGZyb20gXCIuL3N0cmFpZ2h0LXMtcmdiYThcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDb2xvclN0b3Age1xuICByYXRpbzogVWludDg7XG4gIGNvbG9yOiBTdHJhaWdodFNSZ2JhODtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDb2xvclN0b3Age1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHJhdGlvOiBudW1iZXI7XG4gICAgY29sb3I6IFN0cmFpZ2h0U1JnYmE4Lkpzb247XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPENvbG9yU3RvcD4gPSBuZXcgRG9jdW1lbnRUeXBlPENvbG9yU3RvcD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHJhdGlvOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIGNvbG9yOiB7dHlwZTogU3RyYWlnaHRTUmdiYTgudHlwZX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var JoinStyleType;
(function (JoinStyleType) {
    JoinStyleType[JoinStyleType["Bevel"] = 0] = "Bevel";
    JoinStyleType[JoinStyleType["Miter"] = 1] = "Miter";
    JoinStyleType[JoinStyleType["Round"] = 2] = "Round";
})(JoinStyleType = exports.JoinStyleType || (exports.JoinStyleType = {}));
(function (JoinStyleType) {
    JoinStyleType.type = new kryo_1.SimpleEnumType({
        enum: JoinStyleType,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(JoinStyleType = exports.JoinStyleType || (exports.JoinStyleType = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9qb2luLXN0eWxlcy9fdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUErQztBQUUvQyxJQUFZLGFBSVg7QUFKRCxXQUFZLGFBQWE7SUFDdkIsbURBQUssQ0FBQTtJQUNMLG1EQUFLLENBQUE7SUFDTCxtREFBSyxDQUFBO0FBQ1AsQ0FBQyxFQUpXLGFBQWEsR0FBYixxQkFBYSxLQUFiLHFCQUFhLFFBSXhCO0FBRUQsV0FBaUIsYUFBYTtJQU1mLGtCQUFJLEdBQWtDLElBQUkscUJBQWMsQ0FBZ0I7UUFDbkYsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBVmdCLGFBQWEsR0FBYixxQkFBYSxLQUFiLHFCQUFhLFFBVTdCIiwiZmlsZSI6ImxpYi9qb2luLXN0eWxlcy9fdHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBTaW1wbGVFbnVtVHlwZX0gZnJvbSBcImtyeW9cIjtcblxuZXhwb3J0IGVudW0gSm9pblN0eWxlVHlwZSB7XG4gIEJldmVsLFxuICBNaXRlcixcbiAgUm91bmQsXG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgSm9pblN0eWxlVHlwZSB7XG4gIGV4cG9ydCB0eXBlIEpzb24gPVxuICAgIFwiYmV2ZWxcIlxuICAgIHwgXCJtaXRlclwiXG4gICAgfCBcInJvdW5kXCI7XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IFNpbXBsZUVudW1UeXBlPEpvaW5TdHlsZVR5cGU+ID0gbmV3IFNpbXBsZUVudW1UeXBlPEpvaW5TdHlsZVR5cGU+KHtcbiAgICBlbnVtOiBKb2luU3R5bGVUeXBlLFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var Vector2D;
(function (Vector2D) {
    Vector2D.type = new kryo_1.DocumentType({
        properties: {
            x: { type: new kryo_1.Int32Type() },
            y: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Vector2D = exports.Vector2D || (exports.Vector2D = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi92ZWN0b3ItMmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBd0Q7QUFReEQsSUFBaUIsUUFBUSxDQWF4QjtBQWJELFdBQWlCLFFBQVE7SUFNVixhQUFJLEdBQTJCLElBQUksbUJBQVksQ0FBVztRQUNyRSxVQUFVLEVBQUU7WUFDVixDQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDMUIsQ0FBQyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1NBQzNCO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBYXhCIiwiZmlsZSI6ImxpYi92ZWN0b3ItMmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1NpbnQzMn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVmVjdG9yMkQge1xuICB4OiBTaW50MzI7XG4gIHk6IFNpbnQzMjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBWZWN0b3IyRCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgeDogbnVtYmVyO1xuICAgIHk6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8VmVjdG9yMkQ+ID0gbmV3IERvY3VtZW50VHlwZTxWZWN0b3IyRD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHg6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgeToge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var ShapeRecordType;
(function (ShapeRecordType) {
    ShapeRecordType[ShapeRecordType["CurvedEdge"] = 0] = "CurvedEdge";
    ShapeRecordType[ShapeRecordType["StraightEdge"] = 1] = "StraightEdge";
    ShapeRecordType[ShapeRecordType["StyleChange"] = 2] = "StyleChange";
})(ShapeRecordType = exports.ShapeRecordType || (exports.ShapeRecordType = {}));
(function (ShapeRecordType) {
    ShapeRecordType.type = new kryo_1.SimpleEnumType({
        enum: ShapeRecordType,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(ShapeRecordType = exports.ShapeRecordType || (exports.ShapeRecordType = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zaGFwZS1yZWNvcmRzL190eXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQStDO0FBRS9DLElBQVksZUFJWDtBQUpELFdBQVksZUFBZTtJQUN6QixpRUFBVSxDQUFBO0lBQ1YscUVBQVksQ0FBQTtJQUNaLG1FQUFXLENBQUE7QUFDYixDQUFDLEVBSlcsZUFBZSxHQUFmLHVCQUFlLEtBQWYsdUJBQWUsUUFJMUI7QUFFRCxXQUFpQixlQUFlO0lBTWpCLG9CQUFJLEdBQW9DLElBQUkscUJBQWMsQ0FBa0I7UUFDdkYsSUFBSSxFQUFFLGVBQWU7UUFDckIsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBVmdCLGVBQWUsR0FBZix1QkFBZSxLQUFmLHVCQUFlLFFBVS9CIiwiZmlsZSI6ImxpYi9zaGFwZS1yZWNvcmRzL190eXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIFNpbXBsZUVudW1UeXBlfSBmcm9tIFwia3J5b1wiO1xuXG5leHBvcnQgZW51bSBTaGFwZVJlY29yZFR5cGUge1xuICBDdXJ2ZWRFZGdlLFxuICBTdHJhaWdodEVkZ2UsXG4gIFN0eWxlQ2hhbmdlLFxufVxuXG5leHBvcnQgbmFtZXNwYWNlIFNoYXBlUmVjb3JkVHlwZSB7XG4gIGV4cG9ydCB0eXBlIEpzb24gPVxuICAgIFwiY3VydmVkLWVkZ2VcIlxuICAgIHwgXCJzdHJhaWdodC1lZGdlXCJcbiAgICB8IFwic3R5bGUtY2hhbmdlXCI7XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IFNpbXBsZUVudW1UeXBlPFNoYXBlUmVjb3JkVHlwZT4gPSBuZXcgU2ltcGxlRW51bVR5cGU8U2hhcGVSZWNvcmRUeXBlPih7XG4gICAgZW51bTogU2hhcGVSZWNvcmRUeXBlLFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const fills = __webpack_require__(101);
var FillStyle;
(function (FillStyle) {
    FillStyle.type = new kryo_1.TaggedUnionType({
        variants: [
            fills.Bitmap.type,
            fills.FocalGradient.type,
            fills.LinearGradient.type,
            fills.RadialGradient.type,
            fills.Solid.type,
        ],
        tag: "type",
    });
})(FillStyle = exports.FillStyle || (exports.FillStyle = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWxsLXN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXFDO0FBQ3JDLDZDQUE2QztBQVM3QyxJQUFpQixTQUFTLENBa0J6QjtBQWxCRCxXQUFpQixTQUFTO0lBUVgsY0FBSSxHQUErQixJQUFJLHNCQUFlLENBQVk7UUFDN0UsUUFBUSxFQUFFO1lBQ1IsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJO1lBQ2pCLEtBQUssQ0FBQyxhQUFhLENBQUMsSUFBSTtZQUN4QixLQUFLLENBQUMsY0FBYyxDQUFDLElBQUk7WUFDekIsS0FBSyxDQUFDLGNBQWMsQ0FBQyxJQUFJO1lBQ3pCLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSTtTQUNqQjtRQUNELEdBQUcsRUFBRSxNQUFNO0tBQ1osQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWxCZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFrQnpCIiwiZmlsZSI6ImxpYi9maWxsLXN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUYWdnZWRVbmlvblR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQgKiBhcyBmaWxscyBmcm9tIFwiLi9maWxsLXN0eWxlcy9pbmRleFwiO1xuXG5leHBvcnQgdHlwZSBGaWxsU3R5bGUgPVxuICBmaWxscy5CaXRtYXBcbiAgfCBmaWxscy5Gb2NhbEdyYWRpZW50XG4gIHwgZmlsbHMuTGluZWFyR3JhZGllbnRcbiAgfCBmaWxscy5SYWRpYWxHcmFkaWVudFxuICB8IGZpbGxzLlNvbGlkO1xuXG5leHBvcnQgbmFtZXNwYWNlIEZpbGxTdHlsZSB7XG4gIGV4cG9ydCB0eXBlIEpzb24gPVxuICAgIGZpbGxzLkJpdG1hcC5Kc29uXG4gICAgfCBmaWxscy5Gb2NhbEdyYWRpZW50Lkpzb25cbiAgICB8IGZpbGxzLkxpbmVhckdyYWRpZW50Lkpzb25cbiAgICB8IGZpbGxzLlJhZGlhbEdyYWRpZW50Lkpzb25cbiAgICB8IGZpbGxzLlNvbGlkLkpzb247XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IFRhZ2dlZFVuaW9uVHlwZTxGaWxsU3R5bGU+ID0gbmV3IFRhZ2dlZFVuaW9uVHlwZTxGaWxsU3R5bGU+KHtcbiAgICB2YXJpYW50czogW1xuICAgICAgZmlsbHMuQml0bWFwLnR5cGUsXG4gICAgICBmaWxscy5Gb2NhbEdyYWRpZW50LnR5cGUsXG4gICAgICBmaWxscy5MaW5lYXJHcmFkaWVudC50eXBlLFxuICAgICAgZmlsbHMuUmFkaWFsR3JhZGllbnQudHlwZSxcbiAgICAgIGZpbGxzLlNvbGlkLnR5cGUsXG4gICAgXSxcbiAgICB0YWc6IFwidHlwZVwiLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = nextTick;
} else {
  module.exports = process.nextTick;
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&
                (typeof Uint16Array !== 'undefined') &&
                (typeof Int32Array !== 'undefined');


exports.assign = function (obj /*from1, from2, from3, ...*/) {
  var sources = Array.prototype.slice.call(arguments, 1);
  while (sources.length) {
    var source = sources.shift();
    if (!source) { continue; }

    if (typeof source !== 'object') {
      throw new TypeError(source + 'must be non-object');
    }

    for (var p in source) {
      if (source.hasOwnProperty(p)) {
        obj[p] = source[p];
      }
    }
  }

  return obj;
};


// reduce buffer size, avoiding mem copy
exports.shrinkBuf = function (buf, size) {
  if (buf.length === size) { return buf; }
  if (buf.subarray) { return buf.subarray(0, size); }
  buf.length = size;
  return buf;
};


var fnTyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    if (src.subarray && dest.subarray) {
      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);
      return;
    }
    // Fallback to ordinary array
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    var i, l, len, pos, chunk, result;

    // calculate data length
    len = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      len += chunks[i].length;
    }

    // join chunks
    result = new Uint8Array(len);
    pos = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      chunk = chunks[i];
      result.set(chunk, pos);
      pos += chunk.length;
    }

    return result;
  }
};

var fnUntyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    return [].concat.apply([], chunks);
  }
};


// Enable/Disable typed arrays use, for testing
//
exports.setTyped = function (on) {
  if (on) {
    exports.Buf8  = Uint8Array;
    exports.Buf16 = Uint16Array;
    exports.Buf32 = Int32Array;
    exports.assign(exports, fnTyped);
  } else {
    exports.Buf8  = Array;
    exports.Buf16 = Array;
    exports.Buf32 = Array;
    exports.assign(exports, fnUntyped);
  }
};

exports.setTyped(TYPED_OK);


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var action_1 = __webpack_require__(153);
exports.Action = action_1.Action;
var action_type_1 = __webpack_require__(1);
exports.ActionType = action_type_1.ActionType;
var catch_target_1 = __webpack_require__(99);
exports.CatchTarget = catch_target_1.CatchTarget;
var get_url2_method_1 = __webpack_require__(96);
exports.GetUrl2Method = get_url2_method_1.GetUrl2Method;
var parameter_1 = __webpack_require__(95);
exports.Parameter = parameter_1.Parameter;
var value_1 = __webpack_require__(97);
exports.Value = value_1.Value;
var value_type_1 = __webpack_require__(11);
exports.ValueType = value_type_1.ValueType;
const actions = __webpack_require__(94);
exports.actions = actions;
const catchTargets = __webpack_require__(100);
exports.catchTargets = catchTargets;
const values = __webpack_require__(98);
exports.values = values;
var _type_1 = __webpack_require__(57);
exports.CatchTargetType = _type_1.CatchTargetType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbUNBQWdDO0FBQXhCLDBCQUFBLE1BQU0sQ0FBQTtBQUNkLDZDQUF5QztBQUFqQyxtQ0FBQSxVQUFVLENBQUE7QUFDbEIsK0NBQTJDO0FBQW5DLHFDQUFBLFdBQVcsQ0FBQTtBQUNuQixxREFBZ0Q7QUFBeEMsMENBQUEsYUFBYSxDQUFBO0FBQ3JCLHlDQUFzQztBQUE5QixnQ0FBQSxTQUFTLENBQUE7QUFDakIsaUNBQThCO0FBQXRCLHdCQUFBLEtBQUssQ0FBQTtBQUNiLDJDQUF1QztBQUEvQixpQ0FBQSxTQUFTLENBQUE7QUFFakIsMkNBQTJDO0FBR25DLDBCQUFPO0FBRmYsc0RBQXNEO0FBRXJDLG9DQUFZO0FBRDdCLHlDQUF5QztBQUNWLHdCQUFNO0FBRXJDLCtDQUFzRDtBQUE5QyxrQ0FBQSxlQUFlLENBQUEiLCJmaWxlIjoibGliL2F2bTEvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge0FjdGlvbn0gZnJvbSBcIi4vYWN0aW9uXCI7XG5leHBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuL2FjdGlvbi10eXBlXCI7XG5leHBvcnQge0NhdGNoVGFyZ2V0fSBmcm9tIFwiLi9jYXRjaC10YXJnZXRcIjtcbmV4cG9ydCB7R2V0VXJsMk1ldGhvZH0gZnJvbSBcIi4vZ2V0LXVybDItbWV0aG9kXCI7XG5leHBvcnQge1BhcmFtZXRlcn0gZnJvbSBcIi4vcGFyYW1ldGVyXCI7XG5leHBvcnQge1ZhbHVlfSBmcm9tIFwiLi92YWx1ZVwiO1xuZXhwb3J0IHtWYWx1ZVR5cGV9IGZyb20gXCIuL3ZhbHVlLXR5cGVcIjtcblxuaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tIFwiLi9hY3Rpb25zL2luZGV4XCI7XG5pbXBvcnQgKiBhcyBjYXRjaFRhcmdldHMgZnJvbSBcIi4vY2F0Y2gtdGFyZ2V0cy9pbmRleFwiO1xuaW1wb3J0ICogYXMgdmFsdWVzIGZyb20gXCIuL3ZhbHVlcy9pbmRleFwiO1xuZXhwb3J0IHthY3Rpb25zLCBjYXRjaFRhcmdldHMsIHZhbHVlc307XG5cbmV4cG9ydCB7Q2F0Y2hUYXJnZXRUeXBlfSBmcm9tIFwiLi9jYXRjaC10YXJnZXRzL190eXBlXCI7XG4iXX0=


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var MaxArrayLengthError;
(function (MaxArrayLengthError) {
    MaxArrayLengthError.name = "MaxArrayLength";
    function format({ array, max }) {
        return `Expected array length (${array.length}) to be less than or equal to ${max}`;
    }
    MaxArrayLengthError.format = format;
    function create(array, max) {
        return incident_1.Incident(MaxArrayLengthError.name, { array, max }, format);
    }
    MaxArrayLengthError.create = create;
})(MaxArrayLengthError = exports.MaxArrayLengthError || (exports.MaxArrayLengthError = {}));
exports.default = MaxArrayLengthError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvbWF4LWFycmF5LWxlbmd0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUVsQyxJQUFpQixtQkFBbUIsQ0FlbkM7QUFmRCxXQUFpQixtQkFBbUI7SUFFckIsd0JBQUksR0FBUyxnQkFBZ0IsQ0FBQztJQU8zQyxnQkFBdUIsRUFBQyxLQUFLLEVBQUUsR0FBRyxFQUFPO1FBQ3ZDLE1BQU0sQ0FBQywwQkFBMEIsS0FBSyxDQUFDLE1BQU0saUNBQWlDLEdBQUcsRUFBRSxDQUFDO0lBQ3RGLENBQUM7SUFGZSwwQkFBTSxTQUVyQixDQUFBO0lBQ0QsZ0JBQXVCLEtBQXFCLEVBQUUsR0FBVztRQUN2RCxNQUFNLENBQUMsbUJBQVEsQ0FBQyxvQkFBQSxJQUFJLEVBQUUsRUFBQyxLQUFLLEVBQUUsR0FBRyxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUZlLDBCQUFNLFNBRXJCLENBQUE7QUFDSCxDQUFDLEVBZmdCLG1CQUFtQixHQUFuQiwyQkFBbUIsS0FBbkIsMkJBQW1CLFFBZW5DO0FBSUQsa0JBQWUsbUJBQW1CLENBQUMiLCJmaWxlIjoibGliL2Vycm9ycy9tYXgtYXJyYXktbGVuZ3RoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmNpZGVudH0gZnJvbSBcImluY2lkZW50XCI7XG5cbmV4cG9ydCBuYW1lc3BhY2UgTWF4QXJyYXlMZW5ndGhFcnJvciB7XG4gIGV4cG9ydCB0eXBlIE5hbWUgPSBcIk1heEFycmF5TGVuZ3RoXCI7XG4gIGV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJNYXhBcnJheUxlbmd0aFwiO1xuICBleHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICAgIGFycmF5OiBBcnJheUxpa2U8YW55PjtcbiAgICBtYXg6IG51bWJlcjtcbiAgfVxuICBleHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbiAgZXhwb3J0IHR5cGUgVHlwZSA9IEluY2lkZW50PE5hbWUsIERhdGEsIENhdXNlPjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7YXJyYXksIG1heH06IERhdGEpOiBzdHJpbmcge1xuICAgIHJldHVybiBgRXhwZWN0ZWQgYXJyYXkgbGVuZ3RoICgke2FycmF5Lmxlbmd0aH0pIHRvIGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAke21heH1gO1xuICB9XG4gIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGUoYXJyYXk6IEFycmF5TGlrZTxhbnk+LCBtYXg6IG51bWJlcik6IFR5cGUge1xuICAgIHJldHVybiBJbmNpZGVudChuYW1lLCB7YXJyYXksIG1heH0sIGZvcm1hdCk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgTWF4QXJyYXlMZW5ndGhFcnJvciA9IE1heEFycmF5TGVuZ3RoRXJyb3IuVHlwZTtcblxuZXhwb3J0IGRlZmF1bHQgTWF4QXJyYXlMZW5ndGhFcnJvcjtcbiJdfQ==


/***/ }),
/* 48 */
/***/ (function(module, exports) {

var Int32 = function(value) {
  if(!(this instanceof Int32)) return new Int32(value);

  this._bsontype = 'Int32';
  this.value = value;
}

/**
 * Access the number value.
 *
 * @method
 * @return {number} returns the wrapped int32 number.
 */
Int32.prototype.valueOf = function() {
  return this.value;
};

/**
 * @ignore
 */
Int32.prototype.toJSON = function() {
  return this.value;
}

module.exports = Int32;
module.exports.Int32 = Int32;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = __webpack_require__(161);

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = __webpack_require__(162);

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9), __webpack_require__(12)))

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var LowerCaseError;
(function (LowerCaseError) {
    LowerCaseError.name = "LowerCase";
    function format({ string }) {
        return `Expected the following string to be lowercase: ${JSON.stringify(string)}`;
    }
    LowerCaseError.format = format;
    function create(string) {
        return incident_1.Incident(LowerCaseError.name, { string }, format);
    }
    LowerCaseError.create = create;
})(LowerCaseError = exports.LowerCaseError || (exports.LowerCaseError = {}));
exports.default = LowerCaseError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvbG93ZXItY2FzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUVsQyxJQUFpQixjQUFjLENBYzlCO0FBZEQsV0FBaUIsY0FBYztJQUVoQixtQkFBSSxHQUFTLFdBQVcsQ0FBQztJQU10QyxnQkFBdUIsRUFBQyxNQUFNLEVBQU87UUFDbkMsTUFBTSxDQUFDLGtEQUFrRCxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7SUFDcEYsQ0FBQztJQUZlLHFCQUFNLFNBRXJCLENBQUE7SUFDRCxnQkFBdUIsTUFBYztRQUNuQyxNQUFNLENBQUMsbUJBQVEsQ0FBQyxlQUFBLElBQUksRUFBRSxFQUFDLE1BQU0sRUFBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFGZSxxQkFBTSxTQUVyQixDQUFBO0FBQ0gsQ0FBQyxFQWRnQixjQUFjLEdBQWQsc0JBQWMsS0FBZCxzQkFBYyxRQWM5QjtBQUlELGtCQUFlLGNBQWMsQ0FBQyIsImZpbGUiOiJsaWIvZXJyb3JzL2xvd2VyLWNhc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IG5hbWVzcGFjZSBMb3dlckNhc2VFcnJvciB7XG4gIGV4cG9ydCB0eXBlIE5hbWUgPSBcIkxvd2VyQ2FzZVwiO1xuICBleHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiTG93ZXJDYXNlXCI7XG4gIGV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gICAgc3RyaW5nOiBzdHJpbmc7XG4gIH1cbiAgZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG4gIGV4cG9ydCB0eXBlIFR5cGUgPSBJbmNpZGVudDxOYW1lLCBEYXRhLCBDYXVzZT47XG4gIGV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe3N0cmluZ306IERhdGEpOiBzdHJpbmcge1xuICAgIHJldHVybiBgRXhwZWN0ZWQgdGhlIGZvbGxvd2luZyBzdHJpbmcgdG8gYmUgbG93ZXJjYXNlOiAke0pTT04uc3RyaW5naWZ5KHN0cmluZyl9YDtcbiAgfVxuICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlKHN0cmluZzogc3RyaW5nKTogVHlwZSB7XG4gICAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHtzdHJpbmd9LCBmb3JtYXQpO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIExvd2VyQ2FzZUVycm9yID0gTG93ZXJDYXNlRXJyb3IuVHlwZTtcblxuZXhwb3J0IGRlZmF1bHQgTG93ZXJDYXNlRXJyb3I7XG4iXX0=


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var NotTrimmedError;
(function (NotTrimmedError) {
    NotTrimmedError.name = "NotTrimmed";
    function format({ string }) {
        return `Expected the following string to be trimmed: ${JSON.stringify(string)}`;
    }
    NotTrimmedError.format = format;
    function create(string) {
        return incident_1.Incident(NotTrimmedError.name, { string }, format);
    }
    NotTrimmedError.create = create;
})(NotTrimmedError = exports.NotTrimmedError || (exports.NotTrimmedError = {}));
exports.default = NotTrimmedError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvbm90LXRyaW1tZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBa0M7QUFFbEMsSUFBaUIsZUFBZSxDQWMvQjtBQWRELFdBQWlCLGVBQWU7SUFFakIsb0JBQUksR0FBUyxZQUFZLENBQUM7SUFNdkMsZ0JBQXVCLEVBQUMsTUFBTSxFQUFPO1FBQ25DLE1BQU0sQ0FBQyxnREFBZ0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDO0lBQ2xGLENBQUM7SUFGZSxzQkFBTSxTQUVyQixDQUFBO0lBQ0QsZ0JBQXVCLE1BQWM7UUFDbkMsTUFBTSxDQUFDLG1CQUFRLENBQUMsZ0JBQUEsSUFBSSxFQUFFLEVBQUMsTUFBTSxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUZlLHNCQUFNLFNBRXJCLENBQUE7QUFDSCxDQUFDLEVBZGdCLGVBQWUsR0FBZix1QkFBZSxLQUFmLHVCQUFlLFFBYy9CO0FBSUQsa0JBQWUsZUFBZSxDQUFDIiwiZmlsZSI6ImxpYi9lcnJvcnMvbm90LXRyaW1tZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IG5hbWVzcGFjZSBOb3RUcmltbWVkRXJyb3Ige1xuICBleHBvcnQgdHlwZSBOYW1lID0gXCJOb3RUcmltbWVkXCI7XG4gIGV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJOb3RUcmltbWVkXCI7XG4gIGV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gICAgc3RyaW5nOiBzdHJpbmc7XG4gIH1cbiAgZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG4gIGV4cG9ydCB0eXBlIFR5cGUgPSBJbmNpZGVudDxOYW1lLCBEYXRhLCBDYXVzZT47XG4gIGV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe3N0cmluZ306IERhdGEpOiBzdHJpbmcge1xuICAgIHJldHVybiBgRXhwZWN0ZWQgdGhlIGZvbGxvd2luZyBzdHJpbmcgdG8gYmUgdHJpbW1lZDogJHtKU09OLnN0cmluZ2lmeShzdHJpbmcpfWA7XG4gIH1cbiAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZShzdHJpbmc6IHN0cmluZyk6IFR5cGUge1xuICAgIHJldHVybiBJbmNpZGVudChuYW1lLCB7c3RyaW5nfSwgZm9ybWF0KTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBOb3RUcmltbWVkRXJyb3IgPSBOb3RUcmltbWVkRXJyb3IuVHlwZTtcblxuZXhwb3J0IGRlZmF1bHQgTm90VHJpbW1lZEVycm9yO1xuIl19


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var PatternNotMatchedError;
(function (PatternNotMatchedError) {
    PatternNotMatchedError.name = "PatternNotMatched";
    function format({ pattern, string }) {
        return `The regular expression ${pattern} does not match the string ${JSON.stringify(string)}`;
    }
    PatternNotMatchedError.format = format;
    function create(pattern, string) {
        return incident_1.Incident(PatternNotMatchedError.name, { pattern, string }, format);
    }
    PatternNotMatchedError.create = create;
})(PatternNotMatchedError = exports.PatternNotMatchedError || (exports.PatternNotMatchedError = {}));
exports.default = PatternNotMatchedError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvcGF0dGVybi1ub3QtbWF0Y2hlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUVsQyxJQUFpQixzQkFBc0IsQ0FldEM7QUFmRCxXQUFpQixzQkFBc0I7SUFFeEIsMkJBQUksR0FBUyxtQkFBbUIsQ0FBQztJQU85QyxnQkFBdUIsRUFBQyxPQUFPLEVBQUUsTUFBTSxFQUFPO1FBQzVDLE1BQU0sQ0FBQywwQkFBMEIsT0FBTyw4QkFBOEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDO0lBQ2pHLENBQUM7SUFGZSw2QkFBTSxTQUVyQixDQUFBO0lBQ0QsZ0JBQXVCLE9BQWUsRUFBRSxNQUFjO1FBQ3BELE1BQU0sQ0FBQyxtQkFBUSxDQUFDLHVCQUFBLElBQUksRUFBRSxFQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBRmUsNkJBQU0sU0FFckIsQ0FBQTtBQUNILENBQUMsRUFmZ0Isc0JBQXNCLEdBQXRCLDhCQUFzQixLQUF0Qiw4QkFBc0IsUUFldEM7QUFJRCxrQkFBZSxzQkFBc0IsQ0FBQyIsImZpbGUiOiJsaWIvZXJyb3JzL3BhdHRlcm4tbm90LW1hdGNoZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IG5hbWVzcGFjZSBQYXR0ZXJuTm90TWF0Y2hlZEVycm9yIHtcbiAgZXhwb3J0IHR5cGUgTmFtZSA9IFwiUGF0dGVybk5vdE1hdGNoZWRcIjtcbiAgZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcIlBhdHRlcm5Ob3RNYXRjaGVkXCI7XG4gIGV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gICAgc3RyaW5nOiBzdHJpbmc7XG4gICAgcGF0dGVybjogUmVnRXhwO1xuICB9XG4gIGV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuICBleHBvcnQgdHlwZSBUeXBlID0gSW5jaWRlbnQ8TmFtZSwgRGF0YSwgQ2F1c2U+O1xuICBleHBvcnQgZnVuY3Rpb24gZm9ybWF0KHtwYXR0ZXJuLCBzdHJpbmd9OiBEYXRhKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYFRoZSByZWd1bGFyIGV4cHJlc3Npb24gJHtwYXR0ZXJufSBkb2VzIG5vdCBtYXRjaCB0aGUgc3RyaW5nICR7SlNPTi5zdHJpbmdpZnkoc3RyaW5nKX1gO1xuICB9XG4gIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGUocGF0dGVybjogUmVnRXhwLCBzdHJpbmc6IHN0cmluZyk6IFR5cGUge1xuICAgIHJldHVybiBJbmNpZGVudChuYW1lLCB7cGF0dGVybiwgc3RyaW5nfSwgZm9ybWF0KTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBQYXR0ZXJuTm90TWF0Y2hlZEVycm9yID0gUGF0dGVybk5vdE1hdGNoZWRFcnJvci5UeXBlO1xuXG5leHBvcnQgZGVmYXVsdCBQYXR0ZXJuTm90TWF0Y2hlZEVycm9yO1xuIl19


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CaseStyle;
(function (CaseStyle) {
    CaseStyle[CaseStyle["CamelCase"] = 0] = "CamelCase";
    CaseStyle[CaseStyle["PascalCase"] = 1] = "PascalCase";
    CaseStyle[CaseStyle["SnakeCase"] = 2] = "SnakeCase";
    CaseStyle[CaseStyle["ScreamingSnakeCase"] = 3] = "ScreamingSnakeCase";
    CaseStyle[CaseStyle["KebabCase"] = 4] = "KebabCase";
})(CaseStyle = exports.CaseStyle || (exports.CaseStyle = {}));
function detectCaseStyle(identifier) {
    if (/^[A-Z]+[0-9]*(?:_[A-Z]+[0-9]*)*$/.test(identifier)) {
        return CaseStyle.ScreamingSnakeCase;
    }
    else if (/^[a-z]+[0-9]*(?:_[a-z]+[0-9]*)+$/.test(identifier)) {
        return CaseStyle.SnakeCase;
    }
    else if (/^[a-z]+[0-9]*(?:-[a-z]+[0-9]*)+$/.test(identifier)) {
        return CaseStyle.KebabCase;
    }
    else if (/^[A-Z]/.test(identifier)) {
        return CaseStyle.PascalCase;
    }
    else {
        return CaseStyle.CamelCase;
    }
}
exports.detectCaseStyle = detectCaseStyle;
function split(caseStyle, identifier) {
    switch (caseStyle) {
        case CaseStyle.ScreamingSnakeCase:
            return identifier.toLowerCase().split("_");
        case CaseStyle.SnakeCase:
            return identifier.toLowerCase().split("_");
        case CaseStyle.KebabCase:
            return identifier.toLowerCase().split("-");
        case CaseStyle.CamelCase:
            return identifier.split(/(?=[A-Z])/).map((part) => part.toLowerCase());
        case CaseStyle.PascalCase:
            return identifier.split(/(?=[A-Z])/).map((part) => part.toLowerCase());
    }
}
exports.split = split;
function join(caseStyle, parts) {
    switch (caseStyle) {
        case CaseStyle.ScreamingSnakeCase:
            return parts.join("_").toUpperCase();
        case CaseStyle.SnakeCase:
            return parts.join("_").toLowerCase();
        case CaseStyle.KebabCase:
            return parts.join("-").toLowerCase();
        case CaseStyle.CamelCase:
            return parts.map((part, index) => {
                const upperLength = index === 0 ? 0 : 1;
                return part.substr(0, upperLength).toUpperCase() + part.substring(upperLength).toLowerCase();
            }).join("");
        case CaseStyle.PascalCase:
            return parts.map((part) => {
                return part.substr(0, 1).toUpperCase() + part.substring(1).toLowerCase();
            }).join("");
    }
}
exports.join = join;
function rename(identifier, from, to) {
    if (to === undefined) {
        to = from;
        from = detectCaseStyle(identifier);
    }
    return join(to, split(from, identifier));
}
exports.rename = rename;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9oZWxwZXJzL3JlbmFtZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQVksU0FNWDtBQU5ELFdBQVksU0FBUztJQUNuQixtREFBUyxDQUFBO0lBQ1QscURBQVUsQ0FBQTtJQUNWLG1EQUFTLENBQUE7SUFDVCxxRUFBa0IsQ0FBQTtJQUNsQixtREFBUyxDQUFBO0FBQ1gsQ0FBQyxFQU5XLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBTXBCO0FBRUQseUJBQWdDLFVBQWtCO0lBQ2hELEVBQUUsQ0FBQyxDQUFDLGtDQUFrQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEQsTUFBTSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQztJQUN0QyxDQUFDO0lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLGtDQUFrQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0QsTUFBTSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUM7SUFDN0IsQ0FBQztJQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxrQ0FBa0MsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQy9ELE1BQU0sQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDO0lBQzdCLENBQUM7SUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDckMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUM7SUFDOUIsQ0FBQztJQUFDLElBQUksQ0FBQyxDQUFDO1FBQ04sTUFBTSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUM7SUFDN0IsQ0FBQztBQUNILENBQUM7QUFaRCwwQ0FZQztBQUVELGVBQXNCLFNBQW9CLEVBQUUsVUFBa0I7SUFDNUQsTUFBTSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztRQUNsQixLQUFLLFNBQVMsQ0FBQyxrQkFBa0I7WUFDL0IsTUFBTSxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDN0MsS0FBSyxTQUFTLENBQUMsU0FBUztZQUN0QixNQUFNLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM3QyxLQUFLLFNBQVMsQ0FBQyxTQUFTO1lBQ3RCLE1BQU0sQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzdDLEtBQUssU0FBUyxDQUFDLFNBQVM7WUFDdEIsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBWSxLQUFhLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO1FBQ3pGLEtBQUssU0FBUyxDQUFDLFVBQVU7WUFDdkIsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBWSxLQUFhLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO0lBQzNGLENBQUM7QUFDSCxDQUFDO0FBYkQsc0JBYUM7QUFFRCxjQUFxQixTQUFvQixFQUFFLEtBQWU7SUFDeEQsTUFBTSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztRQUNsQixLQUFLLFNBQVMsQ0FBQyxrQkFBa0I7WUFDL0IsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDdkMsS0FBSyxTQUFTLENBQUMsU0FBUztZQUN0QixNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUN2QyxLQUFLLFNBQVMsQ0FBQyxTQUFTO1lBQ3RCLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3ZDLEtBQUssU0FBUyxDQUFDLFNBQVM7WUFDdEIsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFZLEVBQUUsS0FBYTtnQkFDM0MsTUFBTSxXQUFXLEdBQVcsS0FBSyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUNoRCxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsV0FBVyxDQUFDLENBQUMsV0FBVyxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUMvRixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDZCxLQUFLLFNBQVMsQ0FBQyxVQUFVO1lBQ3ZCLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBWTtnQkFDNUIsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDM0UsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2hCLENBQUM7QUFDSCxDQUFDO0FBbEJELG9CQWtCQztBQUlELGdCQUF1QixVQUFlLEVBQUUsSUFBUyxFQUFFLEVBQVE7SUFDekQsRUFBRSxDQUFDLENBQUMsRUFBRSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDckIsRUFBRSxHQUFHLElBQUksQ0FBQztRQUNWLElBQUksR0FBRyxlQUFlLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLEtBQUssQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQztBQUMzQyxDQUFDO0FBTkQsd0JBTUMiLCJmaWxlIjoibGliL2hlbHBlcnMvcmVuYW1lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGVudW0gQ2FzZVN0eWxlIHtcbiAgQ2FtZWxDYXNlLFxuICBQYXNjYWxDYXNlLFxuICBTbmFrZUNhc2UsXG4gIFNjcmVhbWluZ1NuYWtlQ2FzZSxcbiAgS2ViYWJDYXNlLFxufVxuXG5leHBvcnQgZnVuY3Rpb24gZGV0ZWN0Q2FzZVN0eWxlKGlkZW50aWZpZXI6IHN0cmluZyk6IENhc2VTdHlsZSB7XG4gIGlmICgvXltBLVpdK1swLTldKig/Ol9bQS1aXStbMC05XSopKiQvLnRlc3QoaWRlbnRpZmllcikpIHtcbiAgICByZXR1cm4gQ2FzZVN0eWxlLlNjcmVhbWluZ1NuYWtlQ2FzZTtcbiAgfSBlbHNlIGlmICgvXlthLXpdK1swLTldKig/Ol9bYS16XStbMC05XSopKyQvLnRlc3QoaWRlbnRpZmllcikpIHtcbiAgICByZXR1cm4gQ2FzZVN0eWxlLlNuYWtlQ2FzZTtcbiAgfSBlbHNlIGlmICgvXlthLXpdK1swLTldKig/Oi1bYS16XStbMC05XSopKyQvLnRlc3QoaWRlbnRpZmllcikpIHtcbiAgICByZXR1cm4gQ2FzZVN0eWxlLktlYmFiQ2FzZTtcbiAgfSBlbHNlIGlmICgvXltBLVpdLy50ZXN0KGlkZW50aWZpZXIpKSB7XG4gICAgcmV0dXJuIENhc2VTdHlsZS5QYXNjYWxDYXNlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBDYXNlU3R5bGUuQ2FtZWxDYXNlO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzcGxpdChjYXNlU3R5bGU6IENhc2VTdHlsZSwgaWRlbnRpZmllcjogc3RyaW5nKTogc3RyaW5nW10ge1xuICBzd2l0Y2ggKGNhc2VTdHlsZSkge1xuICAgIGNhc2UgQ2FzZVN0eWxlLlNjcmVhbWluZ1NuYWtlQ2FzZTpcbiAgICAgIHJldHVybiBpZGVudGlmaWVyLnRvTG93ZXJDYXNlKCkuc3BsaXQoXCJfXCIpO1xuICAgIGNhc2UgQ2FzZVN0eWxlLlNuYWtlQ2FzZTpcbiAgICAgIHJldHVybiBpZGVudGlmaWVyLnRvTG93ZXJDYXNlKCkuc3BsaXQoXCJfXCIpO1xuICAgIGNhc2UgQ2FzZVN0eWxlLktlYmFiQ2FzZTpcbiAgICAgIHJldHVybiBpZGVudGlmaWVyLnRvTG93ZXJDYXNlKCkuc3BsaXQoXCItXCIpO1xuICAgIGNhc2UgQ2FzZVN0eWxlLkNhbWVsQ2FzZTpcbiAgICAgIHJldHVybiBpZGVudGlmaWVyLnNwbGl0KC8oPz1bQS1aXSkvKS5tYXAoKHBhcnQ6IHN0cmluZyk6IHN0cmluZyA9PiBwYXJ0LnRvTG93ZXJDYXNlKCkpO1xuICAgIGNhc2UgQ2FzZVN0eWxlLlBhc2NhbENhc2U6XG4gICAgICByZXR1cm4gaWRlbnRpZmllci5zcGxpdCgvKD89W0EtWl0pLykubWFwKChwYXJ0OiBzdHJpbmcpOiBzdHJpbmcgPT4gcGFydC50b0xvd2VyQ2FzZSgpKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gam9pbihjYXNlU3R5bGU6IENhc2VTdHlsZSwgcGFydHM6IHN0cmluZ1tdKTogc3RyaW5nIHtcbiAgc3dpdGNoIChjYXNlU3R5bGUpIHtcbiAgICBjYXNlIENhc2VTdHlsZS5TY3JlYW1pbmdTbmFrZUNhc2U6XG4gICAgICByZXR1cm4gcGFydHMuam9pbihcIl9cIikudG9VcHBlckNhc2UoKTtcbiAgICBjYXNlIENhc2VTdHlsZS5TbmFrZUNhc2U6XG4gICAgICByZXR1cm4gcGFydHMuam9pbihcIl9cIikudG9Mb3dlckNhc2UoKTtcbiAgICBjYXNlIENhc2VTdHlsZS5LZWJhYkNhc2U6XG4gICAgICByZXR1cm4gcGFydHMuam9pbihcIi1cIikudG9Mb3dlckNhc2UoKTtcbiAgICBjYXNlIENhc2VTdHlsZS5DYW1lbENhc2U6XG4gICAgICByZXR1cm4gcGFydHMubWFwKChwYXJ0OiBzdHJpbmcsIGluZGV4OiBudW1iZXIpOiBzdHJpbmcgPT4ge1xuICAgICAgICBjb25zdCB1cHBlckxlbmd0aDogbnVtYmVyID0gaW5kZXggPT09IDAgPyAwIDogMTtcbiAgICAgICAgcmV0dXJuIHBhcnQuc3Vic3RyKDAsIHVwcGVyTGVuZ3RoKS50b1VwcGVyQ2FzZSgpICsgcGFydC5zdWJzdHJpbmcodXBwZXJMZW5ndGgpLnRvTG93ZXJDYXNlKCk7XG4gICAgICB9KS5qb2luKFwiXCIpO1xuICAgIGNhc2UgQ2FzZVN0eWxlLlBhc2NhbENhc2U6XG4gICAgICByZXR1cm4gcGFydHMubWFwKChwYXJ0OiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICAgICAgICByZXR1cm4gcGFydC5zdWJzdHIoMCwgMSkudG9VcHBlckNhc2UoKSArIHBhcnQuc3Vic3RyaW5nKDEpLnRvTG93ZXJDYXNlKCk7XG4gICAgICB9KS5qb2luKFwiXCIpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW5hbWUoaWRlbnRpZmllcjogc3RyaW5nLCB0bzogQ2FzZVN0eWxlKTogc3RyaW5nO1xuZXhwb3J0IGZ1bmN0aW9uIHJlbmFtZShpZGVudGlmaWVyOiBzdHJpbmcsIGZyb206IENhc2VTdHlsZSwgdG86IENhc2VTdHlsZSk6IHN0cmluZztcbmV4cG9ydCBmdW5jdGlvbiByZW5hbWUoaWRlbnRpZmllcjogYW55LCBmcm9tOiBhbnksIHRvPzogYW55KTogYW55IHtcbiAgaWYgKHRvID09PSB1bmRlZmluZWQpIHtcbiAgICB0byA9IGZyb207XG4gICAgZnJvbSA9IGRldGVjdENhc2VTdHlsZShpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gam9pbih0bywgc3BsaXQoZnJvbSwgaWRlbnRpZmllcikpO1xufVxuIl19


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const not_implemented_1 = __webpack_require__(10);
const unknown_format_1 = __webpack_require__(7);
exports.name = "literal";
class LiteralType {
    constructor(options) {
        this.name = exports.name;
        this.type = options.type;
        this.value = options.value;
    }
    toJSON() {
        throw not_implemented_1.NotImplementedError.create("LiteralType#toJSON");
    }
    readTrusted(format, input) {
        // TODO(demurgos): Check if the format is supported instead of casting to `any`
        return this.type.readTrusted(format, input);
    }
    read(format, input) {
        switch (format) {
            case "bson":
            case "json":
            case "qs":
                // TODO(demurgos): Check if the format is supported instead of casting to `any`
                return this.type.read(format, input);
            default:
                throw unknown_format_1.UnknownFormatError.create(format);
        }
    }
    write(format, val) {
        // TODO(demurgos): Check if the format is supported instead of casting to `any`
        return this.type.write(format, val);
    }
    testError(val) {
        const error = this.type.testError(val);
        if (error) {
            return error;
        }
        if (!this.type.equals(val, this.value)) {
            return incident_1.Incident("InvalidLiteral", "Invalid literal value");
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        return this.type.equals(val1, val2);
    }
    clone(val) {
        return this.type.clone(val);
    }
    diff(oldVal, newVal) {
        throw not_implemented_1.NotImplementedError.create("LiteralType#diff");
    }
    patch(oldVal, diff) {
        throw not_implemented_1.NotImplementedError.create("LiteralType#patch");
    }
    reverseDiff(diff) {
        throw not_implemented_1.NotImplementedError.create("LiteralType#reverseDiff");
    }
    squash(diff1, diff2) {
        throw not_implemented_1.NotImplementedError.create("LiteralType#squash");
    }
}
exports.LiteralType = LiteralType;
exports.Type = LiteralType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90eXBlcy9saXRlcmFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQWtDO0FBQ2xDLCtEQUE4RDtBQUM5RCw2REFBNEQ7QUFJL0MsUUFBQSxJQUFJLEdBQVMsU0FBUyxDQUFDO0FBcUJwQztJQVFFLFlBQVksT0FBa0M7UUFKckMsU0FBSSxHQUFTLFlBQUksQ0FBQztRQUt6QixJQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUM7UUFDekIsSUFBSSxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDO0lBQzdCLENBQUM7SUFFRCxNQUFNO1FBQ0osTUFBTSxxQ0FBbUIsQ0FBQyxNQUFNLENBQUMsb0JBQW9CLENBQUMsQ0FBQztJQUN6RCxDQUFDO0lBS0QsV0FBVyxDQUFDLE1BQThCLEVBQUUsS0FBVTtRQUNwRCwrRUFBK0U7UUFDL0UsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFPLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUQsSUFBSSxDQUFDLE1BQThCLEVBQUUsS0FBVTtRQUM3QyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ2YsS0FBSyxNQUFNLENBQUM7WUFDWixLQUFLLE1BQU0sQ0FBQztZQUNaLEtBQUssSUFBSTtnQkFDUCwrRUFBK0U7Z0JBQy9FLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBTyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDN0M7Z0JBQ0UsTUFBTSxtQ0FBa0IsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDNUMsQ0FBQztJQUNILENBQUM7SUFLRCxLQUFLLENBQUMsTUFBOEIsRUFBRSxHQUFNO1FBQzFDLCtFQUErRTtRQUMvRSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQU8sTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFRCxTQUFTLENBQUMsR0FBTTtRQUNkLE1BQU0sS0FBSyxHQUFzQixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUMxRCxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ1YsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUNmLENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3ZDLE1BQU0sQ0FBQyxtQkFBUSxDQUFDLGdCQUFnQixFQUFFLHVCQUF1QixDQUFDLENBQUM7UUFDN0QsQ0FBQztRQUNELE1BQU0sQ0FBQyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUVELElBQUksQ0FBQyxHQUFNO1FBQ1QsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssU0FBUyxDQUFDO0lBQzNDLENBQUM7SUFFRCxNQUFNLENBQUMsSUFBTyxFQUFFLElBQU87UUFDckIsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQsS0FBSyxDQUFDLEdBQU07UUFDVixNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVELElBQUksQ0FBQyxNQUFTLEVBQUUsTUFBUztRQUN2QixNQUFNLHFDQUFtQixDQUFDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFRCxLQUFLLENBQUMsTUFBUyxFQUFFLElBQXNCO1FBQ3JDLE1BQU0scUNBQW1CLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELFdBQVcsQ0FBQyxJQUFzQjtRQUNoQyxNQUFNLHFDQUFtQixDQUFDLE1BQU0sQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFRCxNQUFNLENBQUMsS0FBdUIsRUFBRSxLQUF1QjtRQUNyRCxNQUFNLHFDQUFtQixDQUFDLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FDRjtBQW5GRCxrQ0FtRkM7QUFFc0IsMkJBQUkiLCJmaWxlIjoibGliL3R5cGVzL2xpdGVyYWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiaW5jaWRlbnRcIjtcbmltcG9ydCB7Tm90SW1wbGVtZW50ZWRFcnJvcn0gZnJvbSBcIi4uL2Vycm9ycy9ub3QtaW1wbGVtZW50ZWRcIjtcbmltcG9ydCB7VW5rbm93bkZvcm1hdEVycm9yfSBmcm9tIFwiLi4vZXJyb3JzL3Vua25vd24tZm9ybWF0XCI7XG5pbXBvcnQge1NlcmlhbGl6YWJsZVR5cGUsIFZlcnNpb25lZFR5cGV9IGZyb20gXCIuLi9pbnRlcmZhY2VzXCI7XG5cbmV4cG9ydCB0eXBlIE5hbWUgPSBcImxpdGVyYWxcIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJsaXRlcmFsXCI7XG5leHBvcnQgbmFtZXNwYWNlIGJzb24ge1xuICBleHBvcnQgdHlwZSBJbnB1dCA9IGFueTtcbiAgZXhwb3J0IHR5cGUgT3V0cHV0ID0gYW55O1xufVxuZXhwb3J0IG5hbWVzcGFjZSBqc29uIHtcbiAgZXhwb3J0IHR5cGUgSW5wdXQgPSBhbnk7XG4gIGV4cG9ydCB0eXBlIE91dHB1dCA9IGFueTtcbiAgZXhwb3J0IHR5cGUgVHlwZSA9IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBuYW1lc3BhY2UgcXMge1xuICBleHBvcnQgdHlwZSBJbnB1dCA9IGFueTtcbiAgZXhwb3J0IHR5cGUgT3V0cHV0ID0gYW55O1xufVxuZXhwb3J0IHR5cGUgRGlmZiA9IGFueTtcblxuZXhwb3J0IGludGVyZmFjZSBPcHRpb25zPFQsIE91dHB1dCwgSW5wdXQgZXh0ZW5kcyBPdXRwdXQsIERpZmY+IHtcbiAgdHlwZTogVmVyc2lvbmVkVHlwZTxhbnksIE91dHB1dCwgSW5wdXQsIERpZmY+O1xuICB2YWx1ZTogVDtcbn1cblxuZXhwb3J0IGNsYXNzIExpdGVyYWxUeXBlPFQ+XG4gIGltcGxlbWVudHMgVmVyc2lvbmVkVHlwZTxULCBqc29uLklucHV0LCBqc29uLk91dHB1dCwgRGlmZj4sXG4gICAgU2VyaWFsaXphYmxlVHlwZTxULCBcImJzb25cIiwgYnNvbi5JbnB1dCwgYnNvbi5PdXRwdXQ+LFxuICAgIFNlcmlhbGl6YWJsZVR5cGU8VCwgXCJxc1wiLCBxcy5JbnB1dCwgcXMuT3V0cHV0PiB7XG4gIHJlYWRvbmx5IG5hbWU6IE5hbWUgPSBuYW1lO1xuICByZWFkb25seSB0eXBlOiBWZXJzaW9uZWRUeXBlPFQsIGFueSwgYW55LCBEaWZmPjtcbiAgcmVhZG9ubHkgdmFsdWU6IFQ7XG5cbiAgY29uc3RydWN0b3Iob3B0aW9uczogT3B0aW9uczxULCBhbnksIGFueSwgYW55Pikge1xuICAgIHRoaXMudHlwZSA9IG9wdGlvbnMudHlwZTtcbiAgICB0aGlzLnZhbHVlID0gb3B0aW9ucy52YWx1ZTtcbiAgfVxuXG4gIHRvSlNPTigpOiBqc29uLlR5cGUge1xuICAgIHRocm93IE5vdEltcGxlbWVudGVkRXJyb3IuY3JlYXRlKFwiTGl0ZXJhbFR5cGUjdG9KU09OXCIpO1xuICB9XG5cbiAgcmVhZFRydXN0ZWQoZm9ybWF0OiBcImJzb25cIiwgdmFsOiBic29uLk91dHB1dCk6IFQ7XG4gIHJlYWRUcnVzdGVkKGZvcm1hdDogXCJqc29uXCIsIHZhbDoganNvbi5PdXRwdXQpOiBUO1xuICByZWFkVHJ1c3RlZChmb3JtYXQ6IFwicXNcIiwgdmFsOiBxcy5PdXRwdXQpOiBUO1xuICByZWFkVHJ1c3RlZChmb3JtYXQ6IFwiYnNvblwiIHwgXCJqc29uXCIgfCBcInFzXCIsIGlucHV0OiBhbnkpOiBUIHtcbiAgICAvLyBUT0RPKGRlbXVyZ29zKTogQ2hlY2sgaWYgdGhlIGZvcm1hdCBpcyBzdXBwb3J0ZWQgaW5zdGVhZCBvZiBjYXN0aW5nIHRvIGBhbnlgXG4gICAgcmV0dXJuIHRoaXMudHlwZS5yZWFkVHJ1c3RlZCg8YW55PiBmb3JtYXQsIGlucHV0KTtcbiAgfVxuXG4gIHJlYWQoZm9ybWF0OiBcImJzb25cIiB8IFwianNvblwiIHwgXCJxc1wiLCBpbnB1dDogYW55KTogVCB7XG4gICAgc3dpdGNoIChmb3JtYXQpIHtcbiAgICAgIGNhc2UgXCJic29uXCI6XG4gICAgICBjYXNlIFwianNvblwiOlxuICAgICAgY2FzZSBcInFzXCI6XG4gICAgICAgIC8vIFRPRE8oZGVtdXJnb3MpOiBDaGVjayBpZiB0aGUgZm9ybWF0IGlzIHN1cHBvcnRlZCBpbnN0ZWFkIG9mIGNhc3RpbmcgdG8gYGFueWBcbiAgICAgICAgcmV0dXJuIHRoaXMudHlwZS5yZWFkKDxhbnk+IGZvcm1hdCwgaW5wdXQpO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgVW5rbm93bkZvcm1hdEVycm9yLmNyZWF0ZShmb3JtYXQpO1xuICAgIH1cbiAgfVxuXG4gIHdyaXRlKGZvcm1hdDogXCJic29uXCIsIHZhbDogVCk6IGJzb24uT3V0cHV0O1xuICB3cml0ZShmb3JtYXQ6IFwianNvblwiLCB2YWw6IFQpOiBqc29uLk91dHB1dDtcbiAgd3JpdGUoZm9ybWF0OiBcInFzXCIsIHZhbDogVCk6IHFzLk91dHB1dDtcbiAgd3JpdGUoZm9ybWF0OiBcImJzb25cIiB8IFwianNvblwiIHwgXCJxc1wiLCB2YWw6IFQpOiBhbnkge1xuICAgIC8vIFRPRE8oZGVtdXJnb3MpOiBDaGVjayBpZiB0aGUgZm9ybWF0IGlzIHN1cHBvcnRlZCBpbnN0ZWFkIG9mIGNhc3RpbmcgdG8gYGFueWBcbiAgICByZXR1cm4gdGhpcy50eXBlLndyaXRlKDxhbnk+IGZvcm1hdCwgdmFsKTtcbiAgfVxuXG4gIHRlc3RFcnJvcih2YWw6IFQpOiBFcnJvciB8IHVuZGVmaW5lZCB7XG4gICAgY29uc3QgZXJyb3I6IEVycm9yIHwgdW5kZWZpbmVkID0gdGhpcy50eXBlLnRlc3RFcnJvcih2YWwpO1xuICAgIGlmIChlcnJvcikge1xuICAgICAgcmV0dXJuIGVycm9yO1xuICAgIH1cbiAgICBpZiAoIXRoaXMudHlwZS5lcXVhbHModmFsLCB0aGlzLnZhbHVlKSkge1xuICAgICAgcmV0dXJuIEluY2lkZW50KFwiSW52YWxpZExpdGVyYWxcIiwgXCJJbnZhbGlkIGxpdGVyYWwgdmFsdWVcIik7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICB0ZXN0KHZhbDogVCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnRlc3RFcnJvcih2YWwpID09PSB1bmRlZmluZWQ7XG4gIH1cblxuICBlcXVhbHModmFsMTogVCwgdmFsMjogVCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnR5cGUuZXF1YWxzKHZhbDEsIHZhbDIpO1xuICB9XG5cbiAgY2xvbmUodmFsOiBUKTogVCB7XG4gICAgcmV0dXJuIHRoaXMudHlwZS5jbG9uZSh2YWwpO1xuICB9XG5cbiAgZGlmZihvbGRWYWw6IFQsIG5ld1ZhbDogVCk6IERpZmYgfCB1bmRlZmluZWQge1xuICAgIHRocm93IE5vdEltcGxlbWVudGVkRXJyb3IuY3JlYXRlKFwiTGl0ZXJhbFR5cGUjZGlmZlwiKTtcbiAgfVxuXG4gIHBhdGNoKG9sZFZhbDogVCwgZGlmZjogRGlmZiB8IHVuZGVmaW5lZCk6IFQge1xuICAgIHRocm93IE5vdEltcGxlbWVudGVkRXJyb3IuY3JlYXRlKFwiTGl0ZXJhbFR5cGUjcGF0Y2hcIik7XG4gIH1cblxuICByZXZlcnNlRGlmZihkaWZmOiBEaWZmIHwgdW5kZWZpbmVkKTogRGlmZiB8IHVuZGVmaW5lZCB7XG4gICAgdGhyb3cgTm90SW1wbGVtZW50ZWRFcnJvci5jcmVhdGUoXCJMaXRlcmFsVHlwZSNyZXZlcnNlRGlmZlwiKTtcbiAgfVxuXG4gIHNxdWFzaChkaWZmMTogRGlmZiB8IHVuZGVmaW5lZCwgZGlmZjI6IERpZmYgfCB1bmRlZmluZWQpOiBEaWZmIHwgdW5kZWZpbmVkIHtcbiAgICB0aHJvdyBOb3RJbXBsZW1lbnRlZEVycm9yLmNyZWF0ZShcIkxpdGVyYWxUeXBlI3NxdWFzaFwiKTtcbiAgfVxufVxuXG5leHBvcnQge0xpdGVyYWxUeXBlIGFzIFR5cGV9O1xuIl19


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const not_implemented_1 = __webpack_require__(10);
const wrong_type_1 = __webpack_require__(8);
const rename_1 = __webpack_require__(53);
exports.name = "simple-enum";
/**
 * Supports enums from keys that are valid Javascript identifiers to unique integer values
 */
class SimpleEnumType {
    constructor(options) {
        this.name = exports.name;
        this.enum = options.enum;
        this.rename = options.rename;
        this.outputNameToValue = {};
        this.valueToOutputName = {};
        for (const key in options.enum) {
            if (/^\d+$/.test(key)) {
                continue;
            }
            const value = options.enum[key];
            if (typeof value !== "number") {
                throw wrong_type_1.WrongTypeError.create("number", value);
            }
            if (!options.enum.hasOwnProperty(value) || !options.enum.hasOwnProperty(value)) {
                throw new incident_1.Incident("NotSimpleEnum", "Not owned key or value");
            }
            if (options.enum[value] !== key) {
                throw new incident_1.Incident("NotReversibleEnum", "enum[enum[key]] !== key");
            }
            let renamed;
            if (options.rename === undefined) {
                renamed = key;
            }
            else {
                renamed = rename_1.rename(key, options.rename);
            }
            this.outputNameToValue[renamed] = value;
            this.valueToOutputName[value] = renamed;
        }
    }
    static fromJSON() {
        throw not_implemented_1.NotImplementedError.create("SimpleEnumType.fromJSON");
    }
    toJSON() {
        throw not_implemented_1.NotImplementedError.create("SimpleEnumType#toJSON");
    }
    readTrusted(format, input) {
        return this.outputNameToValue[input];
    }
    read(format, input) {
        if (typeof input !== "string") {
            throw wrong_type_1.WrongTypeError.create("string", input);
        }
        if (!this.outputNameToValue.hasOwnProperty(input)) {
            throw incident_1.Incident("Unknown enum variant name", input);
        }
        return this.outputNameToValue[input];
    }
    write(format, val) {
        return this.valueToOutputName[val];
    }
    testError(val) {
        if (typeof val !== "number") {
            return wrong_type_1.WrongTypeError.create("number", val);
        }
        // TODO(demurgos): Remove <number> once typedoc supports it
        if (isNaN(val) || val === Infinity || val === -Infinity || (val | 0) !== val) {
            return wrong_type_1.WrongTypeError.create("int32", val);
        }
        if (!this.enum.hasOwnProperty(val)) {
            return incident_1.Incident("Unknown enum variant value", val);
        }
        return undefined;
    }
    test(val) {
        return typeof val === "number" && this.enum.hasOwnProperty(val);
    }
    equals(val1, val2) {
        return val1 === val2;
    }
    clone(val) {
        return val;
    }
    diff(oldVal, newVal) {
        return newVal === oldVal ? undefined : newVal - oldVal;
    }
    patch(oldVal, diff) {
        return diff === undefined ? oldVal : oldVal + diff;
    }
    reverseDiff(diff) {
        return diff && -diff;
    }
    squash(diff1, diff2) {
        if (diff1 === undefined) {
            return diff2;
        }
        else if (diff2 === undefined) {
            return diff1;
        }
        return diff2 === -diff1 ? undefined : diff1 + diff2;
    }
}
exports.SimpleEnumType = SimpleEnumType;
exports.Type = SimpleEnumType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const not_implemented_1 = __webpack_require__(10);
const unknown_format_1 = __webpack_require__(7);
exports.name = "union";
class UnionType {
    constructor(options) {
        this.name = exports.name;
        this.variants = options.variants;
        this.matcher = options.matcher;
        this.trustedMatcher = options.trustedMatcher || this.matcher;
        this.readMatcher = options.readMatcher;
        this.readTrustedMatcher = options.readTrustedMatcher || this.readMatcher;
    }
    toJSON() {
        throw not_implemented_1.NotImplementedError.create("UnionType#toJSON");
    }
    readTrusted(format, input) {
        // TODO(demurgos): Check if the format is supported instead of casting to `any`
        return this.readTrustedMatcher(format, input, this.variants).readTrusted(format, input);
    }
    read(format, input) {
        switch (format) {
            case "bson":
            case "json":
            case "qs":
                // TODO(demurgos): Check if the format is supported instead of casting to `any`
                const type = this.readMatcher(format, input, this.variants);
                if (type === undefined) {
                    throw incident_1.Incident("UnknownUnionVariant", "Unknown union variant");
                }
                return type.read(format, input);
            default:
                throw unknown_format_1.UnknownFormatError.create(format);
        }
    }
    write(format, val) {
        // TODO(demurgos): Check if the format is supported instead of casting to `any`
        return this.trustedMatcher(val, this.variants).write(format, val);
    }
    testError(val) {
        const type = this.matcher(val, this.variants);
        if (type === undefined) {
            return incident_1.Incident("UnknownUnionVariant", "Unknown union variant");
        }
        return type.testError(val);
    }
    test(val) {
        const type = this.matcher(val, this.variants);
        if (type === undefined) {
            return false;
        }
        return type.test(val);
    }
    // TODO: Always return true ?
    equals(val1, val2) {
        const type1 = this.trustedMatcher(val1, this.variants);
        const type2 = this.trustedMatcher(val2, this.variants);
        return type1 === type2 && type1.equals(val1, val2);
    }
    clone(val) {
        return this.trustedMatcher(val, this.variants).clone(val);
    }
    diff(oldVal, newVal) {
        throw not_implemented_1.NotImplementedError.create("UnionType#diff");
    }
    patch(oldVal, diff) {
        throw not_implemented_1.NotImplementedError.create("UnionType#patch");
    }
    reverseDiff(diff) {
        throw not_implemented_1.NotImplementedError.create("UnionType#reverseDiff");
    }
    squash(diff1, diff2) {
        throw not_implemented_1.NotImplementedError.create("UnionType#squash");
    }
}
exports.UnionType = UnionType;
exports.Type = UnionType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var CatchTargetType;
(function (CatchTargetType) {
    CatchTargetType[CatchTargetType["Register"] = 0] = "Register";
    CatchTargetType[CatchTargetType["Variable"] = 1] = "Variable";
})(CatchTargetType = exports.CatchTargetType || (exports.CatchTargetType = {}));
(function (CatchTargetType) {
    CatchTargetType.type = new kryo_1.SimpleEnumType({
        enum: CatchTargetType,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(CatchTargetType = exports.CatchTargetType || (exports.CatchTargetType = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2NhdGNoLXRhcmdldHMvX3R5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBK0M7QUFFL0MsSUFBWSxlQUdYO0FBSEQsV0FBWSxlQUFlO0lBQ3pCLDZEQUFRLENBQUE7SUFDUiw2REFBUSxDQUFBO0FBQ1YsQ0FBQyxFQUhXLGVBQWUsR0FBZix1QkFBZSxLQUFmLHVCQUFlLFFBRzFCO0FBRUQsV0FBaUIsZUFBZTtJQUdqQixvQkFBSSxHQUFvQyxJQUFJLHFCQUFjLENBQWtCO1FBQ3ZGLElBQUksRUFBRSxlQUFlO1FBQ3JCLE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVBnQixlQUFlLEdBQWYsdUJBQWUsS0FBZix1QkFBZSxRQU8vQiIsImZpbGUiOiJsaWIvYXZtMS9jYXRjaC10YXJnZXRzL190eXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIFNpbXBsZUVudW1UeXBlfSBmcm9tIFwia3J5b1wiO1xuXG5leHBvcnQgZW51bSBDYXRjaFRhcmdldFR5cGUge1xuICBSZWdpc3RlcixcbiAgVmFyaWFibGUsXG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ2F0Y2hUYXJnZXRUeXBlIHtcbiAgZXhwb3J0IHR5cGUgSnNvbiA9IFwicmVnaXN0ZXJcIiB8IFwidmFyaWFibGVcIjtcblxuICBleHBvcnQgY29uc3QgdHlwZTogU2ltcGxlRW51bVR5cGU8Q2F0Y2hUYXJnZXRUeXBlPiA9IG5ldyBTaW1wbGVFbnVtVHlwZTxDYXRjaFRhcmdldFR5cGU+KHtcbiAgICBlbnVtOiBDYXRjaFRhcmdldFR5cGUsXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var SRgb8;
(function (SRgb8) {
    SRgb8.type = new kryo_1.DocumentType({
        properties: {
            r: { type: new kryo_1.Int32Type() },
            g: { type: new kryo_1.Int32Type() },
            b: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(SRgb8 = exports.SRgb8 || (exports.SRgb8 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zLXJnYjgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBd0Q7QUFNeEQsSUFBaUIsS0FBSyxDQWVyQjtBQWZELFdBQWlCLEtBQUs7SUFPUCxVQUFJLEdBQXdCLElBQUksbUJBQVksQ0FBUTtRQUMvRCxVQUFVLEVBQUU7WUFDVixDQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDMUIsQ0FBQyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQzFCLENBQUMsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztTQUMzQjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWZnQixLQUFLLEdBQUwsYUFBSyxLQUFMLGFBQUssUUFlckIiLCJmaWxlIjoibGliL3MtcmdiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7U1JnYiBhcyBfU1JnYiwgVWludDh9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNSZ2I4IGV4dGVuZHMgX1NSZ2I8VWludDg+IHtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTUmdiOCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgcjogbnVtYmVyO1xuICAgIGc6IG51bWJlcjtcbiAgICBiOiBudW1iZXI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFNSZ2I4PiA9IG5ldyBEb2N1bWVudFR5cGU8U1JnYjg+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICByOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIGc6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgYjoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const cap_style_1 = __webpack_require__(109);
const fill_style_1 = __webpack_require__(43);
const join_style_1 = __webpack_require__(110);
var LineStyle;
(function (LineStyle) {
    LineStyle.type = new kryo_1.DocumentType({
        properties: {
            width: { type: new kryo_1.Int32Type() },
            startCap: { type: cap_style_1.CapStyle.type },
            endCap: { type: cap_style_1.CapStyle.type },
            join: { type: join_style_1.JoinStyle.type },
            noHScale: { type: new kryo_1.BooleanType() },
            noVScale: { type: new kryo_1.BooleanType() },
            noClose: { type: new kryo_1.BooleanType() },
            pixelHinting: { type: new kryo_1.BooleanType() },
            fill: { type: fill_style_1.FillStyle.type },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(LineStyle = exports.LineStyle || (exports.LineStyle = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9saW5lLXN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXFFO0FBRXJFLDJDQUFxQztBQUNyQyw2Q0FBdUM7QUFDdkMsNkNBQXVDO0FBY3ZDLElBQWlCLFNBQVMsQ0EyQnpCO0FBM0JELFdBQWlCLFNBQVM7SUFhWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDOUIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLG9CQUFRLENBQUMsSUFBSSxFQUFDO1lBQy9CLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxvQkFBUSxDQUFDLElBQUksRUFBQztZQUM3QixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsc0JBQVMsQ0FBQyxJQUFJLEVBQUM7WUFDNUIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ25DLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNuQyxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDbEMsWUFBWSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ3ZDLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxzQkFBUyxDQUFDLElBQUksRUFBQztTQUM3QjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQTNCZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUEyQnpCIiwiZmlsZSI6ImxpYi9saW5lLXN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtCb29sZWFuVHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDE2fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7Q2FwU3R5bGV9IGZyb20gXCIuL2NhcC1zdHlsZVwiO1xuaW1wb3J0IHtGaWxsU3R5bGV9IGZyb20gXCIuL2ZpbGwtc3R5bGVcIjtcbmltcG9ydCB7Sm9pblN0eWxlfSBmcm9tIFwiLi9qb2luLXN0eWxlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTGluZVN0eWxlIHtcbiAgd2lkdGg6IFVpbnQxNjtcbiAgc3RhcnRDYXA6IENhcFN0eWxlO1xuICBlbmRDYXA6IENhcFN0eWxlO1xuICBqb2luOiBKb2luU3R5bGU7XG4gIG5vSFNjYWxlOiBib29sZWFuO1xuICBub1ZTY2FsZTogYm9vbGVhbjtcbiAgbm9DbG9zZTogYm9vbGVhbjtcbiAgcGl4ZWxIaW50aW5nOiBib29sZWFuO1xuICBmaWxsOiBGaWxsU3R5bGU7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgTGluZVN0eWxlIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB3aWR0aDogbnVtYmVyO1xuICAgIHN0YXJ0X2NhcDogQ2FwU3R5bGUuSnNvbjtcbiAgICBlbmRfY2FwOiBDYXBTdHlsZS5Kc29uO1xuICAgIGpvaW46IEpvaW5TdHlsZS5Kc29uO1xuICAgIG5vX2hfc2NhbGU6IGJvb2xlYW47XG4gICAgbm9fdl9zY2FsZTogYm9vbGVhbjtcbiAgICBub19jbG9zZTogYm9vbGVhbjtcbiAgICBwaXhlbF9oaW50aW5nOiBib29sZWFuO1xuICAgIGZpbGw6IEZpbGxTdHlsZS5Kc29uO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxMaW5lU3R5bGU+ID0gbmV3IERvY3VtZW50VHlwZTxMaW5lU3R5bGU+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB3aWR0aDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICBzdGFydENhcDoge3R5cGU6IENhcFN0eWxlLnR5cGV9LFxuICAgICAgZW5kQ2FwOiB7dHlwZTogQ2FwU3R5bGUudHlwZX0sXG4gICAgICBqb2luOiB7dHlwZTogSm9pblN0eWxlLnR5cGV9LFxuICAgICAgbm9IU2NhbGU6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBub1ZTY2FsZToge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIG5vQ2xvc2U6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBwaXhlbEhpbnRpbmc6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBmaWxsOiB7dHlwZTogRmlsbFN0eWxlLnR5cGV9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const shape_record_1 = __webpack_require__(61);
var Glyph;
(function (Glyph) {
    Glyph.type = new kryo_1.DocumentType({
        properties: {
            records: { type: new kryo_1.ArrayType({ itemType: shape_record_1.ShapeRecord.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Glyph = exports.Glyph || (exports.Glyph = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9nbHlwaC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUF3RDtBQUN4RCxpREFBMkM7QUFNM0MsSUFBaUIsS0FBSyxDQVdyQjtBQVhELFdBQWlCLEtBQUs7SUFLUCxVQUFJLEdBQXdCLElBQUksbUJBQVksQ0FBUTtRQUMvRCxVQUFVLEVBQUU7WUFDVixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLDBCQUFXLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQ2xGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLEtBQUssR0FBTCxhQUFLLEtBQUwsYUFBSyxRQVdyQiIsImZpbGUiOiJsaWIvZ2x5cGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FycmF5VHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1NoYXBlUmVjb3JkfSBmcm9tIFwiLi9zaGFwZS1yZWNvcmRcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHbHlwaCB7XG4gIHJlY29yZHM6IFNoYXBlUmVjb3JkW107XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2x5cGgge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHJlY29yZHM6IFNoYXBlUmVjb3JkLkpzb25bXTtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8R2x5cGg+ID0gbmV3IERvY3VtZW50VHlwZTxHbHlwaD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHJlY29yZHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogU2hhcGVSZWNvcmQudHlwZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const curved_edge_1 = __webpack_require__(106);
const straight_edge_1 = __webpack_require__(107);
const style_change_1 = __webpack_require__(108);
var ShapeRecord;
(function (ShapeRecord) {
    ShapeRecord.type = new kryo_1.TaggedUnionType({
        variants: [
            curved_edge_1.CurvedEdge.type,
            straight_edge_1.StraightEdge.type,
            style_change_1.StyleChange.type,
        ],
        tag: "type",
    });
})(ShapeRecord = exports.ShapeRecord || (exports.ShapeRecord = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zaGFwZS1yZWNvcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBcUM7QUFDckMsNkRBQXVEO0FBQ3ZELGlFQUEyRDtBQUMzRCwrREFBeUQ7QUFPekQsSUFBaUIsV0FBVyxDQWMzQjtBQWRELFdBQWlCLFdBQVc7SUFNYixnQkFBSSxHQUFpQyxJQUFJLHNCQUFlLENBQWM7UUFDakYsUUFBUSxFQUFFO1lBQ1Isd0JBQVUsQ0FBQyxJQUFJO1lBQ2YsNEJBQVksQ0FBQyxJQUFJO1lBQ2pCLDBCQUFXLENBQUMsSUFBSTtTQUNqQjtRQUNELEdBQUcsRUFBRSxNQUFNO0tBQ1osQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWRnQixXQUFXLEdBQVgsbUJBQVcsS0FBWCxtQkFBVyxRQWMzQiIsImZpbGUiOiJsaWIvc2hhcGUtcmVjb3JkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUYWdnZWRVbmlvblR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0N1cnZlZEVkZ2V9IGZyb20gXCIuL3NoYXBlLXJlY29yZHMvY3VydmVkLWVkZ2VcIjtcbmltcG9ydCB7U3RyYWlnaHRFZGdlfSBmcm9tIFwiLi9zaGFwZS1yZWNvcmRzL3N0cmFpZ2h0LWVkZ2VcIjtcbmltcG9ydCB7U3R5bGVDaGFuZ2V9IGZyb20gXCIuL3NoYXBlLXJlY29yZHMvc3R5bGUtY2hhbmdlXCI7XG5cbmV4cG9ydCB0eXBlIFNoYXBlUmVjb3JkID1cbiAgQ3VydmVkRWRnZVxuICB8IFN0cmFpZ2h0RWRnZVxuICB8IFN0eWxlQ2hhbmdlO1xuXG5leHBvcnQgbmFtZXNwYWNlIFNoYXBlUmVjb3JkIHtcbiAgZXhwb3J0IHR5cGUgSnNvbiA9XG4gICAgQ3VydmVkRWRnZS5Kc29uXG4gICAgfCBTdHJhaWdodEVkZ2UuSnNvblxuICAgIHwgU3R5bGVDaGFuZ2UuSnNvbjtcblxuICBleHBvcnQgY29uc3QgdHlwZTogVGFnZ2VkVW5pb25UeXBlPFNoYXBlUmVjb3JkPiA9IG5ldyBUYWdnZWRVbmlvblR5cGU8U2hhcGVSZWNvcmQ+KHtcbiAgICB2YXJpYW50czogW1xuICAgICAgQ3VydmVkRWRnZS50eXBlLFxuICAgICAgU3RyYWlnaHRFZGdlLnR5cGUsXG4gICAgICBTdHlsZUNoYW5nZS50eXBlLFxuICAgIF0sXG4gICAgdGFnOiBcInR5cGVcIixcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var LanguageCode;
(function (LanguageCode) {
    LanguageCode[LanguageCode["Auto"] = 0] = "Auto";
    LanguageCode[LanguageCode["Latin"] = 1] = "Latin";
    LanguageCode[LanguageCode["Japanese"] = 2] = "Japanese";
    LanguageCode[LanguageCode["Korean"] = 3] = "Korean";
    LanguageCode[LanguageCode["SimplifiedChinese"] = 4] = "SimplifiedChinese";
    LanguageCode[LanguageCode["TraditionalChinese"] = 5] = "TraditionalChinese";
})(LanguageCode = exports.LanguageCode || (exports.LanguageCode = {}));
(function (LanguageCode) {
    LanguageCode.type = new kryo_1.SimpleEnumType({
        enum: LanguageCode,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(LanguageCode = exports.LanguageCode || (exports.LanguageCode = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9sYW5ndWFnZS1jb2RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQStDO0FBRS9DLElBQVksWUFPWDtBQVBELFdBQVksWUFBWTtJQUN0QiwrQ0FBSSxDQUFBO0lBQ0osaURBQUssQ0FBQTtJQUNMLHVEQUFRLENBQUE7SUFDUixtREFBTSxDQUFBO0lBQ04seUVBQWlCLENBQUE7SUFDakIsMkVBQWtCLENBQUE7QUFDcEIsQ0FBQyxFQVBXLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBT3ZCO0FBRUQsV0FBaUIsWUFBWTtJQVNkLGlCQUFJLEdBQWlDLElBQUkscUJBQWMsQ0FBZTtRQUNqRixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFiZ0IsWUFBWSxHQUFaLG9CQUFZLEtBQVosb0JBQVksUUFhNUIiLCJmaWxlIjoibGliL2xhbmd1YWdlLWNvZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgU2ltcGxlRW51bVR5cGV9IGZyb20gXCJrcnlvXCI7XG5cbmV4cG9ydCBlbnVtIExhbmd1YWdlQ29kZSB7XG4gIEF1dG8sXG4gIExhdGluLFxuICBKYXBhbmVzZSxcbiAgS29yZWFuLFxuICBTaW1wbGlmaWVkQ2hpbmVzZSxcbiAgVHJhZGl0aW9uYWxDaGluZXNlLFxufVxuXG5leHBvcnQgbmFtZXNwYWNlIExhbmd1YWdlQ29kZSB7XG4gIGV4cG9ydCB0eXBlIEpzb24gPVxuICAgIFwiYXV0b1wiXG4gICAgfCBcImxhdGluXCJcbiAgICB8IFwiamFwYW5lc2VcIlxuICAgIHwgXCJrb3JlYW5cIlxuICAgIHwgXCJzaW1wbGlmaWVkLWNoaW5lc2VcIlxuICAgIHwgXCJ0cmFkaXRpb25hbC1jaGluZXNlXCI7XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IFNpbXBsZUVudW1UeXBlPExhbmd1YWdlQ29kZT4gPSBuZXcgU2ltcGxlRW51bVR5cGU8TGFuZ3VhZ2VDb2RlPih7XG4gICAgZW51bTogTGFuZ3VhZ2VDb2RlLFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const fixed16p16_1 = __webpack_require__(18);
var Matrix;
(function (Matrix) {
    Matrix.type = new kryo_1.DocumentType({
        properties: {
            scaleX: { type: fixed16p16_1.Fixed16P16.type },
            scaleY: { type: fixed16p16_1.Fixed16P16.type },
            rotateSkew0: { type: fixed16p16_1.Fixed16P16.type },
            rotateSkew1: { type: fixed16p16_1.Fixed16P16.type },
            translateX: { type: new kryo_1.Int32Type() },
            translateY: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Matrix = exports.Matrix || (exports.Matrix = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9tYXRyaXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBd0Q7QUFFeEQseURBQW9EO0FBV3BELElBQWlCLE1BQU0sQ0FxQnRCO0FBckJELFdBQWlCLE1BQU07SUFVUixXQUFJLEdBQXlCLElBQUksbUJBQVksQ0FBUztRQUNqRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsQ0FBQyxJQUFJLEVBQUM7WUFDL0IsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLENBQUMsSUFBSSxFQUFDO1lBQy9CLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxDQUFDLElBQUksRUFBQztZQUNwQyxXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsQ0FBQyxJQUFJLEVBQUM7WUFDcEMsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQ25DLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztTQUNwQztRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQXJCZ0IsTUFBTSxHQUFOLGNBQU0sS0FBTixjQUFNLFFBcUJ0QiIsImZpbGUiOiJsaWIvbWF0cml4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgSW50MzJUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtTaW50MzJ9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtGaXhlZDE2UDE2fSBmcm9tIFwiLi9maXhlZC1wb2ludC9maXhlZDE2cDE2XCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWF0cml4IHtcbiAgc2NhbGVYOiBGaXhlZDE2UDE2O1xuICBzY2FsZVk6IEZpeGVkMTZQMTY7XG4gIHJvdGF0ZVNrZXcwOiBGaXhlZDE2UDE2O1xuICByb3RhdGVTa2V3MTogRml4ZWQxNlAxNjtcbiAgdHJhbnNsYXRlWDogU2ludDMyO1xuICB0cmFuc2xhdGVZOiBTaW50MzI7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgTWF0cml4IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBzY2FsZV94OiBudW1iZXI7XG4gICAgc2NhbGVfeTogbnVtYmVyO1xuICAgIHJvdGF0ZV9za2V3MDogbnVtYmVyO1xuICAgIHJvdGF0ZV9za2V3MTogbnVtYmVyO1xuICAgIHRyYW5zbGF0ZV94OiBudW1iZXI7XG4gICAgdHJhbnNsYXRlX3k6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8TWF0cml4PiA9IG5ldyBEb2N1bWVudFR5cGU8TWF0cml4Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgc2NhbGVYOiB7dHlwZTogRml4ZWQxNlAxNi50eXBlfSxcbiAgICAgIHNjYWxlWToge3R5cGU6IEZpeGVkMTZQMTYudHlwZX0sXG4gICAgICByb3RhdGVTa2V3MDoge3R5cGU6IEZpeGVkMTZQMTYudHlwZX0sXG4gICAgICByb3RhdGVTa2V3MToge3R5cGU6IEZpeGVkMTZQMTYudHlwZX0sXG4gICAgICB0cmFuc2xhdGVYOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIHRyYW5zbGF0ZVk6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var NamedId;
(function (NamedId) {
    NamedId.type = new kryo_1.DocumentType({
        properties: {
            id: { type: new kryo_1.Int32Type() },
            name: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(NamedId = exports.NamedId || (exports.NamedId = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9uYW1lZC1pZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUF3RTtBQVF4RSxJQUFpQixPQUFPLENBYXZCO0FBYkQsV0FBaUIsT0FBTztJQU1ULFlBQUksR0FBMEIsSUFBSSxtQkFBWSxDQUFVO1FBQ25FLFVBQVUsRUFBRTtZQUNWLEVBQUUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztZQUMzQixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7U0FDeEQ7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFiZ0IsT0FBTyxHQUFQLGVBQU8sS0FBUCxlQUFPLFFBYXZCIiwiZmlsZSI6ImxpYi9uYW1lZC1pZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZSwgVWNzMlN0cmluZ1R5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1VpbnQxNn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmFtZWRJZCB7XG4gIGlkOiBVaW50MTY7XG4gIG5hbWU6IHN0cmluZztcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBOYW1lZElkIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBpZDogbnVtYmVyO1xuICAgIG5hbWU6IHN0cmluZztcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8TmFtZWRJZD4gPSBuZXcgRG9jdW1lbnRUeXBlPE5hbWVkSWQ+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBpZDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICBuYW1lOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const fixed8p8_1 = __webpack_require__(15);
var ColorTransform;
(function (ColorTransform) {
    ColorTransform.type = new kryo_1.DocumentType({
        properties: {
            redMult: { type: fixed8p8_1.Fixed8P8.type },
            greenMult: { type: fixed8p8_1.Fixed8P8.type },
            blueMult: { type: fixed8p8_1.Fixed8P8.type },
            redAdd: { type: new kryo_1.Int32Type() },
            greenAdd: { type: new kryo_1.Int32Type() },
            blueAdd: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ColorTransform = exports.ColorTransform || (exports.ColorTransform = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb2xvci10cmFuc2Zvcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBd0Q7QUFFeEQscURBQWdEO0FBV2hELElBQWlCLGNBQWMsQ0FxQjlCO0FBckJELFdBQWlCLGNBQWM7SUFVaEIsbUJBQUksR0FBaUMsSUFBSSxtQkFBWSxDQUFpQjtRQUNqRixVQUFVLEVBQUU7WUFDVixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsbUJBQVEsQ0FBQyxJQUFJLEVBQUM7WUFDOUIsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLG1CQUFRLENBQUMsSUFBSSxFQUFDO1lBQ2hDLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxtQkFBUSxDQUFDLElBQUksRUFBQztZQUMvQixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDL0IsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQ2pDLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztTQUNqQztRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQXJCZ0IsY0FBYyxHQUFkLHNCQUFjLEtBQWQsc0JBQWMsUUFxQjlCIiwiZmlsZSI6ImxpYi9jb2xvci10cmFuc2Zvcm0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1NpbnQxNn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0ZpeGVkOFA4fSBmcm9tIFwiLi9maXhlZC1wb2ludC9maXhlZDhwOFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbG9yVHJhbnNmb3JtIHtcbiAgcmVkTXVsdDogRml4ZWQ4UDg7XG4gIGdyZWVuTXVsdDogRml4ZWQ4UDg7XG4gIGJsdWVNdWx0OiBGaXhlZDhQODtcbiAgcmVkQWRkOiBTaW50MTY7XG4gIGdyZWVuQWRkOiBTaW50MTY7XG4gIGJsdWVBZGQ6IFNpbnQxNjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDb2xvclRyYW5zZm9ybSB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgcmVkX211bHQ6IG51bWJlcjtcbiAgICBncmVlbl9tdWx0OiBudW1iZXI7XG4gICAgYmx1ZV9tdWx0OiBudW1iZXI7XG4gICAgcmVkX2FkZDogbnVtYmVyO1xuICAgIGdyZWVuX2FkZDogbnVtYmVyO1xuICAgIGJsdWVfYWRkOiBudW1iZXI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPENvbG9yVHJhbnNmb3JtPiA9IG5ldyBEb2N1bWVudFR5cGU8Q29sb3JUcmFuc2Zvcm0+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICByZWRNdWx0OiB7dHlwZTogRml4ZWQ4UDgudHlwZX0sXG4gICAgICBncmVlbk11bHQ6IHt0eXBlOiBGaXhlZDhQOC50eXBlfSxcbiAgICAgIGJsdWVNdWx0OiB7dHlwZTogRml4ZWQ4UDgudHlwZX0sXG4gICAgICByZWRBZGQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgZ3JlZW5BZGQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgYmx1ZUFkZDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(4)
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var IncompleteStreamError;
(function (IncompleteStreamError) {
    IncompleteStreamError.name = "IncompleteStream";
    function format({ needed }) {
        return `Need ${needed === undefined ? "" : needed} more bytes to process the stream`;
    }
    IncompleteStreamError.format = format;
    function create(needed) {
        return new incident_1.Incident(IncompleteStreamError.name, { needed }, format);
    }
    IncompleteStreamError.create = create;
})(IncompleteStreamError = exports.IncompleteStreamError || (exports.IncompleteStreamError = {}));
exports.default = IncompleteStreamError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvaW5jb21wbGV0ZS1zdHJlYW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBa0M7QUFFbEMsSUFBaUIscUJBQXFCLENBa0JyQztBQWxCRCxXQUFpQixxQkFBcUI7SUFFdkIsMEJBQUksR0FBUyxrQkFBa0IsQ0FBQztJQVM3QyxnQkFBdUIsRUFBQyxNQUFNLEVBQU87UUFDbkMsTUFBTSxDQUFDLFFBQVEsTUFBTSxLQUFLLFNBQVMsR0FBRyxFQUFFLEdBQUcsTUFBTSxtQ0FBbUMsQ0FBQztJQUN2RixDQUFDO0lBRmUsNEJBQU0sU0FFckIsQ0FBQTtJQUVELGdCQUF1QixNQUFlO1FBQ3BDLE1BQU0sQ0FBQyxJQUFJLG1CQUFRLENBQUMsc0JBQUEsSUFBSSxFQUFFLEVBQUMsTUFBTSxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUZlLDRCQUFNLFNBRXJCLENBQUE7QUFDSCxDQUFDLEVBbEJnQixxQkFBcUIsR0FBckIsNkJBQXFCLEtBQXJCLDZCQUFxQixRQWtCckM7QUFHRCxrQkFBZSxxQkFBcUIsQ0FBQyIsImZpbGUiOiJsaWIvZXJyb3JzL2luY29tcGxldGUtc3RyZWFtLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmNpZGVudH0gZnJvbSBcImluY2lkZW50XCI7XG5cbmV4cG9ydCBuYW1lc3BhY2UgSW5jb21wbGV0ZVN0cmVhbUVycm9yIHtcbiAgZXhwb3J0IHR5cGUgTmFtZSA9IFwiSW5jb21wbGV0ZVN0cmVhbVwiO1xuICBleHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiSW5jb21wbGV0ZVN0cmVhbVwiO1xuXG4gIGV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gICAgbmVlZGVkPzogbnVtYmVyO1xuICB9XG5cbiAgZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG4gIGV4cG9ydCB0eXBlIFR5cGUgPSBJbmNpZGVudDxOYW1lLCBEYXRhLCBDYXVzZT47XG5cbiAgZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7bmVlZGVkfTogRGF0YSkge1xuICAgIHJldHVybiBgTmVlZCAke25lZWRlZCA9PT0gdW5kZWZpbmVkID8gXCJcIiA6IG5lZWRlZH0gbW9yZSBieXRlcyB0byBwcm9jZXNzIHRoZSBzdHJlYW1gO1xuICB9XG5cbiAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZShuZWVkZWQ/OiBudW1iZXIpOiBUeXBlIHtcbiAgICByZXR1cm4gbmV3IEluY2lkZW50KG5hbWUsIHtuZWVkZWR9LCBmb3JtYXQpO1xuICB9XG59XG5leHBvcnQgdHlwZSBJbmNvbXBsZXRlU3RyZWFtRXJyb3IgPSBJbmNvbXBsZXRlU3RyZWFtRXJyb3IuVHlwZTtcblxuZXhwb3J0IGRlZmF1bHQgSW5jb21wbGV0ZVN0cmVhbUVycm9yO1xuIl19


/***/ }),
/* 68 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = fromNormalizedColor;
/**
 * Converts a normalized color a css color
 */
function fromNormalizedColor(color) {
    return `rgba(${color.r * 255}, ${color.g * 255}, ${color.b * 255}, ${color.a})`;
}


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const invalid_array_item_1 = __webpack_require__(70);
const max_array_length_1 = __webpack_require__(47);
const not_implemented_1 = __webpack_require__(10);
const unknown_format_1 = __webpack_require__(7);
const wrong_type_1 = __webpack_require__(8);
exports.name = "array";
class ArrayType {
    constructor(options) {
        this.name = exports.name;
        this.itemType = options.itemType;
        this.maxLength = options.maxLength;
    }
    toJSON() {
        throw not_implemented_1.NotImplementedError.create("ArrayType#toJSON");
    }
    readTrusted(format, input) {
        switch (format) {
            case "bson":
            case "json":
                // TODO(demurgos): Check if the format is supported instead of casting to `any`
                return input.map((item) => this.itemType.readTrusted(format, item));
            case "qs":
                if (Array.isArray(input)) {
                    // TODO(demurgos): Check if the format is supported instead of casting to `any`
                    return input.map((item) => this.itemType.readTrusted(format, item));
                }
                else {
                    return [];
                }
            default:
                return undefined;
        }
    }
    read(format, input) {
        let result;
        switch (format) {
            case "bson":
            case "json":
                if (!Array.isArray(input)) {
                    throw wrong_type_1.WrongTypeError.create("array", input);
                }
                // TODO(demurgos): Check if the format is supported instead of casting to `any`
                result = input.map((item) => this.itemType.read(format, item));
                break;
            case "qs":
                if (Array.isArray(input)) {
                    // TODO(demurgos): Check if the format is supported instead of casting to `any`
                    result = input.map((item) => this.itemType.read(format, item));
                }
                else if (input === undefined) {
                    result = [];
                }
                else {
                    throw wrong_type_1.WrongTypeError.create("array | undefined", input);
                }
                break;
            default:
                throw unknown_format_1.UnknownFormatError.create(format);
        }
        const error = this.testError(result);
        if (error !== undefined) {
            throw error;
        }
        return result;
    }
    write(format, val) {
        switch (format) {
            case "bson":
            case "json":
                // TODO(demurgos): Check if the format is supported instead of casting to `any`
                return val.map((item) => this.itemType.write(format, item));
            case "qs":
                if (val.length > 0) {
                    // TODO(demurgos): Check if the format is supported instead of casting to `any`
                    return val.map((item) => this.itemType.write(format, item));
                }
                else {
                    return undefined;
                }
            default:
                return undefined;
        }
    }
    testError(val) {
        if (!Array.isArray(val)) {
            return wrong_type_1.WrongTypeError.create("array", val);
        }
        if (this.maxLength !== undefined && val.length > this.maxLength) {
            return max_array_length_1.MaxArrayLengthError.create(val, this.maxLength);
        }
        for (let i = 0; i < val.length; i++) {
            const error = this.itemType.testError(val[i]);
            if (error !== undefined) {
                return invalid_array_item_1.InvalidArrayItemError.create(i, val[i]);
            }
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        if (val2.length !== val1.length) {
            return false;
        }
        for (let i = 0; i < val1.length; i++) {
            if (val2[i] !== val1[i]) {
                return false;
            }
        }
        return true;
    }
    clone(val) {
        return val.map((item) => this.itemType.clone(item));
    }
    /**
     * @param oldVal
     * @param newVal
     * @returns `true` if there is a difference, `undefined` otherwise
     */
    diff(oldVal, newVal) {
        throw not_implemented_1.NotImplementedError.create("ArrayType#diff");
    }
    patch(oldVal, diff) {
        throw not_implemented_1.NotImplementedError.create("ArrayType#patch");
    }
    reverseDiff(diff) {
        throw not_implemented_1.NotImplementedError.create("ArrayType#reverseDiff");
    }
    squash(diff1, diff2) {
        throw not_implemented_1.NotImplementedError.create("ArrayType#squash");
    }
}
exports.ArrayType = ArrayType;
exports.Type = ArrayType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var InvalidArrayItemError;
(function (InvalidArrayItemError) {
    InvalidArrayItemError.name = "InvalidArrayItem";
    function format({ index, value }) {
        return `Invalid value ${value} for the item at index ${index}`;
    }
    InvalidArrayItemError.format = format;
    function create(index, value) {
        return incident_1.Incident(InvalidArrayItemError.name, { index, value }, format);
    }
    InvalidArrayItemError.create = create;
})(InvalidArrayItemError = exports.InvalidArrayItemError || (exports.InvalidArrayItemError = {}));
exports.default = InvalidArrayItemError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvaW52YWxpZC1hcnJheS1pdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQWtDO0FBRWxDLElBQWlCLHFCQUFxQixDQWVyQztBQWZELFdBQWlCLHFCQUFxQjtJQUV2QiwwQkFBSSxHQUFTLGtCQUFrQixDQUFDO0lBTzdDLGdCQUF1QixFQUFDLEtBQUssRUFBRSxLQUFLLEVBQU87UUFDekMsTUFBTSxDQUFDLGlCQUFpQixLQUFLLDBCQUEwQixLQUFLLEVBQUUsQ0FBQztJQUNqRSxDQUFDO0lBRmUsNEJBQU0sU0FFckIsQ0FBQTtJQUNELGdCQUF1QixLQUFhLEVBQUUsS0FBVTtRQUM5QyxNQUFNLENBQUMsbUJBQVEsQ0FBQyxzQkFBQSxJQUFJLEVBQUUsRUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUZlLDRCQUFNLFNBRXJCLENBQUE7QUFDSCxDQUFDLEVBZmdCLHFCQUFxQixHQUFyQiw2QkFBcUIsS0FBckIsNkJBQXFCLFFBZXJDO0FBSUQsa0JBQWUscUJBQXFCLENBQUMiLCJmaWxlIjoibGliL2Vycm9ycy9pbnZhbGlkLWFycmF5LWl0ZW0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IG5hbWVzcGFjZSBJbnZhbGlkQXJyYXlJdGVtRXJyb3Ige1xuICBleHBvcnQgdHlwZSBOYW1lID0gXCJJbnZhbGlkQXJyYXlJdGVtXCI7XG4gIGV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJJbnZhbGlkQXJyYXlJdGVtXCI7XG4gIGV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gICAgaW5kZXg6IG51bWJlcjtcbiAgICB2YWx1ZTogYW55O1xuICB9XG4gIGV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuICBleHBvcnQgdHlwZSBUeXBlID0gSW5jaWRlbnQ8TmFtZSwgRGF0YSwgQ2F1c2U+O1xuICBleHBvcnQgZnVuY3Rpb24gZm9ybWF0KHtpbmRleCwgdmFsdWV9OiBEYXRhKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYEludmFsaWQgdmFsdWUgJHt2YWx1ZX0gZm9yIHRoZSBpdGVtIGF0IGluZGV4ICR7aW5kZXh9YDtcbiAgfVxuICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlKGluZGV4OiBudW1iZXIsIHZhbHVlOiBhbnkpOiBUeXBlIHtcbiAgICByZXR1cm4gSW5jaWRlbnQobmFtZSwge2luZGV4LCB2YWx1ZX0sIGZvcm1hdCk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgSW52YWxpZEFycmF5SXRlbUVycm9yID0gSW52YWxpZEFycmF5SXRlbUVycm9yLlR5cGU7XG5cbmV4cG9ydCBkZWZhdWx0IEludmFsaWRBcnJheUl0ZW1FcnJvcjtcbiJdfQ==


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const unknown_format_1 = __webpack_require__(7);
const wrong_type_1 = __webpack_require__(8);
exports.name = "boolean";
class BooleanType {
    constructor() {
        this.name = exports.name;
    }
    toJSON() {
        return undefined;
    }
    readTrusted(format, input) {
        switch (format) {
            case "bson":
            case "json":
                return input;
            case "qs":
                return input === "true";
            default:
                return undefined;
        }
    }
    read(format, input) {
        switch (format) {
            case "bson":
            case "json":
                if (typeof input !== "boolean") {
                    throw wrong_type_1.WrongTypeError.create("boolean", input);
                }
                return input;
            case "qs":
                if (!(input === "true" || input === "false")) {
                    throw wrong_type_1.WrongTypeError.create("\"true\" | \"false\"", input);
                }
                return input === "true";
            default:
                throw unknown_format_1.UnknownFormatError.create(format);
        }
    }
    write(format, val) {
        switch (format) {
            case "bson":
            case "json":
                return val;
            case "qs":
                return val ? "true" : "false";
            default:
                return undefined;
        }
    }
    testError(val) {
        if (typeof val !== "boolean") {
            return wrong_type_1.WrongTypeError.create("boolean", val);
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        return val1 === val2;
    }
    clone(val) {
        return val;
    }
    /**
     * @param oldVal
     * @param newVal
     * @returns `true` if there is a difference, `undefined` otherwise
     */
    diff(oldVal, newVal) {
        return (oldVal !== newVal) || undefined;
    }
    patch(oldVal, diff) {
        return oldVal === (diff === undefined);
    }
    reverseDiff(diff) {
        return diff;
    }
    squash(diff1, diff2) {
        return (diff1 !== diff2) && undefined;
    }
}
exports.BooleanType = BooleanType;
exports.Type = BooleanType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90eXBlcy9ib29sZWFuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkRBQTREO0FBQzVELHFEQUFvRDtBQUl2QyxRQUFBLElBQUksR0FBUyxTQUFTLENBQUM7QUFnQnBDO0lBQUE7UUFJVyxTQUFJLEdBQVMsWUFBSSxDQUFDO0lBNkY3QixDQUFDO0lBM0ZDLE1BQU07UUFDSixNQUFNLENBQUMsU0FBUyxDQUFDO0lBQ25CLENBQUM7SUFLRCxXQUFXLENBQUMsTUFBOEIsRUFBRSxLQUFVO1FBQ3BELE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDZixLQUFLLE1BQU0sQ0FBQztZQUNaLEtBQUssTUFBTTtnQkFDVCxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2YsS0FBSyxJQUFJO2dCQUNQLE1BQU0sQ0FBQyxLQUFLLEtBQUssTUFBTSxDQUFDO1lBQzFCO2dCQUNFLE1BQU0sQ0FBQyxTQUFrQixDQUFDO1FBQzlCLENBQUM7SUFDSCxDQUFDO0lBRUQsSUFBSSxDQUFDLE1BQThCLEVBQUUsS0FBVTtRQUM3QyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ2YsS0FBSyxNQUFNLENBQUM7WUFDWixLQUFLLE1BQU07Z0JBQ1QsRUFBRSxDQUFDLENBQUMsT0FBTyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztvQkFDL0IsTUFBTSwyQkFBYyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUM7Z0JBQ2hELENBQUM7Z0JBQ0QsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUNmLEtBQUssSUFBSTtnQkFDUCxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLE1BQU0sSUFBSSxLQUFLLEtBQUssT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUM3QyxNQUFNLDJCQUFjLENBQUMsTUFBTSxDQUFDLHNCQUFzQixFQUFFLEtBQUssQ0FBQyxDQUFDO2dCQUM3RCxDQUFDO2dCQUNELE1BQU0sQ0FBQyxLQUFLLEtBQUssTUFBTSxDQUFDO1lBQzFCO2dCQUNFLE1BQU0sbUNBQWtCLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzVDLENBQUM7SUFDSCxDQUFDO0lBS0QsS0FBSyxDQUFDLE1BQThCLEVBQUUsR0FBTTtRQUMxQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ2YsS0FBSyxNQUFNLENBQUM7WUFDWixLQUFLLE1BQU07Z0JBQ1QsTUFBTSxDQUFDLEdBQUcsQ0FBQztZQUNiLEtBQUssSUFBSTtnQkFDUCxNQUFNLENBQUMsR0FBRyxHQUFHLE1BQU0sR0FBRyxPQUFPLENBQUM7WUFDaEM7Z0JBQ0UsTUFBTSxDQUFDLFNBQWtCLENBQUM7UUFDOUIsQ0FBQztJQUNILENBQUM7SUFFRCxTQUFTLENBQUMsR0FBTTtRQUNkLEVBQUUsQ0FBQyxDQUFDLE9BQU8sR0FBRyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDN0IsTUFBTSxDQUFDLDJCQUFjLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUMvQyxDQUFDO1FBQ0QsTUFBTSxDQUFDLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRUQsSUFBSSxDQUFDLEdBQU07UUFDVCxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsS0FBSyxTQUFTLENBQUM7SUFDM0MsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFPLEVBQUUsSUFBTztRQUNyQixNQUFNLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQztJQUN2QixDQUFDO0lBRUQsS0FBSyxDQUFDLEdBQU07UUFDVixNQUFNLENBQUMsR0FBRyxDQUFDO0lBQ2IsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxJQUFJLENBQUMsTUFBUyxFQUFFLE1BQVM7UUFDdkIsTUFBTSxDQUFDLENBQUMsTUFBTSxLQUFLLE1BQU0sQ0FBQyxJQUFJLFNBQVMsQ0FBQztJQUMxQyxDQUFDO0lBRUQsS0FBSyxDQUFDLE1BQVMsRUFBRSxJQUFzQjtRQUNyQyxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUMsSUFBSSxLQUFLLFNBQVMsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFFRCxXQUFXLENBQUMsSUFBc0I7UUFDaEMsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxNQUFNLENBQUMsS0FBdUIsRUFBRSxLQUF1QjtRQUNyRCxNQUFNLENBQUMsQ0FBQyxLQUFLLEtBQUssS0FBSyxDQUFDLElBQUksU0FBUyxDQUFDO0lBQ3hDLENBQUM7Q0FDRjtBQWpHRCxrQ0FpR0M7QUFFc0IsMkJBQUkiLCJmaWxlIjoibGliL3R5cGVzL2Jvb2xlYW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1Vua25vd25Gb3JtYXRFcnJvcn0gZnJvbSBcIi4uL2Vycm9ycy91bmtub3duLWZvcm1hdFwiO1xuaW1wb3J0IHtXcm9uZ1R5cGVFcnJvcn0gZnJvbSBcIi4uL2Vycm9ycy93cm9uZy10eXBlXCI7XG5pbXBvcnQge1NlcmlhbGl6YWJsZVR5cGUsIFZlcnNpb25lZFR5cGV9IGZyb20gXCIuLi9pbnRlcmZhY2VzXCI7XG5cbmV4cG9ydCB0eXBlIE5hbWUgPSBcImJvb2xlYW5cIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJib29sZWFuXCI7XG5leHBvcnQgdHlwZSBUID0gYm9vbGVhbjtcbmV4cG9ydCBuYW1lc3BhY2UgYnNvbiB7XG4gIGV4cG9ydCB0eXBlIElucHV0ID0gYm9vbGVhbjtcbiAgZXhwb3J0IHR5cGUgT3V0cHV0ID0gYm9vbGVhbjtcbn1cbmV4cG9ydCBuYW1lc3BhY2UganNvbiB7XG4gIGV4cG9ydCB0eXBlIElucHV0ID0gYm9vbGVhbjtcbiAgZXhwb3J0IHR5cGUgT3V0cHV0ID0gYm9vbGVhbjtcbn1cbmV4cG9ydCBuYW1lc3BhY2UgcXMge1xuICBleHBvcnQgdHlwZSBJbnB1dCA9IFwidHJ1ZVwiIHwgXCJmYWxzZVwiO1xuICBleHBvcnQgdHlwZSBPdXRwdXQgPSBcInRydWVcIiB8IFwiZmFsc2VcIjtcbn1cbmV4cG9ydCB0eXBlIERpZmYgPSBib29sZWFuO1xuXG5leHBvcnQgY2xhc3MgQm9vbGVhblR5cGVcbiAgaW1wbGVtZW50cyBWZXJzaW9uZWRUeXBlPFQsIGpzb24uSW5wdXQsIGpzb24uT3V0cHV0LCBEaWZmPixcbiAgICBTZXJpYWxpemFibGVUeXBlPFQsIFwiYnNvblwiLCBic29uLklucHV0LCBic29uLk91dHB1dD4sXG4gICAgU2VyaWFsaXphYmxlVHlwZTxULCBcInFzXCIsIHFzLklucHV0LCBxcy5PdXRwdXQ+IHtcbiAgcmVhZG9ubHkgbmFtZTogTmFtZSA9IG5hbWU7XG5cbiAgdG9KU09OKCk6IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIHJlYWRUcnVzdGVkKGZvcm1hdDogXCJic29uXCIsIHZhbDogYnNvbi5PdXRwdXQpOiBUO1xuICByZWFkVHJ1c3RlZChmb3JtYXQ6IFwianNvblwiLCB2YWw6IGpzb24uT3V0cHV0KTogVDtcbiAgcmVhZFRydXN0ZWQoZm9ybWF0OiBcInFzXCIsIHZhbDogcXMuT3V0cHV0KTogVDtcbiAgcmVhZFRydXN0ZWQoZm9ybWF0OiBcImJzb25cIiB8IFwianNvblwiIHwgXCJxc1wiLCBpbnB1dDogYW55KTogVCB7XG4gICAgc3dpdGNoIChmb3JtYXQpIHtcbiAgICAgIGNhc2UgXCJic29uXCI6XG4gICAgICBjYXNlIFwianNvblwiOlxuICAgICAgICByZXR1cm4gaW5wdXQ7XG4gICAgICBjYXNlIFwicXNcIjpcbiAgICAgICAgcmV0dXJuIGlucHV0ID09PSBcInRydWVcIjtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQgYXMgbmV2ZXI7XG4gICAgfVxuICB9XG5cbiAgcmVhZChmb3JtYXQ6IFwiYnNvblwiIHwgXCJqc29uXCIgfCBcInFzXCIsIGlucHV0OiBhbnkpOiBUIHtcbiAgICBzd2l0Y2ggKGZvcm1hdCkge1xuICAgICAgY2FzZSBcImJzb25cIjpcbiAgICAgIGNhc2UgXCJqc29uXCI6XG4gICAgICAgIGlmICh0eXBlb2YgaW5wdXQgIT09IFwiYm9vbGVhblwiKSB7XG4gICAgICAgICAgdGhyb3cgV3JvbmdUeXBlRXJyb3IuY3JlYXRlKFwiYm9vbGVhblwiLCBpbnB1dCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGlucHV0O1xuICAgICAgY2FzZSBcInFzXCI6XG4gICAgICAgIGlmICghKGlucHV0ID09PSBcInRydWVcIiB8fCBpbnB1dCA9PT0gXCJmYWxzZVwiKSkge1xuICAgICAgICAgIHRocm93IFdyb25nVHlwZUVycm9yLmNyZWF0ZShcIlxcXCJ0cnVlXFxcIiB8IFxcXCJmYWxzZVxcXCJcIiwgaW5wdXQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbnB1dCA9PT0gXCJ0cnVlXCI7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBVbmtub3duRm9ybWF0RXJyb3IuY3JlYXRlKGZvcm1hdCk7XG4gICAgfVxuICB9XG5cbiAgd3JpdGUoZm9ybWF0OiBcImJzb25cIiwgdmFsOiBUKTogYnNvbi5PdXRwdXQ7XG4gIHdyaXRlKGZvcm1hdDogXCJqc29uXCIsIHZhbDogVCk6IGpzb24uT3V0cHV0O1xuICB3cml0ZShmb3JtYXQ6IFwicXNcIiwgdmFsOiBUKTogcXMuT3V0cHV0O1xuICB3cml0ZShmb3JtYXQ6IFwiYnNvblwiIHwgXCJqc29uXCIgfCBcInFzXCIsIHZhbDogVCk6IGFueSB7XG4gICAgc3dpdGNoIChmb3JtYXQpIHtcbiAgICAgIGNhc2UgXCJic29uXCI6XG4gICAgICBjYXNlIFwianNvblwiOlxuICAgICAgICByZXR1cm4gdmFsO1xuICAgICAgY2FzZSBcInFzXCI6XG4gICAgICAgIHJldHVybiB2YWwgPyBcInRydWVcIiA6IFwiZmFsc2VcIjtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQgYXMgbmV2ZXI7XG4gICAgfVxuICB9XG5cbiAgdGVzdEVycm9yKHZhbDogVCk6IEVycm9yIHwgdW5kZWZpbmVkIHtcbiAgICBpZiAodHlwZW9mIHZhbCAhPT0gXCJib29sZWFuXCIpIHtcbiAgICAgIHJldHVybiBXcm9uZ1R5cGVFcnJvci5jcmVhdGUoXCJib29sZWFuXCIsIHZhbCk7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICB0ZXN0KHZhbDogVCk6IHZhbCBpcyBUIHtcbiAgICByZXR1cm4gdGhpcy50ZXN0RXJyb3IodmFsKSA9PT0gdW5kZWZpbmVkO1xuICB9XG5cbiAgZXF1YWxzKHZhbDE6IFQsIHZhbDI6IFQpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdmFsMSA9PT0gdmFsMjtcbiAgfVxuXG4gIGNsb25lKHZhbDogVCk6IFQge1xuICAgIHJldHVybiB2YWw7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIG9sZFZhbFxuICAgKiBAcGFyYW0gbmV3VmFsXG4gICAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGVyZSBpcyBhIGRpZmZlcmVuY2UsIGB1bmRlZmluZWRgIG90aGVyd2lzZVxuICAgKi9cbiAgZGlmZihvbGRWYWw6IFQsIG5ld1ZhbDogVCk6IERpZmYgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiAob2xkVmFsICE9PSBuZXdWYWwpIHx8IHVuZGVmaW5lZDtcbiAgfVxuXG4gIHBhdGNoKG9sZFZhbDogVCwgZGlmZjogRGlmZiB8IHVuZGVmaW5lZCk6IFQge1xuICAgIHJldHVybiBvbGRWYWwgPT09IChkaWZmID09PSB1bmRlZmluZWQpO1xuICB9XG5cbiAgcmV2ZXJzZURpZmYoZGlmZjogRGlmZiB8IHVuZGVmaW5lZCk6IERpZmYgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiBkaWZmO1xuICB9XG5cbiAgc3F1YXNoKGRpZmYxOiBEaWZmIHwgdW5kZWZpbmVkLCBkaWZmMjogRGlmZiB8IHVuZGVmaW5lZCk6IERpZmYgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiAoZGlmZjEgIT09IGRpZmYyKSAmJiB1bmRlZmluZWQ7XG4gIH1cbn1cblxuZXhwb3J0IHtCb29sZWFuVHlwZSBhcyBUeXBlfTtcbiJdfQ==


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
Object.defineProperty(exports, "__esModule", { value: true });
const bson_1 = __webpack_require__(159);
const max_array_length_1 = __webpack_require__(47);
const not_implemented_1 = __webpack_require__(10);
const unknown_format_1 = __webpack_require__(7);
const wrong_type_1 = __webpack_require__(8);
exports.name = "buffer";
function isBinary(val) {
    return val._bsontype === "Binary";
}
class BufferType {
    constructor(options) {
        this.name = exports.name;
        this.maxLength = options.maxLength;
    }
    toJSON() {
        throw not_implemented_1.NotImplementedError.create("BufferType#toJSON");
    }
    readTrusted(format, input) {
        switch (format) {
            case "bson":
                return input.value(true);
            case "json":
            case "qs":
                const len = input.length / 2;
                const result = new Uint8Array(len);
                for (let i = 0; i < len; i++) {
                    result[i] = parseInt(input.substr(2 * i, 2), 16);
                }
                return result;
            default:
                return undefined;
        }
    }
    read(format, input) {
        let result;
        switch (format) {
            case "bson":
                if (isBinary(input)) {
                    // TODO: Fix BSON type definitions
                    result = input.value(true);
                }
                else {
                    result = input;
                }
                break;
            case "json":
            case "qs":
                if (typeof input !== "string") {
                    throw wrong_type_1.WrongTypeError.create("string", input);
                }
                else if (!/^(?:[0-9a-f]{2})*$/.test(input)) {
                    throw wrong_type_1.WrongTypeError.create("lowerCaseHexEvenLengthString", input);
                }
                const len = input.length / 2;
                result = new Uint8Array(len);
                for (let i = 0; i < len; i++) {
                    result[i] = parseInt(input.substr(2 * i, 2), 16);
                }
                break;
            default:
                throw unknown_format_1.UnknownFormatError.create(format);
        }
        const error = this.testError(result);
        if (error !== undefined) {
            throw error;
        }
        return result;
    }
    write(format, val) {
        switch (format) {
            case "bson":
                // TODO: Fix BSON type definitions
                return new bson_1.Binary(Buffer.from(val));
            case "json":
            case "qs":
                const result = new Array(val.length);
                const len = val.length;
                for (let i = 0; i < len; i++) {
                    result[i] = (val[i] < 16 ? "0" : "") + val[i].toString(16);
                }
                return result.join("");
            default:
                return undefined;
        }
    }
    testError(val) {
        if (!(val instanceof Uint8Array)) {
            return wrong_type_1.WrongTypeError.create("Uint8Array", val);
        }
        if (this.maxLength !== undefined && val.length > this.maxLength) {
            return max_array_length_1.MaxArrayLengthError.create(val, this.maxLength);
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        if (val2.length !== val1.length) {
            return false;
        }
        for (let i = 0; i < val1.length; i++) {
            if (val2[i] !== val1[i]) {
                return false;
            }
        }
        return true;
    }
    clone(val) {
        return Uint8Array.from(val);
    }
    /**
     * @param oldVal
     * @param newVal
     * @returns `true` if there is a difference, `undefined` otherwise
     */
    diff(oldVal, newVal) {
        throw not_implemented_1.NotImplementedError.create("BufferType#diff");
    }
    patch(oldVal, diff) {
        throw not_implemented_1.NotImplementedError.create("BufferType#patch");
    }
    reverseDiff(diff) {
        throw not_implemented_1.NotImplementedError.create("BufferType#reverseDiff");
    }
    squash(diff1, diff2) {
        throw not_implemented_1.NotImplementedError.create("BufferType#squash");
    }
}
exports.BufferType = BufferType;
exports.Type = BufferType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

// We have an ES6 Map available, return the native instance
if(typeof global.Map !== 'undefined') {
  module.exports = global.Map;
  module.exports.Map = global.Map;
} else {
  // We will return a polyfill
  var Map = function(array) {
    this._keys = [];
    this._values = {};

    for(var i = 0; i < array.length; i++) {
      if(array[i] == null) continue;  // skip null and undefined
      var entry = array[i];
      var key = entry[0];
      var value = entry[1];
      // Add the key to the list of keys in order
      this._keys.push(key);
      // Add the key and value to the values dictionary with a point
      // to the location in the ordered keys list
      this._values[key] = {v: value, i: this._keys.length - 1};
    }
  }

  Map.prototype.clear = function() {
    this._keys = [];
    this._values = {};
  }

  Map.prototype.delete = function(key) {
    var value = this._values[key];
    if(value == null) return false;
    // Delete entry
    delete this._values[key];
    // Remove the key from the ordered keys list
    this._keys.splice(value.i, 1);
    return true;
  }

  Map.prototype.entries = function() {
    var self = this;
    var index = 0;

    return {
      next: function() {
        var key = self._keys[index++];
        return {
          value: key !== undefined ? [key, self._values[key].v] : undefined,
          done: key !== undefined ? false : true
        }
      }
    };
  }

  Map.prototype.forEach = function(callback, self) {
    self = self || this;

    for(var i = 0; i < this._keys.length; i++) {
      var key = this._keys[i];
      // Call the forEach callback
      callback.call(self, this._values[key].v, key, self);
    }
  }

  Map.prototype.get = function(key) {
    return this._values[key] ? this._values[key].v : undefined;
  }

  Map.prototype.has = function(key) {
    return this._values[key] != null;
  }

  Map.prototype.keys = function(key) {
    var self = this;
    var index = 0;

    return {
      next: function() {
        var key = self._keys[index++];
        return {
          value: key !== undefined ? key : undefined,
          done: key !== undefined ? false : true
        }
      }
    };
  }

  Map.prototype.set = function(key, value) {
    if(this._values[key]) {
      this._values[key].v = value;
      return this;
    }

    // Add the key to the list of keys in order
    this._keys.push(key);
    // Add the key and value to the values dictionary with a point
    // to the location in the ordered keys list
    this._values[key] = {v: value, i: this._keys.length - 1};
    return this;
  }

  Map.prototype.values = function(key, value) {
    var self = this;
    var index = 0;

    return {
      next: function() {
        var key = self._keys[index++];
        return {
          value: key !== undefined ? self._values[key].v : undefined,
          done: key !== undefined ? false : true
        }
      }
    };
  }

  // Last ismaster
  Object.defineProperty(Map.prototype, 'size', {
    enumerable:true,
    get: function() { return this._keys.length; }
  });

  module.exports = Map;
  module.exports.Map = Map;
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const unorm_1 = __webpack_require__(165);
const lower_case_1 = __webpack_require__(50);
const max_codepoints_1 = __webpack_require__(75);
const min_codepoints_1 = __webpack_require__(76);
const not_trimmed_1 = __webpack_require__(51);
const pattern_not_matched_1 = __webpack_require__(52);
const unknown_format_1 = __webpack_require__(7);
const wrong_type_1 = __webpack_require__(8);
const checked_ucs2_decode_1 = __webpack_require__(166);
var Normalization;
(function (Normalization) {
    Normalization[Normalization["None"] = 0] = "None";
    Normalization[Normalization["Nfc"] = 1] = "Nfc";
})(Normalization = exports.Normalization || (exports.Normalization = {}));
exports.name = "codepoint-string";
class CodepointStringType {
    constructor(options) {
        this.name = exports.name;
        this.normalization = options.normalization !== undefined ? options.normalization : Normalization.Nfc;
        this.enforceUnicodeRegExp = options.enforceUnicodeRegExp !== undefined ? options.enforceUnicodeRegExp : true;
        this.pattern = options.pattern;
        this.lowerCase = options.lowerCase !== undefined ? options.lowerCase : false;
        this.trimmed = options.trimmed !== undefined ? options.trimmed : false;
        this.minCodepoints = options.minCodepoints;
        this.maxCodepoints = options.maxCodepoints;
    }
    static fromJSON(options) {
        const resolvedOptions = {
            normalization: options.normalization === "none" ? Normalization.None : Normalization.Nfc,
            enforceUnicodeRegExp: options.enforceUnicodeRegExp,
            lowerCase: options.lowerCase,
            trimmed: options.trimmed,
            maxCodepoints: options.maxCodepoints,
        };
        if (options.pattern !== undefined) {
            resolvedOptions.pattern = new RegExp(options.pattern[0], options.pattern[1]);
        }
        if (options.minCodepoints !== undefined) {
            resolvedOptions.minCodepoints = options.minCodepoints;
        }
        return new CodepointStringType(resolvedOptions);
    }
    toJSON() {
        const jsonType = {
            name: exports.name,
            normalization: this.normalization === Normalization.None ? "none" : "nfc",
            enforceUnicodeRegExp: this.enforceUnicodeRegExp,
            lowerCase: this.lowerCase,
            trimmed: this.trimmed,
            maxCodepoints: this.maxCodepoints,
        };
        if (this.pattern !== undefined) {
            jsonType.pattern = [this.pattern.source, this.pattern.flags];
        }
        if (this.minCodepoints !== undefined) {
            jsonType.minCodepoints = this.minCodepoints;
        }
        return jsonType;
    }
    readTrusted(format, input) {
        return input;
    }
    read(format, input) {
        switch (format) {
            case "bson":
            case "json":
            case "qs":
                const error = this.testError(input);
                if (error !== undefined) {
                    throw error;
                }
                return input;
            default:
                throw unknown_format_1.UnknownFormatError.create(format);
        }
    }
    write(format, val) {
        return val;
    }
    testError(val) {
        if (!(typeof val === "string")) {
            return wrong_type_1.WrongTypeError.create("string", val);
        }
        switch (this.normalization) {
            case Normalization.Nfc:
                if (val !== unorm_1.nfc(val)) {
                    return incident_1.Incident("UnicodeNormalization", "Not NFC-Normalized");
                }
                break;
            case Normalization.None:
                break;
        }
        if (this.lowerCase && val !== val.toLowerCase()) {
            return lower_case_1.LowerCaseError.create(val);
        }
        if (this.trimmed && val !== val.trim()) {
            return not_trimmed_1.NotTrimmedError.create(val);
        }
        let codepointCount;
        try {
            codepointCount = checked_ucs2_decode_1.checkedUcs2Decode(val).length;
        }
        catch (err) {
            return err;
        }
        const minCodepoints = this.minCodepoints;
        if (typeof minCodepoints === "number" && codepointCount < minCodepoints) {
            return min_codepoints_1.MinCodepointsError.create(val, codepointCount, minCodepoints);
        }
        if (codepointCount > this.maxCodepoints) {
            return max_codepoints_1.MaxCodepointsError.create(val, codepointCount, this.maxCodepoints);
        }
        if (this.pattern instanceof RegExp) {
            if (!this.pattern.unicode && this.enforceUnicodeRegExp) {
                throw new incident_1.Incident("NonUnicodeRegExp", "Enforced unicode RegExp, use `enforceUnicodeRegExp = false` or `Ucs2StringType`");
            }
            if (!this.pattern.test(val)) {
                return pattern_not_matched_1.PatternNotMatchedError.create(this.pattern, val);
            }
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        return val1 === val2;
    }
    clone(val) {
        return val;
    }
    diff(oldVal, newVal) {
        return oldVal === newVal ? undefined : [oldVal, newVal];
    }
    patch(oldVal, diff) {
        return diff === undefined ? oldVal : diff[1];
    }
    reverseDiff(diff) {
        return diff === undefined ? undefined : [diff[1], diff[0]];
    }
    squash(diff1, diff2) {
        if (diff1 === undefined) {
            return diff2 === undefined ? undefined : [diff2[0], diff2[1]];
        }
        else if (diff2 === undefined) {
            return [diff1[0], diff1[1]];
        }
        return diff1[0] === diff2[1] ? undefined : [diff1[0], diff2[1]];
    }
}
exports.CodepointStringType = CodepointStringType;
exports.Type = CodepointStringType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var MaxCodepointsError;
(function (MaxCodepointsError) {
    MaxCodepointsError.name = "MaxCodepoints";
    function format({ count, max }) {
        return `Expected codepoints count (${count}) to be less than or equal to ${max}`;
    }
    MaxCodepointsError.format = format;
    function create(string, count, max) {
        return incident_1.Incident(MaxCodepointsError.name, { string, count, max }, format);
    }
    MaxCodepointsError.create = create;
})(MaxCodepointsError = exports.MaxCodepointsError || (exports.MaxCodepointsError = {}));
exports.default = MaxCodepointsError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvbWF4LWNvZGVwb2ludHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBa0M7QUFFbEMsSUFBaUIsa0JBQWtCLENBZ0JsQztBQWhCRCxXQUFpQixrQkFBa0I7SUFFcEIsdUJBQUksR0FBUyxlQUFlLENBQUM7SUFRMUMsZ0JBQXVCLEVBQUMsS0FBSyxFQUFFLEdBQUcsRUFBTztRQUN2QyxNQUFNLENBQUMsOEJBQThCLEtBQUssaUNBQWlDLEdBQUcsRUFBRSxDQUFDO0lBQ25GLENBQUM7SUFGZSx5QkFBTSxTQUVyQixDQUFBO0lBQ0QsZ0JBQXVCLE1BQWMsRUFBRSxLQUFhLEVBQUUsR0FBVztRQUMvRCxNQUFNLENBQUMsbUJBQVEsQ0FBQyxtQkFBQSxJQUFJLEVBQUUsRUFBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFGZSx5QkFBTSxTQUVyQixDQUFBO0FBQ0gsQ0FBQyxFQWhCZ0Isa0JBQWtCLEdBQWxCLDBCQUFrQixLQUFsQiwwQkFBa0IsUUFnQmxDO0FBSUQsa0JBQWUsa0JBQWtCLENBQUMiLCJmaWxlIjoibGliL2Vycm9ycy9tYXgtY29kZXBvaW50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5jaWRlbnR9IGZyb20gXCJpbmNpZGVudFwiO1xuXG5leHBvcnQgbmFtZXNwYWNlIE1heENvZGVwb2ludHNFcnJvciB7XG4gIGV4cG9ydCB0eXBlIE5hbWUgPSBcIk1heENvZGVwb2ludHNcIjtcbiAgZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcIk1heENvZGVwb2ludHNcIjtcbiAgZXhwb3J0IGludGVyZmFjZSBEYXRhIHtcbiAgICBzdHJpbmc6IHN0cmluZztcbiAgICBjb3VudDogbnVtYmVyO1xuICAgIG1heDogbnVtYmVyO1xuICB9XG4gIGV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuICBleHBvcnQgdHlwZSBUeXBlID0gSW5jaWRlbnQ8TmFtZSwgRGF0YSwgQ2F1c2U+O1xuICBleHBvcnQgZnVuY3Rpb24gZm9ybWF0KHtjb3VudCwgbWF4fTogRGF0YSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBFeHBlY3RlZCBjb2RlcG9pbnRzIGNvdW50ICgke2NvdW50fSkgdG8gYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvICR7bWF4fWA7XG4gIH1cbiAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZShzdHJpbmc6IHN0cmluZywgY291bnQ6IG51bWJlciwgbWF4OiBudW1iZXIpOiBUeXBlIHtcbiAgICByZXR1cm4gSW5jaWRlbnQobmFtZSwge3N0cmluZywgY291bnQsIG1heH0sIGZvcm1hdCk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgTWF4Q29kZXBvaW50c0Vycm9yID0gTWF4Q29kZXBvaW50c0Vycm9yLlR5cGU7XG5cbmV4cG9ydCBkZWZhdWx0IE1heENvZGVwb2ludHNFcnJvcjtcbiJdfQ==


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var MinCodepointsError;
(function (MinCodepointsError) {
    MinCodepointsError.name = "MinCodepoints";
    function format({ count, min }) {
        return `Expected codepoints count (${count}) to be greater than or equal to ${min}`;
    }
    MinCodepointsError.format = format;
    function create(string, count, min) {
        return incident_1.Incident(MinCodepointsError.name, { string, count, min }, format);
    }
    MinCodepointsError.create = create;
})(MinCodepointsError = exports.MinCodepointsError || (exports.MinCodepointsError = {}));
exports.default = MinCodepointsError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvbWluLWNvZGVwb2ludHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBa0M7QUFFbEMsSUFBaUIsa0JBQWtCLENBZ0JsQztBQWhCRCxXQUFpQixrQkFBa0I7SUFFcEIsdUJBQUksR0FBUyxlQUFlLENBQUM7SUFRMUMsZ0JBQXVCLEVBQUMsS0FBSyxFQUFFLEdBQUcsRUFBTztRQUN2QyxNQUFNLENBQUMsOEJBQThCLEtBQUssb0NBQW9DLEdBQUcsRUFBRSxDQUFDO0lBQ3RGLENBQUM7SUFGZSx5QkFBTSxTQUVyQixDQUFBO0lBQ0QsZ0JBQXVCLE1BQWMsRUFBRSxLQUFhLEVBQUUsR0FBVztRQUMvRCxNQUFNLENBQUMsbUJBQVEsQ0FBQyxtQkFBQSxJQUFJLEVBQUUsRUFBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFGZSx5QkFBTSxTQUVyQixDQUFBO0FBQ0gsQ0FBQyxFQWhCZ0Isa0JBQWtCLEdBQWxCLDBCQUFrQixLQUFsQiwwQkFBa0IsUUFnQmxDO0FBSUQsa0JBQWUsa0JBQWtCLENBQUMiLCJmaWxlIjoibGliL2Vycm9ycy9taW4tY29kZXBvaW50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5jaWRlbnR9IGZyb20gXCJpbmNpZGVudFwiO1xuXG5leHBvcnQgbmFtZXNwYWNlIE1pbkNvZGVwb2ludHNFcnJvciB7XG4gIGV4cG9ydCB0eXBlIE5hbWUgPSBcIk1pbkNvZGVwb2ludHNcIjtcbiAgZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcIk1pbkNvZGVwb2ludHNcIjtcbiAgZXhwb3J0IGludGVyZmFjZSBEYXRhIHtcbiAgICBzdHJpbmc6IHN0cmluZztcbiAgICBjb3VudDogbnVtYmVyO1xuICAgIG1pbjogbnVtYmVyO1xuICB9XG4gIGV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuICBleHBvcnQgdHlwZSBUeXBlID0gSW5jaWRlbnQ8TmFtZSwgRGF0YSwgQ2F1c2U+O1xuICBleHBvcnQgZnVuY3Rpb24gZm9ybWF0KHtjb3VudCwgbWlufTogRGF0YSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBFeHBlY3RlZCBjb2RlcG9pbnRzIGNvdW50ICgke2NvdW50fSkgdG8gYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvICR7bWlufWA7XG4gIH1cbiAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZShzdHJpbmc6IHN0cmluZywgY291bnQ6IG51bWJlciwgbWluOiBudW1iZXIpOiBUeXBlIHtcbiAgICByZXR1cm4gSW5jaWRlbnQobmFtZSwge3N0cmluZywgY291bnQsIG1pbn0sIGZvcm1hdCk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgTWluQ29kZXBvaW50c0Vycm9yID0gTWluQ29kZXBvaW50c0Vycm9yLlR5cGU7XG5cbmV4cG9ydCBkZWZhdWx0IE1pbkNvZGVwb2ludHNFcnJvcjtcbiJdfQ==


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const invalid_timestamp_1 = __webpack_require__(78);
const unknown_format_1 = __webpack_require__(7);
const wrong_type_1 = __webpack_require__(8);
exports.name = "date";
class DateType {
    constructor() {
        this.name = exports.name;
    }
    toJSON() {
        return { name: exports.name };
    }
    readTrusted(format, input) {
        switch (format) {
            case "bson":
                return new Date(input.getTime());
            case "json":
            case "qs":
                return new Date(input);
            default:
                return undefined;
        }
    }
    read(format, input) {
        let result;
        switch (format) {
            case "bson":
                if (!(input instanceof Date)) {
                    throw wrong_type_1.WrongTypeError.create("Date", input);
                }
                result = new Date(input.getTime());
                break;
            case "json":
                if (typeof input === "string") {
                    result = new Date(input);
                }
                else if (typeof input === "number") {
                    result = new Date(input);
                }
                else {
                    throw wrong_type_1.WrongTypeError.create("string | number", input);
                }
                break;
            case "qs":
                if (typeof input !== "string") {
                    throw wrong_type_1.WrongTypeError.create("string", input);
                }
                result = new Date(input);
                break;
            default:
                throw unknown_format_1.UnknownFormatError.create(format);
        }
        const error = this.testError(result);
        if (error !== undefined) {
            throw error;
        }
        return result;
    }
    write(format, val) {
        switch (format) {
            case "bson":
                return new Date(val.getTime());
            case "json":
            case "qs":
                return val.toISOString();
            default:
                return undefined;
        }
    }
    testError(val) {
        if (!(val instanceof Date)) {
            return wrong_type_1.WrongTypeError.create("Date", val);
        }
        const time = val.getTime();
        if (isNaN(time) || time > Number.MAX_SAFE_INTEGER || time < Number.MIN_SAFE_INTEGER) {
            return invalid_timestamp_1.InvalidTimestampError.create(val);
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        return val1.getTime() === val2.getTime();
    }
    clone(val) {
        return new Date(val.getTime());
    }
    diff(oldVal, newVal) {
        return newVal.getTime() - oldVal.getTime() || undefined;
    }
    patch(oldVal, diff) {
        return new Date(oldVal.getTime() + (diff || 0));
    }
    reverseDiff(diff) {
        return diff && -diff;
    }
    squash(diff1, diff2) {
        if (diff1 === undefined) {
            return diff2;
        }
        else if (diff2 === undefined) {
            return diff1;
        }
        return diff2 === -diff1 ? undefined : diff1 + diff2;
    }
}
exports.DateType = DateType;
exports.Type = DateType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var InvalidTimestampError;
(function (InvalidTimestampError) {
    InvalidTimestampError.name = "InvalidTimestamp";
    function format({ date }) {
        return `Invalid timestamp for the date: ${JSON.stringify(date)}`;
    }
    InvalidTimestampError.format = format;
    function create(date) {
        return incident_1.Incident(InvalidTimestampError.name, { date }, format);
    }
    InvalidTimestampError.create = create;
})(InvalidTimestampError = exports.InvalidTimestampError || (exports.InvalidTimestampError = {}));
exports.default = InvalidTimestampError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvaW52YWxpZC10aW1lc3RhbXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBa0M7QUFFbEMsSUFBaUIscUJBQXFCLENBY3JDO0FBZEQsV0FBaUIscUJBQXFCO0lBRXZCLDBCQUFJLEdBQVMsa0JBQWtCLENBQUM7SUFNN0MsZ0JBQXVCLEVBQUMsSUFBSSxFQUFPO1FBQ2pDLE1BQU0sQ0FBQyxtQ0FBbUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO0lBQ25FLENBQUM7SUFGZSw0QkFBTSxTQUVyQixDQUFBO0lBQ0QsZ0JBQXVCLElBQVU7UUFDL0IsTUFBTSxDQUFDLG1CQUFRLENBQUMsc0JBQUEsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUZlLDRCQUFNLFNBRXJCLENBQUE7QUFDSCxDQUFDLEVBZGdCLHFCQUFxQixHQUFyQiw2QkFBcUIsS0FBckIsNkJBQXFCLFFBY3JDO0FBSUQsa0JBQWUscUJBQXFCLENBQUMiLCJmaWxlIjoibGliL2Vycm9ycy9pbnZhbGlkLXRpbWVzdGFtcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5jaWRlbnR9IGZyb20gXCJpbmNpZGVudFwiO1xuXG5leHBvcnQgbmFtZXNwYWNlIEludmFsaWRUaW1lc3RhbXBFcnJvciB7XG4gIGV4cG9ydCB0eXBlIE5hbWUgPSBcIkludmFsaWRUaW1lc3RhbXBcIjtcbiAgZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcIkludmFsaWRUaW1lc3RhbXBcIjtcbiAgZXhwb3J0IGludGVyZmFjZSBEYXRhIHtcbiAgICBkYXRlOiBEYXRlO1xuICB9XG4gIGV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuICBleHBvcnQgdHlwZSBUeXBlID0gSW5jaWRlbnQ8TmFtZSwgRGF0YSwgQ2F1c2U+O1xuICBleHBvcnQgZnVuY3Rpb24gZm9ybWF0KHtkYXRlfTogRGF0YSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBJbnZhbGlkIHRpbWVzdGFtcCBmb3IgdGhlIGRhdGU6ICR7SlNPTi5zdHJpbmdpZnkoZGF0ZSl9YDtcbiAgfVxuICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlKGRhdGU6IERhdGUpOiBUeXBlIHtcbiAgICByZXR1cm4gSW5jaWRlbnQobmFtZSwge2RhdGV9LCBmb3JtYXQpO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIEludmFsaWRUaW1lc3RhbXBFcnJvciA9IEludmFsaWRUaW1lc3RhbXBFcnJvci5UeXBlO1xuXG5leHBvcnQgZGVmYXVsdCBJbnZhbGlkVGltZXN0YW1wRXJyb3I7XG4iXX0=


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const extra_keys_1 = __webpack_require__(80);
const invalid_property_1 = __webpack_require__(81);
const missing_keys_1 = __webpack_require__(82);
const not_implemented_1 = __webpack_require__(10);
const null_property_1 = __webpack_require__(83);
const wrong_type_1 = __webpack_require__(8);
const rename_1 = __webpack_require__(53);
exports.name = "document";
function diffSets(reference, values) {
    const referenceSet = new Set(reference);
    const valuesSet = new Set(values);
    const all = new Set([...referenceSet, ...valuesSet]);
    const commonKeys = new Set();
    const missingKeys = new Set();
    const extraKeys = new Set();
    for (const key of all) {
        if (!valuesSet.has(key)) {
            missingKeys.add(key);
        }
        else if (!referenceSet.has(key)) {
            extraKeys.add(key);
        }
        else {
            commonKeys.add(key);
        }
    }
    return { commonKeys, missingKeys, extraKeys };
}
class DocumentType {
    constructor(options) {
        this.name = exports.name;
        this.ignoreExtraKeys = options.ignoreExtraKeys || false;
        this.properties = options.properties;
        this.rename = options.rename;
        this.keys = new Map();
        this.outKeys = new Map();
        for (const key in this.properties) {
            const renamed = this.rename === undefined ? key : rename_1.rename(key, this.rename);
            this.keys.set(key, renamed);
            if (this.outKeys.has(renamed)) {
                throw new incident_1.Incident("NonBijectiveKeyRename", "Some keys are the same after renaming");
            }
            this.outKeys.set(renamed, key);
        }
    }
    static fromJSON(options) {
        throw not_implemented_1.NotImplementedError.create("DocumentType.fromJSON");
    }
    toJSON() {
        throw not_implemented_1.NotImplementedError.create("DocumentType#toJSON");
    }
    readTrusted(format, input) {
        const outKeysDiff = diffSets(this.outKeys.keys(), Object.keys(input));
        // TODO(demurgos): use Partial<T> once typedoc supports it
        const result = {};
        for (const outKey of outKeysDiff.commonKeys) {
            const key = this.outKeys.get(outKey);
            // TODO(demurgos): Check if the format is supported instead of casting to `any`
            result[key] = this.properties[key].type.read(format, input[outKey]);
        }
        return result;
    }
    read(format, input) {
        const outKeysDiff = diffSets(this.outKeys.keys(), Object.keys(input));
        const missingRequiredKeys = [...outKeysDiff.missingKeys].filter((outKey) => {
            return !this.properties[this.outKeys.get(outKey)].optional;
        });
        if (missingRequiredKeys.length > 0) {
            throw missing_keys_1.MissingKeysError.create(missingRequiredKeys);
        }
        else if (outKeysDiff.extraKeys.size > 0 && !this.ignoreExtraKeys) {
            throw extra_keys_1.ExtraKeysError.create([...outKeysDiff.extraKeys]);
        }
        // TODO(demurgos): use Partial<T> once typedoc supports it
        const result = {};
        for (const outKey of outKeysDiff.commonKeys) {
            const key = this.outKeys.get(outKey);
            // TODO(demurgos): Check if the format is supported instead of casting to `any`
            result[key] = this.properties[key].type.read(format, input[outKey]);
        }
        return result;
    }
    write(format, val) {
        const keysDiff = diffSets(this.keys.keys(), Object.keys(val));
        const result = {};
        for (const key of keysDiff.commonKeys) {
            if (val[key] === undefined && this.properties[key].optional) {
                continue;
            }
            const outKey = this.keys.get(key);
            // TODO(demurgos): Check if the format is supported instead of casting to `any`
            result[outKey] = this.properties[key].type.write(format, val[key]);
        }
        return result;
    }
    testError(val) {
        if (typeof val !== "object" || val === null) {
            return wrong_type_1.WrongTypeError.create("object", val);
        }
        const keysDiff = diffSets(this.keys.keys(), Object.keys(val));
        const missingRequiredKeys = [...keysDiff.missingKeys].filter((key) => {
            return !this.properties[key].optional;
        });
        if (missingRequiredKeys.length > 0) {
            return missing_keys_1.MissingKeysError.create(missingRequiredKeys);
        }
        else if (keysDiff.extraKeys.size > 0 && !this.ignoreExtraKeys) {
            return extra_keys_1.ExtraKeysError.create([...keysDiff.extraKeys]);
        }
        for (const key of keysDiff.commonKeys) {
            const member = val[key];
            const descriptor = this.properties[key];
            if (member === undefined) {
                if (descriptor.optional) {
                    continue;
                }
                else {
                    return null_property_1.NullPropertyError.create(key);
                }
            }
            const error = descriptor.type.testError(member);
            if (error !== undefined) {
                return invalid_property_1.InvalidPropertyError.create(key, member);
            }
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        for (const key in this.properties) {
            const descriptor = this.properties[key];
            const member1 = val1[key];
            const member2 = val2[key];
            if (!descriptor.optional) {
                if (!descriptor.type.equals(member1, member2)) {
                    return false;
                }
            }
            else {
                if (val1.hasOwnProperty(key) && val2.hasOwnProperty(key)) {
                    if (!descriptor.type.equals(member1, member2)) {
                        return false;
                    }
                }
                else if (!(member1 === undefined && member2 === undefined)) {
                    return false;
                }
            }
        }
        return true;
    }
    clone(val) {
        // TODO(demurgos): use Partial<T> once typedoc supports it
        const result = {};
        for (const key in this.properties) {
            const member = val[key];
            if (member !== undefined) {
                result[key] = this.properties[key].type.clone(member);
            }
        }
        return result;
    }
    diff(oldVal, newVal) {
        let equal = true;
        const result = { set: {}, unset: {}, update: {} };
        for (const key in this.properties) {
            const descriptor = this.properties[key];
            const oldMember = oldVal[key];
            const newMember = newVal[key];
            if (oldMember !== undefined) {
                if (newMember !== undefined) {
                    const diff = descriptor.type.diff(oldMember, newMember);
                    if (diff !== undefined) {
                        result.update[key] = diff;
                        equal = false;
                    }
                }
                else {
                    result.unset[key] = descriptor.type.clone(oldMember);
                    equal = false;
                }
            }
            else {
                if (newMember === undefined) {
                    result.set[key] = descriptor.type.clone(newMember);
                    equal = false;
                }
            }
        }
        return equal ? undefined : result;
    }
    patch(oldVal, diff) {
        const result = this.clone(oldVal);
        if (diff === undefined) {
            return result;
        }
        for (const key in diff.set) {
            result[key] = this.properties[key].type.clone(diff.set[key]);
        }
        for (const key in diff.unset) {
            delete result[key];
        }
        for (const key in diff.update) {
            result[key] = this.properties[key].type.patch(result[key][key], diff.update[key]);
        }
        return result;
    }
    reverseDiff(diff) {
        if (diff === undefined) {
            return undefined;
        }
        const result = {
            set: {},
            unset: {},
            update: {},
        };
        for (const key in diff.unset) {
            result.set[key] = this.properties[key].type.clone(diff.unset[key]);
        }
        for (const key in diff.set) {
            result.unset[key] = this.properties[key].type.clone(diff.set[key]);
        }
        for (const key in diff.update) {
            result.update[key] = this.properties[key].type.reverseDiff(diff.update[key]);
        }
        return result;
    }
    squash(diff1, diff2) {
        throw not_implemented_1.NotImplementedError.create("DocumentType#squash");
    }
}
exports.DocumentType = DocumentType;
exports.Type = DocumentType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var ExtraKeysError;
(function (ExtraKeysError) {
    ExtraKeysError.name = "ExtraKeys";
    function format({ keys }) {
        return `Unexpected extra keys: ${JSON.stringify(keys)}`;
    }
    ExtraKeysError.format = format;
    function create(keys) {
        return incident_1.Incident(ExtraKeysError.name, { keys }, format);
    }
    ExtraKeysError.create = create;
})(ExtraKeysError = exports.ExtraKeysError || (exports.ExtraKeysError = {}));
exports.default = ExtraKeysError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvZXh0cmEta2V5cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUVsQyxJQUFpQixjQUFjLENBYzlCO0FBZEQsV0FBaUIsY0FBYztJQUVoQixtQkFBSSxHQUFTLFdBQVcsQ0FBQztJQU10QyxnQkFBdUIsRUFBQyxJQUFJLEVBQU87UUFDakMsTUFBTSxDQUFDLDBCQUEwQixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUM7SUFDMUQsQ0FBQztJQUZlLHFCQUFNLFNBRXJCLENBQUE7SUFDRCxnQkFBdUIsSUFBYztRQUNuQyxNQUFNLENBQUMsbUJBQVEsQ0FBQyxlQUFBLElBQUksRUFBRSxFQUFDLElBQUksRUFBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFGZSxxQkFBTSxTQUVyQixDQUFBO0FBQ0gsQ0FBQyxFQWRnQixjQUFjLEdBQWQsc0JBQWMsS0FBZCxzQkFBYyxRQWM5QjtBQUlELGtCQUFlLGNBQWMsQ0FBQyIsImZpbGUiOiJsaWIvZXJyb3JzL2V4dHJhLWtleXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IG5hbWVzcGFjZSBFeHRyYUtleXNFcnJvciB7XG4gIGV4cG9ydCB0eXBlIE5hbWUgPSBcIkV4dHJhS2V5c1wiO1xuICBleHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiRXh0cmFLZXlzXCI7XG4gIGV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gICAga2V5czogc3RyaW5nW107XG4gIH1cbiAgZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG4gIGV4cG9ydCB0eXBlIFR5cGUgPSBJbmNpZGVudDxOYW1lLCBEYXRhLCBDYXVzZT47XG4gIGV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe2tleXN9OiBEYXRhKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYFVuZXhwZWN0ZWQgZXh0cmEga2V5czogJHtKU09OLnN0cmluZ2lmeShrZXlzKX1gO1xuICB9XG4gIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGUoa2V5czogc3RyaW5nW10pOiBUeXBlIHtcbiAgICByZXR1cm4gSW5jaWRlbnQobmFtZSwge2tleXN9LCBmb3JtYXQpO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIEV4dHJhS2V5c0Vycm9yID0gRXh0cmFLZXlzRXJyb3IuVHlwZTtcblxuZXhwb3J0IGRlZmF1bHQgRXh0cmFLZXlzRXJyb3I7XG4iXX0=


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var InvalidPropertyError;
(function (InvalidPropertyError) {
    InvalidPropertyError.name = "InvalidProperty";
    function format({ key, value }) {
        return `Invalid value ${value} for the property ${key}`;
    }
    InvalidPropertyError.format = format;
    function create(key, value) {
        return incident_1.Incident(InvalidPropertyError.name, { key, value }, format);
    }
    InvalidPropertyError.create = create;
})(InvalidPropertyError = exports.InvalidPropertyError || (exports.InvalidPropertyError = {}));
exports.default = InvalidPropertyError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvaW52YWxpZC1wcm9wZXJ0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUVsQyxJQUFpQixvQkFBb0IsQ0FlcEM7QUFmRCxXQUFpQixvQkFBb0I7SUFFdEIseUJBQUksR0FBUyxpQkFBaUIsQ0FBQztJQU81QyxnQkFBdUIsRUFBQyxHQUFHLEVBQUUsS0FBSyxFQUFPO1FBQ3ZDLE1BQU0sQ0FBQyxpQkFBaUIsS0FBSyxxQkFBcUIsR0FBRyxFQUFFLENBQUM7SUFDMUQsQ0FBQztJQUZlLDJCQUFNLFNBRXJCLENBQUE7SUFDRCxnQkFBdUIsR0FBVyxFQUFFLEtBQVU7UUFDNUMsTUFBTSxDQUFDLG1CQUFRLENBQUMscUJBQUEsSUFBSSxFQUFFLEVBQUMsR0FBRyxFQUFFLEtBQUssRUFBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFGZSwyQkFBTSxTQUVyQixDQUFBO0FBQ0gsQ0FBQyxFQWZnQixvQkFBb0IsR0FBcEIsNEJBQW9CLEtBQXBCLDRCQUFvQixRQWVwQztBQUlELGtCQUFlLG9CQUFvQixDQUFDIiwiZmlsZSI6ImxpYi9lcnJvcnMvaW52YWxpZC1wcm9wZXJ0eS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5jaWRlbnR9IGZyb20gXCJpbmNpZGVudFwiO1xuXG5leHBvcnQgbmFtZXNwYWNlIEludmFsaWRQcm9wZXJ0eUVycm9yIHtcbiAgZXhwb3J0IHR5cGUgTmFtZSA9IFwiSW52YWxpZFByb3BlcnR5XCI7XG4gIGV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJJbnZhbGlkUHJvcGVydHlcIjtcbiAgZXhwb3J0IGludGVyZmFjZSBEYXRhIHtcbiAgICBrZXk6IHN0cmluZztcbiAgICB2YWx1ZTogYW55O1xuICB9XG4gIGV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuICBleHBvcnQgdHlwZSBUeXBlID0gSW5jaWRlbnQ8TmFtZSwgRGF0YSwgQ2F1c2U+O1xuICBleHBvcnQgZnVuY3Rpb24gZm9ybWF0KHtrZXksIHZhbHVlfTogRGF0YSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBJbnZhbGlkIHZhbHVlICR7dmFsdWV9IGZvciB0aGUgcHJvcGVydHkgJHtrZXl9YDtcbiAgfVxuICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlKGtleTogc3RyaW5nLCB2YWx1ZTogYW55KTogVHlwZSB7XG4gICAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHtrZXksIHZhbHVlfSwgZm9ybWF0KTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBJbnZhbGlkUHJvcGVydHlFcnJvciA9IEludmFsaWRQcm9wZXJ0eUVycm9yLlR5cGU7XG5cbmV4cG9ydCBkZWZhdWx0IEludmFsaWRQcm9wZXJ0eUVycm9yO1xuIl19


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var MissingKeysError;
(function (MissingKeysError) {
    MissingKeysError.name = "MissingKeys";
    function format({ keys }) {
        return `Expected missing keys: ${JSON.stringify(keys)}`;
    }
    MissingKeysError.format = format;
    function create(keys) {
        return incident_1.Incident(MissingKeysError.name, { keys }, format);
    }
    MissingKeysError.create = create;
})(MissingKeysError = exports.MissingKeysError || (exports.MissingKeysError = {}));
exports.default = MissingKeysError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvbWlzc2luZy1rZXlzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQWtDO0FBRWxDLElBQWlCLGdCQUFnQixDQWNoQztBQWRELFdBQWlCLGdCQUFnQjtJQUVsQixxQkFBSSxHQUFTLGFBQWEsQ0FBQztJQU14QyxnQkFBdUIsRUFBQyxJQUFJLEVBQU87UUFDakMsTUFBTSxDQUFDLDBCQUEwQixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUM7SUFDMUQsQ0FBQztJQUZlLHVCQUFNLFNBRXJCLENBQUE7SUFDRCxnQkFBdUIsSUFBYztRQUNuQyxNQUFNLENBQUMsbUJBQVEsQ0FBQyxpQkFBQSxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRmUsdUJBQU0sU0FFckIsQ0FBQTtBQUNILENBQUMsRUFkZ0IsZ0JBQWdCLEdBQWhCLHdCQUFnQixLQUFoQix3QkFBZ0IsUUFjaEM7QUFJRCxrQkFBZSxnQkFBZ0IsQ0FBQyIsImZpbGUiOiJsaWIvZXJyb3JzL21pc3Npbmcta2V5cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5jaWRlbnR9IGZyb20gXCJpbmNpZGVudFwiO1xuXG5leHBvcnQgbmFtZXNwYWNlIE1pc3NpbmdLZXlzRXJyb3Ige1xuICBleHBvcnQgdHlwZSBOYW1lID0gXCJNaXNzaW5nS2V5c1wiO1xuICBleHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiTWlzc2luZ0tleXNcIjtcbiAgZXhwb3J0IGludGVyZmFjZSBEYXRhIHtcbiAgICBrZXlzOiBzdHJpbmdbXTtcbiAgfVxuICBleHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbiAgZXhwb3J0IHR5cGUgVHlwZSA9IEluY2lkZW50PE5hbWUsIERhdGEsIENhdXNlPjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7a2V5c306IERhdGEpOiBzdHJpbmcge1xuICAgIHJldHVybiBgRXhwZWN0ZWQgbWlzc2luZyBrZXlzOiAke0pTT04uc3RyaW5naWZ5KGtleXMpfWA7XG4gIH1cbiAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZShrZXlzOiBzdHJpbmdbXSk6IFR5cGUge1xuICAgIHJldHVybiBJbmNpZGVudChuYW1lLCB7a2V5c30sIGZvcm1hdCk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgTWlzc2luZ0tleXNFcnJvciA9IE1pc3NpbmdLZXlzRXJyb3IuVHlwZTtcblxuZXhwb3J0IGRlZmF1bHQgTWlzc2luZ0tleXNFcnJvcjtcbiJdfQ==


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var NullPropertyError;
(function (NullPropertyError) {
    NullPropertyError.name = "NullProperty";
    function format({ key }) {
        return `The property ${key} is not allowed to be null`;
    }
    NullPropertyError.format = format;
    function create(key) {
        return incident_1.Incident(NullPropertyError.name, { key }, format);
    }
    NullPropertyError.create = create;
})(NullPropertyError = exports.NullPropertyError || (exports.NullPropertyError = {}));
exports.default = NullPropertyError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvbnVsbC1wcm9wZXJ0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUVsQyxJQUFpQixpQkFBaUIsQ0FjakM7QUFkRCxXQUFpQixpQkFBaUI7SUFFbkIsc0JBQUksR0FBUyxjQUFjLENBQUM7SUFNekMsZ0JBQXVCLEVBQUMsR0FBRyxFQUFPO1FBQ2hDLE1BQU0sQ0FBQyxnQkFBZ0IsR0FBRyw0QkFBNEIsQ0FBQztJQUN6RCxDQUFDO0lBRmUsd0JBQU0sU0FFckIsQ0FBQTtJQUNELGdCQUF1QixHQUFXO1FBQ2hDLE1BQU0sQ0FBQyxtQkFBUSxDQUFDLGtCQUFBLElBQUksRUFBRSxFQUFDLEdBQUcsRUFBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFGZSx3QkFBTSxTQUVyQixDQUFBO0FBQ0gsQ0FBQyxFQWRnQixpQkFBaUIsR0FBakIseUJBQWlCLEtBQWpCLHlCQUFpQixRQWNqQztBQUlELGtCQUFlLGlCQUFpQixDQUFDIiwiZmlsZSI6ImxpYi9lcnJvcnMvbnVsbC1wcm9wZXJ0eS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5jaWRlbnR9IGZyb20gXCJpbmNpZGVudFwiO1xuXG5leHBvcnQgbmFtZXNwYWNlIE51bGxQcm9wZXJ0eUVycm9yIHtcbiAgZXhwb3J0IHR5cGUgTmFtZSA9IFwiTnVsbFByb3BlcnR5XCI7XG4gIGV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJOdWxsUHJvcGVydHlcIjtcbiAgZXhwb3J0IGludGVyZmFjZSBEYXRhIHtcbiAgICBrZXk6IHN0cmluZztcbiAgfVxuICBleHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbiAgZXhwb3J0IHR5cGUgVHlwZSA9IEluY2lkZW50PE5hbWUsIERhdGEsIENhdXNlPjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7a2V5fTogRGF0YSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBUaGUgcHJvcGVydHkgJHtrZXl9IGlzIG5vdCBhbGxvd2VkIHRvIGJlIG51bGxgO1xuICB9XG4gIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGUoa2V5OiBzdHJpbmcpOiBUeXBlIHtcbiAgICByZXR1cm4gSW5jaWRlbnQobmFtZSwge2tleX0sIGZvcm1hdCk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgTnVsbFByb3BlcnR5RXJyb3IgPSBOdWxsUHJvcGVydHlFcnJvci5UeXBlO1xuXG5leHBvcnQgZGVmYXVsdCBOdWxsUHJvcGVydHlFcnJvcjtcbiJdfQ==


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const unknown_format_1 = __webpack_require__(7);
const wrong_type_1 = __webpack_require__(8);
exports.name = "float64";
class Float64Type {
    constructor(options) {
        this.name = exports.name;
        const defaultNotNan = true;
        const defaultNotInfinity = true;
        if (options === undefined) {
            this.notNan = defaultNotNan;
            this.notInfinity = defaultNotInfinity;
        }
        else {
            this.notNan = options.notNan !== undefined ? options.notNan : defaultNotNan;
            this.notInfinity = options.notInfinity !== undefined ? options.notInfinity : defaultNotInfinity;
        }
    }
    static fromJSON(options) {
        return new Float64Type(options);
    }
    toJSON() {
        return {
            name: exports.name,
            notNan: this.notNan,
            notInfinity: this.notInfinity,
        };
    }
    readTrusted(format, input) {
        switch (format) {
            case "bson":
                return input;
            case "json":
                if (typeof input === "number") {
                    return input;
                }
                switch (input) {
                    case "NaN":
                        return NaN;
                    case "+Infinity":
                        return Infinity;
                    case "-Infinity":
                        return -Infinity;
                    default:
                        return undefined;
                }
            case "qs":
                switch (input) {
                    case "NaN":
                        return NaN;
                    case "+Infinity":
                        return Infinity;
                    case "-Infinity":
                        return -Infinity;
                    default:
                        return parseFloat(input);
                }
            default:
                return undefined;
        }
    }
    read(format, input) {
        switch (format) {
            case "bson":
                if (typeof input !== "number") {
                    throw wrong_type_1.WrongTypeError.create("number", input);
                }
                return input;
            case "json":
                if (typeof input === "number") {
                    return input;
                }
                switch (input) {
                    case "NaN":
                        if (this.notNan) {
                            throw incident_1.Incident("Nan", "NaN is not allowed");
                        }
                        return NaN;
                    case "+Infinity":
                        if (this.notNan) {
                            throw incident_1.Incident("Infinity", "+Infinity is not allowed");
                        }
                        return Infinity;
                    case "-Infinity":
                        if (this.notNan) {
                            throw incident_1.Incident("Infinity", "-Infinity is not allowed");
                        }
                        return -Infinity;
                    default:
                        throw incident_1.Incident("InvalidNumberInput", "Expected a number, or one of NaN, +Infinity, -Infinity");
                }
            case "qs":
                if (typeof input !== "string") {
                    throw wrong_type_1.WrongTypeError.create("string", input);
                }
                switch (input) {
                    case "NaN":
                        if (this.notNan) {
                            throw incident_1.Incident("Nan", "NaN is not allowed");
                        }
                        return NaN;
                    case "+Infinity":
                        if (this.notNan) {
                            throw incident_1.Incident("Infinity", "+Infinity is not allowed");
                        }
                        return Infinity;
                    case "-Infinity":
                        if (this.notNan) {
                            throw incident_1.Incident("Infinity", "-Infinity is not allowed");
                        }
                        return -Infinity;
                    default:
                        const val = parseFloat(input);
                        const error = this.testError(val);
                        if (error !== undefined) {
                            throw error;
                        }
                        return val;
                }
            default:
                throw unknown_format_1.UnknownFormatError.create(format);
        }
    }
    write(format, val) {
        if (format === "bson") {
            return val;
        }
        if (isNaN(val)) {
            return "NaN";
        }
        else if (val === Infinity) {
            return "+Infinity";
        }
        else if (val === -Infinity) {
            return "-Infinity";
        }
        return format === "json" ? val : val.toString(10);
    }
    testError(val) {
        if (typeof val !== "number") {
            return wrong_type_1.WrongTypeError.create("number", val);
        }
        if (isNaN(val) && this.notNan) {
            return incident_1.Incident("");
        }
        else if (val === Infinity && this.notInfinity) {
            return incident_1.Incident("Infinity", "+Infinity is not allowed");
        }
        else if (val === -Infinity && this.notInfinity) {
            return incident_1.Incident("Infinity", "-Infinity is not allowed");
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        if (isNaN(val1) || isNaN(val2)) {
            return isNaN(val1) && isNaN(val2);
        }
        return val1 === val2;
    }
    clone(val) {
        return val;
    }
    diff(oldVal, newVal) {
        // We can't use an arithmetic difference due to possible precision loss
        return this.equals(oldVal, newVal) ? undefined : [oldVal, newVal];
    }
    patch(oldVal, diff) {
        return diff === undefined ? oldVal : diff[1];
    }
    reverseDiff(diff) {
        return diff === undefined ? undefined : [diff[1], diff[0]];
    }
    squash(diff1, diff2) {
        if (diff1 === undefined) {
            return diff2 === undefined ? undefined : [diff2[0], diff2[1]];
        }
        else if (diff2 === undefined) {
            return [diff1[0], diff1[1]];
        }
        return this.equals(diff1[0], diff2[1]) ? undefined : [diff1[0], diff2[1]];
    }
}
exports.Float64Type = Float64Type;
exports.Type = Float64Type;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90eXBlcy9mbG9hdDY0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQWtDO0FBQ2xDLDZEQUE0RDtBQUM1RCxxREFBb0Q7QUFJdkMsUUFBQSxJQUFJLEdBQVMsU0FBUyxDQUFDO0FBMEJwQztJQVFFLFlBQVksT0FBaUI7UUFKcEIsU0FBSSxHQUFTLFlBQUksQ0FBQztRQUt6QixNQUFNLGFBQWEsR0FBWSxJQUFJLENBQUM7UUFDcEMsTUFBTSxrQkFBa0IsR0FBWSxJQUFJLENBQUM7UUFDekMsRUFBRSxDQUFDLENBQUMsT0FBTyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDMUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxhQUFhLENBQUM7WUFDNUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxrQkFBa0IsQ0FBQztRQUN4QyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixJQUFJLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLEtBQUssU0FBUyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEdBQUcsYUFBYSxDQUFDO1lBQzVFLElBQUksQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLFdBQVcsS0FBSyxTQUFTLEdBQUcsT0FBTyxDQUFDLFdBQVcsR0FBRyxrQkFBa0IsQ0FBQztRQUNsRyxDQUFDO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBa0I7UUFDaEMsTUFBTSxDQUFDLElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCxNQUFNO1FBQ0osTUFBTSxDQUFDO1lBQ0wsSUFBSSxFQUFFLFlBQUk7WUFDVixNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU07WUFDbkIsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUFXO1NBQzlCLENBQUM7SUFDSixDQUFDO0lBS0QsV0FBVyxDQUFDLE1BQThCLEVBQUUsS0FBVTtRQUNwRCxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ2YsS0FBSyxNQUFNO2dCQUNULE1BQU0sQ0FBQyxLQUFLLENBQUM7WUFDZixLQUFLLE1BQU07Z0JBQ1QsRUFBRSxDQUFDLENBQUMsT0FBTyxLQUFLLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQztvQkFDOUIsTUFBTSxDQUFDLEtBQUssQ0FBQztnQkFDZixDQUFDO2dCQUNELE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7b0JBQ2QsS0FBSyxLQUFLO3dCQUNSLE1BQU0sQ0FBQyxHQUFHLENBQUM7b0JBQ2IsS0FBSyxXQUFXO3dCQUNkLE1BQU0sQ0FBQyxRQUFRLENBQUM7b0JBQ2xCLEtBQUssV0FBVzt3QkFDZCxNQUFNLENBQUMsQ0FBQyxRQUFRLENBQUM7b0JBQ25CO3dCQUNFLE1BQU0sQ0FBQyxTQUFrQixDQUFDO2dCQUM5QixDQUFDO1lBQ0gsS0FBSyxJQUFJO2dCQUNQLE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7b0JBQ2QsS0FBSyxLQUFLO3dCQUNSLE1BQU0sQ0FBQyxHQUFHLENBQUM7b0JBQ2IsS0FBSyxXQUFXO3dCQUNkLE1BQU0sQ0FBQyxRQUFRLENBQUM7b0JBQ2xCLEtBQUssV0FBVzt3QkFDZCxNQUFNLENBQUMsQ0FBQyxRQUFRLENBQUM7b0JBQ25CO3dCQUNFLE1BQU0sQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzdCLENBQUM7WUFDSDtnQkFDRSxNQUFNLENBQUMsU0FBa0IsQ0FBQztRQUM5QixDQUFDO0lBQ0gsQ0FBQztJQUVELElBQUksQ0FBQyxNQUE4QixFQUFFLEtBQVU7UUFDN0MsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNmLEtBQUssTUFBTTtnQkFDVCxFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDO29CQUM5QixNQUFNLDJCQUFjLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztnQkFDL0MsQ0FBQztnQkFDRCxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2YsS0FBSyxNQUFNO2dCQUNULEVBQUUsQ0FBQyxDQUFDLE9BQU8sS0FBSyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUM7b0JBQzlCLE1BQU0sQ0FBQyxLQUFLLENBQUM7Z0JBQ2YsQ0FBQztnQkFDRCxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO29CQUNkLEtBQUssS0FBSzt3QkFDUixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQzs0QkFDaEIsTUFBTSxtQkFBUSxDQUFDLEtBQUssRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO3dCQUM5QyxDQUFDO3dCQUNELE1BQU0sQ0FBQyxHQUFHLENBQUM7b0JBQ2IsS0FBSyxXQUFXO3dCQUNkLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDOzRCQUNoQixNQUFNLG1CQUFRLENBQUMsVUFBVSxFQUFFLDBCQUEwQixDQUFDLENBQUM7d0JBQ3pELENBQUM7d0JBQ0QsTUFBTSxDQUFDLFFBQVEsQ0FBQztvQkFDbEIsS0FBSyxXQUFXO3dCQUNkLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDOzRCQUNoQixNQUFNLG1CQUFRLENBQUMsVUFBVSxFQUFFLDBCQUEwQixDQUFDLENBQUM7d0JBQ3pELENBQUM7d0JBQ0QsTUFBTSxDQUFDLENBQUMsUUFBUSxDQUFDO29CQUNuQjt3QkFDRSxNQUFNLG1CQUFRLENBQUMsb0JBQW9CLEVBQUUsd0RBQXdELENBQUMsQ0FBQztnQkFDbkcsQ0FBQztZQUNILEtBQUssSUFBSTtnQkFDUCxFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDO29CQUM5QixNQUFNLDJCQUFjLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztnQkFDL0MsQ0FBQztnQkFDRCxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO29CQUNkLEtBQUssS0FBSzt3QkFDUixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQzs0QkFDaEIsTUFBTSxtQkFBUSxDQUFDLEtBQUssRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO3dCQUM5QyxDQUFDO3dCQUNELE1BQU0sQ0FBQyxHQUFHLENBQUM7b0JBQ2IsS0FBSyxXQUFXO3dCQUNkLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDOzRCQUNoQixNQUFNLG1CQUFRLENBQUMsVUFBVSxFQUFFLDBCQUEwQixDQUFDLENBQUM7d0JBQ3pELENBQUM7d0JBQ0QsTUFBTSxDQUFDLFFBQVEsQ0FBQztvQkFDbEIsS0FBSyxXQUFXO3dCQUNkLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDOzRCQUNoQixNQUFNLG1CQUFRLENBQUMsVUFBVSxFQUFFLDBCQUEwQixDQUFDLENBQUM7d0JBQ3pELENBQUM7d0JBQ0QsTUFBTSxDQUFDLENBQUMsUUFBUSxDQUFDO29CQUNuQjt3QkFDRSxNQUFNLEdBQUcsR0FBVyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7d0JBQ3RDLE1BQU0sS0FBSyxHQUFzQixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO3dCQUNyRCxFQUFFLENBQUMsQ0FBQyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQzs0QkFDeEIsTUFBTSxLQUFLLENBQUM7d0JBQ2QsQ0FBQzt3QkFDRCxNQUFNLENBQUMsR0FBRyxDQUFDO2dCQUNmLENBQUM7WUFDSDtnQkFDRSxNQUFNLG1DQUFrQixDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM1QyxDQUFDO0lBQ0gsQ0FBQztJQUtELEtBQUssQ0FBQyxNQUE4QixFQUFFLEdBQU07UUFDMUMsRUFBRSxDQUFDLENBQUMsTUFBTSxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDdEIsTUFBTSxDQUFDLEdBQUcsQ0FBQztRQUNiLENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2YsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUNmLENBQUM7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDNUIsTUFBTSxDQUFDLFdBQVcsQ0FBQztRQUNyQixDQUFDO1FBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDN0IsTUFBTSxDQUFDLFdBQVcsQ0FBQztRQUNyQixDQUFDO1FBQ0QsTUFBTSxDQUFDLE1BQU0sS0FBSyxNQUFNLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELFNBQVMsQ0FBQyxHQUFNO1FBQ2QsRUFBRSxDQUFDLENBQUMsT0FBTyxHQUFHLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQztZQUM1QixNQUFNLENBQUMsMkJBQWMsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQzlDLENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDOUIsTUFBTSxDQUFDLG1CQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDdEIsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEtBQUssUUFBUSxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1lBQ2hELE1BQU0sQ0FBQyxtQkFBUSxDQUFDLFVBQVUsRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO1FBQzFELENBQUM7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1lBQ2pELE1BQU0sQ0FBQyxtQkFBUSxDQUFDLFVBQVUsRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO1FBQzFELENBQUM7UUFDRCxNQUFNLENBQUMsU0FBUyxDQUFDO0lBQ25CLENBQUM7SUFFRCxJQUFJLENBQUMsR0FBTTtRQUNULE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxLQUFLLFNBQVMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQU8sRUFBRSxJQUFPO1FBQ3JCLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQy9CLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3BDLENBQUM7UUFDRCxNQUFNLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQztJQUN2QixDQUFDO0lBRUQsS0FBSyxDQUFDLEdBQU07UUFDVixNQUFNLENBQUMsR0FBRyxDQUFDO0lBQ2IsQ0FBQztJQUVELElBQUksQ0FBQyxNQUFTLEVBQUUsTUFBUztRQUN2Qix1RUFBdUU7UUFDdkUsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxHQUFHLFNBQVMsR0FBRyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNwRSxDQUFDO0lBRUQsS0FBSyxDQUFDLE1BQVMsRUFBRSxJQUFzQjtRQUNyQyxNQUFNLENBQUMsSUFBSSxLQUFLLFNBQVMsR0FBRyxNQUFNLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRCxXQUFXLENBQUMsSUFBc0I7UUFDaEMsTUFBTSxDQUFDLElBQUksS0FBSyxTQUFTLEdBQUcsU0FBUyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFFRCxNQUFNLENBQUMsS0FBdUIsRUFBRSxLQUF1QjtRQUNyRCxFQUFFLENBQUMsQ0FBQyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztZQUN4QixNQUFNLENBQUMsS0FBSyxLQUFLLFNBQVMsR0FBRyxTQUFTLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDaEUsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztZQUMvQixNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUIsQ0FBQztRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxTQUFTLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDNUUsQ0FBQztDQUNGO0FBdk1ELGtDQXVNQztBQUVzQiwyQkFBSSIsImZpbGUiOiJsaWIvdHlwZXMvZmxvYXQ2NC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5jaWRlbnR9IGZyb20gXCJpbmNpZGVudFwiO1xuaW1wb3J0IHtVbmtub3duRm9ybWF0RXJyb3J9IGZyb20gXCIuLi9lcnJvcnMvdW5rbm93bi1mb3JtYXRcIjtcbmltcG9ydCB7V3JvbmdUeXBlRXJyb3J9IGZyb20gXCIuLi9lcnJvcnMvd3JvbmctdHlwZVwiO1xuaW1wb3J0IHtTZXJpYWxpemFibGVUeXBlLCBWZXJzaW9uZWRUeXBlfSBmcm9tIFwiLi4vaW50ZXJmYWNlc1wiO1xuXG5leHBvcnQgdHlwZSBOYW1lID0gXCJmbG9hdDY0XCI7XG5leHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiZmxvYXQ2NFwiO1xuZXhwb3J0IHR5cGUgVCA9IG51bWJlcjtcbmV4cG9ydCBuYW1lc3BhY2UgYnNvbiB7XG4gIC8vIFRPRE8oZGVtdXJnb3MpOiBDaGVjayBpZiBCU09OIHN1cHBvcnQgTmFOIGFuZCBJbmZpbml0eSAoYWRkIHNvbWUgdGVzdHMpXG4gIGV4cG9ydCB0eXBlIElucHV0ID0gbnVtYmVyO1xuICBleHBvcnQgdHlwZSBPdXRwdXQgPSBudW1iZXI7XG59XG5leHBvcnQgbmFtZXNwYWNlIGpzb24ge1xuICBleHBvcnQgdHlwZSBJbnB1dCA9IG51bWJlciB8IFwiTmFOXCIgfCBcIitJbmZpbml0eVwiIHwgXCItSW5maW5pdHlcIjtcbiAgZXhwb3J0IHR5cGUgT3V0cHV0ID0gbnVtYmVyIHwgXCJOYU5cIiB8IFwiK0luZmluaXR5XCIgfCBcIi1JbmZpbml0eVwiO1xuICBleHBvcnQgaW50ZXJmYWNlIFR5cGUge1xuICAgIG5hbWU6IE5hbWU7XG4gICAgbm90TmFuOiBib29sZWFuO1xuICAgIG5vdEluZmluaXR5OiBib29sZWFuO1xuICB9XG59XG5leHBvcnQgbmFtZXNwYWNlIHFzIHtcbiAgZXhwb3J0IHR5cGUgSW5wdXQgPSBzdHJpbmc7XG4gIGV4cG9ydCB0eXBlIE91dHB1dCA9IHN0cmluZztcbn1cbmV4cG9ydCB0eXBlIERpZmYgPSBbbnVtYmVyLCBudW1iZXJdO1xuZXhwb3J0IGludGVyZmFjZSBPcHRpb25zIHtcbiAgbm90TmFuPzogYm9vbGVhbjtcbiAgbm90SW5maW5pdHk/OiBib29sZWFuO1xufVxuXG5leHBvcnQgY2xhc3MgRmxvYXQ2NFR5cGVcbiAgaW1wbGVtZW50cyBWZXJzaW9uZWRUeXBlPFQsIGpzb24uSW5wdXQsIGpzb24uT3V0cHV0LCBEaWZmPixcbiAgICBTZXJpYWxpemFibGVUeXBlPFQsIFwiYnNvblwiLCBic29uLklucHV0LCBic29uLk91dHB1dD4sXG4gICAgU2VyaWFsaXphYmxlVHlwZTxULCBcInFzXCIsIHFzLklucHV0LCBxcy5PdXRwdXQ+IHtcbiAgcmVhZG9ubHkgbmFtZTogTmFtZSA9IG5hbWU7XG4gIHJlYWRvbmx5IG5vdE5hbjogYm9vbGVhbjsgLy8gVE9ETyhkZW11cmdvcyk6IHJlbmFtZSB0byBhbGxvd05hTlxuICByZWFkb25seSBub3RJbmZpbml0eTogYm9vbGVhbjsgLy8gVE9ETyhkZW11cmdvcyk6IHJlbmFtZSB0byBhbGxvd0luZmluaXR5XG5cbiAgY29uc3RydWN0b3Iob3B0aW9ucz86IE9wdGlvbnMpIHtcbiAgICBjb25zdCBkZWZhdWx0Tm90TmFuOiBib29sZWFuID0gdHJ1ZTtcbiAgICBjb25zdCBkZWZhdWx0Tm90SW5maW5pdHk6IGJvb2xlYW4gPSB0cnVlO1xuICAgIGlmIChvcHRpb25zID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRoaXMubm90TmFuID0gZGVmYXVsdE5vdE5hbjtcbiAgICAgIHRoaXMubm90SW5maW5pdHkgPSBkZWZhdWx0Tm90SW5maW5pdHk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubm90TmFuID0gb3B0aW9ucy5ub3ROYW4gIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubm90TmFuIDogZGVmYXVsdE5vdE5hbjtcbiAgICAgIHRoaXMubm90SW5maW5pdHkgPSBvcHRpb25zLm5vdEluZmluaXR5ICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLm5vdEluZmluaXR5IDogZGVmYXVsdE5vdEluZmluaXR5O1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBmcm9tSlNPTihvcHRpb25zOiBqc29uLlR5cGUpOiBGbG9hdDY0VHlwZSB7XG4gICAgcmV0dXJuIG5ldyBGbG9hdDY0VHlwZShvcHRpb25zKTtcbiAgfVxuXG4gIHRvSlNPTigpOiBqc29uLlR5cGUge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiBuYW1lLFxuICAgICAgbm90TmFuOiB0aGlzLm5vdE5hbixcbiAgICAgIG5vdEluZmluaXR5OiB0aGlzLm5vdEluZmluaXR5LFxuICAgIH07XG4gIH1cblxuICByZWFkVHJ1c3RlZChmb3JtYXQ6IFwiYnNvblwiLCB2YWw6IGJzb24uT3V0cHV0KTogVDtcbiAgcmVhZFRydXN0ZWQoZm9ybWF0OiBcImpzb25cIiwgdmFsOiBqc29uLk91dHB1dCk6IFQ7XG4gIHJlYWRUcnVzdGVkKGZvcm1hdDogXCJxc1wiLCB2YWw6IHFzLk91dHB1dCk6IFQ7XG4gIHJlYWRUcnVzdGVkKGZvcm1hdDogXCJic29uXCIgfCBcImpzb25cIiB8IFwicXNcIiwgaW5wdXQ6IGFueSk6IFQge1xuICAgIHN3aXRjaCAoZm9ybWF0KSB7XG4gICAgICBjYXNlIFwiYnNvblwiOlxuICAgICAgICByZXR1cm4gaW5wdXQ7XG4gICAgICBjYXNlIFwianNvblwiOlxuICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgcmV0dXJuIGlucHV0O1xuICAgICAgICB9XG4gICAgICAgIHN3aXRjaCAoaW5wdXQpIHtcbiAgICAgICAgICBjYXNlIFwiTmFOXCI6XG4gICAgICAgICAgICByZXR1cm4gTmFOO1xuICAgICAgICAgIGNhc2UgXCIrSW5maW5pdHlcIjpcbiAgICAgICAgICAgIHJldHVybiBJbmZpbml0eTtcbiAgICAgICAgICBjYXNlIFwiLUluZmluaXR5XCI6XG4gICAgICAgICAgICByZXR1cm4gLUluZmluaXR5O1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkIGFzIG5ldmVyO1xuICAgICAgICB9XG4gICAgICBjYXNlIFwicXNcIjpcbiAgICAgICAgc3dpdGNoIChpbnB1dCkge1xuICAgICAgICAgIGNhc2UgXCJOYU5cIjpcbiAgICAgICAgICAgIHJldHVybiBOYU47XG4gICAgICAgICAgY2FzZSBcIitJbmZpbml0eVwiOlxuICAgICAgICAgICAgcmV0dXJuIEluZmluaXR5O1xuICAgICAgICAgIGNhc2UgXCItSW5maW5pdHlcIjpcbiAgICAgICAgICAgIHJldHVybiAtSW5maW5pdHk7XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBwYXJzZUZsb2F0KGlucHV0KTtcbiAgICAgICAgfVxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZCBhcyBuZXZlcjtcbiAgICB9XG4gIH1cblxuICByZWFkKGZvcm1hdDogXCJic29uXCIgfCBcImpzb25cIiB8IFwicXNcIiwgaW5wdXQ6IGFueSk6IFQge1xuICAgIHN3aXRjaCAoZm9ybWF0KSB7XG4gICAgICBjYXNlIFwiYnNvblwiOlxuICAgICAgICBpZiAodHlwZW9mIGlucHV0ICE9PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgdGhyb3cgV3JvbmdUeXBlRXJyb3IuY3JlYXRlKFwibnVtYmVyXCIsIGlucHV0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5wdXQ7XG4gICAgICBjYXNlIFwianNvblwiOlxuICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgcmV0dXJuIGlucHV0O1xuICAgICAgICB9XG4gICAgICAgIHN3aXRjaCAoaW5wdXQpIHtcbiAgICAgICAgICBjYXNlIFwiTmFOXCI6XG4gICAgICAgICAgICBpZiAodGhpcy5ub3ROYW4pIHtcbiAgICAgICAgICAgICAgdGhyb3cgSW5jaWRlbnQoXCJOYW5cIiwgXCJOYU4gaXMgbm90IGFsbG93ZWRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gTmFOO1xuICAgICAgICAgIGNhc2UgXCIrSW5maW5pdHlcIjpcbiAgICAgICAgICAgIGlmICh0aGlzLm5vdE5hbikge1xuICAgICAgICAgICAgICB0aHJvdyBJbmNpZGVudChcIkluZmluaXR5XCIsIFwiK0luZmluaXR5IGlzIG5vdCBhbGxvd2VkXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIEluZmluaXR5O1xuICAgICAgICAgIGNhc2UgXCItSW5maW5pdHlcIjpcbiAgICAgICAgICAgIGlmICh0aGlzLm5vdE5hbikge1xuICAgICAgICAgICAgICB0aHJvdyBJbmNpZGVudChcIkluZmluaXR5XCIsIFwiLUluZmluaXR5IGlzIG5vdCBhbGxvd2VkXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIC1JbmZpbml0eTtcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgSW5jaWRlbnQoXCJJbnZhbGlkTnVtYmVySW5wdXRcIiwgXCJFeHBlY3RlZCBhIG51bWJlciwgb3Igb25lIG9mIE5hTiwgK0luZmluaXR5LCAtSW5maW5pdHlcIik7XG4gICAgICAgIH1cbiAgICAgIGNhc2UgXCJxc1wiOlxuICAgICAgICBpZiAodHlwZW9mIGlucHV0ICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgdGhyb3cgV3JvbmdUeXBlRXJyb3IuY3JlYXRlKFwic3RyaW5nXCIsIGlucHV0KTtcbiAgICAgICAgfVxuICAgICAgICBzd2l0Y2ggKGlucHV0KSB7XG4gICAgICAgICAgY2FzZSBcIk5hTlwiOlxuICAgICAgICAgICAgaWYgKHRoaXMubm90TmFuKSB7XG4gICAgICAgICAgICAgIHRocm93IEluY2lkZW50KFwiTmFuXCIsIFwiTmFOIGlzIG5vdCBhbGxvd2VkXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIE5hTjtcbiAgICAgICAgICBjYXNlIFwiK0luZmluaXR5XCI6XG4gICAgICAgICAgICBpZiAodGhpcy5ub3ROYW4pIHtcbiAgICAgICAgICAgICAgdGhyb3cgSW5jaWRlbnQoXCJJbmZpbml0eVwiLCBcIitJbmZpbml0eSBpcyBub3QgYWxsb3dlZFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBJbmZpbml0eTtcbiAgICAgICAgICBjYXNlIFwiLUluZmluaXR5XCI6XG4gICAgICAgICAgICBpZiAodGhpcy5ub3ROYW4pIHtcbiAgICAgICAgICAgICAgdGhyb3cgSW5jaWRlbnQoXCJJbmZpbml0eVwiLCBcIi1JbmZpbml0eSBpcyBub3QgYWxsb3dlZFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAtSW5maW5pdHk7XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNvbnN0IHZhbDogbnVtYmVyID0gcGFyc2VGbG9hdChpbnB1dCk7XG4gICAgICAgICAgICBjb25zdCBlcnJvcjogRXJyb3IgfCB1bmRlZmluZWQgPSB0aGlzLnRlc3RFcnJvcih2YWwpO1xuICAgICAgICAgICAgaWYgKGVycm9yICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdmFsO1xuICAgICAgICB9XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBVbmtub3duRm9ybWF0RXJyb3IuY3JlYXRlKGZvcm1hdCk7XG4gICAgfVxuICB9XG5cbiAgd3JpdGUoZm9ybWF0OiBcImJzb25cIiwgdmFsOiBUKTogYnNvbi5PdXRwdXQ7XG4gIHdyaXRlKGZvcm1hdDogXCJqc29uXCIsIHZhbDogVCk6IGpzb24uT3V0cHV0O1xuICB3cml0ZShmb3JtYXQ6IFwicXNcIiwgdmFsOiBUKTogcXMuT3V0cHV0O1xuICB3cml0ZShmb3JtYXQ6IFwiYnNvblwiIHwgXCJqc29uXCIgfCBcInFzXCIsIHZhbDogVCk6IGFueSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gXCJic29uXCIpIHtcbiAgICAgIHJldHVybiB2YWw7XG4gICAgfVxuICAgIGlmIChpc05hTih2YWwpKSB7XG4gICAgICByZXR1cm4gXCJOYU5cIjtcbiAgICB9IGVsc2UgaWYgKHZhbCA9PT0gSW5maW5pdHkpIHtcbiAgICAgIHJldHVybiBcIitJbmZpbml0eVwiO1xuICAgIH0gZWxzZSBpZiAodmFsID09PSAtSW5maW5pdHkpIHtcbiAgICAgIHJldHVybiBcIi1JbmZpbml0eVwiO1xuICAgIH1cbiAgICByZXR1cm4gZm9ybWF0ID09PSBcImpzb25cIiA/IHZhbCA6IHZhbC50b1N0cmluZygxMCk7XG4gIH1cblxuICB0ZXN0RXJyb3IodmFsOiBUKTogRXJyb3IgfCB1bmRlZmluZWQge1xuICAgIGlmICh0eXBlb2YgdmFsICE9PSBcIm51bWJlclwiKSB7XG4gICAgICByZXR1cm4gV3JvbmdUeXBlRXJyb3IuY3JlYXRlKFwibnVtYmVyXCIsIHZhbCk7XG4gICAgfVxuICAgIGlmIChpc05hTih2YWwpICYmIHRoaXMubm90TmFuKSB7XG4gICAgICByZXR1cm4gSW5jaWRlbnQoXCJcIik7XG4gICAgfSBlbHNlIGlmICh2YWwgPT09IEluZmluaXR5ICYmIHRoaXMubm90SW5maW5pdHkpIHtcbiAgICAgIHJldHVybiBJbmNpZGVudChcIkluZmluaXR5XCIsIFwiK0luZmluaXR5IGlzIG5vdCBhbGxvd2VkXCIpO1xuICAgIH0gZWxzZSBpZiAodmFsID09PSAtSW5maW5pdHkgJiYgdGhpcy5ub3RJbmZpbml0eSkge1xuICAgICAgcmV0dXJuIEluY2lkZW50KFwiSW5maW5pdHlcIiwgXCItSW5maW5pdHkgaXMgbm90IGFsbG93ZWRcIik7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICB0ZXN0KHZhbDogVCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnRlc3RFcnJvcih2YWwpID09PSB1bmRlZmluZWQ7XG4gIH1cblxuICBlcXVhbHModmFsMTogVCwgdmFsMjogVCk6IGJvb2xlYW4ge1xuICAgIGlmIChpc05hTih2YWwxKSB8fCBpc05hTih2YWwyKSkge1xuICAgICAgcmV0dXJuIGlzTmFOKHZhbDEpICYmIGlzTmFOKHZhbDIpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsMSA9PT0gdmFsMjtcbiAgfVxuXG4gIGNsb25lKHZhbDogVCk6IFQge1xuICAgIHJldHVybiB2YWw7XG4gIH1cblxuICBkaWZmKG9sZFZhbDogVCwgbmV3VmFsOiBUKTogRGlmZiB8IHVuZGVmaW5lZCB7XG4gICAgLy8gV2UgY2FuJ3QgdXNlIGFuIGFyaXRobWV0aWMgZGlmZmVyZW5jZSBkdWUgdG8gcG9zc2libGUgcHJlY2lzaW9uIGxvc3NcbiAgICByZXR1cm4gdGhpcy5lcXVhbHMob2xkVmFsLCBuZXdWYWwpID8gdW5kZWZpbmVkIDogW29sZFZhbCwgbmV3VmFsXTtcbiAgfVxuXG4gIHBhdGNoKG9sZFZhbDogVCwgZGlmZjogRGlmZiB8IHVuZGVmaW5lZCk6IFQge1xuICAgIHJldHVybiBkaWZmID09PSB1bmRlZmluZWQgPyBvbGRWYWwgOiBkaWZmWzFdO1xuICB9XG5cbiAgcmV2ZXJzZURpZmYoZGlmZjogRGlmZiB8IHVuZGVmaW5lZCk6IERpZmYgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiBkaWZmID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBbZGlmZlsxXSwgZGlmZlswXV07XG4gIH1cblxuICBzcXVhc2goZGlmZjE6IERpZmYgfCB1bmRlZmluZWQsIGRpZmYyOiBEaWZmIHwgdW5kZWZpbmVkKTogRGlmZiB8IHVuZGVmaW5lZCB7XG4gICAgaWYgKGRpZmYxID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBkaWZmMiA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogW2RpZmYyWzBdLCBkaWZmMlsxXV07XG4gICAgfSBlbHNlIGlmIChkaWZmMiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gW2RpZmYxWzBdLCBkaWZmMVsxXV07XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmVxdWFscyhkaWZmMVswXSwgZGlmZjJbMV0pID8gdW5kZWZpbmVkIDogW2RpZmYxWzBdLCBkaWZmMlsxXV07XG4gIH1cbn1cblxuZXhwb3J0IHtGbG9hdDY0VHlwZSBhcyBUeXBlfTtcbiJdfQ==


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const invalid_int32_1 = __webpack_require__(86);
const unknown_format_1 = __webpack_require__(7);
const wrong_type_1 = __webpack_require__(8);
exports.name = "int32";
class Int32Type {
    constructor() {
        this.name = exports.name;
    }
    static fromJSON(options) {
        return new Int32Type();
    }
    toJSON() {
        return { name: exports.name };
    }
    readTrusted(format, input) {
        switch (format) {
            case "bson":
                return input;
            case "json":
                return input;
            case "qs":
                return parseInt(input, 10);
            default:
                return undefined;
        }
    }
    read(format, input) {
        let val;
        switch (format) {
            case "bson":
            case "json":
                if (typeof input !== "number") {
                    throw wrong_type_1.WrongTypeError.create("number", input);
                }
                val = input;
                break;
            case "qs":
                if (typeof input !== "string") {
                    throw wrong_type_1.WrongTypeError.create("string", input);
                }
                val = parseInt(input, 10);
                break;
            default:
                throw unknown_format_1.UnknownFormatError.create(format);
        }
        if ((val | 0) !== val) {
            throw invalid_int32_1.InvalidInt32Error.create(val, input);
        }
        return val;
    }
    write(format, val) {
        switch (format) {
            case "bson":
                return val;
            case "json":
                return val;
            case "qs":
                return val.toString(10);
            default:
                return undefined;
        }
    }
    testError(val) {
        if (typeof val !== "number") {
            return wrong_type_1.WrongTypeError.create("number", val);
        }
        if ((val | 0) !== val) {
            return invalid_int32_1.InvalidInt32Error.create(val);
        }
        return undefined;
    }
    test(val) {
        return typeof val === "number" && (val | 0) === val;
    }
    equals(val1, val2) {
        return val1 === val2;
    }
    clone(val) {
        return val;
    }
    diff(oldVal, newVal) {
        return newVal === oldVal ? undefined : newVal - oldVal;
    }
    patch(oldVal, diff) {
        return diff === undefined ? oldVal : oldVal + diff;
    }
    reverseDiff(diff) {
        return diff && -diff;
    }
    squash(diff1, diff2) {
        if (diff1 === undefined) {
            return diff2;
        }
        else if (diff2 === undefined) {
            return diff1;
        }
        return diff2 === -diff1 ? undefined : diff1 + diff2;
    }
}
exports.Int32Type = Int32Type;
exports.Type = Int32Type;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var InvalidInt32Error;
(function (InvalidInt32Error) {
    InvalidInt32Error.name = "InvalidInt32";
    function format({ value, source }) {
        return `Invalid int32: ${value}` + (source === undefined ? "" : `, from ${source}`);
    }
    InvalidInt32Error.format = format;
    function create(value, source) {
        return incident_1.Incident(InvalidInt32Error.name, { value, source }, format);
    }
    InvalidInt32Error.create = create;
})(InvalidInt32Error = exports.InvalidInt32Error || (exports.InvalidInt32Error = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvaW52YWxpZC1pbnQzMi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUVsQyxJQUFpQixpQkFBaUIsQ0FlakM7QUFmRCxXQUFpQixpQkFBaUI7SUFFbkIsc0JBQUksR0FBUyxjQUFjLENBQUM7SUFPekMsZ0JBQXVCLEVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBTztRQUMxQyxNQUFNLENBQUMsa0JBQWtCLEtBQUssRUFBRSxHQUFHLENBQUMsTUFBTSxLQUFLLFNBQVMsR0FBRyxFQUFFLEdBQUcsVUFBVSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQ3RGLENBQUM7SUFGZSx3QkFBTSxTQUVyQixDQUFBO0lBQ0QsZ0JBQXVCLEtBQWEsRUFBRSxNQUFZO1FBQ2hELE1BQU0sQ0FBQyxtQkFBUSxDQUFDLGtCQUFBLElBQUksRUFBRSxFQUFDLEtBQUssRUFBRSxNQUFNLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBRmUsd0JBQU0sU0FFckIsQ0FBQTtBQUNILENBQUMsRUFmZ0IsaUJBQWlCLEdBQWpCLHlCQUFpQixLQUFqQix5QkFBaUIsUUFlakMiLCJmaWxlIjoibGliL2Vycm9ycy9pbnZhbGlkLWludDMyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmNpZGVudH0gZnJvbSBcImluY2lkZW50XCI7XG5cbmV4cG9ydCBuYW1lc3BhY2UgSW52YWxpZEludDMyRXJyb3Ige1xuICBleHBvcnQgdHlwZSBOYW1lID0gXCJJbnZhbGlkSW50MzJcIjtcbiAgZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcIkludmFsaWRJbnQzMlwiO1xuICBleHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICAgIHZhbHVlOiBhbnk7XG4gICAgc291cmNlPzogYW55O1xuICB9XG4gIGV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuICBleHBvcnQgdHlwZSBUeXBlID0gSW5jaWRlbnQ8TmFtZSwgRGF0YSwgQ2F1c2U+O1xuICBleHBvcnQgZnVuY3Rpb24gZm9ybWF0KHt2YWx1ZSwgc291cmNlfTogRGF0YSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBJbnZhbGlkIGludDMyOiAke3ZhbHVlfWAgKyAoc291cmNlID09PSB1bmRlZmluZWQgPyBcIlwiIDogYCwgZnJvbSAke3NvdXJjZX1gKTtcbiAgfVxuICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlKHZhbHVlOiBudW1iZXIsIHNvdXJjZT86IGFueSk6IFR5cGUge1xuICAgIHJldHVybiBJbmNpZGVudChuYW1lLCB7dmFsdWUsIHNvdXJjZX0sIGZvcm1hdCk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgSW52YWxpZEludGVnZXJFcnJvciA9IEludmFsaWRJbnQzMkVycm9yLlR5cGU7XG5cbmV4cG9ydCBkZWZhdWx0IEludmFsaWRJbnRlZ2VyRXJyb3I7XG4iXX0=


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const not_implemented_1 = __webpack_require__(10);
const unknown_format_1 = __webpack_require__(7);
const wrong_type_1 = __webpack_require__(8);
exports.name = "map";
class MapType {
    constructor(options) {
        this.name = exports.name;
        this.keyType = options.keyType;
        this.valueType = options.valueType;
        this.maxSize = options.maxSize;
        this.assumeStringKey = options.assumeStringKey || false;
    }
    toJSON() {
        throw not_implemented_1.NotImplementedError.create("MapType#toJSON");
    }
    readTrusted(format, input) {
        switch (format) {
            case "bson":
            case "json":
            case "qs":
                const result = new Map();
                for (const keyString in input) {
                    const key = this.keyType.readTrusted("json", JSON.parse(keyString));
                    // TODO(demurgos): Check if the format is supported instead of casting to `any`
                    const value = this.valueType.readTrusted(format, input[keyString]);
                    result.set(key, value);
                }
                return result;
            default:
                return undefined;
        }
    }
    read(format, input) {
        if (typeof input !== "object" || input === null) {
            throw wrong_type_1.WrongTypeError.create("object", input);
        }
        const result = new Map();
        switch (format) {
            case "bson":
            case "json":
            case "qs":
                for (const keyString in input) {
                    let rawKey;
                    try {
                        rawKey = JSON.parse(keyString);
                    }
                    catch (err) {
                        throw err;
                    }
                    const key = this.keyType.read("json", rawKey);
                    // TODO(demurgos): Check if the format is supported instead of casting to `any`
                    const value = this.valueType.read(format, input[keyString]);
                    result.set(key, value);
                }
                break;
            default:
                throw unknown_format_1.UnknownFormatError.create(format);
        }
        const error = this.testError(result);
        if (error !== undefined) {
            throw error;
        }
        return result;
    }
    write(format, val) {
        switch (format) {
            case "bson":
            case "json":
            case "qs":
                const result = {};
                for (const [key, value] of val) {
                    const rawKey = this.keyType.write("json", key);
                    const keyString = JSON.stringify(rawKey);
                    // TODO(demurgos): check for duplicate keys
                    // TODO(demurgos): Check if the format is supported instead of casting to `any`
                    result[keyString] = this.valueType.write(format, value);
                }
                return result;
            default:
                return undefined;
        }
    }
    testError(val) {
        if (!(val instanceof Map)) {
            return wrong_type_1.WrongTypeError.create("Map", val);
        }
        for (const [key, value] of val) {
            // TODO: test keyType
            const keyError = this.keyType.testError(key);
            if (keyError !== undefined) {
                return new incident_1.Incident("InvalidMapKey", { key, value }, "Invalid map entry: invalid key");
            }
            const valueError = this.valueType.testError(value);
            if (valueError !== undefined) {
                return new incident_1.Incident("InvalidMapValue", { key, value }, "Invalid map entry: invalid value");
            }
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        if (val2.size !== val1.size) {
            return false;
        }
        // TODO(demurgos): This test is brittle (order-sensitive) and involves unnecessary serialization.
        const val1Json = JSON.stringify(this.write("json", val1));
        const val2Json = JSON.stringify(this.write("json", val2));
        return val1Json === val2Json;
    }
    clone(val) {
        const result = new Map();
        for (const [key, value] of val) {
            const keyClone = this.keyType.clone(key);
            const valueClone = this.valueType.clone(value);
            result.set(key, value);
        }
        return result;
    }
    diff(oldVal, newVal) {
        throw not_implemented_1.NotImplementedError.create("MapType#diff");
    }
    patch(oldVal, diff) {
        throw not_implemented_1.NotImplementedError.create("MapType#patch");
    }
    reverseDiff(diff) {
        throw not_implemented_1.NotImplementedError.create("MapType#reverseDiff");
    }
    squash(diff1, diff2) {
        throw not_implemented_1.NotImplementedError.create("MapType#squash");
    }
}
exports.MapType = MapType;
exports.Type = MapType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const unknown_format_1 = __webpack_require__(7);
const wrong_type_1 = __webpack_require__(8);
exports.name = "null";
class NullType {
    constructor() {
        this.name = exports.name;
    }
    toJSON() {
        return { name: exports.name };
    }
    readTrusted(format, input) {
        return null;
    }
    read(format, input) {
        switch (format) {
            case "bson":
            case "json":
                if (input !== null) {
                    throw wrong_type_1.WrongTypeError.create("null", input);
                }
                return null;
            case "qs":
                if (input !== "") {
                    throw wrong_type_1.WrongTypeError.create("\"\"", input);
                }
                return null;
            default:
                throw unknown_format_1.UnknownFormatError.create(format);
        }
    }
    write(format, val) {
        switch (format) {
            case "bson":
            case "json":
                return null;
            case "qs":
                return "";
            default:
                return undefined;
        }
    }
    testError(val) {
        if (val !== "null") {
            return wrong_type_1.WrongTypeError.create("null", val);
        }
        return undefined;
    }
    test(val) {
        return val === null;
    }
    equals(val1, val2) {
        return val1 === val2;
    }
    clone(val) {
        return val;
    }
    /**
     * @param oldVal
     * @param newVal
     * @returns `true` if there is a difference, `undefined` otherwise
     */
    diff(oldVal, newVal) {
        return undefined;
    }
    patch(oldVal, diff) {
        return null;
    }
    reverseDiff(diff) {
        return undefined;
    }
    squash(diff1, diff2) {
        return undefined;
    }
}
exports.NullType = NullType;
exports.Type = NullType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90eXBlcy9udWxsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkRBQTREO0FBQzVELHFEQUFvRDtBQUl2QyxRQUFBLElBQUksR0FBUyxNQUFNLENBQUM7QUFtQmpDO0lBQUE7UUFJVyxTQUFJLEdBQVMsWUFBSSxDQUFDO0lBcUY3QixDQUFDO0lBbkZDLE1BQU07UUFDSixNQUFNLENBQUMsRUFBQyxJQUFJLEVBQUUsWUFBSSxFQUFDLENBQUM7SUFDdEIsQ0FBQztJQUtELFdBQVcsQ0FBQyxNQUE4QixFQUFFLEtBQVU7UUFDcEQsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxJQUFJLENBQUMsTUFBOEIsRUFBRSxLQUFVO1FBQzdDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDZixLQUFLLE1BQU0sQ0FBQztZQUNaLEtBQUssTUFBTTtnQkFDVCxFQUFFLENBQUMsQ0FBQyxLQUFLLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDbkIsTUFBTSwyQkFBYyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7Z0JBQzdDLENBQUM7Z0JBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQztZQUNkLEtBQUssSUFBSTtnQkFDUCxFQUFFLENBQUMsQ0FBQyxLQUFLLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztvQkFDakIsTUFBTSwyQkFBYyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7Z0JBQzdDLENBQUM7Z0JBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQztZQUNkO2dCQUNFLE1BQU0sbUNBQWtCLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzVDLENBQUM7SUFDSCxDQUFDO0lBS0QsS0FBSyxDQUFDLE1BQThCLEVBQUUsR0FBTTtRQUMxQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ2YsS0FBSyxNQUFNLENBQUM7WUFDWixLQUFLLE1BQU07Z0JBQ1QsTUFBTSxDQUFDLElBQUksQ0FBQztZQUNkLEtBQUssSUFBSTtnQkFDUCxNQUFNLENBQUMsRUFBRSxDQUFDO1lBQ1o7Z0JBQ0UsTUFBTSxDQUFDLFNBQWtCLENBQUM7UUFDOUIsQ0FBQztJQUNILENBQUM7SUFFRCxTQUFTLENBQUMsR0FBTTtRQUNkLEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ25CLE1BQU0sQ0FBQywyQkFBYyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDNUMsQ0FBQztRQUNELE1BQU0sQ0FBQyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUVELElBQUksQ0FBQyxHQUFNO1FBQ1QsTUFBTSxDQUFDLEdBQUcsS0FBSyxJQUFJLENBQUM7SUFDdEIsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFPLEVBQUUsSUFBTztRQUNyQixNQUFNLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQztJQUN2QixDQUFDO0lBRUQsS0FBSyxDQUFDLEdBQU07UUFDVixNQUFNLENBQUMsR0FBRyxDQUFDO0lBQ2IsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxJQUFJLENBQUMsTUFBUyxFQUFFLE1BQVM7UUFDdkIsTUFBTSxDQUFDLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRUQsS0FBSyxDQUFDLE1BQVMsRUFBRSxJQUFzQjtRQUNyQyxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELFdBQVcsQ0FBQyxJQUFzQjtRQUNoQyxNQUFNLENBQUMsU0FBUyxDQUFDO0lBQ25CLENBQUM7SUFFRCxNQUFNLENBQUMsS0FBdUIsRUFBRSxLQUF1QjtRQUNyRCxNQUFNLENBQUMsU0FBUyxDQUFDO0lBQ25CLENBQUM7Q0FDRjtBQXpGRCw0QkF5RkM7QUFFbUIsd0JBQUkiLCJmaWxlIjoibGliL3R5cGVzL251bGwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1Vua25vd25Gb3JtYXRFcnJvcn0gZnJvbSBcIi4uL2Vycm9ycy91bmtub3duLWZvcm1hdFwiO1xuaW1wb3J0IHtXcm9uZ1R5cGVFcnJvcn0gZnJvbSBcIi4uL2Vycm9ycy93cm9uZy10eXBlXCI7XG5pbXBvcnQge1NlcmlhbGl6YWJsZVR5cGUsIFZlcnNpb25lZFR5cGV9IGZyb20gXCIuLi9pbnRlcmZhY2VzXCI7XG5cbmV4cG9ydCB0eXBlIE5hbWUgPSBcIm51bGxcIjtcbmV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJudWxsXCI7XG5leHBvcnQgdHlwZSBUID0gbnVsbDtcbmV4cG9ydCBuYW1lc3BhY2UgYnNvbiB7XG4gIGV4cG9ydCB0eXBlIElucHV0ID0gbnVsbDtcbiAgZXhwb3J0IHR5cGUgT3V0cHV0ID0gbnVsbDtcbn1cbmV4cG9ydCBuYW1lc3BhY2UganNvbiB7XG4gIGV4cG9ydCB0eXBlIElucHV0ID0gbnVsbDtcbiAgZXhwb3J0IHR5cGUgT3V0cHV0ID0gbnVsbDtcbiAgZXhwb3J0IGludGVyZmFjZSBUeXBlIHtcbiAgICBuYW1lOiBOYW1lO1xuICB9XG59XG5leHBvcnQgbmFtZXNwYWNlIHFzIHtcbiAgZXhwb3J0IHR5cGUgSW5wdXQgPSBcIlwiO1xuICBleHBvcnQgdHlwZSBPdXRwdXQgPSBcIlwiO1xufVxuZXhwb3J0IHR5cGUgRGlmZiA9IHVuZGVmaW5lZDtcblxuZXhwb3J0IGNsYXNzIE51bGxUeXBlXG4gIGltcGxlbWVudHMgVmVyc2lvbmVkVHlwZTxULCBqc29uLklucHV0LCBqc29uLk91dHB1dCwgRGlmZj4sXG4gICAgU2VyaWFsaXphYmxlVHlwZTxULCBcImJzb25cIiwgYnNvbi5JbnB1dCwgYnNvbi5PdXRwdXQ+LFxuICAgIFNlcmlhbGl6YWJsZVR5cGU8VCwgXCJxc1wiLCBxcy5JbnB1dCwgcXMuT3V0cHV0PiB7XG4gIHJlYWRvbmx5IG5hbWU6IE5hbWUgPSBuYW1lO1xuXG4gIHRvSlNPTigpOiBqc29uLlR5cGUge1xuICAgIHJldHVybiB7bmFtZTogbmFtZX07XG4gIH1cblxuICByZWFkVHJ1c3RlZChmb3JtYXQ6IFwiYnNvblwiLCB2YWw6IGJzb24uT3V0cHV0KTogVDtcbiAgcmVhZFRydXN0ZWQoZm9ybWF0OiBcImpzb25cIiwgdmFsOiBqc29uLk91dHB1dCk6IFQ7XG4gIHJlYWRUcnVzdGVkKGZvcm1hdDogXCJxc1wiLCB2YWw6IHFzLk91dHB1dCk6IFQ7XG4gIHJlYWRUcnVzdGVkKGZvcm1hdDogXCJic29uXCIgfCBcImpzb25cIiB8IFwicXNcIiwgaW5wdXQ6IGFueSk6IFQge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmVhZChmb3JtYXQ6IFwiYnNvblwiIHwgXCJqc29uXCIgfCBcInFzXCIsIGlucHV0OiBhbnkpOiBUIHtcbiAgICBzd2l0Y2ggKGZvcm1hdCkge1xuICAgICAgY2FzZSBcImJzb25cIjpcbiAgICAgIGNhc2UgXCJqc29uXCI6XG4gICAgICAgIGlmIChpbnB1dCAhPT0gbnVsbCkge1xuICAgICAgICAgIHRocm93IFdyb25nVHlwZUVycm9yLmNyZWF0ZShcIm51bGxcIiwgaW5wdXQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgY2FzZSBcInFzXCI6XG4gICAgICAgIGlmIChpbnB1dCAhPT0gXCJcIikge1xuICAgICAgICAgIHRocm93IFdyb25nVHlwZUVycm9yLmNyZWF0ZShcIlxcXCJcXFwiXCIsIGlucHV0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IFVua25vd25Gb3JtYXRFcnJvci5jcmVhdGUoZm9ybWF0KTtcbiAgICB9XG4gIH1cblxuICB3cml0ZShmb3JtYXQ6IFwiYnNvblwiLCB2YWw6IFQpOiBic29uLk91dHB1dDtcbiAgd3JpdGUoZm9ybWF0OiBcImpzb25cIiwgdmFsOiBUKToganNvbi5PdXRwdXQ7XG4gIHdyaXRlKGZvcm1hdDogXCJxc1wiLCB2YWw6IFQpOiBxcy5PdXRwdXQ7XG4gIHdyaXRlKGZvcm1hdDogXCJic29uXCIgfCBcImpzb25cIiB8IFwicXNcIiwgdmFsOiBUKTogYW55IHtcbiAgICBzd2l0Y2ggKGZvcm1hdCkge1xuICAgICAgY2FzZSBcImJzb25cIjpcbiAgICAgIGNhc2UgXCJqc29uXCI6XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgY2FzZSBcInFzXCI6XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZCBhcyBuZXZlcjtcbiAgICB9XG4gIH1cblxuICB0ZXN0RXJyb3IodmFsOiBUKTogRXJyb3IgfCB1bmRlZmluZWQge1xuICAgIGlmICh2YWwgIT09IFwibnVsbFwiKSB7XG4gICAgICByZXR1cm4gV3JvbmdUeXBlRXJyb3IuY3JlYXRlKFwibnVsbFwiLCB2YWwpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgdGVzdCh2YWw6IFQpOiB2YWwgaXMgVCB7XG4gICAgcmV0dXJuIHZhbCA9PT0gbnVsbDtcbiAgfVxuXG4gIGVxdWFscyh2YWwxOiBULCB2YWwyOiBUKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHZhbDEgPT09IHZhbDI7XG4gIH1cblxuICBjbG9uZSh2YWw6IFQpOiBUIHtcbiAgICByZXR1cm4gdmFsO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSBvbGRWYWxcbiAgICogQHBhcmFtIG5ld1ZhbFxuICAgKiBAcmV0dXJucyBgdHJ1ZWAgaWYgdGhlcmUgaXMgYSBkaWZmZXJlbmNlLCBgdW5kZWZpbmVkYCBvdGhlcndpc2VcbiAgICovXG4gIGRpZmYob2xkVmFsOiBULCBuZXdWYWw6IFQpOiBEaWZmIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgcGF0Y2gob2xkVmFsOiBULCBkaWZmOiBEaWZmIHwgdW5kZWZpbmVkKTogVCB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXZlcnNlRGlmZihkaWZmOiBEaWZmIHwgdW5kZWZpbmVkKTogRGlmZiB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIHNxdWFzaChkaWZmMTogRGlmZiB8IHVuZGVmaW5lZCwgZGlmZjI6IERpZmYgfCB1bmRlZmluZWQpOiBEaWZmIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG5cbmV4cG9ydCB7TnVsbFR5cGUgYXMgVHlwZX07XG4iXX0=


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const not_implemented_1 = __webpack_require__(10);
const literal_1 = __webpack_require__(54);
const simple_enum_1 = __webpack_require__(55);
const union = __webpack_require__(56);
exports.name = "tagged-union";
function toUnionOptions(options) {
    const tagName = options.tag;
    let tagBaseType = undefined;
    const tagValuesMap = new Map();
    const outValuesMap = {
        bson: new Map(),
        json: new Map(),
        qs: new Map(),
    };
    for (const variant of options.variants) {
        if (!(tagName in variant.properties)) {
            throw new incident_1.Incident("TagNotFound", "Tag not found in variant of tagged union");
        }
        if (!(variant.properties[tagName].type instanceof literal_1.LiteralType)) {
            throw new incident_1.Incident("NonLiteralTag", "Tag property must be a literal type");
        }
        const tagType = variant.properties[tagName].type;
        if (tagBaseType === undefined) {
            if (tagType.type instanceof simple_enum_1.SimpleEnumType) {
                tagBaseType = tagType.type;
            }
            else {
                throw new incident_1.Incident("InvalidTagBaseType", "The base type of a tag property must be a simple enum");
            }
        }
        else if (tagType.type !== tagBaseType) {
            throw new incident_1.Incident("MixedTagBaseType", "All the variants of a tag property must have the same base type");
        }
        if (!(typeof tagType.value === "number" || typeof tagType.value === "string")) {
            throw new incident_1.Incident("InvalidTagValue", "The value of a tag property must be a number or string");
        }
        const value = tagType.value;
        if (tagValuesMap.has(value)) {
            throw new incident_1.Incident("DuplicateTagValue", "The tag values must be unique");
        }
        tagValuesMap.set(value, variant);
        for (const format in outValuesMap) {
            const value = tagBaseType.write(format, tagType.value);
            if (outValuesMap[format].has(value)) {
                throw new incident_1.Incident("DuplicateOutTagValue", `The tag values for ${format} must be unique`);
            }
            outValuesMap[format].set(value, variant);
        }
    }
    const matcher = (value) => {
        if (typeof value !== "object" || value === null) {
            return undefined;
        }
        return tagValuesMap.get(value[tagName]);
    };
    const trustedMatcher = (value) => {
        return tagValuesMap.get(value[tagName]);
    };
    const readMatcher = (format, value) => {
        if (typeof value !== "object" || value === null) {
            return undefined;
        }
        if (!(format in outValuesMap)) {
            return undefined;
        }
        return outValuesMap[format].get(value[tagName]);
    };
    const readTrustedMatcher = (format, value) => {
        return outValuesMap[format].get(value[tagName]);
    };
    return { variants: options.variants, matcher, trustedMatcher, readMatcher, readTrustedMatcher };
}
class TaggedUnionType extends union.UnionType {
    constructor(options) {
        super(toUnionOptions(options));
        this.names = [this.name, exports.name];
    }
    toJSON() {
        throw not_implemented_1.NotImplementedError.create("TaggedUnionType#toJSON");
    }
    diff(oldVal, newVal) {
        throw not_implemented_1.NotImplementedError.create("TaggedUnionType#diff");
    }
    patch(oldVal, diff) {
        throw not_implemented_1.NotImplementedError.create("TaggedUnionType#patch");
    }
    reverseDiff(diff) {
        throw not_implemented_1.NotImplementedError.create("TaggedUnionType#reverseDiff");
    }
    squash(diff1, diff2) {
        throw not_implemented_1.NotImplementedError.create("TaggedUnionType#squash");
    }
}
exports.TaggedUnionType = TaggedUnionType;
exports.Type = TaggedUnionType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const not_implemented_1 = __webpack_require__(10);
exports.name = "typed-union";
// TODO: Rename to whiteList
class TypedUnionType {
    constructor(itemType, values) {
        this.name = exports.name;
        this.itemType = itemType;
        this.values = values;
    }
    static fromJSON(options) {
        throw not_implemented_1.NotImplementedError.create("TypedUnionType.fromJSON");
    }
    toJSON() {
        throw not_implemented_1.NotImplementedError.create("TypedUnionType#toJSON");
    }
    readTrusted(format, val) {
        return this.itemType.read(format, val);
    }
    read(format, val) {
        const value = this.itemType.read(format, val);
        for (const allowed of this.values) {
            if (this.itemType.equals(value, allowed)) {
                return value;
            }
        }
        throw incident_1.Incident("UnkownVariant", "Unknown variant");
    }
    write(format, val) {
        return this.itemType.write(format, val);
    }
    testError(val) {
        const error = this.itemType.testError(val);
        if (error !== undefined) {
            return error;
        }
        for (const allowed of this.values) {
            if (this.itemType.equals(val, allowed)) {
                return undefined;
            }
        }
        return incident_1.Incident("UnkownVariant", "Unknown variant");
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        return this.itemType.equals(val1, val2);
    }
    clone(val) {
        return this.itemType.clone(val);
    }
    diff(oldVal, newVal) {
        return this.itemType.diff(oldVal, newVal);
    }
    patch(oldVal, diff) {
        return this.itemType.patch(oldVal, diff);
    }
    reverseDiff(diff) {
        return this.itemType.reverseDiff(diff);
    }
    squash(diff1, diff2) {
        return this.itemType.squash(diff1, diff2);
    }
}
exports.TypedUnionType = TypedUnionType;
exports.Type = TypedUnionType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90eXBlcy90eXBlZC11bmlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUNsQywrREFBOEQ7QUFJakQsUUFBQSxJQUFJLEdBQVMsYUFBYSxDQUFDO0FBWXhDLDRCQUE0QjtBQUM1QjtJQUtFLFlBQVksUUFBMkMsRUFBRSxNQUFXO1FBSjNELFNBQUksR0FBUyxZQUFJLENBQUM7UUFLekIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDdkIsQ0FBQztJQUVELE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBa0I7UUFDaEMsTUFBTSxxQ0FBbUIsQ0FBQyxNQUFNLENBQUMseUJBQXlCLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBRUQsTUFBTTtRQUNKLE1BQU0scUNBQW1CLENBQUMsTUFBTSxDQUFDLHVCQUF1QixDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUVELFdBQVcsQ0FBQyxNQUFjLEVBQUUsR0FBZ0I7UUFDMUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRUQsSUFBSSxDQUFDLE1BQWMsRUFBRSxHQUFRO1FBQzNCLE1BQU0sS0FBSyxHQUFNLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNqRCxHQUFHLENBQUMsQ0FBQyxNQUFNLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNsQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN6QyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2YsQ0FBQztRQUNILENBQUM7UUFDRCxNQUFNLG1CQUFRLENBQUMsZUFBZSxFQUFFLGlCQUFpQixDQUFDLENBQUM7SUFDckQsQ0FBQztJQUVELEtBQUssQ0FBQyxNQUFjLEVBQUUsR0FBTTtRQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxTQUFTLENBQUMsR0FBTTtRQUNkLE1BQU0sS0FBSyxHQUFzQixJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM5RCxFQUFFLENBQUMsQ0FBQyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztZQUN4QixNQUFNLENBQUMsS0FBSyxDQUFDO1FBQ2YsQ0FBQztRQUNELEdBQUcsQ0FBQyxDQUFDLE1BQU0sT0FBTyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ2xDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZDLE1BQU0sQ0FBQyxTQUFTLENBQUM7WUFDbkIsQ0FBQztRQUNILENBQUM7UUFDRCxNQUFNLENBQUMsbUJBQVEsQ0FBQyxlQUFlLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRUQsSUFBSSxDQUFDLEdBQU07UUFDVCxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsS0FBSyxTQUFTLENBQUM7SUFDM0MsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFPLEVBQUUsSUFBTztRQUNyQixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxLQUFLLENBQUMsR0FBTTtRQUNWLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBSSxDQUFDLE1BQVMsRUFBRSxNQUFTO1FBQ3ZCLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUVELEtBQUssQ0FBQyxNQUFTLEVBQUUsSUFBc0I7UUFDckMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsV0FBVyxDQUFDLElBQXNCO1FBQ2hDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQXVCLEVBQUUsS0FBdUI7UUFDckQsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM1QyxDQUFDO0NBQ0Y7QUE1RUQsd0NBNEVDO0FBRXlCLDhCQUFJIiwiZmlsZSI6ImxpYi90eXBlcy90eXBlZC11bmlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5jaWRlbnR9IGZyb20gXCJpbmNpZGVudFwiO1xuaW1wb3J0IHtOb3RJbXBsZW1lbnRlZEVycm9yfSBmcm9tIFwiLi4vZXJyb3JzL25vdC1pbXBsZW1lbnRlZFwiO1xuaW1wb3J0IHtWZXJzaW9uZWRUeXBlfSBmcm9tIFwiLi4vaW50ZXJmYWNlc1wiO1xuXG5leHBvcnQgdHlwZSBOYW1lID0gXCJ0eXBlZC11bmlvblwiO1xuZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcInR5cGVkLXVuaW9uXCI7XG5leHBvcnQgbmFtZXNwYWNlIGpzb24ge1xuICBleHBvcnQgdHlwZSBJbnB1dCA9IGFueTtcbiAgZXhwb3J0IHR5cGUgT3V0cHV0ID0gYW55O1xuICBleHBvcnQgaW50ZXJmYWNlIFR5cGUge1xuICAgIG5hbWU6IE5hbWU7XG4gICAgbm90TmFuOiBib29sZWFuO1xuICAgIG5vdEluZmluaXR5OiBib29sZWFuO1xuICB9XG59XG5leHBvcnQgdHlwZSBEaWZmID0gW251bWJlciwgbnVtYmVyXTtcblxuLy8gVE9ETzogUmVuYW1lIHRvIHdoaXRlTGlzdFxuZXhwb3J0IGNsYXNzIFR5cGVkVW5pb25UeXBlPFQ+IGltcGxlbWVudHMgVmVyc2lvbmVkVHlwZTxULCBqc29uLklucHV0LCBqc29uLk91dHB1dCwgRGlmZj4ge1xuICByZWFkb25seSBuYW1lOiBOYW1lID0gbmFtZTtcbiAgcmVhZG9ubHkgaXRlbVR5cGU6IFZlcnNpb25lZFR5cGU8YW55LCBhbnksIGFueSwgYW55PjtcbiAgcmVhZG9ubHkgdmFsdWVzOiBUW107XG5cbiAgY29uc3RydWN0b3IoaXRlbVR5cGU6IFZlcnNpb25lZFR5cGU8YW55LCBhbnksIGFueSwgYW55PiwgdmFsdWVzOiBUW10pIHtcbiAgICB0aGlzLml0ZW1UeXBlID0gaXRlbVR5cGU7XG4gICAgdGhpcy52YWx1ZXMgPSB2YWx1ZXM7XG4gIH1cblxuICBzdGF0aWMgZnJvbUpTT04ob3B0aW9uczoganNvbi5UeXBlKTogVHlwZWRVbmlvblR5cGU8YW55PiB7XG4gICAgdGhyb3cgTm90SW1wbGVtZW50ZWRFcnJvci5jcmVhdGUoXCJUeXBlZFVuaW9uVHlwZS5mcm9tSlNPTlwiKTtcbiAgfVxuXG4gIHRvSlNPTigpOiBqc29uLlR5cGUge1xuICAgIHRocm93IE5vdEltcGxlbWVudGVkRXJyb3IuY3JlYXRlKFwiVHlwZWRVbmlvblR5cGUjdG9KU09OXCIpO1xuICB9XG5cbiAgcmVhZFRydXN0ZWQoZm9ybWF0OiBcImpzb25cIiwgdmFsOiBqc29uLk91dHB1dCk6IFQge1xuICAgIHJldHVybiB0aGlzLml0ZW1UeXBlLnJlYWQoZm9ybWF0LCB2YWwpO1xuICB9XG5cbiAgcmVhZChmb3JtYXQ6IFwianNvblwiLCB2YWw6IGFueSk6IFQge1xuICAgIGNvbnN0IHZhbHVlOiBUID0gdGhpcy5pdGVtVHlwZS5yZWFkKGZvcm1hdCwgdmFsKTtcbiAgICBmb3IgKGNvbnN0IGFsbG93ZWQgb2YgdGhpcy52YWx1ZXMpIHtcbiAgICAgIGlmICh0aGlzLml0ZW1UeXBlLmVxdWFscyh2YWx1ZSwgYWxsb3dlZCkpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgICB0aHJvdyBJbmNpZGVudChcIlVua293blZhcmlhbnRcIiwgXCJVbmtub3duIHZhcmlhbnRcIik7XG4gIH1cblxuICB3cml0ZShmb3JtYXQ6IFwianNvblwiLCB2YWw6IFQpOiBqc29uLk91dHB1dCB7XG4gICAgcmV0dXJuIHRoaXMuaXRlbVR5cGUud3JpdGUoZm9ybWF0LCB2YWwpO1xuICB9XG5cbiAgdGVzdEVycm9yKHZhbDogVCk6IEVycm9yIHwgdW5kZWZpbmVkIHtcbiAgICBjb25zdCBlcnJvcjogRXJyb3IgfCB1bmRlZmluZWQgPSB0aGlzLml0ZW1UeXBlLnRlc3RFcnJvcih2YWwpO1xuICAgIGlmIChlcnJvciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gZXJyb3I7XG4gICAgfVxuICAgIGZvciAoY29uc3QgYWxsb3dlZCBvZiB0aGlzLnZhbHVlcykge1xuICAgICAgaWYgKHRoaXMuaXRlbVR5cGUuZXF1YWxzKHZhbCwgYWxsb3dlZCkpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIEluY2lkZW50KFwiVW5rb3duVmFyaWFudFwiLCBcIlVua25vd24gdmFyaWFudFwiKTtcbiAgfVxuXG4gIHRlc3QodmFsOiBUKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMudGVzdEVycm9yKHZhbCkgPT09IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGVxdWFscyh2YWwxOiBULCB2YWwyOiBUKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuaXRlbVR5cGUuZXF1YWxzKHZhbDEsIHZhbDIpO1xuICB9XG5cbiAgY2xvbmUodmFsOiBUKTogVCB7XG4gICAgcmV0dXJuIHRoaXMuaXRlbVR5cGUuY2xvbmUodmFsKTtcbiAgfVxuXG4gIGRpZmYob2xkVmFsOiBULCBuZXdWYWw6IFQpOiBEaWZmIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5pdGVtVHlwZS5kaWZmKG9sZFZhbCwgbmV3VmFsKTtcbiAgfVxuXG4gIHBhdGNoKG9sZFZhbDogVCwgZGlmZjogRGlmZiB8IHVuZGVmaW5lZCk6IFQge1xuICAgIHJldHVybiB0aGlzLml0ZW1UeXBlLnBhdGNoKG9sZFZhbCwgZGlmZik7XG4gIH1cblxuICByZXZlcnNlRGlmZihkaWZmOiBEaWZmIHwgdW5kZWZpbmVkKTogRGlmZiB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHRoaXMuaXRlbVR5cGUucmV2ZXJzZURpZmYoZGlmZik7XG4gIH1cblxuICBzcXVhc2goZGlmZjE6IERpZmYgfCB1bmRlZmluZWQsIGRpZmYyOiBEaWZmIHwgdW5kZWZpbmVkKTogRGlmZiB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHRoaXMuaXRlbVR5cGUuc3F1YXNoKGRpZmYxLCBkaWZmMik7XG4gIH1cbn1cblxuZXhwb3J0IHtUeXBlZFVuaW9uVHlwZSBhcyBUeXBlfTtcbiJdfQ==


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const lower_case_1 = __webpack_require__(50);
const max_ucs2_string_length_1 = __webpack_require__(92);
const min_ucs2_string_length_1 = __webpack_require__(93);
const not_trimmed_1 = __webpack_require__(51);
const pattern_not_matched_1 = __webpack_require__(52);
const unknown_format_1 = __webpack_require__(7);
const wrong_type_1 = __webpack_require__(8);
exports.name = "ucs2-string";
/**
 * The type used for simple Javascript strings.
 * Javascript strings expose characters as UCS2 code units. This is a fixed-size encoding that supports the unicode
 * codepoints from U+000000 to U+00FFFF (Basic Multilingual Plane or BMP). Displaying larger codepoints is
 * a property of the environment based on UTF-16 surrogate pairs. Unicode does not, and will never, assign
 * characters to the codepoints from U+OOD800 to U+00DFFF. These spare codepoints allows UTF16 to combine
 * codeunits from 0xd800 to 0xdfff in pairs (called surrogate pairs) to represent codepoints from supplementary planes.
 * This transformation happens during the transition from codeunits to codepoints in UTF-16.
 * In UCS2, the codeunits from 0xd800 to 0xdfff directly produce codepoints in the range from U+OOD8OO to
 * U+OODFF. Then, the display might merge these codepoints into higher codepoints during the rendering.
 *
 *
 * Lets take an example (all the numbers are in hexadecimal):
 *
 * ```
 *                                         +---+---+---+---+---+---+
 * Bytes                                   | 00| 41| d8| 34| dd| 1e|
 *                                         +---+---+---+---+---+---+
 * UTF-16BE codeunits                      | 0x0041| 0xd834| 0xdd1e|
 *                                         +-------+-------+-------+
 * Codepoints (from UTF-16BE)              |  U+41 |   U+01D11E    |
 *                                         +-------+---------------+
 * Displayed (from UTF-16BE)               |   A   |       𝄞       |
 *                                         +-------+-------+-------+
 * UCS2 codeunits                          | 0x0041| 0xd834| 0xdd1e|
 *                                         +-------+-------+-------+
 * Codepoints (from UCS2BE)                |  U+41 | U+D834| U+DD1E|  <- This is what Javascript sees
 *                                         +-------+-------+-------+
 * Displayed (from UCS2BE)                 |   A   |   �   |   �   |  <- This is what the user may see
 *                                         +-------+-------+-------+
 * Displayed (from UCS2BE with surrogates) |   A   |       𝄞       |  <- This is what the user may see
 *                                         +-------+---------------+
 * ```
 *
 * The most important takeaway is that codepoints outside of the BMP are a property of the display, not of
 * the Javscript string.
 * This is the cause of multiple issues.
 * - Surrogate halves are exposed as distinct characters: `"𝄞".length === 2`
 * - Unmatched surrogate halves are allowed: `"\ud834"`
 * - Surrogate pairs in the wrong order are allowed: `"\udd1e\ud834"`
 *
 * If you need to support the full unicode range by manipulating codepoints instead of UCS2 character codes, you may
 * want to use CodepointString or CodepointArray instead of Ucs2String.
 *
 * PS: This type does not deal with Unicdoe normalization either. Use CodepointString and CodepointArray if you need
 * it.
 */
class Ucs2StringType {
    constructor(options) {
        this.name = exports.name;
        this.allowUnicodeRegExp = options.allowUnicodeRegExp !== undefined ? options.allowUnicodeRegExp : true;
        this.pattern = options.pattern;
        this.lowerCase = options.lowerCase !== undefined ? options.lowerCase : false;
        this.trimmed = options.trimmed !== undefined ? options.trimmed : false;
        this.minLength = options.minLength;
        this.maxLength = options.maxLength;
    }
    static fromJSON(options) {
        const resolvedOptions = {
            allowUnicodeRegExp: options.allowUnicodeRegExp,
            lowerCase: options.lowerCase,
            trimmed: options.trimmed,
            maxLength: options.maxLength,
        };
        if (options.pattern !== undefined) {
            resolvedOptions.pattern = new RegExp(options.pattern[0], options.pattern[1]);
        }
        if (options.minLength !== undefined) {
            resolvedOptions.minLength = options.minLength;
        }
        return new Ucs2StringType(resolvedOptions);
    }
    toJSON() {
        const jsonType = {
            name: exports.name,
            allowUnicodeRegExp: this.allowUnicodeRegExp,
            lowerCase: this.lowerCase,
            trimmed: this.trimmed,
            maxLength: this.maxLength,
        };
        if (this.pattern !== undefined) {
            jsonType.pattern = [this.pattern.source, this.pattern.flags];
        }
        if (this.minLength !== undefined) {
            jsonType.minLength = this.minLength;
        }
        return jsonType;
    }
    readTrusted(format, input) {
        return input;
    }
    read(format, input) {
        switch (format) {
            case "bson":
            case "json":
            case "qs":
                const error = this.testError(input);
                if (error !== undefined) {
                    throw error;
                }
                return input;
            default:
                throw unknown_format_1.UnknownFormatError.create(format);
        }
    }
    write(format, val) {
        return val;
    }
    testError(val) {
        if (typeof val !== "string") {
            return wrong_type_1.WrongTypeError.create("string", val);
        }
        if (this.lowerCase && val.toLowerCase() !== val) {
            return lower_case_1.LowerCaseError.create(val);
        }
        if (this.trimmed && val.trim() !== val) {
            return not_trimmed_1.NotTrimmedError.create(val);
        }
        const strLen = val.length;
        const minLength = this.minLength;
        if (minLength !== undefined && strLen < minLength) {
            return min_ucs2_string_length_1.MinUcs2StringLengthError.create(val, minLength);
        }
        if (strLen > this.maxLength) {
            return max_ucs2_string_length_1.MaxUcs2StringLengthError.create(val, this.maxLength);
        }
        if (this.pattern instanceof RegExp) {
            if (this.pattern.unicode && !this.allowUnicodeRegExp) {
                throw new incident_1.Incident("UnicodeRegExp", "Disallowed unicode RegExp, use `allowUnicodeRegExp` or `CodepointStringType`");
            }
            if (!this.pattern.test(val)) {
                return pattern_not_matched_1.PatternNotMatchedError.create(this.pattern, val);
            }
        }
        return undefined;
    }
    test(val) {
        return this.testError(val) === undefined;
    }
    equals(val1, val2) {
        return val1 === val2;
    }
    clone(val) {
        return val;
    }
    diff(oldVal, newVal) {
        return oldVal === newVal ? undefined : [oldVal, newVal];
    }
    patch(oldVal, diff) {
        return diff === undefined ? oldVal : diff[1];
    }
    reverseDiff(diff) {
        return diff === undefined ? undefined : [diff[1], diff[0]];
    }
    squash(diff1, diff2) {
        if (diff1 === undefined) {
            return diff2 === undefined ? undefined : [diff2[0], diff2[1]];
        }
        else if (diff2 === undefined) {
            return [diff1[0], diff1[1]];
        }
        return diff1[0] === diff2[1] ? undefined : [diff1[0], diff2[1]];
    }
}
exports.Ucs2StringType = Ucs2StringType;
exports.Type = Ucs2StringType;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var MaxUcs2StringLengthError;
(function (MaxUcs2StringLengthError) {
    MaxUcs2StringLengthError.name = "MaxUcs2StringLength";
    function format({ string, max }) {
        return `Expected length of UCS2 string (${string.length}) to be less than or equal to ${max}`;
    }
    MaxUcs2StringLengthError.format = format;
    function create(string, max) {
        return incident_1.Incident(MaxUcs2StringLengthError.name, { string, max }, format);
    }
    MaxUcs2StringLengthError.create = create;
})(MaxUcs2StringLengthError = exports.MaxUcs2StringLengthError || (exports.MaxUcs2StringLengthError = {}));
exports.default = MaxUcs2StringLengthError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvbWF4LXVjczItc3RyaW5nLWxlbmd0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUVsQyxJQUFpQix3QkFBd0IsQ0FleEM7QUFmRCxXQUFpQix3QkFBd0I7SUFFMUIsNkJBQUksR0FBUyxxQkFBcUIsQ0FBQztJQU9oRCxnQkFBdUIsRUFBQyxNQUFNLEVBQUUsR0FBRyxFQUFPO1FBQ3hDLE1BQU0sQ0FBQyxtQ0FBbUMsTUFBTSxDQUFDLE1BQU0saUNBQWlDLEdBQUcsRUFBRSxDQUFDO0lBQ2hHLENBQUM7SUFGZSwrQkFBTSxTQUVyQixDQUFBO0lBQ0QsZ0JBQXVCLE1BQWMsRUFBRSxHQUFXO1FBQ2hELE1BQU0sQ0FBQyxtQkFBUSxDQUFDLHlCQUFBLElBQUksRUFBRSxFQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRmUsK0JBQU0sU0FFckIsQ0FBQTtBQUNILENBQUMsRUFmZ0Isd0JBQXdCLEdBQXhCLGdDQUF3QixLQUF4QixnQ0FBd0IsUUFleEM7QUFJRCxrQkFBZSx3QkFBd0IsQ0FBQyIsImZpbGUiOiJsaWIvZXJyb3JzL21heC11Y3MyLXN0cmluZy1sZW5ndGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IG5hbWVzcGFjZSBNYXhVY3MyU3RyaW5nTGVuZ3RoRXJyb3Ige1xuICBleHBvcnQgdHlwZSBOYW1lID0gXCJNYXhVY3MyU3RyaW5nTGVuZ3RoXCI7XG4gIGV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJNYXhVY3MyU3RyaW5nTGVuZ3RoXCI7XG4gIGV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gICAgc3RyaW5nOiBzdHJpbmc7XG4gICAgbWF4OiBudW1iZXI7XG4gIH1cbiAgZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG4gIGV4cG9ydCB0eXBlIFR5cGUgPSBJbmNpZGVudDxOYW1lLCBEYXRhLCBDYXVzZT47XG4gIGV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe3N0cmluZywgbWF4fTogRGF0YSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBFeHBlY3RlZCBsZW5ndGggb2YgVUNTMiBzdHJpbmcgKCR7c3RyaW5nLmxlbmd0aH0pIHRvIGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAke21heH1gO1xuICB9XG4gIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGUoc3RyaW5nOiBzdHJpbmcsIG1heDogbnVtYmVyKTogVHlwZSB7XG4gICAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHtzdHJpbmcsIG1heH0sIGZvcm1hdCk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgTWF4VWNzMlN0cmluZ0xlbmd0aEVycm9yID0gTWF4VWNzMlN0cmluZ0xlbmd0aEVycm9yLlR5cGU7XG5cbmV4cG9ydCBkZWZhdWx0IE1heFVjczJTdHJpbmdMZW5ndGhFcnJvcjtcbiJdfQ==


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var MinUcs2StringLengthError;
(function (MinUcs2StringLengthError) {
    MinUcs2StringLengthError.name = "MinUcs2StringLength";
    function format({ string, min }) {
        return `Expected length of UCS2 string (${string.length}) to be greater than or equal to ${min}`;
    }
    MinUcs2StringLengthError.format = format;
    function create(string, min) {
        return incident_1.Incident(MinUcs2StringLengthError.name, { string, min }, format);
    }
    MinUcs2StringLengthError.create = create;
})(MinUcs2StringLengthError = exports.MinUcs2StringLengthError || (exports.MinUcs2StringLengthError = {}));
exports.default = MinUcs2StringLengthError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvbWluLXVjczItc3RyaW5nLWxlbmd0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUVsQyxJQUFpQix3QkFBd0IsQ0FleEM7QUFmRCxXQUFpQix3QkFBd0I7SUFFMUIsNkJBQUksR0FBUyxxQkFBcUIsQ0FBQztJQU9oRCxnQkFBdUIsRUFBQyxNQUFNLEVBQUUsR0FBRyxFQUFPO1FBQ3hDLE1BQU0sQ0FBQyxtQ0FBbUMsTUFBTSxDQUFDLE1BQU0sb0NBQW9DLEdBQUcsRUFBRSxDQUFDO0lBQ25HLENBQUM7SUFGZSwrQkFBTSxTQUVyQixDQUFBO0lBQ0QsZ0JBQXVCLE1BQWMsRUFBRSxHQUFXO1FBQ2hELE1BQU0sQ0FBQyxtQkFBUSxDQUFDLHlCQUFBLElBQUksRUFBRSxFQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRmUsK0JBQU0sU0FFckIsQ0FBQTtBQUNILENBQUMsRUFmZ0Isd0JBQXdCLEdBQXhCLGdDQUF3QixLQUF4QixnQ0FBd0IsUUFleEM7QUFJRCxrQkFBZSx3QkFBd0IsQ0FBQyIsImZpbGUiOiJsaWIvZXJyb3JzL21pbi11Y3MyLXN0cmluZy1sZW5ndGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IG5hbWVzcGFjZSBNaW5VY3MyU3RyaW5nTGVuZ3RoRXJyb3Ige1xuICBleHBvcnQgdHlwZSBOYW1lID0gXCJNaW5VY3MyU3RyaW5nTGVuZ3RoXCI7XG4gIGV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJNaW5VY3MyU3RyaW5nTGVuZ3RoXCI7XG4gIGV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gICAgc3RyaW5nOiBzdHJpbmc7XG4gICAgbWluOiBudW1iZXI7XG4gIH1cbiAgZXhwb3J0IHR5cGUgQ2F1c2UgPSB1bmRlZmluZWQ7XG4gIGV4cG9ydCB0eXBlIFR5cGUgPSBJbmNpZGVudDxOYW1lLCBEYXRhLCBDYXVzZT47XG4gIGV4cG9ydCBmdW5jdGlvbiBmb3JtYXQoe3N0cmluZywgbWlufTogRGF0YSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBFeHBlY3RlZCBsZW5ndGggb2YgVUNTMiBzdHJpbmcgKCR7c3RyaW5nLmxlbmd0aH0pIHRvIGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAke21pbn1gO1xuICB9XG4gIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGUoc3RyaW5nOiBzdHJpbmcsIG1pbjogbnVtYmVyKTogVHlwZSB7XG4gICAgcmV0dXJuIEluY2lkZW50KG5hbWUsIHtzdHJpbmcsIG1pbn0sIGZvcm1hdCk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgTWluVWNzMlN0cmluZ0xlbmd0aEVycm9yID0gTWluVWNzMlN0cmluZ0xlbmd0aEVycm9yLlR5cGU7XG5cbmV4cG9ydCBkZWZhdWx0IE1pblVjczJTdHJpbmdMZW5ndGhFcnJvcjtcbiJdfQ==


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var add_1 = __webpack_require__(172);
exports.Add = add_1.Add;
var add2_1 = __webpack_require__(173);
exports.Add2 = add2_1.Add2;
var and_1 = __webpack_require__(174);
exports.And = and_1.And;
var ascii_to_char_1 = __webpack_require__(175);
exports.AsciiToChar = ascii_to_char_1.AsciiToChar;
var bit_and_1 = __webpack_require__(176);
exports.BitAnd = bit_and_1.BitAnd;
var bit_l_shift_1 = __webpack_require__(177);
exports.BitLShift = bit_l_shift_1.BitLShift;
var bit_or_1 = __webpack_require__(178);
exports.BitOr = bit_or_1.BitOr;
var bit_r_shift_1 = __webpack_require__(179);
exports.BitRShift = bit_r_shift_1.BitRShift;
var bit_u_r_shift_1 = __webpack_require__(180);
exports.BitURShift = bit_u_r_shift_1.BitURShift;
var bit_xor_1 = __webpack_require__(181);
exports.BitXor = bit_xor_1.BitXor;
var call_1 = __webpack_require__(182);
exports.Call = call_1.Call;
var call_function_1 = __webpack_require__(183);
exports.CallFunction = call_function_1.CallFunction;
var call_method_1 = __webpack_require__(184);
exports.CallMethod = call_method_1.CallMethod;
var cast_op_1 = __webpack_require__(185);
exports.CastOp = cast_op_1.CastOp;
var char_to_ascii_1 = __webpack_require__(186);
exports.CharToAscii = char_to_ascii_1.CharToAscii;
var clone_sprite_1 = __webpack_require__(187);
exports.CloneSprite = clone_sprite_1.CloneSprite;
var constant_pool_1 = __webpack_require__(188);
exports.ConstantPool = constant_pool_1.ConstantPool;
var decrement_1 = __webpack_require__(189);
exports.Decrement = decrement_1.Decrement;
var define_function_1 = __webpack_require__(190);
exports.DefineFunction = define_function_1.DefineFunction;
var define_function2_1 = __webpack_require__(191);
exports.DefineFunction2 = define_function2_1.DefineFunction2;
var define_local_1 = __webpack_require__(192);
exports.DefineLocal = define_local_1.DefineLocal;
var define_local2_1 = __webpack_require__(193);
exports.DefineLocal2 = define_local2_1.DefineLocal2;
var delete_1 = __webpack_require__(194);
exports.Delete = delete_1.Delete;
var delete2_1 = __webpack_require__(195);
exports.Delete2 = delete2_1.Delete2;
var divide_1 = __webpack_require__(196);
exports.Divide = divide_1.Divide;
var end_drag_1 = __webpack_require__(197);
exports.EndDrag = end_drag_1.EndDrag;
var enumerate_1 = __webpack_require__(198);
exports.Enumerate = enumerate_1.Enumerate;
var enumerate2_1 = __webpack_require__(199);
exports.Enumerate2 = enumerate2_1.Enumerate2;
var equals_1 = __webpack_require__(200);
exports.Equals = equals_1.Equals;
var equals2_1 = __webpack_require__(201);
exports.Equals2 = equals2_1.Equals2;
var extends_1 = __webpack_require__(202);
exports.Extends = extends_1.Extends;
var fs_command2_1 = __webpack_require__(203);
exports.FsCommand2 = fs_command2_1.FsCommand2;
var get_member_1 = __webpack_require__(204);
exports.GetMember = get_member_1.GetMember;
var get_property_1 = __webpack_require__(205);
exports.GetProperty = get_property_1.GetProperty;
var get_time_1 = __webpack_require__(206);
exports.GetTime = get_time_1.GetTime;
var get_url_1 = __webpack_require__(207);
exports.GetUrl = get_url_1.GetUrl;
var get_url2_1 = __webpack_require__(208);
exports.GetUrl2 = get_url2_1.GetUrl2;
var get_variable_1 = __webpack_require__(209);
exports.GetVariable = get_variable_1.GetVariable;
var goto_frame_1 = __webpack_require__(210);
exports.GotoFrame = goto_frame_1.GotoFrame;
var goto_frame2_1 = __webpack_require__(211);
exports.GotoFrame2 = goto_frame2_1.GotoFrame2;
var goto_label_1 = __webpack_require__(212);
exports.GotoLabel = goto_label_1.GotoLabel;
var greater_1 = __webpack_require__(213);
exports.Greater = greater_1.Greater;
var if_1 = __webpack_require__(214);
exports.If = if_1.If;
var implements_op_1 = __webpack_require__(215);
exports.ImplementsOp = implements_op_1.ImplementsOp;
var increment_1 = __webpack_require__(216);
exports.Increment = increment_1.Increment;
var init_array_1 = __webpack_require__(217);
exports.InitArray = init_array_1.InitArray;
var init_object_1 = __webpack_require__(218);
exports.InitObject = init_object_1.InitObject;
var instance_of_1 = __webpack_require__(219);
exports.InstanceOf = instance_of_1.InstanceOf;
var jump_1 = __webpack_require__(220);
exports.Jump = jump_1.Jump;
var less_1 = __webpack_require__(221);
exports.Less = less_1.Less;
var less2_1 = __webpack_require__(222);
exports.Less2 = less2_1.Less2;
var mb_ascii_to_char_1 = __webpack_require__(223);
exports.MbAsciiToChar = mb_ascii_to_char_1.MbAsciiToChar;
var mb_char_to_ascii_1 = __webpack_require__(224);
exports.MbCharToAscii = mb_char_to_ascii_1.MbCharToAscii;
var mb_string_extract_1 = __webpack_require__(225);
exports.MbStringExtract = mb_string_extract_1.MbStringExtract;
var mb_string_length_1 = __webpack_require__(226);
exports.MbStringLength = mb_string_length_1.MbStringLength;
var modulo_1 = __webpack_require__(227);
exports.Modulo = modulo_1.Modulo;
var multiply_1 = __webpack_require__(228);
exports.Multiply = multiply_1.Multiply;
var new_method_1 = __webpack_require__(229);
exports.NewMethod = new_method_1.NewMethod;
var new_object_1 = __webpack_require__(230);
exports.NewObject = new_object_1.NewObject;
var next_frame_1 = __webpack_require__(231);
exports.NextFrame = next_frame_1.NextFrame;
var not_1 = __webpack_require__(232);
exports.Not = not_1.Not;
var or_1 = __webpack_require__(233);
exports.Or = or_1.Or;
var play_1 = __webpack_require__(234);
exports.Play = play_1.Play;
var pop_1 = __webpack_require__(235);
exports.Pop = pop_1.Pop;
var previous_frame_1 = __webpack_require__(236);
exports.PreviousFrame = previous_frame_1.PreviousFrame;
var push_1 = __webpack_require__(237);
exports.Push = push_1.Push;
var push_duplicate_1 = __webpack_require__(247);
exports.PushDuplicate = push_duplicate_1.PushDuplicate;
var random_number_1 = __webpack_require__(248);
exports.RandomNumber = random_number_1.RandomNumber;
var remove_sprite_1 = __webpack_require__(249);
exports.RemoveSprite = remove_sprite_1.RemoveSprite;
var return_1 = __webpack_require__(250);
exports.Return = return_1.Return;
var set_member_1 = __webpack_require__(251);
exports.SetMember = set_member_1.SetMember;
var set_property_1 = __webpack_require__(252);
exports.SetProperty = set_property_1.SetProperty;
var set_target_1 = __webpack_require__(253);
exports.SetTarget = set_target_1.SetTarget;
var set_target2_1 = __webpack_require__(254);
exports.SetTarget2 = set_target2_1.SetTarget2;
var set_variable_1 = __webpack_require__(255);
exports.SetVariable = set_variable_1.SetVariable;
var stack_swap_1 = __webpack_require__(256);
exports.StackSwap = stack_swap_1.StackSwap;
var start_drag_1 = __webpack_require__(257);
exports.StartDrag = start_drag_1.StartDrag;
var stop_1 = __webpack_require__(258);
exports.Stop = stop_1.Stop;
var stop_sounds_1 = __webpack_require__(259);
exports.StopSounds = stop_sounds_1.StopSounds;
var store_register_1 = __webpack_require__(260);
exports.StoreRegister = store_register_1.StoreRegister;
var strict_equals_1 = __webpack_require__(261);
exports.StrictEquals = strict_equals_1.StrictEquals;
var strict_mode_1 = __webpack_require__(262);
exports.StrictMode = strict_mode_1.StrictMode;
var string_add_1 = __webpack_require__(263);
exports.StringAdd = string_add_1.StringAdd;
var string_equals_1 = __webpack_require__(264);
exports.StringEquals = string_equals_1.StringEquals;
var string_extract_1 = __webpack_require__(265);
exports.StringExtract = string_extract_1.StringExtract;
var string_greater_1 = __webpack_require__(266);
exports.StringGreater = string_greater_1.StringGreater;
var string_length_1 = __webpack_require__(267);
exports.StringLength = string_length_1.StringLength;
var string_less_1 = __webpack_require__(268);
exports.StringLess = string_less_1.StringLess;
var subtract_1 = __webpack_require__(269);
exports.Subtract = subtract_1.Subtract;
var target_path_1 = __webpack_require__(270);
exports.TargetPath = target_path_1.TargetPath;
var throw_1 = __webpack_require__(271);
exports.Throw = throw_1.Throw;
var toggle_quality_1 = __webpack_require__(272);
exports.ToggleQuality = toggle_quality_1.ToggleQuality;
var to_integer_1 = __webpack_require__(273);
exports.ToInteger = to_integer_1.ToInteger;
var to_number_1 = __webpack_require__(274);
exports.ToNumber = to_number_1.ToNumber;
var to_string_1 = __webpack_require__(275);
exports.ToString = to_string_1.ToString;
var trace_1 = __webpack_require__(276);
exports.Trace = trace_1.Trace;
var try_1 = __webpack_require__(277);
exports.Try = try_1.Try;
var type_of_1 = __webpack_require__(280);
exports.TypeOf = type_of_1.TypeOf;
var unknown_1 = __webpack_require__(281);
exports.Unknown = unknown_1.Unknown;
var wait_for_frame_1 = __webpack_require__(282);
exports.WaitForFrame = wait_for_frame_1.WaitForFrame;
var wait_for_frame2_1 = __webpack_require__(283);
exports.WaitForFrame2 = wait_for_frame2_1.WaitForFrame2;
var with_1 = __webpack_require__(284);
exports.With = with_1.With;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var Parameter;
(function (Parameter) {
    Parameter.type = new kryo_1.DocumentType({
        properties: {
            register: { type: new kryo_1.Int32Type() },
            name: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Parameter = exports.Parameter || (exports.Parameter = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL3BhcmFtZXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUF3RTtBQVN4RSxJQUFpQixTQUFTLENBYXpCO0FBYkQsV0FBaUIsU0FBUztJQU1YLGNBQUksR0FBNEIsSUFBSSxtQkFBWSxDQUFZO1FBQ3ZFLFVBQVUsRUFBRTtZQUNWLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztZQUNqQyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7U0FDeEQ7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFiZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFhekIiLCJmaWxlIjoibGliL2F2bTEvcGFyYW1ldGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgSW50MzJUeXBlLCBVY3MyU3RyaW5nVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDh9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuXG4vLyBUT0RPKGRlbXVyZ29zKTogcmVuYW1lIHRvIFJlZ2lzdGVyUGFyYW1ldGVyIG9yIG1ha2UgcmVnaXN0ZXIgb3B0aW9uYWwgKHVuZGVmaW5lZCBpZiAwKVxuZXhwb3J0IGludGVyZmFjZSBQYXJhbWV0ZXIge1xuICByZWdpc3RlcjogVWludDg7XG4gIG5hbWU6IHN0cmluZztcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBQYXJhbWV0ZXIge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHJlZ2lzdGVyOiBudW1iZXI7XG4gICAgbmFtZTogbnVtYmVyO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxQYXJhbWV0ZXI+ID0gbmV3IERvY3VtZW50VHlwZTxQYXJhbWV0ZXI+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICByZWdpc3Rlcjoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICBuYW1lOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var GetUrl2Method;
(function (GetUrl2Method) {
    GetUrl2Method[GetUrl2Method["None"] = 0] = "None";
    GetUrl2Method[GetUrl2Method["Get"] = 1] = "Get";
    GetUrl2Method[GetUrl2Method["Post"] = 2] = "Post";
})(GetUrl2Method = exports.GetUrl2Method || (exports.GetUrl2Method = {}));
(function (GetUrl2Method) {
    GetUrl2Method.type = new kryo_1.SimpleEnumType({
        enum: GetUrl2Method,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(GetUrl2Method = exports.GetUrl2Method || (exports.GetUrl2Method = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2dldC11cmwyLW1ldGhvZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUErQztBQUUvQyxJQUFZLGFBSVg7QUFKRCxXQUFZLGFBQWE7SUFDdkIsaURBQUksQ0FBQTtJQUNKLCtDQUFHLENBQUE7SUFDSCxpREFBSSxDQUFBO0FBQ04sQ0FBQyxFQUpXLGFBQWEsR0FBYixxQkFBYSxLQUFiLHFCQUFhLFFBSXhCO0FBRUQsV0FBaUIsYUFBYTtJQUdmLGtCQUFJLEdBQWtDLElBQUkscUJBQWMsQ0FBZ0I7UUFDbkYsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBUGdCLGFBQWEsR0FBYixxQkFBYSxLQUFiLHFCQUFhLFFBTzdCIiwiZmlsZSI6ImxpYi9hdm0xL2dldC11cmwyLW1ldGhvZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBTaW1wbGVFbnVtVHlwZX0gZnJvbSBcImtyeW9cIjtcblxuZXhwb3J0IGVudW0gR2V0VXJsMk1ldGhvZCB7XG4gIE5vbmUsXG4gIEdldCxcbiAgUG9zdCxcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHZXRVcmwyTWV0aG9kIHtcbiAgZXhwb3J0IHR5cGUgSnNvbiA9IFwibm9uZVwiIHwgXCJnZXRcIiB8IFwicG9zdFwiO1xuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBTaW1wbGVFbnVtVHlwZTxHZXRVcmwyTWV0aG9kPiA9IG5ldyBTaW1wbGVFbnVtVHlwZTxHZXRVcmwyTWV0aG9kPih7XG4gICAgZW51bTogR2V0VXJsMk1ldGhvZCxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const values = __webpack_require__(98);
var Value;
(function (Value) {
    Value.type = new kryo_1.TaggedUnionType({
        variants: [
            values.Boolean.type,
            values.CString.type,
            values.Constant.type,
            values.Float32.type,
            values.Float64.type,
            values.Int32.type,
            values.Null.type,
            values.Register.type,
            values.Undefined.type,
        ],
        tag: "type",
    });
})(Value = exports.Value || (exports.Value = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL3ZhbHVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXFDO0FBQ3JDLHlDQUF5QztBQWF6QyxJQUFpQixLQUFLLENBMEJyQjtBQTFCRCxXQUFpQixLQUFLO0lBWVAsVUFBSSxHQUEyQixJQUFJLHNCQUFlLENBQVE7UUFDckUsUUFBUSxFQUFFO1lBQ1IsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJO1lBQ25CLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSTtZQUNuQixNQUFNLENBQUMsUUFBUSxDQUFDLElBQUk7WUFDcEIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJO1lBQ25CLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSTtZQUNuQixNQUFNLENBQUMsS0FBSyxDQUFDLElBQUk7WUFDakIsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJO1lBQ2hCLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSTtZQUNwQixNQUFNLENBQUMsU0FBUyxDQUFDLElBQUk7U0FDdEI7UUFDRCxHQUFHLEVBQUUsTUFBTTtLQUNaLENBQUMsQ0FBQztBQUNMLENBQUMsRUExQmdCLEtBQUssR0FBTCxhQUFLLEtBQUwsYUFBSyxRQTBCckIiLCJmaWxlIjoibGliL2F2bTEvdmFsdWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1RhZ2dlZFVuaW9uVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCAqIGFzIHZhbHVlcyBmcm9tIFwiLi92YWx1ZXMvaW5kZXhcIjtcblxuZXhwb3J0IHR5cGUgVmFsdWUgPVxuICB2YWx1ZXMuQm9vbGVhblxuICB8IHZhbHVlcy5DU3RyaW5nXG4gIHwgdmFsdWVzLkNvbnN0YW50XG4gIHwgdmFsdWVzLkZsb2F0MzJcbiAgfCB2YWx1ZXMuRmxvYXQ2NFxuICB8IHZhbHVlcy5JbnQzMlxuICB8IHZhbHVlcy5OdWxsXG4gIHwgdmFsdWVzLlJlZ2lzdGVyXG4gIHwgdmFsdWVzLlVuZGVmaW5lZDtcblxuZXhwb3J0IG5hbWVzcGFjZSBWYWx1ZSB7XG4gIGV4cG9ydCB0eXBlIEpzb24gPVxuICAgIHZhbHVlcy5Cb29sZWFuLkpzb25cbiAgICB8IHZhbHVlcy5DU3RyaW5nLkpzb25cbiAgICB8IHZhbHVlcy5Db25zdGFudC5Kc29uXG4gICAgfCB2YWx1ZXMuRmxvYXQzMi5Kc29uXG4gICAgfCB2YWx1ZXMuRmxvYXQ2NC5Kc29uXG4gICAgfCB2YWx1ZXMuSW50MzIuSnNvblxuICAgIHwgdmFsdWVzLk51bGwuSnNvblxuICAgIHwgdmFsdWVzLlJlZ2lzdGVyLkpzb25cbiAgICB8IHZhbHVlcy5VbmRlZmluZWQuSnNvbjtcblxuICBleHBvcnQgY29uc3QgdHlwZTogVGFnZ2VkVW5pb25UeXBlPFZhbHVlPiA9IG5ldyBUYWdnZWRVbmlvblR5cGU8VmFsdWU+KHtcbiAgICB2YXJpYW50czogW1xuICAgICAgdmFsdWVzLkJvb2xlYW4udHlwZSxcbiAgICAgIHZhbHVlcy5DU3RyaW5nLnR5cGUsXG4gICAgICB2YWx1ZXMuQ29uc3RhbnQudHlwZSxcbiAgICAgIHZhbHVlcy5GbG9hdDMyLnR5cGUsXG4gICAgICB2YWx1ZXMuRmxvYXQ2NC50eXBlLFxuICAgICAgdmFsdWVzLkludDMyLnR5cGUsXG4gICAgICB2YWx1ZXMuTnVsbC50eXBlLFxuICAgICAgdmFsdWVzLlJlZ2lzdGVyLnR5cGUsXG4gICAgICB2YWx1ZXMuVW5kZWZpbmVkLnR5cGUsXG4gICAgXSxcbiAgICB0YWc6IFwidHlwZVwiLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var boolean_1 = __webpack_require__(238);
exports.Boolean = boolean_1.Boolean;
var c_string_1 = __webpack_require__(239);
exports.CString = c_string_1.CString;
var constant_1 = __webpack_require__(240);
exports.Constant = constant_1.Constant;
var float32_1 = __webpack_require__(241);
exports.Float32 = float32_1.Float32;
var float64_1 = __webpack_require__(242);
exports.Float64 = float64_1.Float64;
var int32_1 = __webpack_require__(243);
exports.Int32 = int32_1.Int32;
var null_1 = __webpack_require__(244);
exports.Null = null_1.Null;
var register_1 = __webpack_require__(245);
exports.Register = register_1.Register;
var undefined_1 = __webpack_require__(246);
exports.Undefined = undefined_1.Undefined;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL3ZhbHVlcy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHFDQUFrQztBQUExQiw0QkFBQSxPQUFPLENBQUE7QUFDZix1Q0FBbUM7QUFBM0IsNkJBQUEsT0FBTyxDQUFBO0FBQ2YsdUNBQW9DO0FBQTVCLDhCQUFBLFFBQVEsQ0FBQTtBQUNoQixxQ0FBa0M7QUFBMUIsNEJBQUEsT0FBTyxDQUFBO0FBQ2YscUNBQWtDO0FBQTFCLDRCQUFBLE9BQU8sQ0FBQTtBQUNmLGlDQUE4QjtBQUF0Qix3QkFBQSxLQUFLLENBQUE7QUFDYiwrQkFBNEI7QUFBcEIsc0JBQUEsSUFBSSxDQUFBO0FBQ1osdUNBQW9DO0FBQTVCLDhCQUFBLFFBQVEsQ0FBQTtBQUNoQix5Q0FBc0M7QUFBOUIsZ0NBQUEsU0FBUyxDQUFBIiwiZmlsZSI6ImxpYi9hdm0xL3ZhbHVlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7Qm9vbGVhbn0gZnJvbSBcIi4vYm9vbGVhblwiO1xuZXhwb3J0IHtDU3RyaW5nfSBmcm9tIFwiLi9jLXN0cmluZ1wiO1xuZXhwb3J0IHtDb25zdGFudH0gZnJvbSBcIi4vY29uc3RhbnRcIjtcbmV4cG9ydCB7RmxvYXQzMn0gZnJvbSBcIi4vZmxvYXQzMlwiO1xuZXhwb3J0IHtGbG9hdDY0fSBmcm9tIFwiLi9mbG9hdDY0XCI7XG5leHBvcnQge0ludDMyfSBmcm9tIFwiLi9pbnQzMlwiO1xuZXhwb3J0IHtOdWxsfSBmcm9tIFwiLi9udWxsXCI7XG5leHBvcnQge1JlZ2lzdGVyfSBmcm9tIFwiLi9yZWdpc3RlclwiO1xuZXhwb3J0IHtVbmRlZmluZWR9IGZyb20gXCIuL3VuZGVmaW5lZFwiO1xuIl19


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const catchTargets = __webpack_require__(100);
var CatchTarget;
(function (CatchTarget) {
    CatchTarget.type = new kryo_1.TaggedUnionType({
        variants: [
            catchTargets.Register.type,
            catchTargets.Variable.type,
        ],
        tag: "type",
    });
})(CatchTarget = exports.CatchTarget || (exports.CatchTarget = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2NhdGNoLXRhcmdldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxQztBQUNyQyxzREFBc0Q7QUFJdEQsSUFBaUIsV0FBVyxDQVUzQjtBQVZELFdBQWlCLFdBQVc7SUFHYixnQkFBSSxHQUFpQyxJQUFJLHNCQUFlLENBQWM7UUFDakYsUUFBUSxFQUFFO1lBQ1IsWUFBWSxDQUFDLFFBQVEsQ0FBQyxJQUFJO1lBQzFCLFlBQVksQ0FBQyxRQUFRLENBQUMsSUFBSTtTQUMzQjtRQUNELEdBQUcsRUFBRSxNQUFNO0tBQ1osQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVZnQixXQUFXLEdBQVgsbUJBQVcsS0FBWCxtQkFBVyxRQVUzQiIsImZpbGUiOiJsaWIvYXZtMS9jYXRjaC10YXJnZXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1RhZ2dlZFVuaW9uVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCAqIGFzIGNhdGNoVGFyZ2V0cyBmcm9tIFwiLi9jYXRjaC10YXJnZXRzL2luZGV4XCI7XG5cbmV4cG9ydCB0eXBlIENhdGNoVGFyZ2V0ID0gY2F0Y2hUYXJnZXRzLlJlZ2lzdGVyIHwgY2F0Y2hUYXJnZXRzLlZhcmlhYmxlO1xuXG5leHBvcnQgbmFtZXNwYWNlIENhdGNoVGFyZ2V0IHtcbiAgZXhwb3J0IHR5cGUgSnNvbiA9IGNhdGNoVGFyZ2V0cy5SZWdpc3Rlci5Kc29uIHwgY2F0Y2hUYXJnZXRzLlZhcmlhYmxlLkpzb247XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IFRhZ2dlZFVuaW9uVHlwZTxDYXRjaFRhcmdldD4gPSBuZXcgVGFnZ2VkVW5pb25UeXBlPENhdGNoVGFyZ2V0Pih7XG4gICAgdmFyaWFudHM6IFtcbiAgICAgIGNhdGNoVGFyZ2V0cy5SZWdpc3Rlci50eXBlLFxuICAgICAgY2F0Y2hUYXJnZXRzLlZhcmlhYmxlLnR5cGUsXG4gICAgXSxcbiAgICB0YWc6IFwidHlwZVwiLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var register_1 = __webpack_require__(278);
exports.Register = register_1.Register;
var variable_1 = __webpack_require__(279);
exports.Variable = variable_1.Variable;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2NhdGNoLXRhcmdldHMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFBNUIsOEJBQUEsUUFBUSxDQUFBO0FBQ2hCLHVDQUFvQztBQUE1Qiw4QkFBQSxRQUFRLENBQUEiLCJmaWxlIjoibGliL2F2bTEvY2F0Y2gtdGFyZ2V0cy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7UmVnaXN0ZXJ9IGZyb20gXCIuL3JlZ2lzdGVyXCI7XG5leHBvcnQge1ZhcmlhYmxlfSBmcm9tIFwiLi92YXJpYWJsZVwiO1xuIl19


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bitmap_1 = __webpack_require__(285);
exports.Bitmap = bitmap_1.Bitmap;
var focal_gradient_1 = __webpack_require__(286);
exports.FocalGradient = focal_gradient_1.FocalGradient;
var linear_gradient_1 = __webpack_require__(287);
exports.LinearGradient = linear_gradient_1.LinearGradient;
var radial_gradient_1 = __webpack_require__(288);
exports.RadialGradient = radial_gradient_1.RadialGradient;
var solid_1 = __webpack_require__(289);
exports.Solid = solid_1.Solid;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWxsLXN0eWxlcy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1DQUFnQztBQUF4QiwwQkFBQSxNQUFNLENBQUE7QUFDZCxtREFBK0M7QUFBdkMseUNBQUEsYUFBYSxDQUFBO0FBQ3JCLHFEQUFpRDtBQUF6QywyQ0FBQSxjQUFjLENBQUE7QUFDdEIscURBQWlEO0FBQXpDLDJDQUFBLGNBQWMsQ0FBQTtBQUN0QixpQ0FBOEI7QUFBdEIsd0JBQUEsS0FBSyxDQUFBIiwiZmlsZSI6ImxpYi9maWxsLXN0eWxlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7Qml0bWFwfSBmcm9tIFwiLi9iaXRtYXBcIjtcbmV4cG9ydCB7Rm9jYWxHcmFkaWVudH0gZnJvbSBcIi4vZm9jYWwtZ3JhZGllbnRcIjtcbmV4cG9ydCB7TGluZWFyR3JhZGllbnR9IGZyb20gXCIuL2xpbmVhci1ncmFkaWVudFwiO1xuZXhwb3J0IHtSYWRpYWxHcmFkaWVudH0gZnJvbSBcIi4vcmFkaWFsLWdyYWRpZW50XCI7XG5leHBvcnQge1NvbGlkfSBmcm9tIFwiLi9zb2xpZFwiO1xuIl19


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var ColorSpace;
(function (ColorSpace) {
    ColorSpace[ColorSpace["SRgb"] = 0] = "SRgb";
    ColorSpace[ColorSpace["LinearRgb"] = 1] = "LinearRgb";
})(ColorSpace = exports.ColorSpace || (exports.ColorSpace = {}));
(function (ColorSpace) {
    ColorSpace.type = new kryo_1.SimpleEnumType({
        enum: ColorSpace,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(ColorSpace = exports.ColorSpace || (exports.ColorSpace = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb2xvci1zcGFjZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUErQztBQUUvQyxJQUFZLFVBR1g7QUFIRCxXQUFZLFVBQVU7SUFDcEIsMkNBQUksQ0FBQTtJQUNKLHFEQUFTLENBQUE7QUFDWCxDQUFDLEVBSFcsVUFBVSxHQUFWLGtCQUFVLEtBQVYsa0JBQVUsUUFHckI7QUFFRCxXQUFpQixVQUFVO0lBS1osZUFBSSxHQUErQixJQUFJLHFCQUFjLENBQWE7UUFDN0UsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBVGdCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBUzFCIiwiZmlsZSI6ImxpYi9jb2xvci1zcGFjZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBTaW1wbGVFbnVtVHlwZX0gZnJvbSBcImtyeW9cIjtcblxuZXhwb3J0IGVudW0gQ29sb3JTcGFjZSB7XG4gIFNSZ2IsXG4gIExpbmVhclJnYixcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDb2xvclNwYWNlIHtcbiAgZXhwb3J0IHR5cGUgSnNvbiA9XG4gICAgXCJzLXJnYlwiXG4gICAgfCBcImxpbmVhci1yZ2JcIjtcblxuICBleHBvcnQgY29uc3QgdHlwZTogU2ltcGxlRW51bVR5cGU8Q29sb3JTcGFjZT4gPSBuZXcgU2ltcGxlRW51bVR5cGU8Q29sb3JTcGFjZT4oe1xuICAgIGVudW06IENvbG9yU3BhY2UsXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuS2ViYWJDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var GradientSpread;
(function (GradientSpread) {
    GradientSpread[GradientSpread["Pad"] = 0] = "Pad";
    GradientSpread[GradientSpread["Reflect"] = 1] = "Reflect";
    GradientSpread[GradientSpread["Repeat"] = 2] = "Repeat";
})(GradientSpread = exports.GradientSpread || (exports.GradientSpread = {}));
(function (GradientSpread) {
    GradientSpread.type = new kryo_1.SimpleEnumType({
        enum: GradientSpread,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(GradientSpread = exports.GradientSpread || (exports.GradientSpread = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9ncmFkaWVudC1zcHJlYWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBK0M7QUFFL0MsSUFBWSxjQUlYO0FBSkQsV0FBWSxjQUFjO0lBQ3hCLGlEQUFHLENBQUE7SUFDSCx5REFBTyxDQUFBO0lBQ1AsdURBQU0sQ0FBQTtBQUNSLENBQUMsRUFKVyxjQUFjLEdBQWQsc0JBQWMsS0FBZCxzQkFBYyxRQUl6QjtBQUVELFdBQWlCLGNBQWM7SUFNaEIsbUJBQUksR0FBbUMsSUFBSSxxQkFBYyxDQUFpQjtRQUNyRixJQUFJLEVBQUUsY0FBYztRQUNwQixNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFWZ0IsY0FBYyxHQUFkLHNCQUFjLEtBQWQsc0JBQWMsUUFVOUIiLCJmaWxlIjoibGliL2dyYWRpZW50LXNwcmVhZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBTaW1wbGVFbnVtVHlwZX0gZnJvbSBcImtyeW9cIjtcblxuZXhwb3J0IGVudW0gR3JhZGllbnRTcHJlYWQge1xuICBQYWQsXG4gIFJlZmxlY3QsXG4gIFJlcGVhdCxcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHcmFkaWVudFNwcmVhZCB7XG4gIGV4cG9ydCB0eXBlIEpzb24gPVxuICAgIFwicGFkXCJcbiAgICB8IFwicmVmbGVjdFwiXG4gICAgfCBcInJlcGVhdFwiO1xuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBTaW1wbGVFbnVtVHlwZTxHcmFkaWVudFNwcmVhZD4gPSBuZXcgU2ltcGxlRW51bVR5cGU8R3JhZGllbnRTcHJlYWQ+KHtcbiAgICBlbnVtOiBHcmFkaWVudFNwcmVhZCxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bevel_1 = __webpack_require__(290);
exports.Bevel = bevel_1.Bevel;
var blur_1 = __webpack_require__(291);
exports.Blur = blur_1.Blur;
var color_matrix_1 = __webpack_require__(292);
exports.ColorMatrix = color_matrix_1.ColorMatrix;
var convolution_1 = __webpack_require__(293);
exports.Convolution = convolution_1.Convolution;
var drop_shadow_1 = __webpack_require__(294);
exports.DropShadow = drop_shadow_1.DropShadow;
var glow_1 = __webpack_require__(295);
exports.Glow = glow_1.Glow;
var gradient_bevel_1 = __webpack_require__(296);
exports.GradientBevel = gradient_bevel_1.GradientBevel;
var gradient_glow_1 = __webpack_require__(297);
exports.GradientGlow = gradient_glow_1.GradientGlow;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWx0ZXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaUNBQThCO0FBQXRCLHdCQUFBLEtBQUssQ0FBQTtBQUNiLCtCQUE0QjtBQUFwQixzQkFBQSxJQUFJLENBQUE7QUFDWiwrQ0FBMkM7QUFBbkMscUNBQUEsV0FBVyxDQUFBO0FBQ25CLDZDQUEwQztBQUFsQyxvQ0FBQSxXQUFXLENBQUE7QUFDbkIsNkNBQXlDO0FBQWpDLG1DQUFBLFVBQVUsQ0FBQTtBQUNsQiwrQkFBNEI7QUFBcEIsc0JBQUEsSUFBSSxDQUFBO0FBQ1osbURBQStDO0FBQXZDLHlDQUFBLGFBQWEsQ0FBQTtBQUNyQixpREFBNkM7QUFBckMsdUNBQUEsWUFBWSxDQUFBIiwiZmlsZSI6ImxpYi9maWx0ZXJzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtCZXZlbH0gZnJvbSBcIi4vYmV2ZWxcIjtcbmV4cG9ydCB7Qmx1cn0gZnJvbSBcIi4vYmx1clwiO1xuZXhwb3J0IHtDb2xvck1hdHJpeH0gZnJvbSBcIi4vY29sb3ItbWF0cml4XCI7XG5leHBvcnQge0NvbnZvbHV0aW9ufSBmcm9tIFwiLi9jb252b2x1dGlvblwiO1xuZXhwb3J0IHtEcm9wU2hhZG93fSBmcm9tIFwiLi9kcm9wLXNoYWRvd1wiO1xuZXhwb3J0IHtHbG93fSBmcm9tIFwiLi9nbG93XCI7XG5leHBvcnQge0dyYWRpZW50QmV2ZWx9IGZyb20gXCIuL2dyYWRpZW50LWJldmVsXCI7XG5leHBvcnQge0dyYWRpZW50R2xvd30gZnJvbSBcIi4vZ3JhZGllbnQtZ2xvd1wiO1xuIl19


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bevel_1 = __webpack_require__(298);
exports.Bevel = bevel_1.Bevel;
var miter_1 = __webpack_require__(299);
exports.Miter = miter_1.Miter;
var round_1 = __webpack_require__(300);
exports.Round = round_1.Round;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9qb2luLXN0eWxlcy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlDQUE4QjtBQUF0Qix3QkFBQSxLQUFLLENBQUE7QUFDYixpQ0FBOEI7QUFBdEIsd0JBQUEsS0FBSyxDQUFBO0FBQ2IsaUNBQThCO0FBQXRCLHdCQUFBLEtBQUssQ0FBQSIsImZpbGUiOiJsaWIvam9pbi1zdHlsZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge0JldmVsfSBmcm9tIFwiLi9iZXZlbFwiO1xuZXhwb3J0IHtNaXRlcn0gZnJvbSBcIi4vbWl0ZXJcIjtcbmV4cG9ydCB7Um91bmR9IGZyb20gXCIuL3JvdW5kXCI7XG4iXX0=


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const vector_2d_1 = __webpack_require__(41);
const _type_1 = __webpack_require__(42);
var CurvedEdge;
(function (CurvedEdge) {
    CurvedEdge.type = new kryo_1.DocumentType({
        properties: {
            type: {
                type: new kryo_1.LiteralType({
                    type: _type_1.ShapeRecordType.type,
                    value: _type_1.ShapeRecordType.CurvedEdge,
                }),
            },
            controlDelta: { type: vector_2d_1.Vector2D.type },
            endDelta: { type: vector_2d_1.Vector2D.type },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(CurvedEdge = exports.CurvedEdge || (exports.CurvedEdge = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zaGFwZS1yZWNvcmRzL2N1cnZlZC1lZGdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELDRDQUFzQztBQUN0QyxtQ0FBd0M7QUFReEMsSUFBaUIsVUFBVSxDQW9CMUI7QUFwQkQsV0FBaUIsVUFBVTtJQU9aLGVBQUksR0FBNkIsSUFBSSxtQkFBWSxDQUFhO1FBQ3pFLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRTtnQkFDSixJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDO29CQUNwQixJQUFJLEVBQUUsdUJBQWUsQ0FBQyxJQUFJO29CQUMxQixLQUFLLEVBQUUsdUJBQWUsQ0FBQyxVQUFVO2lCQUNsQyxDQUFDO2FBQ0g7WUFDRCxZQUFZLEVBQUUsRUFBQyxJQUFJLEVBQUUsb0JBQVEsQ0FBQyxJQUFJLEVBQUM7WUFDbkMsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLG9CQUFRLENBQUMsSUFBSSxFQUFDO1NBQ2hDO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBcEJnQixVQUFVLEdBQVYsa0JBQVUsS0FBVixrQkFBVSxRQW9CMUIiLCJmaWxlIjoibGliL3NoYXBlLXJlY29yZHMvY3VydmVkLWVkZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VmVjdG9yMkR9IGZyb20gXCIuLi92ZWN0b3ItMmRcIjtcbmltcG9ydCB7U2hhcGVSZWNvcmRUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEN1cnZlZEVkZ2Uge1xuICB0eXBlOiBTaGFwZVJlY29yZFR5cGUuQ3VydmVkRWRnZTtcbiAgY29udHJvbERlbHRhOiBWZWN0b3IyRDtcbiAgZW5kRGVsdGE6IFZlY3RvcjJEO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEN1cnZlZEVkZ2Uge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwiY3VydmVkLWVkZ2VcIjtcbiAgICBjb250cm9sX2RlbHRhOiBWZWN0b3IyRC5Kc29uO1xuICAgIGVuZF9kZWx0YTogVmVjdG9yMkQuSnNvbjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8Q3VydmVkRWRnZT4gPSBuZXcgRG9jdW1lbnRUeXBlPEN1cnZlZEVkZ2U+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7XG4gICAgICAgIHR5cGU6IG5ldyBMaXRlcmFsVHlwZSh7XG4gICAgICAgICAgdHlwZTogU2hhcGVSZWNvcmRUeXBlLnR5cGUsXG4gICAgICAgICAgdmFsdWU6IFNoYXBlUmVjb3JkVHlwZS5DdXJ2ZWRFZGdlLFxuICAgICAgICB9KSxcbiAgICAgIH0sXG4gICAgICBjb250cm9sRGVsdGE6IHt0eXBlOiBWZWN0b3IyRC50eXBlfSxcbiAgICAgIGVuZERlbHRhOiB7dHlwZTogVmVjdG9yMkQudHlwZX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const vector_2d_1 = __webpack_require__(41);
const _type_1 = __webpack_require__(42);
var StraightEdge;
(function (StraightEdge) {
    StraightEdge.type = new kryo_1.DocumentType({
        properties: {
            type: {
                type: new kryo_1.LiteralType({
                    type: _type_1.ShapeRecordType.type,
                    value: _type_1.ShapeRecordType.StraightEdge,
                }),
            },
            endDelta: { type: vector_2d_1.Vector2D.type },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StraightEdge = exports.StraightEdge || (exports.StraightEdge = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zaGFwZS1yZWNvcmRzL3N0cmFpZ2h0LWVkZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsNENBQXNDO0FBQ3RDLG1DQUF3QztBQU94QyxJQUFpQixZQUFZLENBa0I1QjtBQWxCRCxXQUFpQixZQUFZO0lBTWQsaUJBQUksR0FBK0IsSUFBSSxtQkFBWSxDQUFlO1FBQzdFLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRTtnQkFDSixJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDO29CQUNwQixJQUFJLEVBQUUsdUJBQWUsQ0FBQyxJQUFJO29CQUMxQixLQUFLLEVBQUUsdUJBQWUsQ0FBQyxZQUFZO2lCQUNwQyxDQUFDO2FBQ0g7WUFDRCxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsb0JBQVEsQ0FBQyxJQUFJLEVBQUM7U0FDaEM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFsQmdCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBa0I1QiIsImZpbGUiOiJsaWIvc2hhcGUtcmVjb3Jkcy9zdHJhaWdodC1lZGdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1ZlY3RvcjJEfSBmcm9tIFwiLi4vdmVjdG9yLTJkXCI7XG5pbXBvcnQge1NoYXBlUmVjb3JkVHlwZX0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdHJhaWdodEVkZ2Uge1xuICB0eXBlOiBTaGFwZVJlY29yZFR5cGUuU3RyYWlnaHRFZGdlO1xuICBlbmREZWx0YTogVmVjdG9yMkQ7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgU3RyYWlnaHRFZGdlIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcInN0cmFpZ2h0LWVkZ2VcIjtcbiAgICBlbmRfZGVsdGE6IFZlY3RvcjJELkpzb247XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFN0cmFpZ2h0RWRnZT4gPSBuZXcgRG9jdW1lbnRUeXBlPFN0cmFpZ2h0RWRnZT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHR5cGU6IHtcbiAgICAgICAgdHlwZTogbmV3IExpdGVyYWxUeXBlKHtcbiAgICAgICAgICB0eXBlOiBTaGFwZVJlY29yZFR5cGUudHlwZSxcbiAgICAgICAgICB2YWx1ZTogU2hhcGVSZWNvcmRUeXBlLlN0cmFpZ2h0RWRnZSxcbiAgICAgICAgfSksXG4gICAgICB9LFxuICAgICAgZW5kRGVsdGE6IHt0eXBlOiBWZWN0b3IyRC50eXBlfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const fill_style_1 = __webpack_require__(43);
const line_style_1 = __webpack_require__(59);
const vector_2d_1 = __webpack_require__(41);
const _type_1 = __webpack_require__(42);
var StyleChange;
(function (StyleChange) {
    StyleChange.type = new kryo_1.DocumentType({
        properties: {
            type: {
                type: new kryo_1.LiteralType({
                    type: _type_1.ShapeRecordType.type,
                    value: _type_1.ShapeRecordType.StyleChange,
                }),
            },
            moveTo: { type: vector_2d_1.Vector2D.type, optional: true },
            leftFill: { type: new kryo_1.Int32Type(), optional: true },
            rightFill: { type: new kryo_1.Int32Type(), optional: true },
            lineStyle: { type: new kryo_1.Int32Type(), optional: true },
            fillStyles: {
                type: new kryo_1.ArrayType({ itemType: fill_style_1.FillStyle.type, maxLength: Infinity }),
                optional: true,
            },
            lineStyles: {
                type: new kryo_1.ArrayType({ itemType: line_style_1.LineStyle.type, maxLength: Infinity }),
                optional: true,
            },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StyleChange = exports.StyleChange || (exports.StyleChange = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zaGFwZS1yZWNvcmRzL3N0eWxlLWNoYW5nZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFnRjtBQUVoRiw4Q0FBd0M7QUFDeEMsOENBQXdDO0FBQ3hDLDRDQUFzQztBQUN0QyxtQ0FBd0M7QUFZeEMsSUFBaUIsV0FBVyxDQWtDM0I7QUFsQ0QsV0FBaUIsV0FBVztJQVdiLGdCQUFJLEdBQThCLElBQUksbUJBQVksQ0FBYztRQUMzRSxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUU7Z0JBQ0osSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQztvQkFDcEIsSUFBSSxFQUFFLHVCQUFlLENBQUMsSUFBSTtvQkFDMUIsS0FBSyxFQUFFLHVCQUFlLENBQUMsV0FBVztpQkFDbkMsQ0FBQzthQUNIO1lBQ0QsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLG9CQUFRLENBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDN0MsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDakQsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDbEQsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDbEQsVUFBVSxFQUFFO2dCQUNWLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsc0JBQVMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDO2dCQUNwRSxRQUFRLEVBQUUsSUFBSTthQUNmO1lBQ0QsVUFBVSxFQUFFO2dCQUNWLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsc0JBQVMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDO2dCQUNwRSxRQUFRLEVBQUUsSUFBSTthQUNmO1NBQ0Y7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFsQ2dCLFdBQVcsR0FBWCxtQkFBVyxLQUFYLG1CQUFXLFFBa0MzQiIsImZpbGUiOiJsaWIvc2hhcGUtcmVjb3Jkcy9zdHlsZS1jaGFuZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FycmF5VHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1VpbnQzMn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0ZpbGxTdHlsZX0gZnJvbSBcIi4uL2ZpbGwtc3R5bGVcIjtcbmltcG9ydCB7TGluZVN0eWxlfSBmcm9tIFwiLi4vbGluZS1zdHlsZVwiO1xuaW1wb3J0IHtWZWN0b3IyRH0gZnJvbSBcIi4uL3ZlY3Rvci0yZFwiO1xuaW1wb3J0IHtTaGFwZVJlY29yZFR5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3R5bGVDaGFuZ2Uge1xuICB0eXBlOiBTaGFwZVJlY29yZFR5cGUuU3R5bGVDaGFuZ2U7XG4gIG1vdmVUbz86IFZlY3RvcjJEO1xuICBsZWZ0RmlsbD86IFVpbnQzMjtcbiAgcmlnaHRGaWxsPzogVWludDMyO1xuICBsaW5lU3R5bGU/OiBVaW50MzI7XG4gIGZpbGxTdHlsZXM/OiBGaWxsU3R5bGVbXTtcbiAgbGluZVN0eWxlcz86IExpbmVTdHlsZVtdO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFN0eWxlQ2hhbmdlIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcInN0eWxlLWNoYW5nZVwiO1xuICAgIG1vdmVfdG8/OiBudW1iZXI7XG4gICAgbGVmdF9maWxsPzogbnVtYmVyO1xuICAgIHJpZ2h0X2ZpbGw/OiBudW1iZXI7XG4gICAgbGluZV9zdHlsZT86IG51bWJlcjtcbiAgICBmaWxsX3N0eWxlcz86IEZpbGxTdHlsZS5Kc29uW107XG4gICAgbGluZV9zdHlsZXM/OiBMaW5lU3R5bGUuSnNvbltdO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxTdHlsZUNoYW5nZT4gPSBuZXcgRG9jdW1lbnRUeXBlPFN0eWxlQ2hhbmdlPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgdHlwZToge1xuICAgICAgICB0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe1xuICAgICAgICAgIHR5cGU6IFNoYXBlUmVjb3JkVHlwZS50eXBlLFxuICAgICAgICAgIHZhbHVlOiBTaGFwZVJlY29yZFR5cGUuU3R5bGVDaGFuZ2UsXG4gICAgICAgIH0pLFxuICAgICAgfSxcbiAgICAgIG1vdmVUbzoge3R5cGU6IFZlY3RvcjJELnR5cGUsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICAgIGxlZnRGaWxsOiB7dHlwZTogbmV3IEludDMyVHlwZSgpLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgICByaWdodEZpbGw6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICAgIGxpbmVTdHlsZToge3R5cGU6IG5ldyBJbnQzMlR5cGUoKSwgb3B0aW9uYWw6IHRydWV9LFxuICAgICAgZmlsbFN0eWxlczoge1xuICAgICAgICB0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogRmlsbFN0eWxlLnR5cGUsIG1heExlbmd0aDogSW5maW5pdHl9KSxcbiAgICAgICAgb3B0aW9uYWw6IHRydWUsXG4gICAgICB9LFxuICAgICAgbGluZVN0eWxlczoge1xuICAgICAgICB0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogTGluZVN0eWxlLnR5cGUsIG1heExlbmd0aDogSW5maW5pdHl9KSxcbiAgICAgICAgb3B0aW9uYWw6IHRydWUsXG4gICAgICB9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var CapStyle;
(function (CapStyle) {
    CapStyle[CapStyle["Round"] = 0] = "Round";
    CapStyle[CapStyle["None"] = 1] = "None";
    CapStyle[CapStyle["Square"] = 2] = "Square";
})(CapStyle = exports.CapStyle || (exports.CapStyle = {}));
(function (CapStyle) {
    CapStyle.type = new kryo_1.SimpleEnumType({
        enum: CapStyle,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(CapStyle = exports.CapStyle || (exports.CapStyle = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jYXAtc3R5bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBK0M7QUFFL0MsSUFBWSxRQUlYO0FBSkQsV0FBWSxRQUFRO0lBQ2xCLHlDQUFLLENBQUE7SUFDTCx1Q0FBSSxDQUFBO0lBQ0osMkNBQU0sQ0FBQTtBQUNSLENBQUMsRUFKVyxRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQUluQjtBQUVELFdBQWlCLFFBQVE7SUFNVixhQUFJLEdBQTZCLElBQUkscUJBQWMsQ0FBVztRQUN6RSxJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVZnQixRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQVV4QiIsImZpbGUiOiJsaWIvY2FwLXN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIFNpbXBsZUVudW1UeXBlfSBmcm9tIFwia3J5b1wiO1xuXG5leHBvcnQgZW51bSBDYXBTdHlsZSB7XG4gIFJvdW5kLFxuICBOb25lLFxuICBTcXVhcmUsXG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ2FwU3R5bGUge1xuICBleHBvcnQgdHlwZSBKc29uID1cbiAgICBcInJvdW5kXCJcbiAgICB8IFwibm9uZVwiXG4gICAgfCBcInNxdWFyZVwiO1xuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBTaW1wbGVFbnVtVHlwZTxDYXBTdHlsZT4gPSBuZXcgU2ltcGxlRW51bVR5cGU8Q2FwU3R5bGU+KHtcbiAgICBlbnVtOiBDYXBTdHlsZSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const joinStyles = __webpack_require__(105);
var JoinStyle;
(function (JoinStyle) {
    JoinStyle.type = new kryo_1.TaggedUnionType({
        variants: [
            joinStyles.Bevel.type,
            joinStyles.Miter.type,
            joinStyles.Round.type,
        ],
        tag: "type",
    });
})(JoinStyle = exports.JoinStyle || (exports.JoinStyle = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9qb2luLXN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXFDO0FBQ3JDLGtEQUFrRDtBQU9sRCxJQUFpQixTQUFTLENBY3pCO0FBZEQsV0FBaUIsU0FBUztJQU1YLGNBQUksR0FBK0IsSUFBSSxzQkFBZSxDQUFZO1FBQzdFLFFBQVEsRUFBRTtZQUNSLFVBQVUsQ0FBQyxLQUFLLENBQUMsSUFBSTtZQUNyQixVQUFVLENBQUMsS0FBSyxDQUFDLElBQUk7WUFDckIsVUFBVSxDQUFDLEtBQUssQ0FBQyxJQUFJO1NBQ3RCO1FBQ0QsR0FBRyxFQUFFLE1BQU07S0FDWixDQUFDLENBQUM7QUFDTCxDQUFDLEVBZGdCLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBY3pCIiwiZmlsZSI6ImxpYi9qb2luLXN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUYWdnZWRVbmlvblR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQgKiBhcyBqb2luU3R5bGVzIGZyb20gXCIuL2pvaW4tc3R5bGVzL2luZGV4XCI7XG5cbmV4cG9ydCB0eXBlIEpvaW5TdHlsZSA9XG4gIGpvaW5TdHlsZXMuQmV2ZWxcbiAgfCBqb2luU3R5bGVzLk1pdGVyXG4gIHwgam9pblN0eWxlcy5Sb3VuZDtcblxuZXhwb3J0IG5hbWVzcGFjZSBKb2luU3R5bGUge1xuICBleHBvcnQgdHlwZSBKc29uID1cbiAgICBqb2luU3R5bGVzLkJldmVsLkpzb25cbiAgICB8IGpvaW5TdHlsZXMuTWl0ZXIuSnNvblxuICAgIHwgam9pblN0eWxlcy5Sb3VuZC5Kc29uO1xuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBUYWdnZWRVbmlvblR5cGU8Sm9pblN0eWxlPiA9IG5ldyBUYWdnZWRVbmlvblR5cGU8Sm9pblN0eWxlPih7XG4gICAgdmFyaWFudHM6IFtcbiAgICAgIGpvaW5TdHlsZXMuQmV2ZWwudHlwZSxcbiAgICAgIGpvaW5TdHlsZXMuTWl0ZXIudHlwZSxcbiAgICAgIGpvaW5TdHlsZXMuUm91bmQudHlwZSxcbiAgICBdLFxuICAgIHRhZzogXCJ0eXBlXCIsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var csm_text_settings_1 = __webpack_require__(302);
exports.CsmTextSettings = csm_text_settings_1.CsmTextSettings;
var define_binary_data_1 = __webpack_require__(303);
exports.DefineBinaryData = define_binary_data_1.DefineBinaryData;
var define_bitmap_1 = __webpack_require__(304);
exports.DefineBitmap = define_bitmap_1.DefineBitmap;
var define_cff_font_1 = __webpack_require__(305);
exports.DefineCffFont = define_cff_font_1.DefineCffFont;
var define_dynamic_text_1 = __webpack_require__(306);
exports.DefineDynamicText = define_dynamic_text_1.DefineDynamicText;
var define_font_1 = __webpack_require__(307);
exports.DefineFont = define_font_1.DefineFont;
var define_font_align_zones_1 = __webpack_require__(308);
exports.DefineFontAlignZones = define_font_align_zones_1.DefineFontAlignZones;
var define_font_info_1 = __webpack_require__(309);
exports.DefineFontInfo = define_font_info_1.DefineFontInfo;
var define_font_name_1 = __webpack_require__(310);
exports.DefineFontName = define_font_name_1.DefineFontName;
var define_jpeg_1 = __webpack_require__(311);
exports.DefineJpeg = define_jpeg_1.DefineJpeg;
var define_partial_font_1 = __webpack_require__(312);
exports.DefinePartialFont = define_partial_font_1.DefinePartialFont;
var define_partial_jpeg_1 = __webpack_require__(313);
exports.DefinePartialJpeg = define_partial_jpeg_1.DefinePartialJpeg;
var define_scene_and_frame_label_data_1 = __webpack_require__(314);
exports.DefineSceneAndFrameLabelData = define_scene_and_frame_label_data_1.DefineSceneAndFrameLabelData;
var define_shape_1 = __webpack_require__(315);
exports.DefineShape = define_shape_1.DefineShape;
var define_sprite_1 = __webpack_require__(316);
exports.DefineSprite = define_sprite_1.DefineSprite;
var define_text_1 = __webpack_require__(317);
exports.DefineText = define_text_1.DefineText;
var do_action_1 = __webpack_require__(318);
exports.DoAction = do_action_1.DoAction;
var do_init_action_1 = __webpack_require__(319);
exports.DoInitAction = do_init_action_1.DoInitAction;
var enable_debugger_1 = __webpack_require__(320);
exports.EnableDebugger = enable_debugger_1.EnableDebugger;
var export_assets_1 = __webpack_require__(321);
exports.ExportAssets = export_assets_1.ExportAssets;
var file_attributes_1 = __webpack_require__(322);
exports.FileAttributes = file_attributes_1.FileAttributes;
var import_assets_1 = __webpack_require__(323);
exports.ImportAssets = import_assets_1.ImportAssets;
var jpeg_tables_1 = __webpack_require__(324);
exports.JpegTables = jpeg_tables_1.JpegTables;
var metadata_1 = __webpack_require__(325);
exports.Metadata = metadata_1.Metadata;
var place_object_1 = __webpack_require__(326);
exports.PlaceObject = place_object_1.PlaceObject;
var remove_object_1 = __webpack_require__(327);
exports.RemoveObject = remove_object_1.RemoveObject;
var set_background_color_1 = __webpack_require__(328);
exports.SetBackgroundColor = set_background_color_1.SetBackgroundColor;
var show_frame_1 = __webpack_require__(329);
exports.ShowFrame = show_frame_1.ShowFrame;
var telemetry_1 = __webpack_require__(330);
exports.Telemetry = telemetry_1.Telemetry;
var unknown_1 = __webpack_require__(331);
exports.Unknown = unknown_1.Unknown;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEseURBQW9EO0FBQTVDLDhDQUFBLGVBQWUsQ0FBQTtBQUN2QiwyREFBc0Q7QUFBOUMsZ0RBQUEsZ0JBQWdCLENBQUE7QUFDeEIsaURBQTZDO0FBQXJDLHVDQUFBLFlBQVksQ0FBQTtBQUNwQixxREFBZ0Q7QUFBeEMsMENBQUEsYUFBYSxDQUFBO0FBQ3JCLDZEQUF3RDtBQUFoRCxrREFBQSxpQkFBaUIsQ0FBQTtBQUN6Qiw2Q0FBeUM7QUFBakMsbUNBQUEsVUFBVSxDQUFBO0FBQ2xCLHFFQUErRDtBQUF2RCx5REFBQSxvQkFBb0IsQ0FBQTtBQUM1Qix1REFBa0Q7QUFBMUMsNENBQUEsY0FBYyxDQUFBO0FBQ3RCLHVEQUFrRDtBQUExQyw0Q0FBQSxjQUFjLENBQUE7QUFDdEIsNkNBQXlDO0FBQWpDLG1DQUFBLFVBQVUsQ0FBQTtBQUNsQiw2REFBd0Q7QUFBaEQsa0RBQUEsaUJBQWlCLENBQUE7QUFDekIsNkRBQXdEO0FBQWhELGtEQUFBLGlCQUFpQixDQUFBO0FBQ3pCLHlGQUFpRjtBQUF6RSwyRUFBQSw0QkFBNEIsQ0FBQTtBQUNwQywrQ0FBMkM7QUFBbkMscUNBQUEsV0FBVyxDQUFBO0FBQ25CLGlEQUE2QztBQUFyQyx1Q0FBQSxZQUFZLENBQUE7QUFDcEIsNkNBQXlDO0FBQWpDLG1DQUFBLFVBQVUsQ0FBQTtBQUNsQix5Q0FBcUM7QUFBN0IsK0JBQUEsUUFBUSxDQUFBO0FBQ2hCLG1EQUE4QztBQUF0Qyx3Q0FBQSxZQUFZLENBQUE7QUFDcEIscURBQWlEO0FBQXpDLDJDQUFBLGNBQWMsQ0FBQTtBQUN0QixpREFBNkM7QUFBckMsdUNBQUEsWUFBWSxDQUFBO0FBQ3BCLHFEQUFpRDtBQUF6QywyQ0FBQSxjQUFjLENBQUE7QUFDdEIsaURBQTZDO0FBQXJDLHVDQUFBLFlBQVksQ0FBQTtBQUNwQiw2Q0FBeUM7QUFBakMsbUNBQUEsVUFBVSxDQUFBO0FBQ2xCLHVDQUFvQztBQUE1Qiw4QkFBQSxRQUFRLENBQUE7QUFDaEIsK0NBQTJDO0FBQW5DLHFDQUFBLFdBQVcsQ0FBQTtBQUNuQixpREFBNkM7QUFBckMsdUNBQUEsWUFBWSxDQUFBO0FBQ3BCLCtEQUEwRDtBQUFsRCxvREFBQSxrQkFBa0IsQ0FBQTtBQUMxQiwyQ0FBdUM7QUFBL0IsaUNBQUEsU0FBUyxDQUFBO0FBQ2pCLHlDQUFzQztBQUE5QixnQ0FBQSxTQUFTLENBQUE7QUFDakIscUNBQWtDO0FBQTFCLDRCQUFBLE9BQU8sQ0FBQSIsImZpbGUiOiJsaWIvdGFncy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7Q3NtVGV4dFNldHRpbmdzfSBmcm9tIFwiLi9jc20tdGV4dC1zZXR0aW5nc1wiO1xuZXhwb3J0IHtEZWZpbmVCaW5hcnlEYXRhfSBmcm9tIFwiLi9kZWZpbmUtYmluYXJ5LWRhdGFcIjtcbmV4cG9ydCB7RGVmaW5lQml0bWFwfSBmcm9tIFwiLi9kZWZpbmUtYml0bWFwXCI7XG5leHBvcnQge0RlZmluZUNmZkZvbnR9IGZyb20gXCIuL2RlZmluZS1jZmYtZm9udFwiO1xuZXhwb3J0IHtEZWZpbmVEeW5hbWljVGV4dH0gZnJvbSBcIi4vZGVmaW5lLWR5bmFtaWMtdGV4dFwiO1xuZXhwb3J0IHtEZWZpbmVGb250fSBmcm9tIFwiLi9kZWZpbmUtZm9udFwiO1xuZXhwb3J0IHtEZWZpbmVGb250QWxpZ25ab25lc30gZnJvbSBcIi4vZGVmaW5lLWZvbnQtYWxpZ24tem9uZXNcIjtcbmV4cG9ydCB7RGVmaW5lRm9udEluZm99IGZyb20gXCIuL2RlZmluZS1mb250LWluZm9cIjtcbmV4cG9ydCB7RGVmaW5lRm9udE5hbWV9IGZyb20gXCIuL2RlZmluZS1mb250LW5hbWVcIjtcbmV4cG9ydCB7RGVmaW5lSnBlZ30gZnJvbSBcIi4vZGVmaW5lLWpwZWdcIjtcbmV4cG9ydCB7RGVmaW5lUGFydGlhbEZvbnR9IGZyb20gXCIuL2RlZmluZS1wYXJ0aWFsLWZvbnRcIjtcbmV4cG9ydCB7RGVmaW5lUGFydGlhbEpwZWd9IGZyb20gXCIuL2RlZmluZS1wYXJ0aWFsLWpwZWdcIjtcbmV4cG9ydCB7RGVmaW5lU2NlbmVBbmRGcmFtZUxhYmVsRGF0YX0gZnJvbSBcIi4vZGVmaW5lLXNjZW5lLWFuZC1mcmFtZS1sYWJlbC1kYXRhXCI7XG5leHBvcnQge0RlZmluZVNoYXBlfSBmcm9tIFwiLi9kZWZpbmUtc2hhcGVcIjtcbmV4cG9ydCB7RGVmaW5lU3ByaXRlfSBmcm9tIFwiLi9kZWZpbmUtc3ByaXRlXCI7XG5leHBvcnQge0RlZmluZVRleHR9IGZyb20gXCIuL2RlZmluZS10ZXh0XCI7XG5leHBvcnQge0RvQWN0aW9ufSBmcm9tIFwiLi9kby1hY3Rpb25cIjtcbmV4cG9ydCB7RG9Jbml0QWN0aW9ufSBmcm9tIFwiLi9kby1pbml0LWFjdGlvblwiO1xuZXhwb3J0IHtFbmFibGVEZWJ1Z2dlcn0gZnJvbSBcIi4vZW5hYmxlLWRlYnVnZ2VyXCI7XG5leHBvcnQge0V4cG9ydEFzc2V0c30gZnJvbSBcIi4vZXhwb3J0LWFzc2V0c1wiO1xuZXhwb3J0IHtGaWxlQXR0cmlidXRlc30gZnJvbSBcIi4vZmlsZS1hdHRyaWJ1dGVzXCI7XG5leHBvcnQge0ltcG9ydEFzc2V0c30gZnJvbSBcIi4vaW1wb3J0LWFzc2V0c1wiO1xuZXhwb3J0IHtKcGVnVGFibGVzfSBmcm9tIFwiLi9qcGVnLXRhYmxlc1wiO1xuZXhwb3J0IHtNZXRhZGF0YX0gZnJvbSBcIi4vbWV0YWRhdGFcIjtcbmV4cG9ydCB7UGxhY2VPYmplY3R9IGZyb20gXCIuL3BsYWNlLW9iamVjdFwiO1xuZXhwb3J0IHtSZW1vdmVPYmplY3R9IGZyb20gXCIuL3JlbW92ZS1vYmplY3RcIjtcbmV4cG9ydCB7U2V0QmFja2dyb3VuZENvbG9yfSBmcm9tIFwiLi9zZXQtYmFja2dyb3VuZC1jb2xvclwiO1xuZXhwb3J0IHtTaG93RnJhbWV9IGZyb20gXCIuL3Nob3ctZnJhbWVcIjtcbmV4cG9ydCB7VGVsZW1ldHJ5fSBmcm9tIFwiLi90ZWxlbWV0cnlcIjtcbmV4cG9ydCB7VW5rbm93bn0gZnJvbSBcIi4vdW5rbm93blwiO1xuIl19


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var GridFitting;
(function (GridFitting) {
    GridFitting[GridFitting["None"] = 0] = "None";
    GridFitting[GridFitting["Pixel"] = 1] = "Pixel";
    GridFitting[GridFitting["SubPixel"] = 2] = "SubPixel";
})(GridFitting = exports.GridFitting || (exports.GridFitting = {}));
(function (GridFitting) {
    GridFitting.type = new kryo_1.SimpleEnumType({
        enum: GridFitting,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(GridFitting = exports.GridFitting || (exports.GridFitting = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90ZXh0L2dyaWQtZml0dGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUErQztBQUUvQyxJQUFZLFdBSVg7QUFKRCxXQUFZLFdBQVc7SUFDckIsNkNBQUksQ0FBQTtJQUNKLCtDQUFLLENBQUE7SUFDTCxxREFBUSxDQUFBO0FBQ1YsQ0FBQyxFQUpXLFdBQVcsR0FBWCxtQkFBVyxLQUFYLG1CQUFXLFFBSXRCO0FBRUQsV0FBaUIsV0FBVztJQU1iLGdCQUFJLEdBQWdDLElBQUkscUJBQWMsQ0FBYztRQUMvRSxJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFWZ0IsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFVM0IiLCJmaWxlIjoibGliL3RleHQvZ3JpZC1maXR0aW5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIFNpbXBsZUVudW1UeXBlfSBmcm9tIFwia3J5b1wiO1xuXG5leHBvcnQgZW51bSBHcmlkRml0dGluZyB7XG4gIE5vbmUsXG4gIFBpeGVsLFxuICBTdWJQaXhlbCxcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHcmlkRml0dGluZyB7XG4gIGV4cG9ydCB0eXBlIEpzb24gPVxuICAgIFwibm9uZVwiXG4gICAgfCBcInBpeGVsXCJcbiAgICB8IFwic3ViLXBpeGVsXCI7XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IFNpbXBsZUVudW1UeXBlPEdyaWRGaXR0aW5nPiA9IG5ldyBTaW1wbGVFbnVtVHlwZTxHcmlkRml0dGluZz4oe1xuICAgIGVudW06IEdyaWRGaXR0aW5nLFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var TextRenderer;
(function (TextRenderer) {
    TextRenderer[TextRenderer["Normal"] = 0] = "Normal";
    TextRenderer[TextRenderer["Advanced"] = 1] = "Advanced";
})(TextRenderer = exports.TextRenderer || (exports.TextRenderer = {}));
(function (TextRenderer) {
    TextRenderer.type = new kryo_1.SimpleEnumType({
        enum: TextRenderer,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(TextRenderer = exports.TextRenderer || (exports.TextRenderer = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90ZXh0L3RleHQtcmVuZGVyZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBK0M7QUFFL0MsSUFBWSxZQUdYO0FBSEQsV0FBWSxZQUFZO0lBQ3RCLG1EQUFNLENBQUE7SUFDTix1REFBUSxDQUFBO0FBQ1YsQ0FBQyxFQUhXLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBR3ZCO0FBRUQsV0FBaUIsWUFBWTtJQUtkLGlCQUFJLEdBQWlDLElBQUkscUJBQWMsQ0FBZTtRQUNqRixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFUZ0IsWUFBWSxHQUFaLG9CQUFZLEtBQVosb0JBQVksUUFTNUIiLCJmaWxlIjoibGliL3RleHQvdGV4dC1yZW5kZXJlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBTaW1wbGVFbnVtVHlwZX0gZnJvbSBcImtyeW9cIjtcblxuZXhwb3J0IGVudW0gVGV4dFJlbmRlcmVyIHtcbiAgTm9ybWFsLFxuICBBZHZhbmNlZCxcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBUZXh0UmVuZGVyZXIge1xuICBleHBvcnQgdHlwZSBKc29uID1cbiAgICBcIm5vcm1hbFwiXG4gICAgfCBcImFkdmFuY2VkXCI7XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IFNpbXBsZUVudW1UeXBlPFRleHRSZW5kZXJlcj4gPSBuZXcgU2ltcGxlRW51bVR5cGU8VGV4dFJlbmRlcmVyPih7XG4gICAgZW51bTogVGV4dFJlbmRlcmVyLFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var TextAlignment;
(function (TextAlignment) {
    TextAlignment[TextAlignment["Left"] = 0] = "Left";
    TextAlignment[TextAlignment["Right"] = 1] = "Right";
    TextAlignment[TextAlignment["Center"] = 2] = "Center";
    TextAlignment[TextAlignment["Justify"] = 3] = "Justify";
})(TextAlignment = exports.TextAlignment || (exports.TextAlignment = {}));
(function (TextAlignment) {
    TextAlignment.type = new kryo_1.SimpleEnumType({
        enum: TextAlignment,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(TextAlignment = exports.TextAlignment || (exports.TextAlignment = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90ZXh0L3RleHQtYWxpZ25tZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQStDO0FBRS9DLElBQVksYUFLWDtBQUxELFdBQVksYUFBYTtJQUN2QixpREFBSSxDQUFBO0lBQ0osbURBQUssQ0FBQTtJQUNMLHFEQUFNLENBQUE7SUFDTix1REFBTyxDQUFBO0FBQ1QsQ0FBQyxFQUxXLGFBQWEsR0FBYixxQkFBYSxLQUFiLHFCQUFhLFFBS3hCO0FBRUQsV0FBaUIsYUFBYTtJQU9mLGtCQUFJLEdBQWtDLElBQUkscUJBQWMsQ0FBZ0I7UUFDbkYsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLGFBQWEsR0FBYixxQkFBYSxLQUFiLHFCQUFhLFFBVzdCIiwiZmlsZSI6ImxpYi90ZXh0L3RleHQtYWxpZ25tZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIFNpbXBsZUVudW1UeXBlfSBmcm9tIFwia3J5b1wiO1xuXG5leHBvcnQgZW51bSBUZXh0QWxpZ25tZW50IHtcbiAgTGVmdCxcbiAgUmlnaHQsXG4gIENlbnRlcixcbiAgSnVzdGlmeSxcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBUZXh0QWxpZ25tZW50IHtcbiAgZXhwb3J0IHR5cGUgSnNvbiA9XG4gICAgXCJsZWZ0XCJcbiAgICB8IFwicmlnaHRcIlxuICAgIHwgXCJjZW50ZXJcIlxuICAgIHwgXCJqdXN0aWZ5XCI7XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IFNpbXBsZUVudW1UeXBlPFRleHRBbGlnbm1lbnQ+ID0gbmV3IFNpbXBsZUVudW1UeXBlPFRleHRBbGlnbm1lbnQ+KHtcbiAgICBlbnVtOiBUZXh0QWxpZ25tZW50LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const rect_1 = __webpack_require__(19);
const kerning_record_1 = __webpack_require__(116);
var FontLayout;
(function (FontLayout) {
    FontLayout.type = new kryo_1.DocumentType({
        properties: {
            ascent: { type: new kryo_1.Int32Type() },
            descent: { type: new kryo_1.Int32Type() },
            leading: { type: new kryo_1.Int32Type() },
            advances: { type: new kryo_1.ArrayType({ itemType: new kryo_1.Int32Type(), maxLength: Infinity }) },
            bounds: { type: new kryo_1.ArrayType({ itemType: rect_1.Rect.type, maxLength: Infinity }) },
            kerning: { type: new kryo_1.ArrayType({ itemType: kerning_record_1.KerningRecord.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(FontLayout = exports.FontLayout || (exports.FontLayout = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90ZXh0L2ZvbnQtbGF5b3V0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQW1FO0FBRW5FLGtDQUE2QjtBQUM3QixxREFBK0M7QUFXL0MsSUFBaUIsVUFBVSxDQXFCMUI7QUFyQkQsV0FBaUIsVUFBVTtJQVVaLGVBQUksR0FBNkIsSUFBSSxtQkFBWSxDQUFhO1FBQ3pFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztZQUMvQixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDaEMsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQ2hDLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7WUFDakYsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxXQUFJLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1lBQ3pFLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsOEJBQWEsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7U0FDcEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFyQmdCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBcUIxQiIsImZpbGUiOiJsaWIvdGV4dC9mb250LWxheW91dC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXJyYXlUeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgSW50MzJUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtTaW50MTYsIFVpbnQxNn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge1JlY3R9IGZyb20gXCIuLi9yZWN0XCI7XG5pbXBvcnQge0tlcm5pbmdSZWNvcmR9IGZyb20gXCIuL2tlcm5pbmctcmVjb3JkXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9udExheW91dCB7XG4gIGFzY2VudDogVWludDE2O1xuICBkZXNjZW50OiBVaW50MTY7XG4gIGxlYWRpbmc6IFNpbnQxNjtcbiAgYWR2YW5jZXM6IFNpbnQxNltdO1xuICBib3VuZHM6IFJlY3RbXTtcbiAga2VybmluZzogS2VybmluZ1JlY29yZFtdO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEZvbnRMYXlvdXQge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFzY2VudDogbnVtYmVyO1xuICAgIGRlc2NlbnQ6IG51bWJlcjtcbiAgICBsZWFkaW5nOiBudW1iZXI7XG4gICAgYWR2YW5jZXM6IG51bWJlcltdO1xuICAgIGJvdW5kczogUmVjdC5Kc29uW107XG4gICAga2VybmluZ190YWJsZTogS2VybmluZ1JlY29yZC5Kc29uW107XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEZvbnRMYXlvdXQ+ID0gbmV3IERvY3VtZW50VHlwZTxGb250TGF5b3V0Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYXNjZW50OiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIGRlc2NlbnQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgbGVhZGluZzoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICBhZHZhbmNlczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBuZXcgSW50MzJUeXBlKCksIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgICBib3VuZHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogUmVjdC50eXBlLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgICAga2VybmluZzoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBLZXJuaW5nUmVjb3JkLnR5cGUsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var KerningRecord;
(function (KerningRecord) {
    KerningRecord.type = new kryo_1.DocumentType({
        properties: {
            left: { type: new kryo_1.Int32Type() },
            right: { type: new kryo_1.Int32Type() },
            adjustment: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(KerningRecord = exports.KerningRecord || (exports.KerningRecord = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90ZXh0L2tlcm5pbmctcmVjb3JkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXdEO0FBU3hELElBQWlCLGFBQWEsQ0FlN0I7QUFmRCxXQUFpQixhQUFhO0lBT2Ysa0JBQUksR0FBZ0MsSUFBSSxtQkFBWSxDQUFnQjtRQUMvRSxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDN0IsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQzlCLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztTQUNwQztRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWZnQixhQUFhLEdBQWIscUJBQWEsS0FBYixxQkFBYSxRQWU3QiIsImZpbGUiOiJsaWIvdGV4dC9rZXJuaW5nLXJlY29yZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7U2ludDE2LCBVaW50MTZ9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEtlcm5pbmdSZWNvcmQge1xuICBsZWZ0OiBVaW50MTY7XG4gIHJpZ2h0OiBVaW50MTY7XG4gIGFkanVzdG1lbnQ6IFNpbnQxNjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBLZXJuaW5nUmVjb3JkIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBsZWZ0OiBudW1iZXI7XG4gICAgcmlnaHQ6IG51bWJlcjtcbiAgICBmb250X2tlcm5pbmdfYWRqdXN0bWVudDogbnVtYmVyO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxLZXJuaW5nUmVjb3JkPiA9IG5ldyBEb2N1bWVudFR5cGU8S2VybmluZ1JlY29yZD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGxlZnQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgcmlnaHQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgYWRqdXN0bWVudDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var CsmTableHint;
(function (CsmTableHint) {
    CsmTableHint[CsmTableHint["Thin"] = 0] = "Thin";
    CsmTableHint[CsmTableHint["Medium"] = 1] = "Medium";
    CsmTableHint[CsmTableHint["Thick"] = 2] = "Thick";
})(CsmTableHint = exports.CsmTableHint || (exports.CsmTableHint = {}));
(function (CsmTableHint) {
    CsmTableHint.type = new kryo_1.SimpleEnumType({
        enum: CsmTableHint,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(CsmTableHint = exports.CsmTableHint || (exports.CsmTableHint = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90ZXh0L2NzbS10YWJsZS1oaW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQStDO0FBRS9DLElBQVksWUFJWDtBQUpELFdBQVksWUFBWTtJQUN0QiwrQ0FBSSxDQUFBO0lBQ0osbURBQU0sQ0FBQTtJQUNOLGlEQUFLLENBQUE7QUFDUCxDQUFDLEVBSlcsWUFBWSxHQUFaLG9CQUFZLEtBQVosb0JBQVksUUFJdkI7QUFFRCxXQUFpQixZQUFZO0lBTWQsaUJBQUksR0FBaUMsSUFBSSxxQkFBYyxDQUFlO1FBQ2pGLElBQUksRUFBRSxZQUFZO1FBQ2xCLE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVZnQixZQUFZLEdBQVosb0JBQVksS0FBWixvQkFBWSxRQVU1QiIsImZpbGUiOiJsaWIvdGV4dC9jc20tdGFibGUtaGludC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBTaW1wbGVFbnVtVHlwZX0gZnJvbSBcImtyeW9cIjtcblxuZXhwb3J0IGVudW0gQ3NtVGFibGVIaW50IHtcbiAgVGhpbixcbiAgTWVkaXVtLFxuICBUaGljayxcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDc21UYWJsZUhpbnQge1xuICBleHBvcnQgdHlwZSBKc29uID1cbiAgICBcInRoaW5cIlxuICAgIHwgXCJtZWRpdW1cIlxuICAgIHwgXCJ0aGlja1wiO1xuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBTaW1wbGVFbnVtVHlwZTxDc21UYWJsZUhpbnQ+ID0gbmV3IFNpbXBsZUVudW1UeXBlPENzbVRhYmxlSGludD4oe1xuICAgIGVudW06IENzbVRhYmxlSGludCxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const font_alignment_zone_data_1 = __webpack_require__(119);
var FontAlignmentZone;
(function (FontAlignmentZone) {
    FontAlignmentZone.type = new kryo_1.DocumentType({
        properties: {
            data: { type: new kryo_1.ArrayType({ itemType: font_alignment_zone_data_1.FontAlignmentZoneData.type, maxLength: Infinity }) },
            hasX: { type: new kryo_1.BooleanType() },
            hasY: { type: new kryo_1.BooleanType() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(FontAlignmentZone = exports.FontAlignmentZone || (exports.FontAlignmentZone = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90ZXh0L2ZvbnQtYWxpZ25tZW50LXpvbmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBcUU7QUFDckUseUVBQWlFO0FBUWpFLElBQWlCLGlCQUFpQixDQWVqQztBQWZELFdBQWlCLGlCQUFpQjtJQU9uQixzQkFBSSxHQUFvQyxJQUFJLG1CQUFZLENBQW9CO1FBQ3ZGLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsZ0RBQXFCLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1lBQ3hGLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUMvQixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7U0FDaEM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFmZ0IsaUJBQWlCLEdBQWpCLHlCQUFpQixLQUFqQix5QkFBaUIsUUFlakMiLCJmaWxlIjoibGliL3RleHQvZm9udC1hbGlnbm1lbnQtem9uZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXJyYXlUeXBlLCBCb29sZWFuVHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0ZvbnRBbGlnbm1lbnRab25lRGF0YX0gZnJvbSBcIi4vZm9udC1hbGlnbm1lbnQtem9uZS1kYXRhXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9udEFsaWdubWVudFpvbmUge1xuICBkYXRhOiBGb250QWxpZ25tZW50Wm9uZURhdGFbXTtcbiAgaGFzWDogYm9vbGVhbjtcbiAgaGFzWTogYm9vbGVhbjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBGb250QWxpZ25tZW50Wm9uZSB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgZGF0YTogRm9udEFsaWdubWVudFpvbmVEYXRhLkpzb25bXTtcbiAgICBoYXNfeDogYm9vbGVhbjtcbiAgICBoYXNfeTogYm9vbGVhbjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8Rm9udEFsaWdubWVudFpvbmU+ID0gbmV3IERvY3VtZW50VHlwZTxGb250QWxpZ25tZW50Wm9uZT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGRhdGE6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogRm9udEFsaWdubWVudFpvbmVEYXRhLnR5cGUsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgICBoYXNYOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgaGFzWToge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var FontAlignmentZoneData;
(function (FontAlignmentZoneData) {
    FontAlignmentZoneData.type = new kryo_1.DocumentType({
        properties: {
            origin: { type: new kryo_1.Float64Type() },
            size: { type: new kryo_1.Float64Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(FontAlignmentZoneData = exports.FontAlignmentZoneData || (exports.FontAlignmentZoneData = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90ZXh0L2ZvbnQtYWxpZ25tZW50LXpvbmUtZGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQVExRCxJQUFpQixxQkFBcUIsQ0FhckM7QUFiRCxXQUFpQixxQkFBcUI7SUFNdkIsMEJBQUksR0FBd0MsSUFBSSxtQkFBWSxDQUF3QjtRQUMvRixVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDakMsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1NBQ2hDO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLHFCQUFxQixHQUFyQiw2QkFBcUIsS0FBckIsNkJBQXFCLFFBYXJDIiwiZmlsZSI6ImxpYi90ZXh0L2ZvbnQtYWxpZ25tZW50LXpvbmUtZGF0YS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEZsb2F0NjRUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtGbG9hdDE2fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBGb250QWxpZ25tZW50Wm9uZURhdGEge1xuICBvcmlnaW46IEZsb2F0MTY7XG4gIHNpemU6IEZsb2F0MTY7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRm9udEFsaWdubWVudFpvbmVEYXRhIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBvcmlnaW46IG51bWJlcjtcbiAgICBzaXplOiBudW1iZXI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEZvbnRBbGlnbm1lbnRab25lRGF0YT4gPSBuZXcgRG9jdW1lbnRUeXBlPEZvbnRBbGlnbm1lbnRab25lRGF0YT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIG9yaWdpbjoge3R5cGU6IG5ldyBGbG9hdDY0VHlwZSgpfSxcbiAgICAgIHNpemU6IHt0eXBlOiBuZXcgRmxvYXQ2NFR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var Label;
(function (Label) {
    Label.type = new kryo_1.DocumentType({
        properties: {
            frame: { type: new kryo_1.Int32Type() },
            name: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Label = exports.Label || (exports.Label = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb250cm9sL2xhYmVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXdFO0FBT3hFLElBQWlCLEtBQUssQ0FhckI7QUFiRCxXQUFpQixLQUFLO0lBTVAsVUFBSSxHQUF3QixJQUFJLG1CQUFZLENBQVE7UUFDL0QsVUFBVSxFQUFFO1lBQ1YsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQzlCLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUN4RDtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWJnQixLQUFLLEdBQUwsYUFBSyxLQUFMLGFBQUssUUFhckIiLCJmaWxlIjoibGliL2NvbnRyb2wvbGFiZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIFVjczJTdHJpbmdUeXBlfSBmcm9tIFwia3J5b1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIExhYmVsIHtcbiAgZnJhbWU6IG51bWJlcjtcbiAgbmFtZTogc3RyaW5nO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIExhYmVsIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBmcmFtZTogbnVtYmVyO1xuICAgIG5hbWU6IHN0cmluZztcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8TGFiZWw+ID0gbmV3IERvY3VtZW50VHlwZTxMYWJlbD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGZyYW1lOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIG5hbWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var Scene;
(function (Scene) {
    Scene.type = new kryo_1.DocumentType({
        properties: {
            offset: { type: new kryo_1.Int32Type() },
            name: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Scene = exports.Scene || (exports.Scene = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb250cm9sL3NjZW5lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXdFO0FBT3hFLElBQWlCLEtBQUssQ0FhckI7QUFiRCxXQUFpQixLQUFLO0lBTVAsVUFBSSxHQUF3QixJQUFJLG1CQUFZLENBQVE7UUFDL0QsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQy9CLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUN4RDtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWJnQixLQUFLLEdBQUwsYUFBSyxLQUFMLGFBQUssUUFhckIiLCJmaWxlIjoibGliL2NvbnRyb2wvc2NlbmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIFVjczJTdHJpbmdUeXBlfSBmcm9tIFwia3J5b1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNjZW5lIHtcbiAgb2Zmc2V0OiBudW1iZXI7XG4gIG5hbWU6IHN0cmluZztcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTY2VuZSB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgb2Zmc2V0OiBudW1iZXI7XG4gICAgbmFtZTogc3RyaW5nO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxTY2VuZT4gPSBuZXcgRG9jdW1lbnRUeXBlPFNjZW5lPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgb2Zmc2V0OiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIG5hbWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const fill_style_1 = __webpack_require__(43);
const line_style_1 = __webpack_require__(59);
const shape_record_1 = __webpack_require__(61);
var Shape;
(function (Shape) {
    Shape.type = new kryo_1.DocumentType({
        properties: {
            fillStyles: { type: new kryo_1.ArrayType({ itemType: fill_style_1.FillStyle.type, maxLength: Infinity }) },
            lineStyles: { type: new kryo_1.ArrayType({ itemType: line_style_1.LineStyle.type, maxLength: Infinity }) },
            records: { type: new kryo_1.ArrayType({ itemType: shape_record_1.ShapeRecord.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Shape = exports.Shape || (exports.Shape = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zaGFwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUF3RDtBQUN4RCw2Q0FBdUM7QUFDdkMsNkNBQXVDO0FBQ3ZDLGlEQUEyQztBQVEzQyxJQUFpQixLQUFLLENBZXJCO0FBZkQsV0FBaUIsS0FBSztJQU9QLFVBQUksR0FBd0IsSUFBSSxtQkFBWSxDQUFRO1FBQy9ELFVBQVUsRUFBRTtZQUNWLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsc0JBQVMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7WUFDbEYsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxzQkFBUyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztZQUNsRixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLDBCQUFXLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQ2xGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBZmdCLEtBQUssR0FBTCxhQUFLLEtBQUwsYUFBSyxRQWVyQiIsImZpbGUiOiJsaWIvc2hhcGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FycmF5VHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0ZpbGxTdHlsZX0gZnJvbSBcIi4vZmlsbC1zdHlsZVwiO1xuaW1wb3J0IHtMaW5lU3R5bGV9IGZyb20gXCIuL2xpbmUtc3R5bGVcIjtcbmltcG9ydCB7U2hhcGVSZWNvcmR9IGZyb20gXCIuL3NoYXBlLXJlY29yZFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNoYXBlIHtcbiAgZmlsbFN0eWxlczogRmlsbFN0eWxlW107XG4gIGxpbmVTdHlsZXM6IExpbmVTdHlsZVtdO1xuICByZWNvcmRzOiBTaGFwZVJlY29yZFtdO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFNoYXBlIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBmaWxsX3N0eWxlczogRmlsbFN0eWxlLkpzb25bXTtcbiAgICBsaW5lX3N0eWxlczogTGluZVN0eWxlLkpzb25bXTtcbiAgICByZWNvcmRzOiBTaGFwZVJlY29yZC5Kc29uW107XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFNoYXBlPiA9IG5ldyBEb2N1bWVudFR5cGU8U2hhcGU+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBmaWxsU3R5bGVzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6IEZpbGxTdHlsZS50eXBlLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgICAgbGluZVN0eWxlczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBMaW5lU3R5bGUudHlwZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICAgIHJlY29yZHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogU2hhcGVSZWNvcmQudHlwZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const straight_s_rgba8_1 = __webpack_require__(5);
const glyph_entry_1 = __webpack_require__(124);
var TextRecord;
(function (TextRecord) {
    TextRecord.type = new kryo_1.DocumentType({
        properties: {
            fontId: { type: new kryo_1.Int32Type(), optional: true },
            color: { type: straight_s_rgba8_1.StraightSRgba8.type, optional: true },
            offsetX: { type: new kryo_1.Int32Type(), optional: true },
            offsetY: { type: new kryo_1.Int32Type(), optional: true },
            fontSize: { type: new kryo_1.Int32Type(), optional: true },
            entries: { type: new kryo_1.ArrayType({ itemType: glyph_entry_1.GlyphEntry.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(TextRecord = exports.TextRecord || (exports.TextRecord = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90ZXh0L3RleHQtcmVjb3JkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQW1FO0FBRW5FLDBEQUFtRDtBQUNuRCwrQ0FBeUM7QUFXekMsSUFBaUIsVUFBVSxDQXFCMUI7QUFyQkQsV0FBaUIsVUFBVTtJQVVaLGVBQUksR0FBNkIsSUFBSSxtQkFBWSxDQUFhO1FBQ3pFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1lBQy9DLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxpQ0FBYyxDQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1lBQ2xELE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1lBQ2hELE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1lBQ2hELFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1lBQ2pELE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7U0FDakY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFyQmdCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBcUIxQiIsImZpbGUiOiJsaWIvdGV4dC90ZXh0LXJlY29yZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXJyYXlUeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgSW50MzJUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtTaW50MTYsIFVpbnQxNn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge1N0cmFpZ2h0U1JnYmE4fSBmcm9tIFwiLi4vc3RyYWlnaHQtcy1yZ2JhOFwiO1xuaW1wb3J0IHtHbHlwaEVudHJ5fSBmcm9tIFwiLi9nbHlwaC1lbnRyeVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRleHRSZWNvcmQge1xuICBmb250SWQ/OiBVaW50MTY7XG4gIGNvbG9yPzogU3RyYWlnaHRTUmdiYTg7XG4gIG9mZnNldFg6IFNpbnQxNjtcbiAgb2Zmc2V0WTogU2ludDE2O1xuICBmb250U2l6ZT86IFVpbnQxNjtcbiAgZW50cmllczogR2x5cGhFbnRyeVtdO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFRleHRSZWNvcmQge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGZvbnRfaWQ/OiBudW1iZXI7XG4gICAgY29sb3I/OiBTdHJhaWdodFNSZ2JhOC5Kc29uO1xuICAgIG9mZnNldF94OiBudW1iZXI7XG4gICAgb2Zmc2V0X3k6IG51bWJlcjtcbiAgICBmb250X3NpemU/OiBudW1iZXI7XG4gICAgZW50cmllczogR2x5cGhFbnRyeS5Kc29uW107XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFRleHRSZWNvcmQ+ID0gbmV3IERvY3VtZW50VHlwZTxUZXh0UmVjb3JkPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgZm9udElkOiB7dHlwZTogbmV3IEludDMyVHlwZSgpLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgICBjb2xvcjoge3R5cGU6IFN0cmFpZ2h0U1JnYmE4LnR5cGUsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICAgIG9mZnNldFg6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICAgIG9mZnNldFk6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICAgIGZvbnRTaXplOiB7dHlwZTogbmV3IEludDMyVHlwZSgpLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgICBlbnRyaWVzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6IEdseXBoRW50cnkudHlwZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var GlyphEntry;
(function (GlyphEntry) {
    GlyphEntry.type = new kryo_1.DocumentType({
        properties: {
            index: { type: new kryo_1.Int32Type() },
            advance: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(GlyphEntry = exports.GlyphEntry || (exports.GlyphEntry = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90ZXh0L2dseXBoLWVudHJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXdEO0FBUXhELElBQWlCLFVBQVUsQ0FhMUI7QUFiRCxXQUFpQixVQUFVO0lBTVosZUFBSSxHQUE2QixJQUFJLG1CQUFZLENBQWE7UUFDekUsVUFBVSxFQUFFO1lBQ1YsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQzlCLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztTQUNqQztRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWJnQixVQUFVLEdBQVYsa0JBQVUsS0FBVixrQkFBVSxRQWExQiIsImZpbGUiOiJsaWIvdGV4dC9nbHlwaC1lbnRyeS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7U2ludDMyLCBVaW50MzJ9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdseXBoRW50cnkge1xuICBpbmRleDogVWludDMyO1xuICBhZHZhbmNlOiBTaW50MzI7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2x5cGhFbnRyeSB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgaW5kZXg6IG51bWJlcjtcbiAgICBhZHZhbmNlOiBudW1iZXI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEdseXBoRW50cnk+ID0gbmV3IERvY3VtZW50VHlwZTxHbHlwaEVudHJ5Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgaW5kZXg6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgYWR2YW5jZToge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _circular_references_1 = __webpack_require__(14);
var ClipActions;
(function (ClipActions) {
    ClipActions.type = new kryo_1.DocumentType({
        properties: {
            events: { type: new kryo_1.ArrayType({ itemType: _circular_references_1.Action.type, maxLength: Infinity }) },
            keyCode: { type: new kryo_1.Int32Type(), optional: true },
            actions: { type: new kryo_1.ArrayType({ itemType: _circular_references_1.Action.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ClipActions = exports.ClipActions || (exports.ClipActions = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jbGlwLWFjdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBbUU7QUFFbkUsaUVBQXlEO0FBVXpELElBQWlCLFdBQVcsQ0FlM0I7QUFmRCxXQUFpQixXQUFXO0lBT2IsZ0JBQUksR0FBOEIsSUFBSSxtQkFBWSxDQUFjO1FBQzNFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsNkJBQU8sQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7WUFDNUUsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDaEQsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSw2QkFBTyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUM5RTtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWZnQixXQUFXLEdBQVgsbUJBQVcsS0FBWCxtQkFBVyxRQWUzQiIsImZpbGUiOiJsaWIvY2xpcC1hY3Rpb25zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcnJheVR5cGUsIENhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1VpbnQ4fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7QWN0aW9uIGFzICRBY3Rpb259IGZyb20gXCIuL19jaXJjdWxhci1yZWZlcmVuY2VzXCI7XG5pbXBvcnQge0FjdGlvbn0gZnJvbSBcIi4vYXZtMS9hY3Rpb25cIjtcbmltcG9ydCB7Q2xpcEV2ZW50RmxhZ3N9IGZyb20gXCIuL2NsaXAtZXZlbnQtZmxhZ3NcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDbGlwQWN0aW9ucyB7XG4gIGV2ZW50czogQ2xpcEV2ZW50RmxhZ3M7XG4gIGtleUNvZGU/OiBVaW50ODtcbiAgYWN0aW9uczogQWN0aW9uW107XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ2xpcEFjdGlvbnMge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGV2ZW50czogQ2xpcEV2ZW50RmxhZ3MuSnNvbjtcbiAgICBrZXlfY29kZT86IG51bWJlcjtcbiAgICByZWNvcmRzOiBBY3Rpb24uSnNvbltdO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxDbGlwQWN0aW9ucz4gPSBuZXcgRG9jdW1lbnRUeXBlPENsaXBBY3Rpb25zPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgZXZlbnRzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRBY3Rpb24udHlwZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICAgIGtleUNvZGU6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICAgIGFjdGlvbnM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJEFjdGlvbi50eXBlLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const filters = __webpack_require__(104);
var Filter;
(function (Filter) {
    Filter.type = new kryo_1.TaggedUnionType({
        variants: [
            filters.Bevel.type,
            filters.Blur.type,
            filters.ColorMatrix.type,
            filters.Convolution.type,
            filters.DropShadow.type,
            filters.Glow.type,
            filters.GradientBevel.type,
            filters.GradientGlow.type,
        ],
        tag: "filter",
    });
})(Filter = exports.Filter || (exports.Filter = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWx0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBcUM7QUFDckMsMkNBQTJDO0FBWTNDLElBQWlCLE1BQU0sQ0F3QnRCO0FBeEJELFdBQWlCLE1BQU07SUFXUixXQUFJLEdBQTRCLElBQUksc0JBQWUsQ0FBUztRQUN2RSxRQUFRLEVBQUU7WUFDUixPQUFPLENBQUMsS0FBSyxDQUFDLElBQUk7WUFDbEIsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJO1lBQ2pCLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSTtZQUN4QixPQUFPLENBQUMsV0FBVyxDQUFDLElBQUk7WUFDeEIsT0FBTyxDQUFDLFVBQVUsQ0FBQyxJQUFJO1lBQ3ZCLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSTtZQUNqQixPQUFPLENBQUMsYUFBYSxDQUFDLElBQUk7WUFDMUIsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJO1NBQzFCO1FBQ0QsR0FBRyxFQUFFLFFBQVE7S0FDZCxDQUFDLENBQUM7QUFDTCxDQUFDLEVBeEJnQixNQUFNLEdBQU4sY0FBTSxLQUFOLGNBQU0sUUF3QnRCIiwiZmlsZSI6ImxpYi9maWx0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1RhZ2dlZFVuaW9uVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCAqIGFzIGZpbHRlcnMgZnJvbSBcIi4vZmlsdGVycy9pbmRleFwiO1xuXG5leHBvcnQgdHlwZSBGaWx0ZXIgPVxuICBmaWx0ZXJzLkJldmVsXG4gIHwgZmlsdGVycy5CbHVyXG4gIHwgZmlsdGVycy5Db2xvck1hdHJpeFxuICB8IGZpbHRlcnMuQ29udm9sdXRpb25cbiAgfCBmaWx0ZXJzLkRyb3BTaGFkb3dcbiAgfCBmaWx0ZXJzLkdsb3dcbiAgfCBmaWx0ZXJzLkdyYWRpZW50QmV2ZWxcbiAgfCBmaWx0ZXJzLkdyYWRpZW50R2xvdztcblxuZXhwb3J0IG5hbWVzcGFjZSBGaWx0ZXIge1xuICBleHBvcnQgdHlwZSBKc29uID1cbiAgICBmaWx0ZXJzLkJldmVsLkpzb25cbiAgICB8IGZpbHRlcnMuQmx1ci5Kc29uXG4gICAgfCBmaWx0ZXJzLkNvbG9yTWF0cml4Lkpzb25cbiAgICB8IGZpbHRlcnMuQ29udm9sdXRpb24uSnNvblxuICAgIHwgZmlsdGVycy5Ecm9wU2hhZG93Lkpzb25cbiAgICB8IGZpbHRlcnMuR2xvdy5Kc29uXG4gICAgfCBmaWx0ZXJzLkdyYWRpZW50QmV2ZWwuSnNvblxuICAgIHwgZmlsdGVycy5HcmFkaWVudEdsb3cuSnNvbjtcblxuICBleHBvcnQgY29uc3QgdHlwZTogVGFnZ2VkVW5pb25UeXBlPEZpbHRlcj4gPSBuZXcgVGFnZ2VkVW5pb25UeXBlPEZpbHRlcj4oe1xuICAgIHZhcmlhbnRzOiBbXG4gICAgICBmaWx0ZXJzLkJldmVsLnR5cGUsXG4gICAgICBmaWx0ZXJzLkJsdXIudHlwZSxcbiAgICAgIGZpbHRlcnMuQ29sb3JNYXRyaXgudHlwZSxcbiAgICAgIGZpbHRlcnMuQ29udm9sdXRpb24udHlwZSxcbiAgICAgIGZpbHRlcnMuRHJvcFNoYWRvdy50eXBlLFxuICAgICAgZmlsdGVycy5HbG93LnR5cGUsXG4gICAgICBmaWx0ZXJzLkdyYWRpZW50QmV2ZWwudHlwZSxcbiAgICAgIGZpbHRlcnMuR3JhZGllbnRHbG93LnR5cGUsXG4gICAgXSxcbiAgICB0YWc6IFwiZmlsdGVyXCIsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var CompressionMethod;
(function (CompressionMethod) {
    CompressionMethod[CompressionMethod["None"] = 0] = "None";
    CompressionMethod[CompressionMethod["Deflate"] = 1] = "Deflate";
    CompressionMethod[CompressionMethod["Lzma"] = 2] = "Lzma";
})(CompressionMethod = exports.CompressionMethod || (exports.CompressionMethod = {}));
(function (CompressionMethod) {
    CompressionMethod.type = new kryo_1.SimpleEnumType({
        enum: CompressionMethod,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(CompressionMethod = exports.CompressionMethod || (exports.CompressionMethod = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21wcmVzc2lvbi1tZXRob2QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBK0M7QUFFL0MsSUFBWSxpQkFJWDtBQUpELFdBQVksaUJBQWlCO0lBQzNCLHlEQUFJLENBQUE7SUFDSiwrREFBTyxDQUFBO0lBQ1AseURBQUksQ0FBQTtBQUNOLENBQUMsRUFKVyxpQkFBaUIsR0FBakIseUJBQWlCLEtBQWpCLHlCQUFpQixRQUk1QjtBQUVELFdBQWlCLGlCQUFpQjtJQUduQixzQkFBSSxHQUFzQyxJQUFJLHFCQUFjLENBQW9CO1FBQzNGLElBQUksRUFBRSxpQkFBaUI7UUFDdkIsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBUGdCLGlCQUFpQixHQUFqQix5QkFBaUIsS0FBakIseUJBQWlCLFFBT2pDIiwiZmlsZSI6ImxpYi9jb21wcmVzc2lvbi1tZXRob2QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgU2ltcGxlRW51bVR5cGV9IGZyb20gXCJrcnlvXCI7XG5cbmV4cG9ydCBlbnVtIENvbXByZXNzaW9uTWV0aG9kIHtcbiAgTm9uZSxcbiAgRGVmbGF0ZSxcbiAgTHptYSxcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDb21wcmVzc2lvbk1ldGhvZCB7XG4gIGV4cG9ydCB0eXBlIEpzb24gPSBcIm5vbmVcIiB8IFwiZGVmbGF0ZVwiIHwgXCJsem1hXCI7XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IFNpbXBsZUVudW1UeXBlPENvbXByZXNzaW9uTWV0aG9kPiA9IG5ldyBTaW1wbGVFbnVtVHlwZTxDb21wcmVzc2lvbk1ldGhvZD4oe1xuICAgIGVudW06IENvbXByZXNzaW9uTWV0aG9kLFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLktlYmFiQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const ufixed8p8_1 = __webpack_require__(129);
const rect_1 = __webpack_require__(19);
const swf_signature_1 = __webpack_require__(130);
var Header;
(function (Header) {
    Header.type = new kryo_1.DocumentType({
        properties: Object.assign({}, swf_signature_1.SwfSignature.type.properties, { frameSize: { type: rect_1.Rect.type }, frameRate: { type: ufixed8p8_1.Ufixed8P8.type }, frameCount: { type: new kryo_1.Int32Type() } }),
        rename: swf_signature_1.SwfSignature.type.rename,
    });
})(Header = exports.Header || (exports.Header = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9oZWFkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBNkM7QUFFN0MsdURBQWtEO0FBQ2xELGlDQUE0QjtBQUM1QixtREFBNkM7QUFRN0MsSUFBaUIsTUFBTSxDQWdCdEI7QUFoQkQsV0FBaUIsTUFBTTtJQU9SLFdBQUksR0FBeUIsSUFBSSxtQkFBWSxDQUFTO1FBQ2pFLFVBQVUsb0JBQ0wsNEJBQVksQ0FBQyxJQUFJLENBQUMsVUFBVSxJQUMvQixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsV0FBSSxDQUFDLElBQUksRUFBQyxFQUM1QixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUscUJBQVMsQ0FBQyxJQUFJLEVBQUMsRUFDakMsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDLEdBQ3BDO1FBQ0QsTUFBTSxFQUFFLDRCQUFZLENBQUMsSUFBSSxDQUFDLE1BQU07S0FDakMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWhCZ0IsTUFBTSxHQUFOLGNBQU0sS0FBTixjQUFNLFFBZ0J0QiIsImZpbGUiOiJsaWIvaGVhZGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEb2N1bWVudFR5cGUsIEludDMyVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDE2fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7VWZpeGVkOFA4fSBmcm9tIFwiLi9maXhlZC1wb2ludC91Zml4ZWQ4cDhcIjtcbmltcG9ydCB7UmVjdH0gZnJvbSBcIi4vcmVjdFwiO1xuaW1wb3J0IHtTd2ZTaWduYXR1cmV9IGZyb20gXCIuL3N3Zi1zaWduYXR1cmVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBIZWFkZXIgZXh0ZW5kcyBTd2ZTaWduYXR1cmUge1xuICBmcmFtZVNpemU6IFJlY3Q7XG4gIGZyYW1lUmF0ZTogVWZpeGVkOFA4O1xuICBmcmFtZUNvdW50OiBVaW50MTY7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgSGVhZGVyIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIGV4dGVuZHMgU3dmU2lnbmF0dXJlLkpzb24ge1xuICAgIGZyYW1lX3NpemU6IFJlY3QuSnNvbjtcbiAgICBmcmFtZV9yYXRlOiBudW1iZXI7XG4gICAgZnJhbWVfY291bnQ6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8SGVhZGVyPiA9IG5ldyBEb2N1bWVudFR5cGU8SGVhZGVyPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgLi4uU3dmU2lnbmF0dXJlLnR5cGUucHJvcGVydGllcyxcbiAgICAgIGZyYW1lU2l6ZToge3R5cGU6IFJlY3QudHlwZX0sXG4gICAgICBmcmFtZVJhdGU6IHt0eXBlOiBVZml4ZWQ4UDgudHlwZX0sXG4gICAgICBmcmFtZUNvdW50OiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICB9LFxuICAgIHJlbmFtZTogU3dmU2lnbmF0dXJlLnR5cGUucmVuYW1lLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const fixed_point_1 = __webpack_require__(23);
const type_1 = __webpack_require__(24);
/**
 * Unsigned Fixed-Point number with an 8-bit integer part and an 8-bit fractional part
 */
class Ufixed8P8 extends fixed_point_1.FixedPoint {
    constructor(epsilons) {
        super(epsilons, Ufixed8P8.signed, Ufixed8P8.intBits, Ufixed8P8.fracBits);
    }
    static fromEpsilons(epsilons) {
        return new Ufixed8P8(epsilons);
    }
    static fromValue(value) {
        return new Ufixed8P8(value * Math.pow(2, Ufixed8P8.fracBits));
    }
}
Ufixed8P8.signed = false;
Ufixed8P8.intBits = 8;
Ufixed8P8.fracBits = 8;
Ufixed8P8.type = new type_1.FixedPointType({ type: Ufixed8P8 });
exports.Ufixed8P8 = Ufixed8P8;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maXhlZC1wb2ludC91Zml4ZWQ4cDgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSwrQ0FBeUM7QUFDekMsaUNBQXNDO0FBRXRDOztHQUVHO0FBQ0gsZUFBdUIsU0FBUSx3QkFBVTtJQU12QyxZQUFzQixRQUFnQjtRQUNwQyxLQUFLLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUVELE1BQU0sQ0FBQyxZQUFZLENBQUMsUUFBZ0I7UUFDbEMsTUFBTSxDQUFDLElBQUksU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRCxNQUFNLENBQUMsU0FBUyxDQUFDLEtBQWE7UUFDNUIsTUFBTSxDQUFDLElBQUksU0FBUyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNoRSxDQUFDOztBQWZNLGdCQUFNLEdBQVksS0FBSyxDQUFDO0FBQ3hCLGlCQUFPLEdBQVcsQ0FBQyxDQUFDO0FBQ3BCLGtCQUFRLEdBQVcsQ0FBQyxDQUFDO0FBQ3JCLGNBQUksR0FBOEIsSUFBSSxxQkFBYyxDQUFZLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBQyxDQUFDLENBQUM7QUFKNUYsOEJBaUJDIiwiZmlsZSI6ImxpYi9maXhlZC1wb2ludC91Zml4ZWQ4cDguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1VpbnQxNn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0ZpeGVkUG9pbnR9IGZyb20gXCIuL2ZpeGVkLXBvaW50XCI7XG5pbXBvcnQge0ZpeGVkUG9pbnRUeXBlfSBmcm9tIFwiLi90eXBlXCI7XG5cbi8qKlxuICogVW5zaWduZWQgRml4ZWQtUG9pbnQgbnVtYmVyIHdpdGggYW4gOC1iaXQgaW50ZWdlciBwYXJ0IGFuZCBhbiA4LWJpdCBmcmFjdGlvbmFsIHBhcnRcbiAqL1xuZXhwb3J0IGNsYXNzIFVmaXhlZDhQOCBleHRlbmRzIEZpeGVkUG9pbnQge1xuICBzdGF0aWMgc2lnbmVkOiBib29sZWFuID0gZmFsc2U7XG4gIHN0YXRpYyBpbnRCaXRzOiBudW1iZXIgPSA4O1xuICBzdGF0aWMgZnJhY0JpdHM6IG51bWJlciA9IDg7XG4gIHN0YXRpYyB0eXBlOiBGaXhlZFBvaW50VHlwZTxVZml4ZWQ4UDg+ID0gbmV3IEZpeGVkUG9pbnRUeXBlPFVmaXhlZDhQOD4oe3R5cGU6IFVmaXhlZDhQOH0pO1xuXG4gIHByb3RlY3RlZCBjb25zdHJ1Y3RvcihlcHNpbG9uczogbnVtYmVyKSB7XG4gICAgc3VwZXIoZXBzaWxvbnMsIFVmaXhlZDhQOC5zaWduZWQsIFVmaXhlZDhQOC5pbnRCaXRzLCBVZml4ZWQ4UDguZnJhY0JpdHMpO1xuICB9XG5cbiAgc3RhdGljIGZyb21FcHNpbG9ucyhlcHNpbG9uczogVWludDE2KTogVWZpeGVkOFA4IHtcbiAgICByZXR1cm4gbmV3IFVmaXhlZDhQOChlcHNpbG9ucyk7XG4gIH1cblxuICBzdGF0aWMgZnJvbVZhbHVlKHZhbHVlOiBudW1iZXIpOiBVZml4ZWQ4UDgge1xuICAgIHJldHVybiBuZXcgVWZpeGVkOFA4KHZhbHVlICogTWF0aC5wb3coMiwgVWZpeGVkOFA4LmZyYWNCaXRzKSk7XG4gIH1cbn1cbiJdfQ==


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const compression_method_1 = __webpack_require__(127);
var SwfSignature;
(function (SwfSignature) {
    SwfSignature.type = new kryo_1.DocumentType({
        properties: {
            compressionMethod: { type: compression_method_1.CompressionMethod.type },
            swfVersion: { type: new kryo_1.Int32Type() },
            uncompressedFileLength: { type: new kryo_1.Float64Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(SwfSignature = exports.SwfSignature || (exports.SwfSignature = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zd2Ytc2lnbmF0dXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXFFO0FBRXJFLDZEQUF1RDtBQVF2RCxJQUFpQixZQUFZLENBZTVCO0FBZkQsV0FBaUIsWUFBWTtJQU9kLGlCQUFJLEdBQStCLElBQUksbUJBQVksQ0FBZTtRQUM3RSxVQUFVLEVBQUU7WUFDVixpQkFBaUIsRUFBRSxFQUFDLElBQUksRUFBRSxzQ0FBaUIsQ0FBQyxJQUFJLEVBQUM7WUFDakQsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQ25DLHNCQUFzQixFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1NBQ2xEO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBZmdCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBZTVCIiwiZmlsZSI6ImxpYi9zd2Ytc2lnbmF0dXJlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgRmxvYXQ2NFR5cGUsIEludDMyVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDMyLCBVaW50OH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0NvbXByZXNzaW9uTWV0aG9kfSBmcm9tIFwiLi9jb21wcmVzc2lvbi1tZXRob2RcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTd2ZTaWduYXR1cmUge1xuICBjb21wcmVzc2lvbk1ldGhvZDogQ29tcHJlc3Npb25NZXRob2Q7XG4gIHN3ZlZlcnNpb246IFVpbnQ4O1xuICB1bmNvbXByZXNzZWRGaWxlTGVuZ3RoOiBVaW50MzI7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgU3dmU2lnbmF0dXJlIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBjb21wcmVzc2lvbl9tZXRob2Q6IENvbXByZXNzaW9uTWV0aG9kLkpzb247XG4gICAgc3dmX3ZlcnNpb246IG51bWJlcjtcbiAgICB1bmNvbXByZXNzZWRfZmlsZV9sZW5ndGg6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8U3dmU2lnbmF0dXJlPiA9IG5ldyBEb2N1bWVudFR5cGU8U3dmU2lnbmF0dXJlPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgY29tcHJlc3Npb25NZXRob2Q6IHt0eXBlOiBDb21wcmVzc2lvbk1ldGhvZC50eXBlfSxcbiAgICAgIHN3ZlZlcnNpb246IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgdW5jb21wcmVzc2VkRmlsZUxlbmd0aDoge3R5cGU6IG5ldyBGbG9hdDY0VHlwZSgpfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _circular_references_1 = __webpack_require__(14);
const tags = __webpack_require__(111);
var Tag;
(function (Tag) {
    Tag.type = Object.assign(_circular_references_1.Tag.type, new kryo_1.TaggedUnionType({
        variants: [
            tags.CsmTextSettings.type,
            tags.DefineBinaryData.type,
            tags.DefineBitmap.type,
            tags.DefineCffFont.type,
            tags.DefineDynamicText.type,
            tags.DefineFont.type,
            tags.DefineFontAlignZones.type,
            tags.DefineFontInfo.type,
            tags.DefineFontName.type,
            tags.DefineJpeg.type,
            tags.DefinePartialFont.type,
            tags.DefinePartialJpeg.type,
            tags.DefineSceneAndFrameLabelData.type,
            tags.DefineShape.type,
            tags.DefineSprite.type,
            tags.DefineText.type,
            tags.DoAction.type,
            tags.DoInitAction.type,
            tags.EnableDebugger.type,
            tags.ExportAssets.type,
            tags.FileAttributes.type,
            tags.ImportAssets.type,
            tags.JpegTables.type,
            tags.Metadata.type,
            tags.PlaceObject.type,
            tags.RemoveObject.type,
            tags.SetBackgroundColor.type,
            tags.ShowFrame.type,
            tags.Telemetry.type,
            tags.Unknown.type,
        ],
        tag: "type",
    }));
})(Tag = exports.Tag || (exports.Tag = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBcUM7QUFDckMsaUVBQW1EO0FBQ25ELHFDQUFxQztBQWtDckMsSUFBaUIsR0FBRyxDQW9FbkI7QUFwRUQsV0FBaUIsR0FBRztJQWlDTCxRQUFJLEdBQXlCLE1BQU0sQ0FBQyxNQUFNLENBQUMsMEJBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxzQkFBZSxDQUFNO1FBQzFGLFFBQVEsRUFBRTtZQUNSLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSTtZQUN6QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSTtZQUMxQixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUk7WUFDdEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJO1lBQ3ZCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJO1lBQzNCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSTtZQUNwQixJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSTtZQUM5QixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUk7WUFDeEIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJO1lBQ3hCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSTtZQUNwQixJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSTtZQUMzQixJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSTtZQUMzQixJQUFJLENBQUMsNEJBQTRCLENBQUMsSUFBSTtZQUN0QyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUk7WUFDckIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJO1lBQ3RCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSTtZQUNwQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUk7WUFDbEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJO1lBQ3RCLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSTtZQUN4QixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUk7WUFDdEIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJO1lBQ3hCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSTtZQUN0QixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUk7WUFDcEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJO1lBQ2xCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSTtZQUNyQixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUk7WUFDdEIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUk7WUFDNUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJO1lBQ25CLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSTtZQUNuQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUk7U0FDbEI7UUFDRCxHQUFHLEVBQUUsTUFBTTtLQUNaLENBQUMsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxFQXBFZ0IsR0FBRyxHQUFILFdBQUcsS0FBSCxXQUFHLFFBb0VuQiIsImZpbGUiOiJsaWIvdGFnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUYWdnZWRVbmlvblR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1RhZyBhcyAkVGFnfSBmcm9tIFwiLi9fY2lyY3VsYXItcmVmZXJlbmNlc1wiO1xuaW1wb3J0ICogYXMgdGFncyBmcm9tIFwiLi90YWdzL2luZGV4XCI7XG5cbmV4cG9ydCB0eXBlIFRhZyA9XG4gIHRhZ3MuQ3NtVGV4dFNldHRpbmdzXG4gIHwgdGFncy5EZWZpbmVCaW5hcnlEYXRhXG4gIHwgdGFncy5EZWZpbmVCaXRtYXBcbiAgfCB0YWdzLkRlZmluZUNmZkZvbnRcbiAgfCB0YWdzLkRlZmluZUR5bmFtaWNUZXh0XG4gIHwgdGFncy5EZWZpbmVGb250XG4gIHwgdGFncy5EZWZpbmVGb250QWxpZ25ab25lc1xuICB8IHRhZ3MuRGVmaW5lRm9udEluZm9cbiAgfCB0YWdzLkRlZmluZUZvbnROYW1lXG4gIHwgdGFncy5EZWZpbmVKcGVnXG4gIHwgdGFncy5EZWZpbmVQYXJ0aWFsRm9udFxuICB8IHRhZ3MuRGVmaW5lUGFydGlhbEpwZWdcbiAgfCB0YWdzLkRlZmluZVNjZW5lQW5kRnJhbWVMYWJlbERhdGFcbiAgfCB0YWdzLkRlZmluZVNoYXBlXG4gIHwgdGFncy5EZWZpbmVTcHJpdGVcbiAgfCB0YWdzLkRlZmluZVRleHRcbiAgfCB0YWdzLkRvQWN0aW9uXG4gIHwgdGFncy5Eb0luaXRBY3Rpb25cbiAgfCB0YWdzLkVuYWJsZURlYnVnZ2VyXG4gIHwgdGFncy5FeHBvcnRBc3NldHNcbiAgfCB0YWdzLkZpbGVBdHRyaWJ1dGVzXG4gIHwgdGFncy5JbXBvcnRBc3NldHNcbiAgfCB0YWdzLkpwZWdUYWJsZXNcbiAgfCB0YWdzLk1ldGFkYXRhXG4gIHwgdGFncy5QbGFjZU9iamVjdFxuICB8IHRhZ3MuUmVtb3ZlT2JqZWN0XG4gIHwgdGFncy5TZXRCYWNrZ3JvdW5kQ29sb3JcbiAgfCB0YWdzLlNob3dGcmFtZVxuICB8IHRhZ3MuVGVsZW1ldHJ5XG4gIHwgdGFncy5Vbmtub3duO1xuXG5leHBvcnQgbmFtZXNwYWNlIFRhZyB7XG4gIGV4cG9ydCB0eXBlIEpzb24gPVxuICAgIHRhZ3MuQ3NtVGV4dFNldHRpbmdzLkpzb25cbiAgICB8IHRhZ3MuRGVmaW5lQmluYXJ5RGF0YS5Kc29uXG4gICAgfCB0YWdzLkRlZmluZUJpdG1hcC5Kc29uXG4gICAgfCB0YWdzLkRlZmluZUNmZkZvbnQuSnNvblxuICAgIHwgdGFncy5EZWZpbmVEeW5hbWljVGV4dC5Kc29uXG4gICAgfCB0YWdzLkRlZmluZUZvbnQuSnNvblxuICAgIHwgdGFncy5EZWZpbmVGb250QWxpZ25ab25lcy5Kc29uXG4gICAgfCB0YWdzLkRlZmluZUZvbnRJbmZvLkpzb25cbiAgICB8IHRhZ3MuRGVmaW5lRm9udE5hbWUuSnNvblxuICAgIHwgdGFncy5EZWZpbmVKcGVnLkpzb25cbiAgICB8IHRhZ3MuRGVmaW5lUGFydGlhbEZvbnQuSnNvblxuICAgIHwgdGFncy5EZWZpbmVQYXJ0aWFsSnBlZy5Kc29uXG4gICAgfCB0YWdzLkRlZmluZVNjZW5lQW5kRnJhbWVMYWJlbERhdGEuSnNvblxuICAgIHwgdGFncy5EZWZpbmVTaGFwZS5Kc29uXG4gICAgfCB0YWdzLkRlZmluZVNwcml0ZS5Kc29uXG4gICAgfCB0YWdzLkRlZmluZVRleHQuSnNvblxuICAgIHwgdGFncy5Eb0FjdGlvbi5Kc29uXG4gICAgfCB0YWdzLkRvSW5pdEFjdGlvbi5Kc29uXG4gICAgfCB0YWdzLkVuYWJsZURlYnVnZ2VyLkpzb25cbiAgICB8IHRhZ3MuRXhwb3J0QXNzZXRzLkpzb25cbiAgICB8IHRhZ3MuRmlsZUF0dHJpYnV0ZXMuSnNvblxuICAgIHwgdGFncy5JbXBvcnRBc3NldHMuSnNvblxuICAgIHwgdGFncy5KcGVnVGFibGVzLkpzb25cbiAgICB8IHRhZ3MuTWV0YWRhdGEuSnNvblxuICAgIHwgdGFncy5QbGFjZU9iamVjdC5Kc29uXG4gICAgfCB0YWdzLlJlbW92ZU9iamVjdC5Kc29uXG4gICAgfCB0YWdzLlNldEJhY2tncm91bmRDb2xvci5Kc29uXG4gICAgfCB0YWdzLlNob3dGcmFtZS5Kc29uXG4gICAgfCB0YWdzLlRlbGVtZXRyeS5Kc29uXG4gICAgfCB0YWdzLlVua25vd24uSnNvbjtcblxuICBleHBvcnQgY29uc3QgdHlwZTogVGFnZ2VkVW5pb25UeXBlPFRhZz4gPSBPYmplY3QuYXNzaWduKCRUYWcudHlwZSwgbmV3IFRhZ2dlZFVuaW9uVHlwZTxUYWc+KHtcbiAgICB2YXJpYW50czogW1xuICAgICAgdGFncy5Dc21UZXh0U2V0dGluZ3MudHlwZSxcbiAgICAgIHRhZ3MuRGVmaW5lQmluYXJ5RGF0YS50eXBlLFxuICAgICAgdGFncy5EZWZpbmVCaXRtYXAudHlwZSxcbiAgICAgIHRhZ3MuRGVmaW5lQ2ZmRm9udC50eXBlLFxuICAgICAgdGFncy5EZWZpbmVEeW5hbWljVGV4dC50eXBlLFxuICAgICAgdGFncy5EZWZpbmVGb250LnR5cGUsXG4gICAgICB0YWdzLkRlZmluZUZvbnRBbGlnblpvbmVzLnR5cGUsXG4gICAgICB0YWdzLkRlZmluZUZvbnRJbmZvLnR5cGUsXG4gICAgICB0YWdzLkRlZmluZUZvbnROYW1lLnR5cGUsXG4gICAgICB0YWdzLkRlZmluZUpwZWcudHlwZSxcbiAgICAgIHRhZ3MuRGVmaW5lUGFydGlhbEZvbnQudHlwZSxcbiAgICAgIHRhZ3MuRGVmaW5lUGFydGlhbEpwZWcudHlwZSxcbiAgICAgIHRhZ3MuRGVmaW5lU2NlbmVBbmRGcmFtZUxhYmVsRGF0YS50eXBlLFxuICAgICAgdGFncy5EZWZpbmVTaGFwZS50eXBlLFxuICAgICAgdGFncy5EZWZpbmVTcHJpdGUudHlwZSxcbiAgICAgIHRhZ3MuRGVmaW5lVGV4dC50eXBlLFxuICAgICAgdGFncy5Eb0FjdGlvbi50eXBlLFxuICAgICAgdGFncy5Eb0luaXRBY3Rpb24udHlwZSxcbiAgICAgIHRhZ3MuRW5hYmxlRGVidWdnZXIudHlwZSxcbiAgICAgIHRhZ3MuRXhwb3J0QXNzZXRzLnR5cGUsXG4gICAgICB0YWdzLkZpbGVBdHRyaWJ1dGVzLnR5cGUsXG4gICAgICB0YWdzLkltcG9ydEFzc2V0cy50eXBlLFxuICAgICAgdGFncy5KcGVnVGFibGVzLnR5cGUsXG4gICAgICB0YWdzLk1ldGFkYXRhLnR5cGUsXG4gICAgICB0YWdzLlBsYWNlT2JqZWN0LnR5cGUsXG4gICAgICB0YWdzLlJlbW92ZU9iamVjdC50eXBlLFxuICAgICAgdGFncy5TZXRCYWNrZ3JvdW5kQ29sb3IudHlwZSxcbiAgICAgIHRhZ3MuU2hvd0ZyYW1lLnR5cGUsXG4gICAgICB0YWdzLlRlbGVtZXRyeS50eXBlLFxuICAgICAgdGFncy5Vbmtub3duLnR5cGUsXG4gICAgXSxcbiAgICB0YWc6IFwidHlwZVwiLFxuICB9KSk7XG59XG4iXX0=


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var processNextTick = __webpack_require__(44);
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = __webpack_require__(342);
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = __webpack_require__(133).EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(134);
/*</replacement>*/

// TODO(bmeurer): Change this back to const once hole checks are
// properly optimized away early in Ignition+TurboFan.
/*<replacement>*/
var Buffer = __webpack_require__(66).Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/

/*<replacement>*/
var util = __webpack_require__(25);
util.inherits = __webpack_require__(26);
/*</replacement>*/

/*<replacement>*/
var debugUtil = __webpack_require__(343);
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = __webpack_require__(344);
var destroyImpl = __webpack_require__(135);
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') {
    return emitter.prependListener(event, fn);
  } else {
    // This is a hack to make sure that our error handler is attached before any
    // userland ones.  NEVER DO THIS. This is here only because this code needs
    // to continue to work with older versions of Node.js that do not include
    // the prependListener() method. The goal is to eventually remove this hack.
    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
  }
}

function ReadableState(options, stream) {
  Duplex = Duplex || __webpack_require__(20);

  options = options || {};

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = __webpack_require__(137).StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __webpack_require__(20);

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = __webpack_require__(137).StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], self.emit.bind(self, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9), __webpack_require__(12)))

/***/ }),
/* 133 */
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(133).EventEmitter;


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*<replacement>*/

var processNextTick = __webpack_require__(44);
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      processNextTick(emitErrorNT, this, err);
    }
    return;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      processNextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.



/*<replacement>*/

var processNextTick = __webpack_require__(44);
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = __webpack_require__(25);
util.inherits = __webpack_require__(26);
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: __webpack_require__(348)
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(134);
/*</replacement>*/

/*<replacement>*/
var Buffer = __webpack_require__(66).Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/

var destroyImpl = __webpack_require__(135);

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || __webpack_require__(20);

  options = options || {};

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __webpack_require__(20);

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = _isUint8Array(chunk) && !state.objectMode;

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    processNextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    processNextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequestCount = 0;
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      processNextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12), __webpack_require__(345).setImmediate, __webpack_require__(9)))

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Buffer = __webpack_require__(4).Buffer;

var isBufferEncoding = Buffer.isEncoding
  || function(encoding) {
       switch (encoding && encoding.toLowerCase()) {
         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
         default: return false;
       }
     }


function assertEncoding(encoding) {
  if (encoding && !isBufferEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
//
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      // CESU-8 represents each of Surrogate Pair by 3-bytes
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      // UTF-16 represents each of Surrogate Pair by 2-bytes
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  // Enough space to store all bytes of a single character. UTF-8 needs 4
  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
  this.charBuffer = new Buffer(6);
  // Number of bytes received for the current incomplete multi-byte character.
  this.charReceived = 0;
  // Number of bytes expected for the current incomplete multi-byte character.
  this.charLength = 0;
};


// write decodes the given buffer and returns it as JS string that is
// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.
//
// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  // if our last write ended with an incomplete multibyte character
  while (this.charLength) {
    // determine how many remaining bytes this buffer has to offer for this char
    var available = (buffer.length >= this.charLength - this.charReceived) ?
        this.charLength - this.charReceived :
        buffer.length;

    // add the new bytes to the char buffer
    buffer.copy(this.charBuffer, this.charReceived, 0, available);
    this.charReceived += available;

    if (this.charReceived < this.charLength) {
      // still not enough chars in this buffer? wait for more ...
      return '';
    }

    // remove bytes belonging to the current character from the buffer
    buffer = buffer.slice(available, buffer.length);

    // get the character that was split
    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    // if there are no more bytes in this buffer, just emit our char
    if (buffer.length === 0) {
      return charStr;
    }
    break;
  }

  // determine and set charLength / charReceived
  this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    // buffer the incomplete character bytes we got
    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
    end -= this.charReceived;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    buffer.copy(this.charBuffer, 0, 0, size);
    return charStr.substring(0, end);
  }

  // or just emit the charStr
  return charStr;
};

// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// the end of the given buffer. If so, it sets this.charLength to the byte
// length that character, and sets this.charReceived to the number of bytes
// that are available for this character.
StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  // determine how many bytes we have to check at the end of this buffer
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  // Figure out if one of the last i bytes of our buffer announces an
  // incomplete char.
  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];

    // See http://en.wikipedia.org/wiki/UTF-8#Description

    // 110XXXXX
    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    // 1110XXXX
    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    // 11110XXX
    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }
  this.charReceived = i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 2;
  this.charLength = this.charReceived ? 2 : 0;
}

function base64DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 3;
  this.charLength = this.charReceived ? 3 : 0;
}


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.



module.exports = Transform;

var Duplex = __webpack_require__(20);

/*<replacement>*/
var util = __webpack_require__(25);
util.inherits = __webpack_require__(26);
/*</replacement>*/

util.inherits(Transform, Duplex);

function TransformState(stream) {
  this.afterTransform = function (er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
  this.writeencoding = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return stream.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined) stream.push(data);

  cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(this);

  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.once('prefinish', function () {
    if (typeof this._flush === 'function') this._flush(function (er, data) {
      done(stream, er, data);
    });else done(stream);
  });
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data !== null && data !== undefined) stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length) throw new Error('Calling transform done when ws.length != 0');

  if (ts.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  2:      'need dictionary',     /* Z_NEED_DICT       2  */
  1:      'stream end',          /* Z_STREAM_END      1  */
  0:      '',                    /* Z_OK              0  */
  '-1':   'file error',          /* Z_ERRNO         (-1) */
  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */
  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */
  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */
  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */
  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */
};


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Note: adler32 takes 12% for level 0 and 2% for level 6.
// It doesn't worth to make additional optimizationa as in original.
// Small size is preferable.

function adler32(adler, buf, len, pos) {
  var s1 = (adler & 0xffff) |0,
      s2 = ((adler >>> 16) & 0xffff) |0,
      n = 0;

  while (len !== 0) {
    // Set limit ~ twice less than 5552, to keep
    // s2 in 31-bits, because we force signed ints.
    // in other case %= will fail.
    n = len > 2000 ? 2000 : len;
    len -= n;

    do {
      s1 = (s1 + buf[pos++]) |0;
      s2 = (s2 + s1) |0;
    } while (--n);

    s1 %= 65521;
    s2 %= 65521;
  }

  return (s1 | (s2 << 16)) |0;
}


module.exports = adler32;


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Note: we can't get significant speed boost here.
// So write code to minimize size - no pregenerated tables
// and array tools dependencies.


// Use ordinary array, since untyped makes no boost here
function makeTable() {
  var c, table = [];

  for (var n = 0; n < 256; n++) {
    c = n;
    for (var k = 0; k < 8; k++) {
      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
    }
    table[n] = c;
  }

  return table;
}

// Create table on load. Just 255 signed longs. Not a problem.
var crcTable = makeTable();


function crc32(crc, buf, len, pos) {
  var t = crcTable,
      end = pos + len;

  crc ^= -1;

  for (var i = pos; i < end; i++) {
    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];
  }

  return (crc ^ (-1)); // >>> 0;
}


module.exports = crc32;


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const swf_tree_1 = __webpack_require__(6);
const incomplete_stream_1 = __webpack_require__(67);
class Stream {
    constructor(buffer, byteOffset = 0, bitOffset = 0) {
        if (buffer instanceof Buffer) {
            buffer = buffer.buffer.slice(buffer.byteOffset, buffer.byteOffset + buffer.byteLength);
        }
        this.bytes = new Uint8Array(buffer, byteOffset, buffer.byteLength);
        this.view = new DataView(buffer, byteOffset, buffer.byteLength);
        this.bytePos = 0;
        this.bitPos = bitOffset;
        this.byteEnd = buffer.byteLength;
    }
    asBitStream() {
        return this;
    }
    asByteStream() {
        this.align();
        return this;
    }
    align() {
        if (this.bitPos !== 0) {
            this.bitPos = 0;
            this.bytePos++;
        }
    }
    tail() {
        return new Stream(this.bytes.buffer.slice(this.bytePos), 0, this.bitPos);
    }
    available() {
        return this.byteEnd - this.bytePos;
    }
    toBuffer() {
        return Buffer.from(this.bytes.buffer.slice(this.bytePos, this.byteEnd));
    }
    take(length) {
        const result = new Stream(this.bytes.buffer.slice(this.bytePos, this.bytePos + length), 0, 0);
        this.bytePos += length;
        return result;
    }
    substream(byteStart, byteEnd) {
        const result = new Stream(this.bytes.buffer, byteStart, 0);
        result.byteEnd = byteEnd;
        return result;
    }
    readSint8() {
        return this.view.getInt8(this.bytePos++);
    }
    readSint16LE() {
        const result = this.view.getInt16(this.bytePos, true);
        this.bytePos += 2;
        return result;
    }
    readSint32LE() {
        const result = this.view.getInt32(this.bytePos, true);
        this.bytePos += 4;
        return result;
    }
    readUint8() {
        return this.view.getUint8(this.bytePos++);
    }
    peekUint8() {
        return this.view.getUint8(this.bytePos);
    }
    /**
     * Convenience method, most of the time you need `readUint16LE` for SWF.
     */
    readUint16BE() {
        const result = this.view.getUint16(this.bytePos, false);
        this.bytePos += 2;
        return result;
    }
    readUint16LE() {
        const result = this.view.getUint16(this.bytePos, true);
        this.bytePos += 2;
        return result;
    }
    readUint32BE() {
        const result = this.view.getUint32(this.bytePos, false);
        this.bytePos += 4;
        return result;
    }
    readUint32LE() {
        const result = this.view.getUint32(this.bytePos, true);
        this.bytePos += 4;
        return result;
    }
    readFloat16BE() {
        const u16 = this.view.getUint16(this.bytePos, false);
        this.bytePos += 2;
        const sign = (u16 & (1 << 15)) !== 0 ? -1 : 1;
        const exponent = (u16 & 0x7c00) >>> 10; // 0x7c00: bits 10 to 14 (inclusive)
        const fraction = u16 & 0x03ff; // 0x03ff: bits 0 to 9 (inclusive)
        if (exponent === 0) {
            return sign * Math.pow(2, -14) * (fraction / 1024);
        }
        else if (exponent === 0x1f) {
            return fraction === 0 ? sign * Infinity : NaN;
        }
        else {
            return sign * Math.pow(2, exponent - 15) * (1 + (fraction / 1024));
        }
    }
    readFloat32BE() {
        const result = this.view.getFloat32(this.bytePos, false);
        this.bytePos += 4;
        return result;
    }
    readFloat32LE() {
        const result = this.view.getFloat32(this.bytePos, true);
        this.bytePos += 4;
        return result;
    }
    readFloat64BE() {
        const result = this.view.getFloat64(this.bytePos, false);
        this.bytePos += 8;
        return result;
    }
    readFloat64LE() {
        const result = this.view.getFloat64(this.bytePos, true);
        this.bytePos += 8;
        return result;
    }
    readFixed8P8LE() {
        return swf_tree_1.Fixed8P8.fromEpsilons(this.readSint16LE());
    }
    readUfixed8P8LE() {
        return swf_tree_1.Ufixed8P8.fromEpsilons(this.readUint16LE());
    }
    readFixed16P16LE() {
        return swf_tree_1.Fixed16P16.fromEpsilons(this.readSint32LE());
    }
    readUfixed16P16LE() {
        return swf_tree_1.Ufixed16P16.fromEpsilons(this.readUint32LE());
    }
    skip(size) {
        this.bytePos += size;
    }
    skipBits(n) {
        // TODO(demurgos): Reverse the dependency between skipBits and readUintBits
        this.readUintBits(n);
    }
    readBoolBits() {
        return this.readUintBits(1) > 0;
    }
    readSint16Bits(n) {
        return this.readIntBits(n);
    }
    /**
     * SB[n]
     */
    readSint32Bits(n) {
        return this.readIntBits(n);
    }
    readUint16Bits(n) {
        return this.readUintBits(n);
    }
    /**
     * UB[n]
     */
    readUint32Bits(n) {
        return this.readUintBits(n);
    }
    readFixed16P16Bits(n) {
        return swf_tree_1.Fixed16P16.fromEpsilons(this.readIntBits(n));
    }
    readEncodedUint32LE() {
        let result = 0;
        for (let i = 0; i < 5; i++) {
            const nextByte = this.bytes[this.bytePos++];
            if (i < 4) {
                // Bit-shift is safe
                result += (nextByte & 0x7f) << (7 * i);
            }
            else {
                // Bit-shift is unsafe, use `* Math.pow`
                result += (nextByte & 0x0f) * Math.pow(2, 28);
            }
            if ((nextByte & (1 << 7)) === 0) {
                return result;
            }
        }
        return result;
    }
    readCString() {
        const endOfString = this.bytes.indexOf(0, this.bytePos);
        if (endOfString < this.bytePos) {
            throw incomplete_stream_1.IncompleteStreamError.create();
        }
        const strBuffer = Buffer.from(this.bytes.buffer, this.bytePos, endOfString - this.bytePos);
        const result = strBuffer.toString("utf8");
        this.bytePos = endOfString + 1;
        return result;
    }
    readUintBits(n) {
        if (n > 32) {
            // Even if we could read up to 53 bits, we restrict it to 32 bits (which is already unsafe
            // if we consider that the max positive number safe regarding bit operations is 2^31 - 1)
            throw new incident_1.Incident("BitOverflow", "Cannot read above 32 bits without overflow");
        }
        let result = 0;
        while (n > 0) {
            if (this.bitPos + n < 8) {
                const endBitPos = this.bitPos + n;
                const shift = 1 << (endBitPos - this.bitPos);
                const cur = (this.bytes[this.bytePos] >>> 8 - endBitPos) & (shift - 1);
                result = result * shift + cur;
                n = 0;
                this.bitPos = endBitPos;
            }
            else {
                const shift = 1 << (8 - this.bitPos);
                const cur = this.bytes[this.bytePos] & (shift - 1);
                result = result * shift + cur;
                n -= (8 - this.bitPos);
                this.bitPos = 0;
                this.bytePos++;
            }
        }
        return result;
    }
    readIntBits(n) {
        if (n === 0) {
            return 0;
        }
        const unsigned = this.readUintBits(n);
        if (unsigned < Math.pow(2, n - 1)) {
            return unsigned;
        }
        else {
            return -Math.pow(2, n) + unsigned;
        }
    }
}
exports.Stream = Stream;
exports.default = Stream;

//# sourceMappingURL=data:application/json;charset=utf8;base64,

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const swf_tree_1 = __webpack_require__(6);
const incomplete_stream_1 = __webpack_require__(67);
function parseActionHeader(byteStream) {
    const actionCode = byteStream.readUint8();
    const length = actionCode < 0x80 ? 0 : byteStream.readUint16LE();
    return { actionCode, length };
}
exports.parseActionHeader = parseActionHeader;
function parseActionsString(byteStream) {
    const result = [];
    while (true) {
        if (byteStream.available() === 0) {
            throw incomplete_stream_1.IncompleteStreamError.create();
        }
        if (byteStream.peekUint8() === 0) {
            break;
        }
        result.push(parseAction(byteStream));
    }
    return result;
}
exports.parseActionsString = parseActionsString;
function parseActionsBlock(byteStream) {
    const block = [];
    while (byteStream.available() > 0) {
        // TODO: type AVM1 parsers to no longer require Stream but either ByteStream or BitStream
        block.push(parseAction(byteStream));
    }
    return block;
}
exports.parseActionsBlock = parseActionsBlock;
/* tslint:disable-next-line:cyclomatic-complexity */
function parseAction(byteStream) {
    const startPos = byteStream.bytePos;
    const header = parseActionHeader(byteStream);
    if (byteStream.available() < header.length) {
        const headerLength = byteStream.bytePos - startPos;
        throw incomplete_stream_1.IncompleteStreamError.create(headerLength + header.length);
    }
    const actionDataStartPos = byteStream.bytePos;
    let result;
    switch (header.actionCode) {
        case 0x04:
            result = { action: swf_tree_1.avm1.ActionType.NextFrame };
            break;
        case 0x05:
            result = { action: swf_tree_1.avm1.ActionType.PreviousFrame };
            break;
        case 0x06:
            result = { action: swf_tree_1.avm1.ActionType.Play };
            break;
        case 0x07:
            result = { action: swf_tree_1.avm1.ActionType.Stop };
            break;
        case 0x08:
            result = { action: swf_tree_1.avm1.ActionType.ToggleQuality };
            break;
        case 0x09:
            result = { action: swf_tree_1.avm1.ActionType.StopSounds };
            break;
        case 0x0a:
            result = { action: swf_tree_1.avm1.ActionType.Add };
            break;
        case 0x0b:
            result = { action: swf_tree_1.avm1.ActionType.Subtract };
            break;
        case 0x0c:
            result = { action: swf_tree_1.avm1.ActionType.Multiply };
            break;
        case 0x0d:
            result = { action: swf_tree_1.avm1.ActionType.Divide };
            break;
        case 0x0e:
            result = { action: swf_tree_1.avm1.ActionType.Equals };
            break;
        case 0x0f:
            result = { action: swf_tree_1.avm1.ActionType.Less };
            break;
        case 0x10:
            result = { action: swf_tree_1.avm1.ActionType.And };
            break;
        case 0x11:
            result = { action: swf_tree_1.avm1.ActionType.Or };
            break;
        case 0x12:
            result = { action: swf_tree_1.avm1.ActionType.Not };
            break;
        case 0x13:
            result = { action: swf_tree_1.avm1.ActionType.StringEquals };
            break;
        case 0x14:
            result = { action: swf_tree_1.avm1.ActionType.StringLength };
            break;
        case 0x15:
            result = { action: swf_tree_1.avm1.ActionType.StringExtract };
            break;
        case 0x17:
            result = { action: swf_tree_1.avm1.ActionType.Pop };
            break;
        case 0x18:
            result = { action: swf_tree_1.avm1.ActionType.ToInteger };
            break;
        case 0x1c:
            result = { action: swf_tree_1.avm1.ActionType.GetVariable };
            break;
        case 0x1d:
            result = { action: swf_tree_1.avm1.ActionType.SetVariable };
            break;
        case 0x20:
            result = { action: swf_tree_1.avm1.ActionType.SetTarget2 };
            break;
        case 0x21:
            result = { action: swf_tree_1.avm1.ActionType.StringAdd };
            break;
        case 0x22:
            result = { action: swf_tree_1.avm1.ActionType.GetProperty };
            break;
        case 0x23:
            result = { action: swf_tree_1.avm1.ActionType.SetProperty };
            break;
        case 0x24:
            result = { action: swf_tree_1.avm1.ActionType.CloneSprite };
            break;
        case 0x25:
            result = { action: swf_tree_1.avm1.ActionType.RemoveSprite };
            break;
        case 0x26:
            result = { action: swf_tree_1.avm1.ActionType.Trace };
            break;
        case 0x27:
            result = { action: swf_tree_1.avm1.ActionType.StartDrag };
            break;
        case 0x28:
            result = { action: swf_tree_1.avm1.ActionType.EndDrag };
            break;
        case 0x29:
            result = { action: swf_tree_1.avm1.ActionType.StringLess };
            break;
        case 0x2a:
            result = { action: swf_tree_1.avm1.ActionType.Throw };
            break;
        case 0x2b:
            result = { action: swf_tree_1.avm1.ActionType.CastOp };
            break;
        case 0x2c:
            result = { action: swf_tree_1.avm1.ActionType.ImplementsOp };
            break;
        case 0x2d:
            result = { action: swf_tree_1.avm1.ActionType.FsCommand2 };
            break;
        case 0x30:
            result = { action: swf_tree_1.avm1.ActionType.RandomNumber };
            break;
        case 0x31:
            result = { action: swf_tree_1.avm1.ActionType.MbStringLength };
            break;
        case 0x32:
            result = { action: swf_tree_1.avm1.ActionType.CharToAscii };
            break;
        case 0x33:
            result = { action: swf_tree_1.avm1.ActionType.AsciiToChar };
            break;
        case 0x34:
            result = { action: swf_tree_1.avm1.ActionType.GetTime };
            break;
        case 0x35:
            result = { action: swf_tree_1.avm1.ActionType.MbStringExtract };
            break;
        case 0x36:
            result = { action: swf_tree_1.avm1.ActionType.MbCharToAscii };
            break;
        case 0x37:
            result = { action: swf_tree_1.avm1.ActionType.MbAsciiToChar };
            break;
        case 0x3a:
            result = { action: swf_tree_1.avm1.ActionType.Delete };
            break;
        case 0x3b:
            result = { action: swf_tree_1.avm1.ActionType.Delete2 };
            break;
        case 0x3c:
            result = { action: swf_tree_1.avm1.ActionType.DefineLocal };
            break;
        case 0x3d:
            result = { action: swf_tree_1.avm1.ActionType.CallFunction };
            break;
        case 0x3e:
            result = { action: swf_tree_1.avm1.ActionType.Return };
            break;
        case 0x3f:
            result = { action: swf_tree_1.avm1.ActionType.Modulo };
            break;
        case 0x40:
            result = { action: swf_tree_1.avm1.ActionType.NewObject };
            break;
        case 0x41:
            result = { action: swf_tree_1.avm1.ActionType.DefineLocal2 };
            break;
        case 0x42:
            result = { action: swf_tree_1.avm1.ActionType.InitArray };
            break;
        case 0x43:
            result = { action: swf_tree_1.avm1.ActionType.InitObject };
            break;
        case 0x44:
            result = { action: swf_tree_1.avm1.ActionType.TypeOf };
            break;
        case 0x45:
            result = { action: swf_tree_1.avm1.ActionType.TargetPath };
            break;
        case 0x46:
            result = { action: swf_tree_1.avm1.ActionType.Enumerate };
            break;
        case 0x47:
            result = { action: swf_tree_1.avm1.ActionType.Add2 };
            break;
        case 0x48:
            result = { action: swf_tree_1.avm1.ActionType.Less2 };
            break;
        case 0x49:
            result = { action: swf_tree_1.avm1.ActionType.Equals2 };
            break;
        case 0x4a:
            result = { action: swf_tree_1.avm1.ActionType.ToNumber };
            break;
        case 0x4b:
            result = { action: swf_tree_1.avm1.ActionType.ToString };
            break;
        case 0x4c:
            result = { action: swf_tree_1.avm1.ActionType.PushDuplicate };
            break;
        case 0x4d:
            result = { action: swf_tree_1.avm1.ActionType.StackSwap };
            break;
        case 0x4e:
            result = { action: swf_tree_1.avm1.ActionType.GetMember };
            break;
        case 0x4f:
            result = { action: swf_tree_1.avm1.ActionType.SetMember };
            break;
        case 0x50:
            result = { action: swf_tree_1.avm1.ActionType.Increment };
            break;
        case 0x51:
            result = { action: swf_tree_1.avm1.ActionType.Decrement };
            break;
        case 0x52:
            result = { action: swf_tree_1.avm1.ActionType.CallMethod };
            break;
        case 0x53:
            result = { action: swf_tree_1.avm1.ActionType.NewMethod };
            break;
        case 0x54:
            result = { action: swf_tree_1.avm1.ActionType.InstanceOf };
            break;
        case 0x55:
            result = { action: swf_tree_1.avm1.ActionType.Enumerate2 };
            break;
        case 0x60:
            result = { action: swf_tree_1.avm1.ActionType.BitAnd };
            break;
        case 0x61:
            result = { action: swf_tree_1.avm1.ActionType.BitOr };
            break;
        case 0x62:
            result = { action: swf_tree_1.avm1.ActionType.BitXor };
            break;
        case 0x63:
            result = { action: swf_tree_1.avm1.ActionType.BitLShift };
            break;
        case 0x64:
            result = { action: swf_tree_1.avm1.ActionType.BitRShift };
            break;
        case 0x65:
            result = { action: swf_tree_1.avm1.ActionType.BitURShift };
            break;
        case 0x66:
            result = { action: swf_tree_1.avm1.ActionType.StrictEquals };
            break;
        case 0x67:
            result = { action: swf_tree_1.avm1.ActionType.Greater };
            break;
        case 0x68:
            result = { action: swf_tree_1.avm1.ActionType.StringGreater };
            break;
        case 0x69:
            result = { action: swf_tree_1.avm1.ActionType.Extends };
            break;
        case 0x81:
            result = parseGotoFrameAction(byteStream);
            break;
        case 0x83:
            result = parseGetUrlAction(byteStream);
            break;
        case 0x87:
            result = parseStoreRegisterAction(byteStream);
            break;
        case 0x88:
            result = parseConstantPoolAction(byteStream);
            break;
        case 0x8a:
            result = parseWaitForFrameAction(byteStream);
            break;
        case 0x8b:
            result = parseSetTargetAction(byteStream);
            break;
        case 0x8c:
            result = parseGotoLabelAction(byteStream);
            break;
        case 0x8d:
            result = parseWaitForFrame2Action(byteStream);
            break;
        case 0x8e:
            result = parseDefineFunction2Action(byteStream);
            break;
        case 0x8f:
            result = parseTryAction(byteStream);
            break;
        case 0x94:
            result = parseWithAction(byteStream);
            break;
        case 0x96:
            result = parsePushAction(byteStream.take(header.length));
            break;
        case 0x99:
            result = parseJumpAction(byteStream);
            break;
        case 0x9a:
            result = parseGetUrl2Action(byteStream);
            break;
        case 0x9b:
            result = parseDefineFunctionAction(byteStream);
            break;
        case 0x9d:
            result = parseIfAction(byteStream);
            break;
        case 0x9e:
            result = { action: swf_tree_1.avm1.ActionType.Call };
            break;
        case 0x9f:
            result = parseGotoFrame2Action(byteStream);
            break;
        default:
            result = { action: swf_tree_1.avm1.ActionType.Unknown, actionCode: header.actionCode };
            byteStream.skip(header.length);
            break;
    }
    const actionDataLength = byteStream.bytePos - actionDataStartPos;
    if (actionDataLength < header.length) {
        byteStream.skip(header.length - actionDataLength);
    }
    return result;
}
exports.parseAction = parseAction;
function parseGotoFrameAction(byteStream) {
    const frame = byteStream.readUint16LE();
    return {
        action: swf_tree_1.avm1.ActionType.GotoFrame,
        frame,
    };
}
exports.parseGotoFrameAction = parseGotoFrameAction;
function parseGetUrlAction(byteStream) {
    const url = byteStream.readCString();
    const target = byteStream.readCString();
    return {
        action: swf_tree_1.avm1.ActionType.GetUrl,
        url,
        target,
    };
}
exports.parseGetUrlAction = parseGetUrlAction;
function parseStoreRegisterAction(byteStream) {
    const registerNumber = byteStream.readUint8();
    return {
        action: swf_tree_1.avm1.ActionType.StoreRegister,
        registerNumber,
    };
}
exports.parseStoreRegisterAction = parseStoreRegisterAction;
function parseConstantPoolAction(byteStream) {
    const length = byteStream.readUint16LE();
    const constantPool = [];
    for (let i = 0; i < 0; i++) {
        constantPool.push(byteStream.readCString());
    }
    return {
        action: swf_tree_1.avm1.ActionType.ConstantPool,
        constantPool,
    };
}
exports.parseConstantPoolAction = parseConstantPoolAction;
function parseWaitForFrameAction(byteStream) {
    const frame = byteStream.readUint16LE();
    const skipCount = byteStream.readUint8();
    return {
        action: swf_tree_1.avm1.ActionType.WaitForFrame,
        frame,
        skipCount,
    };
}
exports.parseWaitForFrameAction = parseWaitForFrameAction;
function parseSetTargetAction(byteStream) {
    const targetName = byteStream.readCString();
    return {
        action: swf_tree_1.avm1.ActionType.SetTarget,
        targetName,
    };
}
exports.parseSetTargetAction = parseSetTargetAction;
function parseGotoLabelAction(byteStream) {
    const label = byteStream.readCString();
    return {
        action: swf_tree_1.avm1.ActionType.GotoLabel,
        label,
    };
}
exports.parseGotoLabelAction = parseGotoLabelAction;
function parseWaitForFrame2Action(byteStream) {
    const skipCount = byteStream.readUint8();
    return {
        action: swf_tree_1.avm1.ActionType.WaitForFrame2,
        skipCount,
    };
}
exports.parseWaitForFrame2Action = parseWaitForFrame2Action;
function parseDefineFunction2Action(byteStream) {
    const name = byteStream.readCString();
    const parameterCount = byteStream.readUint16LE();
    const registerCount = byteStream.readUint8();
    const preloadParent = byteStream.readBoolBits();
    const preloadRoot = byteStream.readBoolBits();
    const suppressSuper = byteStream.readBoolBits();
    const preloadSuper = byteStream.readBoolBits();
    const suppressArguments = byteStream.readBoolBits();
    const preloadArguments = byteStream.readBoolBits();
    const suppressThis = byteStream.readBoolBits();
    const preloadThis = byteStream.readBoolBits();
    byteStream.skipBits(7);
    const preloadGlobal = byteStream.readBoolBits();
    // TODO(demurgos): Assert that byteStream.align() is a no-op
    const parameters = [];
    for (let i = 0; i < parameterCount; i++) {
        const register = byteStream.readUint8();
        const name = byteStream.readCString();
        parameters.push({ register, name });
    }
    const codeSize = byteStream.readUint16LE();
    const body = parseActionsBlock(byteStream.take(codeSize));
    return {
        action: swf_tree_1.avm1.ActionType.DefineFunction2,
        name,
        preloadParent,
        preloadRoot,
        suppressSuper,
        preloadSuper,
        suppressArguments,
        preloadArguments,
        suppressThis,
        preloadThis,
        preloadGlobal,
        registerCount,
        parameters,
        body,
    };
}
exports.parseDefineFunction2Action = parseDefineFunction2Action;
function parseCatchTarget(byteStream, catchInRegister) {
    if (catchInRegister) {
        return { type: swf_tree_1.avm1.CatchTargetType.Register, register: byteStream.readUint8() };
    }
    else {
        return { type: swf_tree_1.avm1.CatchTargetType.Variable, variable: byteStream.readCString() };
    }
}
function parseTryAction(byteStream) {
    byteStream.skipBits(5);
    const catchInRegister = byteStream.readBoolBits();
    const hasFinallyBlock = byteStream.readBoolBits();
    const hasCatchBlock = byteStream.readBoolBits();
    const trySize = byteStream.readUint16LE();
    const finallySize = byteStream.readUint16LE();
    const catchSize = byteStream.readUint16LE();
    const catchTarget = parseCatchTarget(byteStream, catchInRegister);
    const tryBody = parseActionsBlock(byteStream.take(trySize));
    let catchBody = undefined;
    if (hasCatchBlock) {
        catchBody = parseActionsBlock(byteStream.take(catchSize));
    }
    let finallyBody = undefined;
    if (hasFinallyBlock) {
        finallyBody = parseActionsBlock(byteStream.take(finallySize));
    }
    return {
        action: swf_tree_1.avm1.ActionType.Try,
        try: tryBody,
        catch: catchBody,
        catchTarget: catchTarget,
        finally: finallyBody,
    };
}
exports.parseTryAction = parseTryAction;
function parseWithAction(byteStream) {
    const withSize = byteStream.readUint16LE();
    const withBody = parseActionsBlock(byteStream.take(withSize));
    return {
        action: swf_tree_1.avm1.ActionType.With,
        with: withBody,
    };
}
exports.parseWithAction = parseWithAction;
function parsePushAction(byteStream) {
    const values = [];
    while (byteStream.available() > 0) {
        values.push(parseActionValue(byteStream));
    }
    return {
        action: swf_tree_1.avm1.ActionType.Push,
        values: values,
    };
}
exports.parsePushAction = parsePushAction;
function parseActionValue(byteStream) {
    const typeCode = byteStream.readUint8();
    switch (typeCode) {
        case 0:
            return { type: swf_tree_1.avm1.ValueType.CString, value: byteStream.readCString() };
        case 1:
            return { type: swf_tree_1.avm1.ValueType.Float32, value: byteStream.readFloat32LE() };
        case 2:
            return { type: swf_tree_1.avm1.ValueType.Null };
        case 3:
            return { type: swf_tree_1.avm1.ValueType.Undefined };
        case 4:
            return { type: swf_tree_1.avm1.ValueType.Register, value: byteStream.readUint8() };
        case 5:
            return { type: swf_tree_1.avm1.ValueType.Boolean, value: byteStream.readUint8() !== 0 };
        case 6:
            return { type: swf_tree_1.avm1.ValueType.Float64, value: byteStream.readFloat64LE() };
        case 7:
            return { type: swf_tree_1.avm1.ValueType.Int32, value: byteStream.readSint32LE() };
        case 8:
            return { type: swf_tree_1.avm1.ValueType.Constant, value: byteStream.readUint8() };
        case 9:
            return { type: swf_tree_1.avm1.ValueType.Constant, value: byteStream.readUint16LE() };
        default:
            throw new Error(`Unknown type code: ${typeCode}`);
    }
}
exports.parseActionValue = parseActionValue;
function parseJumpAction(byteStream) {
    const offset = byteStream.readUint16LE();
    return {
        action: swf_tree_1.avm1.ActionType.Jump,
        offset,
    };
}
exports.parseJumpAction = parseJumpAction;
function parseGetUrl2Action(byteStream) {
    let method;
    switch (byteStream.readUint16Bits(2)) {
        case 0:
            method = swf_tree_1.avm1.GetUrl2Method.None;
            break;
        case 1:
            method = swf_tree_1.avm1.GetUrl2Method.Get;
            break;
        case 2:
            method = swf_tree_1.avm1.GetUrl2Method.Post;
            break;
        default:
            throw new incident_1.Incident("UnexpectGetUrl2Method", "Unexpected value for the getUrl2 method");
    }
    byteStream.skipBits(4);
    const loadTarget = byteStream.readBoolBits();
    const loadVariables = byteStream.readBoolBits();
    return {
        action: swf_tree_1.avm1.ActionType.GetUrl2,
        method,
        loadTarget,
        loadVariables,
    };
}
exports.parseGetUrl2Action = parseGetUrl2Action;
function parseDefineFunctionAction(byteStream) {
    const name = byteStream.readCString();
    const parameterCount = byteStream.readUint16LE();
    const parameters = [];
    for (let i = 0; i < parameterCount; i++) {
        parameters.push(byteStream.readCString());
    }
    const bodySize = byteStream.readUint16LE();
    const body = parseActionsBlock(byteStream.take(bodySize));
    return {
        action: swf_tree_1.avm1.ActionType.DefineFunction,
        name,
        parameters,
        body,
    };
}
exports.parseDefineFunctionAction = parseDefineFunctionAction;
function parseIfAction(byteStream) {
    const offset = byteStream.readUint16LE();
    return {
        action: swf_tree_1.avm1.ActionType.If,
        offset,
    };
}
exports.parseIfAction = parseIfAction;
function parseGotoFrame2Action(byteStream) {
    byteStream.skipBits(6);
    const hasSceneBias = byteStream.readBoolBits();
    const play = byteStream.readBoolBits();
    const sceneBias = hasSceneBias ? byteStream.readUint16LE() : 0;
    return {
        action: swf_tree_1.avm1.ActionType.GotoFrame2,
        play,
        sceneBias,
    };
}
exports.parseGotoFrame2Action = parseGotoFrame2Action;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const swf_tree_1 = __webpack_require__(6);
const basic_data_types_1 = __webpack_require__(21);
const gradient_1 = __webpack_require__(363);
var ShapeVersion;
(function (ShapeVersion) {
    ShapeVersion[ShapeVersion["Shape1"] = 0] = "Shape1";
    ShapeVersion[ShapeVersion["Shape2"] = 1] = "Shape2";
    ShapeVersion[ShapeVersion["Shape3"] = 2] = "Shape3";
})(ShapeVersion = exports.ShapeVersion || (exports.ShapeVersion = {}));
function parseGlyph(byteStream) {
    const bitStream = byteStream.asBitStream();
    const result = parseGlyphBits(bitStream);
    bitStream.align();
    return result;
}
exports.parseGlyph = parseGlyph;
function parseGlyphBits(bitStream) {
    const fillBits = bitStream.readUint32Bits(4);
    const lineBits = bitStream.readUint32Bits(4);
    // TODO: Check which shape version to use
    const records = parseShapeRecordStringBits(bitStream, fillBits, lineBits, ShapeVersion.Shape1);
    return { records };
}
exports.parseGlyphBits = parseGlyphBits;
function parseShape(byteStream, version) {
    const bitStream = byteStream.asBitStream();
    const result = parseShapeBits(bitStream, version);
    bitStream.align();
    return result;
}
exports.parseShape = parseShape;
function parseShapeBits(bitStream, version) {
    const styles = parseShapeStylesBits(bitStream, version);
    const records = parseShapeRecordStringBits(bitStream, styles.fillBits, styles.lineBits, version);
    return {
        fillStyles: styles.fill,
        lineStyles: styles.line,
        records,
    };
}
exports.parseShapeBits = parseShapeBits;
function parseShapeStylesBits(bitStream, version) {
    const byteStream = bitStream.asByteStream();
    const fill = parseFillStyleList(byteStream, version);
    const line = parseLineStyleList(byteStream, version);
    bitStream = byteStream.asBitStream();
    const fillBits = bitStream.readUint32Bits(4);
    const lineBits = bitStream.readUint32Bits(4);
    return { fill, line, fillBits, lineBits };
}
exports.parseShapeStylesBits = parseShapeStylesBits;
function parseShapeRecordStringBits(bitStream, fillBits, lineBits, version) {
    const result = [];
    while (true) {
        const bytePos = bitStream.bytePos;
        const bitPos = bitStream.bitPos;
        const head = bitStream.readUint16Bits(6);
        if (head === 0) {
            break;
        }
        else {
            bitStream.bytePos = bytePos;
            bitStream.bitPos = bitPos;
        }
        const isEdge = bitStream.readBoolBits();
        if (isEdge) {
            const isStraightEdge = bitStream.readBoolBits();
            if (isStraightEdge) {
                result.push(parseStraightEdgeBits(bitStream));
            }
            else {
                result.push(parseCurvedEdgeBits(bitStream));
            }
        }
        else {
            let styles;
            [styles, [fillBits, lineBits]] = parseStyleChangeBits(bitStream, fillBits, lineBits, version);
            result.push(styles);
        }
    }
    return result;
}
exports.parseShapeRecordStringBits = parseShapeRecordStringBits;
function parseCurvedEdgeBits(bitStream) {
    const nBits = bitStream.readUint16Bits(4) + 2;
    const controlX = bitStream.readSint32Bits(nBits);
    const controlY = bitStream.readSint32Bits(nBits);
    const deltaX = bitStream.readSint32Bits(nBits);
    const deltaY = bitStream.readSint32Bits(nBits);
    return {
        type: swf_tree_1.ShapeRecordType.CurvedEdge,
        controlDelta: { x: controlX, y: controlY },
        endDelta: { x: deltaX, y: deltaY },
    };
}
exports.parseCurvedEdgeBits = parseCurvedEdgeBits;
function parseStraightEdgeBits(bitStream) {
    const nBits = bitStream.readUint16Bits(4) + 2;
    const isDiagonal = bitStream.readBoolBits();
    const isVertical = !isDiagonal && bitStream.readBoolBits();
    const deltaX = isDiagonal || !isVertical ? bitStream.readSint32Bits(nBits) : 0;
    const deltaY = isDiagonal || isVertical ? bitStream.readSint32Bits(nBits) : 0;
    return {
        type: swf_tree_1.ShapeRecordType.StraightEdge,
        endDelta: { x: deltaX, y: deltaY },
    };
}
exports.parseStraightEdgeBits = parseStraightEdgeBits;
function parseStyleChangeBits(bitStream, fillBits, lineBits, version) {
    const hasNewStyles = bitStream.readBoolBits();
    const changeLineStyle = bitStream.readBoolBits();
    const changeRightFill = bitStream.readBoolBits();
    const changeLeftFill = bitStream.readBoolBits();
    const hasMoveTo = bitStream.readBoolBits();
    let moveTo = undefined;
    if (hasMoveTo) {
        const nBits = bitStream.readUint16Bits(5);
        const x = bitStream.readSint32Bits(nBits);
        const y = bitStream.readSint32Bits(nBits);
        moveTo = { x, y };
    }
    const leftFill = changeLeftFill ? bitStream.readUint16Bits(fillBits) : undefined;
    const rightFill = changeRightFill ? bitStream.readUint16Bits(fillBits) : undefined;
    const lineStyle = changeLineStyle ? bitStream.readUint16Bits(lineBits) : undefined;
    let fillStyles = undefined;
    let lineStyles = undefined;
    if (hasNewStyles) {
        const styles = parseShapeStylesBits(bitStream, version);
        fillStyles = styles.fill;
        lineStyles = styles.line;
        fillBits = styles.fillBits;
        lineBits = styles.lineBits;
    }
    const styleChangeRecord = {
        type: swf_tree_1.ShapeRecordType.StyleChange,
        moveTo,
        leftFill,
        rightFill,
        lineStyle,
        fillStyles,
        lineStyles,
    };
    return [styleChangeRecord, [fillBits, lineBits]];
}
exports.parseStyleChangeBits = parseStyleChangeBits;
/**
 * Parse a fill style list length or line style list length.
 *
 * @param byteStream Stream to use to parse this list length. Will mutate its state.
 * @param supportExtended Allow extended size (`> 255`). Here are the recommended values:
 *                      - `true` for `DefineShape2`, `DefineShape3`
 *                      - `false` for `DefineShape`
 * @returns List length
 */
function parseListLength(byteStream, supportExtended) {
    const len = byteStream.readUint8();
    if (len === 0xff && supportExtended) {
        return byteStream.readUint16LE();
    }
    else {
        return len;
    }
}
exports.parseListLength = parseListLength;
function parseFillStyleList(byteStream, version) {
    const result = [];
    const len = parseListLength(byteStream, version !== ShapeVersion.Shape1);
    for (let i = 0; i < len; i++) {
        result.push(parseFillStyle(byteStream, version === ShapeVersion.Shape3));
    }
    return result;
}
exports.parseFillStyleList = parseFillStyleList;
function parseFillStyle(byteStream, withAlpha) {
    switch (byteStream.readUint8()) {
        case 0x00:
            return parseSolidFill(byteStream, withAlpha);
        case 0x10:
            return parseLinearGradientFill(byteStream, withAlpha);
        case 0x12:
            return parseRadialGradientFill(byteStream, withAlpha);
        case 0x13:
            return parseFocalGradientFill(byteStream, withAlpha);
        case 0x40:
            return parseBitmapFill(byteStream, true, true);
        case 0x41:
            return parseBitmapFill(byteStream, false, true);
        case 0x42:
            return parseBitmapFill(byteStream, true, false);
        case 0x43:
            return parseBitmapFill(byteStream, false, false);
        default:
            throw new Error("Unexpected fill style");
    }
}
exports.parseFillStyle = parseFillStyle;
function parseBitmapFill(byteStream, repeating, smoothed) {
    const bitmapId = byteStream.readUint16LE();
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    return {
        type: swf_tree_1.FillStyleType.Bitmap,
        bitmapId,
        matrix,
        repeating,
        smoothed,
    };
}
exports.parseBitmapFill = parseBitmapFill;
function parseFocalGradientFill(byteStream, withAlpha) {
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    const gradient = gradient_1.parseGradient(byteStream, withAlpha);
    const focalPoint = byteStream.readFixed8P8LE();
    return {
        type: swf_tree_1.FillStyleType.FocalGradient,
        matrix,
        gradient,
        focalPoint,
    };
}
exports.parseFocalGradientFill = parseFocalGradientFill;
function parseLinearGradientFill(byteStream, withAlpha) {
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    const gradient = gradient_1.parseGradient(byteStream, withAlpha);
    const focalPoint = byteStream.readFixed8P8LE();
    return {
        type: swf_tree_1.FillStyleType.LinearGradient,
        matrix,
        gradient,
    };
}
exports.parseLinearGradientFill = parseLinearGradientFill;
function parseRadialGradientFill(byteStream, withAlpha) {
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    const gradient = gradient_1.parseGradient(byteStream, withAlpha);
    const focalPoint = byteStream.readFixed8P8LE();
    return {
        type: swf_tree_1.FillStyleType.RadialGradient,
        matrix,
        gradient,
    };
}
exports.parseRadialGradientFill = parseRadialGradientFill;
function parseSolidFill(byteStream, withAlpha) {
    let color;
    if (withAlpha) {
        color = basic_data_types_1.parseStraightSRgba8(byteStream);
    }
    else {
        color = Object.assign({}, basic_data_types_1.parseSRgb8(byteStream), { a: 255 });
    }
    return {
        type: swf_tree_1.FillStyleType.Solid,
        color,
    };
}
exports.parseSolidFill = parseSolidFill;
function parseLineStyleList(byteStream, version) {
    const result = [];
    const len = parseListLength(byteStream, version !== ShapeVersion.Shape1);
    for (let i = 0; i < len; i++) {
        result.push(parseLineStyle(byteStream));
    }
    return result;
}
exports.parseLineStyleList = parseLineStyleList;
// TODO: Linestyle2
function parseLineStyle(byteStream) {
    const width = byteStream.readUint16LE();
    const color = basic_data_types_1.parseSRgb8(byteStream);
    return {
        width,
        startCap: swf_tree_1.CapStyle.Round,
        endCap: swf_tree_1.CapStyle.Round,
        join: { type: swf_tree_1.JoinStyleType.Round },
        noHScale: false,
        noVScale: false,
        noClose: false,
        pixelHinting: false,
        fill: {
            type: swf_tree_1.FillStyleType.Solid,
            color: Object.assign({}, color, { a: 255 }),
        },
    };
}
exports.parseLineStyle = parseLineStyle;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 145 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FillStyleType; });
var FillStyleType;
(function (FillStyleType) {
    FillStyleType[FillStyleType["Solid"] = 0] = "Solid";
})(FillStyleType || (FillStyleType = {}));


/***/ }),
/* 146 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LineStyleType; });
var LineStyleType;
(function (LineStyleType) {
    LineStyleType[LineStyleType["Solid"] = 0] = "Solid";
})(LineStyleType || (LineStyleType = {}));


/***/ }),
/* 147 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CommandType; });
var CommandType;
(function (CommandType) {
    CommandType[CommandType["LineTo"] = 0] = "LineTo";
    CommandType[CommandType["CurveTo"] = 1] = "CurveTo";
    CommandType[CommandType["MoveTo"] = 2] = "MoveTo";
})(CommandType || (CommandType = {}));


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(149);


/***/ }),
/* 149 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__browser_domu_player__ = __webpack_require__(150);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__browser_polyfills__ = __webpack_require__(367);


Object(__WEBPACK_IMPORTED_MODULE_1__browser_polyfills__["a" /* all */])();
async function run() {
    const root = document.getElementById("domu-root");
    const src = "squares.swf";
    Object(__WEBPACK_IMPORTED_MODULE_0__browser_domu_player__["a" /* createPlayer */])(root, src);
}
run().catch((err) => {
    console.error(err.stack);
    // process.exit(1);
    return undefined;
});


/***/ }),
/* 150 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = createPlayer;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_css_color__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__xhr_loader__ = __webpack_require__(151);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_swf_tree__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_swf_tree___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_swf_tree__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_shape_decode_swf_shape__ = __webpack_require__(365);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_renderers_canvas_renderer__ = __webpack_require__(366);
// import {getMovie} from "./xhr-loader";





/**
 * Encapsulates an abstract player in a DOM <div> element
 */
class DomuPlayer {
    constructor(container, movieUri) {
        this.container = container;
        this.movieUri = movieUri;
        this.frameTree = { instances: new Map() };
        this.dictionary = new Map();
        // this.root = container.attachShadow({ mode: "open" });
        this.root = document.createElement("div");
        this.container.appendChild(this.root);
        this.renderer = this.createRenderer();
        this.load();
    }
    createRenderer() {
        const canvas = document.createElement("canvas");
        const context = canvas.getContext("2d");
        if (context === null) {
            throw new Error("Unable to initialize canvas renderer");
        }
        let [width, height] = this.getContainerSize();
        if (width === 0 || height === 0) {
            width = 240;
            height = 200;
        }
        canvas.width = width;
        canvas.height = height;
        this.root.appendChild(canvas);
        return new __WEBPACK_IMPORTED_MODULE_4__lib_renderers_canvas_renderer__["a" /* CanvasRenderer */](context, width, height);
    }
    getContainerSize() {
        return [this.container.clientWidth, this.container.clientHeight];
    }
    setBackgroundColor(color) {
        this.root.style.backgroundColor = Object(__WEBPACK_IMPORTED_MODULE_0__lib_css_color__["a" /* fromNormalizedColor */])(color);
    }
    load() {
        Object(__WEBPACK_IMPORTED_MODULE_1__xhr_loader__["a" /* getMovie */])(this.movieUri).then((movie) => {
            console.log(movie);
            this.applyTags(movie.tags);
        });
    }
    applyTags(tags) {
        for (const tag of tags) {
            this.applyTag(tag);
        }
    }
    applyTag(tag) {
        switch (tag.type) {
            case __WEBPACK_IMPORTED_MODULE_2_swf_tree__["TagType"].DefineShape:
                this.dictionary.set(tag.id, Object(__WEBPACK_IMPORTED_MODULE_3__lib_shape_decode_swf_shape__["a" /* decodeSwfShape */])(tag));
                break;
            case __WEBPACK_IMPORTED_MODULE_2_swf_tree__["TagType"].FileAttributes:
                console.log("File attributes:");
                console.log(tag);
                break;
            case __WEBPACK_IMPORTED_MODULE_2_swf_tree__["TagType"].Metadata:
                break;
            case __WEBPACK_IMPORTED_MODULE_2_swf_tree__["TagType"].PlaceObject:
                const character = this.dictionary.get(tag.characterId);
                this.frameTree.instances.set(tag.depth, { shape: character });
                break;
            case __WEBPACK_IMPORTED_MODULE_2_swf_tree__["TagType"].ShowFrame:
                this.renderer.clear();
                for (const [depth, instance] of this.frameTree.instances) {
                    this.renderer.drawShape(instance.shape);
                }
                break;
            case __WEBPACK_IMPORTED_MODULE_2_swf_tree__["TagType"].SetBackgroundColor:
                this.setBackgroundColor({ r: tag.color.r / 255, g: tag.color.g / 255, b: tag.color.b / 255, a: 1 });
                break;
            default:
                console.warn("Unsupported tag:");
                console.warn(tag);
        }
    }
}
/* unused harmony export DomuPlayer */

function createPlayer(container, movieUri) {
    return new DomuPlayer(container, movieUri);
}


/***/ }),
/* 151 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getMovie;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_swf_parser__ = __webpack_require__(152);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_swf_parser___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_swf_parser__);

async function getMovie(uri) {
    return new Promise((resolve, reject) => {
        const xhr = new XMLHttpRequest();
        xhr.open("GET", uri, true);
        xhr.responseType = "arraybuffer";
        xhr.onload = function (ev) {
            if (this.status === 200) {
                try {
                    const movie = Object(__WEBPACK_IMPORTED_MODULE_0_swf_parser__["parseBuffer"])(this.response);
                    resolve(movie);
                }
                catch (err) {
                    reject(err);
                }
            }
            else {
                reject(new Error("Unknown error"));
            }
        };
        xhr.send();
    });
}


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const ast = __webpack_require__(6);
exports.ast = ast;
const movie_1 = __webpack_require__(338);
const stream_1 = __webpack_require__(142);
function parseBuffer(buffer) {
    const byteStream = new stream_1.Stream(buffer);
    return movie_1.parseMovie(byteStream);
}
exports.parseBuffer = parseBuffer;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdDQUFnQztBQUl4QixrQkFBRztBQUhYLDJDQUEyQztBQUMzQyxxQ0FBZ0M7QUFJaEMscUJBQTRCLE1BQW1CO0lBQzdDLE1BQU0sVUFBVSxHQUFXLElBQUksZUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzlDLE1BQU0sQ0FBQyxrQkFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ2hDLENBQUM7QUFIRCxrQ0FHQyIsImZpbGUiOiJsaWIvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBhc3QgZnJvbSBcInN3Zi10cmVlXCI7XG5pbXBvcnQge3BhcnNlTW92aWV9IGZyb20gXCIuL3BhcnNlcnMvbW92aWVcIjtcbmltcG9ydCB7U3RyZWFtfSBmcm9tIFwiLi9zdHJlYW1cIjtcblxuZXhwb3J0IHthc3R9O1xuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VCdWZmZXIoYnVmZmVyOiBBcnJheUJ1ZmZlcik6IGFzdC5Nb3ZpZSB7XG4gIGNvbnN0IGJ5dGVTdHJlYW06IFN0cmVhbSA9IG5ldyBTdHJlYW0oYnVmZmVyKTtcbiAgcmV0dXJuIHBhcnNlTW92aWUoYnl0ZVN0cmVhbSk7XG59XG4iXX0=


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _circular_references_1 = __webpack_require__(14);
const actions = __webpack_require__(94);
var Action;
(function (Action) {
    Action.type = Object.assign(_circular_references_1.Action.type, new kryo_1.TaggedUnionType({
        variants: [
            actions.Unknown.type,
            actions.Add.type,
            actions.Add2.type,
            actions.And.type,
            actions.AsciiToChar.type,
            actions.BitAnd.type,
            actions.BitLShift.type,
            actions.BitOr.type,
            actions.BitRShift.type,
            actions.BitURShift.type,
            actions.BitXor.type,
            actions.Call.type,
            actions.CallFunction.type,
            actions.CallMethod.type,
            actions.CastOp.type,
            actions.CharToAscii.type,
            actions.CloneSprite.type,
            actions.ConstantPool.type,
            actions.Decrement.type,
            actions.DefineFunction.type,
            actions.DefineFunction2.type,
            actions.DefineLocal.type,
            actions.DefineLocal2.type,
            actions.Delete.type,
            actions.Delete2.type,
            actions.Divide.type,
            actions.EndDrag.type,
            actions.Enumerate.type,
            actions.Enumerate2.type,
            actions.Equals.type,
            actions.Equals2.type,
            actions.Extends.type,
            actions.FsCommand2.type,
            actions.GetMember.type,
            actions.GetProperty.type,
            actions.GetTime.type,
            actions.GetUrl.type,
            actions.GetUrl2.type,
            actions.GetVariable.type,
            actions.GotoFrame.type,
            actions.GotoFrame2.type,
            actions.GotoLabel.type,
            actions.Greater.type,
            actions.If.type,
            actions.ImplementsOp.type,
            actions.Increment.type,
            actions.InitArray.type,
            actions.InitObject.type,
            actions.InstanceOf.type,
            actions.Jump.type,
            actions.Less.type,
            actions.Less2.type,
            actions.MbAsciiToChar.type,
            actions.MbCharToAscii.type,
            actions.MbStringExtract.type,
            actions.MbStringLength.type,
            actions.Modulo.type,
            actions.Multiply.type,
            actions.NewMethod.type,
            actions.NewObject.type,
            actions.NextFrame.type,
            actions.Not.type,
            actions.Or.type,
            actions.Play.type,
            actions.Pop.type,
            actions.PreviousFrame.type,
            actions.Push.type,
            actions.PushDuplicate.type,
            actions.RandomNumber.type,
            actions.RemoveSprite.type,
            actions.Return.type,
            actions.SetMember.type,
            actions.SetProperty.type,
            actions.SetTarget.type,
            actions.SetTarget2.type,
            actions.SetVariable.type,
            actions.StackSwap.type,
            actions.StartDrag.type,
            actions.Stop.type,
            actions.StopSounds.type,
            actions.StoreRegister.type,
            actions.StrictEquals.type,
            actions.StrictMode.type,
            actions.StringAdd.type,
            actions.StringEquals.type,
            actions.StringExtract.type,
            actions.StringGreater.type,
            actions.StringLength.type,
            actions.StringLess.type,
            actions.Subtract.type,
            actions.TargetPath.type,
            actions.Throw.type,
            actions.ToggleQuality.type,
            actions.ToInteger.type,
            actions.ToNumber.type,
            actions.ToString.type,
            actions.Trace.type,
            actions.Try.type,
            actions.TypeOf.type,
            actions.WaitForFrame.type,
            actions.WaitForFrame2.type,
            actions.With.type,
        ],
        tag: "action",
    }));
})(Action = exports.Action || (exports.Action = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxQztBQUNyQyxrRUFBMEQ7QUFDMUQsMkNBQTJDO0FBMEczQyxJQUFpQixNQUFNLENBb050QjtBQXBORCxXQUFpQixNQUFNO0lBeUdSLFdBQUksR0FBNEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyw2QkFBTyxDQUFDLElBQUksRUFBRSxJQUFJLHNCQUFlLENBQVM7UUFDbkcsUUFBUSxFQUFFO1lBQ1IsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJO1lBQ3BCLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSTtZQUNoQixPQUFPLENBQUMsSUFBSSxDQUFDLElBQUk7WUFDakIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJO1lBQ2hCLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSTtZQUN4QixPQUFPLENBQUMsTUFBTSxDQUFDLElBQUk7WUFDbkIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJO1lBQ3RCLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSTtZQUNsQixPQUFPLENBQUMsU0FBUyxDQUFDLElBQUk7WUFDdEIsT0FBTyxDQUFDLFVBQVUsQ0FBQyxJQUFJO1lBQ3ZCLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSTtZQUNuQixPQUFPLENBQUMsSUFBSSxDQUFDLElBQUk7WUFDakIsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJO1lBQ3pCLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSTtZQUN2QixPQUFPLENBQUMsTUFBTSxDQUFDLElBQUk7WUFDbkIsT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJO1lBQ3hCLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSTtZQUN4QixPQUFPLENBQUMsWUFBWSxDQUFDLElBQUk7WUFDekIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJO1lBQ3RCLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSTtZQUMzQixPQUFPLENBQUMsZUFBZSxDQUFDLElBQUk7WUFDNUIsT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJO1lBQ3hCLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSTtZQUN6QixPQUFPLENBQUMsTUFBTSxDQUFDLElBQUk7WUFDbkIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJO1lBQ3BCLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSTtZQUNuQixPQUFPLENBQUMsT0FBTyxDQUFDLElBQUk7WUFDcEIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJO1lBQ3RCLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSTtZQUN2QixPQUFPLENBQUMsTUFBTSxDQUFDLElBQUk7WUFDbkIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJO1lBQ3BCLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSTtZQUNwQixPQUFPLENBQUMsVUFBVSxDQUFDLElBQUk7WUFDdkIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJO1lBQ3RCLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSTtZQUN4QixPQUFPLENBQUMsT0FBTyxDQUFDLElBQUk7WUFDcEIsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJO1lBQ25CLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSTtZQUNwQixPQUFPLENBQUMsV0FBVyxDQUFDLElBQUk7WUFDeEIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJO1lBQ3RCLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSTtZQUN2QixPQUFPLENBQUMsU0FBUyxDQUFDLElBQUk7WUFDdEIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJO1lBQ3BCLE9BQU8sQ0FBQyxFQUFFLENBQUMsSUFBSTtZQUNmLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSTtZQUN6QixPQUFPLENBQUMsU0FBUyxDQUFDLElBQUk7WUFDdEIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJO1lBQ3RCLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSTtZQUN2QixPQUFPLENBQUMsVUFBVSxDQUFDLElBQUk7WUFDdkIsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJO1lBQ2pCLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSTtZQUNqQixPQUFPLENBQUMsS0FBSyxDQUFDLElBQUk7WUFDbEIsT0FBTyxDQUFDLGFBQWEsQ0FBQyxJQUFJO1lBQzFCLE9BQU8sQ0FBQyxhQUFhLENBQUMsSUFBSTtZQUMxQixPQUFPLENBQUMsZUFBZSxDQUFDLElBQUk7WUFDNUIsT0FBTyxDQUFDLGNBQWMsQ0FBQyxJQUFJO1lBQzNCLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSTtZQUNuQixPQUFPLENBQUMsUUFBUSxDQUFDLElBQUk7WUFDckIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJO1lBQ3RCLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSTtZQUN0QixPQUFPLENBQUMsU0FBUyxDQUFDLElBQUk7WUFDdEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJO1lBQ2hCLE9BQU8sQ0FBQyxFQUFFLENBQUMsSUFBSTtZQUNmLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSTtZQUNqQixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUk7WUFDaEIsT0FBTyxDQUFDLGFBQWEsQ0FBQyxJQUFJO1lBQzFCLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSTtZQUNqQixPQUFPLENBQUMsYUFBYSxDQUFDLElBQUk7WUFDMUIsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJO1lBQ3pCLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSTtZQUN6QixPQUFPLENBQUMsTUFBTSxDQUFDLElBQUk7WUFDbkIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJO1lBQ3RCLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSTtZQUN4QixPQUFPLENBQUMsU0FBUyxDQUFDLElBQUk7WUFDdEIsT0FBTyxDQUFDLFVBQVUsQ0FBQyxJQUFJO1lBQ3ZCLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSTtZQUN4QixPQUFPLENBQUMsU0FBUyxDQUFDLElBQUk7WUFDdEIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJO1lBQ3RCLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSTtZQUNqQixPQUFPLENBQUMsVUFBVSxDQUFDLElBQUk7WUFDdkIsT0FBTyxDQUFDLGFBQWEsQ0FBQyxJQUFJO1lBQzFCLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSTtZQUN6QixPQUFPLENBQUMsVUFBVSxDQUFDLElBQUk7WUFDdkIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJO1lBQ3RCLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSTtZQUN6QixPQUFPLENBQUMsYUFBYSxDQUFDLElBQUk7WUFDMUIsT0FBTyxDQUFDLGFBQWEsQ0FBQyxJQUFJO1lBQzFCLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSTtZQUN6QixPQUFPLENBQUMsVUFBVSxDQUFDLElBQUk7WUFDdkIsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJO1lBQ3JCLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSTtZQUN2QixPQUFPLENBQUMsS0FBSyxDQUFDLElBQUk7WUFDbEIsT0FBTyxDQUFDLGFBQWEsQ0FBQyxJQUFJO1lBQzFCLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSTtZQUN0QixPQUFPLENBQUMsUUFBUSxDQUFDLElBQUk7WUFDckIsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJO1lBQ3JCLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSTtZQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUk7WUFDaEIsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJO1lBQ25CLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSTtZQUN6QixPQUFPLENBQUMsYUFBYSxDQUFDLElBQUk7WUFDMUIsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJO1NBQ2xCO1FBQ0QsR0FBRyxFQUFFLFFBQVE7S0FDZCxDQUFDLENBQUMsQ0FBQztBQUNOLENBQUMsRUFwTmdCLE1BQU0sR0FBTixjQUFNLEtBQU4sY0FBTSxRQW9OdEIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUYWdnZWRVbmlvblR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvbiBhcyAkQWN0aW9ufSBmcm9tIFwiLi4vX2NpcmN1bGFyLXJlZmVyZW5jZXNcIjtcbmltcG9ydCAqIGFzIGFjdGlvbnMgZnJvbSBcIi4vYWN0aW9ucy9pbmRleFwiO1xuXG5leHBvcnQgdHlwZSBBY3Rpb24gPVxuICBhY3Rpb25zLlVua25vd25cbiAgfCBhY3Rpb25zLkFkZFxuICB8IGFjdGlvbnMuQWRkMlxuICB8IGFjdGlvbnMuQW5kXG4gIHwgYWN0aW9ucy5Bc2NpaVRvQ2hhclxuICB8IGFjdGlvbnMuQml0QW5kXG4gIHwgYWN0aW9ucy5CaXRMU2hpZnRcbiAgfCBhY3Rpb25zLkJpdE9yXG4gIHwgYWN0aW9ucy5CaXRSU2hpZnRcbiAgfCBhY3Rpb25zLkJpdFVSU2hpZnRcbiAgfCBhY3Rpb25zLkJpdFhvclxuICB8IGFjdGlvbnMuQ2FsbFxuICB8IGFjdGlvbnMuQ2FsbEZ1bmN0aW9uXG4gIHwgYWN0aW9ucy5DYWxsTWV0aG9kXG4gIHwgYWN0aW9ucy5DYXN0T3BcbiAgfCBhY3Rpb25zLkNoYXJUb0FzY2lpXG4gIHwgYWN0aW9ucy5DbG9uZVNwcml0ZVxuICB8IGFjdGlvbnMuQ29uc3RhbnRQb29sXG4gIHwgYWN0aW9ucy5EZWNyZW1lbnRcbiAgfCBhY3Rpb25zLkRlZmluZUZ1bmN0aW9uXG4gIHwgYWN0aW9ucy5EZWZpbmVGdW5jdGlvbjJcbiAgfCBhY3Rpb25zLkRlZmluZUxvY2FsXG4gIHwgYWN0aW9ucy5EZWZpbmVMb2NhbDJcbiAgfCBhY3Rpb25zLkRlbGV0ZVxuICB8IGFjdGlvbnMuRGVsZXRlMlxuICB8IGFjdGlvbnMuRGl2aWRlXG4gIHwgYWN0aW9ucy5FbmREcmFnXG4gIHwgYWN0aW9ucy5FbnVtZXJhdGVcbiAgfCBhY3Rpb25zLkVudW1lcmF0ZTJcbiAgfCBhY3Rpb25zLkVxdWFsc1xuICB8IGFjdGlvbnMuRXF1YWxzMlxuICB8IGFjdGlvbnMuRXh0ZW5kc1xuICB8IGFjdGlvbnMuRnNDb21tYW5kMlxuICB8IGFjdGlvbnMuR2V0TWVtYmVyXG4gIHwgYWN0aW9ucy5HZXRQcm9wZXJ0eVxuICB8IGFjdGlvbnMuR2V0VGltZVxuICB8IGFjdGlvbnMuR2V0VXJsXG4gIHwgYWN0aW9ucy5HZXRVcmwyXG4gIHwgYWN0aW9ucy5HZXRWYXJpYWJsZVxuICB8IGFjdGlvbnMuR290b0ZyYW1lXG4gIHwgYWN0aW9ucy5Hb3RvRnJhbWUyXG4gIHwgYWN0aW9ucy5Hb3RvTGFiZWxcbiAgfCBhY3Rpb25zLkdyZWF0ZXJcbiAgfCBhY3Rpb25zLklmXG4gIHwgYWN0aW9ucy5JbXBsZW1lbnRzT3BcbiAgfCBhY3Rpb25zLkluY3JlbWVudFxuICB8IGFjdGlvbnMuSW5pdEFycmF5XG4gIHwgYWN0aW9ucy5Jbml0T2JqZWN0XG4gIHwgYWN0aW9ucy5JbnN0YW5jZU9mXG4gIHwgYWN0aW9ucy5KdW1wXG4gIHwgYWN0aW9ucy5MZXNzXG4gIHwgYWN0aW9ucy5MZXNzMlxuICB8IGFjdGlvbnMuTWJBc2NpaVRvQ2hhclxuICB8IGFjdGlvbnMuTWJDaGFyVG9Bc2NpaVxuICB8IGFjdGlvbnMuTWJTdHJpbmdFeHRyYWN0XG4gIHwgYWN0aW9ucy5NYlN0cmluZ0xlbmd0aFxuICB8IGFjdGlvbnMuTW9kdWxvXG4gIHwgYWN0aW9ucy5NdWx0aXBseVxuICB8IGFjdGlvbnMuTmV3TWV0aG9kXG4gIHwgYWN0aW9ucy5OZXdPYmplY3RcbiAgfCBhY3Rpb25zLk5leHRGcmFtZVxuICB8IGFjdGlvbnMuTm90XG4gIHwgYWN0aW9ucy5PclxuICB8IGFjdGlvbnMuUGxheVxuICB8IGFjdGlvbnMuUG9wXG4gIHwgYWN0aW9ucy5QcmV2aW91c0ZyYW1lXG4gIHwgYWN0aW9ucy5QdXNoXG4gIHwgYWN0aW9ucy5QdXNoRHVwbGljYXRlXG4gIHwgYWN0aW9ucy5SYW5kb21OdW1iZXJcbiAgfCBhY3Rpb25zLlJlbW92ZVNwcml0ZVxuICB8IGFjdGlvbnMuUmV0dXJuXG4gIHwgYWN0aW9ucy5TZXRNZW1iZXJcbiAgfCBhY3Rpb25zLlNldFByb3BlcnR5XG4gIHwgYWN0aW9ucy5TZXRUYXJnZXRcbiAgfCBhY3Rpb25zLlNldFRhcmdldDJcbiAgfCBhY3Rpb25zLlNldFZhcmlhYmxlXG4gIHwgYWN0aW9ucy5TdGFja1N3YXBcbiAgfCBhY3Rpb25zLlN0YXJ0RHJhZ1xuICB8IGFjdGlvbnMuU3RvcFxuICB8IGFjdGlvbnMuU3RvcFNvdW5kc1xuICB8IGFjdGlvbnMuU3RvcmVSZWdpc3RlclxuICB8IGFjdGlvbnMuU3RyaWN0RXF1YWxzXG4gIHwgYWN0aW9ucy5TdHJpY3RNb2RlXG4gIHwgYWN0aW9ucy5TdHJpbmdBZGRcbiAgfCBhY3Rpb25zLlN0cmluZ0VxdWFsc1xuICB8IGFjdGlvbnMuU3RyaW5nRXh0cmFjdFxuICB8IGFjdGlvbnMuU3RyaW5nR3JlYXRlclxuICB8IGFjdGlvbnMuU3RyaW5nTGVuZ3RoXG4gIHwgYWN0aW9ucy5TdHJpbmdMZXNzXG4gIHwgYWN0aW9ucy5TdWJ0cmFjdFxuICB8IGFjdGlvbnMuVGFyZ2V0UGF0aFxuICB8IGFjdGlvbnMuVGhyb3dcbiAgfCBhY3Rpb25zLlRvZ2dsZVF1YWxpdHlcbiAgfCBhY3Rpb25zLlRvSW50ZWdlclxuICB8IGFjdGlvbnMuVG9OdW1iZXJcbiAgfCBhY3Rpb25zLlRvU3RyaW5nXG4gIHwgYWN0aW9ucy5UcmFjZVxuICB8IGFjdGlvbnMuVHJ5XG4gIHwgYWN0aW9ucy5UeXBlT2ZcbiAgfCBhY3Rpb25zLldhaXRGb3JGcmFtZVxuICB8IGFjdGlvbnMuV2FpdEZvckZyYW1lMlxuICB8IGFjdGlvbnMuV2l0aDtcblxuZXhwb3J0IG5hbWVzcGFjZSBBY3Rpb24ge1xuICBleHBvcnQgdHlwZSBKc29uID1cbiAgICBhY3Rpb25zLlVua25vd24uSnNvblxuICAgIHwgYWN0aW9ucy5BZGQuSnNvblxuICAgIHwgYWN0aW9ucy5BZGQyLkpzb25cbiAgICB8IGFjdGlvbnMuQW5kLkpzb25cbiAgICB8IGFjdGlvbnMuQXNjaWlUb0NoYXIuSnNvblxuICAgIHwgYWN0aW9ucy5CaXRBbmQuSnNvblxuICAgIHwgYWN0aW9ucy5CaXRMU2hpZnQuSnNvblxuICAgIHwgYWN0aW9ucy5CaXRPci5Kc29uXG4gICAgfCBhY3Rpb25zLkJpdFJTaGlmdC5Kc29uXG4gICAgfCBhY3Rpb25zLkJpdFVSU2hpZnQuSnNvblxuICAgIHwgYWN0aW9ucy5CaXRYb3IuSnNvblxuICAgIHwgYWN0aW9ucy5DYWxsLkpzb25cbiAgICB8IGFjdGlvbnMuQ2FsbEZ1bmN0aW9uLkpzb25cbiAgICB8IGFjdGlvbnMuQ2FsbE1ldGhvZC5Kc29uXG4gICAgfCBhY3Rpb25zLkNhc3RPcC5Kc29uXG4gICAgfCBhY3Rpb25zLkNoYXJUb0FzY2lpLkpzb25cbiAgICB8IGFjdGlvbnMuQ2xvbmVTcHJpdGUuSnNvblxuICAgIHwgYWN0aW9ucy5Db25zdGFudFBvb2wuSnNvblxuICAgIHwgYWN0aW9ucy5EZWNyZW1lbnQuSnNvblxuICAgIHwgYWN0aW9ucy5EZWZpbmVGdW5jdGlvbi5Kc29uXG4gICAgfCBhY3Rpb25zLkRlZmluZUZ1bmN0aW9uMi5Kc29uXG4gICAgfCBhY3Rpb25zLkRlZmluZUxvY2FsLkpzb25cbiAgICB8IGFjdGlvbnMuRGVmaW5lTG9jYWwyLkpzb25cbiAgICB8IGFjdGlvbnMuRGVsZXRlLkpzb25cbiAgICB8IGFjdGlvbnMuRGVsZXRlMi5Kc29uXG4gICAgfCBhY3Rpb25zLkRpdmlkZS5Kc29uXG4gICAgfCBhY3Rpb25zLkVuZERyYWcuSnNvblxuICAgIHwgYWN0aW9ucy5FbnVtZXJhdGUuSnNvblxuICAgIHwgYWN0aW9ucy5FbnVtZXJhdGUyLkpzb25cbiAgICB8IGFjdGlvbnMuRXF1YWxzLkpzb25cbiAgICB8IGFjdGlvbnMuRXF1YWxzMi5Kc29uXG4gICAgfCBhY3Rpb25zLkV4dGVuZHMuSnNvblxuICAgIHwgYWN0aW9ucy5Gc0NvbW1hbmQyLkpzb25cbiAgICB8IGFjdGlvbnMuR2V0TWVtYmVyLkpzb25cbiAgICB8IGFjdGlvbnMuR2V0UHJvcGVydHkuSnNvblxuICAgIHwgYWN0aW9ucy5HZXRUaW1lLkpzb25cbiAgICB8IGFjdGlvbnMuR2V0VXJsLkpzb25cbiAgICB8IGFjdGlvbnMuR2V0VXJsMi5Kc29uXG4gICAgfCBhY3Rpb25zLkdldFZhcmlhYmxlLkpzb25cbiAgICB8IGFjdGlvbnMuR290b0ZyYW1lLkpzb25cbiAgICB8IGFjdGlvbnMuR290b0ZyYW1lMi5Kc29uXG4gICAgfCBhY3Rpb25zLkdvdG9MYWJlbC5Kc29uXG4gICAgfCBhY3Rpb25zLkdyZWF0ZXIuSnNvblxuICAgIHwgYWN0aW9ucy5JZi5Kc29uXG4gICAgfCBhY3Rpb25zLkltcGxlbWVudHNPcC5Kc29uXG4gICAgfCBhY3Rpb25zLkluY3JlbWVudC5Kc29uXG4gICAgfCBhY3Rpb25zLkluaXRBcnJheS5Kc29uXG4gICAgfCBhY3Rpb25zLkluaXRPYmplY3QuSnNvblxuICAgIHwgYWN0aW9ucy5JbnN0YW5jZU9mLkpzb25cbiAgICB8IGFjdGlvbnMuSnVtcC5Kc29uXG4gICAgfCBhY3Rpb25zLkxlc3MuSnNvblxuICAgIHwgYWN0aW9ucy5MZXNzMi5Kc29uXG4gICAgfCBhY3Rpb25zLk1iQXNjaWlUb0NoYXIuSnNvblxuICAgIHwgYWN0aW9ucy5NYkNoYXJUb0FzY2lpLkpzb25cbiAgICB8IGFjdGlvbnMuTWJTdHJpbmdFeHRyYWN0Lkpzb25cbiAgICB8IGFjdGlvbnMuTWJTdHJpbmdMZW5ndGguSnNvblxuICAgIHwgYWN0aW9ucy5Nb2R1bG8uSnNvblxuICAgIHwgYWN0aW9ucy5NdWx0aXBseS5Kc29uXG4gICAgfCBhY3Rpb25zLk5ld01ldGhvZC5Kc29uXG4gICAgfCBhY3Rpb25zLk5ld09iamVjdC5Kc29uXG4gICAgfCBhY3Rpb25zLk5leHRGcmFtZS5Kc29uXG4gICAgfCBhY3Rpb25zLk5vdC5Kc29uXG4gICAgfCBhY3Rpb25zLk9yLkpzb25cbiAgICB8IGFjdGlvbnMuUGxheS5Kc29uXG4gICAgfCBhY3Rpb25zLlBvcC5Kc29uXG4gICAgfCBhY3Rpb25zLlByZXZpb3VzRnJhbWUuSnNvblxuICAgIHwgYWN0aW9ucy5QdXNoLkpzb25cbiAgICB8IGFjdGlvbnMuUHVzaER1cGxpY2F0ZS5Kc29uXG4gICAgfCBhY3Rpb25zLlJhbmRvbU51bWJlci5Kc29uXG4gICAgfCBhY3Rpb25zLlJlbW92ZVNwcml0ZS5Kc29uXG4gICAgfCBhY3Rpb25zLlJldHVybi5Kc29uXG4gICAgfCBhY3Rpb25zLlNldE1lbWJlci5Kc29uXG4gICAgfCBhY3Rpb25zLlNldFByb3BlcnR5Lkpzb25cbiAgICB8IGFjdGlvbnMuU2V0VGFyZ2V0Lkpzb25cbiAgICB8IGFjdGlvbnMuU2V0VGFyZ2V0Mi5Kc29uXG4gICAgfCBhY3Rpb25zLlNldFZhcmlhYmxlLkpzb25cbiAgICB8IGFjdGlvbnMuU3RhY2tTd2FwLkpzb25cbiAgICB8IGFjdGlvbnMuU3RhcnREcmFnLkpzb25cbiAgICB8IGFjdGlvbnMuU3RvcC5Kc29uXG4gICAgfCBhY3Rpb25zLlN0b3BTb3VuZHMuSnNvblxuICAgIHwgYWN0aW9ucy5TdG9yZVJlZ2lzdGVyLkpzb25cbiAgICB8IGFjdGlvbnMuU3RyaWN0RXF1YWxzLkpzb25cbiAgICB8IGFjdGlvbnMuU3RyaWN0TW9kZS5Kc29uXG4gICAgfCBhY3Rpb25zLlN0cmluZ0FkZC5Kc29uXG4gICAgfCBhY3Rpb25zLlN0cmluZ0VxdWFscy5Kc29uXG4gICAgfCBhY3Rpb25zLlN0cmluZ0V4dHJhY3QuSnNvblxuICAgIHwgYWN0aW9ucy5TdHJpbmdHcmVhdGVyLkpzb25cbiAgICB8IGFjdGlvbnMuU3RyaW5nTGVuZ3RoLkpzb25cbiAgICB8IGFjdGlvbnMuU3RyaW5nTGVzcy5Kc29uXG4gICAgfCBhY3Rpb25zLlN1YnRyYWN0Lkpzb25cbiAgICB8IGFjdGlvbnMuVGFyZ2V0UGF0aC5Kc29uXG4gICAgfCBhY3Rpb25zLlRocm93Lkpzb25cbiAgICB8IGFjdGlvbnMuVG9nZ2xlUXVhbGl0eS5Kc29uXG4gICAgfCBhY3Rpb25zLlRvSW50ZWdlci5Kc29uXG4gICAgfCBhY3Rpb25zLlRvTnVtYmVyLkpzb25cbiAgICB8IGFjdGlvbnMuVG9TdHJpbmcuSnNvblxuICAgIHwgYWN0aW9ucy5UcmFjZS5Kc29uXG4gICAgfCBhY3Rpb25zLlRyeS5Kc29uXG4gICAgfCBhY3Rpb25zLlR5cGVPZi5Kc29uXG4gICAgfCBhY3Rpb25zLldhaXRGb3JGcmFtZS5Kc29uXG4gICAgfCBhY3Rpb25zLldhaXRGb3JGcmFtZTIuSnNvblxuICAgIHwgYWN0aW9ucy5XaXRoLkpzb247XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IFRhZ2dlZFVuaW9uVHlwZTxBY3Rpb24+ID0gT2JqZWN0LmFzc2lnbigkQWN0aW9uLnR5cGUsIG5ldyBUYWdnZWRVbmlvblR5cGU8QWN0aW9uPih7XG4gICAgdmFyaWFudHM6IFtcbiAgICAgIGFjdGlvbnMuVW5rbm93bi50eXBlLFxuICAgICAgYWN0aW9ucy5BZGQudHlwZSxcbiAgICAgIGFjdGlvbnMuQWRkMi50eXBlLFxuICAgICAgYWN0aW9ucy5BbmQudHlwZSxcbiAgICAgIGFjdGlvbnMuQXNjaWlUb0NoYXIudHlwZSxcbiAgICAgIGFjdGlvbnMuQml0QW5kLnR5cGUsXG4gICAgICBhY3Rpb25zLkJpdExTaGlmdC50eXBlLFxuICAgICAgYWN0aW9ucy5CaXRPci50eXBlLFxuICAgICAgYWN0aW9ucy5CaXRSU2hpZnQudHlwZSxcbiAgICAgIGFjdGlvbnMuQml0VVJTaGlmdC50eXBlLFxuICAgICAgYWN0aW9ucy5CaXRYb3IudHlwZSxcbiAgICAgIGFjdGlvbnMuQ2FsbC50eXBlLFxuICAgICAgYWN0aW9ucy5DYWxsRnVuY3Rpb24udHlwZSxcbiAgICAgIGFjdGlvbnMuQ2FsbE1ldGhvZC50eXBlLFxuICAgICAgYWN0aW9ucy5DYXN0T3AudHlwZSxcbiAgICAgIGFjdGlvbnMuQ2hhclRvQXNjaWkudHlwZSxcbiAgICAgIGFjdGlvbnMuQ2xvbmVTcHJpdGUudHlwZSxcbiAgICAgIGFjdGlvbnMuQ29uc3RhbnRQb29sLnR5cGUsXG4gICAgICBhY3Rpb25zLkRlY3JlbWVudC50eXBlLFxuICAgICAgYWN0aW9ucy5EZWZpbmVGdW5jdGlvbi50eXBlLFxuICAgICAgYWN0aW9ucy5EZWZpbmVGdW5jdGlvbjIudHlwZSxcbiAgICAgIGFjdGlvbnMuRGVmaW5lTG9jYWwudHlwZSxcbiAgICAgIGFjdGlvbnMuRGVmaW5lTG9jYWwyLnR5cGUsXG4gICAgICBhY3Rpb25zLkRlbGV0ZS50eXBlLFxuICAgICAgYWN0aW9ucy5EZWxldGUyLnR5cGUsXG4gICAgICBhY3Rpb25zLkRpdmlkZS50eXBlLFxuICAgICAgYWN0aW9ucy5FbmREcmFnLnR5cGUsXG4gICAgICBhY3Rpb25zLkVudW1lcmF0ZS50eXBlLFxuICAgICAgYWN0aW9ucy5FbnVtZXJhdGUyLnR5cGUsXG4gICAgICBhY3Rpb25zLkVxdWFscy50eXBlLFxuICAgICAgYWN0aW9ucy5FcXVhbHMyLnR5cGUsXG4gICAgICBhY3Rpb25zLkV4dGVuZHMudHlwZSxcbiAgICAgIGFjdGlvbnMuRnNDb21tYW5kMi50eXBlLFxuICAgICAgYWN0aW9ucy5HZXRNZW1iZXIudHlwZSxcbiAgICAgIGFjdGlvbnMuR2V0UHJvcGVydHkudHlwZSxcbiAgICAgIGFjdGlvbnMuR2V0VGltZS50eXBlLFxuICAgICAgYWN0aW9ucy5HZXRVcmwudHlwZSxcbiAgICAgIGFjdGlvbnMuR2V0VXJsMi50eXBlLFxuICAgICAgYWN0aW9ucy5HZXRWYXJpYWJsZS50eXBlLFxuICAgICAgYWN0aW9ucy5Hb3RvRnJhbWUudHlwZSxcbiAgICAgIGFjdGlvbnMuR290b0ZyYW1lMi50eXBlLFxuICAgICAgYWN0aW9ucy5Hb3RvTGFiZWwudHlwZSxcbiAgICAgIGFjdGlvbnMuR3JlYXRlci50eXBlLFxuICAgICAgYWN0aW9ucy5JZi50eXBlLFxuICAgICAgYWN0aW9ucy5JbXBsZW1lbnRzT3AudHlwZSxcbiAgICAgIGFjdGlvbnMuSW5jcmVtZW50LnR5cGUsXG4gICAgICBhY3Rpb25zLkluaXRBcnJheS50eXBlLFxuICAgICAgYWN0aW9ucy5Jbml0T2JqZWN0LnR5cGUsXG4gICAgICBhY3Rpb25zLkluc3RhbmNlT2YudHlwZSxcbiAgICAgIGFjdGlvbnMuSnVtcC50eXBlLFxuICAgICAgYWN0aW9ucy5MZXNzLnR5cGUsXG4gICAgICBhY3Rpb25zLkxlc3MyLnR5cGUsXG4gICAgICBhY3Rpb25zLk1iQXNjaWlUb0NoYXIudHlwZSxcbiAgICAgIGFjdGlvbnMuTWJDaGFyVG9Bc2NpaS50eXBlLFxuICAgICAgYWN0aW9ucy5NYlN0cmluZ0V4dHJhY3QudHlwZSxcbiAgICAgIGFjdGlvbnMuTWJTdHJpbmdMZW5ndGgudHlwZSxcbiAgICAgIGFjdGlvbnMuTW9kdWxvLnR5cGUsXG4gICAgICBhY3Rpb25zLk11bHRpcGx5LnR5cGUsXG4gICAgICBhY3Rpb25zLk5ld01ldGhvZC50eXBlLFxuICAgICAgYWN0aW9ucy5OZXdPYmplY3QudHlwZSxcbiAgICAgIGFjdGlvbnMuTmV4dEZyYW1lLnR5cGUsXG4gICAgICBhY3Rpb25zLk5vdC50eXBlLFxuICAgICAgYWN0aW9ucy5Pci50eXBlLFxuICAgICAgYWN0aW9ucy5QbGF5LnR5cGUsXG4gICAgICBhY3Rpb25zLlBvcC50eXBlLFxuICAgICAgYWN0aW9ucy5QcmV2aW91c0ZyYW1lLnR5cGUsXG4gICAgICBhY3Rpb25zLlB1c2gudHlwZSxcbiAgICAgIGFjdGlvbnMuUHVzaER1cGxpY2F0ZS50eXBlLFxuICAgICAgYWN0aW9ucy5SYW5kb21OdW1iZXIudHlwZSxcbiAgICAgIGFjdGlvbnMuUmVtb3ZlU3ByaXRlLnR5cGUsXG4gICAgICBhY3Rpb25zLlJldHVybi50eXBlLFxuICAgICAgYWN0aW9ucy5TZXRNZW1iZXIudHlwZSxcbiAgICAgIGFjdGlvbnMuU2V0UHJvcGVydHkudHlwZSxcbiAgICAgIGFjdGlvbnMuU2V0VGFyZ2V0LnR5cGUsXG4gICAgICBhY3Rpb25zLlNldFRhcmdldDIudHlwZSxcbiAgICAgIGFjdGlvbnMuU2V0VmFyaWFibGUudHlwZSxcbiAgICAgIGFjdGlvbnMuU3RhY2tTd2FwLnR5cGUsXG4gICAgICBhY3Rpb25zLlN0YXJ0RHJhZy50eXBlLFxuICAgICAgYWN0aW9ucy5TdG9wLnR5cGUsXG4gICAgICBhY3Rpb25zLlN0b3BTb3VuZHMudHlwZSxcbiAgICAgIGFjdGlvbnMuU3RvcmVSZWdpc3Rlci50eXBlLFxuICAgICAgYWN0aW9ucy5TdHJpY3RFcXVhbHMudHlwZSxcbiAgICAgIGFjdGlvbnMuU3RyaWN0TW9kZS50eXBlLFxuICAgICAgYWN0aW9ucy5TdHJpbmdBZGQudHlwZSxcbiAgICAgIGFjdGlvbnMuU3RyaW5nRXF1YWxzLnR5cGUsXG4gICAgICBhY3Rpb25zLlN0cmluZ0V4dHJhY3QudHlwZSxcbiAgICAgIGFjdGlvbnMuU3RyaW5nR3JlYXRlci50eXBlLFxuICAgICAgYWN0aW9ucy5TdHJpbmdMZW5ndGgudHlwZSxcbiAgICAgIGFjdGlvbnMuU3RyaW5nTGVzcy50eXBlLFxuICAgICAgYWN0aW9ucy5TdWJ0cmFjdC50eXBlLFxuICAgICAgYWN0aW9ucy5UYXJnZXRQYXRoLnR5cGUsXG4gICAgICBhY3Rpb25zLlRocm93LnR5cGUsXG4gICAgICBhY3Rpb25zLlRvZ2dsZVF1YWxpdHkudHlwZSxcbiAgICAgIGFjdGlvbnMuVG9JbnRlZ2VyLnR5cGUsXG4gICAgICBhY3Rpb25zLlRvTnVtYmVyLnR5cGUsXG4gICAgICBhY3Rpb25zLlRvU3RyaW5nLnR5cGUsXG4gICAgICBhY3Rpb25zLlRyYWNlLnR5cGUsXG4gICAgICBhY3Rpb25zLlRyeS50eXBlLFxuICAgICAgYWN0aW9ucy5UeXBlT2YudHlwZSxcbiAgICAgIGFjdGlvbnMuV2FpdEZvckZyYW1lLnR5cGUsXG4gICAgICBhY3Rpb25zLldhaXRGb3JGcmFtZTIudHlwZSxcbiAgICAgIGFjdGlvbnMuV2l0aC50eXBlLFxuICAgIF0sXG4gICAgdGFnOiBcImFjdGlvblwiLFxuICB9KSk7XG59XG4iXX0=


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__; /*!
  * https://github.com/paulmillr/es6-shim
  * @license es6-shim Copyright 2013-2016 by Paul Miller (http://paulmillr.com)
  *   and contributors,  MIT License
  * es6-shim: v0.35.1
  * see https://github.com/paulmillr/es6-shim/blob/0.35.1/LICENSE
  * Details and documentation:
  * https://github.com/paulmillr/es6-shim/
  */

// UMD (Universal Module Definition)
// see https://github.com/umdjs/umd/blob/master/returnExports.js
(function (root, factory) {
  /*global define, module, exports */
  if (true) {
    // AMD. Register as an anonymous module.
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory();
  } else {
    // Browser globals (root is window)
    root.returnExports = factory();
  }
}(this, function () {
  'use strict';

  var _apply = Function.call.bind(Function.apply);
  var _call = Function.call.bind(Function.call);
  var isArray = Array.isArray;
  var keys = Object.keys;

  var not = function notThunker(func) {
    return function notThunk() {
      return !_apply(func, this, arguments);
    };
  };
  var throwsError = function (func) {
    try {
      func();
      return false;
    } catch (e) {
      return true;
    }
  };
  var valueOrFalseIfThrows = function valueOrFalseIfThrows(func) {
    try {
      return func();
    } catch (e) {
      return false;
    }
  };

  var isCallableWithoutNew = not(throwsError);
  var arePropertyDescriptorsSupported = function () {
    // if Object.defineProperty exists but throws, it's IE 8
    return !throwsError(function () {
      Object.defineProperty({}, 'x', { get: function () {} });
    });
  };
  var supportsDescriptors = !!Object.defineProperty && arePropertyDescriptorsSupported();
  var functionsHaveNames = (function foo() {}).name === 'foo'; // eslint-disable-line no-extra-parens

  var _forEach = Function.call.bind(Array.prototype.forEach);
  var _reduce = Function.call.bind(Array.prototype.reduce);
  var _filter = Function.call.bind(Array.prototype.filter);
  var _some = Function.call.bind(Array.prototype.some);

  var defineProperty = function (object, name, value, force) {
    if (!force && name in object) { return; }
    if (supportsDescriptors) {
      Object.defineProperty(object, name, {
        configurable: true,
        enumerable: false,
        writable: true,
        value: value
      });
    } else {
      object[name] = value;
    }
  };

  // Define configurable, writable and non-enumerable props
  // if they don’t exist.
  var defineProperties = function (object, map, forceOverride) {
    _forEach(keys(map), function (name) {
      var method = map[name];
      defineProperty(object, name, method, !!forceOverride);
    });
  };

  var _toString = Function.call.bind(Object.prototype.toString);
  var isCallable =  false ? function IsCallableSlow(x) {
    // Some old browsers (IE, FF) say that typeof /abc/ === 'function'
    return typeof x === 'function' && _toString(x) === '[object Function]';
  } : function IsCallableFast(x) { return typeof x === 'function'; };

  var Value = {
    getter: function (object, name, getter) {
      if (!supportsDescriptors) {
        throw new TypeError('getters require true ES5 support');
      }
      Object.defineProperty(object, name, {
        configurable: true,
        enumerable: false,
        get: getter
      });
    },
    proxy: function (originalObject, key, targetObject) {
      if (!supportsDescriptors) {
        throw new TypeError('getters require true ES5 support');
      }
      var originalDescriptor = Object.getOwnPropertyDescriptor(originalObject, key);
      Object.defineProperty(targetObject, key, {
        configurable: originalDescriptor.configurable,
        enumerable: originalDescriptor.enumerable,
        get: function getKey() { return originalObject[key]; },
        set: function setKey(value) { originalObject[key] = value; }
      });
    },
    redefine: function (object, property, newValue) {
      if (supportsDescriptors) {
        var descriptor = Object.getOwnPropertyDescriptor(object, property);
        descriptor.value = newValue;
        Object.defineProperty(object, property, descriptor);
      } else {
        object[property] = newValue;
      }
    },
    defineByDescriptor: function (object, property, descriptor) {
      if (supportsDescriptors) {
        Object.defineProperty(object, property, descriptor);
      } else if ('value' in descriptor) {
        object[property] = descriptor.value;
      }
    },
    preserveToString: function (target, source) {
      if (source && isCallable(source.toString)) {
        defineProperty(target, 'toString', source.toString.bind(source), true);
      }
    }
  };

  // Simple shim for Object.create on ES3 browsers
  // (unlike real shim, no attempt to support `prototype === null`)
  var create = Object.create || function (prototype, properties) {
    var Prototype = function Prototype() {};
    Prototype.prototype = prototype;
    var object = new Prototype();
    if (typeof properties !== 'undefined') {
      keys(properties).forEach(function (key) {
        Value.defineByDescriptor(object, key, properties[key]);
      });
    }
    return object;
  };

  var supportsSubclassing = function (C, f) {
    if (!Object.setPrototypeOf) { return false; /* skip test on IE < 11 */ }
    return valueOrFalseIfThrows(function () {
      var Sub = function Subclass(arg) {
        var o = new C(arg);
        Object.setPrototypeOf(o, Subclass.prototype);
        return o;
      };
      Object.setPrototypeOf(Sub, C);
      Sub.prototype = create(C.prototype, {
        constructor: { value: Sub }
      });
      return f(Sub);
    });
  };

  var getGlobal = function () {
    /* global self, window, global */
    // the only reliable means to get the global object is
    // `Function('return this')()`
    // However, this causes CSP violations in Chrome apps.
    if (typeof self !== 'undefined') { return self; }
    if (typeof window !== 'undefined') { return window; }
    if (typeof global !== 'undefined') { return global; }
    throw new Error('unable to locate global object');
  };

  var globals = getGlobal();
  var globalIsFinite = globals.isFinite;
  var _indexOf = Function.call.bind(String.prototype.indexOf);
  var _arrayIndexOfApply = Function.apply.bind(Array.prototype.indexOf);
  var _concat = Function.call.bind(Array.prototype.concat);
  // var _sort = Function.call.bind(Array.prototype.sort);
  var _strSlice = Function.call.bind(String.prototype.slice);
  var _push = Function.call.bind(Array.prototype.push);
  var _pushApply = Function.apply.bind(Array.prototype.push);
  var _shift = Function.call.bind(Array.prototype.shift);
  var _max = Math.max;
  var _min = Math.min;
  var _floor = Math.floor;
  var _abs = Math.abs;
  var _exp = Math.exp;
  var _log = Math.log;
  var _sqrt = Math.sqrt;
  var _hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);
  var ArrayIterator; // make our implementation private
  var noop = function () {};

  var OrigMap = globals.Map;
  var origMapDelete = OrigMap && OrigMap.prototype['delete'];
  var origMapGet = OrigMap && OrigMap.prototype.get;
  var origMapHas = OrigMap && OrigMap.prototype.has;
  var origMapSet = OrigMap && OrigMap.prototype.set;

  var Symbol = globals.Symbol || {};
  var symbolSpecies = Symbol.species || '@@species';

  var numberIsNaN = Number.isNaN || function isNaN(value) {
    // NaN !== NaN, but they are identical.
    // NaNs are the only non-reflexive value, i.e., if x !== x,
    // then x is NaN.
    // isNaN is broken: it converts its argument to number, so
    // isNaN('foo') => true
    return value !== value;
  };
  var numberIsFinite = Number.isFinite || function isFinite(value) {
    return typeof value === 'number' && globalIsFinite(value);
  };
  var _sign = isCallable(Math.sign) ? Math.sign : function sign(value) {
    var number = Number(value);
    if (number === 0) { return number; }
    if (numberIsNaN(number)) { return number; }
    return number < 0 ? -1 : 1;
  };

  // taken directly from https://github.com/ljharb/is-arguments/blob/master/index.js
  // can be replaced with require('is-arguments') if we ever use a build process instead
  var isStandardArguments = function isArguments(value) {
    return _toString(value) === '[object Arguments]';
  };
  var isLegacyArguments = function isArguments(value) {
    return value !== null &&
      typeof value === 'object' &&
      typeof value.length === 'number' &&
      value.length >= 0 &&
      _toString(value) !== '[object Array]' &&
      _toString(value.callee) === '[object Function]';
  };
  var isArguments = isStandardArguments(arguments) ? isStandardArguments : isLegacyArguments;

  var Type = {
    primitive: function (x) { return x === null || (typeof x !== 'function' && typeof x !== 'object'); },
    string: function (x) { return _toString(x) === '[object String]'; },
    regex: function (x) { return _toString(x) === '[object RegExp]'; },
    symbol: function (x) {
      return typeof globals.Symbol === 'function' && typeof x === 'symbol';
    }
  };

  var overrideNative = function overrideNative(object, property, replacement) {
    var original = object[property];
    defineProperty(object, property, replacement, true);
    Value.preserveToString(object[property], original);
  };

  // eslint-disable-next-line no-restricted-properties
  var hasSymbols = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' && Type.symbol(Symbol());

  // This is a private name in the es6 spec, equal to '[Symbol.iterator]'
  // we're going to use an arbitrary _-prefixed name to make our shims
  // work properly with each other, even though we don't have full Iterator
  // support.  That is, `Array.from(map.keys())` will work, but we don't
  // pretend to export a "real" Iterator interface.
  var $iterator$ = Type.symbol(Symbol.iterator) ? Symbol.iterator : '_es6-shim iterator_';
  // Firefox ships a partial implementation using the name @@iterator.
  // https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14
  // So use that name if we detect it.
  if (globals.Set && typeof new globals.Set()['@@iterator'] === 'function') {
    $iterator$ = '@@iterator';
  }

  // Reflect
  if (!globals.Reflect) {
    defineProperty(globals, 'Reflect', {}, true);
  }
  var Reflect = globals.Reflect;

  var $String = String;

  /* global document */
  var domAll = (typeof document === 'undefined' || !document) ? null : document.all;
  /* jshint eqnull:true */
  var isNullOrUndefined = domAll == null ? function isNullOrUndefined(x) {
    /* jshint eqnull:true */
    return x == null;
  } : function isNullOrUndefinedAndNotDocumentAll(x) {
    /* jshint eqnull:true */
    return x == null && x !== domAll;
  };

  var ES = {
    // http://www.ecma-international.org/ecma-262/6.0/#sec-call
    Call: function Call(F, V) {
      var args = arguments.length > 2 ? arguments[2] : [];
      if (!ES.IsCallable(F)) {
        throw new TypeError(F + ' is not a function');
      }
      return _apply(F, V, args);
    },

    RequireObjectCoercible: function (x, optMessage) {
      if (isNullOrUndefined(x)) {
        throw new TypeError(optMessage || 'Cannot call method on ' + x);
      }
      return x;
    },

    // This might miss the "(non-standard exotic and does not implement
    // [[Call]])" case from
    // http://www.ecma-international.org/ecma-262/6.0/#sec-typeof-operator-runtime-semantics-evaluation
    // but we can't find any evidence these objects exist in practice.
    // If we find some in the future, you could test `Object(x) === x`,
    // which is reliable according to
    // http://www.ecma-international.org/ecma-262/6.0/#sec-toobject
    // but is not well optimized by runtimes and creates an object
    // whenever it returns false, and thus is very slow.
    TypeIsObject: function (x) {
      if (x === void 0 || x === null || x === true || x === false) {
        return false;
      }
      return typeof x === 'function' || typeof x === 'object' || x === domAll;
    },

    ToObject: function (o, optMessage) {
      return Object(ES.RequireObjectCoercible(o, optMessage));
    },

    IsCallable: isCallable,

    IsConstructor: function (x) {
      // We can't tell callables from constructors in ES5
      return ES.IsCallable(x);
    },

    ToInt32: function (x) {
      return ES.ToNumber(x) >> 0;
    },

    ToUint32: function (x) {
      return ES.ToNumber(x) >>> 0;
    },

    ToNumber: function (value) {
      if (_toString(value) === '[object Symbol]') {
        throw new TypeError('Cannot convert a Symbol value to a number');
      }
      return +value;
    },

    ToInteger: function (value) {
      var number = ES.ToNumber(value);
      if (numberIsNaN(number)) { return 0; }
      if (number === 0 || !numberIsFinite(number)) { return number; }
      return (number > 0 ? 1 : -1) * _floor(_abs(number));
    },

    ToLength: function (value) {
      var len = ES.ToInteger(value);
      if (len <= 0) { return 0; } // includes converting -0 to +0
      if (len > Number.MAX_SAFE_INTEGER) { return Number.MAX_SAFE_INTEGER; }
      return len;
    },

    SameValue: function (a, b) {
      if (a === b) {
        // 0 === -0, but they are not identical.
        if (a === 0) { return 1 / a === 1 / b; }
        return true;
      }
      return numberIsNaN(a) && numberIsNaN(b);
    },

    SameValueZero: function (a, b) {
      // same as SameValue except for SameValueZero(+0, -0) == true
      return (a === b) || (numberIsNaN(a) && numberIsNaN(b));
    },

    IsIterable: function (o) {
      return ES.TypeIsObject(o) && (typeof o[$iterator$] !== 'undefined' || isArguments(o));
    },

    GetIterator: function (o) {
      if (isArguments(o)) {
        // special case support for `arguments`
        return new ArrayIterator(o, 'value');
      }
      var itFn = ES.GetMethod(o, $iterator$);
      if (!ES.IsCallable(itFn)) {
        // Better diagnostics if itFn is null or undefined
        throw new TypeError('value is not an iterable');
      }
      var it = ES.Call(itFn, o);
      if (!ES.TypeIsObject(it)) {
        throw new TypeError('bad iterator');
      }
      return it;
    },

    GetMethod: function (o, p) {
      var func = ES.ToObject(o)[p];
      if (isNullOrUndefined(func)) {
        return void 0;
      }
      if (!ES.IsCallable(func)) {
        throw new TypeError('Method not callable: ' + p);
      }
      return func;
    },

    IteratorComplete: function (iterResult) {
      return !!iterResult.done;
    },

    IteratorClose: function (iterator, completionIsThrow) {
      var returnMethod = ES.GetMethod(iterator, 'return');
      if (returnMethod === void 0) {
        return;
      }
      var innerResult, innerException;
      try {
        innerResult = ES.Call(returnMethod, iterator);
      } catch (e) {
        innerException = e;
      }
      if (completionIsThrow) {
        return;
      }
      if (innerException) {
        throw innerException;
      }
      if (!ES.TypeIsObject(innerResult)) {
        throw new TypeError("Iterator's return method returned a non-object.");
      }
    },

    IteratorNext: function (it) {
      var result = arguments.length > 1 ? it.next(arguments[1]) : it.next();
      if (!ES.TypeIsObject(result)) {
        throw new TypeError('bad iterator');
      }
      return result;
    },

    IteratorStep: function (it) {
      var result = ES.IteratorNext(it);
      var done = ES.IteratorComplete(result);
      return done ? false : result;
    },

    Construct: function (C, args, newTarget, isES6internal) {
      var target = typeof newTarget === 'undefined' ? C : newTarget;

      if (!isES6internal && Reflect.construct) {
        // Try to use Reflect.construct if available
        return Reflect.construct(C, args, target);
      }
      // OK, we have to fake it.  This will only work if the
      // C.[[ConstructorKind]] == "base" -- but that's the only
      // kind we can make in ES5 code anyway.

      // OrdinaryCreateFromConstructor(target, "%ObjectPrototype%")
      var proto = target.prototype;
      if (!ES.TypeIsObject(proto)) {
        proto = Object.prototype;
      }
      var obj = create(proto);
      // Call the constructor.
      var result = ES.Call(C, obj, args);
      return ES.TypeIsObject(result) ? result : obj;
    },

    SpeciesConstructor: function (O, defaultConstructor) {
      var C = O.constructor;
      if (C === void 0) {
        return defaultConstructor;
      }
      if (!ES.TypeIsObject(C)) {
        throw new TypeError('Bad constructor');
      }
      var S = C[symbolSpecies];
      if (isNullOrUndefined(S)) {
        return defaultConstructor;
      }
      if (!ES.IsConstructor(S)) {
        throw new TypeError('Bad @@species');
      }
      return S;
    },

    CreateHTML: function (string, tag, attribute, value) {
      var S = ES.ToString(string);
      var p1 = '<' + tag;
      if (attribute !== '') {
        var V = ES.ToString(value);
        var escapedV = V.replace(/"/g, '&quot;');
        p1 += ' ' + attribute + '="' + escapedV + '"';
      }
      var p2 = p1 + '>';
      var p3 = p2 + S;
      return p3 + '</' + tag + '>';
    },

    IsRegExp: function IsRegExp(argument) {
      if (!ES.TypeIsObject(argument)) {
        return false;
      }
      var isRegExp = argument[Symbol.match];
      if (typeof isRegExp !== 'undefined') {
        return !!isRegExp;
      }
      return Type.regex(argument);
    },

    ToString: function ToString(string) {
      return $String(string);
    }
  };

  // Well-known Symbol shims
  if (supportsDescriptors && hasSymbols) {
    var defineWellKnownSymbol = function defineWellKnownSymbol(name) {
      if (Type.symbol(Symbol[name])) {
        return Symbol[name];
      }
      // eslint-disable-next-line no-restricted-properties
      var sym = Symbol['for']('Symbol.' + name);
      Object.defineProperty(Symbol, name, {
        configurable: false,
        enumerable: false,
        writable: false,
        value: sym
      });
      return sym;
    };
    if (!Type.symbol(Symbol.search)) {
      var symbolSearch = defineWellKnownSymbol('search');
      var originalSearch = String.prototype.search;
      defineProperty(RegExp.prototype, symbolSearch, function search(string) {
        return ES.Call(originalSearch, string, [this]);
      });
      var searchShim = function search(regexp) {
        var O = ES.RequireObjectCoercible(this);
        if (!isNullOrUndefined(regexp)) {
          var searcher = ES.GetMethod(regexp, symbolSearch);
          if (typeof searcher !== 'undefined') {
            return ES.Call(searcher, regexp, [O]);
          }
        }
        return ES.Call(originalSearch, O, [ES.ToString(regexp)]);
      };
      overrideNative(String.prototype, 'search', searchShim);
    }
    if (!Type.symbol(Symbol.replace)) {
      var symbolReplace = defineWellKnownSymbol('replace');
      var originalReplace = String.prototype.replace;
      defineProperty(RegExp.prototype, symbolReplace, function replace(string, replaceValue) {
        return ES.Call(originalReplace, string, [this, replaceValue]);
      });
      var replaceShim = function replace(searchValue, replaceValue) {
        var O = ES.RequireObjectCoercible(this);
        if (!isNullOrUndefined(searchValue)) {
          var replacer = ES.GetMethod(searchValue, symbolReplace);
          if (typeof replacer !== 'undefined') {
            return ES.Call(replacer, searchValue, [O, replaceValue]);
          }
        }
        return ES.Call(originalReplace, O, [ES.ToString(searchValue), replaceValue]);
      };
      overrideNative(String.prototype, 'replace', replaceShim);
    }
    if (!Type.symbol(Symbol.split)) {
      var symbolSplit = defineWellKnownSymbol('split');
      var originalSplit = String.prototype.split;
      defineProperty(RegExp.prototype, symbolSplit, function split(string, limit) {
        return ES.Call(originalSplit, string, [this, limit]);
      });
      var splitShim = function split(separator, limit) {
        var O = ES.RequireObjectCoercible(this);
        if (!isNullOrUndefined(separator)) {
          var splitter = ES.GetMethod(separator, symbolSplit);
          if (typeof splitter !== 'undefined') {
            return ES.Call(splitter, separator, [O, limit]);
          }
        }
        return ES.Call(originalSplit, O, [ES.ToString(separator), limit]);
      };
      overrideNative(String.prototype, 'split', splitShim);
    }
    var symbolMatchExists = Type.symbol(Symbol.match);
    var stringMatchIgnoresSymbolMatch = symbolMatchExists && (function () {
      // Firefox 41, through Nightly 45 has Symbol.match, but String#match ignores it.
      // Firefox 40 and below have Symbol.match but String#match works fine.
      var o = {};
      o[Symbol.match] = function () { return 42; };
      return 'a'.match(o) !== 42;
    }());
    if (!symbolMatchExists || stringMatchIgnoresSymbolMatch) {
      var symbolMatch = defineWellKnownSymbol('match');

      var originalMatch = String.prototype.match;
      defineProperty(RegExp.prototype, symbolMatch, function match(string) {
        return ES.Call(originalMatch, string, [this]);
      });

      var matchShim = function match(regexp) {
        var O = ES.RequireObjectCoercible(this);
        if (!isNullOrUndefined(regexp)) {
          var matcher = ES.GetMethod(regexp, symbolMatch);
          if (typeof matcher !== 'undefined') {
            return ES.Call(matcher, regexp, [O]);
          }
        }
        return ES.Call(originalMatch, O, [ES.ToString(regexp)]);
      };
      overrideNative(String.prototype, 'match', matchShim);
    }
  }

  var wrapConstructor = function wrapConstructor(original, replacement, keysToSkip) {
    Value.preserveToString(replacement, original);
    if (Object.setPrototypeOf) {
      // sets up proper prototype chain where possible
      Object.setPrototypeOf(original, replacement);
    }
    if (supportsDescriptors) {
      _forEach(Object.getOwnPropertyNames(original), function (key) {
        if (key in noop || keysToSkip[key]) { return; }
        Value.proxy(original, key, replacement);
      });
    } else {
      _forEach(Object.keys(original), function (key) {
        if (key in noop || keysToSkip[key]) { return; }
        replacement[key] = original[key];
      });
    }
    replacement.prototype = original.prototype;
    Value.redefine(original.prototype, 'constructor', replacement);
  };

  var defaultSpeciesGetter = function () { return this; };
  var addDefaultSpecies = function (C) {
    if (supportsDescriptors && !_hasOwnProperty(C, symbolSpecies)) {
      Value.getter(C, symbolSpecies, defaultSpeciesGetter);
    }
  };

  var addIterator = function (prototype, impl) {
    var implementation = impl || function iterator() { return this; };
    defineProperty(prototype, $iterator$, implementation);
    if (!prototype[$iterator$] && Type.symbol($iterator$)) {
      // implementations are buggy when $iterator$ is a Symbol
      prototype[$iterator$] = implementation;
    }
  };

  var createDataProperty = function createDataProperty(object, name, value) {
    if (supportsDescriptors) {
      Object.defineProperty(object, name, {
        configurable: true,
        enumerable: true,
        writable: true,
        value: value
      });
    } else {
      object[name] = value;
    }
  };
  var createDataPropertyOrThrow = function createDataPropertyOrThrow(object, name, value) {
    createDataProperty(object, name, value);
    if (!ES.SameValue(object[name], value)) {
      throw new TypeError('property is nonconfigurable');
    }
  };

  var emulateES6construct = function (o, defaultNewTarget, defaultProto, slots) {
    // This is an es5 approximation to es6 construct semantics.  in es6,
    // 'new Foo' invokes Foo.[[Construct]] which (for almost all objects)
    // just sets the internal variable NewTarget (in es6 syntax `new.target`)
    // to Foo and then returns Foo().

    // Many ES6 object then have constructors of the form:
    // 1. If NewTarget is undefined, throw a TypeError exception
    // 2. Let xxx by OrdinaryCreateFromConstructor(NewTarget, yyy, zzz)

    // So we're going to emulate those first two steps.
    if (!ES.TypeIsObject(o)) {
      throw new TypeError('Constructor requires `new`: ' + defaultNewTarget.name);
    }
    var proto = defaultNewTarget.prototype;
    if (!ES.TypeIsObject(proto)) {
      proto = defaultProto;
    }
    var obj = create(proto);
    for (var name in slots) {
      if (_hasOwnProperty(slots, name)) {
        var value = slots[name];
        defineProperty(obj, name, value, true);
      }
    }
    return obj;
  };

  // Firefox 31 reports this function's length as 0
  // https://bugzilla.mozilla.org/show_bug.cgi?id=1062484
  if (String.fromCodePoint && String.fromCodePoint.length !== 1) {
    var originalFromCodePoint = String.fromCodePoint;
    overrideNative(String, 'fromCodePoint', function fromCodePoint(codePoints) {
      return ES.Call(originalFromCodePoint, this, arguments);
    });
  }

  var StringShims = {
    fromCodePoint: function fromCodePoint(codePoints) {
      var result = [];
      var next;
      for (var i = 0, length = arguments.length; i < length; i++) {
        next = Number(arguments[i]);
        if (!ES.SameValue(next, ES.ToInteger(next)) || next < 0 || next > 0x10FFFF) {
          throw new RangeError('Invalid code point ' + next);
        }

        if (next < 0x10000) {
          _push(result, String.fromCharCode(next));
        } else {
          next -= 0x10000;
          _push(result, String.fromCharCode((next >> 10) + 0xD800));
          _push(result, String.fromCharCode((next % 0x400) + 0xDC00));
        }
      }
      return result.join('');
    },

    raw: function raw(callSite) {
      var cooked = ES.ToObject(callSite, 'bad callSite');
      var rawString = ES.ToObject(cooked.raw, 'bad raw value');
      var len = rawString.length;
      var literalsegments = ES.ToLength(len);
      if (literalsegments <= 0) {
        return '';
      }

      var stringElements = [];
      var nextIndex = 0;
      var nextKey, next, nextSeg, nextSub;
      while (nextIndex < literalsegments) {
        nextKey = ES.ToString(nextIndex);
        nextSeg = ES.ToString(rawString[nextKey]);
        _push(stringElements, nextSeg);
        if (nextIndex + 1 >= literalsegments) {
          break;
        }
        next = nextIndex + 1 < arguments.length ? arguments[nextIndex + 1] : '';
        nextSub = ES.ToString(next);
        _push(stringElements, nextSub);
        nextIndex += 1;
      }
      return stringElements.join('');
    }
  };
  if (String.raw && String.raw({ raw: { 0: 'x', 1: 'y', length: 2 } }) !== 'xy') {
    // IE 11 TP has a broken String.raw implementation
    overrideNative(String, 'raw', StringShims.raw);
  }
  defineProperties(String, StringShims);

  // Fast repeat, uses the `Exponentiation by squaring` algorithm.
  // Perf: http://jsperf.com/string-repeat2/2
  var stringRepeat = function repeat(s, times) {
    if (times < 1) { return ''; }
    if (times % 2) { return repeat(s, times - 1) + s; }
    var half = repeat(s, times / 2);
    return half + half;
  };
  var stringMaxLength = Infinity;

  var StringPrototypeShims = {
    repeat: function repeat(times) {
      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));
      var numTimes = ES.ToInteger(times);
      if (numTimes < 0 || numTimes >= stringMaxLength) {
        throw new RangeError('repeat count must be less than infinity and not overflow maximum string size');
      }
      return stringRepeat(thisStr, numTimes);
    },

    startsWith: function startsWith(searchString) {
      var S = ES.ToString(ES.RequireObjectCoercible(this));
      if (ES.IsRegExp(searchString)) {
        throw new TypeError('Cannot call method "startsWith" with a regex');
      }
      var searchStr = ES.ToString(searchString);
      var position;
      if (arguments.length > 1) {
        position = arguments[1];
      }
      var start = _max(ES.ToInteger(position), 0);
      return _strSlice(S, start, start + searchStr.length) === searchStr;
    },

    endsWith: function endsWith(searchString) {
      var S = ES.ToString(ES.RequireObjectCoercible(this));
      if (ES.IsRegExp(searchString)) {
        throw new TypeError('Cannot call method "endsWith" with a regex');
      }
      var searchStr = ES.ToString(searchString);
      var len = S.length;
      var endPosition;
      if (arguments.length > 1) {
        endPosition = arguments[1];
      }
      var pos = typeof endPosition === 'undefined' ? len : ES.ToInteger(endPosition);
      var end = _min(_max(pos, 0), len);
      return _strSlice(S, end - searchStr.length, end) === searchStr;
    },

    includes: function includes(searchString) {
      if (ES.IsRegExp(searchString)) {
        throw new TypeError('"includes" does not accept a RegExp');
      }
      var searchStr = ES.ToString(searchString);
      var position;
      if (arguments.length > 1) {
        position = arguments[1];
      }
      // Somehow this trick makes method 100% compat with the spec.
      return _indexOf(this, searchStr, position) !== -1;
    },

    codePointAt: function codePointAt(pos) {
      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));
      var position = ES.ToInteger(pos);
      var length = thisStr.length;
      if (position >= 0 && position < length) {
        var first = thisStr.charCodeAt(position);
        var isEnd = position + 1 === length;
        if (first < 0xD800 || first > 0xDBFF || isEnd) { return first; }
        var second = thisStr.charCodeAt(position + 1);
        if (second < 0xDC00 || second > 0xDFFF) { return first; }
        return ((first - 0xD800) * 1024) + (second - 0xDC00) + 0x10000;
      }
    }
  };
  if (String.prototype.includes && 'a'.includes('a', Infinity) !== false) {
    overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);
  }

  if (String.prototype.startsWith && String.prototype.endsWith) {
    var startsWithRejectsRegex = throwsError(function () {
      /* throws if spec-compliant */
      '/a/'.startsWith(/a/);
    });
    var startsWithHandlesInfinity = valueOrFalseIfThrows(function () {
      return 'abc'.startsWith('a', Infinity) === false;
    });
    if (!startsWithRejectsRegex || !startsWithHandlesInfinity) {
      // Firefox (< 37?) and IE 11 TP have a noncompliant startsWith implementation
      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);
      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);
    }
  }
  if (hasSymbols) {
    var startsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {
      var re = /a/;
      re[Symbol.match] = false;
      return '/a/'.startsWith(re);
    });
    if (!startsWithSupportsSymbolMatch) {
      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);
    }
    var endsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {
      var re = /a/;
      re[Symbol.match] = false;
      return '/a/'.endsWith(re);
    });
    if (!endsWithSupportsSymbolMatch) {
      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);
    }
    var includesSupportsSymbolMatch = valueOrFalseIfThrows(function () {
      var re = /a/;
      re[Symbol.match] = false;
      return '/a/'.includes(re);
    });
    if (!includesSupportsSymbolMatch) {
      overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);
    }
  }

  defineProperties(String.prototype, StringPrototypeShims);

  // whitespace from: http://es5.github.io/#x15.5.4.20
  // implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324
  var ws = [
    '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003',
    '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028',
    '\u2029\uFEFF'
  ].join('');
  var trimRegexp = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');
  var trimShim = function trim() {
    return ES.ToString(ES.RequireObjectCoercible(this)).replace(trimRegexp, '');
  };
  var nonWS = ['\u0085', '\u200b', '\ufffe'].join('');
  var nonWSregex = new RegExp('[' + nonWS + ']', 'g');
  var isBadHexRegex = /^[-+]0x[0-9a-f]+$/i;
  var hasStringTrimBug = nonWS.trim().length !== nonWS.length;
  defineProperty(String.prototype, 'trim', trimShim, hasStringTrimBug);

  // Given an argument x, it will return an IteratorResult object,
  // with value set to x and done to false.
  // Given no arguments, it will return an iterator completion object.
  var iteratorResult = function (x) {
    return { value: x, done: arguments.length === 0 };
  };

  // see http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype-@@iterator
  var StringIterator = function (s) {
    ES.RequireObjectCoercible(s);
    this._s = ES.ToString(s);
    this._i = 0;
  };
  StringIterator.prototype.next = function () {
    var s = this._s;
    var i = this._i;
    if (typeof s === 'undefined' || i >= s.length) {
      this._s = void 0;
      return iteratorResult();
    }
    var first = s.charCodeAt(i);
    var second, len;
    if (first < 0xD800 || first > 0xDBFF || (i + 1) === s.length) {
      len = 1;
    } else {
      second = s.charCodeAt(i + 1);
      len = (second < 0xDC00 || second > 0xDFFF) ? 1 : 2;
    }
    this._i = i + len;
    return iteratorResult(s.substr(i, len));
  };
  addIterator(StringIterator.prototype);
  addIterator(String.prototype, function () {
    return new StringIterator(this);
  });

  var ArrayShims = {
    from: function from(items) {
      var C = this;
      var mapFn;
      if (arguments.length > 1) {
        mapFn = arguments[1];
      }
      var mapping, T;
      if (typeof mapFn === 'undefined') {
        mapping = false;
      } else {
        if (!ES.IsCallable(mapFn)) {
          throw new TypeError('Array.from: when provided, the second argument must be a function');
        }
        if (arguments.length > 2) {
          T = arguments[2];
        }
        mapping = true;
      }

      // Note that that Arrays will use ArrayIterator:
      // https://bugs.ecmascript.org/show_bug.cgi?id=2416
      var usingIterator = typeof (isArguments(items) || ES.GetMethod(items, $iterator$)) !== 'undefined';

      var length, result, i;
      if (usingIterator) {
        result = ES.IsConstructor(C) ? Object(new C()) : [];
        var iterator = ES.GetIterator(items);
        var next, nextValue;

        i = 0;
        while (true) {
          next = ES.IteratorStep(iterator);
          if (next === false) {
            break;
          }
          nextValue = next.value;
          try {
            if (mapping) {
              nextValue = typeof T === 'undefined' ? mapFn(nextValue, i) : _call(mapFn, T, nextValue, i);
            }
            result[i] = nextValue;
          } catch (e) {
            ES.IteratorClose(iterator, true);
            throw e;
          }
          i += 1;
        }
        length = i;
      } else {
        var arrayLike = ES.ToObject(items);
        length = ES.ToLength(arrayLike.length);
        result = ES.IsConstructor(C) ? Object(new C(length)) : new Array(length);
        var value;
        for (i = 0; i < length; ++i) {
          value = arrayLike[i];
          if (mapping) {
            value = typeof T === 'undefined' ? mapFn(value, i) : _call(mapFn, T, value, i);
          }
          createDataPropertyOrThrow(result, i, value);
        }
      }

      result.length = length;
      return result;
    },

    of: function of() {
      var len = arguments.length;
      var C = this;
      var A = isArray(C) || !ES.IsCallable(C) ? new Array(len) : ES.Construct(C, [len]);
      for (var k = 0; k < len; ++k) {
        createDataPropertyOrThrow(A, k, arguments[k]);
      }
      A.length = len;
      return A;
    }
  };
  defineProperties(Array, ArrayShims);
  addDefaultSpecies(Array);

  // Our ArrayIterator is private; see
  // https://github.com/paulmillr/es6-shim/issues/252
  ArrayIterator = function (array, kind) {
    this.i = 0;
    this.array = array;
    this.kind = kind;
  };

  defineProperties(ArrayIterator.prototype, {
    next: function () {
      var i = this.i;
      var array = this.array;
      if (!(this instanceof ArrayIterator)) {
        throw new TypeError('Not an ArrayIterator');
      }
      if (typeof array !== 'undefined') {
        var len = ES.ToLength(array.length);
        for (; i < len; i++) {
          var kind = this.kind;
          var retval;
          if (kind === 'key') {
            retval = i;
          } else if (kind === 'value') {
            retval = array[i];
          } else if (kind === 'entry') {
            retval = [i, array[i]];
          }
          this.i = i + 1;
          return iteratorResult(retval);
        }
      }
      this.array = void 0;
      return iteratorResult();
    }
  });
  addIterator(ArrayIterator.prototype);

/*
  var orderKeys = function orderKeys(a, b) {
    var aNumeric = String(ES.ToInteger(a)) === a;
    var bNumeric = String(ES.ToInteger(b)) === b;
    if (aNumeric && bNumeric) {
      return b - a;
    } else if (aNumeric && !bNumeric) {
      return -1;
    } else if (!aNumeric && bNumeric) {
      return 1;
    } else {
      return a.localeCompare(b);
    }
  };

  var getAllKeys = function getAllKeys(object) {
    var ownKeys = [];
    var keys = [];

    for (var key in object) {
      _push(_hasOwnProperty(object, key) ? ownKeys : keys, key);
    }
    _sort(ownKeys, orderKeys);
    _sort(keys, orderKeys);

    return _concat(ownKeys, keys);
  };
  */

  // note: this is positioned here because it depends on ArrayIterator
  var arrayOfSupportsSubclassing = Array.of === ArrayShims.of || (function () {
    // Detects a bug in Webkit nightly r181886
    var Foo = function Foo(len) { this.length = len; };
    Foo.prototype = [];
    var fooArr = Array.of.apply(Foo, [1, 2]);
    return fooArr instanceof Foo && fooArr.length === 2;
  }());
  if (!arrayOfSupportsSubclassing) {
    overrideNative(Array, 'of', ArrayShims.of);
  }

  var ArrayPrototypeShims = {
    copyWithin: function copyWithin(target, start) {
      var o = ES.ToObject(this);
      var len = ES.ToLength(o.length);
      var relativeTarget = ES.ToInteger(target);
      var relativeStart = ES.ToInteger(start);
      var to = relativeTarget < 0 ? _max(len + relativeTarget, 0) : _min(relativeTarget, len);
      var from = relativeStart < 0 ? _max(len + relativeStart, 0) : _min(relativeStart, len);
      var end;
      if (arguments.length > 2) {
        end = arguments[2];
      }
      var relativeEnd = typeof end === 'undefined' ? len : ES.ToInteger(end);
      var finalItem = relativeEnd < 0 ? _max(len + relativeEnd, 0) : _min(relativeEnd, len);
      var count = _min(finalItem - from, len - to);
      var direction = 1;
      if (from < to && to < (from + count)) {
        direction = -1;
        from += count - 1;
        to += count - 1;
      }
      while (count > 0) {
        if (from in o) {
          o[to] = o[from];
        } else {
          delete o[to];
        }
        from += direction;
        to += direction;
        count -= 1;
      }
      return o;
    },

    fill: function fill(value) {
      var start;
      if (arguments.length > 1) {
        start = arguments[1];
      }
      var end;
      if (arguments.length > 2) {
        end = arguments[2];
      }
      var O = ES.ToObject(this);
      var len = ES.ToLength(O.length);
      start = ES.ToInteger(typeof start === 'undefined' ? 0 : start);
      end = ES.ToInteger(typeof end === 'undefined' ? len : end);

      var relativeStart = start < 0 ? _max(len + start, 0) : _min(start, len);
      var relativeEnd = end < 0 ? len + end : end;

      for (var i = relativeStart; i < len && i < relativeEnd; ++i) {
        O[i] = value;
      }
      return O;
    },

    find: function find(predicate) {
      var list = ES.ToObject(this);
      var length = ES.ToLength(list.length);
      if (!ES.IsCallable(predicate)) {
        throw new TypeError('Array#find: predicate must be a function');
      }
      var thisArg = arguments.length > 1 ? arguments[1] : null;
      for (var i = 0, value; i < length; i++) {
        value = list[i];
        if (thisArg) {
          if (_call(predicate, thisArg, value, i, list)) {
            return value;
          }
        } else if (predicate(value, i, list)) {
          return value;
        }
      }
    },

    findIndex: function findIndex(predicate) {
      var list = ES.ToObject(this);
      var length = ES.ToLength(list.length);
      if (!ES.IsCallable(predicate)) {
        throw new TypeError('Array#findIndex: predicate must be a function');
      }
      var thisArg = arguments.length > 1 ? arguments[1] : null;
      for (var i = 0; i < length; i++) {
        if (thisArg) {
          if (_call(predicate, thisArg, list[i], i, list)) {
            return i;
          }
        } else if (predicate(list[i], i, list)) {
          return i;
        }
      }
      return -1;
    },

    keys: function keys() {
      return new ArrayIterator(this, 'key');
    },

    values: function values() {
      return new ArrayIterator(this, 'value');
    },

    entries: function entries() {
      return new ArrayIterator(this, 'entry');
    }
  };
  // Safari 7.1 defines Array#keys and Array#entries natively,
  // but the resulting ArrayIterator objects don't have a "next" method.
  if (Array.prototype.keys && !ES.IsCallable([1].keys().next)) {
    delete Array.prototype.keys;
  }
  if (Array.prototype.entries && !ES.IsCallable([1].entries().next)) {
    delete Array.prototype.entries;
  }

  // Chrome 38 defines Array#keys and Array#entries, and Array#@@iterator, but not Array#values
  if (Array.prototype.keys && Array.prototype.entries && !Array.prototype.values && Array.prototype[$iterator$]) {
    defineProperties(Array.prototype, {
      values: Array.prototype[$iterator$]
    });
    if (Type.symbol(Symbol.unscopables)) {
      Array.prototype[Symbol.unscopables].values = true;
    }
  }
  // Chrome 40 defines Array#values with the incorrect name, although Array#{keys,entries} have the correct name
  if (functionsHaveNames && Array.prototype.values && Array.prototype.values.name !== 'values') {
    var originalArrayPrototypeValues = Array.prototype.values;
    overrideNative(Array.prototype, 'values', function values() { return ES.Call(originalArrayPrototypeValues, this, arguments); });
    defineProperty(Array.prototype, $iterator$, Array.prototype.values, true);
  }
  defineProperties(Array.prototype, ArrayPrototypeShims);

  if (1 / [true].indexOf(true, -0) < 0) {
    // indexOf when given a position arg of -0 should return +0.
    // https://github.com/tc39/ecma262/pull/316
    defineProperty(Array.prototype, 'indexOf', function indexOf(searchElement) {
      var value = _arrayIndexOfApply(this, arguments);
      if (value === 0 && (1 / value) < 0) {
        return 0;
      }
      return value;
    }, true);
  }

  addIterator(Array.prototype, function () { return this.values(); });
  // Chrome defines keys/values/entries on Array, but doesn't give us
  // any way to identify its iterator.  So add our own shimmed field.
  if (Object.getPrototypeOf) {
    addIterator(Object.getPrototypeOf([].values()));
  }

  // note: this is positioned here because it relies on Array#entries
  var arrayFromSwallowsNegativeLengths = (function () {
    // Detects a Firefox bug in v32
    // https://bugzilla.mozilla.org/show_bug.cgi?id=1063993
    return valueOrFalseIfThrows(function () {
      return Array.from({ length: -1 }).length === 0;
    });
  }());
  var arrayFromHandlesIterables = (function () {
    // Detects a bug in Webkit nightly r181886
    var arr = Array.from([0].entries());
    return arr.length === 1 && isArray(arr[0]) && arr[0][0] === 0 && arr[0][1] === 0;
  }());
  if (!arrayFromSwallowsNegativeLengths || !arrayFromHandlesIterables) {
    overrideNative(Array, 'from', ArrayShims.from);
  }
  var arrayFromHandlesUndefinedMapFunction = (function () {
    // Microsoft Edge v0.11 throws if the mapFn argument is *provided* but undefined,
    // but the spec doesn't care if it's provided or not - undefined doesn't throw.
    return valueOrFalseIfThrows(function () {
      return Array.from([0], void 0);
    });
  }());
  if (!arrayFromHandlesUndefinedMapFunction) {
    var origArrayFrom = Array.from;
    overrideNative(Array, 'from', function from(items) {
      if (arguments.length > 1 && typeof arguments[1] !== 'undefined') {
        return ES.Call(origArrayFrom, this, arguments);
      } else {
        return _call(origArrayFrom, this, items);
      }
    });
  }

  var int32sAsOne = -(Math.pow(2, 32) - 1);
  var toLengthsCorrectly = function (method, reversed) {
    var obj = { length: int32sAsOne };
    obj[reversed ? (obj.length >>> 0) - 1 : 0] = true;
    return valueOrFalseIfThrows(function () {
      _call(method, obj, function () {
        // note: in nonconforming browsers, this will be called
        // -1 >>> 0 times, which is 4294967295, so the throw matters.
        throw new RangeError('should not reach here');
      }, []);
      return true;
    });
  };
  if (!toLengthsCorrectly(Array.prototype.forEach)) {
    var originalForEach = Array.prototype.forEach;
    overrideNative(Array.prototype, 'forEach', function forEach(callbackFn) {
      return ES.Call(originalForEach, this.length >= 0 ? this : [], arguments);
    }, true);
  }
  if (!toLengthsCorrectly(Array.prototype.map)) {
    var originalMap = Array.prototype.map;
    overrideNative(Array.prototype, 'map', function map(callbackFn) {
      return ES.Call(originalMap, this.length >= 0 ? this : [], arguments);
    }, true);
  }
  if (!toLengthsCorrectly(Array.prototype.filter)) {
    var originalFilter = Array.prototype.filter;
    overrideNative(Array.prototype, 'filter', function filter(callbackFn) {
      return ES.Call(originalFilter, this.length >= 0 ? this : [], arguments);
    }, true);
  }
  if (!toLengthsCorrectly(Array.prototype.some)) {
    var originalSome = Array.prototype.some;
    overrideNative(Array.prototype, 'some', function some(callbackFn) {
      return ES.Call(originalSome, this.length >= 0 ? this : [], arguments);
    }, true);
  }
  if (!toLengthsCorrectly(Array.prototype.every)) {
    var originalEvery = Array.prototype.every;
    overrideNative(Array.prototype, 'every', function every(callbackFn) {
      return ES.Call(originalEvery, this.length >= 0 ? this : [], arguments);
    }, true);
  }
  if (!toLengthsCorrectly(Array.prototype.reduce)) {
    var originalReduce = Array.prototype.reduce;
    overrideNative(Array.prototype, 'reduce', function reduce(callbackFn) {
      return ES.Call(originalReduce, this.length >= 0 ? this : [], arguments);
    }, true);
  }
  if (!toLengthsCorrectly(Array.prototype.reduceRight, true)) {
    var originalReduceRight = Array.prototype.reduceRight;
    overrideNative(Array.prototype, 'reduceRight', function reduceRight(callbackFn) {
      return ES.Call(originalReduceRight, this.length >= 0 ? this : [], arguments);
    }, true);
  }

  var lacksOctalSupport = Number('0o10') !== 8;
  var lacksBinarySupport = Number('0b10') !== 2;
  var trimsNonWhitespace = _some(nonWS, function (c) {
    return Number(c + 0 + c) === 0;
  });
  if (lacksOctalSupport || lacksBinarySupport || trimsNonWhitespace) {
    var OrigNumber = Number;
    var binaryRegex = /^0b[01]+$/i;
    var octalRegex = /^0o[0-7]+$/i;
    // Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, "test" is an own property of regexes. wtf.
    var isBinary = binaryRegex.test.bind(binaryRegex);
    var isOctal = octalRegex.test.bind(octalRegex);
    var toPrimitive = function (O) { // need to replace this with `es-to-primitive/es6`
      var result;
      if (typeof O.valueOf === 'function') {
        result = O.valueOf();
        if (Type.primitive(result)) {
          return result;
        }
      }
      if (typeof O.toString === 'function') {
        result = O.toString();
        if (Type.primitive(result)) {
          return result;
        }
      }
      throw new TypeError('No default value');
    };
    var hasNonWS = nonWSregex.test.bind(nonWSregex);
    var isBadHex = isBadHexRegex.test.bind(isBadHexRegex);
    var NumberShim = (function () {
      // this is wrapped in an IIFE because of IE 6-8's wacky scoping issues with named function expressions.
      var NumberShim = function Number(value) {
        var primValue;
        if (arguments.length > 0) {
          primValue = Type.primitive(value) ? value : toPrimitive(value, 'number');
        } else {
          primValue = 0;
        }
        if (typeof primValue === 'string') {
          primValue = ES.Call(trimShim, primValue);
          if (isBinary(primValue)) {
            primValue = parseInt(_strSlice(primValue, 2), 2);
          } else if (isOctal(primValue)) {
            primValue = parseInt(_strSlice(primValue, 2), 8);
          } else if (hasNonWS(primValue) || isBadHex(primValue)) {
            primValue = NaN;
          }
        }
        var receiver = this;
        var valueOfSucceeds = valueOrFalseIfThrows(function () {
          OrigNumber.prototype.valueOf.call(receiver);
          return true;
        });
        if (receiver instanceof NumberShim && !valueOfSucceeds) {
          return new OrigNumber(primValue);
        }
        /* jshint newcap: false */
        return OrigNumber(primValue);
        /* jshint newcap: true */
      };
      return NumberShim;
    }());
    wrapConstructor(OrigNumber, NumberShim, {});
    // this is necessary for ES3 browsers, where these properties are non-enumerable.
    defineProperties(NumberShim, {
      NaN: OrigNumber.NaN,
      MAX_VALUE: OrigNumber.MAX_VALUE,
      MIN_VALUE: OrigNumber.MIN_VALUE,
      NEGATIVE_INFINITY: OrigNumber.NEGATIVE_INFINITY,
      POSITIVE_INFINITY: OrigNumber.POSITIVE_INFINITY
    });
    /* globals Number: true */
    /* eslint-disable no-undef, no-global-assign */
    /* jshint -W020 */
    Number = NumberShim;
    Value.redefine(globals, 'Number', NumberShim);
    /* jshint +W020 */
    /* eslint-enable no-undef, no-global-assign */
    /* globals Number: false */
  }

  var maxSafeInteger = Math.pow(2, 53) - 1;
  defineProperties(Number, {
    MAX_SAFE_INTEGER: maxSafeInteger,
    MIN_SAFE_INTEGER: -maxSafeInteger,
    EPSILON: 2.220446049250313e-16,

    parseInt: globals.parseInt,
    parseFloat: globals.parseFloat,

    isFinite: numberIsFinite,

    isInteger: function isInteger(value) {
      return numberIsFinite(value) && ES.ToInteger(value) === value;
    },

    isSafeInteger: function isSafeInteger(value) {
      return Number.isInteger(value) && _abs(value) <= Number.MAX_SAFE_INTEGER;
    },

    isNaN: numberIsNaN
  });
  // Firefox 37 has a conforming Number.parseInt, but it's not === to the global parseInt (fixed in v40)
  defineProperty(Number, 'parseInt', globals.parseInt, Number.parseInt !== globals.parseInt);

  // Work around bugs in Array#find and Array#findIndex -- early
  // implementations skipped holes in sparse arrays. (Note that the
  // implementations of find/findIndex indirectly use shimmed
  // methods of Number, so this test has to happen down here.)
  /*jshint elision: true */
  /* eslint-disable no-sparse-arrays */
  if ([, 1].find(function () { return true; }) === 1) {
    overrideNative(Array.prototype, 'find', ArrayPrototypeShims.find);
  }
  if ([, 1].findIndex(function () { return true; }) !== 0) {
    overrideNative(Array.prototype, 'findIndex', ArrayPrototypeShims.findIndex);
  }
  /* eslint-enable no-sparse-arrays */
  /*jshint elision: false */

  var isEnumerableOn = Function.bind.call(Function.bind, Object.prototype.propertyIsEnumerable);
  var ensureEnumerable = function ensureEnumerable(obj, prop) {
    if (supportsDescriptors && isEnumerableOn(obj, prop)) {
      Object.defineProperty(obj, prop, { enumerable: false });
    }
  };
  var sliceArgs = function sliceArgs() {
    // per https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments
    // and https://gist.github.com/WebReflection/4327762cb87a8c634a29
    var initial = Number(this);
    var len = arguments.length;
    var desiredArgCount = len - initial;
    var args = new Array(desiredArgCount < 0 ? 0 : desiredArgCount);
    for (var i = initial; i < len; ++i) {
      args[i - initial] = arguments[i];
    }
    return args;
  };
  var assignTo = function assignTo(source) {
    return function assignToSource(target, key) {
      target[key] = source[key];
      return target;
    };
  };
  var assignReducer = function (target, source) {
    var sourceKeys = keys(Object(source));
    var symbols;
    if (ES.IsCallable(Object.getOwnPropertySymbols)) {
      symbols = _filter(Object.getOwnPropertySymbols(Object(source)), isEnumerableOn(source));
    }
    return _reduce(_concat(sourceKeys, symbols || []), assignTo(source), target);
  };

  var ObjectShims = {
    // 19.1.3.1
    assign: function (target, source) {
      var to = ES.ToObject(target, 'Cannot convert undefined or null to object');
      return _reduce(ES.Call(sliceArgs, 1, arguments), assignReducer, to);
    },

    // Added in WebKit in https://bugs.webkit.org/show_bug.cgi?id=143865
    is: function is(a, b) {
      return ES.SameValue(a, b);
    }
  };
  var assignHasPendingExceptions = Object.assign && Object.preventExtensions && (function () {
    // Firefox 37 still has "pending exception" logic in its Object.assign implementation,
    // which is 72% slower than our shim, and Firefox 40's native implementation.
    var thrower = Object.preventExtensions({ 1: 2 });
    try {
      Object.assign(thrower, 'xy');
    } catch (e) {
      return thrower[1] === 'y';
    }
  }());
  if (assignHasPendingExceptions) {
    overrideNative(Object, 'assign', ObjectShims.assign);
  }
  defineProperties(Object, ObjectShims);

  if (supportsDescriptors) {
    var ES5ObjectShims = {
      // 19.1.3.9
      // shim from https://gist.github.com/WebReflection/5593554
      setPrototypeOf: (function (Object, magic) {
        var set;

        var checkArgs = function (O, proto) {
          if (!ES.TypeIsObject(O)) {
            throw new TypeError('cannot set prototype on a non-object');
          }
          if (!(proto === null || ES.TypeIsObject(proto))) {
            throw new TypeError('can only set prototype to an object or null' + proto);
          }
        };

        var setPrototypeOf = function (O, proto) {
          checkArgs(O, proto);
          _call(set, O, proto);
          return O;
        };

        try {
          // this works already in Firefox and Safari
          set = Object.getOwnPropertyDescriptor(Object.prototype, magic).set;
          _call(set, {}, null);
        } catch (e) {
          if (Object.prototype !== {}[magic]) {
            // IE < 11 cannot be shimmed
            return;
          }
          // probably Chrome or some old Mobile stock browser
          set = function (proto) {
            this[magic] = proto;
          };
          // please note that this will **not** work
          // in those browsers that do not inherit
          // __proto__ by mistake from Object.prototype
          // in these cases we should probably throw an error
          // or at least be informed about the issue
          setPrototypeOf.polyfill = setPrototypeOf(
            setPrototypeOf({}, null),
            Object.prototype
          ) instanceof Object;
          // setPrototypeOf.polyfill === true means it works as meant
          // setPrototypeOf.polyfill === false means it's not 100% reliable
          // setPrototypeOf.polyfill === undefined
          // or
          // setPrototypeOf.polyfill ==  null means it's not a polyfill
          // which means it works as expected
          // we can even delete Object.prototype.__proto__;
        }
        return setPrototypeOf;
      }(Object, '__proto__'))
    };

    defineProperties(Object, ES5ObjectShims);
  }

  // Workaround bug in Opera 12 where setPrototypeOf(x, null) doesn't work,
  // but Object.create(null) does.
  if (Object.setPrototypeOf && Object.getPrototypeOf &&
      Object.getPrototypeOf(Object.setPrototypeOf({}, null)) !== null &&
      Object.getPrototypeOf(Object.create(null)) === null) {
    (function () {
      var FAKENULL = Object.create(null);
      var gpo = Object.getPrototypeOf;
      var spo = Object.setPrototypeOf;
      Object.getPrototypeOf = function (o) {
        var result = gpo(o);
        return result === FAKENULL ? null : result;
      };
      Object.setPrototypeOf = function (o, p) {
        var proto = p === null ? FAKENULL : p;
        return spo(o, proto);
      };
      Object.setPrototypeOf.polyfill = false;
    }());
  }

  var objectKeysAcceptsPrimitives = !throwsError(function () { Object.keys('foo'); });
  if (!objectKeysAcceptsPrimitives) {
    var originalObjectKeys = Object.keys;
    overrideNative(Object, 'keys', function keys(value) {
      return originalObjectKeys(ES.ToObject(value));
    });
    keys = Object.keys;
  }
  var objectKeysRejectsRegex = throwsError(function () { Object.keys(/a/g); });
  if (objectKeysRejectsRegex) {
    var regexRejectingObjectKeys = Object.keys;
    overrideNative(Object, 'keys', function keys(value) {
      if (Type.regex(value)) {
        var regexKeys = [];
        for (var k in value) {
          if (_hasOwnProperty(value, k)) {
            _push(regexKeys, k);
          }
        }
        return regexKeys;
      }
      return regexRejectingObjectKeys(value);
    });
    keys = Object.keys;
  }

  if (Object.getOwnPropertyNames) {
    var objectGOPNAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyNames('foo'); });
    if (!objectGOPNAcceptsPrimitives) {
      var cachedWindowNames = typeof window === 'object' ? Object.getOwnPropertyNames(window) : [];
      var originalObjectGetOwnPropertyNames = Object.getOwnPropertyNames;
      overrideNative(Object, 'getOwnPropertyNames', function getOwnPropertyNames(value) {
        var val = ES.ToObject(value);
        if (_toString(val) === '[object Window]') {
          try {
            return originalObjectGetOwnPropertyNames(val);
          } catch (e) {
            // IE bug where layout engine calls userland gOPN for cross-domain `window` objects
            return _concat([], cachedWindowNames);
          }
        }
        return originalObjectGetOwnPropertyNames(val);
      });
    }
  }
  if (Object.getOwnPropertyDescriptor) {
    var objectGOPDAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyDescriptor('foo', 'bar'); });
    if (!objectGOPDAcceptsPrimitives) {
      var originalObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
      overrideNative(Object, 'getOwnPropertyDescriptor', function getOwnPropertyDescriptor(value, property) {
        return originalObjectGetOwnPropertyDescriptor(ES.ToObject(value), property);
      });
    }
  }
  if (Object.seal) {
    var objectSealAcceptsPrimitives = !throwsError(function () { Object.seal('foo'); });
    if (!objectSealAcceptsPrimitives) {
      var originalObjectSeal = Object.seal;
      overrideNative(Object, 'seal', function seal(value) {
        if (!ES.TypeIsObject(value)) { return value; }
        return originalObjectSeal(value);
      });
    }
  }
  if (Object.isSealed) {
    var objectIsSealedAcceptsPrimitives = !throwsError(function () { Object.isSealed('foo'); });
    if (!objectIsSealedAcceptsPrimitives) {
      var originalObjectIsSealed = Object.isSealed;
      overrideNative(Object, 'isSealed', function isSealed(value) {
        if (!ES.TypeIsObject(value)) { return true; }
        return originalObjectIsSealed(value);
      });
    }
  }
  if (Object.freeze) {
    var objectFreezeAcceptsPrimitives = !throwsError(function () { Object.freeze('foo'); });
    if (!objectFreezeAcceptsPrimitives) {
      var originalObjectFreeze = Object.freeze;
      overrideNative(Object, 'freeze', function freeze(value) {
        if (!ES.TypeIsObject(value)) { return value; }
        return originalObjectFreeze(value);
      });
    }
  }
  if (Object.isFrozen) {
    var objectIsFrozenAcceptsPrimitives = !throwsError(function () { Object.isFrozen('foo'); });
    if (!objectIsFrozenAcceptsPrimitives) {
      var originalObjectIsFrozen = Object.isFrozen;
      overrideNative(Object, 'isFrozen', function isFrozen(value) {
        if (!ES.TypeIsObject(value)) { return true; }
        return originalObjectIsFrozen(value);
      });
    }
  }
  if (Object.preventExtensions) {
    var objectPreventExtensionsAcceptsPrimitives = !throwsError(function () { Object.preventExtensions('foo'); });
    if (!objectPreventExtensionsAcceptsPrimitives) {
      var originalObjectPreventExtensions = Object.preventExtensions;
      overrideNative(Object, 'preventExtensions', function preventExtensions(value) {
        if (!ES.TypeIsObject(value)) { return value; }
        return originalObjectPreventExtensions(value);
      });
    }
  }
  if (Object.isExtensible) {
    var objectIsExtensibleAcceptsPrimitives = !throwsError(function () { Object.isExtensible('foo'); });
    if (!objectIsExtensibleAcceptsPrimitives) {
      var originalObjectIsExtensible = Object.isExtensible;
      overrideNative(Object, 'isExtensible', function isExtensible(value) {
        if (!ES.TypeIsObject(value)) { return false; }
        return originalObjectIsExtensible(value);
      });
    }
  }
  if (Object.getPrototypeOf) {
    var objectGetProtoAcceptsPrimitives = !throwsError(function () { Object.getPrototypeOf('foo'); });
    if (!objectGetProtoAcceptsPrimitives) {
      var originalGetProto = Object.getPrototypeOf;
      overrideNative(Object, 'getPrototypeOf', function getPrototypeOf(value) {
        return originalGetProto(ES.ToObject(value));
      });
    }
  }

  var hasFlags = supportsDescriptors && (function () {
    var desc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');
    return desc && ES.IsCallable(desc.get);
  }());
  if (supportsDescriptors && !hasFlags) {
    var regExpFlagsGetter = function flags() {
      if (!ES.TypeIsObject(this)) {
        throw new TypeError('Method called on incompatible type: must be an object.');
      }
      var result = '';
      if (this.global) {
        result += 'g';
      }
      if (this.ignoreCase) {
        result += 'i';
      }
      if (this.multiline) {
        result += 'm';
      }
      if (this.unicode) {
        result += 'u';
      }
      if (this.sticky) {
        result += 'y';
      }
      return result;
    };

    Value.getter(RegExp.prototype, 'flags', regExpFlagsGetter);
  }

  var regExpSupportsFlagsWithRegex = supportsDescriptors && valueOrFalseIfThrows(function () {
    return String(new RegExp(/a/g, 'i')) === '/a/i';
  });
  var regExpNeedsToSupportSymbolMatch = hasSymbols && supportsDescriptors && (function () {
    // Edge 0.12 supports flags fully, but does not support Symbol.match
    var regex = /./;
    regex[Symbol.match] = false;
    return RegExp(regex) === regex;
  }());

  var regexToStringIsGeneric = valueOrFalseIfThrows(function () {
    return RegExp.prototype.toString.call({ source: 'abc' }) === '/abc/';
  });
  var regexToStringSupportsGenericFlags = regexToStringIsGeneric && valueOrFalseIfThrows(function () {
    return RegExp.prototype.toString.call({ source: 'a', flags: 'b' }) === '/a/b';
  });
  if (!regexToStringIsGeneric || !regexToStringSupportsGenericFlags) {
    var origRegExpToString = RegExp.prototype.toString;
    defineProperty(RegExp.prototype, 'toString', function toString() {
      var R = ES.RequireObjectCoercible(this);
      if (Type.regex(R)) {
        return _call(origRegExpToString, R);
      }
      var pattern = $String(R.source);
      var flags = $String(R.flags);
      return '/' + pattern + '/' + flags;
    }, true);
    Value.preserveToString(RegExp.prototype.toString, origRegExpToString);
  }

  if (supportsDescriptors && (!regExpSupportsFlagsWithRegex || regExpNeedsToSupportSymbolMatch)) {
    var flagsGetter = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get;
    var sourceDesc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'source') || {};
    var legacySourceGetter = function () {
      // prior to it being a getter, it's own + nonconfigurable
      return this.source;
    };
    var sourceGetter = ES.IsCallable(sourceDesc.get) ? sourceDesc.get : legacySourceGetter;

    var OrigRegExp = RegExp;
    var RegExpShim = (function () {
      return function RegExp(pattern, flags) {
        var patternIsRegExp = ES.IsRegExp(pattern);
        var calledWithNew = this instanceof RegExp;
        if (!calledWithNew && patternIsRegExp && typeof flags === 'undefined' && pattern.constructor === RegExp) {
          return pattern;
        }

        var P = pattern;
        var F = flags;
        if (Type.regex(pattern)) {
          P = ES.Call(sourceGetter, pattern);
          F = typeof flags === 'undefined' ? ES.Call(flagsGetter, pattern) : flags;
          return new RegExp(P, F);
        } else if (patternIsRegExp) {
          P = pattern.source;
          F = typeof flags === 'undefined' ? pattern.flags : flags;
        }
        return new OrigRegExp(pattern, flags);
      };
    }());
    wrapConstructor(OrigRegExp, RegExpShim, {
      $input: true // Chrome < v39 & Opera < 26 have a nonstandard "$input" property
    });
    /* globals RegExp: true */
    /* eslint-disable no-undef, no-global-assign */
    /* jshint -W020 */
    RegExp = RegExpShim;
    Value.redefine(globals, 'RegExp', RegExpShim);
    /* jshint +W020 */
    /* eslint-enable no-undef, no-global-assign */
    /* globals RegExp: false */
  }

  if (supportsDescriptors) {
    var regexGlobals = {
      input: '$_',
      lastMatch: '$&',
      lastParen: '$+',
      leftContext: '$`',
      rightContext: '$\''
    };
    _forEach(keys(regexGlobals), function (prop) {
      if (prop in RegExp && !(regexGlobals[prop] in RegExp)) {
        Value.getter(RegExp, regexGlobals[prop], function get() {
          return RegExp[prop];
        });
      }
    });
  }
  addDefaultSpecies(RegExp);

  var inverseEpsilon = 1 / Number.EPSILON;
  var roundTiesToEven = function roundTiesToEven(n) {
    // Even though this reduces down to `return n`, it takes advantage of built-in rounding.
    return (n + inverseEpsilon) - inverseEpsilon;
  };
  var BINARY_32_EPSILON = Math.pow(2, -23);
  var BINARY_32_MAX_VALUE = Math.pow(2, 127) * (2 - BINARY_32_EPSILON);
  var BINARY_32_MIN_VALUE = Math.pow(2, -126);
  var E = Math.E;
  var LOG2E = Math.LOG2E;
  var LOG10E = Math.LOG10E;
  var numberCLZ = Number.prototype.clz;
  delete Number.prototype.clz; // Safari 8 has Number#clz

  var MathShims = {
    acosh: function acosh(value) {
      var x = Number(value);
      if (numberIsNaN(x) || value < 1) { return NaN; }
      if (x === 1) { return 0; }
      if (x === Infinity) { return x; }
      return _log((x / E) + (_sqrt(x + 1) * _sqrt(x - 1) / E)) + 1;
    },

    asinh: function asinh(value) {
      var x = Number(value);
      if (x === 0 || !globalIsFinite(x)) {
        return x;
      }
      return x < 0 ? -asinh(-x) : _log(x + _sqrt((x * x) + 1));
    },

    atanh: function atanh(value) {
      var x = Number(value);
      if (numberIsNaN(x) || x < -1 || x > 1) {
        return NaN;
      }
      if (x === -1) { return -Infinity; }
      if (x === 1) { return Infinity; }
      if (x === 0) { return x; }
      return 0.5 * _log((1 + x) / (1 - x));
    },

    cbrt: function cbrt(value) {
      var x = Number(value);
      if (x === 0) { return x; }
      var negate = x < 0;
      var result;
      if (negate) { x = -x; }
      if (x === Infinity) {
        result = Infinity;
      } else {
        result = _exp(_log(x) / 3);
        // from http://en.wikipedia.org/wiki/Cube_root#Numerical_methods
        result = ((x / (result * result)) + (2 * result)) / 3;
      }
      return negate ? -result : result;
    },

    clz32: function clz32(value) {
      // See https://bugs.ecmascript.org/show_bug.cgi?id=2465
      var x = Number(value);
      var number = ES.ToUint32(x);
      if (number === 0) {
        return 32;
      }
      return numberCLZ ? ES.Call(numberCLZ, number) : 31 - _floor(_log(number + 0.5) * LOG2E);
    },

    cosh: function cosh(value) {
      var x = Number(value);
      if (x === 0) { return 1; } // +0 or -0
      if (numberIsNaN(x)) { return NaN; }
      if (!globalIsFinite(x)) { return Infinity; }
      if (x < 0) { x = -x; }
      if (x > 21) { return _exp(x) / 2; }
      return (_exp(x) + _exp(-x)) / 2;
    },

    expm1: function expm1(value) {
      var x = Number(value);
      if (x === -Infinity) { return -1; }
      if (!globalIsFinite(x) || x === 0) { return x; }
      if (_abs(x) > 0.5) {
        return _exp(x) - 1;
      }
      // A more precise approximation using Taylor series expansion
      // from https://github.com/paulmillr/es6-shim/issues/314#issuecomment-70293986
      var t = x;
      var sum = 0;
      var n = 1;
      while (sum + t !== sum) {
        sum += t;
        n += 1;
        t *= x / n;
      }
      return sum;
    },

    hypot: function hypot(x, y) {
      var result = 0;
      var largest = 0;
      for (var i = 0; i < arguments.length; ++i) {
        var value = _abs(Number(arguments[i]));
        if (largest < value) {
          result *= (largest / value) * (largest / value);
          result += 1;
          largest = value;
        } else {
          result += value > 0 ? (value / largest) * (value / largest) : value;
        }
      }
      return largest === Infinity ? Infinity : largest * _sqrt(result);
    },

    log2: function log2(value) {
      return _log(value) * LOG2E;
    },

    log10: function log10(value) {
      return _log(value) * LOG10E;
    },

    log1p: function log1p(value) {
      var x = Number(value);
      if (x < -1 || numberIsNaN(x)) { return NaN; }
      if (x === 0 || x === Infinity) { return x; }
      if (x === -1) { return -Infinity; }

      return (1 + x) - 1 === 0 ? x : x * (_log(1 + x) / ((1 + x) - 1));
    },

    sign: _sign,

    sinh: function sinh(value) {
      var x = Number(value);
      if (!globalIsFinite(x) || x === 0) { return x; }

      if (_abs(x) < 1) {
        return (Math.expm1(x) - Math.expm1(-x)) / 2;
      }
      return (_exp(x - 1) - _exp(-x - 1)) * E / 2;
    },

    tanh: function tanh(value) {
      var x = Number(value);
      if (numberIsNaN(x) || x === 0) { return x; }
      // can exit early at +-20 as JS loses precision for true value at this integer
      if (x >= 20) { return 1; }
      if (x <= -20) { return -1; }

      return (Math.expm1(x) - Math.expm1(-x)) / (_exp(x) + _exp(-x));
    },

    trunc: function trunc(value) {
      var x = Number(value);
      return x < 0 ? -_floor(-x) : _floor(x);
    },

    imul: function imul(x, y) {
      // taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul
      var a = ES.ToUint32(x);
      var b = ES.ToUint32(y);
      var ah = (a >>> 16) & 0xffff;
      var al = a & 0xffff;
      var bh = (b >>> 16) & 0xffff;
      var bl = b & 0xffff;
      // the shift by 0 fixes the sign on the high part
      // the final |0 converts the unsigned value into a signed value
      return (al * bl) + ((((ah * bl) + (al * bh)) << 16) >>> 0) | 0;
    },

    fround: function fround(x) {
      var v = Number(x);
      if (v === 0 || v === Infinity || v === -Infinity || numberIsNaN(v)) {
        return v;
      }
      var sign = _sign(v);
      var abs = _abs(v);
      if (abs < BINARY_32_MIN_VALUE) {
        return sign * roundTiesToEven(
          abs / BINARY_32_MIN_VALUE / BINARY_32_EPSILON
        ) * BINARY_32_MIN_VALUE * BINARY_32_EPSILON;
      }
      // Veltkamp's splitting (?)
      var a = (1 + (BINARY_32_EPSILON / Number.EPSILON)) * abs;
      var result = a - (a - abs);
      if (result > BINARY_32_MAX_VALUE || numberIsNaN(result)) {
        return sign * Infinity;
      }
      return sign * result;
    }
  };
  defineProperties(Math, MathShims);
  // IE 11 TP has an imprecise log1p: reports Math.log1p(-1e-17) as 0
  defineProperty(Math, 'log1p', MathShims.log1p, Math.log1p(-1e-17) !== -1e-17);
  // IE 11 TP has an imprecise asinh: reports Math.asinh(-1e7) as not exactly equal to -Math.asinh(1e7)
  defineProperty(Math, 'asinh', MathShims.asinh, Math.asinh(-1e7) !== -Math.asinh(1e7));
  // Chrome 40 has an imprecise Math.tanh with very small numbers
  defineProperty(Math, 'tanh', MathShims.tanh, Math.tanh(-2e-17) !== -2e-17);
  // Chrome 40 loses Math.acosh precision with high numbers
  defineProperty(Math, 'acosh', MathShims.acosh, Math.acosh(Number.MAX_VALUE) === Infinity);
  // Firefox 38 on Windows
  defineProperty(Math, 'cbrt', MathShims.cbrt, Math.abs(1 - (Math.cbrt(1e-300) / 1e-100)) / Number.EPSILON > 8);
  // node 0.11 has an imprecise Math.sinh with very small numbers
  defineProperty(Math, 'sinh', MathShims.sinh, Math.sinh(-2e-17) !== -2e-17);
  // FF 35 on Linux reports 22025.465794806725 for Math.expm1(10)
  var expm1OfTen = Math.expm1(10);
  defineProperty(Math, 'expm1', MathShims.expm1, expm1OfTen > 22025.465794806719 || expm1OfTen < 22025.4657948067165168);

  var origMathRound = Math.round;
  // breaks in e.g. Safari 8, Internet Explorer 11, Opera 12
  var roundHandlesBoundaryConditions = Math.round(0.5 - (Number.EPSILON / 4)) === 0 &&
    Math.round(-0.5 + (Number.EPSILON / 3.99)) === 1;

  // When engines use Math.floor(x + 0.5) internally, Math.round can be buggy for large integers.
  // This behavior should be governed by "round to nearest, ties to even mode"
  // see http://www.ecma-international.org/ecma-262/6.0/#sec-terms-and-definitions-number-type
  // These are the boundary cases where it breaks.
  var smallestPositiveNumberWhereRoundBreaks = inverseEpsilon + 1;
  var largestPositiveNumberWhereRoundBreaks = (2 * inverseEpsilon) - 1;
  var roundDoesNotIncreaseIntegers = [
    smallestPositiveNumberWhereRoundBreaks,
    largestPositiveNumberWhereRoundBreaks
  ].every(function (num) {
    return Math.round(num) === num;
  });
  defineProperty(Math, 'round', function round(x) {
    var floor = _floor(x);
    var ceil = floor === -1 ? -0 : floor + 1;
    return x - floor < 0.5 ? floor : ceil;
  }, !roundHandlesBoundaryConditions || !roundDoesNotIncreaseIntegers);
  Value.preserveToString(Math.round, origMathRound);

  var origImul = Math.imul;
  if (Math.imul(0xffffffff, 5) !== -5) {
    // Safari 6.1, at least, reports "0" for this value
    Math.imul = MathShims.imul;
    Value.preserveToString(Math.imul, origImul);
  }
  if (Math.imul.length !== 2) {
    // Safari 8.0.4 has a length of 1
    // fixed in https://bugs.webkit.org/show_bug.cgi?id=143658
    overrideNative(Math, 'imul', function imul(x, y) {
      return ES.Call(origImul, Math, arguments);
    });
  }

  // Promises
  // Simplest possible implementation; use a 3rd-party library if you
  // want the best possible speed and/or long stack traces.
  var PromiseShim = (function () {
    var setTimeout = globals.setTimeout;
    // some environments don't have setTimeout - no way to shim here.
    if (typeof setTimeout !== 'function' && typeof setTimeout !== 'object') { return; }

    ES.IsPromise = function (promise) {
      if (!ES.TypeIsObject(promise)) {
        return false;
      }
      if (typeof promise._promise === 'undefined') {
        return false; // uninitialized, or missing our hidden field.
      }
      return true;
    };

    // "PromiseCapability" in the spec is what most promise implementations
    // call a "deferred".
    var PromiseCapability = function (C) {
      if (!ES.IsConstructor(C)) {
        throw new TypeError('Bad promise constructor');
      }
      var capability = this;
      var resolver = function (resolve, reject) {
        if (capability.resolve !== void 0 || capability.reject !== void 0) {
          throw new TypeError('Bad Promise implementation!');
        }
        capability.resolve = resolve;
        capability.reject = reject;
      };
      // Initialize fields to inform optimizers about the object shape.
      capability.resolve = void 0;
      capability.reject = void 0;
      capability.promise = new C(resolver);
      if (!(ES.IsCallable(capability.resolve) && ES.IsCallable(capability.reject))) {
        throw new TypeError('Bad promise constructor');
      }
    };

    // find an appropriate setImmediate-alike
    var makeZeroTimeout;
    /*global window */
    if (typeof window !== 'undefined' && ES.IsCallable(window.postMessage)) {
      makeZeroTimeout = function () {
        // from http://dbaron.org/log/20100309-faster-timeouts
        var timeouts = [];
        var messageName = 'zero-timeout-message';
        var setZeroTimeout = function (fn) {
          _push(timeouts, fn);
          window.postMessage(messageName, '*');
        };
        var handleMessage = function (event) {
          if (event.source === window && event.data === messageName) {
            event.stopPropagation();
            if (timeouts.length === 0) { return; }
            var fn = _shift(timeouts);
            fn();
          }
        };
        window.addEventListener('message', handleMessage, true);
        return setZeroTimeout;
      };
    }
    var makePromiseAsap = function () {
      // An efficient task-scheduler based on a pre-existing Promise
      // implementation, which we can use even if we override the
      // global Promise below (in order to workaround bugs)
      // https://github.com/Raynos/observ-hash/issues/2#issuecomment-35857671
      var P = globals.Promise;
      var pr = P && P.resolve && P.resolve();
      return pr && function (task) {
        return pr.then(task);
      };
    };
    /*global process */
    /* jscs:disable disallowMultiLineTernary */
    var enqueue = ES.IsCallable(globals.setImmediate) ?
      globals.setImmediate :
      typeof process === 'object' && process.nextTick ? process.nextTick :
      makePromiseAsap() ||
      (ES.IsCallable(makeZeroTimeout) ? makeZeroTimeout() :
      function (task) { setTimeout(task, 0); }); // fallback
    /* jscs:enable disallowMultiLineTernary */

    // Constants for Promise implementation
    var PROMISE_IDENTITY = function (x) { return x; };
    var PROMISE_THROWER = function (e) { throw e; };
    var PROMISE_PENDING = 0;
    var PROMISE_FULFILLED = 1;
    var PROMISE_REJECTED = 2;
    // We store fulfill/reject handlers and capabilities in a single array.
    var PROMISE_FULFILL_OFFSET = 0;
    var PROMISE_REJECT_OFFSET = 1;
    var PROMISE_CAPABILITY_OFFSET = 2;
    // This is used in an optimization for chaining promises via then.
    var PROMISE_FAKE_CAPABILITY = {};

    var enqueuePromiseReactionJob = function (handler, capability, argument) {
      enqueue(function () {
        promiseReactionJob(handler, capability, argument);
      });
    };

    var promiseReactionJob = function (handler, promiseCapability, argument) {
      var handlerResult, f;
      if (promiseCapability === PROMISE_FAKE_CAPABILITY) {
        // Fast case, when we don't actually need to chain through to a
        // (real) promiseCapability.
        return handler(argument);
      }
      try {
        handlerResult = handler(argument);
        f = promiseCapability.resolve;
      } catch (e) {
        handlerResult = e;
        f = promiseCapability.reject;
      }
      f(handlerResult);
    };

    var fulfillPromise = function (promise, value) {
      var _promise = promise._promise;
      var length = _promise.reactionLength;
      if (length > 0) {
        enqueuePromiseReactionJob(
          _promise.fulfillReactionHandler0,
          _promise.reactionCapability0,
          value
        );
        _promise.fulfillReactionHandler0 = void 0;
        _promise.rejectReactions0 = void 0;
        _promise.reactionCapability0 = void 0;
        if (length > 1) {
          for (var i = 1, idx = 0; i < length; i++, idx += 3) {
            enqueuePromiseReactionJob(
              _promise[idx + PROMISE_FULFILL_OFFSET],
              _promise[idx + PROMISE_CAPABILITY_OFFSET],
              value
            );
            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;
            promise[idx + PROMISE_REJECT_OFFSET] = void 0;
            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;
          }
        }
      }
      _promise.result = value;
      _promise.state = PROMISE_FULFILLED;
      _promise.reactionLength = 0;
    };

    var rejectPromise = function (promise, reason) {
      var _promise = promise._promise;
      var length = _promise.reactionLength;
      if (length > 0) {
        enqueuePromiseReactionJob(
          _promise.rejectReactionHandler0,
          _promise.reactionCapability0,
          reason
        );
        _promise.fulfillReactionHandler0 = void 0;
        _promise.rejectReactions0 = void 0;
        _promise.reactionCapability0 = void 0;
        if (length > 1) {
          for (var i = 1, idx = 0; i < length; i++, idx += 3) {
            enqueuePromiseReactionJob(
              _promise[idx + PROMISE_REJECT_OFFSET],
              _promise[idx + PROMISE_CAPABILITY_OFFSET],
              reason
            );
            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;
            promise[idx + PROMISE_REJECT_OFFSET] = void 0;
            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;
          }
        }
      }
      _promise.result = reason;
      _promise.state = PROMISE_REJECTED;
      _promise.reactionLength = 0;
    };

    var createResolvingFunctions = function (promise) {
      var alreadyResolved = false;
      var resolve = function (resolution) {
        var then;
        if (alreadyResolved) { return; }
        alreadyResolved = true;
        if (resolution === promise) {
          return rejectPromise(promise, new TypeError('Self resolution'));
        }
        if (!ES.TypeIsObject(resolution)) {
          return fulfillPromise(promise, resolution);
        }
        try {
          then = resolution.then;
        } catch (e) {
          return rejectPromise(promise, e);
        }
        if (!ES.IsCallable(then)) {
          return fulfillPromise(promise, resolution);
        }
        enqueue(function () {
          promiseResolveThenableJob(promise, resolution, then);
        });
      };
      var reject = function (reason) {
        if (alreadyResolved) { return; }
        alreadyResolved = true;
        return rejectPromise(promise, reason);
      };
      return { resolve: resolve, reject: reject };
    };

    var optimizedThen = function (then, thenable, resolve, reject) {
      // Optimization: since we discard the result, we can pass our
      // own then implementation a special hint to let it know it
      // doesn't have to create it.  (The PROMISE_FAKE_CAPABILITY
      // object is local to this implementation and unforgeable outside.)
      if (then === Promise$prototype$then) {
        _call(then, thenable, resolve, reject, PROMISE_FAKE_CAPABILITY);
      } else {
        _call(then, thenable, resolve, reject);
      }
    };
    var promiseResolveThenableJob = function (promise, thenable, then) {
      var resolvingFunctions = createResolvingFunctions(promise);
      var resolve = resolvingFunctions.resolve;
      var reject = resolvingFunctions.reject;
      try {
        optimizedThen(then, thenable, resolve, reject);
      } catch (e) {
        reject(e);
      }
    };

    var Promise$prototype, Promise$prototype$then;
    var Promise = (function () {
      var PromiseShim = function Promise(resolver) {
        if (!(this instanceof PromiseShim)) {
          throw new TypeError('Constructor Promise requires "new"');
        }
        if (this && this._promise) {
          throw new TypeError('Bad construction');
        }
        // see https://bugs.ecmascript.org/show_bug.cgi?id=2482
        if (!ES.IsCallable(resolver)) {
          throw new TypeError('not a valid resolver');
        }
        var promise = emulateES6construct(this, PromiseShim, Promise$prototype, {
          _promise: {
            result: void 0,
            state: PROMISE_PENDING,
            // The first member of the "reactions" array is inlined here,
            // since most promises only have one reaction.
            // We've also exploded the 'reaction' object to inline the
            // "handler" and "capability" fields, since both fulfill and
            // reject reactions share the same capability.
            reactionLength: 0,
            fulfillReactionHandler0: void 0,
            rejectReactionHandler0: void 0,
            reactionCapability0: void 0
          }
        });
        var resolvingFunctions = createResolvingFunctions(promise);
        var reject = resolvingFunctions.reject;
        try {
          resolver(resolvingFunctions.resolve, reject);
        } catch (e) {
          reject(e);
        }
        return promise;
      };
      return PromiseShim;
    }());
    Promise$prototype = Promise.prototype;

    var _promiseAllResolver = function (index, values, capability, remaining) {
      var alreadyCalled = false;
      return function (x) {
        if (alreadyCalled) { return; }
        alreadyCalled = true;
        values[index] = x;
        if ((--remaining.count) === 0) {
          var resolve = capability.resolve;
          resolve(values); // call w/ this===undefined
        }
      };
    };

    var performPromiseAll = function (iteratorRecord, C, resultCapability) {
      var it = iteratorRecord.iterator;
      var values = [];
      var remaining = { count: 1 };
      var next, nextValue;
      var index = 0;
      while (true) {
        try {
          next = ES.IteratorStep(it);
          if (next === false) {
            iteratorRecord.done = true;
            break;
          }
          nextValue = next.value;
        } catch (e) {
          iteratorRecord.done = true;
          throw e;
        }
        values[index] = void 0;
        var nextPromise = C.resolve(nextValue);
        var resolveElement = _promiseAllResolver(
          index, values, resultCapability, remaining
        );
        remaining.count += 1;
        optimizedThen(nextPromise.then, nextPromise, resolveElement, resultCapability.reject);
        index += 1;
      }
      if ((--remaining.count) === 0) {
        var resolve = resultCapability.resolve;
        resolve(values); // call w/ this===undefined
      }
      return resultCapability.promise;
    };

    var performPromiseRace = function (iteratorRecord, C, resultCapability) {
      var it = iteratorRecord.iterator;
      var next, nextValue, nextPromise;
      while (true) {
        try {
          next = ES.IteratorStep(it);
          if (next === false) {
            // NOTE: If iterable has no items, resulting promise will never
            // resolve; see:
            // https://github.com/domenic/promises-unwrapping/issues/75
            // https://bugs.ecmascript.org/show_bug.cgi?id=2515
            iteratorRecord.done = true;
            break;
          }
          nextValue = next.value;
        } catch (e) {
          iteratorRecord.done = true;
          throw e;
        }
        nextPromise = C.resolve(nextValue);
        optimizedThen(nextPromise.then, nextPromise, resultCapability.resolve, resultCapability.reject);
      }
      return resultCapability.promise;
    };

    defineProperties(Promise, {
      all: function all(iterable) {
        var C = this;
        if (!ES.TypeIsObject(C)) {
          throw new TypeError('Promise is not object');
        }
        var capability = new PromiseCapability(C);
        var iterator, iteratorRecord;
        try {
          iterator = ES.GetIterator(iterable);
          iteratorRecord = { iterator: iterator, done: false };
          return performPromiseAll(iteratorRecord, C, capability);
        } catch (e) {
          var exception = e;
          if (iteratorRecord && !iteratorRecord.done) {
            try {
              ES.IteratorClose(iterator, true);
            } catch (ee) {
              exception = ee;
            }
          }
          var reject = capability.reject;
          reject(exception);
          return capability.promise;
        }
      },

      race: function race(iterable) {
        var C = this;
        if (!ES.TypeIsObject(C)) {
          throw new TypeError('Promise is not object');
        }
        var capability = new PromiseCapability(C);
        var iterator, iteratorRecord;
        try {
          iterator = ES.GetIterator(iterable);
          iteratorRecord = { iterator: iterator, done: false };
          return performPromiseRace(iteratorRecord, C, capability);
        } catch (e) {
          var exception = e;
          if (iteratorRecord && !iteratorRecord.done) {
            try {
              ES.IteratorClose(iterator, true);
            } catch (ee) {
              exception = ee;
            }
          }
          var reject = capability.reject;
          reject(exception);
          return capability.promise;
        }
      },

      reject: function reject(reason) {
        var C = this;
        if (!ES.TypeIsObject(C)) {
          throw new TypeError('Bad promise constructor');
        }
        var capability = new PromiseCapability(C);
        var rejectFunc = capability.reject;
        rejectFunc(reason); // call with this===undefined
        return capability.promise;
      },

      resolve: function resolve(v) {
        // See https://esdiscuss.org/topic/fixing-promise-resolve for spec
        var C = this;
        if (!ES.TypeIsObject(C)) {
          throw new TypeError('Bad promise constructor');
        }
        if (ES.IsPromise(v)) {
          var constructor = v.constructor;
          if (constructor === C) {
            return v;
          }
        }
        var capability = new PromiseCapability(C);
        var resolveFunc = capability.resolve;
        resolveFunc(v); // call with this===undefined
        return capability.promise;
      }
    });

    defineProperties(Promise$prototype, {
      'catch': function (onRejected) {
        return this.then(null, onRejected);
      },

      then: function then(onFulfilled, onRejected) {
        var promise = this;
        if (!ES.IsPromise(promise)) { throw new TypeError('not a promise'); }
        var C = ES.SpeciesConstructor(promise, Promise);
        var resultCapability;
        var returnValueIsIgnored = arguments.length > 2 && arguments[2] === PROMISE_FAKE_CAPABILITY;
        if (returnValueIsIgnored && C === Promise) {
          resultCapability = PROMISE_FAKE_CAPABILITY;
        } else {
          resultCapability = new PromiseCapability(C);
        }
        // PerformPromiseThen(promise, onFulfilled, onRejected, resultCapability)
        // Note that we've split the 'reaction' object into its two
        // components, "capabilities" and "handler"
        // "capabilities" is always equal to `resultCapability`
        var fulfillReactionHandler = ES.IsCallable(onFulfilled) ? onFulfilled : PROMISE_IDENTITY;
        var rejectReactionHandler = ES.IsCallable(onRejected) ? onRejected : PROMISE_THROWER;
        var _promise = promise._promise;
        var value;
        if (_promise.state === PROMISE_PENDING) {
          if (_promise.reactionLength === 0) {
            _promise.fulfillReactionHandler0 = fulfillReactionHandler;
            _promise.rejectReactionHandler0 = rejectReactionHandler;
            _promise.reactionCapability0 = resultCapability;
          } else {
            var idx = 3 * (_promise.reactionLength - 1);
            _promise[idx + PROMISE_FULFILL_OFFSET] = fulfillReactionHandler;
            _promise[idx + PROMISE_REJECT_OFFSET] = rejectReactionHandler;
            _promise[idx + PROMISE_CAPABILITY_OFFSET] = resultCapability;
          }
          _promise.reactionLength += 1;
        } else if (_promise.state === PROMISE_FULFILLED) {
          value = _promise.result;
          enqueuePromiseReactionJob(
            fulfillReactionHandler, resultCapability, value
          );
        } else if (_promise.state === PROMISE_REJECTED) {
          value = _promise.result;
          enqueuePromiseReactionJob(
            rejectReactionHandler, resultCapability, value
          );
        } else {
          throw new TypeError('unexpected Promise state');
        }
        return resultCapability.promise;
      }
    });
    // This helps the optimizer by ensuring that methods which take
    // capabilities aren't polymorphic.
    PROMISE_FAKE_CAPABILITY = new PromiseCapability(Promise);
    Promise$prototype$then = Promise$prototype.then;

    return Promise;
  }());

  // Chrome's native Promise has extra methods that it shouldn't have. Let's remove them.
  if (globals.Promise) {
    delete globals.Promise.accept;
    delete globals.Promise.defer;
    delete globals.Promise.prototype.chain;
  }

  if (typeof PromiseShim === 'function') {
    // export the Promise constructor.
    defineProperties(globals, { Promise: PromiseShim });
    // In Chrome 33 (and thereabouts) Promise is defined, but the
    // implementation is buggy in a number of ways.  Let's check subclassing
    // support to see if we have a buggy implementation.
    var promiseSupportsSubclassing = supportsSubclassing(globals.Promise, function (S) {
      return S.resolve(42).then(function () {}) instanceof S;
    });
    var promiseIgnoresNonFunctionThenCallbacks = !throwsError(function () {
      globals.Promise.reject(42).then(null, 5).then(null, noop);
    });
    var promiseRequiresObjectContext = throwsError(function () { globals.Promise.call(3, noop); });
    // Promise.resolve() was errata'ed late in the ES6 process.
    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1170742
    //      https://code.google.com/p/v8/issues/detail?id=4161
    // It serves as a proxy for a number of other bugs in early Promise
    // implementations.
    var promiseResolveBroken = (function (Promise) {
      var p = Promise.resolve(5);
      p.constructor = {};
      var p2 = Promise.resolve(p);
      try {
        p2.then(null, noop).then(null, noop); // avoid "uncaught rejection" warnings in console
      } catch (e) {
        return true; // v8 native Promises break here https://code.google.com/p/chromium/issues/detail?id=575314
      }
      return p === p2; // This *should* be false!
    }(globals.Promise));

    // Chrome 46 (probably older too) does not retrieve a thenable's .then synchronously
    var getsThenSynchronously = supportsDescriptors && (function () {
      var count = 0;
      var thenable = Object.defineProperty({}, 'then', { get: function () { count += 1; } });
      Promise.resolve(thenable);
      return count === 1;
    }());

    var BadResolverPromise = function BadResolverPromise(executor) {
      var p = new Promise(executor);
      executor(3, function () {});
      this.then = p.then;
      this.constructor = BadResolverPromise;
    };
    BadResolverPromise.prototype = Promise.prototype;
    BadResolverPromise.all = Promise.all;
    // Chrome Canary 49 (probably older too) has some implementation bugs
    var hasBadResolverPromise = valueOrFalseIfThrows(function () {
      return !!BadResolverPromise.all([1, 2]);
    });

    if (!promiseSupportsSubclassing || !promiseIgnoresNonFunctionThenCallbacks ||
        !promiseRequiresObjectContext || promiseResolveBroken ||
        !getsThenSynchronously || hasBadResolverPromise) {
      /* globals Promise: true */
      /* eslint-disable no-undef, no-global-assign */
      /* jshint -W020 */
      Promise = PromiseShim;
      /* jshint +W020 */
      /* eslint-enable no-undef, no-global-assign */
      /* globals Promise: false */
      overrideNative(globals, 'Promise', PromiseShim);
    }
    if (Promise.all.length !== 1) {
      var origAll = Promise.all;
      overrideNative(Promise, 'all', function all(iterable) {
        return ES.Call(origAll, this, arguments);
      });
    }
    if (Promise.race.length !== 1) {
      var origRace = Promise.race;
      overrideNative(Promise, 'race', function race(iterable) {
        return ES.Call(origRace, this, arguments);
      });
    }
    if (Promise.resolve.length !== 1) {
      var origResolve = Promise.resolve;
      overrideNative(Promise, 'resolve', function resolve(x) {
        return ES.Call(origResolve, this, arguments);
      });
    }
    if (Promise.reject.length !== 1) {
      var origReject = Promise.reject;
      overrideNative(Promise, 'reject', function reject(r) {
        return ES.Call(origReject, this, arguments);
      });
    }
    ensureEnumerable(Promise, 'all');
    ensureEnumerable(Promise, 'race');
    ensureEnumerable(Promise, 'resolve');
    ensureEnumerable(Promise, 'reject');
    addDefaultSpecies(Promise);
  }

  // Map and Set require a true ES5 environment
  // Their fast path also requires that the environment preserve
  // property insertion order, which is not guaranteed by the spec.
  var testOrder = function (a) {
    var b = keys(_reduce(a, function (o, k) {
      o[k] = true;
      return o;
    }, {}));
    return a.join(':') === b.join(':');
  };
  var preservesInsertionOrder = testOrder(['z', 'a', 'bb']);
  // some engines (eg, Chrome) only preserve insertion order for string keys
  var preservesNumericInsertionOrder = testOrder(['z', 1, 'a', '3', 2]);

  if (supportsDescriptors) {

    var fastkey = function fastkey(key, skipInsertionOrderCheck) {
      if (!skipInsertionOrderCheck && !preservesInsertionOrder) {
        return null;
      }
      if (isNullOrUndefined(key)) {
        return '^' + ES.ToString(key);
      } else if (typeof key === 'string') {
        return '$' + key;
      } else if (typeof key === 'number') {
        // note that -0 will get coerced to "0" when used as a property key
        if (!preservesNumericInsertionOrder) {
          return 'n' + key;
        }
        return key;
      } else if (typeof key === 'boolean') {
        return 'b' + key;
      }
      return null;
    };

    var emptyObject = function emptyObject() {
      // accomodate some older not-quite-ES5 browsers
      return Object.create ? Object.create(null) : {};
    };

    var addIterableToMap = function addIterableToMap(MapConstructor, map, iterable) {
      if (isArray(iterable) || Type.string(iterable)) {
        _forEach(iterable, function (entry) {
          if (!ES.TypeIsObject(entry)) {
            throw new TypeError('Iterator value ' + entry + ' is not an entry object');
          }
          map.set(entry[0], entry[1]);
        });
      } else if (iterable instanceof MapConstructor) {
        _call(MapConstructor.prototype.forEach, iterable, function (value, key) {
          map.set(key, value);
        });
      } else {
        var iter, adder;
        if (!isNullOrUndefined(iterable)) {
          adder = map.set;
          if (!ES.IsCallable(adder)) { throw new TypeError('bad map'); }
          iter = ES.GetIterator(iterable);
        }
        if (typeof iter !== 'undefined') {
          while (true) {
            var next = ES.IteratorStep(iter);
            if (next === false) { break; }
            var nextItem = next.value;
            try {
              if (!ES.TypeIsObject(nextItem)) {
                throw new TypeError('Iterator value ' + nextItem + ' is not an entry object');
              }
              _call(adder, map, nextItem[0], nextItem[1]);
            } catch (e) {
              ES.IteratorClose(iter, true);
              throw e;
            }
          }
        }
      }
    };
    var addIterableToSet = function addIterableToSet(SetConstructor, set, iterable) {
      if (isArray(iterable) || Type.string(iterable)) {
        _forEach(iterable, function (value) {
          set.add(value);
        });
      } else if (iterable instanceof SetConstructor) {
        _call(SetConstructor.prototype.forEach, iterable, function (value) {
          set.add(value);
        });
      } else {
        var iter, adder;
        if (!isNullOrUndefined(iterable)) {
          adder = set.add;
          if (!ES.IsCallable(adder)) { throw new TypeError('bad set'); }
          iter = ES.GetIterator(iterable);
        }
        if (typeof iter !== 'undefined') {
          while (true) {
            var next = ES.IteratorStep(iter);
            if (next === false) { break; }
            var nextValue = next.value;
            try {
              _call(adder, set, nextValue);
            } catch (e) {
              ES.IteratorClose(iter, true);
              throw e;
            }
          }
        }
      }
    };

    var collectionShims = {
      Map: (function () {

        var empty = {};

        var MapEntry = function MapEntry(key, value) {
          this.key = key;
          this.value = value;
          this.next = null;
          this.prev = null;
        };

        MapEntry.prototype.isRemoved = function isRemoved() {
          return this.key === empty;
        };

        var isMap = function isMap(map) {
          return !!map._es6map;
        };

        var requireMapSlot = function requireMapSlot(map, method) {
          if (!ES.TypeIsObject(map) || !isMap(map)) {
            throw new TypeError('Method Map.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(map));
          }
        };

        var MapIterator = function MapIterator(map, kind) {
          requireMapSlot(map, '[[MapIterator]]');
          this.head = map._head;
          this.i = this.head;
          this.kind = kind;
        };

        MapIterator.prototype = {
          next: function next() {
            var i = this.i;
            var kind = this.kind;
            var head = this.head;
            if (typeof this.i === 'undefined') {
              return iteratorResult();
            }
            while (i.isRemoved() && i !== head) {
              // back up off of removed entries
              i = i.prev;
            }
            // advance to next unreturned element.
            var result;
            while (i.next !== head) {
              i = i.next;
              if (!i.isRemoved()) {
                if (kind === 'key') {
                  result = i.key;
                } else if (kind === 'value') {
                  result = i.value;
                } else {
                  result = [i.key, i.value];
                }
                this.i = i;
                return iteratorResult(result);
              }
            }
            // once the iterator is done, it is done forever.
            this.i = void 0;
            return iteratorResult();
          }
        };
        addIterator(MapIterator.prototype);

        var Map$prototype;
        var MapShim = function Map() {
          if (!(this instanceof Map)) {
            throw new TypeError('Constructor Map requires "new"');
          }
          if (this && this._es6map) {
            throw new TypeError('Bad construction');
          }
          var map = emulateES6construct(this, Map, Map$prototype, {
            _es6map: true,
            _head: null,
            _map: OrigMap ? new OrigMap() : null,
            _size: 0,
            _storage: emptyObject()
          });

          var head = new MapEntry(null, null);
          // circular doubly-linked list.
          /* eslint no-multi-assign: 1 */
          head.next = head.prev = head;
          map._head = head;

          // Optionally initialize map from iterable
          if (arguments.length > 0) {
            addIterableToMap(Map, map, arguments[0]);
          }
          return map;
        };
        Map$prototype = MapShim.prototype;

        Value.getter(Map$prototype, 'size', function () {
          if (typeof this._size === 'undefined') {
            throw new TypeError('size method called on incompatible Map');
          }
          return this._size;
        });

        defineProperties(Map$prototype, {
          get: function get(key) {
            requireMapSlot(this, 'get');
            var entry;
            var fkey = fastkey(key, true);
            if (fkey !== null) {
              // fast O(1) path
              entry = this._storage[fkey];
              if (entry) {
                return entry.value;
              } else {
                return;
              }
            }
            if (this._map) {
              // fast object key path
              entry = origMapGet.call(this._map, key);
              if (entry) {
                return entry.value;
              } else {
                return;
              }
            }
            var head = this._head;
            var i = head;
            while ((i = i.next) !== head) {
              if (ES.SameValueZero(i.key, key)) {
                return i.value;
              }
            }
          },

          has: function has(key) {
            requireMapSlot(this, 'has');
            var fkey = fastkey(key, true);
            if (fkey !== null) {
              // fast O(1) path
              return typeof this._storage[fkey] !== 'undefined';
            }
            if (this._map) {
              // fast object key path
              return origMapHas.call(this._map, key);
            }
            var head = this._head;
            var i = head;
            while ((i = i.next) !== head) {
              if (ES.SameValueZero(i.key, key)) {
                return true;
              }
            }
            return false;
          },

          set: function set(key, value) {
            requireMapSlot(this, 'set');
            var head = this._head;
            var i = head;
            var entry;
            var fkey = fastkey(key, true);
            if (fkey !== null) {
              // fast O(1) path
              if (typeof this._storage[fkey] !== 'undefined') {
                this._storage[fkey].value = value;
                return this;
              } else {
                entry = this._storage[fkey] = new MapEntry(key, value); /* eslint no-multi-assign: 1 */
                i = head.prev;
                // fall through
              }
            } else if (this._map) {
              // fast object key path
              if (origMapHas.call(this._map, key)) {
                origMapGet.call(this._map, key).value = value;
              } else {
                entry = new MapEntry(key, value);
                origMapSet.call(this._map, key, entry);
                i = head.prev;
                // fall through
              }
            }
            while ((i = i.next) !== head) {
              if (ES.SameValueZero(i.key, key)) {
                i.value = value;
                return this;
              }
            }
            entry = entry || new MapEntry(key, value);
            if (ES.SameValue(-0, key)) {
              entry.key = +0; // coerce -0 to +0 in entry
            }
            entry.next = this._head;
            entry.prev = this._head.prev;
            entry.prev.next = entry;
            entry.next.prev = entry;
            this._size += 1;
            return this;
          },

          'delete': function (key) {
            requireMapSlot(this, 'delete');
            var head = this._head;
            var i = head;
            var fkey = fastkey(key, true);
            if (fkey !== null) {
              // fast O(1) path
              if (typeof this._storage[fkey] === 'undefined') {
                return false;
              }
              i = this._storage[fkey].prev;
              delete this._storage[fkey];
              // fall through
            } else if (this._map) {
              // fast object key path
              if (!origMapHas.call(this._map, key)) {
                return false;
              }
              i = origMapGet.call(this._map, key).prev;
              origMapDelete.call(this._map, key);
              // fall through
            }
            while ((i = i.next) !== head) {
              if (ES.SameValueZero(i.key, key)) {
                i.key = empty;
                i.value = empty;
                i.prev.next = i.next;
                i.next.prev = i.prev;
                this._size -= 1;
                return true;
              }
            }
            return false;
          },

          clear: function clear() {
             /* eslint no-multi-assign: 1 */
            requireMapSlot(this, 'clear');
            this._map = OrigMap ? new OrigMap() : null;
            this._size = 0;
            this._storage = emptyObject();
            var head = this._head;
            var i = head;
            var p = i.next;
            while ((i = p) !== head) {
              i.key = empty;
              i.value = empty;
              p = i.next;
              i.next = i.prev = head;
            }
            head.next = head.prev = head;
          },

          keys: function keys() {
            requireMapSlot(this, 'keys');
            return new MapIterator(this, 'key');
          },

          values: function values() {
            requireMapSlot(this, 'values');
            return new MapIterator(this, 'value');
          },

          entries: function entries() {
            requireMapSlot(this, 'entries');
            return new MapIterator(this, 'key+value');
          },

          forEach: function forEach(callback) {
            requireMapSlot(this, 'forEach');
            var context = arguments.length > 1 ? arguments[1] : null;
            var it = this.entries();
            for (var entry = it.next(); !entry.done; entry = it.next()) {
              if (context) {
                _call(callback, context, entry.value[1], entry.value[0], this);
              } else {
                callback(entry.value[1], entry.value[0], this);
              }
            }
          }
        });
        addIterator(Map$prototype, Map$prototype.entries);

        return MapShim;
      }()),

      Set: (function () {
        var isSet = function isSet(set) {
          return set._es6set && typeof set._storage !== 'undefined';
        };
        var requireSetSlot = function requireSetSlot(set, method) {
          if (!ES.TypeIsObject(set) || !isSet(set)) {
            // https://github.com/paulmillr/es6-shim/issues/176
            throw new TypeError('Set.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(set));
          }
        };

        // Creating a Map is expensive.  To speed up the common case of
        // Sets containing only string or numeric keys, we use an object
        // as backing storage and lazily create a full Map only when
        // required.
        var Set$prototype;
        var SetShim = function Set() {
          if (!(this instanceof Set)) {
            throw new TypeError('Constructor Set requires "new"');
          }
          if (this && this._es6set) {
            throw new TypeError('Bad construction');
          }
          var set = emulateES6construct(this, Set, Set$prototype, {
            _es6set: true,
            '[[SetData]]': null,
            _storage: emptyObject()
          });
          if (!set._es6set) {
            throw new TypeError('bad set');
          }

          // Optionally initialize Set from iterable
          if (arguments.length > 0) {
            addIterableToSet(Set, set, arguments[0]);
          }
          return set;
        };
        Set$prototype = SetShim.prototype;

        var decodeKey = function (key) {
          var k = key;
          if (k === '^null') {
            return null;
          } else if (k === '^undefined') {
            return void 0;
          } else {
            var first = k.charAt(0);
            if (first === '$') {
              return _strSlice(k, 1);
            } else if (first === 'n') {
              return +_strSlice(k, 1);
            } else if (first === 'b') {
              return k === 'btrue';
            }
          }
          return +k;
        };
        // Switch from the object backing storage to a full Map.
        var ensureMap = function ensureMap(set) {
          if (!set['[[SetData]]']) {
            var m = new collectionShims.Map();
            set['[[SetData]]'] = m;
            _forEach(keys(set._storage), function (key) {
              var k = decodeKey(key);
              m.set(k, k);
            });
            set['[[SetData]]'] = m;
          }
          set._storage = null; // free old backing storage
        };

        Value.getter(SetShim.prototype, 'size', function () {
          requireSetSlot(this, 'size');
          if (this._storage) {
            return keys(this._storage).length;
          }
          ensureMap(this);
          return this['[[SetData]]'].size;
        });

        defineProperties(SetShim.prototype, {
          has: function has(key) {
            requireSetSlot(this, 'has');
            var fkey;
            if (this._storage && (fkey = fastkey(key)) !== null) {
              return !!this._storage[fkey];
            }
            ensureMap(this);
            return this['[[SetData]]'].has(key);
          },

          add: function add(key) {
            requireSetSlot(this, 'add');
            var fkey;
            if (this._storage && (fkey = fastkey(key)) !== null) {
              this._storage[fkey] = true;
              return this;
            }
            ensureMap(this);
            this['[[SetData]]'].set(key, key);
            return this;
          },

          'delete': function (key) {
            requireSetSlot(this, 'delete');
            var fkey;
            if (this._storage && (fkey = fastkey(key)) !== null) {
              var hasFKey = _hasOwnProperty(this._storage, fkey);
              return (delete this._storage[fkey]) && hasFKey;
            }
            ensureMap(this);
            return this['[[SetData]]']['delete'](key);
          },

          clear: function clear() {
            requireSetSlot(this, 'clear');
            if (this._storage) {
              this._storage = emptyObject();
            }
            if (this['[[SetData]]']) {
              this['[[SetData]]'].clear();
            }
          },

          values: function values() {
            requireSetSlot(this, 'values');
            ensureMap(this);
            return this['[[SetData]]'].values();
          },

          entries: function entries() {
            requireSetSlot(this, 'entries');
            ensureMap(this);
            return this['[[SetData]]'].entries();
          },

          forEach: function forEach(callback) {
            requireSetSlot(this, 'forEach');
            var context = arguments.length > 1 ? arguments[1] : null;
            var entireSet = this;
            ensureMap(entireSet);
            this['[[SetData]]'].forEach(function (value, key) {
              if (context) {
                _call(callback, context, key, key, entireSet);
              } else {
                callback(key, key, entireSet);
              }
            });
          }
        });
        defineProperty(SetShim.prototype, 'keys', SetShim.prototype.values, true);
        addIterator(SetShim.prototype, SetShim.prototype.values);

        return SetShim;
      }())
    };

    if (globals.Map || globals.Set) {
      // Safari 8, for example, doesn't accept an iterable.
      var mapAcceptsArguments = valueOrFalseIfThrows(function () { return new Map([[1, 2]]).get(1) === 2; });
      if (!mapAcceptsArguments) {
        globals.Map = function Map() {
          if (!(this instanceof Map)) {
            throw new TypeError('Constructor Map requires "new"');
          }
          var m = new OrigMap();
          if (arguments.length > 0) {
            addIterableToMap(Map, m, arguments[0]);
          }
          delete m.constructor;
          Object.setPrototypeOf(m, globals.Map.prototype);
          return m;
        };
        globals.Map.prototype = create(OrigMap.prototype);
        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);
        Value.preserveToString(globals.Map, OrigMap);
      }
      var testMap = new Map();
      var mapUsesSameValueZero = (function () {
        // Chrome 38-42, node 0.11/0.12, iojs 1/2 also have a bug when the Map has a size > 4
        var m = new Map([[1, 0], [2, 0], [3, 0], [4, 0]]);
        m.set(-0, m);
        return m.get(0) === m && m.get(-0) === m && m.has(0) && m.has(-0);
      }());
      var mapSupportsChaining = testMap.set(1, 2) === testMap;
      if (!mapUsesSameValueZero || !mapSupportsChaining) {
        overrideNative(Map.prototype, 'set', function set(k, v) {
          _call(origMapSet, this, k === 0 ? 0 : k, v);
          return this;
        });
      }
      if (!mapUsesSameValueZero) {
        defineProperties(Map.prototype, {
          get: function get(k) {
            return _call(origMapGet, this, k === 0 ? 0 : k);
          },
          has: function has(k) {
            return _call(origMapHas, this, k === 0 ? 0 : k);
          }
        }, true);
        Value.preserveToString(Map.prototype.get, origMapGet);
        Value.preserveToString(Map.prototype.has, origMapHas);
      }
      var testSet = new Set();
      var setUsesSameValueZero = (function (s) {
        s['delete'](0);
        s.add(-0);
        return !s.has(0);
      }(testSet));
      var setSupportsChaining = testSet.add(1) === testSet;
      if (!setUsesSameValueZero || !setSupportsChaining) {
        var origSetAdd = Set.prototype.add;
        Set.prototype.add = function add(v) {
          _call(origSetAdd, this, v === 0 ? 0 : v);
          return this;
        };
        Value.preserveToString(Set.prototype.add, origSetAdd);
      }
      if (!setUsesSameValueZero) {
        var origSetHas = Set.prototype.has;
        Set.prototype.has = function has(v) {
          return _call(origSetHas, this, v === 0 ? 0 : v);
        };
        Value.preserveToString(Set.prototype.has, origSetHas);
        var origSetDel = Set.prototype['delete'];
        Set.prototype['delete'] = function SetDelete(v) {
          return _call(origSetDel, this, v === 0 ? 0 : v);
        };
        Value.preserveToString(Set.prototype['delete'], origSetDel);
      }
      var mapSupportsSubclassing = supportsSubclassing(globals.Map, function (M) {
        var m = new M([]);
        // Firefox 32 is ok with the instantiating the subclass but will
        // throw when the map is used.
        m.set(42, 42);
        return m instanceof M;
      });
      // without Object.setPrototypeOf, subclassing is not possible
      var mapFailsToSupportSubclassing = Object.setPrototypeOf && !mapSupportsSubclassing;
      var mapRequiresNew = (function () {
        try {
          return !(globals.Map() instanceof globals.Map);
        } catch (e) {
          return e instanceof TypeError;
        }
      }());
      if (globals.Map.length !== 0 || mapFailsToSupportSubclassing || !mapRequiresNew) {
        globals.Map = function Map() {
          if (!(this instanceof Map)) {
            throw new TypeError('Constructor Map requires "new"');
          }
          var m = new OrigMap();
          if (arguments.length > 0) {
            addIterableToMap(Map, m, arguments[0]);
          }
          delete m.constructor;
          Object.setPrototypeOf(m, Map.prototype);
          return m;
        };
        globals.Map.prototype = OrigMap.prototype;
        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);
        Value.preserveToString(globals.Map, OrigMap);
      }
      var setSupportsSubclassing = supportsSubclassing(globals.Set, function (S) {
        var s = new S([]);
        s.add(42, 42);
        return s instanceof S;
      });
      // without Object.setPrototypeOf, subclassing is not possible
      var setFailsToSupportSubclassing = Object.setPrototypeOf && !setSupportsSubclassing;
      var setRequiresNew = (function () {
        try {
          return !(globals.Set() instanceof globals.Set);
        } catch (e) {
          return e instanceof TypeError;
        }
      }());
      if (globals.Set.length !== 0 || setFailsToSupportSubclassing || !setRequiresNew) {
        var OrigSet = globals.Set;
        globals.Set = function Set() {
          if (!(this instanceof Set)) {
            throw new TypeError('Constructor Set requires "new"');
          }
          var s = new OrigSet();
          if (arguments.length > 0) {
            addIterableToSet(Set, s, arguments[0]);
          }
          delete s.constructor;
          Object.setPrototypeOf(s, Set.prototype);
          return s;
        };
        globals.Set.prototype = OrigSet.prototype;
        defineProperty(globals.Set.prototype, 'constructor', globals.Set, true);
        Value.preserveToString(globals.Set, OrigSet);
      }
      var newMap = new globals.Map();
      var mapIterationThrowsStopIterator = !valueOrFalseIfThrows(function () {
        return newMap.keys().next().done;
      });
      /*
        - In Firefox < 23, Map#size is a function.
        - In all current Firefox, Set#entries/keys/values & Map#clear do not exist
        - https://bugzilla.mozilla.org/show_bug.cgi?id=869996
        - In Firefox 24, Map and Set do not implement forEach
        - In Firefox 25 at least, Map and Set are callable without "new"
      */
      if (
        typeof globals.Map.prototype.clear !== 'function' ||
        new globals.Set().size !== 0 ||
        newMap.size !== 0 ||
        typeof globals.Map.prototype.keys !== 'function' ||
        typeof globals.Set.prototype.keys !== 'function' ||
        typeof globals.Map.prototype.forEach !== 'function' ||
        typeof globals.Set.prototype.forEach !== 'function' ||
        isCallableWithoutNew(globals.Map) ||
        isCallableWithoutNew(globals.Set) ||
        typeof newMap.keys().next !== 'function' || // Safari 8
        mapIterationThrowsStopIterator || // Firefox 25
        !mapSupportsSubclassing
      ) {
        defineProperties(globals, {
          Map: collectionShims.Map,
          Set: collectionShims.Set
        }, true);
      }

      if (globals.Set.prototype.keys !== globals.Set.prototype.values) {
        // Fixed in WebKit with https://bugs.webkit.org/show_bug.cgi?id=144190
        defineProperty(globals.Set.prototype, 'keys', globals.Set.prototype.values, true);
      }

      // Shim incomplete iterator implementations.
      addIterator(Object.getPrototypeOf((new globals.Map()).keys()));
      addIterator(Object.getPrototypeOf((new globals.Set()).keys()));

      if (functionsHaveNames && globals.Set.prototype.has.name !== 'has') {
        // Microsoft Edge v0.11.10074.0 is missing a name on Set#has
        var anonymousSetHas = globals.Set.prototype.has;
        overrideNative(globals.Set.prototype, 'has', function has(key) {
          return _call(anonymousSetHas, this, key);
        });
      }
    }
    defineProperties(globals, collectionShims);
    addDefaultSpecies(globals.Map);
    addDefaultSpecies(globals.Set);
  }

  var throwUnlessTargetIsObject = function throwUnlessTargetIsObject(target) {
    if (!ES.TypeIsObject(target)) {
      throw new TypeError('target must be an object');
    }
  };

  // Some Reflect methods are basically the same as
  // those on the Object global, except that a TypeError is thrown if
  // target isn't an object. As well as returning a boolean indicating
  // the success of the operation.
  var ReflectShims = {
    // Apply method in a functional form.
    apply: function apply() {
      return ES.Call(ES.Call, null, arguments);
    },

    // New operator in a functional form.
    construct: function construct(constructor, args) {
      if (!ES.IsConstructor(constructor)) {
        throw new TypeError('First argument must be a constructor.');
      }
      var newTarget = arguments.length > 2 ? arguments[2] : constructor;
      if (!ES.IsConstructor(newTarget)) {
        throw new TypeError('new.target must be a constructor.');
      }
      return ES.Construct(constructor, args, newTarget, 'internal');
    },

    // When deleting a non-existent or configurable property,
    // true is returned.
    // When attempting to delete a non-configurable property,
    // it will return false.
    deleteProperty: function deleteProperty(target, key) {
      throwUnlessTargetIsObject(target);
      if (supportsDescriptors) {
        var desc = Object.getOwnPropertyDescriptor(target, key);

        if (desc && !desc.configurable) {
          return false;
        }
      }

      // Will return true.
      return delete target[key];
    },

    has: function has(target, key) {
      throwUnlessTargetIsObject(target);
      return key in target;
    }
  };

  if (Object.getOwnPropertyNames) {
    Object.assign(ReflectShims, {
      // Basically the result of calling the internal [[OwnPropertyKeys]].
      // Concatenating propertyNames and propertySymbols should do the trick.
      // This should continue to work together with a Symbol shim
      // which overrides Object.getOwnPropertyNames and implements
      // Object.getOwnPropertySymbols.
      ownKeys: function ownKeys(target) {
        throwUnlessTargetIsObject(target);
        var keys = Object.getOwnPropertyNames(target);

        if (ES.IsCallable(Object.getOwnPropertySymbols)) {
          _pushApply(keys, Object.getOwnPropertySymbols(target));
        }

        return keys;
      }
    });
  }

  var callAndCatchException = function ConvertExceptionToBoolean(func) {
    return !throwsError(func);
  };

  if (Object.preventExtensions) {
    Object.assign(ReflectShims, {
      isExtensible: function isExtensible(target) {
        throwUnlessTargetIsObject(target);
        return Object.isExtensible(target);
      },
      preventExtensions: function preventExtensions(target) {
        throwUnlessTargetIsObject(target);
        return callAndCatchException(function () {
          Object.preventExtensions(target);
        });
      }
    });
  }

  if (supportsDescriptors) {
    var internalGet = function get(target, key, receiver) {
      var desc = Object.getOwnPropertyDescriptor(target, key);

      if (!desc) {
        var parent = Object.getPrototypeOf(target);

        if (parent === null) {
          return void 0;
        }

        return internalGet(parent, key, receiver);
      }

      if ('value' in desc) {
        return desc.value;
      }

      if (desc.get) {
        return ES.Call(desc.get, receiver);
      }

      return void 0;
    };

    var internalSet = function set(target, key, value, receiver) {
      var desc = Object.getOwnPropertyDescriptor(target, key);

      if (!desc) {
        var parent = Object.getPrototypeOf(target);

        if (parent !== null) {
          return internalSet(parent, key, value, receiver);
        }

        desc = {
          value: void 0,
          writable: true,
          enumerable: true,
          configurable: true
        };
      }

      if ('value' in desc) {
        if (!desc.writable) {
          return false;
        }

        if (!ES.TypeIsObject(receiver)) {
          return false;
        }

        var existingDesc = Object.getOwnPropertyDescriptor(receiver, key);

        if (existingDesc) {
          return Reflect.defineProperty(receiver, key, {
            value: value
          });
        } else {
          return Reflect.defineProperty(receiver, key, {
            value: value,
            writable: true,
            enumerable: true,
            configurable: true
          });
        }
      }

      if (desc.set) {
        _call(desc.set, receiver, value);
        return true;
      }

      return false;
    };

    Object.assign(ReflectShims, {
      defineProperty: function defineProperty(target, propertyKey, attributes) {
        throwUnlessTargetIsObject(target);
        return callAndCatchException(function () {
          Object.defineProperty(target, propertyKey, attributes);
        });
      },

      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
        throwUnlessTargetIsObject(target);
        return Object.getOwnPropertyDescriptor(target, propertyKey);
      },

      // Syntax in a functional form.
      get: function get(target, key) {
        throwUnlessTargetIsObject(target);
        var receiver = arguments.length > 2 ? arguments[2] : target;

        return internalGet(target, key, receiver);
      },

      set: function set(target, key, value) {
        throwUnlessTargetIsObject(target);
        var receiver = arguments.length > 3 ? arguments[3] : target;

        return internalSet(target, key, value, receiver);
      }
    });
  }

  if (Object.getPrototypeOf) {
    var objectDotGetPrototypeOf = Object.getPrototypeOf;
    ReflectShims.getPrototypeOf = function getPrototypeOf(target) {
      throwUnlessTargetIsObject(target);
      return objectDotGetPrototypeOf(target);
    };
  }

  if (Object.setPrototypeOf && ReflectShims.getPrototypeOf) {
    var willCreateCircularPrototype = function (object, lastProto) {
      var proto = lastProto;
      while (proto) {
        if (object === proto) {
          return true;
        }
        proto = ReflectShims.getPrototypeOf(proto);
      }
      return false;
    };

    Object.assign(ReflectShims, {
      // Sets the prototype of the given object.
      // Returns true on success, otherwise false.
      setPrototypeOf: function setPrototypeOf(object, proto) {
        throwUnlessTargetIsObject(object);
        if (proto !== null && !ES.TypeIsObject(proto)) {
          throw new TypeError('proto must be an object or null');
        }

        // If they already are the same, we're done.
        if (proto === Reflect.getPrototypeOf(object)) {
          return true;
        }

        // Cannot alter prototype if object not extensible.
        if (Reflect.isExtensible && !Reflect.isExtensible(object)) {
          return false;
        }

        // Ensure that we do not create a circular prototype chain.
        if (willCreateCircularPrototype(object, proto)) {
          return false;
        }

        Object.setPrototypeOf(object, proto);

        return true;
      }
    });
  }
  var defineOrOverrideReflectProperty = function (key, shim) {
    if (!ES.IsCallable(globals.Reflect[key])) {
      defineProperty(globals.Reflect, key, shim);
    } else {
      var acceptsPrimitives = valueOrFalseIfThrows(function () {
        globals.Reflect[key](1);
        globals.Reflect[key](NaN);
        globals.Reflect[key](true);
        return true;
      });
      if (acceptsPrimitives) {
        overrideNative(globals.Reflect, key, shim);
      }
    }
  };
  Object.keys(ReflectShims).forEach(function (key) {
    defineOrOverrideReflectProperty(key, ReflectShims[key]);
  });
  var originalReflectGetProto = globals.Reflect.getPrototypeOf;
  if (functionsHaveNames && originalReflectGetProto && originalReflectGetProto.name !== 'getPrototypeOf') {
    overrideNative(globals.Reflect, 'getPrototypeOf', function getPrototypeOf(target) {
      return _call(originalReflectGetProto, globals.Reflect, target);
    });
  }
  if (globals.Reflect.setPrototypeOf) {
    if (valueOrFalseIfThrows(function () {
      globals.Reflect.setPrototypeOf(1, {});
      return true;
    })) {
      overrideNative(globals.Reflect, 'setPrototypeOf', ReflectShims.setPrototypeOf);
    }
  }
  if (globals.Reflect.defineProperty) {
    if (!valueOrFalseIfThrows(function () {
      var basic = !globals.Reflect.defineProperty(1, 'test', { value: 1 });
      // "extensible" fails on Edge 0.12
      var extensible = typeof Object.preventExtensions !== 'function' || !globals.Reflect.defineProperty(Object.preventExtensions({}), 'test', {});
      return basic && extensible;
    })) {
      overrideNative(globals.Reflect, 'defineProperty', ReflectShims.defineProperty);
    }
  }
  if (globals.Reflect.construct) {
    if (!valueOrFalseIfThrows(function () {
      var F = function F() {};
      return globals.Reflect.construct(function () {}, [], F) instanceof F;
    })) {
      overrideNative(globals.Reflect, 'construct', ReflectShims.construct);
    }
  }

  if (String(new Date(NaN)) !== 'Invalid Date') {
    var dateToString = Date.prototype.toString;
    var shimmedDateToString = function toString() {
      var valueOf = +this;
      if (valueOf !== valueOf) {
        return 'Invalid Date';
      }
      return ES.Call(dateToString, this);
    };
    overrideNative(Date.prototype, 'toString', shimmedDateToString);
  }

  // Annex B HTML methods
  // http://www.ecma-international.org/ecma-262/6.0/#sec-additional-properties-of-the-string.prototype-object
  var stringHTMLshims = {
    anchor: function anchor(name) { return ES.CreateHTML(this, 'a', 'name', name); },
    big: function big() { return ES.CreateHTML(this, 'big', '', ''); },
    blink: function blink() { return ES.CreateHTML(this, 'blink', '', ''); },
    bold: function bold() { return ES.CreateHTML(this, 'b', '', ''); },
    fixed: function fixed() { return ES.CreateHTML(this, 'tt', '', ''); },
    fontcolor: function fontcolor(color) { return ES.CreateHTML(this, 'font', 'color', color); },
    fontsize: function fontsize(size) { return ES.CreateHTML(this, 'font', 'size', size); },
    italics: function italics() { return ES.CreateHTML(this, 'i', '', ''); },
    link: function link(url) { return ES.CreateHTML(this, 'a', 'href', url); },
    small: function small() { return ES.CreateHTML(this, 'small', '', ''); },
    strike: function strike() { return ES.CreateHTML(this, 'strike', '', ''); },
    sub: function sub() { return ES.CreateHTML(this, 'sub', '', ''); },
    sup: function sub() { return ES.CreateHTML(this, 'sup', '', ''); }
  };
  _forEach(Object.keys(stringHTMLshims), function (key) {
    var method = String.prototype[key];
    var shouldOverwrite = false;
    if (ES.IsCallable(method)) {
      var output = _call(method, '', ' " ');
      var quotesCount = _concat([], output.match(/"/g)).length;
      shouldOverwrite = output !== output.toLowerCase() || quotesCount > 2;
    } else {
      shouldOverwrite = true;
    }
    if (shouldOverwrite) {
      overrideNative(String.prototype, key, stringHTMLshims[key]);
    }
  });

  var JSONstringifiesSymbols = (function () {
    // Microsoft Edge v0.12 stringifies Symbols incorrectly
    if (!hasSymbols) { return false; } // Symbols are not supported
    var stringify = typeof JSON === 'object' && typeof JSON.stringify === 'function' ? JSON.stringify : null;
    if (!stringify) { return false; } // JSON.stringify is not supported
    if (typeof stringify(Symbol()) !== 'undefined') { return true; } // Symbols should become `undefined`
    if (stringify([Symbol()]) !== '[null]') { return true; } // Symbols in arrays should become `null`
    var obj = { a: Symbol() };
    obj[Symbol()] = true;
    if (stringify(obj) !== '{}') { return true; } // Symbol-valued keys *and* Symbol-valued properties should be omitted
    return false;
  }());
  var JSONstringifyAcceptsObjectSymbol = valueOrFalseIfThrows(function () {
    // Chrome 45 throws on stringifying object symbols
    if (!hasSymbols) { return true; } // Symbols are not supported
    return JSON.stringify(Object(Symbol())) === '{}' && JSON.stringify([Object(Symbol())]) === '[{}]';
  });
  if (JSONstringifiesSymbols || !JSONstringifyAcceptsObjectSymbol) {
    var origStringify = JSON.stringify;
    overrideNative(JSON, 'stringify', function stringify(value) {
      if (typeof value === 'symbol') { return; }
      var replacer;
      if (arguments.length > 1) {
        replacer = arguments[1];
      }
      var args = [value];
      if (!isArray(replacer)) {
        var replaceFn = ES.IsCallable(replacer) ? replacer : null;
        var wrappedReplacer = function (key, val) {
          var parsedValue = replaceFn ? _call(replaceFn, this, key, val) : val;
          if (typeof parsedValue !== 'symbol') {
            if (Type.symbol(parsedValue)) {
              return assignTo({})(parsedValue);
            } else {
              return parsedValue;
            }
          }
        };
        args.push(wrappedReplacer);
      } else {
        // create wrapped replacer that handles an array replacer?
        args.push(replacer);
      }
      if (arguments.length > 2) {
        args.push(arguments[2]);
      }
      return origStringify.apply(this, args);
    });
  }

  return globals;
}));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9), __webpack_require__(12)))

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Define a hidden property
 *
 * @param obj
 * @param propertyName
 * @param value
 */
function defineHiddenProperty(obj, propertyName, value) {
    Object.defineProperty(obj, propertyName, {
        value: value,
        configurable: true,
        enumerable: false,
        writable: true
    });
}
/**
 * Define a simple property
 *
 * @param obj
 * @param propertyName
 * @param value
 */
function defineSimpleProperty(obj, propertyName, value) {
    Object.defineProperty(obj, propertyName, {
        value: value,
        configurable: true,
        enumerable: true,
        writable: true
    });
}
/**
 * Used to stringify Incident errors.
 */
var dummyError = new Error();
/**
 * A symbol used internally to prevent the capture of the call stack.
 */
var noStackSymbol = {};
// Incident factory, allows a fine control over the getter / setters
// and will eventually to have TypeError, SyntaxError, etc. as super classes.
function createIncident(_super) {
    Object.setPrototypeOf(Incident, _super);
    function __() {
        this.constructor = Incident;
    }
    __.prototype = _super.prototype;
    Incident.prototype = new __();
    function Incident() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (!(this instanceof Incident)) {
            switch (args.length) {
                case 0:
                    return new Incident(noStackSymbol);
                case 1:
                    if (args[0] instanceof Error) {
                        var converted = void 0;
                        var name_1 = args[0].name || "";
                        var message_1 = typeof args[0]._message === "function" ? args[0]._message : args[0].message || "";
                        if (args[0].cause instanceof Error) {
                            if (typeof args[0].data === "object") {
                                converted = new Incident(noStackSymbol, args[0].cause, name_1, args[0].data, message_1);
                            }
                            else {
                                converted = new Incident(noStackSymbol, args[0].cause, name_1, message_1);
                            }
                        }
                        else {
                            if (typeof args[0].data === "object") {
                                converted = new Incident(noStackSymbol, name_1, args[0].data, message_1);
                            }
                            else {
                                converted = new Incident(noStackSymbol, name_1, message_1);
                            }
                        }
                        if (args[0]._stackContainer !== undefined) {
                            converted._stackContainer = args[0]._stackContainer;
                        }
                        else if (args[0]._stack === undefined) {
                            converted._stackContainer = args[0];
                            converted._stack = null; // Use the stack as-is
                        }
                        else {
                            converted._stack = args[0]._stack;
                        }
                        return converted;
                    }
                    return new Incident(noStackSymbol, args[0]);
                case 2:
                    return new Incident(noStackSymbol, args[0], args[1]);
                case 3:
                    return new Incident(noStackSymbol, args[0], args[1], args[2]);
                default:
                    return new Incident(noStackSymbol, args[0], args[1], args[2], args[3]);
            }
        }
        var noStack = false;
        var name = "Incident";
        var data = {};
        var cause = undefined;
        var message = "";
        var argsLen = args.length;
        var argIndex = 0;
        if (argsLen > 0 && args[0] === noStackSymbol) {
            noStack = true;
            argIndex++;
        }
        if (argsLen > argIndex && (typeof args[argsLen - 1] === "string" || typeof args[argsLen - 1] === "function")) {
            message = args[--argsLen];
        }
        if (argIndex < argsLen && args[argIndex] instanceof Error) {
            cause = args[argIndex++];
        }
        if (argIndex < argsLen && typeof args[argIndex] === "string") {
            name = args[argIndex++];
        }
        if (argIndex < argsLen && typeof args[argIndex] === "object") {
            data = args[argIndex++];
        }
        _super.call(this, typeof message === "function" ? "<lazyMessage was not evaluated>" : message);
        this.name = name;
        defineHiddenProperty(this, "_message", message);
        this.data = data;
        if (cause !== undefined) {
            this.cause = cause;
        }
        defineHiddenProperty(this, "_stack", undefined);
        defineHiddenProperty(this, "_stackContainer", noStack ? undefined : new Error());
    }
    Incident.prototype.Incident = Incident;
    Incident.prototype.toString = function () {
        return dummyError.toString.apply(this, arguments);
    };
    function getMessage() {
        if (typeof this._message === "function") {
            this._message = this._message(this.data);
        }
        defineSimpleProperty(this, "message", this._message);
        return this._message;
    }
    function setMessage(message) {
        this._message = message;
    }
    function getStack() {
        if (this._stack === undefined || this._stack === null) {
            if (this._stackContainer !== undefined && this._stackContainer.stack !== undefined) {
                // Remove "Error\n    at new Incident..."
                var stack = this._stack === null ?
                    this._stackContainer.stack :
                    this._stackContainer.stack.replace(/^[^\n]+\n[^\n]+\n/, "");
                this._stack = this.message === "" ?
                    this.name + "\n" + stack :
                    this.name + ": " + this.message + "\n" + stack;
            }
            else {
                this._stack = this.message === "" ? this.name : this.name + ": " + this.message;
            }
            if (this.cause !== undefined && this.cause.stack !== undefined) {
                this._stack = this._stack + "\n  caused by " + this.cause.stack;
            }
        }
        Object.defineProperty(this, "message", {
            configurable: true,
            value: this._stack,
            writable: true
        });
        return this._stack;
    }
    function setStack(stack) {
        this._stackContainer = undefined;
        this._stack = stack;
    }
    Object.defineProperty(Incident.prototype, "message", {
        get: getMessage,
        set: setMessage,
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Incident.prototype, "stack", {
        get: getStack,
        set: setStack,
        enumerable: true,
        configurable: true
    });
    return Incident;
}
/* tslint:disable-next-line:variable-name */
exports.Incident = createIncident(Error);
exports.default = exports.Incident;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return (b64.length * 3 / 4) - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr((len * 3 / 4) - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0; i < l; i += 4) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}


/***/ }),
/* 157 */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 158 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {

var writeIEEE754 = __webpack_require__(16).writeIEEE754,
	readIEEE754 = __webpack_require__(16).readIEEE754,
  Map = __webpack_require__(73),
	Long = __webpack_require__(22),
  Double = __webpack_require__(27),
  Timestamp = __webpack_require__(28),
  ObjectID = __webpack_require__(29),
  BSONRegExp = __webpack_require__(30),
  Symbol = __webpack_require__(31),
	Int32 = __webpack_require__(48),
  Code = __webpack_require__(32),
	Decimal128 = __webpack_require__(33),
  MinKey = __webpack_require__(34),
  MaxKey = __webpack_require__(35),
  DBRef = __webpack_require__(36),
  Binary = __webpack_require__(37);

// Parts of the parser
var deserialize = __webpack_require__(160),
	serializer = __webpack_require__(163),
	calculateObjectSize = __webpack_require__(164);

/**
 * @ignore
 * @api private
 */
// Max Size
var MAXSIZE = (1024*1024*17);
// Max Document Buffer size
var buffer = new Buffer(MAXSIZE);

var BSON = function() {
}

/**
 * Serialize a Javascript object.
 *
 * @param {Object} object the Javascript object to serialize.
 * @param {Boolean} [options.checkKeys] the serializer will check if keys are valid.
 * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**.
 * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**.
 * @return {Buffer} returns the Buffer object containing the serialized object.
 * @api public
 */
BSON.prototype.serialize = function serialize(object, options) {
	options = options || {};
	// Unpack the options
	var checkKeys = typeof options.checkKeys == 'boolean'
		? options.checkKeys : false;
	var serializeFunctions = typeof options.serializeFunctions == 'boolean'
		? options.serializeFunctions : false;
	var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'
		? options.ignoreUndefined : true;

	// Attempt to serialize
	var serializationIndex = serializer(buffer, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined, []);
	// Create the final buffer
	var finishedBuffer = new Buffer(serializationIndex);
	// Copy into the finished buffer
	buffer.copy(finishedBuffer, 0, 0, finishedBuffer.length);
	// Return the buffer
	return finishedBuffer;
}

/**
 * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.
 *
 * @param {Object} object the Javascript object to serialize.
 * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object.
 * @param {Boolean} [options.checkKeys] the serializer will check if keys are valid.
 * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**.
 * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**.
 * @param {Number} [options.index] the index in the buffer where we wish to start serializing into.
 * @return {Number} returns the index pointing to the last written byte in the buffer.
 * @api public
 */
BSON.prototype.serializeWithBufferAndIndex = function(object, finalBuffer, options) {
	options = options || {};
	// Unpack the options
	var checkKeys = typeof options.checkKeys == 'boolean'
		? options.checkKeys : false;
	var serializeFunctions = typeof options.serializeFunctions == 'boolean'
		? options.serializeFunctions : false;
	var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'
		? options.ignoreUndefined : true;
	var startIndex = typeof options.index == 'number'
		? options.index : 0;

	// Attempt to serialize
	var serializationIndex = serializer(buffer, object, checkKeys, startIndex || 0, 0, serializeFunctions, ignoreUndefined);
	buffer.copy(finalBuffer, startIndex, 0, serializationIndex);

	// Return the index
	return serializationIndex - 1;
}

/**
 * Deserialize data as BSON.
 *
 * @param {Buffer} buffer the buffer containing the serialized set of BSON documents.
 * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.
 * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.
 * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.
 * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits
 * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a node.js Buffer instance.
 * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.
 * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.
 * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.
 * @return {Object} returns the deserialized Javascript Object.
 * @api public
 */
BSON.prototype.deserialize = function(buffer, options) {
  return deserialize(buffer, options);
}

/**
 * Calculate the bson size for a passed in Javascript object.
 *
 * @param {Object} object the Javascript object to calculate the BSON byte size for.
 * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**.
 * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**.
 * @return {Number} returns the number of bytes the BSON object will take up.
 * @api public
 */
BSON.prototype.calculateObjectSize = function(object, options) {
	options = options || {};

	var serializeFunctions = typeof options.serializeFunctions == 'boolean'
		? options.serializeFunctions : false;
	var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'
		? options.ignoreUndefined : true;

  return calculateObjectSize(object, serializeFunctions, ignoreUndefined);
}

/**
 * Deserialize stream data as BSON documents.
 *
 * @param {Buffer} data the buffer containing the serialized set of BSON documents.
 * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start.
 * @param {Number} numberOfDocuments number of documents to deserialize.
 * @param {Array} documents an array where to store the deserialized documents.
 * @param {Number} docStartIndex the index in the documents array from where to start inserting documents.
 * @param {Object} [options] additional options used for the deserialization.
 * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.
 * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.
 * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.
 * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits
 * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a node.js Buffer instance.
 * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.
 * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.
 * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.
 * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents.
 * @api public
 */
BSON.prototype.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {
  options = options != null ? options : {};
  var index = startIndex;
  // Loop over all documents
  for(var i = 0; i < numberOfDocuments; i++) {
    // Find size of the document
    var size = data[index] | data[index + 1] << 8 | data[index + 2] << 16 | data[index + 3] << 24;
    // Update options with index
    options['index'] = index;
    // Parse the document at this point
    documents[docStartIndex + i] = this.deserialize(data, options);
    // Adjust index by the document size
    index = index + size;
  }

  // Return object containing end index of parsing and list of documents
  return index;
}

/**
 * @ignore
 * @api private
 */
// BSON MAX VALUES
BSON.BSON_INT32_MAX = 0x7FFFFFFF;
BSON.BSON_INT32_MIN = -0x80000000;

BSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;
BSON.BSON_INT64_MIN = -Math.pow(2, 63);

// JS MAX PRECISE VALUES
BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.
BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.

// Internal long versions
var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.
var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.

/**
 * Number BSON Type
 *
 * @classconstant BSON_DATA_NUMBER
 **/
BSON.BSON_DATA_NUMBER = 1;
/**
 * String BSON Type
 *
 * @classconstant BSON_DATA_STRING
 **/
BSON.BSON_DATA_STRING = 2;
/**
 * Object BSON Type
 *
 * @classconstant BSON_DATA_OBJECT
 **/
BSON.BSON_DATA_OBJECT = 3;
/**
 * Array BSON Type
 *
 * @classconstant BSON_DATA_ARRAY
 **/
BSON.BSON_DATA_ARRAY = 4;
/**
 * Binary BSON Type
 *
 * @classconstant BSON_DATA_BINARY
 **/
BSON.BSON_DATA_BINARY = 5;
/**
 * ObjectID BSON Type
 *
 * @classconstant BSON_DATA_OID
 **/
BSON.BSON_DATA_OID = 7;
/**
 * Boolean BSON Type
 *
 * @classconstant BSON_DATA_BOOLEAN
 **/
BSON.BSON_DATA_BOOLEAN = 8;
/**
 * Date BSON Type
 *
 * @classconstant BSON_DATA_DATE
 **/
BSON.BSON_DATA_DATE = 9;
/**
 * null BSON Type
 *
 * @classconstant BSON_DATA_NULL
 **/
BSON.BSON_DATA_NULL = 10;
/**
 * RegExp BSON Type
 *
 * @classconstant BSON_DATA_REGEXP
 **/
BSON.BSON_DATA_REGEXP = 11;
/**
 * Code BSON Type
 *
 * @classconstant BSON_DATA_CODE
 **/
BSON.BSON_DATA_CODE = 13;
/**
 * Symbol BSON Type
 *
 * @classconstant BSON_DATA_SYMBOL
 **/
BSON.BSON_DATA_SYMBOL = 14;
/**
 * Code with Scope BSON Type
 *
 * @classconstant BSON_DATA_CODE_W_SCOPE
 **/
BSON.BSON_DATA_CODE_W_SCOPE = 15;
/**
 * 32 bit Integer BSON Type
 *
 * @classconstant BSON_DATA_INT
 **/
BSON.BSON_DATA_INT = 16;
/**
 * Timestamp BSON Type
 *
 * @classconstant BSON_DATA_TIMESTAMP
 **/
BSON.BSON_DATA_TIMESTAMP = 17;
/**
 * Long BSON Type
 *
 * @classconstant BSON_DATA_LONG
 **/
BSON.BSON_DATA_LONG = 18;
/**
 * MinKey BSON Type
 *
 * @classconstant BSON_DATA_MIN_KEY
 **/
BSON.BSON_DATA_MIN_KEY = 0xff;
/**
 * MaxKey BSON Type
 *
 * @classconstant BSON_DATA_MAX_KEY
 **/
BSON.BSON_DATA_MAX_KEY = 0x7f;

/**
 * Binary Default Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_DEFAULT
 **/
BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;
/**
 * Binary Function Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_FUNCTION
 **/
BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;
/**
 * Binary Byte Array Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY
 **/
BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;
/**
 * Binary UUID Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_UUID
 **/
BSON.BSON_BINARY_SUBTYPE_UUID = 3;
/**
 * Binary MD5 Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_MD5
 **/
BSON.BSON_BINARY_SUBTYPE_MD5 = 4;
/**
 * Binary User Defined Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED
 **/
BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;

// Return BSON
module.exports = BSON;
module.exports.Code = Code;
module.exports.Map = Map;
module.exports.Symbol = Symbol;
module.exports.BSON = BSON;
module.exports.DBRef = DBRef;
module.exports.Binary = Binary;
module.exports.ObjectID = ObjectID;
module.exports.Long = Long;
module.exports.Timestamp = Timestamp;
module.exports.Double = Double;
module.exports.Int32 = Int32;
module.exports.MinKey = MinKey;
module.exports.MaxKey = MaxKey;
module.exports.BSONRegExp = BSONRegExp;
module.exports.Decimal128 = Decimal128;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {

var readIEEE754 = __webpack_require__(16).readIEEE754,
	f = __webpack_require__(49).format,
	Long = __webpack_require__(22).Long,
  Double = __webpack_require__(27).Double,
  Timestamp = __webpack_require__(28).Timestamp,
  ObjectID = __webpack_require__(29).ObjectID,
  Symbol = __webpack_require__(31).Symbol,
  Code = __webpack_require__(32).Code,
  MinKey = __webpack_require__(34).MinKey,
  MaxKey = __webpack_require__(35).MaxKey,
	Decimal128 = __webpack_require__(33),
	Int32 = __webpack_require__(48),
  DBRef = __webpack_require__(36).DBRef,
  BSONRegExp = __webpack_require__(30).BSONRegExp,
  Binary = __webpack_require__(37).Binary;

var deserialize = function(buffer, options, isArray) {
	options = options == null ? {} : options;
	var index = options && options.index ? options.index : 0;
	// Read the document size
  var size = buffer[index] | buffer[index+1] << 8 | buffer[index+2] << 16 | buffer[index+3] << 24;

	// Ensure buffer is valid size
  if(size < 5 || buffer.length < size || (size + index) > buffer.length) {
		throw new Error("corrupt bson message");
	}

	// Illegal end value
	if(buffer[index + size - 1] != 0) {
		throw new Error("One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00");
	}

	// Start deserializtion
	return deserializeObject(buffer, index, options, isArray);
}

var deserializeObject = function(buffer, index, options, isArray) {
	var evalFunctions = options['evalFunctions'] == null ? false : options['evalFunctions'];
  var cacheFunctions = options['cacheFunctions'] == null ? false : options['cacheFunctions'];
  var cacheFunctionsCrc32 = options['cacheFunctionsCrc32'] == null ? false : options['cacheFunctionsCrc32'];
	var fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw'];

	// Return raw bson buffer instead of parsing it
	var raw = options['raw'] == null ? false : options['raw'];

	// Return BSONRegExp objects instead of native regular expressions
  var bsonRegExp = typeof options['bsonRegExp'] == 'boolean' ? options['bsonRegExp'] : false;

	// Controls the promotion of values vs wrapper classes
	var promoteBuffers = options['promoteBuffers'] == null ? false : options['promoteBuffers'];
	var promoteLongs = options['promoteLongs'] == null ? true : options['promoteLongs'];
	var promoteValues = options['promoteValues'] == null ? true : options['promoteValues'];

	// Set the start index
	var startIndex = index;

  // Validate that we have at least 4 bytes of buffer
  if(buffer.length < 5) throw new Error("corrupt bson message < 5 bytes long");

	// Read the document size
  var size = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;

	// Ensure buffer is valid size
  if(size < 5 || size > buffer.length) throw new Error("corrupt bson message");

  // Create holding object
  var object = isArray ? [] : {};
	// Used for arrays to skip having to perform utf8 decoding
	var arrayIndex = 0;

  // While we have more left data left keep parsing
  while(true) {
    // Read the type
    var elementType = buffer[index++];
    // If we get a zero it's the last byte, exit
    if(elementType == 0) {
			break;
		}

		// Get the start search index
		var i = index;
		// Locate the end of the c string
		while(buffer[i] !== 0x00 && i < buffer.length) {
			i++
		}

		// If are at the end of the buffer there is a problem with the document
		if(i >= buffer.length) throw new Error("Bad BSON Document: illegal CString")
		var name = isArray ? arrayIndex++ : buffer.toString('utf8', index, i);

		index = i + 1;

		if(elementType == BSON.BSON_DATA_STRING) {
      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
			if(stringSize <= 0 || stringSize > (buffer.length - index) || buffer[index + stringSize - 1] != 0) throw new Error("bad string length in bson");
      object[name] = buffer.toString('utf8', index, index + stringSize - 1);
      index = index + stringSize;
		} else if(elementType == BSON.BSON_DATA_OID) {
			var oid = new Buffer(12);
			buffer.copy(oid, 0, index, index + 12);
      object[name] = new ObjectID(oid);
      index = index + 12;
		} else if(elementType == BSON.BSON_DATA_INT && promoteValues == false) {
			object[name] = new Int32(buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24);
		} else if(elementType == BSON.BSON_DATA_INT) {
      object[name] = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
		} else if(elementType == BSON.BSON_DATA_NUMBER && promoteValues == false) {
			object[name] = new Double(buffer.readDoubleLE(index));
			index = index + 8;
		} else if(elementType == BSON.BSON_DATA_NUMBER) {
			object[name] = buffer.readDoubleLE(index);
      index = index + 8;
		} else if(elementType == BSON.BSON_DATA_DATE) {
      var lowBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
      var highBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
      object[name] = new Date(new Long(lowBits, highBits).toNumber());
		} else if(elementType == BSON.BSON_DATA_BOOLEAN) {
			if(buffer[index] != 0 && buffer[index] != 1) throw new Error('illegal boolean type value');
      object[name] = buffer[index++] == 1;
		} else if(elementType == BSON.BSON_DATA_OBJECT) {
			var _index = index;
      var objectSize = buffer[index] | buffer[index + 1] << 8 | buffer[index + 2] << 16 | buffer[index + 3] << 24;
			if(objectSize <= 0 || objectSize > (buffer.length - index)) throw new Error("bad embedded document length in bson");

			// We have a raw value
			if(raw) {
	      object[name] = buffer.slice(index, index + objectSize);
			} else {
	      object[name] = deserializeObject(buffer, _index, options, false);
			}

      index = index + objectSize;
		} else if(elementType == BSON.BSON_DATA_ARRAY) {
			var _index = index;
      var objectSize = buffer[index] | buffer[index + 1] << 8 | buffer[index + 2] << 16 | buffer[index + 3] << 24;
			var arrayOptions = options;

			// Stop index
			var stopIndex = index + objectSize;

			// All elements of array to be returned as raw bson
			if(fieldsAsRaw && fieldsAsRaw[name]) {
				arrayOptions = {};
				for(var n in options) arrayOptions[n] = options[n];
				arrayOptions['raw'] = true;
			}

      object[name] = deserializeObject(buffer, _index, arrayOptions, true);
      index = index + objectSize;

			if(buffer[index - 1] != 0) throw new Error('invalid array terminator byte');
			if(index != stopIndex) throw new Error('corrupted array bson');
		} else if(elementType == BSON.BSON_DATA_UNDEFINED) {
      object[name] = undefined;
		} else if(elementType == BSON.BSON_DATA_NULL) {
			object[name] = null;
		} else if(elementType == BSON.BSON_DATA_LONG) {
      // Unpack the low and high bits
      var lowBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
      var highBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
      var long = new Long(lowBits, highBits);
      // Promote the long if possible
      if(promoteLongs && promoteValues == true) {
        object[name] = long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG) ? long.toNumber() : long;
      } else {
        object[name] = long;
      }
		} else if(elementType == BSON.BSON_DATA_DECIMAL128) {
			// Buffer to contain the decimal bytes
			var bytes = new Buffer(16);
			// Copy the next 16 bytes into the bytes buffer
			buffer.copy(bytes, 0, index, index + 16);
			// Update index
			index = index + 16;
			// Assign the new Decimal128 value
			var decimal128 = new Decimal128(bytes);
			// If we have an alternative mapper use that
			object[name] = decimal128.toObject ? decimal128.toObject() : decimal128;
		} else if(elementType == BSON.BSON_DATA_BINARY) {
      var binarySize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
			var totalBinarySize = binarySize;
      var subType = buffer[index++];

			// Did we have a negative binary size, throw
			if(binarySize < 0) throw new Error('Negative binary type element size found');

			// Is the length longer than the document
			if(binarySize > buffer.length) throw new Error('Binary type size larger than document size');

			// Decode as raw Buffer object if options specifies it
      if(buffer['slice'] != null) {
        // If we have subtype 2 skip the 4 bytes for the size
        if(subType == Binary.SUBTYPE_BYTE_ARRAY) {
          binarySize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
					if(binarySize < 0) throw new Error('Negative binary type element size found for subtype 0x02');
					if(binarySize > (totalBinarySize - 4)) throw new Error('Binary type with subtype 0x02 contains to long binary size');
					if(binarySize < (totalBinarySize - 4)) throw new Error('Binary type with subtype 0x02 contains to short binary size');
        }

        if(promoteBuffers && promoteValues) {
          object[name] = buffer.slice(index, index + binarySize);
        } else {
          object[name] = new Binary(buffer.slice(index, index + binarySize), subType);
        }
      } else {
        var _buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(binarySize)) : new Array(binarySize);
        // If we have subtype 2 skip the 4 bytes for the size
        if(subType == Binary.SUBTYPE_BYTE_ARRAY) {
          binarySize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
					if(binarySize < 0) throw new Error('Negative binary type element size found for subtype 0x02');
					if(binarySize > (totalBinarySize - 4)) throw new Error('Binary type with subtype 0x02 contains to long binary size');
					if(binarySize < (totalBinarySize - 4)) throw new Error('Binary type with subtype 0x02 contains to short binary size');
        }

        // Copy the data
        for(var i = 0; i < binarySize; i++) {
          _buffer[i] = buffer[index + i];
        }

        if(promoteBuffers && promoteValues) {
          object[name] = _buffer;
        } else {
          object[name] = new Binary(_buffer, subType);
        }
      }

      // Update the index
      index = index + binarySize;
		} else if(elementType == BSON.BSON_DATA_REGEXP && bsonRegExp == false) {
			// Get the start search index
			var i = index;
			// Locate the end of the c string
			while(buffer[i] !== 0x00 && i < buffer.length) {
				i++
			}
			// If are at the end of the buffer there is a problem with the document
			if(i >= buffer.length) throw new Error("Bad BSON Document: illegal CString")
			// Return the C string
			var source = buffer.toString('utf8', index, i);
      // Create the regexp
			index = i + 1;

			// Get the start search index
			var i = index;
			// Locate the end of the c string
			while(buffer[i] !== 0x00 && i < buffer.length) {
				i++
			}
			// If are at the end of the buffer there is a problem with the document
			if(i >= buffer.length) throw new Error("Bad BSON Document: illegal CString")
			// Return the C string
			var regExpOptions = buffer.toString('utf8', index, i);
			index = i + 1;

      // For each option add the corresponding one for javascript
      var optionsArray = new Array(regExpOptions.length);

      // Parse options
      for(var i = 0; i < regExpOptions.length; i++) {
        switch(regExpOptions[i]) {
          case 'm':
            optionsArray[i] = 'm';
            break;
          case 's':
            optionsArray[i] = 'g';
            break;
          case 'i':
            optionsArray[i] = 'i';
            break;
        }
      }

      object[name] = new RegExp(source, optionsArray.join(''));
    } else if(elementType == BSON.BSON_DATA_REGEXP && bsonRegExp == true) {
			// Get the start search index
			var i = index;
			// Locate the end of the c string
			while(buffer[i] !== 0x00 && i < buffer.length) {
				i++
			}
			// If are at the end of the buffer there is a problem with the document
			if(i >= buffer.length) throw new Error("Bad BSON Document: illegal CString")
			// Return the C string
			var source = buffer.toString('utf8', index, i);
      index = i + 1;

			// Get the start search index
			var i = index;
			// Locate the end of the c string
			while(buffer[i] !== 0x00 && i < buffer.length) {
				i++
			}
			// If are at the end of the buffer there is a problem with the document
			if(i >= buffer.length) throw new Error("Bad BSON Document: illegal CString")
			// Return the C string
			var regExpOptions = buffer.toString('utf8', index, i);
      index = i + 1;

      // Set the object
      object[name] = new BSONRegExp(source, regExpOptions);
		} else if(elementType == BSON.BSON_DATA_SYMBOL) {
      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
			if(stringSize <= 0 || stringSize > (buffer.length - index) || buffer[index + stringSize - 1] != 0) throw new Error("bad string length in bson");
      object[name] = new Symbol(buffer.toString('utf8', index, index + stringSize - 1));
      index = index + stringSize;
		} else if(elementType == BSON.BSON_DATA_TIMESTAMP) {
      var lowBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
      var highBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
      object[name] = new Timestamp(lowBits, highBits);
		} else if(elementType == BSON.BSON_DATA_MIN_KEY) {
      object[name] = new MinKey();
		} else if(elementType == BSON.BSON_DATA_MAX_KEY) {
      object[name] = new MaxKey();
		} else if(elementType == BSON.BSON_DATA_CODE) {
      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
			if(stringSize <= 0 || stringSize > (buffer.length - index) || buffer[index + stringSize - 1] != 0) throw new Error("bad string length in bson");
      var functionString = buffer.toString('utf8', index, index + stringSize - 1);

      // If we are evaluating the functions
      if(evalFunctions) {
        var value = null;
        // If we have cache enabled let's look for the md5 of the function in the cache
        if(cacheFunctions) {
          var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;
          // Got to do this to avoid V8 deoptimizing the call due to finding eval
          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);
        } else {
          object[name] = isolateEval(functionString);
        }
      } else {
        object[name]  = new Code(functionString);
      }

      // Update parse index position
      index = index + stringSize;
		} else if(elementType == BSON.BSON_DATA_CODE_W_SCOPE) {
      var totalSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;

			// Element cannot be shorter than totalSize + stringSize + documentSize + terminator
			if(totalSize < (4 + 4 + 4 + 1)) {
				throw new Error("code_w_scope total size shorter minimum expected length");
			}

			// Get the code string size
      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
			// Check if we have a valid string
			if(stringSize <= 0 || stringSize > (buffer.length - index) || buffer[index + stringSize - 1] != 0) throw new Error("bad string length in bson");

      // Javascript function
      var functionString = buffer.toString('utf8', index, index + stringSize - 1);
      // Update parse index position
      index = index + stringSize;
      // Parse the element
			var _index = index;
      // Decode the size of the object document
      var objectSize = buffer[index] | buffer[index + 1] << 8 | buffer[index + 2] << 16 | buffer[index + 3] << 24;
      // Decode the scope object
      var scopeObject = deserializeObject(buffer, _index, options, false);
      // Adjust the index
      index = index + objectSize;

			// Check if field length is to short
			if(totalSize < (4 + 4 + objectSize + stringSize)) {
				throw new Error('code_w_scope total size is to short, truncating scope');
			}

			// Check if totalSize field is to long
			if(totalSize > (4 + 4 + objectSize + stringSize)) {
				throw new Error('code_w_scope total size is to long, clips outer document');
			}

      // If we are evaluating the functions
      if(evalFunctions) {
        // Contains the value we are going to set
        var value = null;
        // If we have cache enabled let's look for the md5 of the function in the cache
        if(cacheFunctions) {
          var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;
          // Got to do this to avoid V8 deoptimizing the call due to finding eval
          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);
        } else {
          object[name] = isolateEval(functionString);
        }

        object[name].scope = scopeObject;
      } else {
        object[name]  = new Code(functionString, scopeObject);
      }
		} else if(elementType == BSON.BSON_DATA_DBPOINTER) {
			// Get the code string size
      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;
			// Check if we have a valid string
			if(stringSize <= 0 || stringSize > (buffer.length - index) || buffer[index + stringSize - 1] != 0) throw new Error("bad string length in bson");
			// Namespace
      var namespace = buffer.toString('utf8', index, index + stringSize - 1);
			// Update parse index position
      index = index + stringSize;

			// Read the oid
			var oidBuffer = new Buffer(12);
			buffer.copy(oidBuffer, 0, index, index + 12);
      var oid = new ObjectID(oidBuffer);

			// Update the index
			index = index + 12;

			// Split the namespace
			var parts = namespace.split('.');
			var db = parts.shift();
			var collection = parts.join('.');
			// Upgrade to DBRef type
			object[name] = new DBRef(collection, oid, db);
    } else {
			throw new Error("Detected unknown BSON type " + elementType.toString(16) + " for fieldname \"" + name + "\", are you using the latest BSON parser");
		}
  }

	// Check if the deserialization was against a valid array/object
	if(size != (index - startIndex)) {
		if(isArray) throw new Error('corrupt array bson');
		throw new Error('corrupt object bson');
	}

  // Check if we have a db ref object
  if(object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);
  return object;
}

/**
 * Ensure eval is isolated.
 *
 * @ignore
 * @api private
 */
var isolateEvalWithHash = function(functionCache, hash, functionString, object) {
  // Contains the value we are going to set
  var value = null;

  // Check for cache hit, eval if missing and return cached function
  if(functionCache[hash] == null) {
    eval("value = " + functionString);
    functionCache[hash] = value;
  }
  // Set the object
  return functionCache[hash].bind(object);
}

/**
 * Ensure eval is isolated.
 *
 * @ignore
 * @api private
 */
var isolateEval = function(functionString) {
  // Contains the value we are going to set
  var value = null;
  // Eval the function
  eval("value = " + functionString);
  return value;
}

var BSON = {};

/**
 * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5
 *
 * @ignore
 * @api private
 */
var functionCache = BSON.functionCache = {};

/**
 * Number BSON Type
 *
 * @classconstant BSON_DATA_NUMBER
 **/
BSON.BSON_DATA_NUMBER = 1;
/**
 * String BSON Type
 *
 * @classconstant BSON_DATA_STRING
 **/
BSON.BSON_DATA_STRING = 2;
/**
 * Object BSON Type
 *
 * @classconstant BSON_DATA_OBJECT
 **/
BSON.BSON_DATA_OBJECT = 3;
/**
 * Array BSON Type
 *
 * @classconstant BSON_DATA_ARRAY
 **/
BSON.BSON_DATA_ARRAY = 4;
/**
 * Binary BSON Type
 *
 * @classconstant BSON_DATA_BINARY
 **/
BSON.BSON_DATA_BINARY = 5;
/**
 * Binary BSON Type
 *
 * @classconstant BSON_DATA_UNDEFINED
 **/
BSON.BSON_DATA_UNDEFINED = 6;
/**
 * ObjectID BSON Type
 *
 * @classconstant BSON_DATA_OID
 **/
BSON.BSON_DATA_OID = 7;
/**
 * Boolean BSON Type
 *
 * @classconstant BSON_DATA_BOOLEAN
 **/
BSON.BSON_DATA_BOOLEAN = 8;
/**
 * Date BSON Type
 *
 * @classconstant BSON_DATA_DATE
 **/
BSON.BSON_DATA_DATE = 9;
/**
 * null BSON Type
 *
 * @classconstant BSON_DATA_NULL
 **/
BSON.BSON_DATA_NULL = 10;
/**
 * RegExp BSON Type
 *
 * @classconstant BSON_DATA_REGEXP
 **/
BSON.BSON_DATA_REGEXP = 11;
/**
 * Code BSON Type
 *
 * @classconstant BSON_DATA_DBPOINTER
 **/
BSON.BSON_DATA_DBPOINTER = 12;
/**
 * Code BSON Type
 *
 * @classconstant BSON_DATA_CODE
 **/
BSON.BSON_DATA_CODE = 13;
/**
 * Symbol BSON Type
 *
 * @classconstant BSON_DATA_SYMBOL
 **/
BSON.BSON_DATA_SYMBOL = 14;
/**
 * Code with Scope BSON Type
 *
 * @classconstant BSON_DATA_CODE_W_SCOPE
 **/
BSON.BSON_DATA_CODE_W_SCOPE = 15;
/**
 * 32 bit Integer BSON Type
 *
 * @classconstant BSON_DATA_INT
 **/
BSON.BSON_DATA_INT = 16;
/**
 * Timestamp BSON Type
 *
 * @classconstant BSON_DATA_TIMESTAMP
 **/
BSON.BSON_DATA_TIMESTAMP = 17;
/**
 * Long BSON Type
 *
 * @classconstant BSON_DATA_LONG
 **/
BSON.BSON_DATA_LONG = 18;
/**
 * Long BSON Type
 *
 * @classconstant BSON_DATA_DECIMAL128
 **/
BSON.BSON_DATA_DECIMAL128 = 19;
/**
 * MinKey BSON Type
 *
 * @classconstant BSON_DATA_MIN_KEY
 **/
BSON.BSON_DATA_MIN_KEY = 0xff;
/**
 * MaxKey BSON Type
 *
 * @classconstant BSON_DATA_MAX_KEY
 **/
BSON.BSON_DATA_MAX_KEY = 0x7f;

/**
 * Binary Default Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_DEFAULT
 **/
BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;
/**
 * Binary Function Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_FUNCTION
 **/
BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;
/**
 * Binary Byte Array Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY
 **/
BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;
/**
 * Binary UUID Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_UUID
 **/
BSON.BSON_BINARY_SUBTYPE_UUID = 3;
/**
 * Binary MD5 Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_MD5
 **/
BSON.BSON_BINARY_SUBTYPE_MD5 = 4;
/**
 * Binary User Defined Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED
 **/
BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;

// BSON MAX VALUES
BSON.BSON_INT32_MAX = 0x7FFFFFFF;
BSON.BSON_INT32_MIN = -0x80000000;

BSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;
BSON.BSON_INT64_MIN = -Math.pow(2, 63);

// JS MAX PRECISE VALUES
BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.
BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.

// Internal long versions
var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.
var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.

module.exports = deserialize

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))

/***/ }),
/* 161 */
/***/ (function(module, exports) {

module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}

/***/ }),
/* 162 */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {

var writeIEEE754 = __webpack_require__(16).writeIEEE754,
  readIEEE754 = __webpack_require__(16).readIEEE754,
  Long = __webpack_require__(22).Long,
  Map = __webpack_require__(73),
  Double = __webpack_require__(27).Double,
  Timestamp = __webpack_require__(28).Timestamp,
  ObjectID = __webpack_require__(29).ObjectID,
  Symbol = __webpack_require__(31).Symbol,
  Code = __webpack_require__(32).Code,
  BSONRegExp = __webpack_require__(30).BSONRegExp,
  Int32 = __webpack_require__(48).Int32,
  MinKey = __webpack_require__(34).MinKey,
  MaxKey = __webpack_require__(35).MaxKey,
  Decimal128 = __webpack_require__(33),
  DBRef = __webpack_require__(36).DBRef,
  Binary = __webpack_require__(37).Binary;

try {
  var _Buffer = Uint8Array;
} catch(e) {
  var _Buffer = Buffer;
}

var regexp = /\x00/

// To ensure that 0.4 of node works correctly
var isDate = function isDate(d) {
  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';
}

var isRegExp = function isRegExp(d) {
  return Object.prototype.toString.call(d) === '[object RegExp]';
}

var serializeString = function(buffer, key, value, index, isArray) {
  // Encode String type
  buffer[index++] = BSON.BSON_DATA_STRING;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes + 1;
  buffer[index - 1] = 0;
  // Write the string
  var size = buffer.write(value, index + 4, 'utf8');
  // Write the size of the string to buffer
  buffer[index + 3] = (size + 1 >> 24) & 0xff;
  buffer[index + 2] = (size + 1 >> 16) & 0xff;
  buffer[index + 1] = (size + 1 >> 8) & 0xff;
  buffer[index] = size + 1 & 0xff;
  // Update index
  index = index + 4 + size;
  // Write zero
  buffer[index++] = 0;
  return index;
}

var serializeNumber = function(buffer, key, value, index, isArray) {
  // We have an integer value
  if(Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {
    // If the value fits in 32 bits encode as int, if it fits in a double
    // encode it as a double, otherwise long
    if(value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {
      // Set int type 32 bits or less
      buffer[index++] = BSON.BSON_DATA_INT;
      // Number of written bytes
      var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
      // Encode the name
      index = index + numberOfWrittenBytes;
      buffer[index++] = 0;
      // Write the int value
      buffer[index++] = value & 0xff;
      buffer[index++] = (value >> 8) & 0xff;
      buffer[index++] = (value >> 16) & 0xff;
      buffer[index++] = (value >> 24) & 0xff;
    } else if(value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {
      // Encode as double
      buffer[index++] = BSON.BSON_DATA_NUMBER;
      // Number of written bytes
      var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
      // Encode the name
      index = index + numberOfWrittenBytes;
      buffer[index++] = 0;
      // Write float
      writeIEEE754(buffer, value, index, 'little', 52, 8);
      // Ajust index
      index = index + 8;
    } else {
      // Set long type
      buffer[index++] = BSON.BSON_DATA_LONG;
      // Number of written bytes
      var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
      // Encode the name
      index = index + numberOfWrittenBytes;
      buffer[index++] = 0;
      var longVal = Long.fromNumber(value);
      var lowBits = longVal.getLowBits();
      var highBits = longVal.getHighBits();
      // Encode low bits
      buffer[index++] = lowBits & 0xff;
      buffer[index++] = (lowBits >> 8) & 0xff;
      buffer[index++] = (lowBits >> 16) & 0xff;
      buffer[index++] = (lowBits >> 24) & 0xff;
      // Encode high bits
      buffer[index++] = highBits & 0xff;
      buffer[index++] = (highBits >> 8) & 0xff;
      buffer[index++] = (highBits >> 16) & 0xff;
      buffer[index++] = (highBits >> 24) & 0xff;
    }
  } else {
    // Encode as double
    buffer[index++] = BSON.BSON_DATA_NUMBER;
    // Number of written bytes
    var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
    // Encode the name
    index = index + numberOfWrittenBytes;
    buffer[index++] = 0;
    // Write float
    writeIEEE754(buffer, value, index, 'little', 52, 8);
    // Ajust index
    index = index + 8;
  }

  return index;
}

var serializeNull = function(buffer, key, value, index, isArray) {
  // Set long type
  buffer[index++] = BSON.BSON_DATA_NULL;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;
  return index;
}

var serializeBoolean = function(buffer, key, value, index, isArray) {
  // Write the type
  buffer[index++] = BSON.BSON_DATA_BOOLEAN;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;
  // Encode the boolean value
  buffer[index++] = value ? 1 : 0;
  return index;
}

var serializeDate = function(buffer, key, value, index, isArray) {
  // Write the type
  buffer[index++] = BSON.BSON_DATA_DATE;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;

  // Write the date
  var dateInMilis = Long.fromNumber(value.getTime());
  var lowBits = dateInMilis.getLowBits();
  var highBits = dateInMilis.getHighBits();
  // Encode low bits
  buffer[index++] = lowBits & 0xff;
  buffer[index++] = (lowBits >> 8) & 0xff;
  buffer[index++] = (lowBits >> 16) & 0xff;
  buffer[index++] = (lowBits >> 24) & 0xff;
  // Encode high bits
  buffer[index++] = highBits & 0xff;
  buffer[index++] = (highBits >> 8) & 0xff;
  buffer[index++] = (highBits >> 16) & 0xff;
  buffer[index++] = (highBits >> 24) & 0xff;
  return index;
}

var serializeRegExp = function(buffer, key, value, index, isArray) {
  // Write the type
  buffer[index++] = BSON.BSON_DATA_REGEXP;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;
  if (value.source && value.source.match(regexp) != null) {
    throw Error("value " + value.source + " must not contain null bytes");
  }
  // Adjust the index
  index = index + buffer.write(value.source, index, 'utf8');
  // Write zero
  buffer[index++] = 0x00;
  // Write the parameters
  if(value.global) buffer[index++] = 0x73; // s
  if(value.ignoreCase) buffer[index++] = 0x69; // i
  if(value.multiline) buffer[index++] = 0x6d; // m
  // Add ending zero
  buffer[index++] = 0x00;
  return index;
}

var serializeBSONRegExp = function(buffer, key, value, index, isArray) {
  // Write the type
  buffer[index++] = BSON.BSON_DATA_REGEXP;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;

  // Check the pattern for 0 bytes
  if (value.pattern.match(regexp) != null) {
    // The BSON spec doesn't allow keys with null bytes because keys are
    // null-terminated.
    throw Error("pattern " + value.pattern + " must not contain null bytes");
  }

  // Adjust the index
  index = index + buffer.write(value.pattern, index, 'utf8');
  // Write zero
  buffer[index++] = 0x00;
  // Write the options
  index = index + buffer.write(value.options.split('').sort().join(''), index, 'utf8');
  // Add ending zero
  buffer[index++] = 0x00;
  return index;
}

var serializeMinMax = function(buffer, key, value, index, isArray) {
  // Write the type of either min or max key
  if(value === null) {
    buffer[index++] = BSON.BSON_DATA_NULL;
  } else if(value instanceof MinKey) {
    buffer[index++] = BSON.BSON_DATA_MIN_KEY;
  } else {
    buffer[index++] = BSON.BSON_DATA_MAX_KEY;
  }

  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;
  return index;
}

var serializeObjectId = function(buffer, key, value, index, isArray) {
  // Write the type
  buffer[index++] = BSON.BSON_DATA_OID;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');

  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;

  // Write the objectId into the shared buffer
  if(typeof value.id == 'string') {
    buffer.write(value.id, index, 'binary')
  } else if(value.id && value.id.copy){
    value.id.copy(buffer, index, 0, 12);
  } else {
    throw new Error('object [' + JSON.stringify(value) + "] is not a valid ObjectId");
  }

  // Ajust index
  return index + 12;
}

var serializeBuffer = function(buffer, key, value, index, isArray) {
  // Write the type
  buffer[index++] = BSON.BSON_DATA_BINARY;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;
  // Get size of the buffer (current write point)
  var size = value.length;
  // Write the size of the string to buffer
  buffer[index++] = size & 0xff;
  buffer[index++] = (size >> 8) & 0xff;
  buffer[index++] = (size >> 16) & 0xff;
  buffer[index++] = (size >> 24) & 0xff;
  // Write the default subtype
  buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;
  // Copy the content form the binary field to the buffer
  value.copy(buffer, index, 0, size);
  // Adjust the index
  index = index + size;
  return index;
}

var serializeObject = function(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, isArray, path) {
  for(var i = 0; i < path.length; i++) {
    if(path[i] === value) throw new Error('cyclic dependency detected');
  }

  // Push value to stack
  path.push(value);
  // Write the type
  buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;
  var endIndex = serializeInto(buffer, value, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined, path);
  // Pop stack
  path.pop();
  // Write size
  var size = endIndex - index;
  return endIndex;
}

var serializeDecimal128 = function(buffer, key, value, index, isArray) {
  buffer[index++] = BSON.BSON_DATA_DECIMAL128;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;
  // Write the data from the value
  value.bytes.copy(buffer, index, 0, 16);
  return index + 16;
}

var serializeLong = function(buffer, key, value, index, isArray) {
  // Write the type
  buffer[index++] = value._bsontype == 'Long' ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;
  // Write the date
  var lowBits = value.getLowBits();
  var highBits = value.getHighBits();
  // Encode low bits
  buffer[index++] = lowBits & 0xff;
  buffer[index++] = (lowBits >> 8) & 0xff;
  buffer[index++] = (lowBits >> 16) & 0xff;
  buffer[index++] = (lowBits >> 24) & 0xff;
  // Encode high bits
  buffer[index++] = highBits & 0xff;
  buffer[index++] = (highBits >> 8) & 0xff;
  buffer[index++] = (highBits >> 16) & 0xff;
  buffer[index++] = (highBits >> 24) & 0xff;
  return index;
}

var serializeInt32 = function(buffer, key, value, index, isArray) {
  // Set int type 32 bits or less
  buffer[index++] = BSON.BSON_DATA_INT;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;
  // Write the int value
  buffer[index++] = value & 0xff;
  buffer[index++] = (value >> 8) & 0xff;
  buffer[index++] = (value >> 16) & 0xff;
  buffer[index++] = (value >> 24) & 0xff;
  return index;
}

var serializeDouble = function(buffer, key, value, index, isArray) {
  // Encode as double
  buffer[index++] = BSON.BSON_DATA_NUMBER;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;
  // Write float
  writeIEEE754(buffer, value, index, 'little', 52, 8);
  // Ajust index
  index = index + 8;
  return index;
}

var serializeFunction = function(buffer, key, value, index, checkKeys, depth, isArray) {
  buffer[index++] = BSON.BSON_DATA_CODE;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;
  // Function string
  var functionString = value.toString();
  // Write the string
  var size = buffer.write(functionString, index + 4, 'utf8') + 1;
  // Write the size of the string to buffer
  buffer[index] = size & 0xff;
  buffer[index + 1] = (size >> 8) & 0xff;
  buffer[index + 2] = (size >> 16) & 0xff;
  buffer[index + 3] = (size >> 24) & 0xff;
  // Update index
  index = index + 4 + size - 1;
  // Write zero
  buffer[index++] = 0;
  return index;
}

var serializeCode = function(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, isArray) {
  if(value.scope && typeof value.scope == 'object') {
    // Write the type
    buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;
    // Number of written bytes
    var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
    // Encode the name
    index = index + numberOfWrittenBytes;
    buffer[index++] = 0;

    // Starting index
    var startIndex = index;

    // Serialize the function
    // Get the function string
    var functionString = typeof value.code == 'string' ? value.code : value.code.toString();
    // Index adjustment
    index = index + 4;
    // Write string into buffer
    var codeSize = buffer.write(functionString, index + 4, 'utf8') + 1;
    // Write the size of the string to buffer
    buffer[index] = codeSize & 0xff;
    buffer[index + 1] = (codeSize >> 8) & 0xff;
    buffer[index + 2] = (codeSize >> 16) & 0xff;
    buffer[index + 3] = (codeSize >> 24) & 0xff;
    // Write end 0
    buffer[index + 4 + codeSize - 1] = 0;
    // Write the
    index = index + codeSize + 4;

    //
    // Serialize the scope value
    var endIndex = serializeInto(buffer, value.scope, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined)
    index = endIndex - 1;

    // Writ the total
    var totalSize = endIndex - startIndex;

    // Write the total size of the object
    buffer[startIndex++] = totalSize & 0xff;
    buffer[startIndex++] = (totalSize >> 8) & 0xff;
    buffer[startIndex++] = (totalSize >> 16) & 0xff;
    buffer[startIndex++] = (totalSize >> 24) & 0xff;
    // Write trailing zero
    buffer[index++] = 0;
  } else {
    buffer[index++] = BSON.BSON_DATA_CODE;
    // Number of written bytes
    var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
    // Encode the name
    index = index + numberOfWrittenBytes;
    buffer[index++] = 0;
    // Function string
    var functionString = value.code.toString();
    // Write the string
    var size = buffer.write(functionString, index + 4, 'utf8') + 1;
    // Write the size of the string to buffer
    buffer[index] = size & 0xff;
    buffer[index + 1] = (size >> 8) & 0xff;
    buffer[index + 2] = (size >> 16) & 0xff;
    buffer[index + 3] = (size >> 24) & 0xff;
    // Update index
    index = index + 4 + size - 1;
    // Write zero
    buffer[index++] = 0;
  }

  return index;
}

var serializeBinary = function(buffer, key, value, index, isArray) {
  // Write the type
  buffer[index++] = BSON.BSON_DATA_BINARY;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;
  // Extract the buffer
  var data = value.value(true);
  // Calculate size
  var size = value.position;
  // Add the deprecated 02 type 4 bytes of size to total
  if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) size = size + 4;
  // Write the size of the string to buffer
  buffer[index++] = size & 0xff;
  buffer[index++] = (size >> 8) & 0xff;
  buffer[index++] = (size >> 16) & 0xff;
  buffer[index++] = (size >> 24) & 0xff;
  // Write the subtype to the buffer
  buffer[index++] = value.sub_type;

  // If we have binary type 2 the 4 first bytes are the size
  if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {
    size = size - 4;
    buffer[index++] = size & 0xff;
    buffer[index++] = (size >> 8) & 0xff;
    buffer[index++] = (size >> 16) & 0xff;
    buffer[index++] = (size >> 24) & 0xff;
  }

  // Write the data to the object
  data.copy(buffer, index, 0, value.position);
  // Adjust the index
  index = index + value.position;
  return index;
}

var serializeSymbol = function(buffer, key, value, index, isArray) {
  // Write the type
  buffer[index++] = BSON.BSON_DATA_SYMBOL;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');
  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;
  // Write the string
  var size = buffer.write(value.value, index + 4, 'utf8') + 1;
  // Write the size of the string to buffer
  buffer[index] = size & 0xff;
  buffer[index + 1] = (size >> 8) & 0xff;
  buffer[index + 2] = (size >> 16) & 0xff;
  buffer[index + 3] = (size >> 24) & 0xff;
  // Update index
  index = index + 4 + size - 1;
  // Write zero
  buffer[index++] = 0x00;
  return index;
}

var serializeDBRef = function(buffer, key, value, index, depth, serializeFunctions, isArray) {
  // Write the type
  buffer[index++] = BSON.BSON_DATA_OBJECT;
  // Number of written bytes
  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');

  // Encode the name
  index = index + numberOfWrittenBytes;
  buffer[index++] = 0;

  var startIndex = index;
  var endIndex;

  // Serialize object
  if(null != value.db) {
    endIndex = serializeInto(buffer, {
        '$ref': value.namespace
      , '$id' : value.oid
      , '$db' : value.db
    }, false, index, depth + 1, serializeFunctions);
  } else {
    endIndex = serializeInto(buffer, {
        '$ref': value.namespace
      , '$id' : value.oid
    }, false, index, depth + 1, serializeFunctions);
  }

  // Calculate object size
  var size = endIndex - startIndex;
  // Write the size
  buffer[startIndex++] = size & 0xff;
  buffer[startIndex++] = (size >> 8) & 0xff;
  buffer[startIndex++] = (size >> 16) & 0xff;
  buffer[startIndex++] = (size >> 24) & 0xff;
  // Set index
  return endIndex;
}

var serializeInto = function serializeInto(buffer, object, checkKeys, startingIndex, depth, serializeFunctions, ignoreUndefined, path) {
  startingIndex = startingIndex || 0;
  path = path || [];

  // Push the object to the path
  path.push(object);

  // Start place to serialize into
  var index = startingIndex + 4;
  var self = this;

  // Special case isArray
  if(Array.isArray(object)) {
    // Get object keys
    for(var i = 0; i < object.length; i++) {
      var key = "" + i;
      var value = object[i];

      // Is there an override value
      if(value && value.toBSON) {
        if(typeof value.toBSON != 'function') throw new Error("toBSON is not a function");
        value = value.toBSON();
      }

      var type = typeof value;
      if(type == 'string') {
        index = serializeString(buffer, key, value, index, true);
      } else if(type == 'number') {
        index = serializeNumber(buffer, key, value, index, true);
      } else if(type == 'boolean') {
        index = serializeBoolean(buffer, key, value, index, true);
      } else if(value instanceof Date || isDate(value)) {
        index = serializeDate(buffer, key, value, index, true);
      } else if(value === undefined) {
        index = serializeNull(buffer, key, value, index, true);
      } else if(value === null) {
        index = serializeNull(buffer, key, value, index, true);
      } else if(value['_bsontype'] == 'ObjectID') {
        index = serializeObjectId(buffer, key, value, index, true);
      } else if(Buffer.isBuffer(value)) {
        index = serializeBuffer(buffer, key, value, index, true);
      } else if(value instanceof RegExp || isRegExp(value)) {
        index = serializeRegExp(buffer, key, value, index, true);
      } else if(type == 'object' && value['_bsontype'] == null) {
        index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true, path);
      } else if(type == 'object' && value['_bsontype'] == 'Decimal128') {
        index = serializeDecimal128(buffer, key, value, index, true);
      } else if(value['_bsontype'] == 'Long' || value['_bsontype'] == 'Timestamp') {
        index = serializeLong(buffer, key, value, index, true);
      } else if(value['_bsontype'] == 'Double') {
        index = serializeDouble(buffer, key, value, index, true);
      } else if(typeof value == 'function' && serializeFunctions) {
        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions, true);
      } else if(value['_bsontype'] == 'Code') {
        index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true);
      } else if(value['_bsontype'] == 'Binary') {
        index = serializeBinary(buffer, key, value, index, true);
      } else if(value['_bsontype'] == 'Symbol') {
        index = serializeSymbol(buffer, key, value, index, true);
      } else if(value['_bsontype'] == 'DBRef') {
        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, true);
      } else if(value['_bsontype'] == 'BSONRegExp') {
        index = serializeBSONRegExp(buffer, key, value, index, true);
      } else if(value['_bsontype'] == 'Int32') {
        index = serializeInt32(buffer, key, value, index, true);
      } else if(value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {
        index = serializeMinMax(buffer, key, value, index, true);
      }
    }
  } else if(object instanceof Map) {
    var iterator = object.entries();
    var done = false;

    while(!done) {
      // Unpack the next entry
      var entry = iterator.next();
      done = entry.done;
      // Are we done, then skip and terminate
      if(done) continue;

      // Get the entry values
      var key = entry.value[0];
      var value = entry.value[1];

      // Check the type of the value
      var type = typeof value;

      // Check the key and throw error if it's illegal
      if(key != '$db' && key != '$ref' && key != '$id') {
        if (key.match(regexp) != null) {
          // The BSON spec doesn't allow keys with null bytes because keys are
          // null-terminated.
          throw Error("key " + key + " must not contain null bytes");
        }

        if (checkKeys) {
          if('$' == key[0]) {
            throw Error("key " + key + " must not start with '$'");
          } else if (!!~key.indexOf('.')) {
            throw Error("key " + key + " must not contain '.'");
          }
        }
      }

      if(type == 'string') {
        index = serializeString(buffer, key, value, index);
      } else if(type == 'number') {
        index = serializeNumber(buffer, key, value, index);
      } else if(type == 'boolean') {
        index = serializeBoolean(buffer, key, value, index);
      } else if(value instanceof Date || isDate(value)) {
        index = serializeDate(buffer, key, value, index);
      } else if(value === undefined && ignoreUndefined == true) {
      } else if(value === null || value === undefined) {
        index = serializeNull(buffer, key, value, index);
      } else if(value['_bsontype'] == 'ObjectID') {
        index = serializeObjectId(buffer, key, value, index);
      } else if(Buffer.isBuffer(value)) {
        index = serializeBuffer(buffer, key, value, index);
      } else if(value instanceof RegExp || isRegExp(value)) {
        index = serializeRegExp(buffer, key, value, index);
      } else if(type == 'object' && value['_bsontype'] == null) {
        index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path);
      } else if(type == 'object' && value['_bsontype'] == 'Decimal128') {
        index = serializeDecimal128(buffer, key, value, index);
      } else if(value['_bsontype'] == 'Long' || value['_bsontype'] == 'Timestamp') {
        index = serializeLong(buffer, key, value, index);
      } else if(value['_bsontype'] == 'Double') {
        index = serializeDouble(buffer, key, value, index);
      } else if(value['_bsontype'] == 'Code') {
        index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);
      } else if(typeof value == 'function' && serializeFunctions) {
        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);
      } else if(value['_bsontype'] == 'Binary') {
        index = serializeBinary(buffer, key, value, index);
      } else if(value['_bsontype'] == 'Symbol') {
        index = serializeSymbol(buffer, key, value, index);
      } else if(value['_bsontype'] == 'DBRef') {
        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);
      } else if(value['_bsontype'] == 'BSONRegExp') {
        index = serializeBSONRegExp(buffer, key, value, index);
      } else if(value['_bsontype'] == 'Int32') {
        index = serializeInt32(buffer, key, value, index);
      } else if(value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {
        index = serializeMinMax(buffer, key, value, index);
      }
    }
  } else {
    // Did we provide a custom serialization method
    if(object.toBSON) {
      if(typeof object.toBSON != 'function') throw new Error("toBSON is not a function");
      object = object.toBSON();
      if(object != null && typeof object != 'object') throw new Error("toBSON function did not return an object");
    }

    // Iterate over all the keys
    for(var key in object) {
      var value = object[key];
      // Is there an override value
      if(value && value.toBSON) {
        if(typeof value.toBSON != 'function') throw new Error("toBSON is not a function");
        value = value.toBSON();
      }

      // Check the type of the value
      var type = typeof value;

      // Check the key and throw error if it's illegal
      if(key != '$db' && key != '$ref' && key != '$id') {
        if (key.match(regexp) != null) {
          // The BSON spec doesn't allow keys with null bytes because keys are
          // null-terminated.
          throw Error("key " + key + " must not contain null bytes");
        }

        if (checkKeys) {
          if('$' == key[0]) {
            throw Error("key " + key + " must not start with '$'");
          } else if (!!~key.indexOf('.')) {
            throw Error("key " + key + " must not contain '.'");
          }
        }
      }

      if(type == 'string') {
        index = serializeString(buffer, key, value, index);
      } else if(type == 'number') {
        index = serializeNumber(buffer, key, value, index);
      } else if(type == 'boolean') {
        index = serializeBoolean(buffer, key, value, index);
      } else if(value instanceof Date || isDate(value)) {
        index = serializeDate(buffer, key, value, index);
      } else if(value === undefined && ignoreUndefined == true) {
      } else if(value === null || value === undefined) {
        index = serializeNull(buffer, key, value, index);
      } else if(value['_bsontype'] == 'ObjectID') {
        index = serializeObjectId(buffer, key, value, index);
      } else if(Buffer.isBuffer(value)) {
        index = serializeBuffer(buffer, key, value, index);
      } else if(value instanceof RegExp || isRegExp(value)) {
        index = serializeRegExp(buffer, key, value, index);
      } else if(type == 'object' && value['_bsontype'] == null) {
        index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path);
      } else if(type == 'object' && value['_bsontype'] == 'Decimal128') {
        index = serializeDecimal128(buffer, key, value, index);
      } else if(value['_bsontype'] == 'Long' || value['_bsontype'] == 'Timestamp') {
        index = serializeLong(buffer, key, value, index);
      } else if(value['_bsontype'] == 'Double') {
        index = serializeDouble(buffer, key, value, index);
      } else if(value['_bsontype'] == 'Code') {
        index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);
      } else if(typeof value == 'function' && serializeFunctions) {
        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);
      } else if(value['_bsontype'] == 'Binary') {
        index = serializeBinary(buffer, key, value, index);
      } else if(value['_bsontype'] == 'Symbol') {
        index = serializeSymbol(buffer, key, value, index);
      } else if(value['_bsontype'] == 'DBRef') {
        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);
      } else if(value['_bsontype'] == 'BSONRegExp') {
        index = serializeBSONRegExp(buffer, key, value, index);
      } else if(value['_bsontype'] == 'Int32') {
        index = serializeInt32(buffer, key, value, index);
      } else if(value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {
        index = serializeMinMax(buffer, key, value, index);
      }
    }
  }

  // Remove the path
  path.pop();

  // Final padding byte for object
  buffer[index++] = 0x00;

  // Final size
  var size = index - startingIndex;
  // Write the size of the object
  buffer[startingIndex++] = size & 0xff;
  buffer[startingIndex++] = (size >> 8) & 0xff;
  buffer[startingIndex++] = (size >> 16) & 0xff;
  buffer[startingIndex++] = (size >> 24) & 0xff;
  return index;
}

var BSON = {};

/**
 * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5
 *
 * @ignore
 * @api private
 */
var functionCache = BSON.functionCache = {};

/**
 * Number BSON Type
 *
 * @classconstant BSON_DATA_NUMBER
 **/
BSON.BSON_DATA_NUMBER = 1;
/**
 * String BSON Type
 *
 * @classconstant BSON_DATA_STRING
 **/
BSON.BSON_DATA_STRING = 2;
/**
 * Object BSON Type
 *
 * @classconstant BSON_DATA_OBJECT
 **/
BSON.BSON_DATA_OBJECT = 3;
/**
 * Array BSON Type
 *
 * @classconstant BSON_DATA_ARRAY
 **/
BSON.BSON_DATA_ARRAY = 4;
/**
 * Binary BSON Type
 *
 * @classconstant BSON_DATA_BINARY
 **/
BSON.BSON_DATA_BINARY = 5;
/**
 * ObjectID BSON Type, deprecated
 *
 * @classconstant BSON_DATA_UNDEFINED
 **/
BSON.BSON_DATA_UNDEFINED = 6;
/**
 * ObjectID BSON Type
 *
 * @classconstant BSON_DATA_OID
 **/
BSON.BSON_DATA_OID = 7;
/**
 * Boolean BSON Type
 *
 * @classconstant BSON_DATA_BOOLEAN
 **/
BSON.BSON_DATA_BOOLEAN = 8;
/**
 * Date BSON Type
 *
 * @classconstant BSON_DATA_DATE
 **/
BSON.BSON_DATA_DATE = 9;
/**
 * null BSON Type
 *
 * @classconstant BSON_DATA_NULL
 **/
BSON.BSON_DATA_NULL = 10;
/**
 * RegExp BSON Type
 *
 * @classconstant BSON_DATA_REGEXP
 **/
BSON.BSON_DATA_REGEXP = 11;
/**
 * Code BSON Type
 *
 * @classconstant BSON_DATA_CODE
 **/
BSON.BSON_DATA_CODE = 13;
/**
 * Symbol BSON Type
 *
 * @classconstant BSON_DATA_SYMBOL
 **/
BSON.BSON_DATA_SYMBOL = 14;
/**
 * Code with Scope BSON Type
 *
 * @classconstant BSON_DATA_CODE_W_SCOPE
 **/
BSON.BSON_DATA_CODE_W_SCOPE = 15;
/**
 * 32 bit Integer BSON Type
 *
 * @classconstant BSON_DATA_INT
 **/
BSON.BSON_DATA_INT = 16;
/**
 * Timestamp BSON Type
 *
 * @classconstant BSON_DATA_TIMESTAMP
 **/
BSON.BSON_DATA_TIMESTAMP = 17;
/**
 * Long BSON Type
 *
 * @classconstant BSON_DATA_LONG
 **/
BSON.BSON_DATA_LONG = 18;
/**
 * Long BSON Type
 *
 * @classconstant BSON_DATA_DECIMAL128
 **/
BSON.BSON_DATA_DECIMAL128 = 19;
/**
 * MinKey BSON Type
 *
 * @classconstant BSON_DATA_MIN_KEY
 **/
BSON.BSON_DATA_MIN_KEY = 0xff;
/**
 * MaxKey BSON Type
 *
 * @classconstant BSON_DATA_MAX_KEY
 **/
BSON.BSON_DATA_MAX_KEY = 0x7f;
/**
 * Binary Default Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_DEFAULT
 **/
BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;
/**
 * Binary Function Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_FUNCTION
 **/
BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;
/**
 * Binary Byte Array Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY
 **/
BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;
/**
 * Binary UUID Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_UUID
 **/
BSON.BSON_BINARY_SUBTYPE_UUID = 3;
/**
 * Binary MD5 Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_MD5
 **/
BSON.BSON_BINARY_SUBTYPE_MD5 = 4;
/**
 * Binary User Defined Type
 *
 * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED
 **/
BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;

// BSON MAX VALUES
BSON.BSON_INT32_MAX = 0x7FFFFFFF;
BSON.BSON_INT32_MIN = -0x80000000;

BSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;
BSON.BSON_INT64_MIN = -Math.pow(2, 63);

// JS MAX PRECISE VALUES
BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.
BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.

// Internal long versions
var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.
var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.

module.exports = serializeInto;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {

var writeIEEE754 = __webpack_require__(16).writeIEEE754
	, readIEEE754 = __webpack_require__(16).readIEEE754
	, Long = __webpack_require__(22).Long
  , Double = __webpack_require__(27).Double
  , Timestamp = __webpack_require__(28).Timestamp
  , ObjectID = __webpack_require__(29).ObjectID
  , Symbol = __webpack_require__(31).Symbol
  , BSONRegExp = __webpack_require__(30).BSONRegExp
  , Code = __webpack_require__(32).Code
	, Decimal128 = __webpack_require__(33)
  , MinKey = __webpack_require__(34).MinKey
  , MaxKey = __webpack_require__(35).MaxKey
  , DBRef = __webpack_require__(36).DBRef
  , Binary = __webpack_require__(37).Binary;

// To ensure that 0.4 of node works correctly
var isDate = function isDate(d) {
  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';
}

var calculateObjectSize = function calculateObjectSize(object, serializeFunctions, ignoreUndefined) {
  var totalLength = (4 + 1);

  if(Array.isArray(object)) {
    for(var i = 0; i < object.length; i++) {
      totalLength += calculateElement(i.toString(), object[i], serializeFunctions, true, ignoreUndefined)
    }
  } else {
		// If we have toBSON defined, override the current object
		if(object.toBSON) {
			object = object.toBSON();
		}

		// Calculate size
    for(var key in object) {
      totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined)
    }
  }

  return totalLength;
}

/**
 * @ignore
 * @api private
 */
function calculateElement(name, value, serializeFunctions, isArray, ignoreUndefined) {
	// If we have toBSON defined, override the current object
  if(value && value.toBSON){
    value = value.toBSON();
  }

  switch(typeof value) {
    case 'string':
      return 1 + Buffer.byteLength(name, 'utf8') + 1 + 4 + Buffer.byteLength(value, 'utf8') + 1;
    case 'number':
      if(Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {
        if(value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) { // 32 bit
          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (4 + 1);
        } else {
          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);
        }
      } else {  // 64 bit
        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);
      }
    case 'undefined':
      if(isArray || !ignoreUndefined) return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1);
      return 0;
    case 'boolean':
      return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1 + 1);
    case 'object':
      if(value == null || value instanceof MinKey || value instanceof MaxKey || value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {
        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1);
      } else if(value instanceof ObjectID || value['_bsontype'] == 'ObjectID') {
        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (12 + 1);
      } else if(value instanceof Date || isDate(value)) {
        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);
      } else if(typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {
        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1 + 4 + 1) + value.length;
      } else if(value instanceof Long || value instanceof Double || value instanceof Timestamp
          || value['_bsontype'] == 'Long' || value['_bsontype'] == 'Double' || value['_bsontype'] == 'Timestamp') {
        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);
			} else if(value instanceof Decimal128 || value['_bsontype'] == 'Decimal128') {
        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (16 + 1);
      } else if(value instanceof Code || value['_bsontype'] == 'Code') {
        // Calculate size depending on the availability of a scope
        if(value.scope != null && Object.keys(value.scope).length > 0) {
          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + 4 + Buffer.byteLength(value.code.toString(), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);
        } else {
          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + Buffer.byteLength(value.code.toString(), 'utf8') + 1;
        }
      } else if(value instanceof Binary || value['_bsontype'] == 'Binary') {
        // Check what kind of subtype we have
        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {
          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (value.position + 1 + 4 + 1 + 4);
        } else {
          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (value.position + 1 + 4 + 1);
        }
      } else if(value instanceof Symbol || value['_bsontype'] == 'Symbol') {
        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + Buffer.byteLength(value.value, 'utf8') + 4 + 1 + 1;
      } else if(value instanceof DBRef || value['_bsontype'] == 'DBRef') {
        // Set up correct object for serialization
        var ordered_values = {
            '$ref': value.namespace
          , '$id' : value.oid
        };

        // Add db reference if it exists
        if(null != value.db) {
          ordered_values['$db'] = value.db;
        }

        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined);
      } else if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]') {
          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + Buffer.byteLength(value.source, 'utf8') + 1
            + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1
      } else if(value instanceof BSONRegExp || value['_bsontype'] == 'BSONRegExp') {
          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + Buffer.byteLength(value.pattern, 'utf8') + 1
            + Buffer.byteLength(value.options, 'utf8') + 1
      } else {
        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + calculateObjectSize(value, serializeFunctions, ignoreUndefined) + 1;
      }
    case 'function':
      // WTF for 0.4.X where typeof /someregexp/ === 'function'
      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') {
        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + Buffer.byteLength(value.source, 'utf8') + 1
          + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1
      } else {
        if(serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {
          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + 4 + Buffer.byteLength(value.toString(), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);
        } else if(serializeFunctions) {
          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + Buffer.byteLength(value.toString(), 'utf8') + 1;
        }
      }
  }

  return 0;
}

var BSON = {};

// BSON MAX VALUES
BSON.BSON_INT32_MAX = 0x7FFFFFFF;
BSON.BSON_INT32_MIN = -0x80000000;

// JS MAX PRECISE VALUES
BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.
BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.

module.exports = calculateObjectSize;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

(function (root) {
   "use strict";

/***** unorm.js *****/

/*
 * UnicodeNormalizer 1.0.0
 * Copyright (c) 2008 Matsuza
 * Dual licensed under the MIT (MIT-LICENSE.txt) and GPL (GPL-LICENSE.txt) licenses.
 * $Date: 2008-06-05 16:44:17 +0200 (Thu, 05 Jun 2008) $
 * $Rev: 13309 $
 */

   var DEFAULT_FEATURE = [null, 0, {}];
   var CACHE_THRESHOLD = 10;
   var SBase = 0xAC00, LBase = 0x1100, VBase = 0x1161, TBase = 0x11A7, LCount = 19, VCount = 21, TCount = 28;
   var NCount = VCount * TCount; // 588
   var SCount = LCount * NCount; // 11172

   var UChar = function(cp, feature){
      this.codepoint = cp;
      this.feature = feature;
   };

   // Strategies
   var cache = {};
   var cacheCounter = [];
   for (var i = 0; i <= 0xFF; ++i){
      cacheCounter[i] = 0;
   }

   function fromCache(next, cp, needFeature){
      var ret = cache[cp];
      if(!ret){
         ret = next(cp, needFeature);
         if(!!ret.feature && ++cacheCounter[(cp >> 8) & 0xFF] > CACHE_THRESHOLD){
            cache[cp] = ret;
         }
      }
      return ret;
   }

   function fromData(next, cp, needFeature){
      var hash = cp & 0xFF00;
      var dunit = UChar.udata[hash] || {};
      var f = dunit[cp];
      return f ? new UChar(cp, f) : new UChar(cp, DEFAULT_FEATURE);
   }
   function fromCpOnly(next, cp, needFeature){
      return !!needFeature ? next(cp, needFeature) : new UChar(cp, null);
   }
   function fromRuleBasedJamo(next, cp, needFeature){
      var j;
      if(cp < LBase || (LBase + LCount <= cp && cp < SBase) || (SBase + SCount < cp)){
         return next(cp, needFeature);
      }
      if(LBase <= cp && cp < LBase + LCount){
         var c = {};
         var base = (cp - LBase) * VCount;
         for (j = 0; j < VCount; ++j){
            c[VBase + j] = SBase + TCount * (j + base);
         }
         return new UChar(cp, [,,c]);
      }

      var SIndex = cp - SBase;
      var TIndex = SIndex % TCount;
      var feature = [];
      if(TIndex !== 0){
         feature[0] = [SBase + SIndex - TIndex, TBase + TIndex];
      } else {
         feature[0] = [LBase + Math.floor(SIndex / NCount), VBase + Math.floor((SIndex % NCount) / TCount)];
         feature[2] = {};
         for (j = 1; j < TCount; ++j){
            feature[2][TBase + j] = cp + j;
         }
      }
      return new UChar(cp, feature);
   }
   function fromCpFilter(next, cp, needFeature){
      return cp < 60 || 13311 < cp && cp < 42607 ? new UChar(cp, DEFAULT_FEATURE) : next(cp, needFeature);
   }

   var strategies = [fromCpFilter, fromCache, fromCpOnly, fromRuleBasedJamo, fromData];

   UChar.fromCharCode = strategies.reduceRight(function (next, strategy) {
      return function (cp, needFeature) {
         return strategy(next, cp, needFeature);
      };
   }, null);

   UChar.isHighSurrogate = function(cp){
      return cp >= 0xD800 && cp <= 0xDBFF;
   };
   UChar.isLowSurrogate = function(cp){
      return cp >= 0xDC00 && cp <= 0xDFFF;
   };

   UChar.prototype.prepFeature = function(){
      if(!this.feature){
         this.feature = UChar.fromCharCode(this.codepoint, true).feature;
      }
   };

   UChar.prototype.toString = function(){
      if(this.codepoint < 0x10000){
         return String.fromCharCode(this.codepoint);
      } else {
         var x = this.codepoint - 0x10000;
         return String.fromCharCode(Math.floor(x / 0x400) + 0xD800, x % 0x400 + 0xDC00);
      }
   };

   UChar.prototype.getDecomp = function(){
      this.prepFeature();
      return this.feature[0] || null;
   };

   UChar.prototype.isCompatibility = function(){
      this.prepFeature();
      return !!this.feature[1] && (this.feature[1] & (1 << 8));
   };
   UChar.prototype.isExclude = function(){
      this.prepFeature();
      return !!this.feature[1] && (this.feature[1] & (1 << 9));
   };
   UChar.prototype.getCanonicalClass = function(){
      this.prepFeature();
      return !!this.feature[1] ? (this.feature[1] & 0xff) : 0;
   };
   UChar.prototype.getComposite = function(following){
      this.prepFeature();
      if(!this.feature[2]){
         return null;
      }
      var cp = this.feature[2][following.codepoint];
      return cp ? UChar.fromCharCode(cp) : null;
   };

   var UCharIterator = function(str){
      this.str = str;
      this.cursor = 0;
   };
   UCharIterator.prototype.next = function(){
      if(!!this.str && this.cursor < this.str.length){
         var cp = this.str.charCodeAt(this.cursor++);
         var d;
         if(UChar.isHighSurrogate(cp) && this.cursor < this.str.length && UChar.isLowSurrogate((d = this.str.charCodeAt(this.cursor)))){
            cp = (cp - 0xD800) * 0x400 + (d -0xDC00) + 0x10000;
            ++this.cursor;
         }
         return UChar.fromCharCode(cp);
      } else {
         this.str = null;
         return null;
      }
   };

   var RecursDecompIterator = function(it, cano){
      this.it = it;
      this.canonical = cano;
      this.resBuf = [];
   };

   RecursDecompIterator.prototype.next = function(){
      function recursiveDecomp(cano, uchar){
         var decomp = uchar.getDecomp();
         if(!!decomp && !(cano && uchar.isCompatibility())){
            var ret = [];
            for(var i = 0; i < decomp.length; ++i){
               var a = recursiveDecomp(cano, UChar.fromCharCode(decomp[i]));
                ret = ret.concat(a);
            }
            return ret;
         } else {
            return [uchar];
         }
      }
      if(this.resBuf.length === 0){
         var uchar = this.it.next();
         if(!uchar){
            return null;
         }
         this.resBuf = recursiveDecomp(this.canonical, uchar);
      }
      return this.resBuf.shift();
   };

   var DecompIterator = function(it){
      this.it = it;
      this.resBuf = [];
   };

   DecompIterator.prototype.next = function(){
      var cc;
      if(this.resBuf.length === 0){
         do{
            var uchar = this.it.next();
            if(!uchar){
               break;
            }
            cc = uchar.getCanonicalClass();
            var inspt = this.resBuf.length;
            if(cc !== 0){
               for(; inspt > 0; --inspt){
                  var uchar2 = this.resBuf[inspt - 1];
                  var cc2 = uchar2.getCanonicalClass();
                  if(cc2 <= cc){
                     break;
                  }
               }
            }
            this.resBuf.splice(inspt, 0, uchar);
         } while(cc !== 0);
      }
      return this.resBuf.shift();
   };

   var CompIterator = function(it){
      this.it = it;
      this.procBuf = [];
      this.resBuf = [];
      this.lastClass = null;
   };

   CompIterator.prototype.next = function(){
      while(this.resBuf.length === 0){
         var uchar = this.it.next();
         if(!uchar){
            this.resBuf = this.procBuf;
            this.procBuf = [];
            break;
         }
         if(this.procBuf.length === 0){
            this.lastClass = uchar.getCanonicalClass();
            this.procBuf.push(uchar);
         } else {
            var starter = this.procBuf[0];
            var composite = starter.getComposite(uchar);
            var cc = uchar.getCanonicalClass();
            if(!!composite && (this.lastClass < cc || this.lastClass === 0)){
               this.procBuf[0] = composite;
            } else {
               if(cc === 0){
                  this.resBuf = this.procBuf;
                  this.procBuf = [];
               }
               this.lastClass = cc;
               this.procBuf.push(uchar);
            }
         }
      }
      return this.resBuf.shift();
   };

   var createIterator = function(mode, str){
      switch(mode){
         case "NFD":
            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true));
         case "NFKD":
            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false));
         case "NFC":
            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true)));
         case "NFKC":
            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false)));
      }
      throw mode + " is invalid";
   };
   var normalize = function(mode, str){
      var it = createIterator(mode, str);
      var ret = "";
      var uchar;
      while(!!(uchar = it.next())){
         ret += uchar.toString();
      }
      return ret;
   };

   /* API functions */
   function nfd(str){
      return normalize("NFD", str);
   }

   function nfkd(str){
      return normalize("NFKD", str);
   }

   function nfc(str){
      return normalize("NFC", str);
   }

   function nfkc(str){
      return normalize("NFKC", str);
   }

/* Unicode data */
UChar.udata={
0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},
256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},
512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},
768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8000,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},
1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},
1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},
1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},
1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},
2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},
2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},
2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},
2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},
3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},
3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},
3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},
3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},
4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},
4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},
4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},
4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},
5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},
5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},
5632:{71231:[,9],71350:[,9],71351:[,7]},
5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},
6144:{6313:[,228]},
6400:{6457:[,222],6458:[,230],6459:[,220]},
6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},
6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},
7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},
7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},
7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},
7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8000,768]],8003:[[8001,768]],8004:[[8000,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},
8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},
8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},
8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},
8960:{9001:[[12296]],9002:[[12297]]},
9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},
10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},
11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},
11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},
11776:{11935:[[27597],256],12019:[[40863],256]},
12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[30000],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},
12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},
12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},
12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},
13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},
27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},
27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},
42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},
42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},
43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},
43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},
43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},
43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},
48128:{113822:[,1]},
53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},
53760:{119362:[,230],119363:[,230],119364:[,230]},
54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},
54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},
54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},
55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},
59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},
60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},
61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},
61952:{},
63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23000]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},
63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149000]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32000]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},
64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[40000]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},
64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},
64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},
64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},
65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},
65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}

};

   /***** Module to export */
   var unorm = {
      nfc: nfc,
      nfd: nfd,
      nfkc: nfkc,
      nfkd: nfkd
   };

   /*globals module:true,define:true*/

   // CommonJS
   if (true) {
      module.exports = unorm;

   // AMD
   } else if (typeof define === "function" && define.amd) {
      define("unorm", function () {
         return unorm;
      });

   // Global
   } else {
      root.unorm = unorm;
   }

   /***** Export as shim for String::normalize method *****/
   /*
      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#november_8_2013_draft_rev_21

      21.1.3.12 String.prototype.normalize(form="NFC")
      When the normalize method is called with one argument form, the following steps are taken:

      1. Let O be CheckObjectCoercible(this value).
      2. Let S be ToString(O).
      3. ReturnIfAbrupt(S).
      4. If form is not provided or undefined let form be "NFC".
      5. Let f be ToString(form).
      6. ReturnIfAbrupt(f).
      7. If f is not one of "NFC", "NFD", "NFKC", or "NFKD", then throw a RangeError Exception.
      8. Let ns be the String value is the result of normalizing S into the normalization form named by f as specified in Unicode Standard Annex #15, UnicodeNormalizatoin Forms.
      9. Return ns.

      The length property of the normalize method is 0.

      *NOTE* The normalize function is intentionally generic; it does not require that its this value be a String object. Therefore it can be transferred to other kinds of objects for use as a method.
   */
    unorm.shimApplied = false;

   if (!String.prototype.normalize) {
      String.prototype.normalize = function(form) {
         var str = "" + this;
         form =  form === undefined ? "NFC" : form;

         if (form === "NFC") {
            return unorm.nfc(str);
         } else if (form === "NFD") {
            return unorm.nfd(str);
         } else if (form === "NFKC") {
            return unorm.nfkc(str);
         } else if (form === "NFKD") {
            return unorm.nfkd(str);
         } else {
            throw new RangeError("Invalid normalization form: " + form);
         }
      };

      unorm.shimApplied = true;
   }
}(this));


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Checked version of `punycode.ucs2.decode`, throws an error if
 * there is an unmatched surrogate half.
 *
 * @see <https://github.com/bestiejs/punycode.js/issues/67>
 * @name decode
 * @param {String} string The Unicode input string (UCS-2).
 * @param {Boolean} check Throw an error if there is an unmatched surrogate half.
 * @returns {Array} The new array of code points.
 */
function checkedUcs2Decode(string, check = true) {
    const output = [];
    let counter = 0;
    const length = string.length;
    while (counter < length) {
        const value = string.charCodeAt(counter++);
        if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
            // It's a high surrogate, and there is a next character.
            const extra = string.charCodeAt(counter++);
            if ((extra & 0xFC00) === 0xDC00) {
                output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
            }
            else if (check) {
                throw new Error(`Unmatched high surrogate half at index ${counter - 2}`);
            }
            else {
                // It's an unmatched surrogate; only append this code unit, in case the
                // next code unit is the high surrogate of a surrogate pair.
                output.push(value);
                counter--;
            }
        }
        else if (value >= 0xD800 && value <= 0xDBFF && counter === length) {
            throw new Error(`Unmatched high surrogate half at index ${counter - 1}`);
        }
        else if ((value & 0xFC00) === 0xDC00) {
            // Low surrogate that wasn't matched by a preceding high surrogate.
            throw new Error(`Unmatched low surrogate half at index ${counter - 1}`);
        }
        else {
            output.push(value);
        }
    }
    return output;
}
exports.checkedUcs2Decode = checkedUcs2Decode;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9oZWxwZXJzL2NoZWNrZWQtdWNzMi1kZWNvZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7O0dBU0c7QUFDSCwyQkFBa0MsTUFBYyxFQUFFLFFBQWlCLElBQUk7SUFDckUsTUFBTSxNQUFNLEdBQWEsRUFBRSxDQUFDO0lBQzVCLElBQUksT0FBTyxHQUFXLENBQUMsQ0FBQztJQUN4QixNQUFNLE1BQU0sR0FBVyxNQUFNLENBQUMsTUFBTSxDQUFDO0lBQ3JDLE9BQU8sT0FBTyxHQUFHLE1BQU0sRUFBRSxDQUFDO1FBQ3hCLE1BQU0sS0FBSyxHQUFXLE1BQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztRQUNuRCxFQUFFLENBQUMsQ0FBQyxLQUFLLElBQUksTUFBTSxJQUFJLEtBQUssSUFBSSxNQUFNLElBQUksT0FBTyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDM0Qsd0RBQXdEO1lBQ3hELE1BQU0sS0FBSyxHQUFXLE1BQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztZQUNuRCxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDO2dCQUNoQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsT0FBTyxDQUFDLENBQUM7WUFDbkUsQ0FBQztZQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUNqQixNQUFNLElBQUksS0FBSyxDQUFDLDBDQUEwQyxPQUFPLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUMzRSxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ04sdUVBQXVFO2dCQUN2RSw0REFBNEQ7Z0JBQzVELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ25CLE9BQU8sRUFBRSxDQUFDO1lBQ1osQ0FBQztRQUNILENBQUM7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxJQUFJLE1BQU0sSUFBSSxLQUFLLElBQUksTUFBTSxJQUFJLE9BQU8sS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ3BFLE1BQU0sSUFBSSxLQUFLLENBQUMsMENBQTBDLE9BQU8sR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzNFLENBQUM7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQztZQUN2QyxtRUFBbUU7WUFDbkUsTUFBTSxJQUFJLEtBQUssQ0FBQyx5Q0FBeUMsT0FBTyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDMUUsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNyQixDQUFDO0lBQ0gsQ0FBQztJQUNELE1BQU0sQ0FBQyxNQUFNLENBQUM7QUFDaEIsQ0FBQztBQTdCRCw4Q0E2QkMiLCJmaWxlIjoibGliL2hlbHBlcnMvY2hlY2tlZC11Y3MyLWRlY29kZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2tlZCB2ZXJzaW9uIG9mIGBwdW55Y29kZS51Y3MyLmRlY29kZWAsIHRocm93cyBhbiBlcnJvciBpZlxuICogdGhlcmUgaXMgYW4gdW5tYXRjaGVkIHN1cnJvZ2F0ZSBoYWxmLlxuICpcbiAqIEBzZWUgPGh0dHBzOi8vZ2l0aHViLmNvbS9iZXN0aWVqcy9wdW55Y29kZS5qcy9pc3N1ZXMvNjc+XG4gKiBAbmFtZSBkZWNvZGVcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJpbmcgVGhlIFVuaWNvZGUgaW5wdXQgc3RyaW5nIChVQ1MtMikuXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGNoZWNrIFRocm93IGFuIGVycm9yIGlmIHRoZXJlIGlzIGFuIHVubWF0Y2hlZCBzdXJyb2dhdGUgaGFsZi5cbiAqIEByZXR1cm5zIHtBcnJheX0gVGhlIG5ldyBhcnJheSBvZiBjb2RlIHBvaW50cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrZWRVY3MyRGVjb2RlKHN0cmluZzogc3RyaW5nLCBjaGVjazogYm9vbGVhbiA9IHRydWUpIHtcbiAgY29uc3Qgb3V0cHV0OiBudW1iZXJbXSA9IFtdO1xuICBsZXQgY291bnRlcjogbnVtYmVyID0gMDtcbiAgY29uc3QgbGVuZ3RoOiBudW1iZXIgPSBzdHJpbmcubGVuZ3RoO1xuICB3aGlsZSAoY291bnRlciA8IGxlbmd0aCkge1xuICAgIGNvbnN0IHZhbHVlOiBudW1iZXIgPSBzdHJpbmcuY2hhckNvZGVBdChjb3VudGVyKyspO1xuICAgIGlmICh2YWx1ZSA+PSAweEQ4MDAgJiYgdmFsdWUgPD0gMHhEQkZGICYmIGNvdW50ZXIgPCBsZW5ndGgpIHtcbiAgICAgIC8vIEl0J3MgYSBoaWdoIHN1cnJvZ2F0ZSwgYW5kIHRoZXJlIGlzIGEgbmV4dCBjaGFyYWN0ZXIuXG4gICAgICBjb25zdCBleHRyYTogbnVtYmVyID0gc3RyaW5nLmNoYXJDb2RlQXQoY291bnRlcisrKTtcbiAgICAgIGlmICgoZXh0cmEgJiAweEZDMDApID09PSAweERDMDApIHsgLy8gTG93IHN1cnJvZ2F0ZS5cbiAgICAgICAgb3V0cHV0LnB1c2goKCh2YWx1ZSAmIDB4M0ZGKSA8PCAxMCkgKyAoZXh0cmEgJiAweDNGRikgKyAweDEwMDAwKTtcbiAgICAgIH0gZWxzZSBpZiAoY2hlY2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbm1hdGNoZWQgaGlnaCBzdXJyb2dhdGUgaGFsZiBhdCBpbmRleCAke2NvdW50ZXIgLSAyfWApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gSXQncyBhbiB1bm1hdGNoZWQgc3Vycm9nYXRlOyBvbmx5IGFwcGVuZCB0aGlzIGNvZGUgdW5pdCwgaW4gY2FzZSB0aGVcbiAgICAgICAgLy8gbmV4dCBjb2RlIHVuaXQgaXMgdGhlIGhpZ2ggc3Vycm9nYXRlIG9mIGEgc3Vycm9nYXRlIHBhaXIuXG4gICAgICAgIG91dHB1dC5wdXNoKHZhbHVlKTtcbiAgICAgICAgY291bnRlci0tO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodmFsdWUgPj0gMHhEODAwICYmIHZhbHVlIDw9IDB4REJGRiAmJiBjb3VudGVyID09PSBsZW5ndGgpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5tYXRjaGVkIGhpZ2ggc3Vycm9nYXRlIGhhbGYgYXQgaW5kZXggJHtjb3VudGVyIC0gMX1gKTtcbiAgICB9IGVsc2UgaWYgKCh2YWx1ZSAmIDB4RkMwMCkgPT09IDB4REMwMCkge1xuICAgICAgLy8gTG93IHN1cnJvZ2F0ZSB0aGF0IHdhc24ndCBtYXRjaGVkIGJ5IGEgcHJlY2VkaW5nIGhpZ2ggc3Vycm9nYXRlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbm1hdGNoZWQgbG93IHN1cnJvZ2F0ZSBoYWxmIGF0IGluZGV4ICR7Y291bnRlciAtIDF9YCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dHB1dC5wdXNoKHZhbHVlKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG91dHB1dDtcbn1cbiJdfQ==


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var extra_keys_1 = __webpack_require__(80);
exports.ExtraKeysError = extra_keys_1.ExtraKeysError;
var finite_number_1 = __webpack_require__(168);
exports.FiniteNumberError = finite_number_1.FiniteNumberError;
var invalid_array_item_1 = __webpack_require__(70);
exports.InvalidArrayItemError = invalid_array_item_1.InvalidArrayItemError;
var invalid_integer_1 = __webpack_require__(169);
exports.InvalidIntegerError = invalid_integer_1.InvalidIntegerError;
var invalid_int32_1 = __webpack_require__(86);
exports.InvalidInt32Error = invalid_int32_1.InvalidInt32Error;
var invalid_property_1 = __webpack_require__(81);
exports.InvalidPropertyError = invalid_property_1.InvalidPropertyError;
var invalid_timestamp_1 = __webpack_require__(78);
exports.InvalidTimestampError = invalid_timestamp_1.InvalidTimestampError;
var lower_case_1 = __webpack_require__(50);
exports.LowerCaseError = lower_case_1.LowerCaseError;
var max_array_length_1 = __webpack_require__(47);
exports.MaxArrayLengthError = max_array_length_1.MaxArrayLengthError;
var max_codepoints_1 = __webpack_require__(75);
exports.MaxCodepointsError = max_codepoints_1.MaxCodepointsError;
var max_ucs2_string_length_1 = __webpack_require__(92);
exports.MaxUcs2StringLengthError = max_ucs2_string_length_1.MaxUcs2StringLengthError;
var min_array_length_1 = __webpack_require__(170);
exports.MinArrayLengthError = min_array_length_1.MinArrayLengthError;
var min_codepoints_1 = __webpack_require__(76);
exports.MinCodepointsError = min_codepoints_1.MinCodepointsError;
var min_ucs2_string_length_1 = __webpack_require__(93);
exports.MinUcs2StringLengthError = min_ucs2_string_length_1.MinUcs2StringLengthError;
var missing_keys_1 = __webpack_require__(82);
exports.MissingKeysError = missing_keys_1.MissingKeysError;
var not_implemented_1 = __webpack_require__(10);
exports.NotImplementedError = not_implemented_1.NotImplementedError;
var not_sync_type_1 = __webpack_require__(171);
exports.NotSyncTypeError = not_sync_type_1.NotSyncTypeError;
var not_trimmed_1 = __webpack_require__(51);
exports.NotTrimmedError = not_trimmed_1.NotTrimmedError;
var null_property_1 = __webpack_require__(83);
exports.NullPropertyError = null_property_1.NullPropertyError;
var pattern_not_matched_1 = __webpack_require__(52);
exports.PatternNotMatchedError = pattern_not_matched_1.PatternNotMatchedError;
var unknown_format_1 = __webpack_require__(7);
exports.UnknownFormatError = unknown_format_1.UnknownFormatError;
var wrong_type_1 = __webpack_require__(8);
exports.WrongTypeError = wrong_type_1.WrongTypeError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQ0FBNEM7QUFBcEMsc0NBQUEsY0FBYyxDQUFBO0FBQ3RCLGlEQUFrRDtBQUExQyw0Q0FBQSxpQkFBaUIsQ0FBQTtBQUN6QiwyREFBMkQ7QUFBbkQscURBQUEscUJBQXFCLENBQUE7QUFDN0IscURBQXNEO0FBQTlDLGdEQUFBLG1CQUFtQixDQUFBO0FBQzNCLGlEQUFrRDtBQUExQyw0Q0FBQSxpQkFBaUIsQ0FBQTtBQUN6Qix1REFBd0Q7QUFBaEQsa0RBQUEsb0JBQW9CLENBQUE7QUFDNUIseURBQTBEO0FBQWxELG9EQUFBLHFCQUFxQixDQUFBO0FBQzdCLDJDQUE0QztBQUFwQyxzQ0FBQSxjQUFjLENBQUE7QUFDdEIsdURBQXVEO0FBQS9DLGlEQUFBLG1CQUFtQixDQUFBO0FBQzNCLG1EQUFvRDtBQUE1Qyw4Q0FBQSxrQkFBa0IsQ0FBQTtBQUMxQixtRUFBa0U7QUFBMUQsNERBQUEsd0JBQXdCLENBQUE7QUFDaEMsdURBQXVEO0FBQS9DLGlEQUFBLG1CQUFtQixDQUFBO0FBQzNCLG1EQUFvRDtBQUE1Qyw4Q0FBQSxrQkFBa0IsQ0FBQTtBQUMxQixtRUFBa0U7QUFBMUQsNERBQUEsd0JBQXdCLENBQUE7QUFDaEMsK0NBQWdEO0FBQXhDLDBDQUFBLGdCQUFnQixDQUFBO0FBQ3hCLHFEQUFzRDtBQUE5QyxnREFBQSxtQkFBbUIsQ0FBQTtBQUMzQixpREFBaUQ7QUFBekMsMkNBQUEsZ0JBQWdCLENBQUE7QUFDeEIsNkNBQThDO0FBQXRDLHdDQUFBLGVBQWUsQ0FBQTtBQUN2QixpREFBa0Q7QUFBMUMsNENBQUEsaUJBQWlCLENBQUE7QUFDekIsNkRBQTZEO0FBQXJELHVEQUFBLHNCQUFzQixDQUFBO0FBQzlCLG1EQUFvRDtBQUE1Qyw4Q0FBQSxrQkFBa0IsQ0FBQTtBQUMxQiwyQ0FBNEM7QUFBcEMsc0NBQUEsY0FBYyxDQUFBIiwiZmlsZSI6ImxpYi9lcnJvcnMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge0V4dHJhS2V5c0Vycm9yfSBmcm9tIFwiLi9leHRyYS1rZXlzXCI7XG5leHBvcnQge0Zpbml0ZU51bWJlckVycm9yfSBmcm9tIFwiLi9maW5pdGUtbnVtYmVyXCI7XG5leHBvcnQge0ludmFsaWRBcnJheUl0ZW1FcnJvcn0gZnJvbSBcIi4vaW52YWxpZC1hcnJheS1pdGVtXCI7XG5leHBvcnQge0ludmFsaWRJbnRlZ2VyRXJyb3J9IGZyb20gXCIuL2ludmFsaWQtaW50ZWdlclwiO1xuZXhwb3J0IHtJbnZhbGlkSW50MzJFcnJvcn0gZnJvbSBcIi4vaW52YWxpZC1pbnQzMlwiO1xuZXhwb3J0IHtJbnZhbGlkUHJvcGVydHlFcnJvcn0gZnJvbSBcIi4vaW52YWxpZC1wcm9wZXJ0eVwiO1xuZXhwb3J0IHtJbnZhbGlkVGltZXN0YW1wRXJyb3J9IGZyb20gXCIuL2ludmFsaWQtdGltZXN0YW1wXCI7XG5leHBvcnQge0xvd2VyQ2FzZUVycm9yfSBmcm9tIFwiLi9sb3dlci1jYXNlXCI7XG5leHBvcnQge01heEFycmF5TGVuZ3RoRXJyb3J9IGZyb20gXCIuL21heC1hcnJheS1sZW5ndGhcIjtcbmV4cG9ydCB7TWF4Q29kZXBvaW50c0Vycm9yfSBmcm9tIFwiLi9tYXgtY29kZXBvaW50c1wiO1xuZXhwb3J0IHtNYXhVY3MyU3RyaW5nTGVuZ3RoRXJyb3J9IGZyb20gXCIuL21heC11Y3MyLXN0cmluZy1sZW5ndGhcIjtcbmV4cG9ydCB7TWluQXJyYXlMZW5ndGhFcnJvcn0gZnJvbSBcIi4vbWluLWFycmF5LWxlbmd0aFwiO1xuZXhwb3J0IHtNaW5Db2RlcG9pbnRzRXJyb3J9IGZyb20gXCIuL21pbi1jb2RlcG9pbnRzXCI7XG5leHBvcnQge01pblVjczJTdHJpbmdMZW5ndGhFcnJvcn0gZnJvbSBcIi4vbWluLXVjczItc3RyaW5nLWxlbmd0aFwiO1xuZXhwb3J0IHtNaXNzaW5nS2V5c0Vycm9yfSBmcm9tIFwiLi9taXNzaW5nLWtleXNcIjtcbmV4cG9ydCB7Tm90SW1wbGVtZW50ZWRFcnJvcn0gZnJvbSBcIi4vbm90LWltcGxlbWVudGVkXCI7XG5leHBvcnQge05vdFN5bmNUeXBlRXJyb3J9IGZyb20gXCIuL25vdC1zeW5jLXR5cGVcIjtcbmV4cG9ydCB7Tm90VHJpbW1lZEVycm9yfSBmcm9tIFwiLi9ub3QtdHJpbW1lZFwiO1xuZXhwb3J0IHtOdWxsUHJvcGVydHlFcnJvcn0gZnJvbSBcIi4vbnVsbC1wcm9wZXJ0eVwiO1xuZXhwb3J0IHtQYXR0ZXJuTm90TWF0Y2hlZEVycm9yfSBmcm9tIFwiLi9wYXR0ZXJuLW5vdC1tYXRjaGVkXCI7XG5leHBvcnQge1Vua25vd25Gb3JtYXRFcnJvcn0gZnJvbSBcIi4vdW5rbm93bi1mb3JtYXRcIjtcbmV4cG9ydCB7V3JvbmdUeXBlRXJyb3J9IGZyb20gXCIuL3dyb25nLXR5cGVcIjtcbiJdfQ==


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var FiniteNumberError;
(function (FiniteNumberError) {
    FiniteNumberError.name = "FiniteNumber";
    function format({ value }) {
        return `Expected a finite number, received ${value}`;
    }
    FiniteNumberError.format = format;
    function create(value) {
        return incident_1.Incident(FiniteNumberError.name, { value }, format);
    }
    FiniteNumberError.create = create;
})(FiniteNumberError = exports.FiniteNumberError || (exports.FiniteNumberError = {}));
exports.default = FiniteNumberError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvZmluaXRlLW51bWJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUVsQyxJQUFpQixpQkFBaUIsQ0FjakM7QUFkRCxXQUFpQixpQkFBaUI7SUFFbkIsc0JBQUksR0FBUyxjQUFjLENBQUM7SUFNekMsZ0JBQXVCLEVBQUMsS0FBSyxFQUFPO1FBQ2xDLE1BQU0sQ0FBQyxzQ0FBc0MsS0FBSyxFQUFFLENBQUM7SUFDdkQsQ0FBQztJQUZlLHdCQUFNLFNBRXJCLENBQUE7SUFDRCxnQkFBdUIsS0FBYTtRQUNsQyxNQUFNLENBQUMsbUJBQVEsQ0FBQyxrQkFBQSxJQUFJLEVBQUUsRUFBQyxLQUFLLEVBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRmUsd0JBQU0sU0FFckIsQ0FBQTtBQUNILENBQUMsRUFkZ0IsaUJBQWlCLEdBQWpCLHlCQUFpQixLQUFqQix5QkFBaUIsUUFjakM7QUFJRCxrQkFBZSxpQkFBaUIsQ0FBQyIsImZpbGUiOiJsaWIvZXJyb3JzL2Zpbml0ZS1udW1iZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IG5hbWVzcGFjZSBGaW5pdGVOdW1iZXJFcnJvciB7XG4gIGV4cG9ydCB0eXBlIE5hbWUgPSBcIkZpbml0ZU51bWJlclwiO1xuICBleHBvcnQgY29uc3QgbmFtZTogTmFtZSA9IFwiRmluaXRlTnVtYmVyXCI7XG4gIGV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gICAgdmFsdWU6IG51bWJlcjtcbiAgfVxuICBleHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbiAgZXhwb3J0IHR5cGUgVHlwZSA9IEluY2lkZW50PE5hbWUsIERhdGEsIENhdXNlPjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7dmFsdWV9OiBEYXRhKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYEV4cGVjdGVkIGEgZmluaXRlIG51bWJlciwgcmVjZWl2ZWQgJHt2YWx1ZX1gO1xuICB9XG4gIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGUodmFsdWU6IG51bWJlcik6IFR5cGUge1xuICAgIHJldHVybiBJbmNpZGVudChuYW1lLCB7dmFsdWV9LCBmb3JtYXQpO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIEZpbml0ZU51bWJlckVycm9yID0gRmluaXRlTnVtYmVyRXJyb3IuVHlwZTtcblxuZXhwb3J0IGRlZmF1bHQgRmluaXRlTnVtYmVyRXJyb3I7XG4iXX0=


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var InvalidIntegerError;
(function (InvalidIntegerError) {
    InvalidIntegerError.name = "InvalidInteger";
    function format({ value }) {
        return `Invalid integer: ${value}`;
    }
    InvalidIntegerError.format = format;
    function create(value) {
        return incident_1.Incident(InvalidIntegerError.name, { value }, format);
    }
    InvalidIntegerError.create = create;
})(InvalidIntegerError = exports.InvalidIntegerError || (exports.InvalidIntegerError = {}));
exports.default = InvalidIntegerError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvaW52YWxpZC1pbnRlZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQWtDO0FBRWxDLElBQWlCLG1CQUFtQixDQWNuQztBQWRELFdBQWlCLG1CQUFtQjtJQUVyQix3QkFBSSxHQUFTLGdCQUFnQixDQUFDO0lBTTNDLGdCQUF1QixFQUFDLEtBQUssRUFBTztRQUNsQyxNQUFNLENBQUMsb0JBQW9CLEtBQUssRUFBRSxDQUFDO0lBQ3JDLENBQUM7SUFGZSwwQkFBTSxTQUVyQixDQUFBO0lBQ0QsZ0JBQXVCLEtBQWE7UUFDbEMsTUFBTSxDQUFDLG1CQUFRLENBQUMsb0JBQUEsSUFBSSxFQUFFLEVBQUMsS0FBSyxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUZlLDBCQUFNLFNBRXJCLENBQUE7QUFDSCxDQUFDLEVBZGdCLG1CQUFtQixHQUFuQiwyQkFBbUIsS0FBbkIsMkJBQW1CLFFBY25DO0FBSUQsa0JBQWUsbUJBQW1CLENBQUMiLCJmaWxlIjoibGliL2Vycm9ycy9pbnZhbGlkLWludGVnZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiaW5jaWRlbnRcIjtcblxuZXhwb3J0IG5hbWVzcGFjZSBJbnZhbGlkSW50ZWdlckVycm9yIHtcbiAgZXhwb3J0IHR5cGUgTmFtZSA9IFwiSW52YWxpZEludGVnZXJcIjtcbiAgZXhwb3J0IGNvbnN0IG5hbWU6IE5hbWUgPSBcIkludmFsaWRJbnRlZ2VyXCI7XG4gIGV4cG9ydCBpbnRlcmZhY2UgRGF0YSB7XG4gICAgdmFsdWU6IGFueTtcbiAgfVxuICBleHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbiAgZXhwb3J0IHR5cGUgVHlwZSA9IEluY2lkZW50PE5hbWUsIERhdGEsIENhdXNlPjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7dmFsdWV9OiBEYXRhKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYEludmFsaWQgaW50ZWdlcjogJHt2YWx1ZX1gO1xuICB9XG4gIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGUodmFsdWU6IG51bWJlcik6IFR5cGUge1xuICAgIHJldHVybiBJbmNpZGVudChuYW1lLCB7dmFsdWV9LCBmb3JtYXQpO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIEludmFsaWRJbnRlZ2VyRXJyb3IgPSBJbnZhbGlkSW50ZWdlckVycm9yLlR5cGU7XG5cbmV4cG9ydCBkZWZhdWx0IEludmFsaWRJbnRlZ2VyRXJyb3I7XG4iXX0=


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var MinArrayLengthError;
(function (MinArrayLengthError) {
    MinArrayLengthError.name = "MinArrayLength";
    function format({ array, min }) {
        return `Expected array length (${array.length}) to be greater than or equal to ${min}`;
    }
    MinArrayLengthError.format = format;
    function create(array, min) {
        return incident_1.Incident(MinArrayLengthError.name, { array, min }, format);
    }
    MinArrayLengthError.create = create;
})(MinArrayLengthError = exports.MinArrayLengthError || (exports.MinArrayLengthError = {}));
exports.default = MinArrayLengthError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvbWluLWFycmF5LWxlbmd0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUVsQyxJQUFpQixtQkFBbUIsQ0FlbkM7QUFmRCxXQUFpQixtQkFBbUI7SUFFckIsd0JBQUksR0FBUyxnQkFBZ0IsQ0FBQztJQU8zQyxnQkFBdUIsRUFBQyxLQUFLLEVBQUUsR0FBRyxFQUFPO1FBQ3ZDLE1BQU0sQ0FBQywwQkFBMEIsS0FBSyxDQUFDLE1BQU0sb0NBQW9DLEdBQUcsRUFBRSxDQUFDO0lBQ3pGLENBQUM7SUFGZSwwQkFBTSxTQUVyQixDQUFBO0lBQ0QsZ0JBQXVCLEtBQXFCLEVBQUUsR0FBVztRQUN2RCxNQUFNLENBQUMsbUJBQVEsQ0FBQyxvQkFBQSxJQUFJLEVBQUUsRUFBQyxLQUFLLEVBQUUsR0FBRyxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUZlLDBCQUFNLFNBRXJCLENBQUE7QUFDSCxDQUFDLEVBZmdCLG1CQUFtQixHQUFuQiwyQkFBbUIsS0FBbkIsMkJBQW1CLFFBZW5DO0FBSUQsa0JBQWUsbUJBQW1CLENBQUMiLCJmaWxlIjoibGliL2Vycm9ycy9taW4tYXJyYXktbGVuZ3RoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmNpZGVudH0gZnJvbSBcImluY2lkZW50XCI7XG5cbmV4cG9ydCBuYW1lc3BhY2UgTWluQXJyYXlMZW5ndGhFcnJvciB7XG4gIGV4cG9ydCB0eXBlIE5hbWUgPSBcIk1pbkFycmF5TGVuZ3RoXCI7XG4gIGV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJNaW5BcnJheUxlbmd0aFwiO1xuICBleHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICAgIGFycmF5OiBBcnJheUxpa2U8YW55PjtcbiAgICBtaW46IG51bWJlcjtcbiAgfVxuICBleHBvcnQgdHlwZSBDYXVzZSA9IHVuZGVmaW5lZDtcbiAgZXhwb3J0IHR5cGUgVHlwZSA9IEluY2lkZW50PE5hbWUsIERhdGEsIENhdXNlPjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdCh7YXJyYXksIG1pbn06IERhdGEpOiBzdHJpbmcge1xuICAgIHJldHVybiBgRXhwZWN0ZWQgYXJyYXkgbGVuZ3RoICgke2FycmF5Lmxlbmd0aH0pIHRvIGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAke21pbn1gO1xuICB9XG4gIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGUoYXJyYXk6IEFycmF5TGlrZTxhbnk+LCBtaW46IG51bWJlcik6IFR5cGUge1xuICAgIHJldHVybiBJbmNpZGVudChuYW1lLCB7YXJyYXksIG1pbn0sIGZvcm1hdCk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgTWluQXJyYXlMZW5ndGhFcnJvciA9IE1pbkFycmF5TGVuZ3RoRXJyb3IuVHlwZTtcblxuZXhwb3J0IGRlZmF1bHQgTWluQXJyYXlMZW5ndGhFcnJvcjtcbiJdfQ==


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
var NotSyncTypeError;
(function (NotSyncTypeError) {
    NotSyncTypeError.name = "NotSyncType";
    function format({ type, methodName }) {
        return `The method ${methodName} of the type ${type}) is not supported`;
    }
    NotSyncTypeError.format = format;
    function create(type, methodName) {
        return new incident_1.Incident(NotSyncTypeError.name, { type, methodName }, format);
    }
    NotSyncTypeError.create = create;
})(NotSyncTypeError = exports.NotSyncTypeError || (exports.NotSyncTypeError = {}));
exports.default = NotSyncTypeError;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9lcnJvcnMvbm90LXN5bmMtdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUdsQyxJQUFpQixnQkFBZ0IsQ0FlaEM7QUFmRCxXQUFpQixnQkFBZ0I7SUFFbEIscUJBQUksR0FBUyxhQUFhLENBQUM7SUFPeEMsZ0JBQXVCLEVBQUMsSUFBSSxFQUFFLFVBQVUsRUFBTztRQUM3QyxNQUFNLENBQUMsY0FBYyxVQUFVLGdCQUFnQixJQUFJLG9CQUFvQixDQUFDO0lBQzFFLENBQUM7SUFGZSx1QkFBTSxTQUVyQixDQUFBO0lBQ0QsZ0JBQXVCLElBQW1CLEVBQUUsVUFBa0I7UUFDNUQsTUFBTSxDQUFDLElBQUksbUJBQVEsQ0FBQyxpQkFBQSxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsVUFBVSxFQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUZlLHVCQUFNLFNBRXJCLENBQUE7QUFDSCxDQUFDLEVBZmdCLGdCQUFnQixHQUFoQix3QkFBZ0IsS0FBaEIsd0JBQWdCLFFBZWhDO0FBSUQsa0JBQWUsZ0JBQWdCLENBQUMiLCJmaWxlIjoibGliL2Vycm9ycy9ub3Qtc3luYy10eXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmNpZGVudH0gZnJvbSBcImluY2lkZW50XCI7XG5pbXBvcnQge1R5cGUgYXMgS3J5b1R5cGV9IGZyb20gXCIuLi9pbnRlcmZhY2VzXCI7XG5cbmV4cG9ydCBuYW1lc3BhY2UgTm90U3luY1R5cGVFcnJvciB7XG4gIGV4cG9ydCB0eXBlIE5hbWUgPSBcIk5vdFN5bmNUeXBlXCI7XG4gIGV4cG9ydCBjb25zdCBuYW1lOiBOYW1lID0gXCJOb3RTeW5jVHlwZVwiO1xuICBleHBvcnQgaW50ZXJmYWNlIERhdGEge1xuICAgIHR5cGU6IEtyeW9UeXBlPGFueT47XG4gICAgbWV0aG9kTmFtZTogc3RyaW5nO1xuICB9XG4gIGV4cG9ydCB0eXBlIENhdXNlID0gdW5kZWZpbmVkO1xuICBleHBvcnQgdHlwZSBUeXBlID0gSW5jaWRlbnQ8TmFtZSwgRGF0YSwgQ2F1c2U+O1xuICBleHBvcnQgZnVuY3Rpb24gZm9ybWF0KHt0eXBlLCBtZXRob2ROYW1lfTogRGF0YSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBUaGUgbWV0aG9kICR7bWV0aG9kTmFtZX0gb2YgdGhlIHR5cGUgJHt0eXBlfSkgaXMgbm90IHN1cHBvcnRlZGA7XG4gIH1cbiAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZSh0eXBlOiBLcnlvVHlwZTxhbnk+LCBtZXRob2ROYW1lOiBzdHJpbmcpOiBUeXBlIHtcbiAgICByZXR1cm4gbmV3IEluY2lkZW50KG5hbWUsIHt0eXBlLCBtZXRob2ROYW1lfSwgZm9ybWF0KTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBOb3RTeW5jVHlwZUVycm9yID0gTm90U3luY1R5cGVFcnJvci5UeXBlO1xuXG5leHBvcnQgZGVmYXVsdCBOb3RTeW5jVHlwZUVycm9yO1xuIl19


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Add;
(function (Add) {
    Add.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Add }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Add = exports.Add || (exports.Add = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvYWRkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixHQUFHLENBV25CO0FBWEQsV0FBaUIsR0FBRztJQUtMLFFBQUksR0FBc0IsSUFBSSxtQkFBWSxDQUFNO1FBQzNELFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsR0FBRyxFQUFDLENBQUMsRUFBQztTQUNoRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixHQUFHLEdBQUgsV0FBRyxLQUFILFdBQUcsUUFXbkIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9hZGQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWRkIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5BZGQ7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQWRkIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiYWRkXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEFkZD4gPSBuZXcgRG9jdW1lbnRUeXBlPEFkZD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5BZGR9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Add2;
(function (Add2) {
    Add2.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Add2 }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Add2 = exports.Add2 || (exports.Add2 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvYWRkMi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsSUFBSSxDQVdwQjtBQVhELFdBQWlCLElBQUk7SUFLTixTQUFJLEdBQXVCLElBQUksbUJBQVksQ0FBTztRQUM3RCxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBQyxDQUFDLEVBQUM7U0FDakY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsSUFBSSxHQUFKLFlBQUksS0FBSixZQUFJLFFBV3BCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvYWRkMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBBZGQyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5BZGQyO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEFkZDIge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJhZGQyXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEFkZDI+ID0gbmV3IERvY3VtZW50VHlwZTxBZGQyPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkFkZDJ9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var And;
(function (And) {
    And.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.And }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(And = exports.And || (exports.And = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixHQUFHLENBV25CO0FBWEQsV0FBaUIsR0FBRztJQUtMLFFBQUksR0FBc0IsSUFBSSxtQkFBWSxDQUFNO1FBQzNELFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsR0FBRyxFQUFDLENBQUMsRUFBQztTQUNoRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixHQUFHLEdBQUgsV0FBRyxLQUFILFdBQUcsUUFXbkIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9hbmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQW5kIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5BbmQ7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQW5kIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiYW5kXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEFuZD4gPSBuZXcgRG9jdW1lbnRUeXBlPEFuZD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5BbmR9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var AsciiToChar;
(function (AsciiToChar) {
    AsciiToChar.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.AsciiToChar }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(AsciiToChar = exports.AsciiToChar || (exports.AsciiToChar = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvYXNjaWktdG8tY2hhci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsV0FBVyxDQVczQjtBQVhELFdBQWlCLFdBQVc7SUFLYixnQkFBSSxHQUE4QixJQUFJLG1CQUFZLENBQWM7UUFDM0UsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxXQUFXLEVBQUMsQ0FBQyxFQUFDO1NBQ3hGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFdBQVcsR0FBWCxtQkFBVyxLQUFYLG1CQUFXLFFBVzNCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvYXNjaWktdG8tY2hhci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBBc2NpaVRvQ2hhciBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuQXNjaWlUb0NoYXI7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQXNjaWlUb0NoYXIge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJhc2NpaS10by1jaGFyXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEFzY2lpVG9DaGFyPiA9IG5ldyBEb2N1bWVudFR5cGU8QXNjaWlUb0NoYXI+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuQXNjaWlUb0NoYXJ9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var BitAnd;
(function (BitAnd) {
    BitAnd.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.BitAnd }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(BitAnd = exports.BitAnd || (exports.BitAnd = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvYml0LWFuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsTUFBTSxDQVd0QjtBQVhELFdBQWlCLE1BQU07SUFLUixXQUFJLEdBQXlCLElBQUksbUJBQVksQ0FBUztRQUNqRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUM7U0FDbkY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsTUFBTSxHQUFOLGNBQU0sS0FBTixjQUFNLFFBV3RCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvYml0LWFuZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBCaXRBbmQgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkJpdEFuZDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBCaXRBbmQge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJiaXQtYW5kXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEJpdEFuZD4gPSBuZXcgRG9jdW1lbnRUeXBlPEJpdEFuZD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5CaXRBbmR9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var BitLShift;
(function (BitLShift) {
    BitLShift.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.BitLShift }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(BitLShift = exports.BitLShift || (exports.BitLShift = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvYml0LWwtc2hpZnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLFNBQVMsQ0FXekI7QUFYRCxXQUFpQixTQUFTO0lBS1gsY0FBSSxHQUE0QixJQUFJLG1CQUFZLENBQVk7UUFDdkUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxTQUFTLEVBQUMsQ0FBQyxFQUFDO1NBQ3RGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBV3pCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvYml0LWwtc2hpZnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQml0TFNoaWZ0IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5CaXRMU2hpZnQ7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQml0TFNoaWZ0IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiYml0LWwtc2hpZnRcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8Qml0TFNoaWZ0PiA9IG5ldyBEb2N1bWVudFR5cGU8Qml0TFNoaWZ0Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkJpdExTaGlmdH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var BitOr;
(function (BitOr) {
    BitOr.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.BitOr }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(BitOr = exports.BitOr || (exports.BitOr = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvYml0LW9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixLQUFLLENBV3JCO0FBWEQsV0FBaUIsS0FBSztJQUtQLFVBQUksR0FBd0IsSUFBSSxtQkFBWSxDQUFRO1FBQy9ELFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsS0FBSyxFQUFDLENBQUMsRUFBQztTQUNsRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixLQUFLLEdBQUwsYUFBSyxLQUFMLGFBQUssUUFXckIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9iaXQtb3IuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQml0T3IgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkJpdE9yO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEJpdE9yIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiYml0LW9yXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEJpdE9yPiA9IG5ldyBEb2N1bWVudFR5cGU8Qml0T3I+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuQml0T3J9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var BitRShift;
(function (BitRShift) {
    BitRShift.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.BitRShift }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(BitRShift = exports.BitRShift || (exports.BitRShift = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvYml0LXItc2hpZnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLFNBQVMsQ0FXekI7QUFYRCxXQUFpQixTQUFTO0lBS1gsY0FBSSxHQUE0QixJQUFJLG1CQUFZLENBQVk7UUFDdkUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxTQUFTLEVBQUMsQ0FBQyxFQUFDO1NBQ3RGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBV3pCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvYml0LXItc2hpZnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQml0UlNoaWZ0IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5CaXRSU2hpZnQ7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQml0UlNoaWZ0IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiYml0LXItc2hpZnRcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8Qml0UlNoaWZ0PiA9IG5ldyBEb2N1bWVudFR5cGU8Qml0UlNoaWZ0Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkJpdFJTaGlmdH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var BitURShift;
(function (BitURShift) {
    BitURShift.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.BitURShift }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(BitURShift = exports.BitURShift || (exports.BitURShift = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvYml0LXUtci1zaGlmdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsVUFBVSxDQVcxQjtBQVhELFdBQWlCLFVBQVU7SUFLWixlQUFJLEdBQTZCLElBQUksbUJBQVksQ0FBYTtRQUN6RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFVBQVUsRUFBQyxDQUFDLEVBQUM7U0FDdkY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsVUFBVSxHQUFWLGtCQUFVLEtBQVYsa0JBQVUsUUFXMUIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9iaXQtdS1yLXNoaWZ0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEJpdFVSU2hpZnQgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkJpdFVSU2hpZnQ7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQml0VVJTaGlmdCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcImJpdC11LXItc2hpZnRcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8Qml0VVJTaGlmdD4gPSBuZXcgRG9jdW1lbnRUeXBlPEJpdFVSU2hpZnQ+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuQml0VVJTaGlmdH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var BitXor;
(function (BitXor) {
    BitXor.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.BitXor }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(BitXor = exports.BitXor || (exports.BitXor = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvYml0LXhvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsTUFBTSxDQVd0QjtBQVhELFdBQWlCLE1BQU07SUFLUixXQUFJLEdBQXlCLElBQUksbUJBQVksQ0FBUztRQUNqRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUM7U0FDbkY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsTUFBTSxHQUFOLGNBQU0sS0FBTixjQUFNLFFBV3RCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvYml0LXhvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBCaXRYb3IgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkJpdFhvcjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBCaXRYb3Ige1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJiaXQteG9yXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEJpdFhvcj4gPSBuZXcgRG9jdW1lbnRUeXBlPEJpdFhvcj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5CaXRYb3J9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Call;
(function (Call) {
    Call.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Call }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Call = exports.Call || (exports.Call = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvY2FsbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsSUFBSSxDQVdwQjtBQVhELFdBQWlCLElBQUk7SUFLTixTQUFJLEdBQXVCLElBQUksbUJBQVksQ0FBTztRQUM3RCxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBQyxDQUFDLEVBQUM7U0FDakY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsSUFBSSxHQUFKLFlBQUksS0FBSixZQUFJLFFBV3BCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvY2FsbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDYWxsIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5DYWxsO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIENhbGwge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJjYWxsXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPENhbGw+ID0gbmV3IERvY3VtZW50VHlwZTxDYWxsPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkNhbGx9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var CallFunction;
(function (CallFunction) {
    CallFunction.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.CallFunction }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(CallFunction = exports.CallFunction || (exports.CallFunction = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvY2FsbC1mdW5jdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsWUFBWSxDQVc1QjtBQVhELFdBQWlCLFlBQVk7SUFLZCxpQkFBSSxHQUErQixJQUFJLG1CQUFZLENBQWU7UUFDN0UsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxZQUFZLEVBQUMsQ0FBQyxFQUFDO1NBQ3pGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBVzVCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvY2FsbC1mdW5jdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDYWxsRnVuY3Rpb24gZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkNhbGxGdW5jdGlvbjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDYWxsRnVuY3Rpb24ge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJjYWxsLWZ1bmN0aW9uXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPENhbGxGdW5jdGlvbj4gPSBuZXcgRG9jdW1lbnRUeXBlPENhbGxGdW5jdGlvbj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5DYWxsRnVuY3Rpb259KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var CallMethod;
(function (CallMethod) {
    CallMethod.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.CallMethod }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(CallMethod = exports.CallMethod || (exports.CallMethod = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvY2FsbC1tZXRob2QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLFVBQVUsQ0FXMUI7QUFYRCxXQUFpQixVQUFVO0lBS1osZUFBSSxHQUE2QixJQUFJLG1CQUFZLENBQWE7UUFDekUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxVQUFVLEVBQUMsQ0FBQyxFQUFDO1NBQ3ZGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBVzFCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvY2FsbC1tZXRob2QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2FsbE1ldGhvZCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuQ2FsbE1ldGhvZDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDYWxsTWV0aG9kIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiY2FsbC1tZXRob2RcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8Q2FsbE1ldGhvZD4gPSBuZXcgRG9jdW1lbnRUeXBlPENhbGxNZXRob2Q+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuQ2FsbE1ldGhvZH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var CastOp;
(function (CastOp) {
    CastOp.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.CastOp }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(CastOp = exports.CastOp || (exports.CastOp = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvY2FzdC1vcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsTUFBTSxDQVd0QjtBQVhELFdBQWlCLE1BQU07SUFLUixXQUFJLEdBQXlCLElBQUksbUJBQVksQ0FBUztRQUNqRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUM7U0FDbkY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsTUFBTSxHQUFOLGNBQU0sS0FBTixjQUFNLFFBV3RCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvY2FzdC1vcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDYXN0T3AgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkNhc3RPcDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDYXN0T3Age1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJjYXN0LW9wXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPENhc3RPcD4gPSBuZXcgRG9jdW1lbnRUeXBlPENhc3RPcD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5DYXN0T3B9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var CharToAscii;
(function (CharToAscii) {
    CharToAscii.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.CharToAscii }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(CharToAscii = exports.CharToAscii || (exports.CharToAscii = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvY2hhci10by1hc2NpaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsV0FBVyxDQVczQjtBQVhELFdBQWlCLFdBQVc7SUFLYixnQkFBSSxHQUE4QixJQUFJLG1CQUFZLENBQWM7UUFDM0UsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxXQUFXLEVBQUMsQ0FBQyxFQUFDO1NBQ3hGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFdBQVcsR0FBWCxtQkFBVyxLQUFYLG1CQUFXLFFBVzNCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvY2hhci10by1hc2NpaS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDaGFyVG9Bc2NpaSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuQ2hhclRvQXNjaWk7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ2hhclRvQXNjaWkge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJjaGFyLXRvLWFzY2lpXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPENoYXJUb0FzY2lpPiA9IG5ldyBEb2N1bWVudFR5cGU8Q2hhclRvQXNjaWk+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuQ2hhclRvQXNjaWl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var CloneSprite;
(function (CloneSprite) {
    CloneSprite.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.CloneSprite }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(CloneSprite = exports.CloneSprite || (exports.CloneSprite = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvY2xvbmUtc3ByaXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixXQUFXLENBVzNCO0FBWEQsV0FBaUIsV0FBVztJQUtiLGdCQUFJLEdBQThCLElBQUksbUJBQVksQ0FBYztRQUMzRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFdBQVcsRUFBQyxDQUFDLEVBQUM7U0FDeEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFXM0IiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9jbG9uZS1zcHJpdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2xvbmVTcHJpdGUgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkNsb25lU3ByaXRlO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIENsb25lU3ByaXRlIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiY2xvbmUtc3ByaXRlXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPENsb25lU3ByaXRlPiA9IG5ldyBEb2N1bWVudFR5cGU8Q2xvbmVTcHJpdGU+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuQ2xvbmVTcHJpdGV9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var ConstantPool;
(function (ConstantPool) {
    ConstantPool.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.ConstantPool }) },
            constantPool: { type: new kryo_1.ArrayType({ itemType: new kryo_1.Ucs2StringType({ maxLength: Infinity }), maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ConstantPool = exports.ConstantPool || (exports.ConstantPool = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvY29uc3RhbnQtcG9vbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxRjtBQUNyRixnREFBMEM7QUFRMUMsSUFBaUIsWUFBWSxDQWE1QjtBQWJELFdBQWlCLFlBQVk7SUFNZCxpQkFBSSxHQUErQixJQUFJLG1CQUFZLENBQWU7UUFDN0UsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxZQUFZLEVBQUMsQ0FBQyxFQUFDO1lBQ3hGLFlBQVksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsSUFBSSxxQkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7U0FDaEg7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFiZ0IsWUFBWSxHQUFaLG9CQUFZLEtBQVosb0JBQVksUUFhNUIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9jb25zdGFudC1wb29sLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcnJheVR5cGUsIENhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZSwgVWNzMlN0cmluZ1R5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbnN0YW50UG9vbCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuQ29uc3RhbnRQb29sO1xuICBjb25zdGFudFBvb2w6IHN0cmluZ1tdO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIENvbnN0YW50UG9vbCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcImNvbnN0YW50LXBvb2xcIjtcbiAgICBjb25zdGFudF9wb29sOiBzdHJpbmdbXTtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8Q29uc3RhbnRQb29sPiA9IG5ldyBEb2N1bWVudFR5cGU8Q29uc3RhbnRQb29sPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkNvbnN0YW50UG9vbH0pfSxcbiAgICAgIGNvbnN0YW50UG9vbDoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Decrement;
(function (Decrement) {
    Decrement.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Decrement }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Decrement = exports.Decrement || (exports.Decrement = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZGVjcmVtZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixTQUFTLENBV3pCO0FBWEQsV0FBaUIsU0FBUztJQUtYLGNBQUksR0FBNEIsSUFBSSxtQkFBWSxDQUFZO1FBQ3ZFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsU0FBUyxFQUFDLENBQUMsRUFBQztTQUN0RjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixTQUFTLEdBQVQsaUJBQVMsS0FBVCxpQkFBUyxRQVd6QiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL2RlY3JlbWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWNyZW1lbnQgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkRlY3JlbWVudDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBEZWNyZW1lbnQge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJkZWNyZW1lbnRcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8RGVjcmVtZW50PiA9IG5ldyBEb2N1bWVudFR5cGU8RGVjcmVtZW50Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkRlY3JlbWVudH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _circular_references_1 = __webpack_require__(14);
const action_type_1 = __webpack_require__(1);
var DefineFunction;
(function (DefineFunction) {
    DefineFunction.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.DefineFunction }) },
            name: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
            parameters: {
                type: new kryo_1.ArrayType({
                    itemType: new kryo_1.Ucs2StringType({ maxLength: Infinity }),
                    maxLength: Infinity,
                }),
            },
            // TODO(demurgos): solve circular dependency
            body: { type: new kryo_1.ArrayType({ itemType: _circular_references_1.Action.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineFunction = exports.DefineFunction || (exports.DefineFunction = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZGVmaW5lLWZ1bmN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXFGO0FBQ3JGLHFFQUE2RDtBQUU3RCxnREFBMEM7QUFVMUMsSUFBaUIsY0FBYyxDQXVCOUI7QUF2QkQsV0FBaUIsY0FBYztJQVFoQixtQkFBSSxHQUFpQyxJQUFJLG1CQUFZLENBQWlCO1FBQ2pGLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsY0FBYyxFQUFDLENBQUMsRUFBQztZQUMxRixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7WUFDdkQsVUFBVSxFQUFFO2dCQUNWLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUM7b0JBQ2xCLFFBQVEsRUFBRSxJQUFJLHFCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUM7b0JBQ25ELFNBQVMsRUFBRSxRQUFRO2lCQUNwQixDQUFDO2FBQ0g7WUFDRCw0Q0FBNEM7WUFDNUMsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSw2QkFBTyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUMzRTtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQXZCZ0IsY0FBYyxHQUFkLHNCQUFjLEtBQWQsc0JBQWMsUUF1QjlCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvZGVmaW5lLWZ1bmN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcnJheVR5cGUsIENhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZSwgVWNzMlN0cmluZ1R5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvbiBhcyAkQWN0aW9ufSBmcm9tIFwiLi4vLi4vX2NpcmN1bGFyLXJlZmVyZW5jZXNcIjtcbmltcG9ydCB7QWN0aW9ufSBmcm9tIFwiLi4vYWN0aW9uXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZUZ1bmN0aW9uIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5EZWZpbmVGdW5jdGlvbjtcbiAgbmFtZTogc3RyaW5nO1xuICBwYXJhbWV0ZXJzOiBzdHJpbmdbXTtcbiAgYm9keTogQWN0aW9uW107XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGVmaW5lRnVuY3Rpb24ge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJkZWZpbmUtZnVuY3Rpb25cIjtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgcGFyYW1ldGVyczogc3RyaW5nW107XG4gICAgYm9keTogQWN0aW9uLkpzb25bXTtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8RGVmaW5lRnVuY3Rpb24+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVGdW5jdGlvbj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5EZWZpbmVGdW5jdGlvbn0pfSxcbiAgICAgIG5hbWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgICBwYXJhbWV0ZXJzOiB7XG4gICAgICAgIHR5cGU6IG5ldyBBcnJheVR5cGUoe1xuICAgICAgICAgIGl0ZW1UeXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KSxcbiAgICAgICAgICBtYXhMZW5ndGg6IEluZmluaXR5LFxuICAgICAgICB9KSxcbiAgICAgIH0sXG4gICAgICAvLyBUT0RPKGRlbXVyZ29zKTogc29sdmUgY2lyY3VsYXIgZGVwZW5kZW5jeVxuICAgICAgYm9keToge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkQWN0aW9uLnR5cGUsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _circular_references_1 = __webpack_require__(14);
const action_type_1 = __webpack_require__(1);
const parameter_1 = __webpack_require__(95);
var DefineFunction2;
(function (DefineFunction2) {
    DefineFunction2.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.DefineFunction2 }) },
            name: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
            preloadParent: { type: new kryo_1.BooleanType() },
            preloadRoot: { type: new kryo_1.BooleanType() },
            suppressSuper: { type: new kryo_1.BooleanType() },
            preloadSuper: { type: new kryo_1.BooleanType() },
            suppressArguments: { type: new kryo_1.BooleanType() },
            preloadArguments: { type: new kryo_1.BooleanType() },
            suppressThis: { type: new kryo_1.BooleanType() },
            preloadThis: { type: new kryo_1.BooleanType() },
            preloadGlobal: { type: new kryo_1.BooleanType() },
            registerCount: { type: new kryo_1.Int32Type() },
            parameters: { type: new kryo_1.ArrayType({ itemType: parameter_1.Parameter.type, maxLength: Infinity }) },
            // TODO(demurgos): solve circular dependency
            body: { type: new kryo_1.ArrayType({ itemType: _circular_references_1.Action.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineFunction2 = exports.DefineFunction2 || (exports.DefineFunction2 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZGVmaW5lLWZ1bmN0aW9uMi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUE2RztBQUU3RyxxRUFBNkQ7QUFFN0QsZ0RBQTBDO0FBQzFDLDRDQUF1QztBQW9CdkMsSUFBaUIsZUFBZSxDQXNDL0I7QUF0Q0QsV0FBaUIsZUFBZTtJQWtCakIsb0JBQUksR0FBa0MsSUFBSSxtQkFBWSxDQUFrQjtRQUNuRixVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLGVBQWUsRUFBQyxDQUFDLEVBQUM7WUFDM0YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1lBQ3ZELGFBQWEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUN4QyxXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDdEMsYUFBYSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ3hDLFlBQVksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUN2QyxpQkFBaUIsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUM1QyxnQkFBZ0IsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUMzQyxZQUFZLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDdkMsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ3RDLGFBQWEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUN4QyxhQUFhLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDdEMsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxxQkFBUyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztZQUNsRiw0Q0FBNEM7WUFDNUMsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSw2QkFBTyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUMzRTtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQXRDZ0IsZUFBZSxHQUFmLHVCQUFlLEtBQWYsdUJBQWUsUUFzQy9CIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvZGVmaW5lLWZ1bmN0aW9uMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXJyYXlUeXBlLCBCb29sZWFuVHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZSwgTGl0ZXJhbFR5cGUsIFVjczJTdHJpbmdUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50U2l6ZX0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0FjdGlvbiBhcyAkQWN0aW9ufSBmcm9tIFwiLi4vLi4vX2NpcmN1bGFyLXJlZmVyZW5jZXNcIjtcbmltcG9ydCB7QWN0aW9ufSBmcm9tIFwiLi4vYWN0aW9uXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtQYXJhbWV0ZXJ9IGZyb20gXCIuLi9wYXJhbWV0ZXJcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVGdW5jdGlvbjIgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkRlZmluZUZ1bmN0aW9uMjtcbiAgbmFtZTogc3RyaW5nO1xuICBwcmVsb2FkUGFyZW50OiBib29sZWFuO1xuICBwcmVsb2FkUm9vdDogYm9vbGVhbjtcbiAgc3VwcHJlc3NTdXBlcjogYm9vbGVhbjtcbiAgcHJlbG9hZFN1cGVyOiBib29sZWFuO1xuICBzdXBwcmVzc0FyZ3VtZW50czogYm9vbGVhbjtcbiAgcHJlbG9hZEFyZ3VtZW50czogYm9vbGVhbjtcbiAgc3VwcHJlc3NUaGlzOiBib29sZWFuO1xuICBwcmVsb2FkVGhpczogYm9vbGVhbjtcbiAgcHJlbG9hZEdsb2JhbDogYm9vbGVhbjtcbiAgcmVnaXN0ZXJDb3VudDogVWludFNpemU7XG4gIHBhcmFtZXRlcnM6IFBhcmFtZXRlcltdO1xuICBib2R5OiBBY3Rpb25bXTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBEZWZpbmVGdW5jdGlvbjIge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJkZWZpbmUtZnVuY3Rpb24yXCI7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIHByZWxvYWRfcGFyZW50OiBib29sZWFuO1xuICAgIHByZWxvYWRfcm9vdDogYm9vbGVhbjtcbiAgICBzdXBwcmVzc19zdXBlcjogYm9vbGVhbjtcbiAgICBwcmVsb2FkX3N1cGVyOiBib29sZWFuO1xuICAgIHN1cHByZXNzX2FyZ3VtZW50czogYm9vbGVhbjtcbiAgICBwcmVsb2FkX2FyZ3VtZW50czogYm9vbGVhbjtcbiAgICBzdXBwcmVzc190aGlzOiBib29sZWFuO1xuICAgIHByZWxvYWRfdGhpczogYm9vbGVhbjtcbiAgICBwcmVsb2FkX2dsb2JhbDogYm9vbGVhbjtcbiAgICByZWdpc3Rlcl9jb3VudDogbnVtYmVyO1xuICAgIHBhcmFtZXRlcnM6IFBhcmFtZXRlci5Kc29uW107XG4gICAgYm9keTogQWN0aW9uLkpzb25bXTtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8RGVmaW5lRnVuY3Rpb24yPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lRnVuY3Rpb24yPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkRlZmluZUZ1bmN0aW9uMn0pfSxcbiAgICAgIG5hbWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgICBwcmVsb2FkUGFyZW50OiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgcHJlbG9hZFJvb3Q6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBzdXBwcmVzc1N1cGVyOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgcHJlbG9hZFN1cGVyOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgc3VwcHJlc3NBcmd1bWVudHM6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBwcmVsb2FkQXJndW1lbnRzOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgc3VwcHJlc3NUaGlzOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgcHJlbG9hZFRoaXM6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBwcmVsb2FkR2xvYmFsOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgcmVnaXN0ZXJDb3VudDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICBwYXJhbWV0ZXJzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6IFBhcmFtZXRlci50eXBlLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgICAgLy8gVE9ETyhkZW11cmdvcyk6IHNvbHZlIGNpcmN1bGFyIGRlcGVuZGVuY3lcbiAgICAgIGJvZHk6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogJEFjdGlvbi50eXBlLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var DefineLocal;
(function (DefineLocal) {
    DefineLocal.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.DefineLocal }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineLocal = exports.DefineLocal || (exports.DefineLocal = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZGVmaW5lLWxvY2FsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixXQUFXLENBVzNCO0FBWEQsV0FBaUIsV0FBVztJQUtiLGdCQUFJLEdBQThCLElBQUksbUJBQVksQ0FBYztRQUMzRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFdBQVcsRUFBQyxDQUFDLEVBQUM7U0FDeEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFXM0IiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9kZWZpbmUtbG9jYWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lTG9jYWwgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkRlZmluZUxvY2FsO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlZmluZUxvY2FsIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiZGVmaW5lLWxvY2FsXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPERlZmluZUxvY2FsPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lTG9jYWw+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuRGVmaW5lTG9jYWx9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var DefineLocal2;
(function (DefineLocal2) {
    DefineLocal2.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.DefineLocal2 }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineLocal2 = exports.DefineLocal2 || (exports.DefineLocal2 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZGVmaW5lLWxvY2FsMi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsWUFBWSxDQVc1QjtBQVhELFdBQWlCLFlBQVk7SUFLZCxpQkFBSSxHQUErQixJQUFJLG1CQUFZLENBQWU7UUFDN0UsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxZQUFZLEVBQUMsQ0FBQyxFQUFDO1NBQ3pGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBVzVCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvZGVmaW5lLWxvY2FsMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVMb2NhbDIgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkRlZmluZUxvY2FsMjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBEZWZpbmVMb2NhbDIge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJkZWZpbmUtbG9jYWwyXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPERlZmluZUxvY2FsMj4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZUxvY2FsMj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5EZWZpbmVMb2NhbDJ9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Delete;
(function (Delete) {
    Delete.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Delete }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Delete = exports.Delete || (exports.Delete = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZGVsZXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixNQUFNLENBV3RCO0FBWEQsV0FBaUIsTUFBTTtJQUtSLFdBQUksR0FBeUIsSUFBSSxtQkFBWSxDQUFTO1FBQ2pFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBQztTQUNuRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixNQUFNLEdBQU4sY0FBTSxLQUFOLGNBQU0sUUFXdEIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9kZWxldGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVsZXRlIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5EZWxldGU7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGVsZXRlIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiZGVsZXRlXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPERlbGV0ZT4gPSBuZXcgRG9jdW1lbnRUeXBlPERlbGV0ZT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5EZWxldGV9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Delete2;
(function (Delete2) {
    Delete2.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Delete2 }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Delete2 = exports.Delete2 || (exports.Delete2 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZGVsZXRlMi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsT0FBTyxDQVd2QjtBQVhELFdBQWlCLE9BQU87SUFLVCxZQUFJLEdBQTBCLElBQUksbUJBQVksQ0FBVTtRQUNuRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUM7U0FDcEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsT0FBTyxHQUFQLGVBQU8sS0FBUCxlQUFPLFFBV3ZCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvZGVsZXRlMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWxldGUyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5EZWxldGUyO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlbGV0ZTIge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJkZWxldGUyXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPERlbGV0ZTI+ID0gbmV3IERvY3VtZW50VHlwZTxEZWxldGUyPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkRlbGV0ZTJ9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Divide;
(function (Divide) {
    Divide.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Divide }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Divide = exports.Divide || (exports.Divide = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZGl2aWRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixNQUFNLENBV3RCO0FBWEQsV0FBaUIsTUFBTTtJQUtSLFdBQUksR0FBeUIsSUFBSSxtQkFBWSxDQUFTO1FBQ2pFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBQztTQUNuRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixNQUFNLEdBQU4sY0FBTSxLQUFOLGNBQU0sUUFXdEIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9kaXZpZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGl2aWRlIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5EaXZpZGU7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGl2aWRlIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiZGl2aWRlXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPERpdmlkZT4gPSBuZXcgRG9jdW1lbnRUeXBlPERpdmlkZT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5EaXZpZGV9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var EndDrag;
(function (EndDrag) {
    EndDrag.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.EndDrag }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(EndDrag = exports.EndDrag || (exports.EndDrag = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZW5kLWRyYWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLE9BQU8sQ0FXdkI7QUFYRCxXQUFpQixPQUFPO0lBS1QsWUFBSSxHQUEwQixJQUFJLG1CQUFZLENBQVU7UUFDbkUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxPQUFPLEVBQUMsQ0FBQyxFQUFDO1NBQ3BGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLE9BQU8sR0FBUCxlQUFPLEtBQVAsZUFBTyxRQVd2QiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL2VuZC1kcmFnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEVuZERyYWcgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkVuZERyYWc7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRW5kRHJhZyB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcImVuZC1kcmFnXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEVuZERyYWc+ID0gbmV3IERvY3VtZW50VHlwZTxFbmREcmFnPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkVuZERyYWd9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Enumerate;
(function (Enumerate) {
    Enumerate.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Enumerate }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Enumerate = exports.Enumerate || (exports.Enumerate = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZW51bWVyYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixTQUFTLENBV3pCO0FBWEQsV0FBaUIsU0FBUztJQUtYLGNBQUksR0FBNEIsSUFBSSxtQkFBWSxDQUFZO1FBQ3ZFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsU0FBUyxFQUFDLENBQUMsRUFBQztTQUN0RjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixTQUFTLEdBQVQsaUJBQVMsS0FBVCxpQkFBUyxRQVd6QiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL2VudW1lcmF0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBFbnVtZXJhdGUgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkVudW1lcmF0ZTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBFbnVtZXJhdGUge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJlbnVtZXJhdGVcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8RW51bWVyYXRlPiA9IG5ldyBEb2N1bWVudFR5cGU8RW51bWVyYXRlPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkVudW1lcmF0ZX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Enumerate2;
(function (Enumerate2) {
    Enumerate2.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Enumerate2 }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Enumerate2 = exports.Enumerate2 || (exports.Enumerate2 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZW51bWVyYXRlMi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsVUFBVSxDQVcxQjtBQVhELFdBQWlCLFVBQVU7SUFLWixlQUFJLEdBQTZCLElBQUksbUJBQVksQ0FBYTtRQUN6RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFVBQVUsRUFBQyxDQUFDLEVBQUM7U0FDdkY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsVUFBVSxHQUFWLGtCQUFVLEtBQVYsa0JBQVUsUUFXMUIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9lbnVtZXJhdGUyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEVudW1lcmF0ZTIgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkVudW1lcmF0ZTI7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRW51bWVyYXRlMiB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcImVudW1lcmF0ZTJcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8RW51bWVyYXRlMj4gPSBuZXcgRG9jdW1lbnRUeXBlPEVudW1lcmF0ZTI+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuRW51bWVyYXRlMn0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Equals;
(function (Equals) {
    Equals.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Equals }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Equals = exports.Equals || (exports.Equals = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZXF1YWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixNQUFNLENBV3RCO0FBWEQsV0FBaUIsTUFBTTtJQUtSLFdBQUksR0FBeUIsSUFBSSxtQkFBWSxDQUFTO1FBQ2pFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBQztTQUNuRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixNQUFNLEdBQU4sY0FBTSxLQUFOLGNBQU0sUUFXdEIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9lcXVhbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXF1YWxzIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5FcXVhbHM7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRXF1YWxzIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiZXF1YWxzXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEVxdWFscz4gPSBuZXcgRG9jdW1lbnRUeXBlPEVxdWFscz4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5FcXVhbHN9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Equals2;
(function (Equals2) {
    Equals2.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Equals2 }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Equals2 = exports.Equals2 || (exports.Equals2 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZXF1YWxzMi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsT0FBTyxDQVd2QjtBQVhELFdBQWlCLE9BQU87SUFLVCxZQUFJLEdBQTBCLElBQUksbUJBQVksQ0FBVTtRQUNuRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUM7U0FDcEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsT0FBTyxHQUFQLGVBQU8sS0FBUCxlQUFPLFFBV3ZCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvZXF1YWxzMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBFcXVhbHMyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5FcXVhbHMyO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEVxdWFsczIge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJlcXVhbHMyXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEVxdWFsczI+ID0gbmV3IERvY3VtZW50VHlwZTxFcXVhbHMyPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkVxdWFsczJ9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Extends;
(function (Extends) {
    Extends.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Extends }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Extends = exports.Extends || (exports.Extends = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZXh0ZW5kcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsT0FBTyxDQVd2QjtBQVhELFdBQWlCLE9BQU87SUFLVCxZQUFJLEdBQTBCLElBQUksbUJBQVksQ0FBVTtRQUNuRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUM7U0FDcEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsT0FBTyxHQUFQLGVBQU8sS0FBUCxlQUFPLFFBV3ZCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvZXh0ZW5kcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBFeHRlbmRzIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5FeHRlbmRzO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEV4dGVuZHMge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJleHRlbmRzXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEV4dGVuZHM+ID0gbmV3IERvY3VtZW50VHlwZTxFeHRlbmRzPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkV4dGVuZHN9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var FsCommand2;
(function (FsCommand2) {
    FsCommand2.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.FsCommand2 }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(FsCommand2 = exports.FsCommand2 || (exports.FsCommand2 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZnMtY29tbWFuZDIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLFVBQVUsQ0FXMUI7QUFYRCxXQUFpQixVQUFVO0lBS1osZUFBSSxHQUE2QixJQUFJLG1CQUFZLENBQWE7UUFDekUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxVQUFVLEVBQUMsQ0FBQyxFQUFDO1NBQ3ZGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBVzFCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvZnMtY29tbWFuZDIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRnNDb21tYW5kMiBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuRnNDb21tYW5kMjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBGc0NvbW1hbmQyIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiZnMtY29tbWFuZDJcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8RnNDb21tYW5kMj4gPSBuZXcgRG9jdW1lbnRUeXBlPEZzQ29tbWFuZDI+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuRnNDb21tYW5kMn0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var GetMember;
(function (GetMember) {
    GetMember.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.GetMember }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(GetMember = exports.GetMember || (exports.GetMember = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZ2V0LW1lbWJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsU0FBUyxDQVd6QjtBQVhELFdBQWlCLFNBQVM7SUFLWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQVMsRUFBQyxDQUFDLEVBQUM7U0FDdEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFXekIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9nZXQtbWVtYmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdldE1lbWJlciBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuR2V0TWVtYmVyO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldE1lbWJlciB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcImdldC1tZW1iZXJcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8R2V0TWVtYmVyPiA9IG5ldyBEb2N1bWVudFR5cGU8R2V0TWVtYmVyPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkdldE1lbWJlcn0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var GetProperty;
(function (GetProperty) {
    GetProperty.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.GetProperty }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(GetProperty = exports.GetProperty || (exports.GetProperty = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZ2V0LXByb3BlcnR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixXQUFXLENBVzNCO0FBWEQsV0FBaUIsV0FBVztJQUtiLGdCQUFJLEdBQThCLElBQUksbUJBQVksQ0FBYztRQUMzRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFdBQVcsRUFBQyxDQUFDLEVBQUM7U0FDeEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFXM0IiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9nZXQtcHJvcGVydHkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR2V0UHJvcGVydHkgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkdldFByb3BlcnR5O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldFByb3BlcnR5IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiZ2V0LXByb3BlcnR5XCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEdldFByb3BlcnR5PiA9IG5ldyBEb2N1bWVudFR5cGU8R2V0UHJvcGVydHk+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuR2V0UHJvcGVydHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var GetTime;
(function (GetTime) {
    GetTime.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.GetTime }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(GetTime = exports.GetTime || (exports.GetTime = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZ2V0LXRpbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLE9BQU8sQ0FXdkI7QUFYRCxXQUFpQixPQUFPO0lBS1QsWUFBSSxHQUEwQixJQUFJLG1CQUFZLENBQVU7UUFDbkUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxPQUFPLEVBQUMsQ0FBQyxFQUFDO1NBQ3BGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLE9BQU8sR0FBUCxlQUFPLEtBQVAsZUFBTyxRQVd2QiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL2dldC10aW1lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdldFRpbWUgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkdldFRpbWU7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2V0VGltZSB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcImdldC10aW1lXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEdldFRpbWU+ID0gbmV3IERvY3VtZW50VHlwZTxHZXRUaW1lPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkdldFRpbWV9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var GetUrl;
(function (GetUrl) {
    GetUrl.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.GetUrl }) },
            url: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
            target: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(GetUrl = exports.GetUrl || (exports.GetUrl = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZ2V0LXVybC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRTtBQUMxRSxnREFBMEM7QUFTMUMsSUFBaUIsTUFBTSxDQWV0QjtBQWZELFdBQWlCLE1BQU07SUFPUixXQUFJLEdBQXlCLElBQUksbUJBQVksQ0FBUztRQUNqRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUM7WUFDbEYsR0FBRyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1lBQ3RELE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUMxRDtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWZnQixNQUFNLEdBQU4sY0FBTSxLQUFOLGNBQU0sUUFldEIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9nZXQtdXJsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGUsIFVjczJTdHJpbmdUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHZXRVcmwgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkdldFVybDtcbiAgdXJsOiBzdHJpbmc7XG4gIHRhcmdldDogc3RyaW5nO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldFVybCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcImdldC11cmxcIjtcbiAgICB1cmw6IHN0cmluZztcbiAgICB0YXJnZXQ6IHN0cmluZztcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8R2V0VXJsPiA9IG5ldyBEb2N1bWVudFR5cGU8R2V0VXJsPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkdldFVybH0pfSxcbiAgICAgIHVybDoge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICAgIHRhcmdldDoge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
const get_url2_method_1 = __webpack_require__(96);
var GetUrl2;
(function (GetUrl2) {
    GetUrl2.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.GetUrl2 }) },
            method: { type: get_url2_method_1.GetUrl2Method.type },
            loadTarget: { type: new kryo_1.BooleanType() },
            loadVariables: { type: new kryo_1.BooleanType() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(GetUrl2 = exports.GetUrl2 || (exports.GetUrl2 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZ2V0LXVybDIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBdUU7QUFDdkUsZ0RBQTBDO0FBQzFDLHdEQUFpRDtBQVVqRCxJQUFpQixPQUFPLENBaUJ2QjtBQWpCRCxXQUFpQixPQUFPO0lBUVQsWUFBSSxHQUEwQixJQUFJLG1CQUFZLENBQVU7UUFDbkUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxPQUFPLEVBQUMsQ0FBQyxFQUFDO1lBQ25GLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSwrQkFBYSxDQUFDLElBQUksRUFBQztZQUNsQyxVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDckMsYUFBYSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1NBQ3pDO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBakJnQixPQUFPLEdBQVAsZUFBTyxLQUFQLGVBQU8sUUFpQnZCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvZ2V0LXVybDIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Jvb2xlYW5UeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtHZXRVcmwyTWV0aG9kfSBmcm9tIFwiLi4vZ2V0LXVybDItbWV0aG9kXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR2V0VXJsMiBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuR2V0VXJsMjtcbiAgbWV0aG9kOiBHZXRVcmwyTWV0aG9kO1xuICBsb2FkVGFyZ2V0OiBib29sZWFuO1xuICBsb2FkVmFyaWFibGVzOiBib29sZWFuO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldFVybDIge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJnZXQtdXJsMlwiO1xuICAgIG1ldGhvZDogR2V0VXJsMk1ldGhvZC5Kc29uO1xuICAgIGxvYWRfdGFyZ2V0OiBib29sZWFuO1xuICAgIGxvYWRfdmFyaWFibGVzOiBib29sZWFuO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxHZXRVcmwyPiA9IG5ldyBEb2N1bWVudFR5cGU8R2V0VXJsMj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5HZXRVcmwyfSl9LFxuICAgICAgbWV0aG9kOiB7dHlwZTogR2V0VXJsMk1ldGhvZC50eXBlfSxcbiAgICAgIGxvYWRUYXJnZXQ6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBsb2FkVmFyaWFibGVzOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var GetVariable;
(function (GetVariable) {
    GetVariable.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.GetVariable }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(GetVariable = exports.GetVariable || (exports.GetVariable = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZ2V0LXZhcmlhYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixXQUFXLENBVzNCO0FBWEQsV0FBaUIsV0FBVztJQUtiLGdCQUFJLEdBQThCLElBQUksbUJBQVksQ0FBYztRQUMzRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFdBQVcsRUFBQyxDQUFDLEVBQUM7U0FDeEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFXM0IiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9nZXQtdmFyaWFibGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR2V0VmFyaWFibGUgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkdldFZhcmlhYmxlO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdldFZhcmlhYmxlIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiZ2V0LXZhcmlhYmxlXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEdldFZhcmlhYmxlPiA9IG5ldyBEb2N1bWVudFR5cGU8R2V0VmFyaWFibGU+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuR2V0VmFyaWFibGV9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var GotoFrame;
(function (GotoFrame) {
    GotoFrame.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.GotoFrame }) },
            frame: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(GotoFrame = exports.GotoFrame || (exports.GotoFrame = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZ290by1mcmFtZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxRTtBQUVyRSxnREFBMEM7QUFRMUMsSUFBaUIsU0FBUyxDQWF6QjtBQWJELFdBQWlCLFNBQVM7SUFNWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQVMsRUFBQyxDQUFDLEVBQUM7WUFDckYsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1NBQy9CO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBYXpCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvZ290by1mcmFtZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1VpbnQxNn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdvdG9GcmFtZSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuR290b0ZyYW1lO1xuICBmcmFtZTogVWludDE2O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdvdG9GcmFtZSB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcImdvdG8tZnJhbWVcIjtcbiAgICBmcmFtZTogbnVtYmVyO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxHb3RvRnJhbWU+ID0gbmV3IERvY3VtZW50VHlwZTxHb3RvRnJhbWU+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuR290b0ZyYW1lfSl9LFxuICAgICAgZnJhbWU6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var GotoFrame2;
(function (GotoFrame2) {
    GotoFrame2.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.GotoFrame2 }) },
            play: { type: new kryo_1.BooleanType() },
            sceneBias: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(GotoFrame2 = exports.GotoFrame2 || (exports.GotoFrame2 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZ290by1mcmFtZTIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBa0Y7QUFFbEYsZ0RBQTBDO0FBUzFDLElBQWlCLFVBQVUsQ0FlMUI7QUFmRCxXQUFpQixVQUFVO0lBT1osZUFBSSxHQUE2QixJQUFJLG1CQUFZLENBQWE7UUFDekUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxVQUFVLEVBQUMsQ0FBQyxFQUFDO1lBQ3RGLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUMvQixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7U0FDbkM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFmZ0IsVUFBVSxHQUFWLGtCQUFVLEtBQVYsa0JBQVUsUUFlMUIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9nb3RvLWZyYW1lMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Qm9vbGVhblR5cGUsIENhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50U2l6ZX0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdvdG9GcmFtZTIgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkdvdG9GcmFtZTI7XG4gIHBsYXk6IGJvb2xlYW47XG4gIHNjZW5lQmlhczogVWludFNpemU7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR290b0ZyYW1lMiB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcImdvdG8tZnJhbWUyXCI7XG4gICAgcGxheTogYm9vbGVhbjtcbiAgICBzY2VuZV9iaWFzOiBudW1iZXI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEdvdG9GcmFtZTI+ID0gbmV3IERvY3VtZW50VHlwZTxHb3RvRnJhbWUyPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkdvdG9GcmFtZTJ9KX0sXG4gICAgICBwbGF5OiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgc2NlbmVCaWFzOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var GotoLabel;
(function (GotoLabel) {
    GotoLabel.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.GotoLabel }) },
            label: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(GotoLabel = exports.GotoLabel || (exports.GotoLabel = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZ290by1sYWJlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRTtBQUMxRSxnREFBMEM7QUFRMUMsSUFBaUIsU0FBUyxDQWF6QjtBQWJELFdBQWlCLFNBQVM7SUFNWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQVMsRUFBQyxDQUFDLEVBQUM7WUFDckYsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQ3pEO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBYXpCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvZ290by1sYWJlbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlLCBVY3MyU3RyaW5nVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR290b0xhYmVsIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Hb3RvTGFiZWw7XG4gIGxhYmVsOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR290b0xhYmVsIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiZ290by1sYWJlbFwiO1xuICAgIGxhYmVsOiBzdHJpbmc7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEdvdG9MYWJlbD4gPSBuZXcgRG9jdW1lbnRUeXBlPEdvdG9MYWJlbD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5Hb3RvTGFiZWx9KX0sXG4gICAgICBsYWJlbDoge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Greater;
(function (Greater) {
    Greater.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Greater }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Greater = exports.Greater || (exports.Greater = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvZ3JlYXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsT0FBTyxDQVd2QjtBQVhELFdBQWlCLE9BQU87SUFLVCxZQUFJLEdBQTBCLElBQUksbUJBQVksQ0FBVTtRQUNuRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUM7U0FDcEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsT0FBTyxHQUFQLGVBQU8sS0FBUCxlQUFPLFFBV3ZCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvZ3JlYXRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHcmVhdGVyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5HcmVhdGVyO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdyZWF0ZXIge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJncmVhdGVyXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEdyZWF0ZXI+ID0gbmV3IERvY3VtZW50VHlwZTxHcmVhdGVyPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkdyZWF0ZXJ9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var If;
(function (If) {
    If.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.If }) },
            offset: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(If = exports.If || (exports.If = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvaWYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBcUU7QUFFckUsZ0RBQTBDO0FBUTFDLElBQWlCLEVBQUUsQ0FhbEI7QUFiRCxXQUFpQixFQUFFO0lBTUosT0FBSSxHQUFxQixJQUFJLG1CQUFZLENBQUs7UUFDekQsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxFQUFFLEVBQUMsQ0FBQyxFQUFDO1lBQzlFLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztTQUNoQztRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWJnQixFQUFFLEdBQUYsVUFBRSxLQUFGLFVBQUUsUUFhbEIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9pZi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1NpbnRTaXplfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSWYgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLklmO1xuICBvZmZzZXQ6IFNpbnRTaXplO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIElmIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiaWZcIjtcbiAgICBvZmZzZXQ6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8SWY+ID0gbmV3IERvY3VtZW50VHlwZTxJZj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5JZn0pfSxcbiAgICAgIG9mZnNldDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var ImplementsOp;
(function (ImplementsOp) {
    ImplementsOp.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.ImplementsOp }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ImplementsOp = exports.ImplementsOp || (exports.ImplementsOp = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvaW1wbGVtZW50cy1vcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsWUFBWSxDQVc1QjtBQVhELFdBQWlCLFlBQVk7SUFLZCxpQkFBSSxHQUErQixJQUFJLG1CQUFZLENBQWU7UUFDN0UsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxZQUFZLEVBQUMsQ0FBQyxFQUFDO1NBQ3pGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBVzVCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvaW1wbGVtZW50cy1vcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBJbXBsZW1lbnRzT3AgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkltcGxlbWVudHNPcDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBJbXBsZW1lbnRzT3Age1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJpbXBsZW1lbnRzLW9wXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEltcGxlbWVudHNPcD4gPSBuZXcgRG9jdW1lbnRUeXBlPEltcGxlbWVudHNPcD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5JbXBsZW1lbnRzT3B9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Increment;
(function (Increment) {
    Increment.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Increment }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Increment = exports.Increment || (exports.Increment = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvaW5jcmVtZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixTQUFTLENBV3pCO0FBWEQsV0FBaUIsU0FBUztJQUtYLGNBQUksR0FBNEIsSUFBSSxtQkFBWSxDQUFZO1FBQ3ZFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsU0FBUyxFQUFDLENBQUMsRUFBQztTQUN0RjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixTQUFTLEdBQVQsaUJBQVMsS0FBVCxpQkFBUyxRQVd6QiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL2luY3JlbWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBJbmNyZW1lbnQgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkluY3JlbWVudDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBJbmNyZW1lbnQge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJpbmNyZW1lbnRcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8SW5jcmVtZW50PiA9IG5ldyBEb2N1bWVudFR5cGU8SW5jcmVtZW50Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkluY3JlbWVudH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var InitArray;
(function (InitArray) {
    InitArray.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.InitArray }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(InitArray = exports.InitArray || (exports.InitArray = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvaW5pdC1hcnJheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsU0FBUyxDQVd6QjtBQVhELFdBQWlCLFNBQVM7SUFLWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQVMsRUFBQyxDQUFDLEVBQUM7U0FDdEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFXekIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9pbml0LWFycmF5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEluaXRBcnJheSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuSW5pdEFycmF5O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEluaXRBcnJheSB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcImluaXQtYXJyYXlcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8SW5pdEFycmF5PiA9IG5ldyBEb2N1bWVudFR5cGU8SW5pdEFycmF5Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkluaXRBcnJheX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var InitObject;
(function (InitObject) {
    InitObject.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.InitObject }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(InitObject = exports.InitObject || (exports.InitObject = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvaW5pdC1vYmplY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLFVBQVUsQ0FXMUI7QUFYRCxXQUFpQixVQUFVO0lBS1osZUFBSSxHQUE2QixJQUFJLG1CQUFZLENBQWE7UUFDekUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxVQUFVLEVBQUMsQ0FBQyxFQUFDO1NBQ3ZGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBVzFCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvaW5pdC1vYmplY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW5pdE9iamVjdCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuSW5pdE9iamVjdDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBJbml0T2JqZWN0IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiaW5pdC1vYmplY3RcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8SW5pdE9iamVjdD4gPSBuZXcgRG9jdW1lbnRUeXBlPEluaXRPYmplY3Q+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuSW5pdE9iamVjdH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var InstanceOf;
(function (InstanceOf) {
    InstanceOf.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.InstanceOf }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(InstanceOf = exports.InstanceOf || (exports.InstanceOf = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvaW5zdGFuY2Utb2YudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLFVBQVUsQ0FXMUI7QUFYRCxXQUFpQixVQUFVO0lBS1osZUFBSSxHQUE2QixJQUFJLG1CQUFZLENBQWE7UUFDekUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxVQUFVLEVBQUMsQ0FBQyxFQUFDO1NBQ3ZGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBVzFCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvaW5zdGFuY2Utb2YuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW5zdGFuY2VPZiBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuSW5zdGFuY2VPZjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBJbnN0YW5jZU9mIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwiaW5zdGFuY2Utb2ZcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8SW5zdGFuY2VPZj4gPSBuZXcgRG9jdW1lbnRUeXBlPEluc3RhbmNlT2Y+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuSW5zdGFuY2VPZn0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Jump;
(function (Jump) {
    Jump.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Jump }) },
            offset: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Jump = exports.Jump || (exports.Jump = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvanVtcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxRTtBQUVyRSxnREFBMEM7QUFRMUMsSUFBaUIsSUFBSSxDQWFwQjtBQWJELFdBQWlCLElBQUk7SUFNTixTQUFJLEdBQXVCLElBQUksbUJBQVksQ0FBTztRQUM3RCxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBQyxDQUFDLEVBQUM7WUFDaEYsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1NBQ2hDO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLElBQUksR0FBSixZQUFJLEtBQUosWUFBSSxRQWFwQiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL2p1bXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtTaW50U2l6ZX0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEp1bXAgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLkp1bXA7XG4gIG9mZnNldDogU2ludFNpemU7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgSnVtcCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcImp1bXBcIjtcbiAgICBvZmZzZXQ6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8SnVtcD4gPSBuZXcgRG9jdW1lbnRUeXBlPEp1bXA+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuSnVtcH0pfSxcbiAgICAgIG9mZnNldDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Less;
(function (Less) {
    Less.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Less }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Less = exports.Less || (exports.Less = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvbGVzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsSUFBSSxDQVdwQjtBQVhELFdBQWlCLElBQUk7SUFLTixTQUFJLEdBQXVCLElBQUksbUJBQVksQ0FBTztRQUM3RCxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBQyxDQUFDLEVBQUM7U0FDakY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsSUFBSSxHQUFKLFlBQUksS0FBSixZQUFJLFFBV3BCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvbGVzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBMZXNzIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5MZXNzO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIExlc3Mge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJsZXNzXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPExlc3M+ID0gbmV3IERvY3VtZW50VHlwZTxMZXNzPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLkxlc3N9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Less2;
(function (Less2) {
    Less2.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Less2 }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Less2 = exports.Less2 || (exports.Less2 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvbGVzczIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLEtBQUssQ0FXckI7QUFYRCxXQUFpQixLQUFLO0lBS1AsVUFBSSxHQUF3QixJQUFJLG1CQUFZLENBQVE7UUFDL0QsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxFQUFDO1NBQ2xGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLEtBQUssR0FBTCxhQUFLLEtBQUwsYUFBSyxRQVdyQiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL2xlc3MyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIExlc3MyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5MZXNzMjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBMZXNzMiB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcImxlc3MyXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPExlc3MyPiA9IG5ldyBEb2N1bWVudFR5cGU8TGVzczI+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuTGVzczJ9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var MbAsciiToChar;
(function (MbAsciiToChar) {
    MbAsciiToChar.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.MbAsciiToChar }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(MbAsciiToChar = exports.MbAsciiToChar || (exports.MbAsciiToChar = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvbWItYXNjaWktdG8tY2hhci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsYUFBYSxDQVc3QjtBQVhELFdBQWlCLGFBQWE7SUFLZixrQkFBSSxHQUFnQyxJQUFJLG1CQUFZLENBQWdCO1FBQy9FLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsYUFBYSxFQUFDLENBQUMsRUFBQztTQUMxRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixhQUFhLEdBQWIscUJBQWEsS0FBYixxQkFBYSxRQVc3QiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL21iLWFzY2lpLXRvLWNoYXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWJBc2NpaVRvQ2hhciBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuTWJBc2NpaVRvQ2hhcjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBNYkFzY2lpVG9DaGFyIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwibWItYXNjaWktdG8tY2hhclwiO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxNYkFzY2lpVG9DaGFyPiA9IG5ldyBEb2N1bWVudFR5cGU8TWJBc2NpaVRvQ2hhcj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5NYkFzY2lpVG9DaGFyfSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var MbCharToAscii;
(function (MbCharToAscii) {
    MbCharToAscii.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.MbCharToAscii }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(MbCharToAscii = exports.MbCharToAscii || (exports.MbCharToAscii = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvbWItY2hhci10by1hc2NpaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsYUFBYSxDQVc3QjtBQVhELFdBQWlCLGFBQWE7SUFLZixrQkFBSSxHQUFnQyxJQUFJLG1CQUFZLENBQWdCO1FBQy9FLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsYUFBYSxFQUFDLENBQUMsRUFBQztTQUMxRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixhQUFhLEdBQWIscUJBQWEsS0FBYixxQkFBYSxRQVc3QiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL21iLWNoYXItdG8tYXNjaWkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWJDaGFyVG9Bc2NpaSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuTWJDaGFyVG9Bc2NpaTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBNYkNoYXJUb0FzY2lpIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwibWItY2hhci10by1hc2NpaVwiO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxNYkNoYXJUb0FzY2lpPiA9IG5ldyBEb2N1bWVudFR5cGU8TWJDaGFyVG9Bc2NpaT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5NYkNoYXJUb0FzY2lpfSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var MbStringExtract;
(function (MbStringExtract) {
    MbStringExtract.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.MbStringExtract }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(MbStringExtract = exports.MbStringExtract || (exports.MbStringExtract = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvbWItc3RyaW5nLWV4dHJhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLGVBQWUsQ0FXL0I7QUFYRCxXQUFpQixlQUFlO0lBS2pCLG9CQUFJLEdBQWtDLElBQUksbUJBQVksQ0FBa0I7UUFDbkYsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxlQUFlLEVBQUMsQ0FBQyxFQUFDO1NBQzVGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLGVBQWUsR0FBZix1QkFBZSxLQUFmLHVCQUFlLFFBVy9CIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvbWItc3RyaW5nLWV4dHJhY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWJTdHJpbmdFeHRyYWN0IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5NYlN0cmluZ0V4dHJhY3Q7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgTWJTdHJpbmdFeHRyYWN0IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwibWItc3RyaW5nLWV4dHJhY3RcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8TWJTdHJpbmdFeHRyYWN0PiA9IG5ldyBEb2N1bWVudFR5cGU8TWJTdHJpbmdFeHRyYWN0Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLk1iU3RyaW5nRXh0cmFjdH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var MbStringLength;
(function (MbStringLength) {
    MbStringLength.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.MbStringLength }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(MbStringLength = exports.MbStringLength || (exports.MbStringLength = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvbWItc3RyaW5nLWxlbmd0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsY0FBYyxDQVc5QjtBQVhELFdBQWlCLGNBQWM7SUFLaEIsbUJBQUksR0FBaUMsSUFBSSxtQkFBWSxDQUFpQjtRQUNqRixVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLGNBQWMsRUFBQyxDQUFDLEVBQUM7U0FDM0Y7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsY0FBYyxHQUFkLHNCQUFjLEtBQWQsc0JBQWMsUUFXOUIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9tYi1zdHJpbmctbGVuZ3RoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1iU3RyaW5nTGVuZ3RoIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5NYlN0cmluZ0xlbmd0aDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBNYlN0cmluZ0xlbmd0aCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcIm1iLXN0cmluZy1sZW5ndGhcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8TWJTdHJpbmdMZW5ndGg+ID0gbmV3IERvY3VtZW50VHlwZTxNYlN0cmluZ0xlbmd0aD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5NYlN0cmluZ0xlbmd0aH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Modulo;
(function (Modulo) {
    Modulo.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Modulo }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Modulo = exports.Modulo || (exports.Modulo = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvbW9kdWxvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixNQUFNLENBV3RCO0FBWEQsV0FBaUIsTUFBTTtJQUtSLFdBQUksR0FBeUIsSUFBSSxtQkFBWSxDQUFTO1FBQ2pFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBQztTQUNuRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixNQUFNLEdBQU4sY0FBTSxLQUFOLGNBQU0sUUFXdEIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9tb2R1bG8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTW9kdWxvIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Nb2R1bG87XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgTW9kdWxvIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwibW9kdWxvXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPE1vZHVsbz4gPSBuZXcgRG9jdW1lbnRUeXBlPE1vZHVsbz4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5Nb2R1bG99KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Multiply;
(function (Multiply) {
    Multiply.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Multiply }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Multiply = exports.Multiply || (exports.Multiply = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvbXVsdGlwbHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLFFBQVEsQ0FXeEI7QUFYRCxXQUFpQixRQUFRO0lBS1YsYUFBSSxHQUEyQixJQUFJLG1CQUFZLENBQVc7UUFDckUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQ3JGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBV3hCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvbXVsdGlwbHkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTXVsdGlwbHkgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLk11bHRpcGx5O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIE11bHRpcGx5IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwibXVsdGlwbHlcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8TXVsdGlwbHk+ID0gbmV3IERvY3VtZW50VHlwZTxNdWx0aXBseT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5NdWx0aXBseX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var NewMethod;
(function (NewMethod) {
    NewMethod.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.NewMethod }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(NewMethod = exports.NewMethod || (exports.NewMethod = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvbmV3LW1ldGhvZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsU0FBUyxDQVd6QjtBQVhELFdBQWlCLFNBQVM7SUFLWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQVMsRUFBQyxDQUFDLEVBQUM7U0FDdEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFXekIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9uZXctbWV0aG9kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE5ld01ldGhvZCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuTmV3TWV0aG9kO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIE5ld01ldGhvZCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcIm5ldy1tZXRob2RcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8TmV3TWV0aG9kPiA9IG5ldyBEb2N1bWVudFR5cGU8TmV3TWV0aG9kPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLk5ld01ldGhvZH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var NewObject;
(function (NewObject) {
    NewObject.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.NewObject }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(NewObject = exports.NewObject || (exports.NewObject = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvbmV3LW9iamVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsU0FBUyxDQVd6QjtBQVhELFdBQWlCLFNBQVM7SUFLWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQVMsRUFBQyxDQUFDLEVBQUM7U0FDdEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFXekIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9uZXctb2JqZWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE5ld09iamVjdCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuTmV3T2JqZWN0O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIE5ld09iamVjdCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcIm5ldy1vYmplY3RcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8TmV3T2JqZWN0PiA9IG5ldyBEb2N1bWVudFR5cGU8TmV3T2JqZWN0Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLk5ld09iamVjdH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var NextFrame;
(function (NextFrame) {
    NextFrame.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.NextFrame }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(NextFrame = exports.NextFrame || (exports.NextFrame = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvbmV4dC1mcmFtZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsU0FBUyxDQVd6QjtBQVhELFdBQWlCLFNBQVM7SUFLWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQVMsRUFBQyxDQUFDLEVBQUM7U0FDdEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFXekIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9uZXh0LWZyYW1lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE5leHRGcmFtZSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuTmV4dEZyYW1lO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIE5leHRGcmFtZSB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcIm5leHQtZnJhbWVcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8TmV4dEZyYW1lPiA9IG5ldyBEb2N1bWVudFR5cGU8TmV4dEZyYW1lPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLk5leHRGcmFtZX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Not;
(function (Not) {
    Not.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Not }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Not = exports.Not || (exports.Not = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvbm90LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixHQUFHLENBV25CO0FBWEQsV0FBaUIsR0FBRztJQUtMLFFBQUksR0FBc0IsSUFBSSxtQkFBWSxDQUFNO1FBQzNELFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsR0FBRyxFQUFDLENBQUMsRUFBQztTQUNoRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixHQUFHLEdBQUgsV0FBRyxLQUFILFdBQUcsUUFXbkIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9ub3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTm90IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Ob3Q7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgTm90IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwibm90XCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPE5vdD4gPSBuZXcgRG9jdW1lbnRUeXBlPE5vdD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5Ob3R9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Or;
(function (Or) {
    Or.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Or }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Or = exports.Or || (exports.Or = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLEVBQUUsQ0FXbEI7QUFYRCxXQUFpQixFQUFFO0lBS0osT0FBSSxHQUFxQixJQUFJLG1CQUFZLENBQUs7UUFDekQsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxFQUFFLEVBQUMsQ0FBQyxFQUFDO1NBQy9FO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLEVBQUUsR0FBRixVQUFFLEtBQUYsVUFBRSxRQVdsQiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL29yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE9yIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Pcjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBPciB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcIm9yXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPE9yPiA9IG5ldyBEb2N1bWVudFR5cGU8T3I+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuT3J9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Play;
(function (Play) {
    Play.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Play }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Play = exports.Play || (exports.Play = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvcGxheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsSUFBSSxDQVdwQjtBQVhELFdBQWlCLElBQUk7SUFLTixTQUFJLEdBQXVCLElBQUksbUJBQVksQ0FBTztRQUM3RCxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBQyxDQUFDLEVBQUM7U0FDakY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsSUFBSSxHQUFKLFlBQUksS0FBSixZQUFJLFFBV3BCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvcGxheS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBQbGF5IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5QbGF5O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFBsYXkge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJwbGF5XCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFBsYXk+ID0gbmV3IERvY3VtZW50VHlwZTxQbGF5Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlBsYXl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Pop;
(function (Pop) {
    Pop.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Pop }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Pop = exports.Pop || (exports.Pop = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvcG9wLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixHQUFHLENBV25CO0FBWEQsV0FBaUIsR0FBRztJQUtMLFFBQUksR0FBc0IsSUFBSSxtQkFBWSxDQUFNO1FBQzNELFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsR0FBRyxFQUFDLENBQUMsRUFBQztTQUNoRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixHQUFHLEdBQUgsV0FBRyxLQUFILFdBQUcsUUFXbkIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9wb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUG9wIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Qb3A7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgUG9wIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwicG9wXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFBvcD4gPSBuZXcgRG9jdW1lbnRUeXBlPFBvcD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5Qb3B9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var PreviousFrame;
(function (PreviousFrame) {
    PreviousFrame.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.PreviousFrame }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(PreviousFrame = exports.PreviousFrame || (exports.PreviousFrame = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvcHJldmlvdXMtZnJhbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLGFBQWEsQ0FXN0I7QUFYRCxXQUFpQixhQUFhO0lBS2Ysa0JBQUksR0FBZ0MsSUFBSSxtQkFBWSxDQUFnQjtRQUMvRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLGFBQWEsRUFBQyxDQUFDLEVBQUM7U0FDMUY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFXN0IiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9wcmV2aW91cy1mcmFtZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBQcmV2aW91c0ZyYW1lIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5QcmV2aW91c0ZyYW1lO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFByZXZpb3VzRnJhbWUge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJwcmV2aW91cy1mcmFtZVwiO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxQcmV2aW91c0ZyYW1lPiA9IG5ldyBEb2N1bWVudFR5cGU8UHJldmlvdXNGcmFtZT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5QcmV2aW91c0ZyYW1lfSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
const value_1 = __webpack_require__(97);
var Push;
(function (Push) {
    Push.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Push }) },
            values: { type: new kryo_1.ArrayType({ itemType: value_1.Value.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Push = exports.Push || (exports.Push = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvcHVzaC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxRTtBQUNyRSxnREFBMEM7QUFDMUMsb0NBQStCO0FBUS9CLElBQWlCLElBQUksQ0FhcEI7QUFiRCxXQUFpQixJQUFJO0lBTU4sU0FBSSxHQUF1QixJQUFJLG1CQUFZLENBQU87UUFDN0QsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxFQUFDO1lBQ2hGLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsYUFBSyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUMzRTtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWJnQixJQUFJLEdBQUosWUFBSSxLQUFKLFlBQUksUUFhcEIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9wdXNoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcnJheVR5cGUsIENhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge1ZhbHVlfSBmcm9tIFwiLi4vdmFsdWVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBQdXNoIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5QdXNoO1xuICB2YWx1ZXM6IFZhbHVlW107XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgUHVzaCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcInB1c2hcIjtcbiAgICB2YWx1ZXM6IFZhbHVlLkpzb25bXTtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8UHVzaD4gPSBuZXcgRG9jdW1lbnRUeXBlPFB1c2g+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuUHVzaH0pfSxcbiAgICAgIHZhbHVlczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBWYWx1ZS50eXBlLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const value_type_1 = __webpack_require__(11);
var Boolean;
(function (Boolean) {
    Boolean.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: value_type_1.ValueType.type, value: value_type_1.ValueType.Boolean }) },
            value: { type: new kryo_1.BooleanType() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Boolean = exports.Boolean || (exports.Boolean = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL3ZhbHVlcy9ib29sZWFuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXVFO0FBQ3ZFLDhDQUF3QztBQU94QyxJQUFpQixPQUFPLENBYXZCO0FBYkQsV0FBaUIsT0FBTztJQU1ULFlBQUksR0FBMEIsSUFBSSxtQkFBWSxDQUFVO1FBQ25FLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsc0JBQVMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHNCQUFTLENBQUMsT0FBTyxFQUFDLENBQUMsRUFBQztZQUMvRSxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7U0FDakM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFiZ0IsT0FBTyxHQUFQLGVBQU8sS0FBUCxlQUFPLFFBYXZCIiwiZmlsZSI6ImxpYi9hdm0xL3ZhbHVlcy9ib29sZWFuLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtCb29sZWFuVHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtWYWx1ZVR5cGV9IGZyb20gXCIuLi92YWx1ZS10eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQm9vbGVhbiB7XG4gIHR5cGU6IFZhbHVlVHlwZS5Cb29sZWFuO1xuICB2YWx1ZTogYm9vbGVhbjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBCb29sZWFuIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcImJvb2xlYW5cIjtcbiAgICB2YWx1ZTogYm9vbGVhbjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8Qm9vbGVhbj4gPSBuZXcgRG9jdW1lbnRUeXBlPEJvb2xlYW4+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBWYWx1ZVR5cGUudHlwZSwgdmFsdWU6IFZhbHVlVHlwZS5Cb29sZWFufSl9LFxuICAgICAgdmFsdWU6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const value_type_1 = __webpack_require__(11);
var CString;
(function (CString) {
    CString.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: value_type_1.ValueType.type, value: value_type_1.ValueType.CString }) },
            value: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(CString = exports.CString || (exports.CString = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL3ZhbHVlcy9jLXN0cmluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRTtBQUMxRSw4Q0FBd0M7QUFPeEMsSUFBaUIsT0FBTyxDQWF2QjtBQWJELFdBQWlCLE9BQU87SUFNVCxZQUFJLEdBQTBCLElBQUksbUJBQVksQ0FBVTtRQUNuRSxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHNCQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxzQkFBUyxDQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUM7WUFDL0UsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQ3pEO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLE9BQU8sR0FBUCxlQUFPLEtBQVAsZUFBTyxRQWF2QiIsImZpbGUiOiJsaWIvYXZtMS92YWx1ZXMvYy1zdHJpbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZSwgVWNzMlN0cmluZ1R5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1ZhbHVlVHlwZX0gZnJvbSBcIi4uL3ZhbHVlLXR5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDU3RyaW5nIHtcbiAgdHlwZTogVmFsdWVUeXBlLkNTdHJpbmc7XG4gIHZhbHVlOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ1N0cmluZyB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJjLXN0cmluZ1wiO1xuICAgIHZhbHVlOiBzdHJpbmc7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPENTdHJpbmc+ID0gbmV3IERvY3VtZW50VHlwZTxDU3RyaW5nPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogVmFsdWVUeXBlLnR5cGUsIHZhbHVlOiBWYWx1ZVR5cGUuQ1N0cmluZ30pfSxcbiAgICAgIHZhbHVlOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const value_type_1 = __webpack_require__(11);
var Constant;
(function (Constant) {
    Constant.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: value_type_1.ValueType.type, value: value_type_1.ValueType.Constant }) },
            value: { type: new kryo_1.Float64Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Constant = exports.Constant || (exports.Constant = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL3ZhbHVlcy9jb25zdGFudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUF1RTtBQUV2RSw4Q0FBd0M7QUFPeEMsSUFBaUIsUUFBUSxDQWF4QjtBQWJELFdBQWlCLFFBQVE7SUFNVixhQUFJLEdBQTJCLElBQUksbUJBQVksQ0FBVztRQUNyRSxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHNCQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxzQkFBUyxDQUFDLFFBQVEsRUFBQyxDQUFDLEVBQUM7WUFDaEYsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1NBQ2pDO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBYXhCIiwiZmlsZSI6ImxpYi9hdm0xL3ZhbHVlcy9jb25zdGFudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEZsb2F0NjRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDE2fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7VmFsdWVUeXBlfSBmcm9tIFwiLi4vdmFsdWUtdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbnN0YW50IHtcbiAgdHlwZTogVmFsdWVUeXBlLkNvbnN0YW50O1xuICB2YWx1ZTogVWludDE2O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIENvbnN0YW50IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcImNvbnN0YW50XCI7XG4gICAgdmFsdWU6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8Q29uc3RhbnQ+ID0gbmV3IERvY3VtZW50VHlwZTxDb25zdGFudD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IFZhbHVlVHlwZS50eXBlLCB2YWx1ZTogVmFsdWVUeXBlLkNvbnN0YW50fSl9LFxuICAgICAgdmFsdWU6IHt0eXBlOiBuZXcgRmxvYXQ2NFR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const value_type_1 = __webpack_require__(11);
var Float32;
(function (Float32) {
    Float32.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: value_type_1.ValueType.type, value: value_type_1.ValueType.Float32 }) },
            value: { type: new kryo_1.Float64Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Float32 = exports.Float32 || (exports.Float32 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL3ZhbHVlcy9mbG9hdDMyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXVFO0FBRXZFLDhDQUF3QztBQU94QyxJQUFpQixPQUFPLENBYXZCO0FBYkQsV0FBaUIsT0FBTztJQU1ULFlBQUksR0FBMEIsSUFBSSxtQkFBWSxDQUFVO1FBQ25FLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsc0JBQVMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHNCQUFTLENBQUMsT0FBTyxFQUFDLENBQUMsRUFBQztZQUMvRSxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7U0FDakM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFiZ0IsT0FBTyxHQUFQLGVBQU8sS0FBUCxlQUFPLFFBYXZCIiwiZmlsZSI6ImxpYi9hdm0xL3ZhbHVlcy9mbG9hdDMyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgRmxvYXQ2NFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtGbG9hdDMyIGFzIEZsb2F0MzJQcmltaXRpdmV9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtWYWx1ZVR5cGV9IGZyb20gXCIuLi92YWx1ZS10eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRmxvYXQzMiB7XG4gIHR5cGU6IFZhbHVlVHlwZS5GbG9hdDMyO1xuICB2YWx1ZTogRmxvYXQzMlByaW1pdGl2ZTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBGbG9hdDMyIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcImZsb2F0MzJcIjtcbiAgICB2YWx1ZTogbnVtYmVyO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxGbG9hdDMyPiA9IG5ldyBEb2N1bWVudFR5cGU8RmxvYXQzMj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IFZhbHVlVHlwZS50eXBlLCB2YWx1ZTogVmFsdWVUeXBlLkZsb2F0MzJ9KX0sXG4gICAgICB2YWx1ZToge3R5cGU6IG5ldyBGbG9hdDY0VHlwZSgpfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const value_type_1 = __webpack_require__(11);
var Float64;
(function (Float64) {
    Float64.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: value_type_1.ValueType.type, value: value_type_1.ValueType.Float64 }) },
            value: { type: new kryo_1.Float64Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Float64 = exports.Float64 || (exports.Float64 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL3ZhbHVlcy9mbG9hdDY0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXVFO0FBRXZFLDhDQUF3QztBQU94QyxJQUFpQixPQUFPLENBYXZCO0FBYkQsV0FBaUIsT0FBTztJQU1ULFlBQUksR0FBMEIsSUFBSSxtQkFBWSxDQUFVO1FBQ25FLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsc0JBQVMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHNCQUFTLENBQUMsT0FBTyxFQUFDLENBQUMsRUFBQztZQUMvRSxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7U0FDakM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFiZ0IsT0FBTyxHQUFQLGVBQU8sS0FBUCxlQUFPLFFBYXZCIiwiZmlsZSI6ImxpYi9hdm0xL3ZhbHVlcy9mbG9hdDY0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgRmxvYXQ2NFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtGbG9hdDY0IGFzIEZsb2F0NjRQcmltaXRpdmV9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtWYWx1ZVR5cGV9IGZyb20gXCIuLi92YWx1ZS10eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRmxvYXQ2NCB7XG4gIHR5cGU6IFZhbHVlVHlwZS5GbG9hdDY0O1xuICB2YWx1ZTogRmxvYXQ2NFByaW1pdGl2ZTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBGbG9hdDY0IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcImZsb2F0NjRcIjtcbiAgICB2YWx1ZTogbnVtYmVyO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxGbG9hdDY0PiA9IG5ldyBEb2N1bWVudFR5cGU8RmxvYXQ2ND4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IFZhbHVlVHlwZS50eXBlLCB2YWx1ZTogVmFsdWVUeXBlLkZsb2F0NjR9KX0sXG4gICAgICB2YWx1ZToge3R5cGU6IG5ldyBGbG9hdDY0VHlwZSgpfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const value_type_1 = __webpack_require__(11);
var Int32;
(function (Int32) {
    Int32.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: value_type_1.ValueType.type, value: value_type_1.ValueType.Int32 }) },
            value: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Int32 = exports.Int32 || (exports.Int32 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL3ZhbHVlcy9pbnQzMi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxRTtBQUVyRSw4Q0FBd0M7QUFPeEMsSUFBaUIsS0FBSyxDQWFyQjtBQWJELFdBQWlCLEtBQUs7SUFNUCxVQUFJLEdBQXdCLElBQUksbUJBQVksQ0FBUTtRQUMvRCxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHNCQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxzQkFBUyxDQUFDLEtBQUssRUFBQyxDQUFDLEVBQUM7WUFDN0UsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1NBQy9CO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLEtBQUssR0FBTCxhQUFLLEtBQUwsYUFBSyxRQWFyQiIsImZpbGUiOiJsaWIvYXZtMS92YWx1ZXMvaW50MzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtTaW50MzIgYXMgSW50MzJQcmltaXRpdmV9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtWYWx1ZVR5cGV9IGZyb20gXCIuLi92YWx1ZS10eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW50MzIge1xuICB0eXBlOiBWYWx1ZVR5cGUuSW50MzI7XG4gIHZhbHVlOiBJbnQzMlByaW1pdGl2ZTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBJbnQzMiB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJpbnQzMlwiO1xuICAgIHZhbHVlOiBudW1iZXI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEludDMyPiA9IG5ldyBEb2N1bWVudFR5cGU8SW50MzI+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBWYWx1ZVR5cGUudHlwZSwgdmFsdWU6IFZhbHVlVHlwZS5JbnQzMn0pfSxcbiAgICAgIHZhbHVlOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const value_type_1 = __webpack_require__(11);
var Null;
(function (Null) {
    Null.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: value_type_1.ValueType.type, value: value_type_1.ValueType.Null }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Null = exports.Null || (exports.Null = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL3ZhbHVlcy9udWxsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELDhDQUF3QztBQU14QyxJQUFpQixJQUFJLENBV3BCO0FBWEQsV0FBaUIsSUFBSTtJQUtOLFNBQUksR0FBdUIsSUFBSSxtQkFBWSxDQUFPO1FBQzdELFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsc0JBQVMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHNCQUFTLENBQUMsSUFBSSxFQUFDLENBQUMsRUFBQztTQUM3RTtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixJQUFJLEdBQUosWUFBSSxLQUFKLFlBQUksUUFXcEIiLCJmaWxlIjoibGliL2F2bTEvdmFsdWVzL251bGwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VmFsdWVUeXBlfSBmcm9tIFwiLi4vdmFsdWUtdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE51bGwge1xuICB0eXBlOiBWYWx1ZVR5cGUuTnVsbDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBOdWxsIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcIm51bGxcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8TnVsbD4gPSBuZXcgRG9jdW1lbnRUeXBlPE51bGw+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBWYWx1ZVR5cGUudHlwZSwgdmFsdWU6IFZhbHVlVHlwZS5OdWxsfSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const value_type_1 = __webpack_require__(11);
var Register;
(function (Register) {
    Register.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: value_type_1.ValueType.type, value: value_type_1.ValueType.Register }) },
            value: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Register = exports.Register || (exports.Register = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL3ZhbHVlcy9yZWdpc3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxRTtBQUVyRSw4Q0FBd0M7QUFPeEMsSUFBaUIsUUFBUSxDQWF4QjtBQWJELFdBQWlCLFFBQVE7SUFNVixhQUFJLEdBQTJCLElBQUksbUJBQVksQ0FBVztRQUNyRSxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHNCQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxzQkFBUyxDQUFDLFFBQVEsRUFBQyxDQUFDLEVBQUM7WUFDaEYsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1NBQy9CO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBYXhCIiwiZmlsZSI6ImxpYi9hdm0xL3ZhbHVlcy9yZWdpc3Rlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1VpbnQ4fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7VmFsdWVUeXBlfSBmcm9tIFwiLi4vdmFsdWUtdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlZ2lzdGVyIHtcbiAgdHlwZTogVmFsdWVUeXBlLlJlZ2lzdGVyO1xuICB2YWx1ZTogVWludDg7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgUmVnaXN0ZXIge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwicmVnaXN0ZXJcIjtcbiAgICB2YWx1ZTogbnVtYmVyO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxSZWdpc3Rlcj4gPSBuZXcgRG9jdW1lbnRUeXBlPFJlZ2lzdGVyPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogVmFsdWVUeXBlLnR5cGUsIHZhbHVlOiBWYWx1ZVR5cGUuUmVnaXN0ZXJ9KX0sXG4gICAgICB2YWx1ZToge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const value_type_1 = __webpack_require__(11);
var Undefined;
(function (Undefined) {
    Undefined.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: value_type_1.ValueType.type, value: value_type_1.ValueType.Undefined }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Undefined = exports.Undefined || (exports.Undefined = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL3ZhbHVlcy91bmRlZmluZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsOENBQXdDO0FBTXhDLElBQWlCLFNBQVMsQ0FXekI7QUFYRCxXQUFpQixTQUFTO0lBS1gsY0FBSSxHQUE0QixJQUFJLG1CQUFZLENBQVk7UUFDdkUsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxzQkFBUyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsc0JBQVMsQ0FBQyxTQUFTLEVBQUMsQ0FBQyxFQUFDO1NBQ2xGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBV3pCIiwiZmlsZSI6ImxpYi9hdm0xL3ZhbHVlcy91bmRlZmluZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VmFsdWVUeXBlfSBmcm9tIFwiLi4vdmFsdWUtdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFVuZGVmaW5lZCB7XG4gIHR5cGU6IFZhbHVlVHlwZS5VbmRlZmluZWQ7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVW5kZWZpbmVkIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcInVuZGVmaW5lZFwiO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxVbmRlZmluZWQ+ID0gbmV3IERvY3VtZW50VHlwZTxVbmRlZmluZWQ+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBWYWx1ZVR5cGUudHlwZSwgdmFsdWU6IFZhbHVlVHlwZS5VbmRlZmluZWR9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var PushDuplicate;
(function (PushDuplicate) {
    PushDuplicate.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.PushDuplicate }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(PushDuplicate = exports.PushDuplicate || (exports.PushDuplicate = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvcHVzaC1kdXBsaWNhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLGFBQWEsQ0FXN0I7QUFYRCxXQUFpQixhQUFhO0lBS2Ysa0JBQUksR0FBZ0MsSUFBSSxtQkFBWSxDQUFnQjtRQUMvRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLGFBQWEsRUFBQyxDQUFDLEVBQUM7U0FDMUY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFXN0IiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9wdXNoLWR1cGxpY2F0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBQdXNoRHVwbGljYXRlIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5QdXNoRHVwbGljYXRlO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFB1c2hEdXBsaWNhdGUge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJwdXNoLWR1cGxpY2F0ZVwiO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxQdXNoRHVwbGljYXRlPiA9IG5ldyBEb2N1bWVudFR5cGU8UHVzaER1cGxpY2F0ZT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5QdXNoRHVwbGljYXRlfSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var RandomNumber;
(function (RandomNumber) {
    RandomNumber.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.RandomNumber }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(RandomNumber = exports.RandomNumber || (exports.RandomNumber = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvcmFuZG9tLW51bWJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsWUFBWSxDQVc1QjtBQVhELFdBQWlCLFlBQVk7SUFLZCxpQkFBSSxHQUErQixJQUFJLG1CQUFZLENBQWU7UUFDN0UsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxZQUFZLEVBQUMsQ0FBQyxFQUFDO1NBQ3pGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBVzVCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvcmFuZG9tLW51bWJlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBSYW5kb21OdW1iZXIgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLlJhbmRvbU51bWJlcjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBSYW5kb21OdW1iZXIge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJyYW5kb20tbnVtYmVyXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFJhbmRvbU51bWJlcj4gPSBuZXcgRG9jdW1lbnRUeXBlPFJhbmRvbU51bWJlcj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5SYW5kb21OdW1iZXJ9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var RemoveSprite;
(function (RemoveSprite) {
    RemoveSprite.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.RemoveSprite }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(RemoveSprite = exports.RemoveSprite || (exports.RemoveSprite = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvcmVtb3ZlLXNwcml0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsWUFBWSxDQVc1QjtBQVhELFdBQWlCLFlBQVk7SUFLZCxpQkFBSSxHQUErQixJQUFJLG1CQUFZLENBQWU7UUFDN0UsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxZQUFZLEVBQUMsQ0FBQyxFQUFDO1NBQ3pGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBVzVCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvcmVtb3ZlLXNwcml0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBSZW1vdmVTcHJpdGUgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLlJlbW92ZVNwcml0ZTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBSZW1vdmVTcHJpdGUge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJyZW1vdmUtc3ByaXRlXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFJlbW92ZVNwcml0ZT4gPSBuZXcgRG9jdW1lbnRUeXBlPFJlbW92ZVNwcml0ZT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5SZW1vdmVTcHJpdGV9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Return;
(function (Return) {
    Return.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Return }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Return = exports.Return || (exports.Return = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvcmV0dXJuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixNQUFNLENBV3RCO0FBWEQsV0FBaUIsTUFBTTtJQUtSLFdBQUksR0FBeUIsSUFBSSxtQkFBWSxDQUFTO1FBQ2pFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBQztTQUNuRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixNQUFNLEdBQU4sY0FBTSxLQUFOLGNBQU0sUUFXdEIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9yZXR1cm4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmV0dXJuIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5SZXR1cm47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgUmV0dXJuIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwicmV0dXJuXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFJldHVybj4gPSBuZXcgRG9jdW1lbnRUeXBlPFJldHVybj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5SZXR1cm59KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var SetMember;
(function (SetMember) {
    SetMember.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.SetMember }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(SetMember = exports.SetMember || (exports.SetMember = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc2V0LW1lbWJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsU0FBUyxDQVd6QjtBQVhELFdBQWlCLFNBQVM7SUFLWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQVMsRUFBQyxDQUFDLEVBQUM7U0FDdEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFXekIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9zZXQtbWVtYmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNldE1lbWJlciBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuU2V0TWVtYmVyO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFNldE1lbWJlciB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcInNldC1tZW1iZXJcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8U2V0TWVtYmVyPiA9IG5ldyBEb2N1bWVudFR5cGU8U2V0TWVtYmVyPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlNldE1lbWJlcn0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var SetProperty;
(function (SetProperty) {
    SetProperty.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.SetProperty }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(SetProperty = exports.SetProperty || (exports.SetProperty = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc2V0LXByb3BlcnR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixXQUFXLENBVzNCO0FBWEQsV0FBaUIsV0FBVztJQUtiLGdCQUFJLEdBQThCLElBQUksbUJBQVksQ0FBYztRQUMzRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFdBQVcsRUFBQyxDQUFDLEVBQUM7U0FDeEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFXM0IiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9zZXQtcHJvcGVydHkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2V0UHJvcGVydHkgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLlNldFByb3BlcnR5O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFNldFByb3BlcnR5IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwic2V0LXByb3BlcnR5XCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFNldFByb3BlcnR5PiA9IG5ldyBEb2N1bWVudFR5cGU8U2V0UHJvcGVydHk+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuU2V0UHJvcGVydHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var SetTarget;
(function (SetTarget) {
    SetTarget.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.SetTarget }) },
            targetName: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(SetTarget = exports.SetTarget || (exports.SetTarget = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc2V0LXRhcmdldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRTtBQUMxRSxnREFBMEM7QUFRMUMsSUFBaUIsU0FBUyxDQWF6QjtBQWJELFdBQWlCLFNBQVM7SUFNWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQVMsRUFBQyxDQUFDLEVBQUM7WUFDckYsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQzlEO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBYXpCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvc2V0LXRhcmdldC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlLCBVY3MyU3RyaW5nVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2V0VGFyZ2V0IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TZXRUYXJnZXQ7XG4gIHRhcmdldE5hbWU6IHN0cmluZztcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTZXRUYXJnZXQge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJzZXQtdGFyZ2V0XCI7XG4gICAgdGFyZ2V0X25hbWU6IHN0cmluZztcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8U2V0VGFyZ2V0PiA9IG5ldyBEb2N1bWVudFR5cGU8U2V0VGFyZ2V0Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlNldFRhcmdldH0pfSxcbiAgICAgIHRhcmdldE5hbWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var SetTarget2;
(function (SetTarget2) {
    SetTarget2.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.SetTarget2 }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(SetTarget2 = exports.SetTarget2 || (exports.SetTarget2 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc2V0LXRhcmdldDIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLFVBQVUsQ0FXMUI7QUFYRCxXQUFpQixVQUFVO0lBS1osZUFBSSxHQUE2QixJQUFJLG1CQUFZLENBQWE7UUFDekUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxVQUFVLEVBQUMsQ0FBQyxFQUFDO1NBQ3ZGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBVzFCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvc2V0LXRhcmdldDIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2V0VGFyZ2V0MiBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuU2V0VGFyZ2V0Mjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTZXRUYXJnZXQyIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwic2V0LXRhcmdldDJcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8U2V0VGFyZ2V0Mj4gPSBuZXcgRG9jdW1lbnRUeXBlPFNldFRhcmdldDI+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuU2V0VGFyZ2V0Mn0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var SetVariable;
(function (SetVariable) {
    SetVariable.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.SetVariable }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(SetVariable = exports.SetVariable || (exports.SetVariable = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc2V0LXZhcmlhYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixXQUFXLENBVzNCO0FBWEQsV0FBaUIsV0FBVztJQUtiLGdCQUFJLEdBQThCLElBQUksbUJBQVksQ0FBYztRQUMzRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFdBQVcsRUFBQyxDQUFDLEVBQUM7U0FDeEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFXM0IiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9zZXQtdmFyaWFibGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2V0VmFyaWFibGUgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLlNldFZhcmlhYmxlO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFNldFZhcmlhYmxlIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwic2V0LXZhcmlhYmxlXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFNldFZhcmlhYmxlPiA9IG5ldyBEb2N1bWVudFR5cGU8U2V0VmFyaWFibGU+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuU2V0VmFyaWFibGV9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var StackSwap;
(function (StackSwap) {
    StackSwap.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.StackSwap }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StackSwap = exports.StackSwap || (exports.StackSwap = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc3RhY2stc3dhcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsU0FBUyxDQVd6QjtBQVhELFdBQWlCLFNBQVM7SUFLWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQVMsRUFBQyxDQUFDLEVBQUM7U0FDdEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFXekIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9zdGFjay1zd2FwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0YWNrU3dhcCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuU3RhY2tTd2FwO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFN0YWNrU3dhcCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcInN0YWNrLXN3YXBcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8U3RhY2tTd2FwPiA9IG5ldyBEb2N1bWVudFR5cGU8U3RhY2tTd2FwPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlN0YWNrU3dhcH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var StartDrag;
(function (StartDrag) {
    StartDrag.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.StartDrag }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StartDrag = exports.StartDrag || (exports.StartDrag = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc3RhcnQtZHJhZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsU0FBUyxDQVd6QjtBQVhELFdBQWlCLFNBQVM7SUFLWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQVMsRUFBQyxDQUFDLEVBQUM7U0FDdEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFXekIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9zdGFydC1kcmFnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0YXJ0RHJhZyBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuU3RhcnREcmFnO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFN0YXJ0RHJhZyB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcInN0YXJ0LWRyYWdcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8U3RhcnREcmFnPiA9IG5ldyBEb2N1bWVudFR5cGU8U3RhcnREcmFnPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlN0YXJ0RHJhZ30pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Stop;
(function (Stop) {
    Stop.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Stop }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Stop = exports.Stop || (exports.Stop = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc3RvcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsSUFBSSxDQVdwQjtBQVhELFdBQWlCLElBQUk7SUFLTixTQUFJLEdBQXVCLElBQUksbUJBQVksQ0FBTztRQUM3RCxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBQyxDQUFDLEVBQUM7U0FDakY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsSUFBSSxHQUFKLFlBQUksS0FBSixZQUFJLFFBV3BCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvc3RvcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdG9wIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TdG9wO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFN0b3Age1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJzdG9wXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFN0b3A+ID0gbmV3IERvY3VtZW50VHlwZTxTdG9wPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlN0b3B9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var StopSounds;
(function (StopSounds) {
    StopSounds.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.StopSounds }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StopSounds = exports.StopSounds || (exports.StopSounds = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc3RvcC1zb3VuZHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLFVBQVUsQ0FXMUI7QUFYRCxXQUFpQixVQUFVO0lBS1osZUFBSSxHQUE2QixJQUFJLG1CQUFZLENBQWE7UUFDekUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxVQUFVLEVBQUMsQ0FBQyxFQUFDO1NBQ3ZGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBVzFCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvc3RvcC1zb3VuZHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RvcFNvdW5kcyBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuU3RvcFNvdW5kcztcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTdG9wU291bmRzIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwic3RvcC1zb3VuZHNcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8U3RvcFNvdW5kcz4gPSBuZXcgRG9jdW1lbnRUeXBlPFN0b3BTb3VuZHM+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuU3RvcFNvdW5kc30pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var StoreRegister;
(function (StoreRegister) {
    StoreRegister.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.StoreRegister }) },
            registerNumber: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StoreRegister = exports.StoreRegister || (exports.StoreRegister = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc3RvcmUtcmVnaXN0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBcUU7QUFFckUsZ0RBQTBDO0FBUTFDLElBQWlCLGFBQWEsQ0FhN0I7QUFiRCxXQUFpQixhQUFhO0lBTWYsa0JBQUksR0FBZ0MsSUFBSSxtQkFBWSxDQUFnQjtRQUMvRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLGFBQWEsRUFBQyxDQUFDLEVBQUM7WUFDekYsY0FBYyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1NBQ3hDO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLGFBQWEsR0FBYixxQkFBYSxLQUFiLHFCQUFhLFFBYTdCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvc3RvcmUtcmVnaXN0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50OH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0b3JlUmVnaXN0ZXIgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLlN0b3JlUmVnaXN0ZXI7XG4gIHJlZ2lzdGVyTnVtYmVyOiBVaW50ODtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTdG9yZVJlZ2lzdGVyIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwic3RvcmUtcmVnaXN0ZXJcIjtcbiAgICByZWdpc3Rlcl9udW1iZXI6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8U3RvcmVSZWdpc3Rlcj4gPSBuZXcgRG9jdW1lbnRUeXBlPFN0b3JlUmVnaXN0ZXI+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuU3RvcmVSZWdpc3Rlcn0pfSxcbiAgICAgIHJlZ2lzdGVyTnVtYmVyOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var StrictEquals;
(function (StrictEquals) {
    StrictEquals.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.StrictEquals }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StrictEquals = exports.StrictEquals || (exports.StrictEquals = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc3RyaWN0LWVxdWFscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsWUFBWSxDQVc1QjtBQVhELFdBQWlCLFlBQVk7SUFLZCxpQkFBSSxHQUErQixJQUFJLG1CQUFZLENBQWU7UUFDN0UsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxZQUFZLEVBQUMsQ0FBQyxFQUFDO1NBQ3pGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBVzVCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvc3RyaWN0LWVxdWFscy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdHJpY3RFcXVhbHMgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLlN0cmljdEVxdWFscztcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTdHJpY3RFcXVhbHMge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJzdHJpY3QtZXF1YWxzXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFN0cmljdEVxdWFscz4gPSBuZXcgRG9jdW1lbnRUeXBlPFN0cmljdEVxdWFscz4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5TdHJpY3RFcXVhbHN9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var StrictMode;
(function (StrictMode) {
    StrictMode.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.StrictMode }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StrictMode = exports.StrictMode || (exports.StrictMode = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc3RyaWN0LW1vZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLFVBQVUsQ0FXMUI7QUFYRCxXQUFpQixVQUFVO0lBS1osZUFBSSxHQUE2QixJQUFJLG1CQUFZLENBQWE7UUFDekUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxVQUFVLEVBQUMsQ0FBQyxFQUFDO1NBQ3ZGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBVzFCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvc3RyaWN0LW1vZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RyaWN0TW9kZSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuU3RyaWN0TW9kZTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTdHJpY3RNb2RlIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwic3RyaWN0LW1vZGVcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8U3RyaWN0TW9kZT4gPSBuZXcgRG9jdW1lbnRUeXBlPFN0cmljdE1vZGU+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuU3RyaWN0TW9kZX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var StringAdd;
(function (StringAdd) {
    StringAdd.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.StringAdd }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StringAdd = exports.StringAdd || (exports.StringAdd = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc3RyaW5nLWFkZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsU0FBUyxDQVd6QjtBQVhELFdBQWlCLFNBQVM7SUFLWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQVMsRUFBQyxDQUFDLEVBQUM7U0FDdEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFXekIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9zdHJpbmctYWRkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0cmluZ0FkZCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuU3RyaW5nQWRkO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFN0cmluZ0FkZCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcInN0cmluZy1hZGRcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8U3RyaW5nQWRkPiA9IG5ldyBEb2N1bWVudFR5cGU8U3RyaW5nQWRkPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlN0cmluZ0FkZH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var StringEquals;
(function (StringEquals) {
    StringEquals.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.StringEquals }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StringEquals = exports.StringEquals || (exports.StringEquals = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc3RyaW5nLWVxdWFscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsWUFBWSxDQVc1QjtBQVhELFdBQWlCLFlBQVk7SUFLZCxpQkFBSSxHQUErQixJQUFJLG1CQUFZLENBQWU7UUFDN0UsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxZQUFZLEVBQUMsQ0FBQyxFQUFDO1NBQ3pGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBVzVCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvc3RyaW5nLWVxdWFscy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdHJpbmdFcXVhbHMgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLlN0cmluZ0VxdWFscztcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTdHJpbmdFcXVhbHMge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJzdHJpbmctZXF1YWxzXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFN0cmluZ0VxdWFscz4gPSBuZXcgRG9jdW1lbnRUeXBlPFN0cmluZ0VxdWFscz4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5TdHJpbmdFcXVhbHN9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var StringExtract;
(function (StringExtract) {
    StringExtract.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.StringExtract }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StringExtract = exports.StringExtract || (exports.StringExtract = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc3RyaW5nLWV4dHJhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLGFBQWEsQ0FXN0I7QUFYRCxXQUFpQixhQUFhO0lBS2Ysa0JBQUksR0FBZ0MsSUFBSSxtQkFBWSxDQUFnQjtRQUMvRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLGFBQWEsRUFBQyxDQUFDLEVBQUM7U0FDMUY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFXN0IiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9zdHJpbmctZXh0cmFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdHJpbmdFeHRyYWN0IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TdHJpbmdFeHRyYWN0O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFN0cmluZ0V4dHJhY3Qge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJzdHJpbmctZXh0cmFjdFwiO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxTdHJpbmdFeHRyYWN0PiA9IG5ldyBEb2N1bWVudFR5cGU8U3RyaW5nRXh0cmFjdD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5TdHJpbmdFeHRyYWN0fSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var StringGreater;
(function (StringGreater) {
    StringGreater.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.StringGreater }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StringGreater = exports.StringGreater || (exports.StringGreater = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc3RyaW5nLWdyZWF0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLGFBQWEsQ0FXN0I7QUFYRCxXQUFpQixhQUFhO0lBS2Ysa0JBQUksR0FBZ0MsSUFBSSxtQkFBWSxDQUFnQjtRQUMvRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLGFBQWEsRUFBQyxDQUFDLEVBQUM7U0FDMUY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFXN0IiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy9zdHJpbmctZ3JlYXRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdHJpbmdHcmVhdGVyIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5TdHJpbmdHcmVhdGVyO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFN0cmluZ0dyZWF0ZXIge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJzdHJpbmctZ3JlYXRlclwiO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxTdHJpbmdHcmVhdGVyPiA9IG5ldyBEb2N1bWVudFR5cGU8U3RyaW5nR3JlYXRlcj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5TdHJpbmdHcmVhdGVyfSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var StringLength;
(function (StringLength) {
    StringLength.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.StringLength }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StringLength = exports.StringLength || (exports.StringLength = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc3RyaW5nLWxlbmd0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsWUFBWSxDQVc1QjtBQVhELFdBQWlCLFlBQVk7SUFLZCxpQkFBSSxHQUErQixJQUFJLG1CQUFZLENBQWU7UUFDN0UsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxZQUFZLEVBQUMsQ0FBQyxFQUFDO1NBQ3pGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBVzVCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvc3RyaW5nLWxlbmd0aC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdHJpbmdMZW5ndGggZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLlN0cmluZ0xlbmd0aDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTdHJpbmdMZW5ndGgge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJzdHJpbmctbGVuZ3RoXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFN0cmluZ0xlbmd0aD4gPSBuZXcgRG9jdW1lbnRUeXBlPFN0cmluZ0xlbmd0aD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5TdHJpbmdMZW5ndGh9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var StringLess;
(function (StringLess) {
    StringLess.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.StringLess }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(StringLess = exports.StringLess || (exports.StringLess = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc3RyaW5nLWxlc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLFVBQVUsQ0FXMUI7QUFYRCxXQUFpQixVQUFVO0lBS1osZUFBSSxHQUE2QixJQUFJLG1CQUFZLENBQWE7UUFDekUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxVQUFVLEVBQUMsQ0FBQyxFQUFDO1NBQ3ZGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBVzFCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvc3RyaW5nLWxlc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RyaW5nTGVzcyBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuU3RyaW5nTGVzcztcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTdHJpbmdMZXNzIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwic3RyaW5nLWxlc3NcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8U3RyaW5nTGVzcz4gPSBuZXcgRG9jdW1lbnRUeXBlPFN0cmluZ0xlc3M+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuU3RyaW5nTGVzc30pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Subtract;
(function (Subtract) {
    Subtract.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Subtract }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Subtract = exports.Subtract || (exports.Subtract = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvc3VidHJhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLFFBQVEsQ0FXeEI7QUFYRCxXQUFpQixRQUFRO0lBS1YsYUFBSSxHQUEyQixJQUFJLG1CQUFZLENBQVc7UUFDckUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQ3JGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBV3hCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvc3VidHJhY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3VidHJhY3QgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLlN1YnRyYWN0O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFN1YnRyYWN0IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwic3VidHJhY3RcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8U3VidHJhY3Q+ID0gbmV3IERvY3VtZW50VHlwZTxTdWJ0cmFjdD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5TdWJ0cmFjdH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var TargetPath;
(function (TargetPath) {
    TargetPath.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.TargetPath }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(TargetPath = exports.TargetPath || (exports.TargetPath = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvdGFyZ2V0LXBhdGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLFVBQVUsQ0FXMUI7QUFYRCxXQUFpQixVQUFVO0lBS1osZUFBSSxHQUE2QixJQUFJLG1CQUFZLENBQWE7UUFDekUsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxVQUFVLEVBQUMsQ0FBQyxFQUFDO1NBQ3ZGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBVzFCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvdGFyZ2V0LXBhdGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGFyZ2V0UGF0aCBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuVGFyZ2V0UGF0aDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBUYXJnZXRQYXRoIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwidGFyZ2V0LXBhdGhcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8VGFyZ2V0UGF0aD4gPSBuZXcgRG9jdW1lbnRUeXBlPFRhcmdldFBhdGg+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuVGFyZ2V0UGF0aH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Throw;
(function (Throw) {
    Throw.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Throw }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Throw = exports.Throw || (exports.Throw = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvdGhyb3cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLEtBQUssQ0FXckI7QUFYRCxXQUFpQixLQUFLO0lBS1AsVUFBSSxHQUF3QixJQUFJLG1CQUFZLENBQVE7UUFDL0QsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxFQUFDO1NBQ2xGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLEtBQUssR0FBTCxhQUFLLEtBQUwsYUFBSyxRQVdyQiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL3Rocm93LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRocm93IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5UaHJvdztcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBUaHJvdyB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcInRocm93XCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFRocm93PiA9IG5ldyBEb2N1bWVudFR5cGU8VGhyb3c+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuVGhyb3d9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var ToggleQuality;
(function (ToggleQuality) {
    ToggleQuality.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.ToggleQuality }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ToggleQuality = exports.ToggleQuality || (exports.ToggleQuality = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvdG9nZ2xlLXF1YWxpdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLGFBQWEsQ0FXN0I7QUFYRCxXQUFpQixhQUFhO0lBS2Ysa0JBQUksR0FBZ0MsSUFBSSxtQkFBWSxDQUFnQjtRQUMvRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLGFBQWEsRUFBQyxDQUFDLEVBQUM7U0FDMUY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFXN0IiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy90b2dnbGUtcXVhbGl0eS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBUb2dnbGVRdWFsaXR5IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Ub2dnbGVRdWFsaXR5O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFRvZ2dsZVF1YWxpdHkge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJ0b2dnbGUtcXVhbGl0eVwiO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxUb2dnbGVRdWFsaXR5PiA9IG5ldyBEb2N1bWVudFR5cGU8VG9nZ2xlUXVhbGl0eT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5Ub2dnbGVRdWFsaXR5fSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var ToInteger;
(function (ToInteger) {
    ToInteger.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.ToInteger }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ToInteger = exports.ToInteger || (exports.ToInteger = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvdG8taW50ZWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsU0FBUyxDQVd6QjtBQVhELFdBQWlCLFNBQVM7SUFLWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLFNBQVMsRUFBQyxDQUFDLEVBQUM7U0FDdEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFXekIiLCJmaWxlIjoibGliL2F2bTEvYWN0aW9ucy90by1pbnRlZ2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRvSW50ZWdlciBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuVG9JbnRlZ2VyO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFRvSW50ZWdlciB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcInRvLWludGVnZXJcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8VG9JbnRlZ2VyPiA9IG5ldyBEb2N1bWVudFR5cGU8VG9JbnRlZ2VyPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLlRvSW50ZWdlcn0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var ToNumber;
(function (ToNumber) {
    ToNumber.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.ToNumber }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ToNumber = exports.ToNumber || (exports.ToNumber = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvdG8tbnVtYmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixRQUFRLENBV3hCO0FBWEQsV0FBaUIsUUFBUTtJQUtWLGFBQUksR0FBMkIsSUFBSSxtQkFBWSxDQUFXO1FBQ3JFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsUUFBUSxFQUFDLENBQUMsRUFBQztTQUNyRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQVd4QiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL3RvLW51bWJlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBUb051bWJlciBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuVG9OdW1iZXI7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVG9OdW1iZXIge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJ0by1udW1iZXJcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8VG9OdW1iZXI+ID0gbmV3IERvY3VtZW50VHlwZTxUb051bWJlcj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5Ub051bWJlcn0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var ToString;
(function (ToString) {
    ToString.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.ToString }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ToString = exports.ToString || (exports.ToString = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvdG8tc3RyaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELGdEQUEwQztBQU8xQyxJQUFpQixRQUFRLENBV3hCO0FBWEQsV0FBaUIsUUFBUTtJQUtWLGFBQUksR0FBMkIsSUFBSSxtQkFBWSxDQUFXO1FBQ3JFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsUUFBUSxFQUFDLENBQUMsRUFBQztTQUNyRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQVd4QiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL3RvLXN0cmluZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBUb1N0cmluZyBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuVG9TdHJpbmc7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVG9TdHJpbmcge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJ0by1zdHJpbmdcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8VG9TdHJpbmc+ID0gbmV3IERvY3VtZW50VHlwZTxUb1N0cmluZz4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5Ub1N0cmluZ30pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Trace;
(function (Trace) {
    Trace.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Trace }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Trace = exports.Trace || (exports.Trace = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvdHJhY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsZ0RBQTBDO0FBTzFDLElBQWlCLEtBQUssQ0FXckI7QUFYRCxXQUFpQixLQUFLO0lBS1AsVUFBSSxHQUF3QixJQUFJLG1CQUFZLENBQVE7UUFDL0QsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxFQUFDO1NBQ2xGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBWGdCLEtBQUssR0FBTCxhQUFLLEtBQUwsYUFBSyxRQVdyQiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL3RyYWNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRyYWNlIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5UcmFjZTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBUcmFjZSB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgYWN0aW9uOiBcInRyYWNlXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFRyYWNlPiA9IG5ldyBEb2N1bWVudFR5cGU8VHJhY2U+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuVHJhY2V9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _circular_references_1 = __webpack_require__(14);
const action_type_1 = __webpack_require__(1);
const catch_target_1 = __webpack_require__(99);
var Try;
(function (Try) {
    Try.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Try }) },
            // TODO(demurgos): solve circular dependency
            try: { type: new kryo_1.ArrayType({ itemType: _circular_references_1.Action.type, maxLength: Infinity }) },
            // TODO(demurgos): solve circular dependency
            catch: { type: new kryo_1.ArrayType({ itemType: _circular_references_1.Action.type, maxLength: Infinity }), optional: true },
            catchTarget: { type: catch_target_1.CatchTarget.type, optional: true },
            // TODO(demurgos): solve circular dependency
            finally: { type: new kryo_1.ArrayType({ itemType: _circular_references_1.Action.type, maxLength: Infinity }), optional: true },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Try = exports.Try || (exports.Try = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvdHJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXFFO0FBQ3JFLHFFQUE2RDtBQUU3RCxnREFBMEM7QUFDMUMsa0RBQTRDO0FBVzVDLElBQWlCLEdBQUcsQ0FzQm5CO0FBdEJELFdBQWlCLEdBQUc7SUFTTCxRQUFJLEdBQXNCLElBQUksbUJBQVksQ0FBTTtRQUMzRCxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLEdBQUcsRUFBQyxDQUFDLEVBQUM7WUFDL0UsNENBQTRDO1lBQzVDLEdBQUcsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsNkJBQU8sQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7WUFDekUsNENBQTRDO1lBQzVDLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsNkJBQU8sQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztZQUMzRixXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUsMEJBQVcsQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztZQUNyRCw0Q0FBNEM7WUFDNUMsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSw2QkFBTyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1NBQzlGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBdEJnQixHQUFHLEdBQUgsV0FBRyxLQUFILFdBQUcsUUFzQm5CIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvdHJ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcnJheVR5cGUsIENhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7QWN0aW9uIGFzICRBY3Rpb259IGZyb20gXCIuLi8uLi9fY2lyY3VsYXItcmVmZXJlbmNlc1wiO1xuaW1wb3J0IHtBY3Rpb259IGZyb20gXCIuLi9hY3Rpb25cIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0NhdGNoVGFyZ2V0fSBmcm9tIFwiLi4vY2F0Y2gtdGFyZ2V0XCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHJ5IGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5Ucnk7XG4gIHRyeTogQWN0aW9uW107XG4gIGNhdGNoPzogQWN0aW9uW107XG4gIGNhdGNoVGFyZ2V0PzogQ2F0Y2hUYXJnZXQ7XG4gIGZpbmFsbHk/OiBBY3Rpb25bXTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBUcnkge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJ0cnlcIjtcbiAgICB0cnk6IEFjdGlvbi5Kc29uW107XG4gICAgY2F0Y2g/OiBBY3Rpb24uSnNvbltdO1xuICAgIGNhdGNoX3RhcmdldD86IENhdGNoVGFyZ2V0Lkpzb247XG4gICAgZmluYWxseT86IEFjdGlvbi5Kc29uW107XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFRyeT4gPSBuZXcgRG9jdW1lbnRUeXBlPFRyeT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5Ucnl9KX0sXG4gICAgICAvLyBUT0RPKGRlbXVyZ29zKTogc29sdmUgY2lyY3VsYXIgZGVwZW5kZW5jeVxuICAgICAgdHJ5OiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6ICRBY3Rpb24udHlwZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICAgIC8vIFRPRE8oZGVtdXJnb3MpOiBzb2x2ZSBjaXJjdWxhciBkZXBlbmRlbmN5XG4gICAgICBjYXRjaDoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkQWN0aW9uLnR5cGUsIG1heExlbmd0aDogSW5maW5pdHl9KSwgb3B0aW9uYWw6IHRydWV9LFxuICAgICAgY2F0Y2hUYXJnZXQ6IHt0eXBlOiBDYXRjaFRhcmdldC50eXBlLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgICAvLyBUT0RPKGRlbXVyZ29zKTogc29sdmUgY2lyY3VsYXIgZGVwZW5kZW5jeVxuICAgICAgZmluYWxseToge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkQWN0aW9uLnR5cGUsIG1heExlbmd0aDogSW5maW5pdHl9KSwgb3B0aW9uYWw6IHRydWV9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(57);
var Register;
(function (Register) {
    Register.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.CatchTargetType.type, value: _type_1.CatchTargetType.Register }) },
            register: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Register = exports.Register || (exports.Register = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2NhdGNoLXRhcmdldHMvcmVnaXN0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBcUU7QUFFckUsbUNBQXdDO0FBT3hDLElBQWlCLFFBQVEsQ0FheEI7QUFiRCxXQUFpQixRQUFRO0lBTVYsYUFBSSxHQUEyQixJQUFJLG1CQUFZLENBQVc7UUFDckUsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx1QkFBZSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsdUJBQWUsQ0FBQyxRQUFRLEVBQUMsQ0FBQyxFQUFDO1lBQzVGLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztTQUNsQztRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWJnQixRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQWF4QiIsImZpbGUiOiJsaWIvYXZtMS9jYXRjaC10YXJnZXRzL3JlZ2lzdGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgSW50MzJUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDh9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtDYXRjaFRhcmdldFR5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVnaXN0ZXIge1xuICB0eXBlOiBDYXRjaFRhcmdldFR5cGUuUmVnaXN0ZXI7XG4gIHJlZ2lzdGVyOiBVaW50ODtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBSZWdpc3RlciB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJyZWdpc3RlclwiO1xuICAgIHJlZ2lzdGVyOiBudW1iZXI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFJlZ2lzdGVyPiA9IG5ldyBEb2N1bWVudFR5cGU8UmVnaXN0ZXI+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBDYXRjaFRhcmdldFR5cGUudHlwZSwgdmFsdWU6IENhdGNoVGFyZ2V0VHlwZS5SZWdpc3Rlcn0pfSxcbiAgICAgIHJlZ2lzdGVyOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(57);
var Variable;
(function (Variable) {
    Variable.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.CatchTargetType.type, value: _type_1.CatchTargetType.Variable }) },
            variable: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Variable = exports.Variable || (exports.Variable = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2NhdGNoLXRhcmdldHMvdmFyaWFibGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEU7QUFDMUUsbUNBQXdDO0FBT3hDLElBQWlCLFFBQVEsQ0FheEI7QUFiRCxXQUFpQixRQUFRO0lBTVYsYUFBSSxHQUEyQixJQUFJLG1CQUFZLENBQVc7UUFDckUsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx1QkFBZSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsdUJBQWUsQ0FBQyxRQUFRLEVBQUMsQ0FBQyxFQUFDO1lBQzVGLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUM1RDtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWJnQixRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQWF4QiIsImZpbGUiOiJsaWIvYXZtMS9jYXRjaC10YXJnZXRzL3ZhcmlhYmxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGUsIFVjczJTdHJpbmdUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtDYXRjaFRhcmdldFR5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVmFyaWFibGUge1xuICB0eXBlOiBDYXRjaFRhcmdldFR5cGUuVmFyaWFibGU7XG4gIHZhcmlhYmxlOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVmFyaWFibGUge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwidmFyaWFibGVcIjtcbiAgICB2YXJpYWJsZTogc3RyaW5nO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxWYXJpYWJsZT4gPSBuZXcgRG9jdW1lbnRUeXBlPFZhcmlhYmxlPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQ2F0Y2hUYXJnZXRUeXBlLnR5cGUsIHZhbHVlOiBDYXRjaFRhcmdldFR5cGUuVmFyaWFibGV9KX0sXG4gICAgICB2YXJpYWJsZToge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var TypeOf;
(function (TypeOf) {
    TypeOf.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.TypeOf }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(TypeOf = exports.TypeOf || (exports.TypeOf = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvdHlwZS1vZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxnREFBMEM7QUFPMUMsSUFBaUIsTUFBTSxDQVd0QjtBQVhELFdBQWlCLE1BQU07SUFLUixXQUFJLEdBQXlCLElBQUksbUJBQVksQ0FBUztRQUNqRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUM7U0FDbkY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsTUFBTSxHQUFOLGNBQU0sS0FBTixjQUFNLFFBV3RCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvdHlwZS1vZi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBUeXBlT2YgZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLlR5cGVPZjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBUeXBlT2Yge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJ0eXBlLW9mXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFR5cGVPZj4gPSBuZXcgRG9jdW1lbnRUeXBlPFR5cGVPZj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5UeXBlT2Z9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var Unknown;
(function (Unknown) {
    Unknown.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.Unknown }) },
            actionCode: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Unknown = exports.Unknown || (exports.Unknown = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvdW5rbm93bi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxRTtBQUVyRSxnREFBMEM7QUFRMUMsSUFBaUIsT0FBTyxDQWF2QjtBQWJELFdBQWlCLE9BQU87SUFNVCxZQUFJLEdBQTBCLElBQUksbUJBQVksQ0FBVTtRQUNuRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSx3QkFBVSxDQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUM7WUFDbkYsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1NBQ3BDO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLE9BQU8sR0FBUCxlQUFPLEtBQVAsZUFBTyxRQWF2QiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL3Vua25vd24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50OH0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFVua25vd24gZXh0ZW5kcyBBY3Rpb25CYXNlIHtcbiAgYWN0aW9uOiBBY3Rpb25UeXBlLlVua25vd247XG4gIGFjdGlvbkNvZGU6IFVpbnQ4O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFVua25vd24ge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGFjdGlvbjogXCJ1bmtub3duXCI7XG4gICAgYWN0aW9uX2NvZGU6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8VW5rbm93bj4gPSBuZXcgRG9jdW1lbnRUeXBlPFVua25vd24+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBhY3Rpb246IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEFjdGlvblR5cGUudHlwZSwgdmFsdWU6IEFjdGlvblR5cGUuVW5rbm93bn0pfSxcbiAgICAgIGFjdGlvbkNvZGU6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var WaitForFrame;
(function (WaitForFrame) {
    WaitForFrame.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.WaitForFrame }) },
            frame: { type: new kryo_1.Int32Type() },
            skipCount: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(WaitForFrame = exports.WaitForFrame || (exports.WaitForFrame = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvd2FpdC1mb3ItZnJhbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBcUU7QUFFckUsZ0RBQTBDO0FBUzFDLElBQWlCLFlBQVksQ0FlNUI7QUFmRCxXQUFpQixZQUFZO0lBT2QsaUJBQUksR0FBK0IsSUFBSSxtQkFBWSxDQUFlO1FBQzdFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLHdCQUFVLENBQUMsWUFBWSxFQUFDLENBQUMsRUFBQztZQUN4RixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDOUIsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1NBQ25DO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBZmdCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBZTVCIiwiZmlsZSI6ImxpYi9hdm0xL2FjdGlvbnMvd2FpdC1mb3ItZnJhbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50U2l6ZX0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0FjdGlvblR5cGV9IGZyb20gXCIuLi9hY3Rpb24tdHlwZVwiO1xuaW1wb3J0IHtBY3Rpb25CYXNlfSBmcm9tIFwiLi9fYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFdhaXRGb3JGcmFtZSBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuV2FpdEZvckZyYW1lO1xuICBmcmFtZTogVWludFNpemU7XG4gIHNraXBDb3VudDogVWludFNpemU7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgV2FpdEZvckZyYW1lIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwid2FpdC1mb3ItZnJhbWVcIjtcbiAgICBmcmFtZTogbnVtYmVyO1xuICAgIHNraXBfY291bnQ6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8V2FpdEZvckZyYW1lPiA9IG5ldyBEb2N1bWVudFR5cGU8V2FpdEZvckZyYW1lPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLldhaXRGb3JGcmFtZX0pfSxcbiAgICAgIGZyYW1lOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIHNraXBDb3VudDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const action_type_1 = __webpack_require__(1);
var WaitForFrame2;
(function (WaitForFrame2) {
    WaitForFrame2.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.WaitForFrame2 }) },
            skipCount: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(WaitForFrame2 = exports.WaitForFrame2 || (exports.WaitForFrame2 = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvd2FpdC1mb3ItZnJhbWUyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXFFO0FBRXJFLGdEQUEwQztBQVExQyxJQUFpQixhQUFhLENBYTdCO0FBYkQsV0FBaUIsYUFBYTtJQU1mLGtCQUFJLEdBQWdDLElBQUksbUJBQVksQ0FBZ0I7UUFDL0UsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxhQUFhLEVBQUMsQ0FBQyxFQUFDO1lBQ3pGLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztTQUNuQztRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWJnQixhQUFhLEdBQWIscUJBQWEsS0FBYixxQkFBYSxRQWE3QiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL3dhaXQtZm9yLWZyYW1lMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1VpbnRTaXplfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7QWN0aW9uVHlwZX0gZnJvbSBcIi4uL2FjdGlvbi10eXBlXCI7XG5pbXBvcnQge0FjdGlvbkJhc2V9IGZyb20gXCIuL19iYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgV2FpdEZvckZyYW1lMiBleHRlbmRzIEFjdGlvbkJhc2Uge1xuICBhY3Rpb246IEFjdGlvblR5cGUuV2FpdEZvckZyYW1lMjtcbiAgc2tpcENvdW50OiBVaW50U2l6ZTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBXYWl0Rm9yRnJhbWUyIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwid2FpdC1mb3ItZnJhbWUyXCI7XG4gICAgc2tpcF9jb3VudDogbnVtYmVyO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxXYWl0Rm9yRnJhbWUyPiA9IG5ldyBEb2N1bWVudFR5cGU8V2FpdEZvckZyYW1lMj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGFjdGlvbjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogQWN0aW9uVHlwZS50eXBlLCB2YWx1ZTogQWN0aW9uVHlwZS5XYWl0Rm9yRnJhbWUyfSl9LFxuICAgICAgc2tpcENvdW50OiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _circular_references_1 = __webpack_require__(14);
const action_type_1 = __webpack_require__(1);
var With;
(function (With) {
    With.type = new kryo_1.DocumentType({
        properties: {
            action: { type: new kryo_1.LiteralType({ type: action_type_1.ActionType.type, value: action_type_1.ActionType.With }) },
            // TODO(demurgos): solve circular dependency
            with: { type: new kryo_1.ArrayType({ itemType: _circular_references_1.Action.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(With = exports.With || (exports.With = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hdm0xL2FjdGlvbnMvd2l0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxRTtBQUNyRSxxRUFBNkQ7QUFFN0QsZ0RBQTBDO0FBUTFDLElBQWlCLElBQUksQ0FjcEI7QUFkRCxXQUFpQixJQUFJO0lBTU4sU0FBSSxHQUF1QixJQUFJLG1CQUFZLENBQU87UUFDN0QsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxFQUFDO1lBQ2hGLDRDQUE0QztZQUM1QyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLDZCQUFPLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQzNFO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBZGdCLElBQUksR0FBSixZQUFJLEtBQUosWUFBSSxRQWNwQiIsImZpbGUiOiJsaWIvYXZtMS9hY3Rpb25zL3dpdGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FycmF5VHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtBY3Rpb24gYXMgJEFjdGlvbn0gZnJvbSBcIi4uLy4uL19jaXJjdWxhci1yZWZlcmVuY2VzXCI7XG5pbXBvcnQge0FjdGlvbn0gZnJvbSBcIi4uL2FjdGlvblwiO1xuaW1wb3J0IHtBY3Rpb25UeXBlfSBmcm9tIFwiLi4vYWN0aW9uLXR5cGVcIjtcbmltcG9ydCB7QWN0aW9uQmFzZX0gZnJvbSBcIi4vX2Jhc2VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBXaXRoIGV4dGVuZHMgQWN0aW9uQmFzZSB7XG4gIGFjdGlvbjogQWN0aW9uVHlwZS5XaXRoO1xuICB3aXRoOiBBY3Rpb25bXTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBXaXRoIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICBhY3Rpb246IFwid2l0aFwiO1xuICAgIHdpdGg6IEFjdGlvbi5Kc29uW107XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFdpdGg+ID0gbmV3IERvY3VtZW50VHlwZTxXaXRoPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgYWN0aW9uOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBBY3Rpb25UeXBlLnR5cGUsIHZhbHVlOiBBY3Rpb25UeXBlLldpdGh9KX0sXG4gICAgICAvLyBUT0RPKGRlbXVyZ29zKTogc29sdmUgY2lyY3VsYXIgZGVwZW5kZW5jeVxuICAgICAgd2l0aDoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkQWN0aW9uLnR5cGUsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const straight_s_rgba8_1 = __webpack_require__(5);
const _type_1 = __webpack_require__(17);
var Bitmap;
(function (Bitmap) {
    Bitmap.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.FillStyleType.type, value: _type_1.FillStyleType.Bitmap }) },
            bitmapId: { type: new kryo_1.Int32Type() },
            matrix: { type: straight_s_rgba8_1.StraightSRgba8.type },
            repeating: { type: new kryo_1.BooleanType() },
            smoothed: { type: new kryo_1.BooleanType() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Bitmap = exports.Bitmap || (exports.Bitmap = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWxsLXN0eWxlcy9iaXRtYXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBa0Y7QUFHbEYsMERBQW1EO0FBQ25ELG1DQUFzQztBQVV0QyxJQUFpQixNQUFNLENBbUJ0QjtBQW5CRCxXQUFpQixNQUFNO0lBU1IsV0FBSSxHQUF5QixJQUFJLG1CQUFZLENBQVM7UUFDakUsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxxQkFBYSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUscUJBQWEsQ0FBQyxNQUFNLEVBQUMsQ0FBQyxFQUFDO1lBQ3RGLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztZQUNqQyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsaUNBQWMsQ0FBQyxJQUFJLEVBQUM7WUFDbkMsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ3BDLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztTQUNwQztRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQW5CZ0IsTUFBTSxHQUFOLGNBQU0sS0FBTixjQUFNLFFBbUJ0QiIsImZpbGUiOiJsaWIvZmlsbC1zdHlsZXMvYml0bWFwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtCb29sZWFuVHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1VpbnQxNn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge01hdHJpeH0gZnJvbSBcIi4uL21hdHJpeFwiO1xuaW1wb3J0IHtTdHJhaWdodFNSZ2JhOH0gZnJvbSBcIi4uL3N0cmFpZ2h0LXMtcmdiYThcIjtcbmltcG9ydCB7RmlsbFN0eWxlVHlwZX0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBCaXRtYXAge1xuICB0eXBlOiBGaWxsU3R5bGVUeXBlLkJpdG1hcDtcbiAgYml0bWFwSWQ6IFVpbnQxNjtcbiAgbWF0cml4OiBNYXRyaXg7XG4gIHJlcGVhdGluZzogYm9vbGVhbjtcbiAgc21vb3RoZWQ6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQml0bWFwIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcImJpdG1hcFwiO1xuICAgIGJpdG1hcF9pZDogbnVtYmVyO1xuICAgIG1hdHJpeDogTWF0cml4Lkpzb247XG4gICAgcmVwZWF0aW5nOiBib29sZWFuO1xuICAgIHNtb290aGVkOiBib29sZWFuO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxCaXRtYXA+ID0gbmV3IERvY3VtZW50VHlwZTxCaXRtYXA+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBGaWxsU3R5bGVUeXBlLnR5cGUsIHZhbHVlOiBGaWxsU3R5bGVUeXBlLkJpdG1hcH0pfSxcbiAgICAgIGJpdG1hcElkOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIG1hdHJpeDoge3R5cGU6IFN0cmFpZ2h0U1JnYmE4LnR5cGV9LFxuICAgICAgcmVwZWF0aW5nOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgc21vb3RoZWQ6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const fixed8p8_1 = __webpack_require__(15);
const gradient_1 = __webpack_require__(38);
const straight_s_rgba8_1 = __webpack_require__(5);
const _type_1 = __webpack_require__(17);
var FocalGradient;
(function (FocalGradient) {
    FocalGradient.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.FillStyleType.type, value: _type_1.FillStyleType.FocalGradient }) },
            matrix: { type: straight_s_rgba8_1.StraightSRgba8.type },
            gradient: { type: gradient_1.Gradient.type },
            focalPoint: { type: fixed8p8_1.Fixed8P8.type },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(FocalGradient = exports.FocalGradient || (exports.FocalGradient = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWxsLXN0eWxlcy9mb2NhbC1ncmFkaWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxzREFBaUQ7QUFDakQsMENBQXFDO0FBRXJDLDBEQUFtRDtBQUNuRCxtQ0FBc0M7QUFTdEMsSUFBaUIsYUFBYSxDQWlCN0I7QUFqQkQsV0FBaUIsYUFBYTtJQVFmLGtCQUFJLEdBQWdDLElBQUksbUJBQVksQ0FBZ0I7UUFDL0UsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxxQkFBYSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUscUJBQWEsQ0FBQyxhQUFhLEVBQUMsQ0FBQyxFQUFDO1lBQzdGLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxpQ0FBYyxDQUFDLElBQUksRUFBQztZQUNuQyxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsbUJBQVEsQ0FBQyxJQUFJLEVBQUM7WUFDL0IsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLG1CQUFRLENBQUMsSUFBSSxFQUFDO1NBQ2xDO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBakJnQixhQUFhLEdBQWIscUJBQWEsS0FBYixxQkFBYSxRQWlCN0IiLCJmaWxlIjoibGliL2ZpbGwtc3R5bGVzL2ZvY2FsLWdyYWRpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0ZpeGVkOFA4fSBmcm9tIFwiLi4vZml4ZWQtcG9pbnQvZml4ZWQ4cDhcIjtcbmltcG9ydCB7R3JhZGllbnR9IGZyb20gXCIuLi9ncmFkaWVudFwiO1xuaW1wb3J0IHtNYXRyaXh9IGZyb20gXCIuLi9tYXRyaXhcIjtcbmltcG9ydCB7U3RyYWlnaHRTUmdiYTh9IGZyb20gXCIuLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5pbXBvcnQge0ZpbGxTdHlsZVR5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9jYWxHcmFkaWVudCB7XG4gIHR5cGU6IEZpbGxTdHlsZVR5cGUuRm9jYWxHcmFkaWVudDtcbiAgbWF0cml4OiBNYXRyaXg7XG4gIGdyYWRpZW50OiBHcmFkaWVudDtcbiAgZm9jYWxQb2ludDogRml4ZWQ4UDg7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRm9jYWxHcmFkaWVudCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJmb2NhbC1ncmFkaWVudFwiO1xuICAgIG1hdHJpeDogTWF0cml4Lkpzb247XG4gICAgZ3JhZGllbnQ6IEdyYWRpZW50Lkpzb247XG4gICAgZm9jYWxfcG9pbnQ6IHN0cmluZztcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8Rm9jYWxHcmFkaWVudD4gPSBuZXcgRG9jdW1lbnRUeXBlPEZvY2FsR3JhZGllbnQ+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBGaWxsU3R5bGVUeXBlLnR5cGUsIHZhbHVlOiBGaWxsU3R5bGVUeXBlLkZvY2FsR3JhZGllbnR9KX0sXG4gICAgICBtYXRyaXg6IHt0eXBlOiBTdHJhaWdodFNSZ2JhOC50eXBlfSxcbiAgICAgIGdyYWRpZW50OiB7dHlwZTogR3JhZGllbnQudHlwZX0sXG4gICAgICBmb2NhbFBvaW50OiB7dHlwZTogRml4ZWQ4UDgudHlwZX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const gradient_1 = __webpack_require__(38);
const straight_s_rgba8_1 = __webpack_require__(5);
const _type_1 = __webpack_require__(17);
var LinearGradient;
(function (LinearGradient) {
    LinearGradient.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.FillStyleType.type, value: _type_1.FillStyleType.LinearGradient }) },
            matrix: { type: straight_s_rgba8_1.StraightSRgba8.type },
            gradient: { type: gradient_1.Gradient.type },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(LinearGradient = exports.LinearGradient || (exports.LinearGradient = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWxsLXN0eWxlcy9saW5lYXItZ3JhZGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsMENBQXFDO0FBRXJDLDBEQUFtRDtBQUNuRCxtQ0FBc0M7QUFRdEMsSUFBaUIsY0FBYyxDQWU5QjtBQWZELFdBQWlCLGNBQWM7SUFPaEIsbUJBQUksR0FBaUMsSUFBSSxtQkFBWSxDQUFpQjtRQUNqRixVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHFCQUFhLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxxQkFBYSxDQUFDLGNBQWMsRUFBQyxDQUFDLEVBQUM7WUFDOUYsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGlDQUFjLENBQUMsSUFBSSxFQUFDO1lBQ25DLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxtQkFBUSxDQUFDLElBQUksRUFBQztTQUNoQztRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWZnQixjQUFjLEdBQWQsc0JBQWMsS0FBZCxzQkFBYyxRQWU5QiIsImZpbGUiOiJsaWIvZmlsbC1zdHlsZXMvbGluZWFyLWdyYWRpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0dyYWRpZW50fSBmcm9tIFwiLi4vZ3JhZGllbnRcIjtcbmltcG9ydCB7TWF0cml4fSBmcm9tIFwiLi4vbWF0cml4XCI7XG5pbXBvcnQge1N0cmFpZ2h0U1JnYmE4fSBmcm9tIFwiLi4vc3RyYWlnaHQtcy1yZ2JhOFwiO1xuaW1wb3J0IHtGaWxsU3R5bGVUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIExpbmVhckdyYWRpZW50IHtcbiAgdHlwZTogRmlsbFN0eWxlVHlwZS5MaW5lYXJHcmFkaWVudDtcbiAgbWF0cml4OiBNYXRyaXg7XG4gIGdyYWRpZW50OiBHcmFkaWVudDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBMaW5lYXJHcmFkaWVudCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJsaW5lYXItZ3JhZGllbnRcIjtcbiAgICBtYXRyaXg6IE1hdHJpeC5Kc29uO1xuICAgIGdyYWRpZW50OiBHcmFkaWVudC5Kc29uO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxMaW5lYXJHcmFkaWVudD4gPSBuZXcgRG9jdW1lbnRUeXBlPExpbmVhckdyYWRpZW50Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogRmlsbFN0eWxlVHlwZS50eXBlLCB2YWx1ZTogRmlsbFN0eWxlVHlwZS5MaW5lYXJHcmFkaWVudH0pfSxcbiAgICAgIG1hdHJpeDoge3R5cGU6IFN0cmFpZ2h0U1JnYmE4LnR5cGV9LFxuICAgICAgZ3JhZGllbnQ6IHt0eXBlOiBHcmFkaWVudC50eXBlfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const gradient_1 = __webpack_require__(38);
const straight_s_rgba8_1 = __webpack_require__(5);
const _type_1 = __webpack_require__(17);
var RadialGradient;
(function (RadialGradient) {
    RadialGradient.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.FillStyleType.type, value: _type_1.FillStyleType.RadialGradient }) },
            matrix: { type: straight_s_rgba8_1.StraightSRgba8.type },
            gradient: { type: gradient_1.Gradient.type },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(RadialGradient = exports.RadialGradient || (exports.RadialGradient = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWxsLXN0eWxlcy9yYWRpYWwtZ3JhZGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFDMUQsMENBQXFDO0FBRXJDLDBEQUFtRDtBQUNuRCxtQ0FBc0M7QUFRdEMsSUFBaUIsY0FBYyxDQWU5QjtBQWZELFdBQWlCLGNBQWM7SUFPaEIsbUJBQUksR0FBaUMsSUFBSSxtQkFBWSxDQUFpQjtRQUNqRixVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHFCQUFhLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxxQkFBYSxDQUFDLGNBQWMsRUFBQyxDQUFDLEVBQUM7WUFDOUYsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGlDQUFjLENBQUMsSUFBSSxFQUFDO1lBQ25DLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxtQkFBUSxDQUFDLElBQUksRUFBQztTQUNoQztRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWZnQixjQUFjLEdBQWQsc0JBQWMsS0FBZCxzQkFBYyxRQWU5QiIsImZpbGUiOiJsaWIvZmlsbC1zdHlsZXMvcmFkaWFsLWdyYWRpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0dyYWRpZW50fSBmcm9tIFwiLi4vZ3JhZGllbnRcIjtcbmltcG9ydCB7TWF0cml4fSBmcm9tIFwiLi4vbWF0cml4XCI7XG5pbXBvcnQge1N0cmFpZ2h0U1JnYmE4fSBmcm9tIFwiLi4vc3RyYWlnaHQtcy1yZ2JhOFwiO1xuaW1wb3J0IHtGaWxsU3R5bGVUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJhZGlhbEdyYWRpZW50IHtcbiAgdHlwZTogRmlsbFN0eWxlVHlwZS5SYWRpYWxHcmFkaWVudDtcbiAgbWF0cml4OiBNYXRyaXg7XG4gIGdyYWRpZW50OiBHcmFkaWVudDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBSYWRpYWxHcmFkaWVudCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJyYWRpYWwtZ3JhZGllbnRcIjtcbiAgICBtYXRyaXg6IE1hdHJpeC5Kc29uO1xuICAgIGdyYWRpZW50OiBHcmFkaWVudC5Kc29uO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxSYWRpYWxHcmFkaWVudD4gPSBuZXcgRG9jdW1lbnRUeXBlPFJhZGlhbEdyYWRpZW50Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogRmlsbFN0eWxlVHlwZS50eXBlLCB2YWx1ZTogRmlsbFN0eWxlVHlwZS5SYWRpYWxHcmFkaWVudH0pfSxcbiAgICAgIG1hdHJpeDoge3R5cGU6IFN0cmFpZ2h0U1JnYmE4LnR5cGV9LFxuICAgICAgZ3JhZGllbnQ6IHt0eXBlOiBHcmFkaWVudC50eXBlfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const straight_s_rgba8_1 = __webpack_require__(5);
const _type_1 = __webpack_require__(17);
var Solid;
(function (Solid) {
    Solid.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.FillStyleType.type, value: _type_1.FillStyleType.Solid }) },
            color: { type: straight_s_rgba8_1.StraightSRgba8.type },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Solid = exports.Solid || (exports.Solid = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWxsLXN0eWxlcy9zb2xpZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCwwREFBbUQ7QUFDbkQsbUNBQXNDO0FBT3RDLElBQWlCLEtBQUssQ0FhckI7QUFiRCxXQUFpQixLQUFLO0lBTVAsVUFBSSxHQUF3QixJQUFJLG1CQUFZLENBQVE7UUFDL0QsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxxQkFBYSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUscUJBQWEsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxFQUFDO1lBQ3JGLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxpQ0FBYyxDQUFDLElBQUksRUFBQztTQUNuQztRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWJnQixLQUFLLEdBQUwsYUFBSyxLQUFMLGFBQUssUUFhckIiLCJmaWxlIjoibGliL2ZpbGwtc3R5bGVzL3NvbGlkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1N0cmFpZ2h0U1JnYmE4fSBmcm9tIFwiLi4vc3RyYWlnaHQtcy1yZ2JhOFwiO1xuaW1wb3J0IHtGaWxsU3R5bGVUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNvbGlkIHtcbiAgdHlwZTogRmlsbFN0eWxlVHlwZS5Tb2xpZDtcbiAgY29sb3I6IFN0cmFpZ2h0U1JnYmE4O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFNvbGlkIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcInNvbGlkXCI7XG4gICAgY29sb3I6IFN0cmFpZ2h0U1JnYmE4Lkpzb247XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFNvbGlkPiA9IG5ldyBEb2N1bWVudFR5cGU8U29saWQ+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBGaWxsU3R5bGVUeXBlLnR5cGUsIHZhbHVlOiBGaWxsU3R5bGVUeXBlLlNvbGlkfSl9LFxuICAgICAgY29sb3I6IHt0eXBlOiBTdHJhaWdodFNSZ2JhOC50eXBlfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const fixed16p16_1 = __webpack_require__(18);
const fixed8p8_1 = __webpack_require__(15);
const straight_s_rgba8_1 = __webpack_require__(5);
const _type_1 = __webpack_require__(13);
var Bevel;
(function (Bevel) {
    Bevel.type = new kryo_1.DocumentType({
        properties: {
            filter: { type: new kryo_1.LiteralType({ type: _type_1.FilterType.type, value: _type_1.FilterType.Bevel }) },
            shadowColor: { type: straight_s_rgba8_1.StraightSRgba8.type },
            highlightColor: { type: straight_s_rgba8_1.StraightSRgba8.type },
            blurX: { type: fixed16p16_1.Fixed16P16.type },
            blurY: { type: fixed16p16_1.Fixed16P16.type },
            angle: { type: fixed16p16_1.Fixed16P16.type },
            distance: { type: fixed16p16_1.Fixed16P16.type },
            strength: { type: fixed8p8_1.Fixed8P8.type },
            inner: { type: new kryo_1.BooleanType() },
            knockout: { type: new kryo_1.BooleanType() },
            compositeSource: { type: new kryo_1.BooleanType() },
            onTop: { type: new kryo_1.BooleanType() },
            passes: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Bevel = exports.Bevel || (exports.Bevel = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWx0ZXJzL2JldmVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQStGO0FBRS9GLDBEQUFxRDtBQUNyRCxzREFBaUQ7QUFDakQsMERBQW1EO0FBQ25ELG1DQUFtQztBQWtCbkMsSUFBaUIsS0FBSyxDQW1DckI7QUFuQ0QsV0FBaUIsS0FBSztJQWlCUCxVQUFJLEdBQXdCLElBQUksbUJBQVksQ0FBUTtRQUMvRCxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGtCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxrQkFBVSxDQUFDLEtBQUssRUFBQyxDQUFDLEVBQUM7WUFDakYsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLGlDQUFjLENBQUMsSUFBSSxFQUFDO1lBQ3hDLGNBQWMsRUFBRSxFQUFDLElBQUksRUFBRSxpQ0FBYyxDQUFDLElBQUksRUFBQztZQUMzQyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsQ0FBQyxJQUFJLEVBQUM7WUFDOUIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLENBQUMsSUFBSSxFQUFDO1lBQzlCLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxDQUFDLElBQUksRUFBQztZQUM5QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsQ0FBQyxJQUFJLEVBQUM7WUFDakMsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLG1CQUFRLENBQUMsSUFBSSxFQUFDO1lBQy9CLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNoQyxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDbkMsZUFBZSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQzFDLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNoQyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7U0FDaEM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFuQ2dCLEtBQUssR0FBTCxhQUFLLEtBQUwsYUFBSyxRQW1DckIiLCJmaWxlIjoibGliL2ZpbHRlcnMvYmV2ZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Jvb2xlYW5UeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgRmxvYXQ2NFR5cGUsIEludDMyVHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1VpbnQ0fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7Rml4ZWQxNlAxNn0gZnJvbSBcIi4uL2ZpeGVkLXBvaW50L2ZpeGVkMTZwMTZcIjtcbmltcG9ydCB7Rml4ZWQ4UDh9IGZyb20gXCIuLi9maXhlZC1wb2ludC9maXhlZDhwOFwiO1xuaW1wb3J0IHtTdHJhaWdodFNSZ2JhOH0gZnJvbSBcIi4uL3N0cmFpZ2h0LXMtcmdiYThcIjtcbmltcG9ydCB7RmlsdGVyVHlwZX0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBCZXZlbCB7XG4gIGZpbHRlcjogRmlsdGVyVHlwZS5CZXZlbDtcbiAgc2hhZG93Q29sb3I6IFN0cmFpZ2h0U1JnYmE4O1xuICBoaWdobGlnaHRDb2xvcjogU3RyYWlnaHRTUmdiYTg7XG4gIGJsdXJYOiBGaXhlZDE2UDE2O1xuICBibHVyWTogRml4ZWQxNlAxNjtcbiAgYW5nbGU6IEZpeGVkMTZQMTY7XG4gIGRpc3RhbmNlOiBGaXhlZDE2UDE2O1xuICBzdHJlbmd0aDogRml4ZWQ4UDg7XG4gIGlubmVyOiBib29sZWFuO1xuICBrbm9ja291dDogYm9vbGVhbjtcbiAgY29tcG9zaXRlU291cmNlOiBib29sZWFuO1xuICBvblRvcDogYm9vbGVhbjtcbiAgcGFzc2VzOiBVaW50NDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBCZXZlbCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgZmlsdGVyOiBcImJldmVsXCI7XG4gICAgc2hhZG93X2NvbG9yOiBTdHJhaWdodFNSZ2JhOC5Kc29uO1xuICAgIGhpZ2hsaWdodF9jb2xvcjogU3RyYWlnaHRTUmdiYTguSnNvbjtcbiAgICBibHVyX3g6IG51bWJlcjtcbiAgICBibHVyX3k6IG51bWJlcjtcbiAgICBhbmdsZTogbnVtYmVyO1xuICAgIGRpc3RhbmNlOiBudW1iZXI7XG4gICAgc3RyZW5ndGg6IG51bWJlcjtcbiAgICBpbm5lcjogYm9vbGVhbjtcbiAgICBrbm9ja291dDogYm9vbGVhbjtcbiAgICBjb21wb3NpdGVfc291cmNlOiBib29sZWFuO1xuICAgIG9uX3RvcDogYm9vbGVhbjtcbiAgICBwYXNzZXM6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8QmV2ZWw+ID0gbmV3IERvY3VtZW50VHlwZTxCZXZlbD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGZpbHRlcjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogRmlsdGVyVHlwZS50eXBlLCB2YWx1ZTogRmlsdGVyVHlwZS5CZXZlbH0pfSxcbiAgICAgIHNoYWRvd0NvbG9yOiB7dHlwZTogU3RyYWlnaHRTUmdiYTgudHlwZX0sXG4gICAgICBoaWdobGlnaHRDb2xvcjoge3R5cGU6IFN0cmFpZ2h0U1JnYmE4LnR5cGV9LFxuICAgICAgYmx1clg6IHt0eXBlOiBGaXhlZDE2UDE2LnR5cGV9LFxuICAgICAgYmx1clk6IHt0eXBlOiBGaXhlZDE2UDE2LnR5cGV9LFxuICAgICAgYW5nbGU6IHt0eXBlOiBGaXhlZDE2UDE2LnR5cGV9LFxuICAgICAgZGlzdGFuY2U6IHt0eXBlOiBGaXhlZDE2UDE2LnR5cGV9LFxuICAgICAgc3RyZW5ndGg6IHt0eXBlOiBGaXhlZDhQOC50eXBlfSxcbiAgICAgIGlubmVyOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAga25vY2tvdXQ6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBjb21wb3NpdGVTb3VyY2U6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBvblRvcDoge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIHBhc3Nlczoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(13);
var Blur;
(function (Blur) {
    Blur.type = new kryo_1.DocumentType({
        properties: {
            filter: { type: new kryo_1.LiteralType({ type: _type_1.FilterType.type, value: _type_1.FilterType.Blur }) },
            blurX: { type: new kryo_1.Float64Type() },
            blurY: { type: new kryo_1.Float64Type() },
            passes: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Blur = exports.Blur || (exports.Blur = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWx0ZXJzL2JsdXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBa0Y7QUFHbEYsbUNBQW1DO0FBU25DLElBQWlCLElBQUksQ0FpQnBCO0FBakJELFdBQWlCLElBQUk7SUFRTixTQUFJLEdBQXVCLElBQUksbUJBQVksQ0FBTztRQUM3RCxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGtCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxrQkFBVSxDQUFDLElBQUksRUFBQyxDQUFDLEVBQUM7WUFDaEYsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ2hDLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNoQyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7U0FDaEM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFqQmdCLElBQUksR0FBSixZQUFJLEtBQUosWUFBSSxRQWlCcEIiLCJmaWxlIjoibGliL2ZpbHRlcnMvYmx1ci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEZsb2F0NjRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50NX0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0ZpeGVkMTZQMTZ9IGZyb20gXCIuLi9maXhlZC1wb2ludC9maXhlZDE2cDE2XCI7XG5pbXBvcnQge0ZpbHRlclR5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmx1ciB7XG4gIGZpbHRlcjogRmlsdGVyVHlwZS5CbHVyO1xuICBibHVyWDogRml4ZWQxNlAxNjtcbiAgYmx1clk6IEZpeGVkMTZQMTY7XG4gIHBhc3NlczogVWludDU7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQmx1ciB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgZmlsdGVyOiBcImJsdXJcIjtcbiAgICBibHVyX3g6IG51bWJlcjtcbiAgICBibHVyX3k6IG51bWJlcjtcbiAgICBwYXNzZXM6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8Qmx1cj4gPSBuZXcgRG9jdW1lbnRUeXBlPEJsdXI+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBmaWx0ZXI6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEZpbHRlclR5cGUudHlwZSwgdmFsdWU6IEZpbHRlclR5cGUuQmx1cn0pfSxcbiAgICAgIGJsdXJYOiB7dHlwZTogbmV3IEZsb2F0NjRUeXBlKCl9LFxuICAgICAgYmx1clk6IHt0eXBlOiBuZXcgRmxvYXQ2NFR5cGUoKX0sXG4gICAgICBwYXNzZXM6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(13);
var ColorMatrix;
(function (ColorMatrix) {
    ColorMatrix.type = new kryo_1.DocumentType({
        properties: {
            filter: { type: new kryo_1.LiteralType({ type: _type_1.FilterType.type, value: _type_1.FilterType.ColorMatrix }) },
            matrix: { type: new kryo_1.ArrayType({ itemType: new kryo_1.Float64Type(), /* minLength: 20, */ maxLength: 20 }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ColorMatrix = exports.ColorMatrix || (exports.ColorMatrix = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWx0ZXJzL2NvbG9yLW1hdHJpeC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFrRjtBQUVsRixtQ0FBbUM7QUFPbkMsSUFBaUIsV0FBVyxDQWEzQjtBQWJELFdBQWlCLFdBQVc7SUFNYixnQkFBSSxHQUE4QixJQUFJLG1CQUFZLENBQWM7UUFDM0UsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxrQkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsa0JBQVUsQ0FBQyxXQUFXLEVBQUMsQ0FBQyxFQUFDO1lBQ3ZGLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUUsb0JBQW9CLENBQUMsU0FBUyxFQUFFLEVBQUUsRUFBQyxDQUFDLEVBQUM7U0FDakc7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFiZ0IsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFhM0IiLCJmaWxlIjoibGliL2ZpbHRlcnMvY29sb3ItbWF0cml4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcnJheVR5cGUsIENhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBGbG9hdDY0VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0Zsb2F0MzJ9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtGaWx0ZXJUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbG9yTWF0cml4IHtcbiAgZmlsdGVyOiBGaWx0ZXJUeXBlLkNvbG9yTWF0cml4O1xuICBtYXRyaXg6IEZsb2F0MzJbXTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDb2xvck1hdHJpeCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgZmlsdGVyOiBcImNvbG9yLW1hdHJpeFwiO1xuICAgIG1hdHJpeDogbnVtYmVyW107XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPENvbG9yTWF0cml4PiA9IG5ldyBEb2N1bWVudFR5cGU8Q29sb3JNYXRyaXg+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBmaWx0ZXI6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEZpbHRlclR5cGUudHlwZSwgdmFsdWU6IEZpbHRlclR5cGUuQ29sb3JNYXRyaXh9KX0sXG4gICAgICBtYXRyaXg6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogbmV3IEZsb2F0NjRUeXBlKCksIC8qIG1pbkxlbmd0aDogMjAsICovIG1heExlbmd0aDogMjB9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const straight_s_rgba8_1 = __webpack_require__(5);
const _type_1 = __webpack_require__(13);
var Convolution;
(function (Convolution) {
    Convolution.type = new kryo_1.DocumentType({
        properties: {
            filter: { type: new kryo_1.LiteralType({ type: _type_1.FilterType.type, value: _type_1.FilterType.Convolution }) },
            matrixWidth: { type: new kryo_1.Int32Type() },
            matrixHeight: { type: new kryo_1.Int32Type() },
            divisor: { type: new kryo_1.Float64Type() },
            bias: { type: new kryo_1.Float64Type() },
            matrix: { type: new kryo_1.ArrayType({ itemType: new kryo_1.Float64Type(), /* minLength: 20, */ maxLength: 20 }) },
            defaultColor: { type: straight_s_rgba8_1.StraightSRgba8.type },
            clamp: { type: new kryo_1.BooleanType() },
            preserveAlpha: { type: new kryo_1.BooleanType() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Convolution = exports.Convolution || (exports.Convolution = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWx0ZXJzL2NvbnZvbHV0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBHO0FBRTFHLDBEQUFtRDtBQUNuRCxtQ0FBbUM7QUFjbkMsSUFBaUIsV0FBVyxDQTJCM0I7QUEzQkQsV0FBaUIsV0FBVztJQWFiLGdCQUFJLEdBQThCLElBQUksbUJBQVksQ0FBYztRQUMzRSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGtCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxrQkFBVSxDQUFDLFdBQVcsRUFBQyxDQUFDLEVBQUM7WUFDdkYsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQ3BDLFlBQVksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztZQUNyQyxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDbEMsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQy9CLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUUsb0JBQW9CLENBQUMsU0FBUyxFQUFFLEVBQUUsRUFBQyxDQUFDLEVBQUM7WUFDaEcsWUFBWSxFQUFFLEVBQUMsSUFBSSxFQUFFLGlDQUFjLENBQUMsSUFBSSxFQUFDO1lBQ3pDLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNoQyxhQUFhLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7U0FDekM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUEzQmdCLFdBQVcsR0FBWCxtQkFBVyxLQUFYLG1CQUFXLFFBMkIzQiIsImZpbGUiOiJsaWIvZmlsdGVycy9jb252b2x1dGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXJyYXlUeXBlLCBCb29sZWFuVHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEZsb2F0NjRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtGbG9hdDMyLCBVaW50U2l6ZX0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge1N0cmFpZ2h0U1JnYmE4fSBmcm9tIFwiLi4vc3RyYWlnaHQtcy1yZ2JhOFwiO1xuaW1wb3J0IHtGaWx0ZXJUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbnZvbHV0aW9uIHtcbiAgZmlsdGVyOiBGaWx0ZXJUeXBlLkNvbnZvbHV0aW9uO1xuICBtYXRyaXhXaWR0aDogVWludFNpemU7XG4gIG1hdHJpeEhlaWdodDogVWludFNpemU7XG4gIGRpdmlzb3I6IEZsb2F0MzI7XG4gIGJpYXM6IEZsb2F0MzI7XG4gIG1hdHJpeDogRmxvYXQzMltdO1xuICBkZWZhdWx0Q29sb3I6IFN0cmFpZ2h0U1JnYmE4O1xuICBjbGFtcDogYm9vbGVhbjtcbiAgcHJlc2VydmVBbHBoYTogYm9vbGVhbjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDb252b2x1dGlvbiB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgZmlsdGVyOiBcImNvbnZvbHV0aW9uXCI7XG4gICAgbWF0cml4X3dpZHRoOiBudW1iZXI7XG4gICAgbWF0cml4SGVpZ2h0OiBudW1iZXI7XG4gICAgZGl2aXNvcjogbnVtYmVyO1xuICAgIGJpYXM6IG51bWJlcjtcbiAgICBtYXRyaXg6IG51bWJlcltdO1xuICAgIGRlZmF1bHRfY29sb3I6IFN0cmFpZ2h0U1JnYmE4Lkpzb247XG4gICAgY2xhbXA6IGJvb2xlYW47XG4gICAgcHJlc2VydmVfYWxwaGE6IGJvb2xlYW47XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPENvbnZvbHV0aW9uPiA9IG5ldyBEb2N1bWVudFR5cGU8Q29udm9sdXRpb24+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICBmaWx0ZXI6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IEZpbHRlclR5cGUudHlwZSwgdmFsdWU6IEZpbHRlclR5cGUuQ29udm9sdXRpb259KX0sXG4gICAgICBtYXRyaXhXaWR0aDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICBtYXRyaXhIZWlnaHQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgZGl2aXNvcjoge3R5cGU6IG5ldyBGbG9hdDY0VHlwZSgpfSxcbiAgICAgIGJpYXM6IHt0eXBlOiBuZXcgRmxvYXQ2NFR5cGUoKX0sXG4gICAgICBtYXRyaXg6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogbmV3IEZsb2F0NjRUeXBlKCksIC8qIG1pbkxlbmd0aDogMjAsICovIG1heExlbmd0aDogMjB9KX0sXG4gICAgICBkZWZhdWx0Q29sb3I6IHt0eXBlOiBTdHJhaWdodFNSZ2JhOC50eXBlfSxcbiAgICAgIGNsYW1wOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgcHJlc2VydmVBbHBoYToge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const fixed16p16_1 = __webpack_require__(18);
const fixed8p8_1 = __webpack_require__(15);
const straight_s_rgba8_1 = __webpack_require__(5);
const _type_1 = __webpack_require__(13);
var DropShadow;
(function (DropShadow) {
    DropShadow.type = new kryo_1.DocumentType({
        properties: {
            filter: { type: new kryo_1.LiteralType({ type: _type_1.FilterType.type, value: _type_1.FilterType.DropShadow }) },
            color: { type: straight_s_rgba8_1.StraightSRgba8.type },
            blurX: { type: fixed16p16_1.Fixed16P16.type },
            blurY: { type: fixed16p16_1.Fixed16P16.type },
            angle: { type: fixed16p16_1.Fixed16P16.type },
            distance: { type: fixed16p16_1.Fixed16P16.type },
            strength: { type: fixed8p8_1.Fixed8P8.type },
            inner: { type: new kryo_1.BooleanType() },
            knockout: { type: new kryo_1.BooleanType() },
            compositeSource: { type: new kryo_1.BooleanType() },
            passes: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DropShadow = exports.DropShadow || (exports.DropShadow = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWx0ZXJzL2Ryb3Atc2hhZG93LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQWtGO0FBRWxGLDBEQUFxRDtBQUNyRCxzREFBaUQ7QUFDakQsMERBQW1EO0FBQ25ELG1DQUFtQztBQWdCbkMsSUFBaUIsVUFBVSxDQStCMUI7QUEvQkQsV0FBaUIsVUFBVTtJQWVaLGVBQUksR0FBNkIsSUFBSSxtQkFBWSxDQUFhO1FBQ3pFLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsa0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLGtCQUFVLENBQUMsVUFBVSxFQUFDLENBQUMsRUFBQztZQUN0RixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsaUNBQWMsQ0FBQyxJQUFJLEVBQUM7WUFDbEMsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLENBQUMsSUFBSSxFQUFDO1lBQzlCLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxDQUFDLElBQUksRUFBQztZQUM5QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsQ0FBQyxJQUFJLEVBQUM7WUFDOUIsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLENBQUMsSUFBSSxFQUFDO1lBQ2pDLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxtQkFBUSxDQUFDLElBQUksRUFBQztZQUMvQixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDaEMsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ25DLGVBQWUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUMxQyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7U0FDaEM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUEvQmdCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBK0IxQiIsImZpbGUiOiJsaWIvZmlsdGVycy9kcm9wLXNoYWRvdy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Qm9vbGVhblR5cGUsIENhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50NX0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0ZpeGVkMTZQMTZ9IGZyb20gXCIuLi9maXhlZC1wb2ludC9maXhlZDE2cDE2XCI7XG5pbXBvcnQge0ZpeGVkOFA4fSBmcm9tIFwiLi4vZml4ZWQtcG9pbnQvZml4ZWQ4cDhcIjtcbmltcG9ydCB7U3RyYWlnaHRTUmdiYTh9IGZyb20gXCIuLi9zdHJhaWdodC1zLXJnYmE4XCI7XG5pbXBvcnQge0ZpbHRlclR5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRHJvcFNoYWRvdyB7XG4gIGZpbHRlcjogRmlsdGVyVHlwZS5Ecm9wU2hhZG93O1xuICBjb2xvcjogU3RyYWlnaHRTUmdiYTg7XG4gIGJsdXJYOiBGaXhlZDE2UDE2O1xuICBibHVyWTogRml4ZWQxNlAxNjtcbiAgYW5nbGU6IEZpeGVkMTZQMTY7XG4gIGRpc3RhbmNlOiBGaXhlZDE2UDE2O1xuICBzdHJlbmd0aDogRml4ZWQ4UDg7XG4gIGlubmVyOiBib29sZWFuO1xuICBrbm9ja291dDogYm9vbGVhbjtcbiAgY29tcG9zaXRlU291cmNlOiBib29sZWFuO1xuICBwYXNzZXM6IFVpbnQ1O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERyb3BTaGFkb3cge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGZpbHRlcjogXCJkcm9wLXNoYWRvd1wiO1xuICAgIGNvbG9yOiBTdHJhaWdodFNSZ2JhOC5Kc29uO1xuICAgIGJsdXJfeDogbnVtYmVyO1xuICAgIGJsdXJfeTogbnVtYmVyO1xuICAgIGFuZ2xlOiBudW1iZXI7XG4gICAgZGlzdGFuY2U6IG51bWJlcjtcbiAgICBzdHJlbmd0aDogbnVtYmVyO1xuICAgIGlubmVyOiBib29sZWFuO1xuICAgIGtub2Nrb3V0OiBib29sZWFuO1xuICAgIGNvbXBvc2l0ZV9zb3VyY2U6IGJvb2xlYW47XG4gICAgcGFzc2VzOiBudW1iZXI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPERyb3BTaGFkb3c+ID0gbmV3IERvY3VtZW50VHlwZTxEcm9wU2hhZG93Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgZmlsdGVyOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBGaWx0ZXJUeXBlLnR5cGUsIHZhbHVlOiBGaWx0ZXJUeXBlLkRyb3BTaGFkb3d9KX0sXG4gICAgICBjb2xvcjoge3R5cGU6IFN0cmFpZ2h0U1JnYmE4LnR5cGV9LFxuICAgICAgYmx1clg6IHt0eXBlOiBGaXhlZDE2UDE2LnR5cGV9LFxuICAgICAgYmx1clk6IHt0eXBlOiBGaXhlZDE2UDE2LnR5cGV9LFxuICAgICAgYW5nbGU6IHt0eXBlOiBGaXhlZDE2UDE2LnR5cGV9LFxuICAgICAgZGlzdGFuY2U6IHt0eXBlOiBGaXhlZDE2UDE2LnR5cGV9LFxuICAgICAgc3RyZW5ndGg6IHt0eXBlOiBGaXhlZDhQOC50eXBlfSxcbiAgICAgIGlubmVyOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAga25vY2tvdXQ6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBjb21wb3NpdGVTb3VyY2U6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBwYXNzZXM6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const straight_s_rgba8_1 = __webpack_require__(5);
const _type_1 = __webpack_require__(13);
var Glow;
(function (Glow) {
    Glow.type = new kryo_1.DocumentType({
        properties: {
            filter: { type: new kryo_1.LiteralType({ type: _type_1.FilterType.type, value: _type_1.FilterType.Glow }) },
            color: { type: straight_s_rgba8_1.StraightSRgba8.type },
            blurX: { type: new kryo_1.Float64Type() },
            blurY: { type: new kryo_1.Float64Type() },
            strength: { type: new kryo_1.Float64Type() },
            inner: { type: new kryo_1.BooleanType() },
            knockout: { type: new kryo_1.BooleanType() },
            compositeSource: { type: new kryo_1.BooleanType() },
            passes: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Glow = exports.Glow || (exports.Glow = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWx0ZXJzL2dsb3cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBK0Y7QUFJL0YsMERBQW1EO0FBQ25ELG1DQUFtQztBQWNuQyxJQUFpQixJQUFJLENBMkJwQjtBQTNCRCxXQUFpQixJQUFJO0lBYU4sU0FBSSxHQUF1QixJQUFJLG1CQUFZLENBQU87UUFDN0QsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxrQkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsa0JBQVUsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxFQUFDO1lBQ2hGLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxpQ0FBYyxDQUFDLElBQUksRUFBQztZQUNsQyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDaEMsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ2hDLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNuQyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDaEMsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ25DLGVBQWUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUMxQyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7U0FDaEM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUEzQmdCLElBQUksR0FBSixZQUFJLEtBQUosWUFBSSxRQTJCcEIiLCJmaWxlIjoibGliL2ZpbHRlcnMvZ2xvdy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Qm9vbGVhblR5cGUsIENhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBGbG9hdDY0VHlwZSwgSW50MzJUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDV9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtGaXhlZDE2UDE2fSBmcm9tIFwiLi4vZml4ZWQtcG9pbnQvZml4ZWQxNnAxNlwiO1xuaW1wb3J0IHtGaXhlZDhQOH0gZnJvbSBcIi4uL2ZpeGVkLXBvaW50L2ZpeGVkOHA4XCI7XG5pbXBvcnQge1N0cmFpZ2h0U1JnYmE4fSBmcm9tIFwiLi4vc3RyYWlnaHQtcy1yZ2JhOFwiO1xuaW1wb3J0IHtGaWx0ZXJUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdsb3cge1xuICBmaWx0ZXI6IEZpbHRlclR5cGUuR2xvdztcbiAgY29sb3I6IFN0cmFpZ2h0U1JnYmE4O1xuICBibHVyWDogRml4ZWQxNlAxNjtcbiAgYmx1clk6IEZpeGVkMTZQMTY7XG4gIHN0cmVuZ3RoOiBGaXhlZDhQODtcbiAgaW5uZXI6IGJvb2xlYW47XG4gIGtub2Nrb3V0OiBib29sZWFuO1xuICBjb21wb3NpdGVTb3VyY2U6IGJvb2xlYW47XG4gIHBhc3NlczogVWludDU7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2xvdyB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgZmlsdGVyOiBcImdsb3dcIjtcbiAgICBjb2xvcjogU3RyYWlnaHRTUmdiYTguSnNvbjtcbiAgICBibHVyX3g6IG51bWJlcjtcbiAgICBibHVyX3k6IG51bWJlcjtcbiAgICBzdHJlbmd0aDogbnVtYmVyO1xuICAgIGlubmVyOiBib29sZWFuO1xuICAgIGtub2Nrb3V0OiBib29sZWFuO1xuICAgIGNvbXBvc2l0ZV9zb3VyY2U6IGJvb2xlYW47XG4gICAgcGFzc2VzOiBudW1iZXI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEdsb3c+ID0gbmV3IERvY3VtZW50VHlwZTxHbG93Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgZmlsdGVyOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBGaWx0ZXJUeXBlLnR5cGUsIHZhbHVlOiBGaWx0ZXJUeXBlLkdsb3d9KX0sXG4gICAgICBjb2xvcjoge3R5cGU6IFN0cmFpZ2h0U1JnYmE4LnR5cGV9LFxuICAgICAgYmx1clg6IHt0eXBlOiBuZXcgRmxvYXQ2NFR5cGUoKX0sXG4gICAgICBibHVyWToge3R5cGU6IG5ldyBGbG9hdDY0VHlwZSgpfSxcbiAgICAgIHN0cmVuZ3RoOiB7dHlwZTogbmV3IEZsb2F0NjRUeXBlKCl9LFxuICAgICAgaW5uZXI6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBrbm9ja291dDoge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIGNvbXBvc2l0ZVNvdXJjZToge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIHBhc3Nlczoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const color_stop_1 = __webpack_require__(39);
const fixed16p16_1 = __webpack_require__(18);
const fixed8p8_1 = __webpack_require__(15);
const _type_1 = __webpack_require__(13);
var GradientBevel;
(function (GradientBevel) {
    GradientBevel.type = new kryo_1.DocumentType({
        properties: {
            filter: { type: new kryo_1.LiteralType({ type: _type_1.FilterType.type, value: _type_1.FilterType.GradientBevel }) },
            gradient: { type: new kryo_1.ArrayType({ itemType: color_stop_1.ColorStop.type, maxLength: Infinity }) },
            blurX: { type: fixed16p16_1.Fixed16P16.type },
            blurY: { type: fixed16p16_1.Fixed16P16.type },
            angle: { type: fixed16p16_1.Fixed16P16.type },
            distance: { type: fixed16p16_1.Fixed16P16.type },
            strength: { type: fixed8p8_1.Fixed8P8.type },
            inner: { type: new kryo_1.BooleanType() },
            knockout: { type: new kryo_1.BooleanType() },
            compositeSource: { type: new kryo_1.BooleanType() },
            onTop: { type: new kryo_1.BooleanType() },
            passes: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(GradientBevel = exports.GradientBevel || (exports.GradientBevel = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWx0ZXJzL2dyYWRpZW50LWJldmVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTZGO0FBRTdGLDhDQUF3QztBQUN4QywwREFBcUQ7QUFDckQsc0RBQWlEO0FBQ2pELG1DQUFtQztBQWlCbkMsSUFBaUIsYUFBYSxDQWlDN0I7QUFqQ0QsV0FBaUIsYUFBYTtJQWdCZixrQkFBSSxHQUFnQyxJQUFJLG1CQUFZLENBQWdCO1FBQy9FLFVBQVUsRUFBRTtZQUNWLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsa0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLGtCQUFVLENBQUMsYUFBYSxFQUFDLENBQUMsRUFBQztZQUN6RixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLHNCQUFTLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1lBQ2hGLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxDQUFDLElBQUksRUFBQztZQUM5QixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsQ0FBQyxJQUFJLEVBQUM7WUFDOUIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLENBQUMsSUFBSSxFQUFDO1lBQzlCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxDQUFDLElBQUksRUFBQztZQUNqQyxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsbUJBQVEsQ0FBQyxJQUFJLEVBQUM7WUFDL0IsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ2hDLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNuQyxlQUFlLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDMUMsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ2hDLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztTQUNoQztRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWpDZ0IsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUFpQzdCIiwiZmlsZSI6ImxpYi9maWx0ZXJzL2dyYWRpZW50LWJldmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcnJheVR5cGUsIEJvb2xlYW5UeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgSW50MzJUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDR9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtDb2xvclN0b3B9IGZyb20gXCIuLi9jb2xvci1zdG9wXCI7XG5pbXBvcnQge0ZpeGVkMTZQMTZ9IGZyb20gXCIuLi9maXhlZC1wb2ludC9maXhlZDE2cDE2XCI7XG5pbXBvcnQge0ZpeGVkOFA4fSBmcm9tIFwiLi4vZml4ZWQtcG9pbnQvZml4ZWQ4cDhcIjtcbmltcG9ydCB7RmlsdGVyVHlwZX0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHcmFkaWVudEJldmVsIHtcbiAgZmlsdGVyOiBGaWx0ZXJUeXBlLkdyYWRpZW50QmV2ZWw7XG4gIGdyYWRpZW50OiBDb2xvclN0b3BbXTtcbiAgYmx1clg6IEZpeGVkMTZQMTY7XG4gIGJsdXJZOiBGaXhlZDE2UDE2O1xuICBhbmdsZTogRml4ZWQxNlAxNjtcbiAgZGlzdGFuY2U6IEZpeGVkMTZQMTY7XG4gIHN0cmVuZ3RoOiBGaXhlZDhQODtcbiAgaW5uZXI6IGJvb2xlYW47XG4gIGtub2Nrb3V0OiBib29sZWFuO1xuICBjb21wb3NpdGVTb3VyY2U6IGJvb2xlYW47XG4gIG9uVG9wOiBib29sZWFuO1xuICBwYXNzZXM6IFVpbnQ0O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEdyYWRpZW50QmV2ZWwge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGZpbHRlcjogXCJncmFkaWVudC1iZXZlbFwiO1xuICAgIGdyYWRpZW50OiBDb2xvclN0b3AuSnNvbltdO1xuICAgIGJsdXJfeDogbnVtYmVyO1xuICAgIGJsdXJfeTogbnVtYmVyO1xuICAgIGFuZ2xlOiBudW1iZXI7XG4gICAgZGlzdGFuY2U6IG51bWJlcjtcbiAgICBzdHJlbmd0aDogbnVtYmVyO1xuICAgIGlubmVyOiBib29sZWFuO1xuICAgIGtub2Nrb3V0OiBib29sZWFuO1xuICAgIGNvbXBvc2l0ZV9zb3VyY2U6IGJvb2xlYW47XG4gICAgb25fdG9wOiBib29sZWFuO1xuICAgIHBhc3NlczogbnVtYmVyO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxHcmFkaWVudEJldmVsPiA9IG5ldyBEb2N1bWVudFR5cGU8R3JhZGllbnRCZXZlbD4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGZpbHRlcjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogRmlsdGVyVHlwZS50eXBlLCB2YWx1ZTogRmlsdGVyVHlwZS5HcmFkaWVudEJldmVsfSl9LFxuICAgICAgZ3JhZGllbnQ6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogQ29sb3JTdG9wLnR5cGUsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgICBibHVyWDoge3R5cGU6IEZpeGVkMTZQMTYudHlwZX0sXG4gICAgICBibHVyWToge3R5cGU6IEZpeGVkMTZQMTYudHlwZX0sXG4gICAgICBhbmdsZToge3R5cGU6IEZpeGVkMTZQMTYudHlwZX0sXG4gICAgICBkaXN0YW5jZToge3R5cGU6IEZpeGVkMTZQMTYudHlwZX0sXG4gICAgICBzdHJlbmd0aDoge3R5cGU6IEZpeGVkOFA4LnR5cGV9LFxuICAgICAgaW5uZXI6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBrbm9ja291dDoge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIGNvbXBvc2l0ZVNvdXJjZToge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIG9uVG9wOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgcGFzc2VzOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const color_stop_1 = __webpack_require__(39);
const fixed16p16_1 = __webpack_require__(18);
const fixed8p8_1 = __webpack_require__(15);
const _type_1 = __webpack_require__(13);
var GradientGlow;
(function (GradientGlow) {
    GradientGlow.type = new kryo_1.DocumentType({
        properties: {
            filter: { type: new kryo_1.LiteralType({ type: _type_1.FilterType.type, value: _type_1.FilterType.GradientGlow }) },
            gradient: { type: new kryo_1.ArrayType({ itemType: color_stop_1.ColorStop.type, maxLength: Infinity }) },
            blurX: { type: fixed16p16_1.Fixed16P16.type },
            blurY: { type: fixed16p16_1.Fixed16P16.type },
            angle: { type: fixed16p16_1.Fixed16P16.type },
            distance: { type: fixed16p16_1.Fixed16P16.type },
            strength: { type: fixed8p8_1.Fixed8P8.type },
            inner: { type: new kryo_1.BooleanType() },
            knockout: { type: new kryo_1.BooleanType() },
            compositeSource: { type: new kryo_1.BooleanType() },
            onTop: { type: new kryo_1.BooleanType() },
            passes: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(GradientGlow = exports.GradientGlow || (exports.GradientGlow = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maWx0ZXJzL2dyYWRpZW50LWdsb3cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBNkY7QUFFN0YsOENBQXdDO0FBQ3hDLDBEQUFxRDtBQUNyRCxzREFBaUQ7QUFDakQsbUNBQW1DO0FBaUJuQyxJQUFpQixZQUFZLENBaUM1QjtBQWpDRCxXQUFpQixZQUFZO0lBZ0JkLGlCQUFJLEdBQStCLElBQUksbUJBQVksQ0FBZTtRQUM3RSxVQUFVLEVBQUU7WUFDVixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGtCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxrQkFBVSxDQUFDLFlBQVksRUFBQyxDQUFDLEVBQUM7WUFDeEYsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxzQkFBUyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztZQUNoRixLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsQ0FBQyxJQUFJLEVBQUM7WUFDOUIsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLHVCQUFVLENBQUMsSUFBSSxFQUFDO1lBQzlCLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSx1QkFBVSxDQUFDLElBQUksRUFBQztZQUM5QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsdUJBQVUsQ0FBQyxJQUFJLEVBQUM7WUFDakMsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLG1CQUFRLENBQUMsSUFBSSxFQUFDO1lBQy9CLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNoQyxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDbkMsZUFBZSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQzFDLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNoQyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7U0FDaEM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFqQ2dCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBaUM1QiIsImZpbGUiOiJsaWIvZmlsdGVycy9ncmFkaWVudC1nbG93LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcnJheVR5cGUsIEJvb2xlYW5UeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgSW50MzJUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDR9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtDb2xvclN0b3B9IGZyb20gXCIuLi9jb2xvci1zdG9wXCI7XG5pbXBvcnQge0ZpeGVkMTZQMTZ9IGZyb20gXCIuLi9maXhlZC1wb2ludC9maXhlZDE2cDE2XCI7XG5pbXBvcnQge0ZpeGVkOFA4fSBmcm9tIFwiLi4vZml4ZWQtcG9pbnQvZml4ZWQ4cDhcIjtcbmltcG9ydCB7RmlsdGVyVHlwZX0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBHcmFkaWVudEdsb3cge1xuICBmaWx0ZXI6IEZpbHRlclR5cGUuR3JhZGllbnRHbG93O1xuICBncmFkaWVudDogQ29sb3JTdG9wW107XG4gIGJsdXJYOiBGaXhlZDE2UDE2O1xuICBibHVyWTogRml4ZWQxNlAxNjtcbiAgYW5nbGU6IEZpeGVkMTZQMTY7XG4gIGRpc3RhbmNlOiBGaXhlZDE2UDE2O1xuICBzdHJlbmd0aDogRml4ZWQ4UDg7XG4gIGlubmVyOiBib29sZWFuO1xuICBrbm9ja291dDogYm9vbGVhbjtcbiAgY29tcG9zaXRlU291cmNlOiBib29sZWFuO1xuICBvblRvcDogYm9vbGVhbjtcbiAgcGFzc2VzOiBVaW50NDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBHcmFkaWVudEdsb3cge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGZpbHRlcjogXCJncmFkaWVudC1nbG93XCI7XG4gICAgZ3JhZGllbnQ6IENvbG9yU3RvcC5Kc29uW107XG4gICAgYmx1cl94OiBudW1iZXI7XG4gICAgYmx1cl95OiBudW1iZXI7XG4gICAgYW5nbGU6IG51bWJlcjtcbiAgICBkaXN0YW5jZTogbnVtYmVyO1xuICAgIHN0cmVuZ3RoOiBudW1iZXI7XG4gICAgaW5uZXI6IGJvb2xlYW47XG4gICAga25vY2tvdXQ6IGJvb2xlYW47XG4gICAgY29tcG9zaXRlX3NvdXJjZTogYm9vbGVhbjtcbiAgICBvbl90b3A6IGJvb2xlYW47XG4gICAgcGFzc2VzOiBudW1iZXI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEdyYWRpZW50R2xvdz4gPSBuZXcgRG9jdW1lbnRUeXBlPEdyYWRpZW50R2xvdz4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGZpbHRlcjoge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogRmlsdGVyVHlwZS50eXBlLCB2YWx1ZTogRmlsdGVyVHlwZS5HcmFkaWVudEdsb3d9KX0sXG4gICAgICBncmFkaWVudDoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBDb2xvclN0b3AudHlwZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICAgIGJsdXJYOiB7dHlwZTogRml4ZWQxNlAxNi50eXBlfSxcbiAgICAgIGJsdXJZOiB7dHlwZTogRml4ZWQxNlAxNi50eXBlfSxcbiAgICAgIGFuZ2xlOiB7dHlwZTogRml4ZWQxNlAxNi50eXBlfSxcbiAgICAgIGRpc3RhbmNlOiB7dHlwZTogRml4ZWQxNlAxNi50eXBlfSxcbiAgICAgIHN0cmVuZ3RoOiB7dHlwZTogRml4ZWQ4UDgudHlwZX0sXG4gICAgICBpbm5lcjoge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIGtub2Nrb3V0OiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgY29tcG9zaXRlU291cmNlOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgb25Ub3A6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBwYXNzZXM6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(40);
var Bevel;
(function (Bevel) {
    Bevel.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.JoinStyleType.type, value: _type_1.JoinStyleType.Bevel }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Bevel = exports.Bevel || (exports.Bevel = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9qb2luLXN0eWxlcy9iZXZlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxRTtBQUVyRSxtQ0FBc0M7QUFNdEMsSUFBaUIsS0FBSyxDQVdyQjtBQVhELFdBQWlCLEtBQUs7SUFLUCxVQUFJLEdBQXdCLElBQUksbUJBQVksQ0FBUTtRQUMvRCxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHFCQUFhLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxxQkFBYSxDQUFDLEtBQUssRUFBQyxDQUFDLEVBQUM7U0FDdEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsS0FBSyxHQUFMLGFBQUssS0FBTCxhQUFLLFFBV3JCIiwiZmlsZSI6ImxpYi9qb2luLXN0eWxlcy9iZXZlbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1VpbnQxNn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0pvaW5TdHlsZVR5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmV2ZWwge1xuICB0eXBlOiBKb2luU3R5bGVUeXBlLkJldmVsO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEJldmVsIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcImJldmVsXCI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEJldmVsPiA9IG5ldyBEb2N1bWVudFR5cGU8QmV2ZWw+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBKb2luU3R5bGVUeXBlLnR5cGUsIHZhbHVlOiBKb2luU3R5bGVUeXBlLkJldmVsfSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(40);
var Miter;
(function (Miter) {
    Miter.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.JoinStyleType.type, value: _type_1.JoinStyleType.Miter }) },
            limit: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Miter = exports.Miter || (exports.Miter = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9qb2luLXN0eWxlcy9taXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxRTtBQUVyRSxtQ0FBc0M7QUFPdEMsSUFBaUIsS0FBSyxDQWFyQjtBQWJELFdBQWlCLEtBQUs7SUFNUCxVQUFJLEdBQXdCLElBQUksbUJBQVksQ0FBUTtRQUMvRCxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHFCQUFhLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxxQkFBYSxDQUFDLEtBQUssRUFBQyxDQUFDLEVBQUM7WUFDckYsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1NBQy9CO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLEtBQUssR0FBTCxhQUFLLEtBQUwsYUFBSyxRQWFyQiIsImZpbGUiOiJsaWIvam9pbi1zdHlsZXMvbWl0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50MTZ9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtKb2luU3R5bGVUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1pdGVyIHtcbiAgdHlwZTogSm9pblN0eWxlVHlwZS5NaXRlcjtcbiAgbGltaXQ6IFVpbnQxNjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBNaXRlciB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJtaXRlclwiO1xuICAgIGxpbWl0OiBudW1iZXI7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPE1pdGVyPiA9IG5ldyBEb2N1bWVudFR5cGU8TWl0ZXI+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBKb2luU3R5bGVUeXBlLnR5cGUsIHZhbHVlOiBKb2luU3R5bGVUeXBlLk1pdGVyfSl9LFxuICAgICAgbGltaXQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(40);
var Round;
(function (Round) {
    Round.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.JoinStyleType.type, value: _type_1.JoinStyleType.Round }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Round = exports.Round || (exports.Round = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9qb2luLXN0eWxlcy9yb3VuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRDtBQUMxRCxtQ0FBc0M7QUFNdEMsSUFBaUIsS0FBSyxDQVdyQjtBQVhELFdBQWlCLEtBQUs7SUFLUCxVQUFJLEdBQXdCLElBQUksbUJBQVksQ0FBUTtRQUMvRCxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLHFCQUFhLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxxQkFBYSxDQUFDLEtBQUssRUFBQyxDQUFDLEVBQUM7U0FDdEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFYZ0IsS0FBSyxHQUFMLGFBQUssS0FBTCxhQUFLLFFBV3JCIiwiZmlsZSI6ImxpYi9qb2luLXN0eWxlcy9yb3VuZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtKb2luU3R5bGVUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJvdW5kIHtcbiAgdHlwZTogSm9pblN0eWxlVHlwZS5Sb3VuZDtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBSb3VuZCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJyb3VuZFwiO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxSb3VuZD4gPSBuZXcgRG9jdW1lbnRUeXBlPFJvdW5kPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogSm9pblN0eWxlVHlwZS50eXBlLCB2YWx1ZTogSm9pblN0eWxlVHlwZS5Sb3VuZH0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var curved_edge_1 = __webpack_require__(106);
exports.CurvedEdge = curved_edge_1.CurvedEdge;
var straight_edge_1 = __webpack_require__(107);
exports.StraightEdge = straight_edge_1.StraightEdge;
var style_change_1 = __webpack_require__(108);
exports.StyleChange = style_change_1.StyleChange;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zaGFwZS1yZWNvcmRzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkNBQXlDO0FBQWpDLG1DQUFBLFVBQVUsQ0FBQTtBQUNsQixpREFBNkM7QUFBckMsdUNBQUEsWUFBWSxDQUFBO0FBQ3BCLCtDQUEyQztBQUFuQyxxQ0FBQSxXQUFXLENBQUEiLCJmaWxlIjoibGliL3NoYXBlLXJlY29yZHMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge0N1cnZlZEVkZ2V9IGZyb20gXCIuL2N1cnZlZC1lZGdlXCI7XG5leHBvcnQge1N0cmFpZ2h0RWRnZX0gZnJvbSBcIi4vc3RyYWlnaHQtZWRnZVwiO1xuZXhwb3J0IHtTdHlsZUNoYW5nZX0gZnJvbSBcIi4vc3R5bGUtY2hhbmdlXCI7XG4iXX0=


/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const grid_fitting_1 = __webpack_require__(112);
const text_renderer_1 = __webpack_require__(113);
const _type_1 = __webpack_require__(3);
var CsmTextSettings;
(function (CsmTextSettings) {
    CsmTextSettings.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.CsmTextSettings }) },
            textId: { type: new kryo_1.Int32Type() },
            renderer: { type: text_renderer_1.TextRenderer.type },
            fitting: { type: grid_fitting_1.GridFitting.type },
            thickness: { type: new kryo_1.Float64Type() },
            sharpness: { type: new kryo_1.Float64Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(CsmTextSettings = exports.CsmTextSettings || (exports.CsmTextSettings = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2NzbS10ZXh0LXNldHRpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQWtGO0FBRWxGLHVEQUFpRDtBQUNqRCx5REFBbUQ7QUFFbkQsbUNBQWdDO0FBV2hDLElBQWlCLGVBQWUsQ0FxQi9CO0FBckJELFdBQWlCLGVBQWU7SUFVakIsb0JBQUksR0FBa0MsSUFBSSxtQkFBWSxDQUFrQjtRQUNuRixVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGVBQU8sQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxlQUFlLEVBQUMsQ0FBQyxFQUFDO1lBQ25GLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztZQUMvQixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsNEJBQVksQ0FBQyxJQUFJLEVBQUM7WUFDbkMsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLDBCQUFXLENBQUMsSUFBSSxFQUFDO1lBQ2pDLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNwQyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7U0FDckM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFyQmdCLGVBQWUsR0FBZix1QkFBZSxLQUFmLHVCQUFlLFFBcUIvQiIsImZpbGUiOiJsaWIvdGFncy9jc20tdGV4dC1zZXR0aW5ncy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEZsb2F0NjRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtGbG9hdDMyLCBVaW50MTZ9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtHcmlkRml0dGluZ30gZnJvbSBcIi4uL3RleHQvZ3JpZC1maXR0aW5nXCI7XG5pbXBvcnQge1RleHRSZW5kZXJlcn0gZnJvbSBcIi4uL3RleHQvdGV4dC1yZW5kZXJlclwiO1xuaW1wb3J0IHtfVGFnfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQge1RhZ1R5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ3NtVGV4dFNldHRpbmdzIGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuQ3NtVGV4dFNldHRpbmdzO1xuICB0ZXh0SWQ6IFVpbnQxNjtcbiAgcmVuZGVyZXI6IFRleHRSZW5kZXJlcjtcbiAgZml0dGluZzogR3JpZEZpdHRpbmc7XG4gIHRoaWNrbmVzczogRmxvYXQzMjtcbiAgc2hhcnBuZXNzOiBGbG9hdDMyO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIENzbVRleHRTZXR0aW5ncyB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJjc20tdGV4dC1zZXR0aW5nc1wiO1xuICAgIHRleHRfaWQ6IG51bWJlcjtcbiAgICByZW5kZXJlcjogVGV4dFJlbmRlcmVyLkpzb247XG4gICAgZml0dGluZzogR3JpZEZpdHRpbmcuSnNvbjtcbiAgICB0aGlja25lc3M6IG51bWJlcjtcbiAgICBzaGFycG5lc3M6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8Q3NtVGV4dFNldHRpbmdzPiA9IG5ldyBEb2N1bWVudFR5cGU8Q3NtVGV4dFNldHRpbmdzPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogVGFnVHlwZS50eXBlLCB2YWx1ZTogVGFnVHlwZS5Dc21UZXh0U2V0dGluZ3N9KX0sXG4gICAgICB0ZXh0SWQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgcmVuZGVyZXI6IHt0eXBlOiBUZXh0UmVuZGVyZXIudHlwZX0sXG4gICAgICBmaXR0aW5nOiB7dHlwZTogR3JpZEZpdHRpbmcudHlwZX0sXG4gICAgICB0aGlja25lc3M6IHt0eXBlOiBuZXcgRmxvYXQ2NFR5cGUoKX0sXG4gICAgICBzaGFycG5lc3M6IHt0eXBlOiBuZXcgRmxvYXQ2NFR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(3);
var DefineBinaryData;
(function (DefineBinaryData) {
    DefineBinaryData.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefineBinaryData }) },
            id: { type: new kryo_1.Int32Type() },
            data: { type: new kryo_1.BufferType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineBinaryData = exports.DefineBinaryData || (exports.DefineBinaryData = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS1iaW5hcnktZGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFpRjtBQUdqRixtQ0FBZ0M7QUFRaEMsSUFBaUIsZ0JBQWdCLENBZWhDO0FBZkQsV0FBaUIsZ0JBQWdCO0lBT2xCLHFCQUFJLEdBQW1DLElBQUksbUJBQVksQ0FBbUI7UUFDckYsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsZ0JBQWdCLEVBQUMsQ0FBQyxFQUFDO1lBQ3BGLEVBQUUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztZQUMzQixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBVSxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7U0FDcEQ7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFmZ0IsZ0JBQWdCLEdBQWhCLHdCQUFnQixLQUFoQix3QkFBZ0IsUUFlaEMiLCJmaWxlIjoibGliL3RhZ3MvZGVmaW5lLWJpbmFyeS1kYXRhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtCdWZmZXJUeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgSW50MzJUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDE2fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7X1RhZ30gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHtUYWdUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZUJpbmFyeURhdGEgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5EZWZpbmVCaW5hcnlEYXRhO1xuICBpZDogVWludDE2O1xuICBkYXRhOiBVaW50OEFycmF5O1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERlZmluZUJpbmFyeURhdGEge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwiZGVmaW5lLWJpbmFyeS1kYXRhXCI7XG4gICAgaWQ6IG51bWJlcjtcbiAgICBkYXRhOiBzdHJpbmc7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPERlZmluZUJpbmFyeURhdGE+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVCaW5hcnlEYXRhPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogVGFnVHlwZS50eXBlLCB2YWx1ZTogVGFnVHlwZS5EZWZpbmVCaW5hcnlEYXRhfSl9LFxuICAgICAgaWQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgZGF0YToge3R5cGU6IG5ldyBCdWZmZXJUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(3);
var DefineBitmap;
(function (DefineBitmap) {
    DefineBitmap.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefineBitmap }) },
            id: { type: new kryo_1.Int32Type() },
            width: { type: new kryo_1.Int32Type() },
            height: { type: new kryo_1.Int32Type() },
            data: { type: new kryo_1.BufferType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineBitmap = exports.DefineBitmap || (exports.DefineBitmap = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS1iaXRtYXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBaUY7QUFHakYsbUNBQWdDO0FBVWhDLElBQWlCLFlBQVksQ0FtQjVCO0FBbkJELFdBQWlCLFlBQVk7SUFTZCxpQkFBSSxHQUErQixJQUFJLG1CQUFZLENBQWU7UUFDN0UsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsWUFBWSxFQUFDLENBQUMsRUFBQztZQUNoRixFQUFFLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDM0IsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQzlCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztZQUMvQixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBVSxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7U0FDcEQ7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFuQmdCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBbUI1QiIsImZpbGUiOiJsaWIvdGFncy9kZWZpbmUtYml0bWFwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtCdWZmZXJUeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgSW50MzJUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDE2fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7X1RhZ30gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHtUYWdUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZUJpdG1hcCBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRlZmluZUJpdG1hcDtcbiAgaWQ6IFVpbnQxNjtcbiAgd2lkdGg6IFVpbnQxNjtcbiAgaGVpZ2h0OiBVaW50MTY7XG4gIGRhdGE6IFVpbnQ4QXJyYXk7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGVmaW5lQml0bWFwIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcImRlZmluZS1iaXRtYXBcIjtcbiAgICBpZDogbnVtYmVyO1xuICAgIHdpZHRoOiBudW1iZXI7XG4gICAgaGVpZ2h0OiBudW1iZXI7XG4gICAgZGF0YTogc3RyaW5nO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxEZWZpbmVCaXRtYXA+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVCaXRtYXA+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZUJpdG1hcH0pfSxcbiAgICAgIGlkOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIHdpZHRoOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIGhlaWdodDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICBkYXRhOiB7dHlwZTogbmV3IEJ1ZmZlclR5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(3);
var DefineCffFont;
(function (DefineCffFont) {
    DefineCffFont.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefineCffFont }) },
            id: { type: new kryo_1.Int32Type() },
            fontName: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
            isItalic: { type: new kryo_1.BooleanType() },
            isBold: { type: new kryo_1.BooleanType() },
            data: { type: new kryo_1.BufferType({ maxLength: Infinity }), optional: true },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineCffFont = exports.DefineCffFont || (exports.DefineCffFont = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS1jZmYtZm9udC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQVFjO0FBR2QsbUNBQWdDO0FBV2hDLElBQWlCLGFBQWEsQ0FxQjdCO0FBckJELFdBQWlCLGFBQWE7SUFVZixrQkFBSSxHQUFnQyxJQUFJLG1CQUFZLENBQWdCO1FBQy9FLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZUFBTyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLGFBQWEsRUFBQyxDQUFDLEVBQUM7WUFDakYsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQzNCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztZQUMzRCxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDbkMsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ2pDLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFVLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1NBQ3BFO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBckJnQixhQUFhLEdBQWIscUJBQWEsS0FBYixxQkFBYSxRQXFCN0IiLCJmaWxlIjoibGliL3RhZ3MvZGVmaW5lLWNmZi1mb250LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQm9vbGVhblR5cGUsXG4gIEJ1ZmZlclR5cGUsXG4gIENhc2VTdHlsZSxcbiAgRG9jdW1lbnRUeXBlLFxuICBJbnQzMlR5cGUsXG4gIExpdGVyYWxUeXBlLFxuICBVY3MyU3RyaW5nVHlwZSxcbn0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDE2fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7X1RhZ30gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHtUYWdUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZUNmZkZvbnQgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5EZWZpbmVDZmZGb250O1xuICBpZDogVWludDE2O1xuICBmb250TmFtZTogc3RyaW5nO1xuICBpc0l0YWxpYzogYm9vbGVhbjtcbiAgaXNCb2xkOiBib29sZWFuO1xuICBkYXRhPzogVWludDhBcnJheTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBEZWZpbmVDZmZGb250IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcImRlZmluZS1jZmYtZm9udFwiO1xuICAgIGlkOiBudW1iZXI7XG4gICAgZm9udF9uYW1lOiBzdHJpbmc7XG4gICAgaXNfaXRhbGljOiBib29sZWFuO1xuICAgIGlzX2JvbGQ6IGJvb2xlYW47XG4gICAgZGF0YT86IHN0cmluZztcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8RGVmaW5lQ2ZmRm9udD4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZUNmZkZvbnQ+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZUNmZkZvbnR9KX0sXG4gICAgICBpZDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICBmb250TmFtZToge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICAgIGlzSXRhbGljOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgaXNCb2xkOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgZGF0YToge3R5cGU6IG5ldyBCdWZmZXJUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const rect_1 = __webpack_require__(19);
const straight_s_rgba8_1 = __webpack_require__(5);
const text_alignment_1 = __webpack_require__(114);
const _type_1 = __webpack_require__(3);
var DefineDynamicText;
(function (DefineDynamicText) {
    DefineDynamicText.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefineDynamicText }) },
            id: { type: new kryo_1.Int32Type() },
            bounds: { type: rect_1.Rect.type },
            wordWrap: { type: new kryo_1.BooleanType() },
            multiline: { type: new kryo_1.BooleanType() },
            password: { type: new kryo_1.BooleanType() },
            readonly: { type: new kryo_1.BooleanType() },
            autoSize: { type: new kryo_1.BooleanType() },
            noSelect: { type: new kryo_1.BooleanType() },
            border: { type: new kryo_1.BooleanType() },
            wasStatic: { type: new kryo_1.BooleanType() },
            html: { type: new kryo_1.BooleanType() },
            useGlyphFont: { type: new kryo_1.BooleanType() },
            fontId: { type: new kryo_1.Int32Type(), optional: true },
            fontClass: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }), optional: true },
            fontSize: { type: new kryo_1.Int32Type(), optional: true },
            color: { type: straight_s_rgba8_1.StraightSRgba8.type, optional: true },
            maxLength: { type: new kryo_1.Int32Type(), optional: true },
            align: { type: text_alignment_1.TextAlignment.type, optional: true },
            marginLeft: { type: new kryo_1.Int32Type() },
            marginRight: { type: new kryo_1.Int32Type() },
            indent: { type: new kryo_1.Int32Type() },
            leading: { type: new kryo_1.Int32Type() },
            variableName: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }), optional: true },
            text: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }), optional: true },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineDynamicText = exports.DefineDynamicText || (exports.DefineDynamicText = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS1keW5hbWljLXRleHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBa0c7QUFFbEcsa0NBQTZCO0FBQzdCLDBEQUFtRDtBQUNuRCwyREFBcUQ7QUFFckQsbUNBQWdDO0FBOEJoQyxJQUFpQixpQkFBaUIsQ0EyRGpDO0FBM0RELFdBQWlCLGlCQUFpQjtJQTZCbkIsc0JBQUksR0FBb0MsSUFBSSxtQkFBWSxDQUFvQjtRQUN2RixVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGVBQU8sQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxpQkFBaUIsRUFBQyxDQUFDLEVBQUM7WUFDckYsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQzNCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxXQUFJLENBQUMsSUFBSSxFQUFDO1lBQ3pCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNuQyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDcEMsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ25DLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNuQyxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDbkMsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ25DLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNqQyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDcEMsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQy9CLFlBQVksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUN2QyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztZQUMvQyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztZQUM1RSxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztZQUNqRCxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsaUNBQWMsQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztZQUNsRCxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztZQUNsRCxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsOEJBQWEsQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztZQUNqRCxVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDbkMsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQ3BDLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztZQUMvQixPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDaEMsWUFBWSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDL0UsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7U0FDeEU7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUEzRGdCLGlCQUFpQixHQUFqQix5QkFBaUIsS0FBakIseUJBQWlCLFFBMkRqQyIsImZpbGUiOiJsaWIvdGFncy9kZWZpbmUtZHluYW1pYy10ZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtCb29sZWFuVHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZSwgTGl0ZXJhbFR5cGUsIFVjczJTdHJpbmdUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtTaW50MTYsIFVpbnQxNiwgVWludFNpemV9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtSZWN0fSBmcm9tIFwiLi4vcmVjdFwiO1xuaW1wb3J0IHtTdHJhaWdodFNSZ2JhOH0gZnJvbSBcIi4uL3N0cmFpZ2h0LXMtcmdiYThcIjtcbmltcG9ydCB7VGV4dEFsaWdubWVudH0gZnJvbSBcIi4uL3RleHQvdGV4dC1hbGlnbm1lbnRcIjtcbmltcG9ydCB7X1RhZ30gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHtUYWdUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZUR5bmFtaWNUZXh0IGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuRGVmaW5lRHluYW1pY1RleHQ7XG4gIGlkOiBVaW50MTY7XG4gIGJvdW5kczogUmVjdDtcbiAgd29yZFdyYXA6IGJvb2xlYW47XG4gIG11bHRpbGluZTogYm9vbGVhbjtcbiAgcGFzc3dvcmQ6IGJvb2xlYW47XG4gIHJlYWRvbmx5OiBib29sZWFuO1xuICBhdXRvU2l6ZTogYm9vbGVhbjtcbiAgbm9TZWxlY3Q6IGJvb2xlYW47XG4gIGJvcmRlcjogYm9vbGVhbjtcbiAgd2FzU3RhdGljOiBib29sZWFuO1xuICBodG1sOiBib29sZWFuO1xuICB1c2VHbHlwaEZvbnQ6IGJvb2xlYW47XG4gIGZvbnRJZD86IFVpbnQxNjtcbiAgZm9udENsYXNzPzogc3RyaW5nO1xuICBmb250U2l6ZT86IFVpbnQxNjtcbiAgY29sb3I/OiBTdHJhaWdodFNSZ2JhODtcbiAgbWF4TGVuZ3RoPzogVWludFNpemU7XG4gIGFsaWduPzogVGV4dEFsaWdubWVudDtcbiAgbWFyZ2luTGVmdDogVWludDE2O1xuICBtYXJnaW5SaWdodDogVWludDE2O1xuICBpbmRlbnQ6IFVpbnQxNjtcbiAgbGVhZGluZzogU2ludDE2O1xuICB2YXJpYWJsZU5hbWU/OiBzdHJpbmc7XG4gIHRleHQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGVmaW5lRHluYW1pY1RleHQge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwiZGVmaW5lLWR5bmFtaWMtdGV4dFwiO1xuICAgIGlkOiBudW1iZXI7XG4gICAgYm91bmRzOiBSZWN0Lkpzb247XG4gICAgd29yZF93cmFwOiBib29sZWFuO1xuICAgIG11bHRpbGluZTogYm9vbGVhbjtcbiAgICBwYXNzd29yZDogYm9vbGVhbjtcbiAgICByZWFkb25seTogYm9vbGVhbjtcbiAgICBhdXRvX3NpemU6IGJvb2xlYW47XG4gICAgbm9fc2VsZWN0OiBib29sZWFuO1xuICAgIGJvcmRlcjogYm9vbGVhbjtcbiAgICB3YXNfc3RhdGljOiBib29sZWFuO1xuICAgIGh0bWw6IGJvb2xlYW47XG4gICAgdXNlX2dseXBoX2ZvbnQ6IGJvb2xlYW47XG4gICAgZm9udF9pZD86IG51bWJlcjtcbiAgICBmb250X2NsYXNzPzogc3RyaW5nO1xuICAgIGZvbnRfc2l6ZT86IG51bWJlcjtcbiAgICBjb2xvcj86IFN0cmFpZ2h0U1JnYmE4Lkpzb247XG4gICAgbWF4X2xlbmd0aD86IG51bWJlcjtcbiAgICBhbGlnbj86IFRleHRBbGlnbm1lbnQuSnNvbjtcbiAgICBtYXJnaW5fbGVmdDogbnVtYmVyO1xuICAgIG1hcmdpbl9yaWdodDogbnVtYmVyO1xuICAgIGluZGVudDogbnVtYmVyO1xuICAgIGxlYWRpbmc6IG51bWJlcjtcbiAgICB2YXJpYWJsZV9uYW1lPzogc3RyaW5nO1xuICAgIHRleHQ/OiBzdHJpbmc7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPERlZmluZUR5bmFtaWNUZXh0PiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lRHluYW1pY1RleHQ+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZUR5bmFtaWNUZXh0fSl9LFxuICAgICAgaWQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgYm91bmRzOiB7dHlwZTogUmVjdC50eXBlfSxcbiAgICAgIHdvcmRXcmFwOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgbXVsdGlsaW5lOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgcGFzc3dvcmQ6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICByZWFkb25seToge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIGF1dG9TaXplOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgbm9TZWxlY3Q6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBib3JkZXI6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICB3YXNTdGF0aWM6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBodG1sOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgdXNlR2x5cGhGb250OiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgZm9udElkOiB7dHlwZTogbmV3IEludDMyVHlwZSgpLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgICBmb250Q2xhc3M6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KSwgb3B0aW9uYWw6IHRydWV9LFxuICAgICAgZm9udFNpemU6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICAgIGNvbG9yOiB7dHlwZTogU3RyYWlnaHRTUmdiYTgudHlwZSwgb3B0aW9uYWw6IHRydWV9LFxuICAgICAgbWF4TGVuZ3RoOiB7dHlwZTogbmV3IEludDMyVHlwZSgpLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgICBhbGlnbjoge3R5cGU6IFRleHRBbGlnbm1lbnQudHlwZSwgb3B0aW9uYWw6IHRydWV9LFxuICAgICAgbWFyZ2luTGVmdDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICBtYXJnaW5SaWdodDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICBpbmRlbnQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgbGVhZGluZzoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICB2YXJpYWJsZU5hbWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KSwgb3B0aW9uYWw6IHRydWV9LFxuICAgICAgdGV4dDoge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const glyph_1 = __webpack_require__(60);
const language_code_1 = __webpack_require__(62);
const font_layout_1 = __webpack_require__(115);
const _type_1 = __webpack_require__(3);
var DefineFont;
(function (DefineFont) {
    DefineFont.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefineFont }) },
            id: { type: new kryo_1.Int32Type() },
            fontName: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
            isSmall: { type: new kryo_1.BooleanType() },
            isShiftJis: { type: new kryo_1.BooleanType() },
            isAnsi: { type: new kryo_1.BooleanType() },
            isItalic: { type: new kryo_1.BooleanType() },
            isBold: { type: new kryo_1.BooleanType() },
            language: { type: language_code_1.LanguageCode.type },
            glyphs: { type: new kryo_1.ArrayType({ itemType: glyph_1.Glyph.type, maxLength: Infinity }), optional: true },
            codeUnits: { type: new kryo_1.ArrayType({ itemType: new kryo_1.Int32Type(), maxLength: Infinity }), optional: true },
            layout: { type: font_layout_1.FontLayout.type, optional: true },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineFont = exports.DefineFont || (exports.DefineFont = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS1mb250LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBUWM7QUFFZCxvQ0FBK0I7QUFDL0Isb0RBQThDO0FBQzlDLHFEQUErQztBQUUvQyxtQ0FBZ0M7QUFpQmhDLElBQWlCLFVBQVUsQ0FpQzFCO0FBakNELFdBQWlCLFVBQVU7SUFnQlosZUFBSSxHQUE2QixJQUFJLG1CQUFZLENBQWE7UUFDekUsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsVUFBVSxFQUFDLENBQUMsRUFBQztZQUM5RSxFQUFFLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDM0IsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1lBQzNELE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNsQyxVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDckMsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ2pDLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNuQyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDakMsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLDRCQUFZLENBQUMsSUFBSSxFQUFDO1lBQ25DLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsYUFBSyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1lBQzFGLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztZQUNsRyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQztTQUNoRDtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWpDZ0IsVUFBVSxHQUFWLGtCQUFVLEtBQVYsa0JBQVUsUUFpQzFCIiwiZmlsZSI6ImxpYi90YWdzL2RlZmluZS1mb250LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQXJyYXlUeXBlLFxuICBCb29sZWFuVHlwZSxcbiAgQ2FzZVN0eWxlLFxuICBEb2N1bWVudFR5cGUsXG4gIEludDMyVHlwZSxcbiAgTGl0ZXJhbFR5cGUsXG4gIFVjczJTdHJpbmdUeXBlLFxufSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50MTYsIFVpbnQzMn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0dseXBofSBmcm9tIFwiLi4vZ2x5cGhcIjtcbmltcG9ydCB7TGFuZ3VhZ2VDb2RlfSBmcm9tIFwiLi4vbGFuZ3VhZ2UtY29kZVwiO1xuaW1wb3J0IHtGb250TGF5b3V0fSBmcm9tIFwiLi4vdGV4dC9mb250LWxheW91dFwiO1xuaW1wb3J0IHtfVGFnfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQge1RhZ1R5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lRm9udCBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRlZmluZUZvbnQ7XG4gIGlkOiBVaW50MTY7XG4gIGZvbnROYW1lOiBzdHJpbmc7XG4gIGlzU21hbGw6IGJvb2xlYW47XG4gIGlzU2hpZnRKaXM6IGJvb2xlYW47XG4gIGlzQW5zaTogYm9vbGVhbjtcbiAgaXNJdGFsaWM6IGJvb2xlYW47XG4gIGlzQm9sZDogYm9vbGVhbjtcbiAgbGFuZ3VhZ2U6IExhbmd1YWdlQ29kZTtcbiAgZ2x5cGhzPzogR2x5cGhbXTtcbiAgY29kZVVuaXRzPzogVWludDE2W107XG4gIGxheW91dD86IEZvbnRMYXlvdXQ7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGVmaW5lRm9udCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJkZWZpbmUtZm9udFwiO1xuICAgIGlkOiBudW1iZXI7XG4gICAgZm9udF9uYW1lOiBzdHJpbmc7XG4gICAgaXNfc21hbGw6IGJvb2xlYW47XG4gICAgaXNfc2hpZnRfamlzOiBib29sZWFuO1xuICAgIGlzX2Fuc2k6IGJvb2xlYW47XG4gICAgaXNfaXRhbGljOiBib29sZWFuO1xuICAgIGlzX2JvbGQ6IGJvb2xlYW47XG4gICAgbGFuZ3VhZ2U6IExhbmd1YWdlQ29kZS5Kc29uO1xuICAgIGdseXBocz86IEdseXBoW107XG4gICAgY29kZV91bml0cz86IG51bWJlcltdO1xuICAgIGxheW91dD86IEZvbnRMYXlvdXQuSnNvbjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8RGVmaW5lRm9udD4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZUZvbnQ+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZUZvbnR9KX0sXG4gICAgICBpZDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICBmb250TmFtZToge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICAgIGlzU21hbGw6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBpc1NoaWZ0SmlzOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgaXNBbnNpOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgaXNJdGFsaWM6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBpc0JvbGQ6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBsYW5ndWFnZToge3R5cGU6IExhbmd1YWdlQ29kZS50eXBlfSxcbiAgICAgIGdseXBoczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBHbHlwaC50eXBlLCBtYXhMZW5ndGg6IEluZmluaXR5fSksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICAgIGNvZGVVbml0czoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBuZXcgSW50MzJUeXBlKCksIG1heExlbmd0aDogSW5maW5pdHl9KSwgb3B0aW9uYWw6IHRydWV9LFxuICAgICAgbGF5b3V0OiB7dHlwZTogRm9udExheW91dC50eXBlLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const csm_table_hint_1 = __webpack_require__(117);
const font_alignment_zone_1 = __webpack_require__(118);
const _type_1 = __webpack_require__(3);
var DefineFontAlignZones;
(function (DefineFontAlignZones) {
    DefineFontAlignZones.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefineFontAlignZones }) },
            fontId: { type: new kryo_1.Int32Type() },
            csmTableHint: { type: csm_table_hint_1.CsmTableHint.type },
            zones: { type: new kryo_1.ArrayType({ itemType: font_alignment_zone_1.FontAlignmentZone.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineFontAlignZones = exports.DefineFontAlignZones || (exports.DefineFontAlignZones = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS1mb250LWFsaWduLXpvbmVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQWdGO0FBRWhGLDJEQUFvRDtBQUNwRCxxRUFBOEQ7QUFFOUQsbUNBQWdDO0FBU2hDLElBQWlCLG9CQUFvQixDQWlCcEM7QUFqQkQsV0FBaUIsb0JBQW9CO0lBUXRCLHlCQUFJLEdBQXVDLElBQUksbUJBQVksQ0FBdUI7UUFDN0YsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsb0JBQW9CLEVBQUMsQ0FBQyxFQUFDO1lBQ3hGLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztZQUMvQixZQUFZLEVBQUUsRUFBQyxJQUFJLEVBQUUsNkJBQVksQ0FBQyxJQUFJLEVBQUM7WUFDdkMsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSx1Q0FBaUIsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7U0FDdEY7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFqQmdCLG9CQUFvQixHQUFwQiw0QkFBb0IsS0FBcEIsNEJBQW9CLFFBaUJwQyIsImZpbGUiOiJsaWIvdGFncy9kZWZpbmUtZm9udC1hbGlnbi16b25lcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXJyYXlUeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgSW50MzJUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDE2fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7Q3NtVGFibGVIaW50fSBmcm9tIFwiLi4vdGV4dC9jc20tdGFibGUtaGludFwiO1xuaW1wb3J0IHtGb250QWxpZ25tZW50Wm9uZX0gZnJvbSBcIi4uL3RleHQvZm9udC1hbGlnbm1lbnQtem9uZVwiO1xuaW1wb3J0IHtfVGFnfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQge1RhZ1R5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lRm9udEFsaWduWm9uZXMgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5EZWZpbmVGb250QWxpZ25ab25lcztcbiAgZm9udElkOiBVaW50MTY7XG4gIGNzbVRhYmxlSGludDogQ3NtVGFibGVIaW50O1xuICB6b25lczogRm9udEFsaWdubWVudFpvbmVbXTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBEZWZpbmVGb250QWxpZ25ab25lcyB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJkZWZpbmUtZm9udC1hbGlnbi16b25lc1wiO1xuICAgIGZvbnRfaWQ6IG51bWJlcjtcbiAgICBjc21fdGFibGVfaGludDogQ3NtVGFibGVIaW50Lkpzb247XG4gICAgem9uZXM6IEZvbnRBbGlnbm1lbnRab25lLkpzb25bXTtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8RGVmaW5lRm9udEFsaWduWm9uZXM+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVGb250QWxpZ25ab25lcz4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IFRhZ1R5cGUudHlwZSwgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lRm9udEFsaWduWm9uZXN9KX0sXG4gICAgICBmb250SWQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgY3NtVGFibGVIaW50OiB7dHlwZTogQ3NtVGFibGVIaW50LnR5cGV9LFxuICAgICAgem9uZXM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogRm9udEFsaWdubWVudFpvbmUudHlwZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const language_code_1 = __webpack_require__(62);
const _type_1 = __webpack_require__(3);
var DefineFontInfo;
(function (DefineFontInfo) {
    DefineFontInfo.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefineFontInfo }) },
            fontId: { type: new kryo_1.Int32Type() },
            fontName: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
            isSmall: { type: new kryo_1.BooleanType() },
            isShiftJis: { type: new kryo_1.BooleanType() },
            isAnsi: { type: new kryo_1.BooleanType() },
            isItalic: { type: new kryo_1.BooleanType() },
            isBold: { type: new kryo_1.BooleanType() },
            language: { type: language_code_1.LanguageCode.type, optional: true },
            codeUnits: { type: new kryo_1.ArrayType({ itemType: new kryo_1.Int32Type(), maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineFontInfo = exports.DefineFontInfo || (exports.DefineFontInfo = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS1mb250LWluZm8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBNkc7QUFFN0csb0RBQThDO0FBRTlDLHlDQUFzQztBQWV0QyxJQUFpQixjQUFjLENBNkI5QjtBQTdCRCxXQUFpQixjQUFjO0lBY2hCLG1CQUFJLEdBQWlDLElBQUksbUJBQVksQ0FBaUI7UUFDakYsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsY0FBYyxFQUFDLENBQUMsRUFBQztZQUNsRixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDL0IsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1lBQzNELE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNsQyxVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDckMsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ2pDLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNuQyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDakMsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLDRCQUFZLENBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDbkQsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUNuRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQTdCZ0IsY0FBYyxHQUFkLHNCQUFjLEtBQWQsc0JBQWMsUUE2QjlCIiwiZmlsZSI6ImxpYi90YWdzL2RlZmluZS1mb250LWluZm8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FycmF5VHlwZSwgQm9vbGVhblR5cGUsIENhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlLCBVY3MyU3RyaW5nVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDE2fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7TGFuZ3VhZ2VDb2RlfSBmcm9tIFwiLi4vbGFuZ3VhZ2UtY29kZVwiO1xuaW1wb3J0IHtfVGFnfSBmcm9tIFwiLi4vdGFncy9fdGFnXCI7XG5pbXBvcnQge1RhZ1R5cGV9IGZyb20gXCIuLi90YWdzL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lRm9udEluZm8gZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5EZWZpbmVGb250SW5mbztcbiAgZm9udElkOiBVaW50MTY7XG4gIGZvbnROYW1lOiBzdHJpbmc7XG4gIGlzU21hbGw6IGJvb2xlYW47XG4gIGlzU2hpZnRKaXM6IGJvb2xlYW47XG4gIGlzQW5zaTogYm9vbGVhbjtcbiAgaXNJdGFsaWM6IGJvb2xlYW47XG4gIGlzQm9sZDogYm9vbGVhbjtcbiAgbGFuZ3VhZ2U/OiBMYW5ndWFnZUNvZGU7XG4gIGNvZGVVbml0czogVWludDE2W107XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGVmaW5lRm9udEluZm8ge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwiZGVmaW5lLWZvbnQtaW5mb1wiO1xuICAgIGZvbnRfaWQ6IG51bWJlcjtcbiAgICBmb250X25hbWU6IHN0cmluZztcbiAgICBpc19zbWFsbDogYm9vbGVhbjtcbiAgICBpc19zaGlmdF9qaXM6IGJvb2xlYW47XG4gICAgaXNfYW5zaTogYm9vbGVhbjtcbiAgICBpc19pdGFsaWM6IGJvb2xlYW47XG4gICAgaXNfYm9sZDogYm9vbGVhbjtcbiAgICBsYW5ndWFnZT86IExhbmd1YWdlQ29kZS5Kc29uO1xuICAgIGNvZGVfdW5pdHM6IG51bWJlcltdO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxEZWZpbmVGb250SW5mbz4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZUZvbnRJbmZvPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogVGFnVHlwZS50eXBlLCB2YWx1ZTogVGFnVHlwZS5EZWZpbmVGb250SW5mb30pfSxcbiAgICAgIGZvbnRJZDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICBmb250TmFtZToge3R5cGU6IG5ldyBVY3MyU3RyaW5nVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICAgIGlzU21hbGw6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBpc1NoaWZ0SmlzOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgaXNBbnNpOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgaXNJdGFsaWM6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBpc0JvbGQ6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBsYW5ndWFnZToge3R5cGU6IExhbmd1YWdlQ29kZS50eXBlLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgICBjb2RlVW5pdHM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogbmV3IEludDMyVHlwZSgpLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(3);
var DefineFontName;
(function (DefineFontName) {
    DefineFontName.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefineFontName }) },
            fontId: { type: new kryo_1.Int32Type() },
            name: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
            copyright: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineFontName = exports.DefineFontName || (exports.DefineFontName = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS1mb250LW5hbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBcUY7QUFHckYsbUNBQWdDO0FBU2hDLElBQWlCLGNBQWMsQ0FpQjlCO0FBakJELFdBQWlCLGNBQWM7SUFRaEIsbUJBQUksR0FBaUMsSUFBSSxtQkFBWSxDQUFpQjtRQUNqRixVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGVBQU8sQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxjQUFjLEVBQUMsQ0FBQyxFQUFDO1lBQ2xGLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztZQUMvQixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxxQkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7WUFDdkQsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQzdEO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBakJnQixjQUFjLEdBQWQsc0JBQWMsS0FBZCxzQkFBYyxRQWlCOUIiLCJmaWxlIjoibGliL3RhZ3MvZGVmaW5lLWZvbnQtbmFtZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZSwgTGl0ZXJhbFR5cGUsIFVjczJTdHJpbmdUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50MTZ9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtfVGFnfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQge1RhZ1R5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lRm9udE5hbWUgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5EZWZpbmVGb250TmFtZTtcbiAgZm9udElkOiBVaW50MTY7XG4gIG5hbWU6IHN0cmluZztcbiAgY29weXJpZ2h0OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGVmaW5lRm9udE5hbWUge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwiZGVmaW5lLWZvbnQtbmFtZVwiO1xuICAgIGZvbnRfaWQ6IG51bWJlcjtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgY29weXJpZ2h0OiBzdHJpbmc7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPERlZmluZUZvbnROYW1lPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lRm9udE5hbWU+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZUZvbnROYW1lfSl9LFxuICAgICAgZm9udElkOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIG5hbWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgICBjb3B5cmlnaHQ6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(3);
var DefineJpeg;
(function (DefineJpeg) {
    DefineJpeg.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefineJpeg }) },
            id: { type: new kryo_1.Int32Type() },
            image: { type: new kryo_1.BufferType({ maxLength: Infinity }) },
            alpha: { type: new kryo_1.BufferType({ maxLength: Infinity }), optional: true },
            deblocking: { type: new kryo_1.Int32Type(), optional: true },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineJpeg = exports.DefineJpeg || (exports.DefineJpeg = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS1qcGVnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQWlGO0FBR2pGLG1DQUFnQztBQVVoQyxJQUFpQixVQUFVLENBbUIxQjtBQW5CRCxXQUFpQixVQUFVO0lBU1osZUFBSSxHQUE2QixJQUFJLG1CQUFZLENBQWE7UUFDekUsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsVUFBVSxFQUFDLENBQUMsRUFBQztZQUM5RSxFQUFFLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDM0IsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVUsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1lBQ3BELEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFVLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1lBQ3BFLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1NBQ3BEO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBbkJnQixVQUFVLEdBQVYsa0JBQVUsS0FBVixrQkFBVSxRQW1CMUIiLCJmaWxlIjoibGliL3RhZ3MvZGVmaW5lLWpwZWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0J1ZmZlclR5cGUsIENhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50MTZ9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtfVGFnfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQge1RhZ1R5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lSnBlZyBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRlZmluZUpwZWc7XG4gIGlkOiBVaW50MTY7XG4gIGltYWdlOiBVaW50OEFycmF5O1xuICBhbHBoYT86IFVpbnQ4QXJyYXk7XG4gIGRlYmxvY2tpbmc/OiBVaW50MTY7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGVmaW5lSnBlZyB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJkZWZpbmUtanBlZ1wiO1xuICAgIGlkOiBudW1iZXI7XG4gICAgaW1hZ2U6IHN0cmluZztcbiAgICBhbHBoYT86IHN0cmluZztcbiAgICBkZWJsb2NraW5nPzogbnVtYmVyO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxEZWZpbmVKcGVnPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lSnBlZz4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IFRhZ1R5cGUudHlwZSwgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lSnBlZ30pfSxcbiAgICAgIGlkOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIGltYWdlOiB7dHlwZTogbmV3IEJ1ZmZlclR5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgICBhbHBoYToge3R5cGU6IG5ldyBCdWZmZXJUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICAgIGRlYmxvY2tpbmc6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const glyph_1 = __webpack_require__(60);
const _type_1 = __webpack_require__(3);
var DefinePartialFont;
(function (DefinePartialFont) {
    DefinePartialFont.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefinePartialFont }) },
            id: { type: new kryo_1.Int32Type() },
            glyphs: { type: new kryo_1.ArrayType({ itemType: glyph_1.Glyph.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefinePartialFont = exports.DefinePartialFont || (exports.DefinePartialFont = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS1wYXJ0aWFsLWZvbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBZ0Y7QUFFaEYsb0NBQStCO0FBRS9CLG1DQUFnQztBQVFoQyxJQUFpQixpQkFBaUIsQ0FlakM7QUFmRCxXQUFpQixpQkFBaUI7SUFPbkIsc0JBQUksR0FBb0MsSUFBSSxtQkFBWSxDQUFvQjtRQUN2RixVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGVBQU8sQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxpQkFBaUIsRUFBQyxDQUFDLEVBQUM7WUFDckYsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQzNCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsYUFBSyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUMzRTtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWZnQixpQkFBaUIsR0FBakIseUJBQWlCLEtBQWpCLHlCQUFpQixRQWVqQyIsImZpbGUiOiJsaWIvdGFncy9kZWZpbmUtcGFydGlhbC1mb250LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcnJheVR5cGUsIENhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50MTZ9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtHbHlwaH0gZnJvbSBcIi4uL2dseXBoXCI7XG5pbXBvcnQge19UYWd9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7VGFnVHlwZX0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVQYXJ0aWFsRm9udCBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRlZmluZVBhcnRpYWxGb250O1xuICBpZDogVWludDE2O1xuICBnbHlwaHM6IEdseXBoW107XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGVmaW5lUGFydGlhbEZvbnQge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwiZGVmaW5lLXBhcnRpYWwtZm9udFwiO1xuICAgIGlkOiBudW1iZXI7XG4gICAgZ2x5cGhzOiBHbHlwaFtdO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxEZWZpbmVQYXJ0aWFsRm9udD4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZVBhcnRpYWxGb250Pih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogVGFnVHlwZS50eXBlLCB2YWx1ZTogVGFnVHlwZS5EZWZpbmVQYXJ0aWFsRm9udH0pfSxcbiAgICAgIGlkOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIGdseXBoczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBHbHlwaC50eXBlLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(3);
var DefinePartialJpeg;
(function (DefinePartialJpeg) {
    DefinePartialJpeg.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefinePartialJpeg }) },
            id: { type: new kryo_1.Int32Type() },
            data: { type: new kryo_1.BufferType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefinePartialJpeg = exports.DefinePartialJpeg || (exports.DefinePartialJpeg = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS1wYXJ0aWFsLWpwZWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBaUY7QUFHakYsbUNBQWdDO0FBUWhDLElBQWlCLGlCQUFpQixDQWVqQztBQWZELFdBQWlCLGlCQUFpQjtJQU9uQixzQkFBSSxHQUFvQyxJQUFJLG1CQUFZLENBQW9CO1FBQ3ZGLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZUFBTyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLGlCQUFpQixFQUFDLENBQUMsRUFBQztZQUNyRixFQUFFLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDM0IsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVUsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQ3BEO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBZmdCLGlCQUFpQixHQUFqQix5QkFBaUIsS0FBakIseUJBQWlCLFFBZWpDIiwiZmlsZSI6ImxpYi90YWdzL2RlZmluZS1wYXJ0aWFsLWpwZWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0J1ZmZlclR5cGUsIENhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50MTZ9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtfVGFnfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQge1RhZ1R5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaW5lUGFydGlhbEpwZWcgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5EZWZpbmVQYXJ0aWFsSnBlZztcbiAgaWQ6IFVpbnQxNjtcbiAgZGF0YTogVWludDhBcnJheTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBEZWZpbmVQYXJ0aWFsSnBlZyB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJkZWZpbmUtcGFydGlhbC1qcGVnXCI7XG4gICAgaWQ6IG51bWJlcjtcbiAgICBkYXRhOiBzdHJpbmc7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPERlZmluZVBhcnRpYWxKcGVnPiA9IG5ldyBEb2N1bWVudFR5cGU8RGVmaW5lUGFydGlhbEpwZWc+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZVBhcnRpYWxKcGVnfSl9LFxuICAgICAgaWQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgZGF0YToge3R5cGU6IG5ldyBCdWZmZXJUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const label_1 = __webpack_require__(120);
const scene_1 = __webpack_require__(121);
const _type_1 = __webpack_require__(3);
var DefineSceneAndFrameLabelData;
(function (DefineSceneAndFrameLabelData) {
    DefineSceneAndFrameLabelData.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefineSceneAndFrameLabelData }) },
            scenes: { type: new kryo_1.ArrayType({ itemType: scene_1.Scene.type, maxLength: Infinity }) },
            labels: { type: new kryo_1.ArrayType({ itemType: label_1.Label.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineSceneAndFrameLabelData = exports.DefineSceneAndFrameLabelData || (exports.DefineSceneAndFrameLabelData = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS1zY2VuZS1hbmQtZnJhbWUtbGFiZWwtZGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxRTtBQUNyRSw0Q0FBdUM7QUFDdkMsNENBQXVDO0FBRXZDLG1DQUFnQztBQVFoQyxJQUFpQiw0QkFBNEIsQ0FlNUM7QUFmRCxXQUFpQiw0QkFBNEI7SUFPOUIsaUNBQUksR0FBK0MsSUFBSSxtQkFBWSxDQUErQjtRQUM3RyxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGVBQU8sQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyw0QkFBNEIsRUFBQyxDQUFDLEVBQUM7WUFDaEcsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxhQUFLLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1lBQzFFLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsYUFBSyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUMzRTtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWZnQiw0QkFBNEIsR0FBNUIsb0NBQTRCLEtBQTVCLG9DQUE0QixRQWU1QyIsImZpbGUiOiJsaWIvdGFncy9kZWZpbmUtc2NlbmUtYW5kLWZyYW1lLWxhYmVsLWRhdGEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FycmF5VHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtMYWJlbH0gZnJvbSBcIi4uL2NvbnRyb2wvbGFiZWxcIjtcbmltcG9ydCB7U2NlbmV9IGZyb20gXCIuLi9jb250cm9sL3NjZW5lXCI7XG5pbXBvcnQge19UYWd9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7VGFnVHlwZX0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZpbmVTY2VuZUFuZEZyYW1lTGFiZWxEYXRhIGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuRGVmaW5lU2NlbmVBbmRGcmFtZUxhYmVsRGF0YTtcbiAgc2NlbmVzOiBTY2VuZVtdO1xuICBsYWJlbHM6IExhYmVsW107XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGVmaW5lU2NlbmVBbmRGcmFtZUxhYmVsRGF0YSB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJkZWZpbmUtc2NlbmUtYW5kLWZyYW1lLWxhYmVsLWRhdGFcIjtcbiAgICBzY2VuZXM6IFNjZW5lLkpzb25bXTtcbiAgICBsYWJlbHM6IExhYmVsLkpzb25bXTtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8RGVmaW5lU2NlbmVBbmRGcmFtZUxhYmVsRGF0YT4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZVNjZW5lQW5kRnJhbWVMYWJlbERhdGE+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZVNjZW5lQW5kRnJhbWVMYWJlbERhdGF9KX0sXG4gICAgICBzY2VuZXM6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogU2NlbmUudHlwZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICAgIGxhYmVsczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBMYWJlbC50eXBlLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const rect_1 = __webpack_require__(19);
const shape_1 = __webpack_require__(122);
const _type_1 = __webpack_require__(3);
var DefineShape;
(function (DefineShape) {
    DefineShape.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefineShape }) },
            id: { type: new kryo_1.Int32Type() },
            bounds: { type: rect_1.Rect.type },
            edgeBounds: { type: rect_1.Rect.type, optional: true },
            hasFillWinding: { type: new kryo_1.BooleanType() },
            hasNonScalingStrokes: { type: new kryo_1.BooleanType() },
            hasScalingStrokes: { type: new kryo_1.BooleanType() },
            shape: { type: shape_1.Shape.type },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineShape = exports.DefineShape || (exports.DefineShape = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS1zaGFwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFrRjtBQUVsRixrQ0FBNkI7QUFDN0Isb0NBQStCO0FBRS9CLG1DQUFnQztBQWFoQyxJQUFpQixXQUFXLENBeUIzQjtBQXpCRCxXQUFpQixXQUFXO0lBWWIsZ0JBQUksR0FBOEIsSUFBSSxtQkFBWSxDQUFjO1FBQzNFLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZUFBTyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLFdBQVcsRUFBQyxDQUFDLEVBQUM7WUFDL0UsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQzNCLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxXQUFJLENBQUMsSUFBSSxFQUFDO1lBQ3pCLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxXQUFJLENBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDN0MsY0FBYyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ3pDLG9CQUFvQixFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQy9DLGlCQUFpQixFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQzVDLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxhQUFLLENBQUMsSUFBSSxFQUFDO1NBQzFCO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBekJnQixXQUFXLEdBQVgsbUJBQVcsS0FBWCxtQkFBVyxRQXlCM0IiLCJmaWxlIjoibGliL3RhZ3MvZGVmaW5lLXNoYXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtCb29sZWFuVHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1VpbnQxNn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge1JlY3R9IGZyb20gXCIuLi9yZWN0XCI7XG5pbXBvcnQge1NoYXBlfSBmcm9tIFwiLi4vc2hhcGVcIjtcbmltcG9ydCB7X1RhZ30gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHtUYWdUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZVNoYXBlIGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuRGVmaW5lU2hhcGU7XG4gIGlkOiBVaW50MTY7XG4gIGJvdW5kczogUmVjdDtcbiAgZWRnZUJvdW5kcz86IFJlY3Q7XG4gIGhhc0ZpbGxXaW5kaW5nOiBib29sZWFuO1xuICBoYXNOb25TY2FsaW5nU3Ryb2tlczogYm9vbGVhbjtcbiAgaGFzU2NhbGluZ1N0cm9rZXM6IGJvb2xlYW47XG4gIHNoYXBlOiBTaGFwZTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBEZWZpbmVTaGFwZSB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJkZWZpbmUtc2hhcGVcIjtcbiAgICBpZDogbnVtYmVyO1xuICAgIGJvdW5kczogUmVjdC5Kc29uO1xuICAgIGVkZ2VfYm91bmRzPzogUmVjdC5Kc29uO1xuICAgIGhhc19maWxsX3dpbmRpbmc6IGJvb2xlYW47XG4gICAgaGFzX25vbl9zY2FsaW5nX3N0cm9rZXM6IGJvb2xlYW47XG4gICAgaGFzX3NjYWxpbmdfc3Ryb2tlczogYm9vbGVhbjtcbiAgICBzaGFwZTogU2hhcGUuSnNvbjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8RGVmaW5lU2hhcGU+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVTaGFwZT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IFRhZ1R5cGUudHlwZSwgdmFsdWU6IFRhZ1R5cGUuRGVmaW5lU2hhcGV9KX0sXG4gICAgICBpZDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICBib3VuZHM6IHt0eXBlOiBSZWN0LnR5cGV9LFxuICAgICAgZWRnZUJvdW5kczoge3R5cGU6IFJlY3QudHlwZSwgb3B0aW9uYWw6IHRydWV9LFxuICAgICAgaGFzRmlsbFdpbmRpbmc6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBoYXNOb25TY2FsaW5nU3Ryb2tlczoge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIGhhc1NjYWxpbmdTdHJva2VzOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgc2hhcGU6IHt0eXBlOiBTaGFwZS50eXBlfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _circular_references_1 = __webpack_require__(14);
const _type_1 = __webpack_require__(3);
var DefineSprite;
(function (DefineSprite) {
    DefineSprite.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefineSprite }) },
            id: { type: new kryo_1.Int32Type() },
            frameCount: { type: new kryo_1.Int32Type() },
            tags: { type: new kryo_1.ArrayType({ itemType: _circular_references_1.Tag.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineSprite = exports.DefineSprite || (exports.DefineSprite = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS1zcHJpdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBZ0Y7QUFFaEYsa0VBQW9EO0FBR3BELG1DQUFnQztBQVNoQyxJQUFpQixZQUFZLENBaUI1QjtBQWpCRCxXQUFpQixZQUFZO0lBUWQsaUJBQUksR0FBK0IsSUFBSSxtQkFBWSxDQUFlO1FBQzdFLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZUFBTyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLFlBQVksRUFBQyxDQUFDLEVBQUM7WUFDaEYsRUFBRSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQzNCLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBQztZQUNuQyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLDBCQUFJLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQ3hFO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBakJnQixZQUFZLEdBQVosb0JBQVksS0FBWixvQkFBWSxRQWlCNUIiLCJmaWxlIjoibGliL3RhZ3MvZGVmaW5lLXNwcml0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXJyYXlUeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgSW50MzJUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDE2fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7VGFnIGFzICRUYWd9IGZyb20gXCIuLi9fY2lyY3VsYXItcmVmZXJlbmNlc1wiO1xuaW1wb3J0IHtUYWd9IGZyb20gXCIuLi90YWdcIjtcbmltcG9ydCB7X1RhZ30gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHtUYWdUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZVNwcml0ZSBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRlZmluZVNwcml0ZTtcbiAgaWQ6IFVpbnQxNjtcbiAgZnJhbWVDb3VudDogVWludDE2O1xuICB0YWdzOiBUYWdbXTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBEZWZpbmVTcHJpdGUge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwiZGVmaW5lLXNwcml0ZVwiO1xuICAgIGlkOiBudW1iZXI7XG4gICAgZnJhbWVfY291bnQ6IG51bWJlcjtcbiAgICB0YWdzOiBUYWcuSnNvbltdO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxEZWZpbmVTcHJpdGU+ID0gbmV3IERvY3VtZW50VHlwZTxEZWZpbmVTcHJpdGU+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZVNwcml0ZX0pfSxcbiAgICAgIGlkOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIGZyYW1lQ291bnQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgdGFnczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiAkVGFnLnR5cGUsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const matrix_1 = __webpack_require__(63);
const rect_1 = __webpack_require__(19);
const text_record_1 = __webpack_require__(123);
const _type_1 = __webpack_require__(3);
var DefineText;
(function (DefineText) {
    DefineText.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DefineText }) },
            id: { type: new kryo_1.Int32Type() },
            bounds: { type: rect_1.Rect.type },
            matrix: { type: matrix_1.Matrix.type },
            records: { type: new kryo_1.ArrayType({ itemType: text_record_1.TextRecord.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DefineText = exports.DefineText || (exports.DefineText = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RlZmluZS10ZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQWdGO0FBRWhGLHNDQUFpQztBQUNqQyxrQ0FBNkI7QUFDN0IscURBQStDO0FBRS9DLG1DQUFnQztBQVVoQyxJQUFpQixVQUFVLENBbUIxQjtBQW5CRCxXQUFpQixVQUFVO0lBU1osZUFBSSxHQUE2QixJQUFJLG1CQUFZLENBQWE7UUFDekUsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsVUFBVSxFQUFDLENBQUMsRUFBQztZQUM5RSxFQUFFLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDM0IsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLFdBQUksQ0FBQyxJQUFJLEVBQUM7WUFDekIsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGVBQU0sQ0FBQyxJQUFJLEVBQUM7WUFDM0IsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUNqRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQW5CZ0IsVUFBVSxHQUFWLGtCQUFVLEtBQVYsa0JBQVUsUUFtQjFCIiwiZmlsZSI6ImxpYi90YWdzL2RlZmluZS10ZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcnJheVR5cGUsIENhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50MTZ9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtNYXRyaXh9IGZyb20gXCIuLi9tYXRyaXhcIjtcbmltcG9ydCB7UmVjdH0gZnJvbSBcIi4uL3JlY3RcIjtcbmltcG9ydCB7VGV4dFJlY29yZH0gZnJvbSBcIi4uL3RleHQvdGV4dC1yZWNvcmRcIjtcbmltcG9ydCB7X1RhZ30gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHtUYWdUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZmluZVRleHQgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5EZWZpbmVUZXh0O1xuICBpZDogVWludDE2O1xuICBib3VuZHM6IFJlY3Q7XG4gIG1hdHJpeDogTWF0cml4O1xuICByZWNvcmRzOiBUZXh0UmVjb3JkW107XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRGVmaW5lVGV4dCB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJkZWZpbmUtdGV4dFwiO1xuICAgIGlkOiBudW1iZXI7XG4gICAgYm91bmRzOiBSZWN0Lkpzb247XG4gICAgbWF0cml4OiBNYXRyaXguSnNvbjtcbiAgICByZWNvcmRzOiBUZXh0UmVjb3JkLkpzb25bXTtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8RGVmaW5lVGV4dD4gPSBuZXcgRG9jdW1lbnRUeXBlPERlZmluZVRleHQ+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLkRlZmluZVRleHR9KX0sXG4gICAgICBpZDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgICBib3VuZHM6IHt0eXBlOiBSZWN0LnR5cGV9LFxuICAgICAgbWF0cml4OiB7dHlwZTogTWF0cml4LnR5cGV9LFxuICAgICAgcmVjb3Jkczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBUZXh0UmVjb3JkLnR5cGUsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const avm1 = __webpack_require__(46);
const _type_1 = __webpack_require__(3);
var DoAction;
(function (DoAction) {
    DoAction.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DoAction }) },
            actions: { type: new kryo_1.ArrayType({ itemType: avm1.Action.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DoAction = exports.DoAction || (exports.DoAction = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RvLWFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFxRTtBQUNyRSxzQ0FBc0M7QUFFdEMsbUNBQWdDO0FBT2hDLElBQWlCLFFBQVEsQ0FheEI7QUFiRCxXQUFpQixRQUFRO0lBTVYsYUFBSSxHQUEyQixJQUFJLG1CQUFZLENBQVc7UUFDckUsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsUUFBUSxFQUFDLENBQUMsRUFBQztZQUM1RSxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQ2xGO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBYXhCIiwiZmlsZSI6ImxpYi90YWdzL2RvLWFjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXJyYXlUeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQgKiBhcyBhdm0xIGZyb20gXCIuLi9hdm0xL2luZGV4XCI7XG5pbXBvcnQge19UYWd9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7VGFnVHlwZX0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEb0FjdGlvbiBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRvQWN0aW9uO1xuICBhY3Rpb25zOiBhdm0xLkFjdGlvbltdO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIERvQWN0aW9uIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcImRvLWFjdGlvblwiO1xuICAgIGFjdGlvbnM6IGF2bTEuQWN0aW9uLkpzb25bXTtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8RG9BY3Rpb24+ID0gbmV3IERvY3VtZW50VHlwZTxEb0FjdGlvbj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IFRhZ1R5cGUudHlwZSwgdmFsdWU6IFRhZ1R5cGUuRG9BY3Rpb259KX0sXG4gICAgICBhY3Rpb25zOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6IGF2bTEuQWN0aW9uLnR5cGUsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const avm1 = __webpack_require__(46);
const _type_1 = __webpack_require__(3);
var DoInitAction;
(function (DoInitAction) {
    DoInitAction.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.DoInitAction }) },
            spriteid: { type: new kryo_1.Int32Type() },
            actions: { type: new kryo_1.ArrayType({ itemType: avm1.Action.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(DoInitAction = exports.DoInitAction || (exports.DoInitAction = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2RvLWluaXQtYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQWdGO0FBRWhGLHNDQUFzQztBQUV0QyxtQ0FBZ0M7QUFRaEMsSUFBaUIsWUFBWSxDQWU1QjtBQWZELFdBQWlCLFlBQVk7SUFPZCxpQkFBSSxHQUErQixJQUFJLG1CQUFZLENBQWU7UUFDN0UsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsWUFBWSxFQUFDLENBQUMsRUFBQztZQUNoRixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDakMsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUNsRjtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWZnQixZQUFZLEdBQVosb0JBQVksS0FBWixvQkFBWSxRQWU1QiIsImZpbGUiOiJsaWIvdGFncy9kby1pbml0LWFjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXJyYXlUeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgSW50MzJUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDE2fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCAqIGFzIGF2bTEgZnJvbSBcIi4uL2F2bTEvaW5kZXhcIjtcbmltcG9ydCB7X1RhZ30gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHtUYWdUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERvSW5pdEFjdGlvbiBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkRvSW5pdEFjdGlvbjtcbiAgc3ByaXRlSWQ6IFVpbnQxNjtcbiAgYWN0aW9uczogYXZtMS5BY3Rpb25bXTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBEb0luaXRBY3Rpb24ge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwiZG8taW5pdC1hY3Rpb25cIjtcbiAgICBzcHJpdGVfaWQ6IG51bWJlcjtcbiAgICBhY3Rpb25zOiBhdm0xLkFjdGlvbi5Kc29uW107XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPERvSW5pdEFjdGlvbj4gPSBuZXcgRG9jdW1lbnRUeXBlPERvSW5pdEFjdGlvbj4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IFRhZ1R5cGUudHlwZSwgdmFsdWU6IFRhZ1R5cGUuRG9Jbml0QWN0aW9ufSl9LFxuICAgICAgc3ByaXRlaWQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgYWN0aW9uczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBhdm0xLkFjdGlvbi50eXBlLCBtYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(3);
var EnableDebugger;
(function (EnableDebugger) {
    EnableDebugger.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.EnableDebugger }) },
            password: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(EnableDebugger = exports.EnableDebugger || (exports.EnableDebugger = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2VuYWJsZS1kZWJ1Z2dlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUEwRTtBQUUxRSxtQ0FBZ0M7QUFPaEMsSUFBaUIsY0FBYyxDQWE5QjtBQWJELFdBQWlCLGNBQWM7SUFNaEIsbUJBQUksR0FBaUMsSUFBSSxtQkFBWSxDQUFpQjtRQUNqRixVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGVBQU8sQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxjQUFjLEVBQUMsQ0FBQyxFQUFDO1lBQ2xGLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztTQUM1RDtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQWJnQixjQUFjLEdBQWQsc0JBQWMsS0FBZCxzQkFBYyxRQWE5QiIsImZpbGUiOiJsaWIvdGFncy9lbmFibGUtZGVidWdnZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBMaXRlcmFsVHlwZSwgVWNzMlN0cmluZ1R5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge19UYWd9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7VGFnVHlwZX0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBFbmFibGVEZWJ1Z2dlciBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkVuYWJsZURlYnVnZ2VyO1xuICBwYXNzd29yZDogc3RyaW5nO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIEVuYWJsZURlYnVnZ2VyIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcImVuYWJsZS1kZWJ1Z2dlclwiO1xuICAgIHBhc3N3b3JkOiBzdHJpbmc7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEVuYWJsZURlYnVnZ2VyPiA9IG5ldyBEb2N1bWVudFR5cGU8RW5hYmxlRGVidWdnZXI+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLkVuYWJsZURlYnVnZ2VyfSl9LFxuICAgICAgcGFzc3dvcmQ6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const named_id_1 = __webpack_require__(64);
const _type_1 = __webpack_require__(3);
var ExportAssets;
(function (ExportAssets) {
    ExportAssets.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.ExportAssets }) },
            assets: { type: new kryo_1.ArrayType({ itemType: named_id_1.NamedId.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ExportAssets = exports.ExportAssets || (exports.ExportAssets = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2V4cG9ydC1hc3NldHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBcUU7QUFDckUsMENBQW9DO0FBRXBDLG1DQUFnQztBQU9oQyxJQUFpQixZQUFZLENBYTVCO0FBYkQsV0FBaUIsWUFBWTtJQU1kLGlCQUFJLEdBQStCLElBQUksbUJBQVksQ0FBZTtRQUM3RSxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGVBQU8sQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxZQUFZLEVBQUMsQ0FBQyxFQUFDO1lBQ2hGLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsa0JBQU8sQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLEVBQUM7U0FDN0U7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFiZ0IsWUFBWSxHQUFaLG9CQUFZLEtBQVosb0JBQVksUUFhNUIiLCJmaWxlIjoibGliL3RhZ3MvZXhwb3J0LWFzc2V0cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXJyYXlUeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge05hbWVkSWR9IGZyb20gXCIuLi9uYW1lZC1pZFwiO1xuaW1wb3J0IHtfVGFnfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQge1RhZ1R5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXhwb3J0QXNzZXRzIGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuRXhwb3J0QXNzZXRzO1xuICBhc3NldHM6IE5hbWVkSWRbXTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBFeHBvcnRBc3NldHMge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwiZXhwb3J0LWFzc2V0c1wiO1xuICAgIGFzc2V0czogTmFtZWRJZC5Kc29uW107XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEV4cG9ydEFzc2V0cz4gPSBuZXcgRG9jdW1lbnRUeXBlPEV4cG9ydEFzc2V0cz4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IFRhZ1R5cGUudHlwZSwgdmFsdWU6IFRhZ1R5cGUuRXhwb3J0QXNzZXRzfSl9LFxuICAgICAgYXNzZXRzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6IE5hbWVkSWQudHlwZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(3);
var FileAttributes;
(function (FileAttributes) {
    FileAttributes.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.FileAttributes }) },
            useDirectBlit: { type: new kryo_1.BooleanType() },
            useGpu: { type: new kryo_1.BooleanType() },
            hasMetadata: { type: new kryo_1.BooleanType() },
            useAs3: { type: new kryo_1.BooleanType() },
            noCrossDomainCaching: { type: new kryo_1.BooleanType() },
            useRelativeUrls: { type: new kryo_1.BooleanType() },
            useNetwork: { type: new kryo_1.BooleanType() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(FileAttributes = exports.FileAttributes || (exports.FileAttributes = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2ZpbGUtYXR0cmlidXRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUF1RTtBQUV2RSxtQ0FBZ0M7QUFhaEMsSUFBaUIsY0FBYyxDQXlCOUI7QUF6QkQsV0FBaUIsY0FBYztJQVloQixtQkFBSSxHQUFpQyxJQUFJLG1CQUFZLENBQWlCO1FBQ2pGLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZUFBTyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLGNBQWMsRUFBQyxDQUFDLEVBQUM7WUFDbEYsYUFBYSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ3hDLE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNqQyxXQUFXLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDdEMsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ2pDLG9CQUFvQixFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQy9DLGVBQWUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUMxQyxVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7U0FDdEM7UUFDRCxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUF6QmdCLGNBQWMsR0FBZCxzQkFBYyxLQUFkLHNCQUFjLFFBeUI5QiIsImZpbGUiOiJsaWIvdGFncy9maWxlLWF0dHJpYnV0ZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Jvb2xlYW5UeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge19UYWd9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7VGFnVHlwZX0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBGaWxlQXR0cmlidXRlcyBleHRlbmRzIF9UYWcge1xuICB0eXBlOiBUYWdUeXBlLkZpbGVBdHRyaWJ1dGVzO1xuICB1c2VEaXJlY3RCbGl0OiBib29sZWFuO1xuICB1c2VHcHU6IGJvb2xlYW47XG4gIGhhc01ldGFkYXRhOiBib29sZWFuO1xuICB1c2VBczM6IGJvb2xlYW47XG4gIG5vQ3Jvc3NEb21haW5DYWNoaW5nOiBib29sZWFuO1xuICB1c2VSZWxhdGl2ZVVybHM6IGJvb2xlYW47XG4gIHVzZU5ldHdvcms6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgRmlsZUF0dHJpYnV0ZXMge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwiZmlsZS1hdHRyaWJ1dGVzXCI7XG4gICAgdXNlX2RpcmVjdF9ibGl0OiBib29sZWFuO1xuICAgIHVzZV9ncHU6IGJvb2xlYW47XG4gICAgaGFzX21ldGFkYXRhOiBib29sZWFuO1xuICAgIHVzZV9hczM6IGJvb2xlYW47XG4gICAgbm9fY3Jvc3NfZG9tYWluX2NhY2hpbmc6IGJvb2xlYW47XG4gICAgdXNlX3JlbGF0aXZlX3VybHM6IGJvb2xlYW47XG4gICAgdXNlX25ldHdvcms6IGJvb2xlYW47XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEZpbGVBdHRyaWJ1dGVzPiA9IG5ldyBEb2N1bWVudFR5cGU8RmlsZUF0dHJpYnV0ZXM+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLkZpbGVBdHRyaWJ1dGVzfSl9LFxuICAgICAgdXNlRGlyZWN0QmxpdDoge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIHVzZUdwdToge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIGhhc01ldGFkYXRhOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgdXNlQXMzOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgbm9Dcm9zc0RvbWFpbkNhY2hpbmc6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICB1c2VSZWxhdGl2ZVVybHM6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICB1c2VOZXR3b3JrOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const named_id_1 = __webpack_require__(64);
const _type_1 = __webpack_require__(3);
var ImportAssets;
(function (ImportAssets) {
    ImportAssets.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.ImportAssets }) },
            url: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
            assets: { type: new kryo_1.ArrayType({ itemType: named_id_1.NamedId.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ImportAssets = exports.ImportAssets || (exports.ImportAssets = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2ltcG9ydC1hc3NldHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBcUY7QUFDckYsMENBQW9DO0FBRXBDLG1DQUFnQztBQVFoQyxJQUFpQixZQUFZLENBZTVCO0FBZkQsV0FBaUIsWUFBWTtJQU9kLGlCQUFJLEdBQStCLElBQUksbUJBQVksQ0FBZTtRQUM3RSxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGVBQU8sQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxZQUFZLEVBQUMsQ0FBQyxFQUFDO1lBQ2hGLEdBQUcsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLHFCQUFjLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBQztZQUN0RCxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLGtCQUFPLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQzdFO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBZmdCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBZTVCIiwiZmlsZSI6ImxpYi90YWdzL2ltcG9ydC1hc3NldHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FycmF5VHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlLCBVY3MyU3RyaW5nVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7TmFtZWRJZH0gZnJvbSBcIi4uL25hbWVkLWlkXCI7XG5pbXBvcnQge19UYWd9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7VGFnVHlwZX0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBJbXBvcnRBc3NldHMgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5JbXBvcnRBc3NldHM7XG4gIHVybDogc3RyaW5nO1xuICBhc3NldHM6IE5hbWVkSWRbXTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBJbXBvcnRBc3NldHMge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwiaW1wb3J0LWFzc2V0c1wiO1xuICAgIHVybDogc3RyaW5nO1xuICAgIGFzc2V0czogTmFtZWRJZC5Kc29uW107XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPEltcG9ydEFzc2V0cz4gPSBuZXcgRG9jdW1lbnRUeXBlPEltcG9ydEFzc2V0cz4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IFRhZ1R5cGUudHlwZSwgdmFsdWU6IFRhZ1R5cGUuSW1wb3J0QXNzZXRzfSl9LFxuICAgICAgdXJsOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgICAgYXNzZXRzOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6IE5hbWVkSWQudHlwZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(3);
var JpegTables;
(function (JpegTables) {
    JpegTables.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.JpegTables }) },
            data: { type: new kryo_1.BufferType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(JpegTables = exports.JpegTables || (exports.JpegTables = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL2pwZWctdGFibGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQXNFO0FBRXRFLG1DQUFnQztBQU9oQyxJQUFpQixVQUFVLENBYTFCO0FBYkQsV0FBaUIsVUFBVTtJQU1aLGVBQUksR0FBNkIsSUFBSSxtQkFBWSxDQUFhO1FBQ3pFLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZUFBTyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLFVBQVUsRUFBQyxDQUFDLEVBQUM7WUFDOUUsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVUsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQ3BEO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLFVBQVUsR0FBVixrQkFBVSxLQUFWLGtCQUFVLFFBYTFCIiwiZmlsZSI6ImxpYi90YWdzL2pwZWctdGFibGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtCdWZmZXJUeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge19UYWd9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7VGFnVHlwZX0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBKcGVnVGFibGVzIGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuSnBlZ1RhYmxlcztcbiAgZGF0YTogVWludDhBcnJheTtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBKcGVnVGFibGVzIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcImpwZWctdGFibGVzXCI7XG4gICAgZGF0YTogc3RyaW5nO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxKcGVnVGFibGVzPiA9IG5ldyBEb2N1bWVudFR5cGU8SnBlZ1RhYmxlcz4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHR5cGU6IHt0eXBlOiBuZXcgTGl0ZXJhbFR5cGUoe3R5cGU6IFRhZ1R5cGUudHlwZSwgdmFsdWU6IFRhZ1R5cGUuSnBlZ1RhYmxlc30pfSxcbiAgICAgIGRhdGE6IHt0eXBlOiBuZXcgQnVmZmVyVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(3);
var Metadata;
(function (Metadata) {
    Metadata.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.Metadata }) },
            metadata: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Metadata = exports.Metadata || (exports.Metadata = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL21ldGFkYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBFO0FBRTFFLG1DQUFnQztBQU9oQyxJQUFpQixRQUFRLENBYXhCO0FBYkQsV0FBaUIsUUFBUTtJQU1WLGFBQUksR0FBMkIsSUFBSSxtQkFBWSxDQUFXO1FBQ3JFLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZUFBTyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLFFBQVEsRUFBQyxDQUFDLEVBQUM7WUFDNUUsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQzVEO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBYXhCIiwiZmlsZSI6ImxpYi90YWdzL21ldGFkYXRhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGUsIFVjczJTdHJpbmdUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtfVGFnfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQge1RhZ1R5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWV0YWRhdGEgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5NZXRhZGF0YTtcbiAgbWV0YWRhdGE6IHN0cmluZztcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBNZXRhZGF0YSB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJtZXRhZGF0YVwiO1xuICAgIG1ldGFkYXRhOiBzdHJpbmc7XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPE1ldGFkYXRhPiA9IG5ldyBEb2N1bWVudFR5cGU8TWV0YWRhdGE+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLk1ldGFkYXRhfSl9LFxuICAgICAgbWV0YWRhdGE6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const clip_actions_1 = __webpack_require__(125);
const color_transform_1 = __webpack_require__(65);
const filter_1 = __webpack_require__(126);
const matrix_1 = __webpack_require__(63);
const straight_s_rgba8_1 = __webpack_require__(5);
const _type_1 = __webpack_require__(3);
var PlaceObject;
(function (PlaceObject) {
    PlaceObject.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.PlaceObject }) },
            isMove: { type: new kryo_1.BooleanType() },
            depth: { type: new kryo_1.Int32Type() },
            characterId: { type: new kryo_1.Int32Type(), optional: true },
            matrix: { type: matrix_1.Matrix.type, optional: true },
            colorTransform: { type: color_transform_1.ColorTransform.type, optional: true },
            ratio: { type: new kryo_1.Int32Type(), optional: true },
            name: { type: new kryo_1.Ucs2StringType({ maxLength: Infinity }), optional: true },
            clipDepth: { type: new kryo_1.Int32Type(), optional: true },
            filters: { type: new kryo_1.ArrayType({ itemType: filter_1.Filter.type, maxLength: Infinity }), optional: true },
            bitmapCache: { type: new kryo_1.BooleanType(), optional: true },
            visible: { type: new kryo_1.BooleanType(), optional: true },
            backgroundColor: { type: straight_s_rgba8_1.StraightSRgba8.type, optional: true },
            clipActions: { type: new kryo_1.ArrayType({ itemType: clip_actions_1.ClipActions.type, maxLength: Infinity }), optional: true },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(PlaceObject = exports.PlaceObject || (exports.PlaceObject = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL3BsYWNlLW9iamVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUE2RztBQUc3RyxrREFBNEM7QUFDNUMsd0RBQWtEO0FBRWxELHNDQUFpQztBQUNqQyxzQ0FBaUM7QUFDakMsMERBQW1EO0FBRW5ELG1DQUFnQztBQXFCaEMsSUFBaUIsV0FBVyxDQXNDM0I7QUF0Q0QsV0FBaUIsV0FBVztJQW1CYixnQkFBSSxHQUE4QixJQUFJLG1CQUFZLENBQWM7UUFDM0UsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsV0FBVyxFQUFDLENBQUMsRUFBQztZQUMvRSxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDakMsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1lBQzlCLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGdCQUFTLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1lBQ3BELE1BQU0sRUFBRSxFQUFDLElBQUksRUFBRSxlQUFNLENBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDM0MsY0FBYyxFQUFFLEVBQUMsSUFBSSxFQUFFLGdDQUFjLENBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDM0QsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDOUMsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUkscUJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDdkUsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDbEQsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxlQUFNLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDNUYsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDdEQsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDbEQsZUFBZSxFQUFFLEVBQUMsSUFBSSxFQUFFLGlDQUFjLENBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDNUQsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSwwQkFBVyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1NBQ3RHO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBdENnQixXQUFXLEdBQVgsbUJBQVcsS0FBWCxtQkFBVyxRQXNDM0IiLCJmaWxlIjoibGliL3RhZ3MvcGxhY2Utb2JqZWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcnJheVR5cGUsIEJvb2xlYW5UeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgSW50MzJUeXBlLCBMaXRlcmFsVHlwZSwgVWNzMlN0cmluZ1R5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1VpbnQxNn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0JsZW5kTW9kZX0gZnJvbSBcIi4uL2JsZW5kLW1vZGVcIjtcbmltcG9ydCB7Q2xpcEFjdGlvbnN9IGZyb20gXCIuLi9jbGlwLWFjdGlvbnNcIjtcbmltcG9ydCB7Q29sb3JUcmFuc2Zvcm19IGZyb20gXCIuLi9jb2xvci10cmFuc2Zvcm1cIjtcbmltcG9ydCB7Q29sb3JUcmFuc2Zvcm1XaXRoQWxwaGF9IGZyb20gXCIuLi9jb2xvci10cmFuc2Zvcm0td2l0aC1hbHBoYVwiO1xuaW1wb3J0IHtGaWx0ZXJ9IGZyb20gXCIuLi9maWx0ZXJcIjtcbmltcG9ydCB7TWF0cml4fSBmcm9tIFwiLi4vbWF0cml4XCI7XG5pbXBvcnQge1N0cmFpZ2h0U1JnYmE4fSBmcm9tIFwiLi4vc3RyYWlnaHQtcy1yZ2JhOFwiO1xuaW1wb3J0IHtfVGFnfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQge1RhZ1R5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGxhY2VPYmplY3QgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5QbGFjZU9iamVjdDtcbiAgaXNNb3ZlOiBib29sZWFuO1xuICBkZXB0aDogVWludDE2O1xuICBjaGFyYWN0ZXJJZD86IFVpbnQxNjtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICBtYXRyaXg/OiBNYXRyaXg7XG4gIGNvbG9yVHJhbnNmb3JtPzogQ29sb3JUcmFuc2Zvcm1XaXRoQWxwaGE7XG4gIHJhdGlvPzogVWludDE2O1xuICBuYW1lPzogc3RyaW5nO1xuICBjbGlwRGVwdGg/OiBVaW50MTY7XG4gIGZpbHRlcnM/OiBGaWx0ZXJbXTtcbiAgYmxlbmRNb2RlPzogQmxlbmRNb2RlO1xuICBiaXRtYXBDYWNoZT86IGJvb2xlYW47XG4gIHZpc2libGU/OiBib29sZWFuO1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBTdHJhaWdodFNSZ2JhODtcbiAgY2xpcEFjdGlvbnM/OiBDbGlwQWN0aW9uc1tdO1xufVxuXG5leHBvcnQgbmFtZXNwYWNlIFBsYWNlT2JqZWN0IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcInBsYWNlLW9iamVjdFwiO1xuICAgIGlzTW92ZTogYm9vbGVhbjtcbiAgICBkZXB0aDogbnVtYmVyO1xuICAgIGNoYXJhY3Rlcl9pZD86IG51bWJlcjtcbiAgICBjbGFzc19uYW1lPzogc3RyaW5nO1xuICAgIG1hdHJpeDogTWF0cml4Lkpzb247XG4gICAgY29sb3JfdHJhbnNmb3JtPzogQ29sb3JUcmFuc2Zvcm0uSnNvbjtcbiAgICByYXRpbz86IG51bWJlcjtcbiAgICBuYW1lPzogc3RyaW5nO1xuICAgIGNsaXBfZGVwdGg/OiBudW1iZXI7XG4gICAgZmlsdGVycz86IEZpbHRlci5Kc29uW107XG4gICAgYmxlbmRfbW9kZT86IEJsZW5kTW9kZS5Kc29uW107XG4gICAgYml0bWFwX2NhY2hlPzogYm9vbGVhbjtcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPzogU3RyYWlnaHRTUmdiYTguSnNvbjtcbiAgICBjbGlwX2FjdGlvbnM/OiBDbGlwQWN0aW9ucy5Kc29uW107XG4gIH1cblxuICBleHBvcnQgY29uc3QgdHlwZTogRG9jdW1lbnRUeXBlPFBsYWNlT2JqZWN0PiA9IG5ldyBEb2N1bWVudFR5cGU8UGxhY2VPYmplY3Q+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLlBsYWNlT2JqZWN0fSl9LFxuICAgICAgaXNNb3ZlOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgZGVwdGg6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgICAgY2hhcmFjdGVySWQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICAgIG1hdHJpeDoge3R5cGU6IE1hdHJpeC50eXBlLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgICBjb2xvclRyYW5zZm9ybToge3R5cGU6IENvbG9yVHJhbnNmb3JtLnR5cGUsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICAgIHJhdGlvOiB7dHlwZTogbmV3IEludDMyVHlwZSgpLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgICBuYW1lOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICAgIGNsaXBEZXB0aDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKSwgb3B0aW9uYWw6IHRydWV9LFxuICAgICAgZmlsdGVyczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBGaWx0ZXIudHlwZSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgICBiaXRtYXBDYWNoZToge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgICB2aXNpYmxlOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCksIG9wdGlvbmFsOiB0cnVlfSxcbiAgICAgIGJhY2tncm91bmRDb2xvcjoge3R5cGU6IFN0cmFpZ2h0U1JnYmE4LnR5cGUsIG9wdGlvbmFsOiB0cnVlfSxcbiAgICAgIGNsaXBBY3Rpb25zOiB7dHlwZTogbmV3IEFycmF5VHlwZSh7aXRlbVR5cGU6IENsaXBBY3Rpb25zLnR5cGUsIG1heExlbmd0aDogSW5maW5pdHl9KSwgb3B0aW9uYWw6IHRydWV9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(3);
var RemoveObject;
(function (RemoveObject) {
    RemoveObject.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.RemoveObject }) },
            characterId: { type: new kryo_1.Int32Type(), optional: true },
            depth: { type: new kryo_1.Int32Type() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(RemoveObject = exports.RemoveObject || (exports.RemoveObject = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL3JlbW92ZS1vYmplY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBcUU7QUFHckUsbUNBQWdDO0FBUWhDLElBQWlCLFlBQVksQ0FlNUI7QUFmRCxXQUFpQixZQUFZO0lBT2QsaUJBQUksR0FBK0IsSUFBSSxtQkFBWSxDQUFlO1FBQzdFLFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLENBQUMsRUFBQyxJQUFJLEVBQUUsZUFBTyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsZUFBTyxDQUFDLFlBQVksRUFBQyxDQUFDLEVBQUM7WUFDaEYsV0FBVyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUM7WUFDcEQsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDO1NBQy9CO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBZmdCLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBZTVCIiwiZmlsZSI6ImxpYi90YWdzL3JlbW92ZS1vYmplY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nhc2VTdHlsZSwgRG9jdW1lbnRUeXBlLCBJbnQzMlR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtVaW50MTZ9IGZyb20gXCJzZW1hbnRpYy10eXBlc1wiO1xuaW1wb3J0IHtfVGFnfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQge1RhZ1R5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVtb3ZlT2JqZWN0IGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuUmVtb3ZlT2JqZWN0O1xuICBjaGFyYWN0ZXJJZD86IFVpbnQxNjtcbiAgZGVwdGg6IFVpbnQxNjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBSZW1vdmVPYmplY3Qge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwicmVtb3ZlLW9iamVjdFwiO1xuICAgIGNoYXJhY3Rlcl9pZD86IG51bWJlcjtcbiAgICBkZXB0aDogbnVtYmVyO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxSZW1vdmVPYmplY3Q+ID0gbmV3IERvY3VtZW50VHlwZTxSZW1vdmVPYmplY3Q+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLlJlbW92ZU9iamVjdH0pfSxcbiAgICAgIGNoYXJhY3RlcklkOiB7dHlwZTogbmV3IEludDMyVHlwZSgpLCBvcHRpb25hbDogdHJ1ZX0sXG4gICAgICBkZXB0aDoge3R5cGU6IG5ldyBJbnQzMlR5cGUoKX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const s_rgb8_1 = __webpack_require__(58);
const _type_1 = __webpack_require__(3);
var SetBackgroundColor;
(function (SetBackgroundColor) {
    SetBackgroundColor.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.SetBackgroundColor }) },
            color: { type: s_rgb8_1.SRgb8.type },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(SetBackgroundColor = exports.SetBackgroundColor || (exports.SetBackgroundColor = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL3NldC1iYWNrZ3JvdW5kLWNvbG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBQzFELHNDQUFnQztBQUVoQyxtQ0FBZ0M7QUFPaEMsSUFBaUIsa0JBQWtCLENBYWxDO0FBYkQsV0FBaUIsa0JBQWtCO0lBTXBCLHVCQUFJLEdBQXFDLElBQUksbUJBQVksQ0FBcUI7UUFDekYsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsa0JBQWtCLEVBQUMsQ0FBQyxFQUFDO1lBQ3RGLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxjQUFLLENBQUMsSUFBSSxFQUFDO1NBQzFCO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLGtCQUFrQixHQUFsQiwwQkFBa0IsS0FBbEIsMEJBQWtCLFFBYWxDIiwiZmlsZSI6ImxpYi90YWdzL3NldC1iYWNrZ3JvdW5kLWNvbG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge1NSZ2I4fSBmcm9tIFwiLi4vcy1yZ2I4XCI7XG5pbXBvcnQge19UYWd9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7VGFnVHlwZX0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTZXRCYWNrZ3JvdW5kQ29sb3IgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5TZXRCYWNrZ3JvdW5kQ29sb3I7XG4gIGNvbG9yOiBTUmdiODtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBTZXRCYWNrZ3JvdW5kQ29sb3Ige1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIHR5cGU6IFwic2V0LWJhY2tncm91bmQtY29sb3JcIjtcbiAgICBjb2xvcjogU1JnYjguSnNvbjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8U2V0QmFja2dyb3VuZENvbG9yPiA9IG5ldyBEb2N1bWVudFR5cGU8U2V0QmFja2dyb3VuZENvbG9yPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogVGFnVHlwZS50eXBlLCB2YWx1ZTogVGFnVHlwZS5TZXRCYWNrZ3JvdW5kQ29sb3J9KX0sXG4gICAgICBjb2xvcjoge3R5cGU6IFNSZ2I4LnR5cGV9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(3);
var ShowFrame;
(function (ShowFrame) {
    ShowFrame.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.ShowFrame }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ShowFrame = exports.ShowFrame || (exports.ShowFrame = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL3Nob3ctZnJhbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBMEQ7QUFFMUQsbUNBQWdDO0FBTWhDLElBQWlCLFNBQVMsQ0FXekI7QUFYRCxXQUFpQixTQUFTO0lBS1gsY0FBSSxHQUE0QixJQUFJLG1CQUFZLENBQVk7UUFDdkUsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsU0FBUyxFQUFDLENBQUMsRUFBQztTQUM5RTtRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQVhnQixTQUFTLEdBQVQsaUJBQVMsS0FBVCxpQkFBUyxRQVd6QiIsImZpbGUiOiJsaWIvdGFncy9zaG93LWZyYW1lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgTGl0ZXJhbFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge19UYWd9IGZyb20gXCIuL190YWdcIjtcbmltcG9ydCB7VGFnVHlwZX0gZnJvbSBcIi4vX3R5cGVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTaG93RnJhbWUgZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5TaG93RnJhbWU7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgU2hvd0ZyYW1lIHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcInNob3ctZnJhbWVcIjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8U2hvd0ZyYW1lPiA9IG5ldyBEb2N1bWVudFR5cGU8U2hvd0ZyYW1lPih7XG4gICAgcHJvcGVydGllczoge1xuICAgICAgdHlwZToge3R5cGU6IG5ldyBMaXRlcmFsVHlwZSh7dHlwZTogVGFnVHlwZS50eXBlLCB2YWx1ZTogVGFnVHlwZS5TaG93RnJhbWV9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(3);
var Telemetry;
(function (Telemetry) {
    Telemetry.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.Telemetry }) },
            password: { type: new kryo_1.BufferType({ maxLength: Infinity }), optional: true },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Telemetry = exports.Telemetry || (exports.Telemetry = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL3RlbGVtZXRyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFzRTtBQUV0RSxtQ0FBZ0M7QUFPaEMsSUFBaUIsU0FBUyxDQWF6QjtBQWJELFdBQWlCLFNBQVM7SUFNWCxjQUFJLEdBQTRCLElBQUksbUJBQVksQ0FBWTtRQUN2RSxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxDQUFDLEVBQUMsSUFBSSxFQUFFLGVBQU8sQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLGVBQU8sQ0FBQyxTQUFTLEVBQUMsQ0FBQyxFQUFDO1lBQzdFLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGlCQUFVLENBQUMsRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDO1NBQ3hFO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBYXpCIiwiZmlsZSI6ImxpYi90YWdzL3RlbGVtZXRyeS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QnVmZmVyVHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIExpdGVyYWxUeXBlfSBmcm9tIFwia3J5b1wiO1xuaW1wb3J0IHtfVGFnfSBmcm9tIFwiLi9fdGFnXCI7XG5pbXBvcnQge1RhZ1R5cGV9IGZyb20gXCIuL190eXBlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGVsZW1ldHJ5IGV4dGVuZHMgX1RhZyB7XG4gIHR5cGU6IFRhZ1R5cGUuVGVsZW1ldHJ5O1xuICBwYXNzd29yZD86IFVpbnQ4QXJyYXk7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVGVsZW1ldHJ5IHtcbiAgZXhwb3J0IGludGVyZmFjZSBKc29uIHtcbiAgICB0eXBlOiBcInRlbGVtZXRyeVwiO1xuICAgIHBhc3N3b3JkPzogc3RyaW5nO1xuICB9XG5cbiAgZXhwb3J0IGNvbnN0IHR5cGU6IERvY3VtZW50VHlwZTxUZWxlbWV0cnk+ID0gbmV3IERvY3VtZW50VHlwZTxUZWxlbWV0cnk+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLlRlbGVtZXRyeX0pfSxcbiAgICAgIHBhc3N3b3JkOiB7dHlwZTogbmV3IEJ1ZmZlclR5cGUoe21heExlbmd0aDogSW5maW5pdHl9KSwgb3B0aW9uYWw6IHRydWV9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const _type_1 = __webpack_require__(3);
var Unknown;
(function (Unknown) {
    Unknown.type = new kryo_1.DocumentType({
        properties: {
            type: { type: new kryo_1.LiteralType({ type: _type_1.TagType.type, value: _type_1.TagType.Unknown }) },
            code: { type: new kryo_1.Int32Type() },
            data: { type: new kryo_1.BufferType({ maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Unknown = exports.Unknown || (exports.Unknown = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90YWdzL3Vua25vd24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBaUY7QUFHakYsbUNBQWdDO0FBUWhDLElBQWlCLE9BQU8sQ0FldkI7QUFmRCxXQUFpQixPQUFPO0lBT1QsWUFBSSxHQUEwQixJQUFJLG1CQUFZLENBQVU7UUFDbkUsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsQ0FBQyxFQUFDLElBQUksRUFBRSxlQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxlQUFPLENBQUMsT0FBTyxFQUFDLENBQUMsRUFBQztZQUMzRSxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxnQkFBUyxFQUFFLEVBQUM7WUFDN0IsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksaUJBQVUsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQ3BEO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBZmdCLE9BQU8sR0FBUCxlQUFPLEtBQVAsZUFBTyxRQWV2QiIsImZpbGUiOiJsaWIvdGFncy91bmtub3duLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtCdWZmZXJUeXBlLCBDYXNlU3R5bGUsIERvY3VtZW50VHlwZSwgSW50MzJUeXBlLCBMaXRlcmFsVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7VWludDE2fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7X1RhZ30gZnJvbSBcIi4vX3RhZ1wiO1xuaW1wb3J0IHtUYWdUeXBlfSBmcm9tIFwiLi9fdHlwZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFVua25vd24gZXh0ZW5kcyBfVGFnIHtcbiAgdHlwZTogVGFnVHlwZS5Vbmtub3duO1xuICBjb2RlOiBVaW50MTY7XG4gIGRhdGE6IFVpbnQ4QXJyYXk7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgVW5rbm93biB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiB7XG4gICAgdHlwZTogXCJ1bmtub3duXCI7XG4gICAgY29kZTogbnVtYmVyO1xuICAgIGRhdGE6IHN0cmluZztcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8VW5rbm93bj4gPSBuZXcgRG9jdW1lbnRUeXBlPFVua25vd24+KHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0eXBlOiB7dHlwZTogbmV3IExpdGVyYWxUeXBlKHt0eXBlOiBUYWdUeXBlLnR5cGUsIHZhbHVlOiBUYWdUeXBlLlVua25vd259KX0sXG4gICAgICBjb2RlOiB7dHlwZTogbmV3IEludDMyVHlwZSgpfSxcbiAgICAgIGRhdGE6IHt0eXBlOiBuZXcgQnVmZmVyVHlwZSh7bWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var csm_table_hint_1 = __webpack_require__(117);
exports.CsmTableHint = csm_table_hint_1.CsmTableHint;
var font_alignment_zone_1 = __webpack_require__(118);
exports.FontAlignmentZone = font_alignment_zone_1.FontAlignmentZone;
var font_alignment_zone_data_1 = __webpack_require__(119);
exports.FontAlignmentZoneData = font_alignment_zone_data_1.FontAlignmentZoneData;
var font_layout_1 = __webpack_require__(115);
exports.FontLayout = font_layout_1.FontLayout;
var glyph_entry_1 = __webpack_require__(124);
exports.GlyphEntry = glyph_entry_1.GlyphEntry;
var grid_fitting_1 = __webpack_require__(112);
exports.GridFitting = grid_fitting_1.GridFitting;
var kerning_record_1 = __webpack_require__(116);
exports.KerningRecord = kerning_record_1.KerningRecord;
var text_alignment_1 = __webpack_require__(114);
exports.TextAlignment = text_alignment_1.TextAlignment;
var text_record_1 = __webpack_require__(123);
exports.TextRecord = text_record_1.TextRecord;
var text_renderer_1 = __webpack_require__(113);
exports.TextRenderer = text_renderer_1.TextRenderer;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90ZXh0L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQThDO0FBQXRDLHdDQUFBLFlBQVksQ0FBQTtBQUNwQiw2REFBd0Q7QUFBaEQsa0RBQUEsaUJBQWlCLENBQUE7QUFDekIsdUVBQWlFO0FBQXpELDJEQUFBLHFCQUFxQixDQUFBO0FBQzdCLDZDQUF5QztBQUFqQyxtQ0FBQSxVQUFVLENBQUE7QUFDbEIsNkNBQXlDO0FBQWpDLG1DQUFBLFVBQVUsQ0FBQTtBQUNsQiwrQ0FBMkM7QUFBbkMscUNBQUEsV0FBVyxDQUFBO0FBQ25CLG1EQUErQztBQUF2Qyx5Q0FBQSxhQUFhLENBQUE7QUFDckIsbURBQStDO0FBQXZDLHlDQUFBLGFBQWEsQ0FBQTtBQUNyQiw2Q0FBeUM7QUFBakMsbUNBQUEsVUFBVSxDQUFBO0FBQ2xCLGlEQUE2QztBQUFyQyx1Q0FBQSxZQUFZLENBQUEiLCJmaWxlIjoibGliL3RleHQvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge0NzbVRhYmxlSGludH0gZnJvbSBcIi4vY3NtLXRhYmxlLWhpbnRcIjtcbmV4cG9ydCB7Rm9udEFsaWdubWVudFpvbmV9IGZyb20gXCIuL2ZvbnQtYWxpZ25tZW50LXpvbmVcIjtcbmV4cG9ydCB7Rm9udEFsaWdubWVudFpvbmVEYXRhfSBmcm9tIFwiLi9mb250LWFsaWdubWVudC16b25lLWRhdGFcIjtcbmV4cG9ydCB7Rm9udExheW91dH0gZnJvbSBcIi4vZm9udC1sYXlvdXRcIjtcbmV4cG9ydCB7R2x5cGhFbnRyeX0gZnJvbSBcIi4vZ2x5cGgtZW50cnlcIjtcbmV4cG9ydCB7R3JpZEZpdHRpbmd9IGZyb20gXCIuL2dyaWQtZml0dGluZ1wiO1xuZXhwb3J0IHtLZXJuaW5nUmVjb3JkfSBmcm9tIFwiLi9rZXJuaW5nLXJlY29yZFwiO1xuZXhwb3J0IHtUZXh0QWxpZ25tZW50fSBmcm9tIFwiLi90ZXh0LWFsaWdubWVudFwiO1xuZXhwb3J0IHtUZXh0UmVjb3JkfSBmcm9tIFwiLi90ZXh0LXJlY29yZFwiO1xuZXhwb3J0IHtUZXh0UmVuZGVyZXJ9IGZyb20gXCIuL3RleHQtcmVuZGVyZXJcIjtcbiJdfQ==


/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var BlendMode;
(function (BlendMode) {
    BlendMode[BlendMode["Normal"] = 0] = "Normal";
    BlendMode[BlendMode["Layer"] = 1] = "Layer";
    BlendMode[BlendMode["Multiply"] = 2] = "Multiply";
    BlendMode[BlendMode["Screen"] = 3] = "Screen";
    BlendMode[BlendMode["Lighten"] = 4] = "Lighten";
    BlendMode[BlendMode["Darken"] = 5] = "Darken";
    BlendMode[BlendMode["Difference"] = 6] = "Difference";
    BlendMode[BlendMode["Add"] = 7] = "Add";
    BlendMode[BlendMode["Subtract"] = 8] = "Subtract";
    BlendMode[BlendMode["Invert"] = 9] = "Invert";
    BlendMode[BlendMode["Alpha"] = 10] = "Alpha";
    BlendMode[BlendMode["Erase"] = 11] = "Erase";
    BlendMode[BlendMode["Overlay"] = 12] = "Overlay";
    BlendMode[BlendMode["Hardlight"] = 13] = "Hardlight";
})(BlendMode = exports.BlendMode || (exports.BlendMode = {}));
(function (BlendMode) {
    BlendMode.type = new kryo_1.SimpleEnumType({
        enum: BlendMode,
        rename: kryo_1.CaseStyle.KebabCase,
    });
})(BlendMode = exports.BlendMode || (exports.BlendMode = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9ibGVuZC1tb2RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQStDO0FBRS9DLElBQVksU0FlWDtBQWZELFdBQVksU0FBUztJQUNuQiw2Q0FBTSxDQUFBO0lBQ04sMkNBQUssQ0FBQTtJQUNMLGlEQUFRLENBQUE7SUFDUiw2Q0FBTSxDQUFBO0lBQ04sK0NBQU8sQ0FBQTtJQUNQLDZDQUFNLENBQUE7SUFDTixxREFBVSxDQUFBO0lBQ1YsdUNBQUcsQ0FBQTtJQUNILGlEQUFRLENBQUE7SUFDUiw2Q0FBTSxDQUFBO0lBQ04sNENBQUssQ0FBQTtJQUNMLDRDQUFLLENBQUE7SUFDTCxnREFBTyxDQUFBO0lBQ1Asb0RBQVMsQ0FBQTtBQUNYLENBQUMsRUFmVyxTQUFTLEdBQVQsaUJBQVMsS0FBVCxpQkFBUyxRQWVwQjtBQUVELFdBQWlCLFNBQVM7SUFpQlgsY0FBSSxHQUE4QixJQUFJLHFCQUFjLENBQVk7UUFDM0UsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxTQUFTO0tBQzVCLENBQUMsQ0FBQztBQUNMLENBQUMsRUFyQmdCLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBcUJ6QiIsImZpbGUiOiJsaWIvYmxlbmQtbW9kZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBTaW1wbGVFbnVtVHlwZX0gZnJvbSBcImtyeW9cIjtcblxuZXhwb3J0IGVudW0gQmxlbmRNb2RlIHtcbiAgTm9ybWFsLFxuICBMYXllcixcbiAgTXVsdGlwbHksXG4gIFNjcmVlbixcbiAgTGlnaHRlbixcbiAgRGFya2VuLFxuICBEaWZmZXJlbmNlLFxuICBBZGQsXG4gIFN1YnRyYWN0LFxuICBJbnZlcnQsXG4gIEFscGhhLFxuICBFcmFzZSxcbiAgT3ZlcmxheSxcbiAgSGFyZGxpZ2h0LFxufVxuXG5leHBvcnQgbmFtZXNwYWNlIEJsZW5kTW9kZSB7XG4gIGV4cG9ydCB0eXBlIEpzb24gPVxuICAgIFwibm9ybWFsXCJcbiAgICB8IFwibGF5ZXJcIlxuICAgIHwgXCJtdWx0aXBseVwiXG4gICAgfCBcInNjcmVlblwiXG4gICAgfCBcImxpZ2h0ZW5cIlxuICAgIHwgXCJkYXJrZW5cIlxuICAgIHwgXCJkaWZmZXJlbmNlXCJcbiAgICB8IFwiYWRkXCJcbiAgICB8IFwic3VidHJhY3RcIlxuICAgIHwgXCJpbnZlcnRcIlxuICAgIHwgXCJhbHBoYVwiXG4gICAgfCBcImVyYXNlXCJcbiAgICB8IFwib3ZlcmxheVwiXG4gICAgfCBcImhhcmRsaWdodFwiO1xuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBTaW1wbGVFbnVtVHlwZTxCbGVuZE1vZGU+ID0gbmV3IFNpbXBsZUVudW1UeXBlPEJsZW5kTW9kZT4oe1xuICAgIGVudW06IEJsZW5kTW9kZSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5LZWJhYkNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
var ClipEventFlags;
(function (ClipEventFlags) {
    ClipEventFlags.type = new kryo_1.DocumentType({
        properties: {
            keyUp: { type: new kryo_1.BooleanType() },
            keyDown: { type: new kryo_1.BooleanType() },
            mouseUp: { type: new kryo_1.BooleanType() },
            mouseDown: { type: new kryo_1.BooleanType() },
            mouseMove: { type: new kryo_1.BooleanType() },
            unload: { type: new kryo_1.BooleanType() },
            enterFrame: { type: new kryo_1.BooleanType() },
            load: { type: new kryo_1.BooleanType() },
            dragOver: { type: new kryo_1.BooleanType() },
            rollOut: { type: new kryo_1.BooleanType() },
            rollOver: { type: new kryo_1.BooleanType() },
            releaseOutside: { type: new kryo_1.BooleanType() },
            release: { type: new kryo_1.BooleanType() },
            press: { type: new kryo_1.BooleanType() },
            initialize: { type: new kryo_1.BooleanType() },
            data: { type: new kryo_1.BooleanType() },
            construct: { type: new kryo_1.BooleanType() },
            keyPress: { type: new kryo_1.BooleanType() },
            dragOut: { type: new kryo_1.BooleanType() },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ClipEventFlags = exports.ClipEventFlags || (exports.ClipEventFlags = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jbGlwLWV2ZW50LWZsYWdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTBEO0FBd0IxRCxJQUFpQixjQUFjLENBK0M5QjtBQS9DRCxXQUFpQixjQUFjO0lBdUJoQixtQkFBSSxHQUFpQyxJQUFJLG1CQUFZLENBQWlCO1FBQ2pGLFVBQVUsRUFBRTtZQUNWLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNoQyxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDbEMsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ2xDLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNwQyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDcEMsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ2pDLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNyQyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDL0IsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ25DLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNsQyxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDbkMsY0FBYyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ3pDLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUNsQyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDaEMsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ3JDLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztZQUMvQixTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxrQkFBVyxFQUFFLEVBQUM7WUFDcEMsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksa0JBQVcsRUFBRSxFQUFDO1lBQ25DLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGtCQUFXLEVBQUUsRUFBQztTQUNuQztRQUNELE1BQU0sRUFBRSxnQkFBUyxDQUFDLFNBQVM7S0FDNUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQS9DZ0IsY0FBYyxHQUFkLHNCQUFjLEtBQWQsc0JBQWMsUUErQzlCIiwiZmlsZSI6ImxpYi9jbGlwLWV2ZW50LWZsYWdzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtCb29sZWFuVHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGV9IGZyb20gXCJrcnlvXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2xpcEV2ZW50RmxhZ3Mge1xuICBrZXlVcDogYm9vbGVhbjtcbiAga2V5RG93bjogYm9vbGVhbjtcbiAgbW91c2VVcDogYm9vbGVhbjtcbiAgbW91c2VEb3duOiBib29sZWFuO1xuICBtb3VzZU1vdmU6IGJvb2xlYW47XG4gIHVubG9hZDogYm9vbGVhbjtcbiAgZW50ZXJGcmFtZTogYm9vbGVhbjtcbiAgbG9hZDogYm9vbGVhbjtcbiAgZHJhZ092ZXI6IGJvb2xlYW47XG4gIHJvbGxPdXQ6IGJvb2xlYW47XG4gIHJvbGxPdmVyOiBib29sZWFuO1xuICByZWxlYXNlT3V0c2lkZTogYm9vbGVhbjtcbiAgcmVsZWFzZTogYm9vbGVhbjtcbiAgcHJlc3M6IGJvb2xlYW47XG4gIGluaXRpYWxpemU6IGJvb2xlYW47XG4gIGRhdGE6IGJvb2xlYW47XG4gIGNvbnN0cnVjdDogYm9vbGVhbjtcbiAga2V5UHJlc3M6IGJvb2xlYW47XG4gIGRyYWdPdXQ6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgQ2xpcEV2ZW50RmxhZ3Mge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGtleV91cDogYm9vbGVhbjtcbiAgICBrZXlfZG93bjogYm9vbGVhbjtcbiAgICBtb3VzZV91cDogYm9vbGVhbjtcbiAgICBtb3VzZV9kb3duOiBib29sZWFuO1xuICAgIG1vdXNlX21vdmU6IGJvb2xlYW47XG4gICAgdW5sb2FkOiBib29sZWFuO1xuICAgIGVudGVyX2ZyYW1lOiBib29sZWFuO1xuICAgIGxvYWQ6IGJvb2xlYW47XG4gICAgZHJhZ19vdmVyOiBib29sZWFuO1xuICAgIHJvbGxfb3V0OiBib29sZWFuO1xuICAgIHJvbGxfb3ZlcjogYm9vbGVhbjtcbiAgICByZWxlYXNlX291dHNpZGU6IGJvb2xlYW47XG4gICAgcmVsZWFzZTogYm9vbGVhbjtcbiAgICBwcmVzczogYm9vbGVhbjtcbiAgICBpbml0aWFsaXplOiBib29sZWFuO1xuICAgIGRhdGE6IGJvb2xlYW47XG4gICAgY29uc3RydWN0OiBib29sZWFuO1xuICAgIGtleV9wcmVzczogYm9vbGVhbjtcbiAgICBkcmFnX291dDogYm9vbGVhbjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8Q2xpcEV2ZW50RmxhZ3M+ID0gbmV3IERvY3VtZW50VHlwZTxDbGlwRXZlbnRGbGFncz4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGtleVVwOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAga2V5RG93bjoge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIG1vdXNlVXA6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBtb3VzZURvd246IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBtb3VzZU1vdmU6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICB1bmxvYWQ6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBlbnRlckZyYW1lOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgbG9hZDoge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIGRyYWdPdmVyOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgcm9sbE91dDoge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIHJvbGxPdmVyOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgcmVsZWFzZU91dHNpZGU6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICByZWxlYXNlOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgcHJlc3M6IHt0eXBlOiBuZXcgQm9vbGVhblR5cGUoKX0sXG4gICAgICBpbml0aWFsaXplOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgZGF0YToge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIGNvbnN0cnVjdDoge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICAgIGtleVByZXNzOiB7dHlwZTogbmV3IEJvb2xlYW5UeXBlKCl9LFxuICAgICAgZHJhZ091dDoge3R5cGU6IG5ldyBCb29sZWFuVHlwZSgpfSxcbiAgICB9LFxuICAgIHJlbmFtZTogQ2FzZVN0eWxlLlNuYWtlQ2FzZSxcbiAgfSk7XG59XG4iXX0=


/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const color_transform_1 = __webpack_require__(65);
const fixed8p8_1 = __webpack_require__(15);
var ColorTransformWithAlpha;
(function (ColorTransformWithAlpha) {
    ColorTransformWithAlpha.type = new kryo_1.DocumentType({
        properties: Object.assign({}, color_transform_1.ColorTransform.type.properties, { alphaMult: { type: fixed8p8_1.Fixed8P8.type }, alphaAdd: { type: new kryo_1.Int32Type() } }),
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(ColorTransformWithAlpha = exports.ColorTransformWithAlpha || (exports.ColorTransformWithAlpha = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb2xvci10cmFuc2Zvcm0td2l0aC1hbHBoYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUF3RDtBQUV4RCx1REFBaUQ7QUFDakQscURBQWdEO0FBT2hELElBQWlCLHVCQUF1QixDQWN2QztBQWRELFdBQWlCLHVCQUF1QjtJQU16Qiw0QkFBSSxHQUEwQyxJQUFJLG1CQUFZLENBQTBCO1FBQ25HLFVBQVUsb0JBQ0wsZ0NBQWMsQ0FBQyxJQUFJLENBQUMsVUFBVSxJQUNqQyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsbUJBQVEsQ0FBQyxJQUFJLEVBQUMsRUFDaEMsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsRUFBRSxFQUFDLEdBQ2xDO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBZGdCLHVCQUF1QixHQUF2QiwrQkFBdUIsS0FBdkIsK0JBQXVCLFFBY3ZDIiwiZmlsZSI6ImxpYi9jb2xvci10cmFuc2Zvcm0td2l0aC1hbHBoYS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2FzZVN0eWxlLCBEb2N1bWVudFR5cGUsIEludDMyVHlwZX0gZnJvbSBcImtyeW9cIjtcbmltcG9ydCB7U2ludDE2fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7Q29sb3JUcmFuc2Zvcm19IGZyb20gXCIuL2NvbG9yLXRyYW5zZm9ybVwiO1xuaW1wb3J0IHtGaXhlZDhQOH0gZnJvbSBcIi4vZml4ZWQtcG9pbnQvZml4ZWQ4cDhcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDb2xvclRyYW5zZm9ybVdpdGhBbHBoYSBleHRlbmRzIENvbG9yVHJhbnNmb3JtIHtcbiAgYWxwaGFNdWx0OiBGaXhlZDhQODtcbiAgYWxwaGFBZGQ6IFNpbnQxNjtcbn1cblxuZXhwb3J0IG5hbWVzcGFjZSBDb2xvclRyYW5zZm9ybVdpdGhBbHBoYSB7XG4gIGV4cG9ydCBpbnRlcmZhY2UgSnNvbiBleHRlbmRzIENvbG9yVHJhbnNmb3JtLkpzb24ge1xuICAgIGFscGhhX211bHQ6IG51bWJlcjtcbiAgICBhbHBoYV9hZGQ6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8Q29sb3JUcmFuc2Zvcm1XaXRoQWxwaGE+ID0gbmV3IERvY3VtZW50VHlwZTxDb2xvclRyYW5zZm9ybVdpdGhBbHBoYT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIC4uLkNvbG9yVHJhbnNmb3JtLnR5cGUucHJvcGVydGllcyxcbiAgICAgIGFscGhhTXVsdDoge3R5cGU6IEZpeGVkOFA4LnR5cGV9LFxuICAgICAgYWxwaGFBZGQ6IHt0eXBlOiBuZXcgSW50MzJUeXBlKCl9LFxuICAgIH0sXG4gICAgcmVuYW1lOiBDYXNlU3R5bGUuU25ha2VDYXNlLFxuICB9KTtcbn1cbiJdfQ==


/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const kryo_1 = __webpack_require__(0);
const header_1 = __webpack_require__(128);
const tag_1 = __webpack_require__(131);
var Movie;
(function (Movie) {
    Movie.type = new kryo_1.DocumentType({
        properties: {
            header: { type: header_1.Header.type },
            tags: { type: new kryo_1.ArrayType({ itemType: tag_1.Tag.type, maxLength: Infinity }) },
        },
        rename: kryo_1.CaseStyle.SnakeCase,
    });
})(Movie = exports.Movie || (exports.Movie = {}));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9tb3ZpZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUF3RDtBQUN4RCxxQ0FBZ0M7QUFDaEMsK0JBQTBCO0FBTzFCLElBQWlCLEtBQUssQ0FhckI7QUFiRCxXQUFpQixLQUFLO0lBTVAsVUFBSSxHQUF3QixJQUFJLG1CQUFZLENBQVE7UUFDL0QsVUFBVSxFQUFFO1lBQ1YsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLGVBQU0sQ0FBQyxJQUFJLEVBQUM7WUFDM0IsSUFBSSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxTQUFHLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1NBQ3ZFO1FBQ0QsTUFBTSxFQUFFLGdCQUFTLENBQUMsU0FBUztLQUM1QixDQUFDLENBQUM7QUFDTCxDQUFDLEVBYmdCLEtBQUssR0FBTCxhQUFLLEtBQUwsYUFBSyxRQWFyQiIsImZpbGUiOiJsaWIvbW92aWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FycmF5VHlwZSwgQ2FzZVN0eWxlLCBEb2N1bWVudFR5cGV9IGZyb20gXCJrcnlvXCI7XG5pbXBvcnQge0hlYWRlcn0gZnJvbSBcIi4vaGVhZGVyXCI7XG5pbXBvcnQge1RhZ30gZnJvbSBcIi4vdGFnXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTW92aWUge1xuICBoZWFkZXI6IEhlYWRlcjtcbiAgdGFnczogVGFnW107XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgTW92aWUge1xuICBleHBvcnQgaW50ZXJmYWNlIEpzb24ge1xuICAgIGhlYWRlcjogSGVhZGVyLkpzb247XG4gICAgdGFnczogVGFnLkpzb25bXTtcbiAgfVxuXG4gIGV4cG9ydCBjb25zdCB0eXBlOiBEb2N1bWVudFR5cGU8TW92aWU+ID0gbmV3IERvY3VtZW50VHlwZTxNb3ZpZT4oe1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGhlYWRlcjoge3R5cGU6IEhlYWRlci50eXBlfSxcbiAgICAgIHRhZ3M6IHt0eXBlOiBuZXcgQXJyYXlUeXBlKHtpdGVtVHlwZTogVGFnLnR5cGUsIG1heExlbmd0aDogSW5maW5pdHl9KX0sXG4gICAgfSxcbiAgICByZW5hbWU6IENhc2VTdHlsZS5TbmFrZUNhc2UsXG4gIH0pO1xufVxuIl19


/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const fixed_point_1 = __webpack_require__(23);
const type_1 = __webpack_require__(24);
/**
 * Unsigned Fixed-Point number with an 16-bit integer part and an 16-bit fractional part
 */
class Ufixed16P16 extends fixed_point_1.FixedPoint {
    constructor(epsilons) {
        super(epsilons, Ufixed16P16.signed, Ufixed16P16.intBits, Ufixed16P16.fracBits);
    }
    static fromEpsilons(epsilons) {
        return new Ufixed16P16(epsilons);
    }
    static fromValue(value) {
        return new Ufixed16P16(value * Math.pow(2, Ufixed16P16.fracBits));
    }
}
Ufixed16P16.signed = false;
Ufixed16P16.intBits = 16;
Ufixed16P16.fracBits = 16;
Ufixed16P16.type = new type_1.FixedPointType({ type: Ufixed16P16 });
exports.Ufixed16P16 = Ufixed16P16;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9maXhlZC1wb2ludC91Zml4ZWQxNnAxNi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLCtDQUF5QztBQUN6QyxpQ0FBc0M7QUFFdEM7O0dBRUc7QUFDSCxpQkFBeUIsU0FBUSx3QkFBVTtJQU16QyxZQUFzQixRQUFnQjtRQUNwQyxLQUFLLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLE9BQU8sRUFBRSxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakYsQ0FBQztJQUVELE1BQU0sQ0FBQyxZQUFZLENBQUMsUUFBZ0I7UUFDbEMsTUFBTSxDQUFDLElBQUksV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxNQUFNLENBQUMsU0FBUyxDQUFDLEtBQWE7UUFDNUIsTUFBTSxDQUFDLElBQUksV0FBVyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNwRSxDQUFDOztBQWZNLGtCQUFNLEdBQVksS0FBSyxDQUFDO0FBQ3hCLG1CQUFPLEdBQVcsRUFBRSxDQUFDO0FBQ3JCLG9CQUFRLEdBQVcsRUFBRSxDQUFDO0FBQ3RCLGdCQUFJLEdBQWdDLElBQUkscUJBQWMsQ0FBYyxFQUFDLElBQUksRUFBRSxXQUFXLEVBQUMsQ0FBQyxDQUFDO0FBSmxHLGtDQWlCQyIsImZpbGUiOiJsaWIvZml4ZWQtcG9pbnQvdWZpeGVkMTZwMTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1VpbnQzMn0gZnJvbSBcInNlbWFudGljLXR5cGVzXCI7XG5pbXBvcnQge0ZpeGVkUG9pbnR9IGZyb20gXCIuL2ZpeGVkLXBvaW50XCI7XG5pbXBvcnQge0ZpeGVkUG9pbnRUeXBlfSBmcm9tIFwiLi90eXBlXCI7XG5cbi8qKlxuICogVW5zaWduZWQgRml4ZWQtUG9pbnQgbnVtYmVyIHdpdGggYW4gMTYtYml0IGludGVnZXIgcGFydCBhbmQgYW4gMTYtYml0IGZyYWN0aW9uYWwgcGFydFxuICovXG5leHBvcnQgY2xhc3MgVWZpeGVkMTZQMTYgZXh0ZW5kcyBGaXhlZFBvaW50IHtcbiAgc3RhdGljIHNpZ25lZDogYm9vbGVhbiA9IGZhbHNlO1xuICBzdGF0aWMgaW50Qml0czogbnVtYmVyID0gMTY7XG4gIHN0YXRpYyBmcmFjQml0czogbnVtYmVyID0gMTY7XG4gIHN0YXRpYyB0eXBlOiBGaXhlZFBvaW50VHlwZTxVZml4ZWQxNlAxNj4gPSBuZXcgRml4ZWRQb2ludFR5cGU8VWZpeGVkMTZQMTY+KHt0eXBlOiBVZml4ZWQxNlAxNn0pO1xuXG4gIHByb3RlY3RlZCBjb25zdHJ1Y3RvcihlcHNpbG9uczogbnVtYmVyKSB7XG4gICAgc3VwZXIoZXBzaWxvbnMsIFVmaXhlZDE2UDE2LnNpZ25lZCwgVWZpeGVkMTZQMTYuaW50Qml0cywgVWZpeGVkMTZQMTYuZnJhY0JpdHMpO1xuICB9XG5cbiAgc3RhdGljIGZyb21FcHNpbG9ucyhlcHNpbG9uczogVWludDMyKTogVWZpeGVkMTZQMTYge1xuICAgIHJldHVybiBuZXcgVWZpeGVkMTZQMTYoZXBzaWxvbnMpO1xuICB9XG5cbiAgc3RhdGljIGZyb21WYWx1ZSh2YWx1ZTogbnVtYmVyKTogVWZpeGVkMTZQMTYge1xuICAgIHJldHVybiBuZXcgVWZpeGVkMTZQMTYodmFsdWUgKiBNYXRoLnBvdygyLCBVZml4ZWQxNlAxNi5mcmFjQml0cykpO1xuICB9XG59XG4iXX0=


/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const swf_tree_1 = __webpack_require__(6);
const zlib = __webpack_require__(339);
const parse_context_1 = __webpack_require__(359);
const stream_1 = __webpack_require__(142);
const header_1 = __webpack_require__(360);
const tags_1 = __webpack_require__(361);
function parseDecompressedMovie(byteStream) {
    // TODO(demurgos): take parse context or version as an argument
    const context = new parse_context_1.DefaultParseContext(0);
    const header = header_1.parseHeader(byteStream);
    const tags = [];
    while (byteStream.available() > 0) {
        // A null byte indicates the end-of-tags
        if (byteStream.peekUint8() === 0) {
            byteStream.skip(1);
            break;
        }
        tags.push(tags_1.parseTag(byteStream, context));
    }
    return { header, tags };
}
exports.parseDecompressedMovie = parseDecompressedMovie;
function parseMovie(byteStream) {
    const startPos = byteStream.bytePos;
    const headerSignature = header_1.parseSwfSignature(byteStream);
    switch (headerSignature.compressionMethod) {
        case swf_tree_1.CompressionMethod.None:
            byteStream.bytePos = startPos;
            return parseDecompressedMovie(byteStream);
        case swf_tree_1.CompressionMethod.Deflate:
            const signature = byteStream.substream(0, 8).toBuffer();
            const tail = byteStream.tail().toBuffer();
            const deflated = zlib.inflateSync(tail);
            const decompressed = Buffer.concat([signature, deflated]);
            return parseDecompressedMovie(new stream_1.Stream(decompressed));
        case swf_tree_1.CompressionMethod.Lzma:
            throw new incident_1.Incident("NotImplemented", "Support for LZMA compression is not implemented yet");
        default:
            throw new incident_1.Incident("UnknownCompressionMethod", "Unknown compression method");
    }
}
exports.parseMovie = parseMovie;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9wYXJzZXJzL21vdmllLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQWtDO0FBQ2xDLHVDQUE2RTtBQUM3RSw2QkFBNkI7QUFDN0Isb0RBQW1FO0FBQ25FLHNDQUFpQztBQUNqQyxxQ0FBd0Q7QUFDeEQsaUNBQWdDO0FBRWhDLGdDQUF1QyxVQUFrQjtJQUN2RCwrREFBK0Q7SUFDL0QsTUFBTSxPQUFPLEdBQWlCLElBQUksbUNBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFekQsTUFBTSxNQUFNLEdBQVcsb0JBQVcsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUMvQyxNQUFNLElBQUksR0FBVSxFQUFFLENBQUM7SUFDdkIsT0FBTyxVQUFVLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUM7UUFDbEMsd0NBQXdDO1FBQ3hDLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkIsS0FBSyxDQUFDO1FBQ1IsQ0FBQztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsZUFBUSxDQUFDLFVBQVUsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFDRCxNQUFNLENBQUMsRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFDLENBQUM7QUFDeEIsQ0FBQztBQWZELHdEQWVDO0FBRUQsb0JBQTJCLFVBQWtCO0lBQzNDLE1BQU0sUUFBUSxHQUFXLFVBQVUsQ0FBQyxPQUFPLENBQUM7SUFDNUMsTUFBTSxlQUFlLEdBQWlCLDBCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3BFLE1BQU0sQ0FBQyxDQUFDLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7UUFDMUMsS0FBSyw0QkFBaUIsQ0FBQyxJQUFJO1lBQ3pCLFVBQVUsQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDO1lBQzlCLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUM1QyxLQUFLLDRCQUFpQixDQUFDLE9BQU87WUFDNUIsTUFBTSxTQUFTLEdBQVcsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDaEUsTUFBTSxJQUFJLEdBQVcsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQ2xELE1BQU0sUUFBUSxHQUFXLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDaEQsTUFBTSxZQUFZLEdBQVcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ2xFLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLGVBQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1FBQzFELEtBQUssNEJBQWlCLENBQUMsSUFBSTtZQUN6QixNQUFNLElBQUksbUJBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxxREFBcUQsQ0FBQyxDQUFDO1FBQzlGO1lBQ0UsTUFBTSxJQUFJLG1CQUFRLENBQUMsMEJBQTBCLEVBQUUsNEJBQTRCLENBQUMsQ0FBQztJQUNqRixDQUFDO0FBQ0gsQ0FBQztBQWxCRCxnQ0FrQkMiLCJmaWxlIjoibGliL3BhcnNlcnMvbW92aWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiaW5jaWRlbnRcIjtcbmltcG9ydCB7Q29tcHJlc3Npb25NZXRob2QsIEhlYWRlciwgTW92aWUsIFN3ZlNpZ25hdHVyZSwgVGFnfSBmcm9tIFwic3dmLXRyZWVcIjtcbmltcG9ydCAqIGFzIHpsaWIgZnJvbSBcInpsaWJcIjtcbmltcG9ydCB7RGVmYXVsdFBhcnNlQ29udGV4dCwgUGFyc2VDb250ZXh0fSBmcm9tIFwiLi4vcGFyc2UtY29udGV4dFwiO1xuaW1wb3J0IHtTdHJlYW19IGZyb20gXCIuLi9zdHJlYW1cIjtcbmltcG9ydCB7cGFyc2VIZWFkZXIsIHBhcnNlU3dmU2lnbmF0dXJlfSBmcm9tIFwiLi9oZWFkZXJcIjtcbmltcG9ydCB7cGFyc2VUYWd9IGZyb20gXCIuL3RhZ3NcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRGVjb21wcmVzc2VkTW92aWUoYnl0ZVN0cmVhbTogU3RyZWFtKTogTW92aWUge1xuICAvLyBUT0RPKGRlbXVyZ29zKTogdGFrZSBwYXJzZSBjb250ZXh0IG9yIHZlcnNpb24gYXMgYW4gYXJndW1lbnRcbiAgY29uc3QgY29udGV4dDogUGFyc2VDb250ZXh0ID0gbmV3IERlZmF1bHRQYXJzZUNvbnRleHQoMCk7XG5cbiAgY29uc3QgaGVhZGVyOiBIZWFkZXIgPSBwYXJzZUhlYWRlcihieXRlU3RyZWFtKTtcbiAgY29uc3QgdGFnczogVGFnW10gPSBbXTtcbiAgd2hpbGUgKGJ5dGVTdHJlYW0uYXZhaWxhYmxlKCkgPiAwKSB7XG4gICAgLy8gQSBudWxsIGJ5dGUgaW5kaWNhdGVzIHRoZSBlbmQtb2YtdGFnc1xuICAgIGlmIChieXRlU3RyZWFtLnBlZWtVaW50OCgpID09PSAwKSB7XG4gICAgICBieXRlU3RyZWFtLnNraXAoMSk7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgdGFncy5wdXNoKHBhcnNlVGFnKGJ5dGVTdHJlYW0sIGNvbnRleHQpKTtcbiAgfVxuICByZXR1cm4ge2hlYWRlciwgdGFnc307XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZU1vdmllKGJ5dGVTdHJlYW06IFN0cmVhbSk6IE1vdmllIHtcbiAgY29uc3Qgc3RhcnRQb3M6IG51bWJlciA9IGJ5dGVTdHJlYW0uYnl0ZVBvcztcbiAgY29uc3QgaGVhZGVyU2lnbmF0dXJlOiBTd2ZTaWduYXR1cmUgPSBwYXJzZVN3ZlNpZ25hdHVyZShieXRlU3RyZWFtKTtcbiAgc3dpdGNoIChoZWFkZXJTaWduYXR1cmUuY29tcHJlc3Npb25NZXRob2QpIHtcbiAgICBjYXNlIENvbXByZXNzaW9uTWV0aG9kLk5vbmU6XG4gICAgICBieXRlU3RyZWFtLmJ5dGVQb3MgPSBzdGFydFBvcztcbiAgICAgIHJldHVybiBwYXJzZURlY29tcHJlc3NlZE1vdmllKGJ5dGVTdHJlYW0pO1xuICAgIGNhc2UgQ29tcHJlc3Npb25NZXRob2QuRGVmbGF0ZTpcbiAgICAgIGNvbnN0IHNpZ25hdHVyZTogQnVmZmVyID0gYnl0ZVN0cmVhbS5zdWJzdHJlYW0oMCwgOCkudG9CdWZmZXIoKTtcbiAgICAgIGNvbnN0IHRhaWw6IEJ1ZmZlciA9IGJ5dGVTdHJlYW0udGFpbCgpLnRvQnVmZmVyKCk7XG4gICAgICBjb25zdCBkZWZsYXRlZDogQnVmZmVyID0gemxpYi5pbmZsYXRlU3luYyh0YWlsKTtcbiAgICAgIGNvbnN0IGRlY29tcHJlc3NlZDogQnVmZmVyID0gQnVmZmVyLmNvbmNhdChbc2lnbmF0dXJlLCBkZWZsYXRlZF0pO1xuICAgICAgcmV0dXJuIHBhcnNlRGVjb21wcmVzc2VkTW92aWUobmV3IFN0cmVhbShkZWNvbXByZXNzZWQpKTtcbiAgICBjYXNlIENvbXByZXNzaW9uTWV0aG9kLkx6bWE6XG4gICAgICB0aHJvdyBuZXcgSW5jaWRlbnQoXCJOb3RJbXBsZW1lbnRlZFwiLCBcIlN1cHBvcnQgZm9yIExaTUEgY29tcHJlc3Npb24gaXMgbm90IGltcGxlbWVudGVkIHlldFwiKTtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEluY2lkZW50KFwiVW5rbm93bkNvbXByZXNzaW9uTWV0aG9kXCIsIFwiVW5rbm93biBjb21wcmVzc2lvbiBtZXRob2RcIik7XG4gIH1cbn1cbiJdfQ==

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer, process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Transform = __webpack_require__(340);

var binding = __webpack_require__(350);
var util = __webpack_require__(49);
var assert = __webpack_require__(358).ok;

// zlib doesn't provide these, so kludge them in following the same
// const naming scheme zlib uses.
binding.Z_MIN_WINDOWBITS = 8;
binding.Z_MAX_WINDOWBITS = 15;
binding.Z_DEFAULT_WINDOWBITS = 15;

// fewer than 64 bytes per chunk is stupid.
// technically it could work with as few as 8, but even 64 bytes
// is absurdly low.  Usually a MB or more is best.
binding.Z_MIN_CHUNK = 64;
binding.Z_MAX_CHUNK = Infinity;
binding.Z_DEFAULT_CHUNK = (16 * 1024);

binding.Z_MIN_MEMLEVEL = 1;
binding.Z_MAX_MEMLEVEL = 9;
binding.Z_DEFAULT_MEMLEVEL = 8;

binding.Z_MIN_LEVEL = -1;
binding.Z_MAX_LEVEL = 9;
binding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;

// expose all the zlib constants
Object.keys(binding).forEach(function(k) {
  if (k.match(/^Z/)) exports[k] = binding[k];
});

// translation table for return codes.
exports.codes = {
  Z_OK: binding.Z_OK,
  Z_STREAM_END: binding.Z_STREAM_END,
  Z_NEED_DICT: binding.Z_NEED_DICT,
  Z_ERRNO: binding.Z_ERRNO,
  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,
  Z_DATA_ERROR: binding.Z_DATA_ERROR,
  Z_MEM_ERROR: binding.Z_MEM_ERROR,
  Z_BUF_ERROR: binding.Z_BUF_ERROR,
  Z_VERSION_ERROR: binding.Z_VERSION_ERROR
};

Object.keys(exports.codes).forEach(function(k) {
  exports.codes[exports.codes[k]] = k;
});

exports.Deflate = Deflate;
exports.Inflate = Inflate;
exports.Gzip = Gzip;
exports.Gunzip = Gunzip;
exports.DeflateRaw = DeflateRaw;
exports.InflateRaw = InflateRaw;
exports.Unzip = Unzip;

exports.createDeflate = function(o) {
  return new Deflate(o);
};

exports.createInflate = function(o) {
  return new Inflate(o);
};

exports.createDeflateRaw = function(o) {
  return new DeflateRaw(o);
};

exports.createInflateRaw = function(o) {
  return new InflateRaw(o);
};

exports.createGzip = function(o) {
  return new Gzip(o);
};

exports.createGunzip = function(o) {
  return new Gunzip(o);
};

exports.createUnzip = function(o) {
  return new Unzip(o);
};


// Convenience methods.
// compress/decompress a string or buffer in one step.
exports.deflate = function(buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Deflate(opts), buffer, callback);
};

exports.deflateSync = function(buffer, opts) {
  return zlibBufferSync(new Deflate(opts), buffer);
};

exports.gzip = function(buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Gzip(opts), buffer, callback);
};

exports.gzipSync = function(buffer, opts) {
  return zlibBufferSync(new Gzip(opts), buffer);
};

exports.deflateRaw = function(buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new DeflateRaw(opts), buffer, callback);
};

exports.deflateRawSync = function(buffer, opts) {
  return zlibBufferSync(new DeflateRaw(opts), buffer);
};

exports.unzip = function(buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Unzip(opts), buffer, callback);
};

exports.unzipSync = function(buffer, opts) {
  return zlibBufferSync(new Unzip(opts), buffer);
};

exports.inflate = function(buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Inflate(opts), buffer, callback);
};

exports.inflateSync = function(buffer, opts) {
  return zlibBufferSync(new Inflate(opts), buffer);
};

exports.gunzip = function(buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Gunzip(opts), buffer, callback);
};

exports.gunzipSync = function(buffer, opts) {
  return zlibBufferSync(new Gunzip(opts), buffer);
};

exports.inflateRaw = function(buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new InflateRaw(opts), buffer, callback);
};

exports.inflateRawSync = function(buffer, opts) {
  return zlibBufferSync(new InflateRaw(opts), buffer);
};

function zlibBuffer(engine, buffer, callback) {
  var buffers = [];
  var nread = 0;

  engine.on('error', onError);
  engine.on('end', onEnd);

  engine.end(buffer);
  flow();

  function flow() {
    var chunk;
    while (null !== (chunk = engine.read())) {
      buffers.push(chunk);
      nread += chunk.length;
    }
    engine.once('readable', flow);
  }

  function onError(err) {
    engine.removeListener('end', onEnd);
    engine.removeListener('readable', flow);
    callback(err);
  }

  function onEnd() {
    var buf = Buffer.concat(buffers, nread);
    buffers = [];
    callback(null, buf);
    engine.close();
  }
}

function zlibBufferSync(engine, buffer) {
  if (typeof buffer === 'string')
    buffer = new Buffer(buffer);
  if (!Buffer.isBuffer(buffer))
    throw new TypeError('Not a string or buffer');

  var flushFlag = binding.Z_FINISH;

  return engine._processChunk(buffer, flushFlag);
}

// generic zlib
// minimal 2-byte header
function Deflate(opts) {
  if (!(this instanceof Deflate)) return new Deflate(opts);
  Zlib.call(this, opts, binding.DEFLATE);
}

function Inflate(opts) {
  if (!(this instanceof Inflate)) return new Inflate(opts);
  Zlib.call(this, opts, binding.INFLATE);
}



// gzip - bigger header, same deflate compression
function Gzip(opts) {
  if (!(this instanceof Gzip)) return new Gzip(opts);
  Zlib.call(this, opts, binding.GZIP);
}

function Gunzip(opts) {
  if (!(this instanceof Gunzip)) return new Gunzip(opts);
  Zlib.call(this, opts, binding.GUNZIP);
}



// raw - no header
function DeflateRaw(opts) {
  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);
  Zlib.call(this, opts, binding.DEFLATERAW);
}

function InflateRaw(opts) {
  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);
  Zlib.call(this, opts, binding.INFLATERAW);
}


// auto-detect header.
function Unzip(opts) {
  if (!(this instanceof Unzip)) return new Unzip(opts);
  Zlib.call(this, opts, binding.UNZIP);
}


// the Zlib class they all inherit from
// This thing manages the queue of requests, and returns
// true or false if there is anything in the queue when
// you call the .write() method.

function Zlib(opts, mode) {
  this._opts = opts = opts || {};
  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;

  Transform.call(this, opts);

  if (opts.flush) {
    if (opts.flush !== binding.Z_NO_FLUSH &&
        opts.flush !== binding.Z_PARTIAL_FLUSH &&
        opts.flush !== binding.Z_SYNC_FLUSH &&
        opts.flush !== binding.Z_FULL_FLUSH &&
        opts.flush !== binding.Z_FINISH &&
        opts.flush !== binding.Z_BLOCK) {
      throw new Error('Invalid flush flag: ' + opts.flush);
    }
  }
  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;

  if (opts.chunkSize) {
    if (opts.chunkSize < exports.Z_MIN_CHUNK ||
        opts.chunkSize > exports.Z_MAX_CHUNK) {
      throw new Error('Invalid chunk size: ' + opts.chunkSize);
    }
  }

  if (opts.windowBits) {
    if (opts.windowBits < exports.Z_MIN_WINDOWBITS ||
        opts.windowBits > exports.Z_MAX_WINDOWBITS) {
      throw new Error('Invalid windowBits: ' + opts.windowBits);
    }
  }

  if (opts.level) {
    if (opts.level < exports.Z_MIN_LEVEL ||
        opts.level > exports.Z_MAX_LEVEL) {
      throw new Error('Invalid compression level: ' + opts.level);
    }
  }

  if (opts.memLevel) {
    if (opts.memLevel < exports.Z_MIN_MEMLEVEL ||
        opts.memLevel > exports.Z_MAX_MEMLEVEL) {
      throw new Error('Invalid memLevel: ' + opts.memLevel);
    }
  }

  if (opts.strategy) {
    if (opts.strategy != exports.Z_FILTERED &&
        opts.strategy != exports.Z_HUFFMAN_ONLY &&
        opts.strategy != exports.Z_RLE &&
        opts.strategy != exports.Z_FIXED &&
        opts.strategy != exports.Z_DEFAULT_STRATEGY) {
      throw new Error('Invalid strategy: ' + opts.strategy);
    }
  }

  if (opts.dictionary) {
    if (!Buffer.isBuffer(opts.dictionary)) {
      throw new Error('Invalid dictionary: it should be a Buffer instance');
    }
  }

  this._binding = new binding.Zlib(mode);

  var self = this;
  this._hadError = false;
  this._binding.onerror = function(message, errno) {
    // there is no way to cleanly recover.
    // continuing only obscures problems.
    self._binding = null;
    self._hadError = true;

    var error = new Error(message);
    error.errno = errno;
    error.code = exports.codes[errno];
    self.emit('error', error);
  };

  var level = exports.Z_DEFAULT_COMPRESSION;
  if (typeof opts.level === 'number') level = opts.level;

  var strategy = exports.Z_DEFAULT_STRATEGY;
  if (typeof opts.strategy === 'number') strategy = opts.strategy;

  this._binding.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS,
                     level,
                     opts.memLevel || exports.Z_DEFAULT_MEMLEVEL,
                     strategy,
                     opts.dictionary);

  this._buffer = new Buffer(this._chunkSize);
  this._offset = 0;
  this._closed = false;
  this._level = level;
  this._strategy = strategy;

  this.once('end', this.close);
}

util.inherits(Zlib, Transform);

Zlib.prototype.params = function(level, strategy, callback) {
  if (level < exports.Z_MIN_LEVEL ||
      level > exports.Z_MAX_LEVEL) {
    throw new RangeError('Invalid compression level: ' + level);
  }
  if (strategy != exports.Z_FILTERED &&
      strategy != exports.Z_HUFFMAN_ONLY &&
      strategy != exports.Z_RLE &&
      strategy != exports.Z_FIXED &&
      strategy != exports.Z_DEFAULT_STRATEGY) {
    throw new TypeError('Invalid strategy: ' + strategy);
  }

  if (this._level !== level || this._strategy !== strategy) {
    var self = this;
    this.flush(binding.Z_SYNC_FLUSH, function() {
      self._binding.params(level, strategy);
      if (!self._hadError) {
        self._level = level;
        self._strategy = strategy;
        if (callback) callback();
      }
    });
  } else {
    process.nextTick(callback);
  }
};

Zlib.prototype.reset = function() {
  return this._binding.reset();
};

// This is the _flush function called by the transform class,
// internally, when the last chunk has been written.
Zlib.prototype._flush = function(callback) {
  this._transform(new Buffer(0), '', callback);
};

Zlib.prototype.flush = function(kind, callback) {
  var ws = this._writableState;

  if (typeof kind === 'function' || (kind === void 0 && !callback)) {
    callback = kind;
    kind = binding.Z_FULL_FLUSH;
  }

  if (ws.ended) {
    if (callback)
      process.nextTick(callback);
  } else if (ws.ending) {
    if (callback)
      this.once('end', callback);
  } else if (ws.needDrain) {
    var self = this;
    this.once('drain', function() {
      self.flush(callback);
    });
  } else {
    this._flushFlag = kind;
    this.write(new Buffer(0), '', callback);
  }
};

Zlib.prototype.close = function(callback) {
  if (callback)
    process.nextTick(callback);

  if (this._closed)
    return;

  this._closed = true;

  this._binding.close();

  var self = this;
  process.nextTick(function() {
    self.emit('close');
  });
};

Zlib.prototype._transform = function(chunk, encoding, cb) {
  var flushFlag;
  var ws = this._writableState;
  var ending = ws.ending || ws.ended;
  var last = ending && (!chunk || ws.length === chunk.length);

  if (!chunk === null && !Buffer.isBuffer(chunk))
    return cb(new Error('invalid input'));

  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag.
  // If it's explicitly flushing at some other time, then we use
  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression
  // goodness.
  if (last)
    flushFlag = binding.Z_FINISH;
  else {
    flushFlag = this._flushFlag;
    // once we've flushed the last of the queue, stop flushing and
    // go back to the normal behavior.
    if (chunk.length >= ws.length) {
      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;
    }
  }

  var self = this;
  this._processChunk(chunk, flushFlag, cb);
};

Zlib.prototype._processChunk = function(chunk, flushFlag, cb) {
  var availInBefore = chunk && chunk.length;
  var availOutBefore = this._chunkSize - this._offset;
  var inOff = 0;

  var self = this;

  var async = typeof cb === 'function';

  if (!async) {
    var buffers = [];
    var nread = 0;

    var error;
    this.on('error', function(er) {
      error = er;
    });

    do {
      var res = this._binding.writeSync(flushFlag,
                                        chunk, // in
                                        inOff, // in_off
                                        availInBefore, // in_len
                                        this._buffer, // out
                                        this._offset, //out_off
                                        availOutBefore); // out_len
    } while (!this._hadError && callback(res[0], res[1]));

    if (this._hadError) {
      throw error;
    }

    var buf = Buffer.concat(buffers, nread);
    this.close();

    return buf;
  }

  var req = this._binding.write(flushFlag,
                                chunk, // in
                                inOff, // in_off
                                availInBefore, // in_len
                                this._buffer, // out
                                this._offset, //out_off
                                availOutBefore); // out_len

  req.buffer = chunk;
  req.callback = callback;

  function callback(availInAfter, availOutAfter) {
    if (self._hadError)
      return;

    var have = availOutBefore - availOutAfter;
    assert(have >= 0, 'have should not go down');

    if (have > 0) {
      var out = self._buffer.slice(self._offset, self._offset + have);
      self._offset += have;
      // serve some output to the consumer.
      if (async) {
        self.push(out);
      } else {
        buffers.push(out);
        nread += out.length;
      }
    }

    // exhausted the output buffer, or used all the input create a new one.
    if (availOutAfter === 0 || self._offset >= self._chunkSize) {
      availOutBefore = self._chunkSize;
      self._offset = 0;
      self._buffer = new Buffer(self._chunkSize);
    }

    if (availOutAfter === 0) {
      // Not actually done.  Need to reprocess.
      // Also, update the availInBefore to the availInAfter value,
      // so that if we have to hit it a third (fourth, etc.) time,
      // it'll have the correct byte counts.
      inOff += (availInBefore - availInAfter);
      availInBefore = availInAfter;

      if (!async)
        return true;

      var newReq = self._binding.write(flushFlag,
                                       chunk,
                                       inOff,
                                       availInBefore,
                                       self._buffer,
                                       self._offset,
                                       self._chunkSize);
      newReq.callback = callback; // this same function
      newReq.buffer = chunk;
      return;
    }

    if (!async)
      return false;

    // finished with the chunk.
    cb();
  }
};

util.inherits(Deflate, Zlib);
util.inherits(Inflate, Zlib);
util.inherits(Gzip, Zlib);
util.inherits(Gunzip, Zlib);
util.inherits(DeflateRaw, Zlib);
util.inherits(InflateRaw, Zlib);
util.inherits(Unzip, Zlib);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer, __webpack_require__(12)))

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(341).Transform


/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(132);
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = __webpack_require__(136);
exports.Duplex = __webpack_require__(20);
exports.Transform = __webpack_require__(138);
exports.PassThrough = __webpack_require__(349);


/***/ }),
/* 342 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 343 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*<replacement>*/

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = __webpack_require__(66).Buffer;
/*</replacement>*/

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(346);
var global = __webpack_require__(347);
exports.setImmediate = global.setImmediate;
exports.clearImmediate = global.clearImmediate;


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9), __webpack_require__(12)))

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var win;

if (typeof window !== "undefined") {
    win = window;
} else if (typeof global !== "undefined") {
    win = global;
} else if (typeof self !== "undefined"){
    win = self;
} else {
    win = {};
}

module.exports = win;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {
/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.



module.exports = PassThrough;

var Transform = __webpack_require__(138);

/*<replacement>*/
var util = __webpack_require__(25);
util.inherits = __webpack_require__(26);
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process, Buffer) {var msg = __webpack_require__(139);
var zstream = __webpack_require__(351);
var zlib_deflate = __webpack_require__(352);
var zlib_inflate = __webpack_require__(354);
var constants = __webpack_require__(357);

for (var key in constants) {
  exports[key] = constants[key];
}

// zlib modes
exports.NONE = 0;
exports.DEFLATE = 1;
exports.INFLATE = 2;
exports.GZIP = 3;
exports.GUNZIP = 4;
exports.DEFLATERAW = 5;
exports.INFLATERAW = 6;
exports.UNZIP = 7;

/**
 * Emulate Node's zlib C++ layer for use by the JS layer in index.js
 */
function Zlib(mode) {
  if (mode < exports.DEFLATE || mode > exports.UNZIP)
    throw new TypeError("Bad argument");
    
  this.mode = mode;
  this.init_done = false;
  this.write_in_progress = false;
  this.pending_close = false;
  this.windowBits = 0;
  this.level = 0;
  this.memLevel = 0;
  this.strategy = 0;
  this.dictionary = null;
}

Zlib.prototype.init = function(windowBits, level, memLevel, strategy, dictionary) {
  this.windowBits = windowBits;
  this.level = level;
  this.memLevel = memLevel;
  this.strategy = strategy;
  // dictionary not supported.
  
  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP)
    this.windowBits += 16;
    
  if (this.mode === exports.UNZIP)
    this.windowBits += 32;
    
  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW)
    this.windowBits = -this.windowBits;
    
  this.strm = new zstream();
  
  switch (this.mode) {
    case exports.DEFLATE:
    case exports.GZIP:
    case exports.DEFLATERAW:
      var status = zlib_deflate.deflateInit2(
        this.strm,
        this.level,
        exports.Z_DEFLATED,
        this.windowBits,
        this.memLevel,
        this.strategy
      );
      break;
    case exports.INFLATE:
    case exports.GUNZIP:
    case exports.INFLATERAW:
    case exports.UNZIP:
      var status  = zlib_inflate.inflateInit2(
        this.strm,
        this.windowBits
      );
      break;
    default:
      throw new Error("Unknown mode " + this.mode);
  }
  
  if (status !== exports.Z_OK) {
    this._error(status);
    return;
  }
  
  this.write_in_progress = false;
  this.init_done = true;
};

Zlib.prototype.params = function() {
  throw new Error("deflateParams Not supported");
};

Zlib.prototype._writeCheck = function() {
  if (!this.init_done)
    throw new Error("write before init");
    
  if (this.mode === exports.NONE)
    throw new Error("already finalized");
    
  if (this.write_in_progress)
    throw new Error("write already in progress");
    
  if (this.pending_close)
    throw new Error("close is pending");
};

Zlib.prototype.write = function(flush, input, in_off, in_len, out, out_off, out_len) {    
  this._writeCheck();
  this.write_in_progress = true;
  
  var self = this;
  process.nextTick(function() {
    self.write_in_progress = false;
    var res = self._write(flush, input, in_off, in_len, out, out_off, out_len);
    self.callback(res[0], res[1]);
    
    if (self.pending_close)
      self.close();
  });
  
  return this;
};

// set method for Node buffers, used by pako
function bufferSet(data, offset) {
  for (var i = 0; i < data.length; i++) {
    this[offset + i] = data[i];
  }
}

Zlib.prototype.writeSync = function(flush, input, in_off, in_len, out, out_off, out_len) {
  this._writeCheck();
  return this._write(flush, input, in_off, in_len, out, out_off, out_len);
};

Zlib.prototype._write = function(flush, input, in_off, in_len, out, out_off, out_len) {
  this.write_in_progress = true;
  
  if (flush !== exports.Z_NO_FLUSH &&
      flush !== exports.Z_PARTIAL_FLUSH &&
      flush !== exports.Z_SYNC_FLUSH &&
      flush !== exports.Z_FULL_FLUSH &&
      flush !== exports.Z_FINISH &&
      flush !== exports.Z_BLOCK) {
    throw new Error("Invalid flush value");
  }
  
  if (input == null) {
    input = new Buffer(0);
    in_len = 0;
    in_off = 0;
  }
  
  if (out._set)
    out.set = out._set;
  else
    out.set = bufferSet;
  
  var strm = this.strm;
  strm.avail_in = in_len;
  strm.input = input;
  strm.next_in = in_off;
  strm.avail_out = out_len;
  strm.output = out;
  strm.next_out = out_off;
  
  switch (this.mode) {
    case exports.DEFLATE:
    case exports.GZIP:
    case exports.DEFLATERAW:
      var status = zlib_deflate.deflate(strm, flush);
      break;
    case exports.UNZIP:
    case exports.INFLATE:
    case exports.GUNZIP:
    case exports.INFLATERAW:
      var status = zlib_inflate.inflate(strm, flush);
      break;
    default:
      throw new Error("Unknown mode " + this.mode);
  }
  
  if (status !== exports.Z_STREAM_END && status !== exports.Z_OK) {
    this._error(status);
  }
  
  this.write_in_progress = false;
  return [strm.avail_in, strm.avail_out];
};

Zlib.prototype.close = function() {
  if (this.write_in_progress) {
    this.pending_close = true;
    return;
  }
  
  this.pending_close = false;
  
  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {
    zlib_deflate.deflateEnd(this.strm);
  } else {
    zlib_inflate.inflateEnd(this.strm);
  }
  
  this.mode = exports.NONE;
};

Zlib.prototype.reset = function() {
  switch (this.mode) {
    case exports.DEFLATE:
    case exports.DEFLATERAW:
      var status = zlib_deflate.deflateReset(this.strm);
      break;
    case exports.INFLATE:
    case exports.INFLATERAW:
      var status = zlib_inflate.inflateReset(this.strm);
      break;
  }
  
  if (status !== exports.Z_OK) {
    this._error(status);
  }
};

Zlib.prototype._error = function(status) {
  this.onerror(msg[status] + ': ' + this.strm.msg, status);
  
  this.write_in_progress = false;
  if (this.pending_close)
    this.close();
};

exports.Zlib = Zlib;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12), __webpack_require__(4).Buffer))

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



function ZStream() {
  /* next input byte */
  this.input = null; // JS specific, because we have no pointers
  this.next_in = 0;
  /* number of bytes available at input */
  this.avail_in = 0;
  /* total number of input bytes read so far */
  this.total_in = 0;
  /* next output byte should be put there */
  this.output = null; // JS specific, because we have no pointers
  this.next_out = 0;
  /* remaining free space at output */
  this.avail_out = 0;
  /* total number of bytes output so far */
  this.total_out = 0;
  /* last error message, NULL if no error */
  this.msg = ''/*Z_NULL*/;
  /* not visible by applications */
  this.state = null;
  /* best guess about the data type: binary or text */
  this.data_type = 2/*Z_UNKNOWN*/;
  /* adler32 value of the uncompressed data */
  this.adler = 0;
}

module.exports = ZStream;


/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils   = __webpack_require__(45);
var trees   = __webpack_require__(353);
var adler32 = __webpack_require__(140);
var crc32   = __webpack_require__(141);
var msg     = __webpack_require__(139);

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
var Z_NO_FLUSH      = 0;
var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
//var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
//var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
//var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;


/* compression levels */
//var Z_NO_COMPRESSION      = 0;
//var Z_BEST_SPEED          = 1;
//var Z_BEST_COMPRESSION    = 9;
var Z_DEFAULT_COMPRESSION = -1;


var Z_FILTERED            = 1;
var Z_HUFFMAN_ONLY        = 2;
var Z_RLE                 = 3;
var Z_FIXED               = 4;
var Z_DEFAULT_STRATEGY    = 0;

/* Possible values of the data_type field (though see inflate()) */
//var Z_BINARY              = 0;
//var Z_TEXT                = 1;
//var Z_ASCII               = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;


/* The deflate compression method */
var Z_DEFLATED  = 8;

/*============================================================================*/


var MAX_MEM_LEVEL = 9;
/* Maximum value for memLevel in deflateInit2 */
var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_MEM_LEVEL = 8;


var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */
var LITERALS      = 256;
/* number of literal bytes 0..255 */
var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */
var D_CODES       = 30;
/* number of distance codes */
var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */
var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */
var MAX_BITS  = 15;
/* All codes must not exceed MAX_BITS bits */

var MIN_MATCH = 3;
var MAX_MATCH = 258;
var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);

var PRESET_DICT = 0x20;

var INIT_STATE = 42;
var EXTRA_STATE = 69;
var NAME_STATE = 73;
var COMMENT_STATE = 91;
var HCRC_STATE = 103;
var BUSY_STATE = 113;
var FINISH_STATE = 666;

var BS_NEED_MORE      = 1; /* block not completed, need more input or more output */
var BS_BLOCK_DONE     = 2; /* block flush performed */
var BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
var BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */

var OS_CODE = 0x03; // Unix :) . Don't detect, use this default.

function err(strm, errorCode) {
  strm.msg = msg[errorCode];
  return errorCode;
}

function rank(f) {
  return ((f) << 1) - ((f) > 4 ? 9 : 0);
}

function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }


/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */
function flush_pending(strm) {
  var s = strm.state;

  //_tr_flush_bits(s);
  var len = s.pending;
  if (len > strm.avail_out) {
    len = strm.avail_out;
  }
  if (len === 0) { return; }

  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);
  strm.next_out += len;
  s.pending_out += len;
  strm.total_out += len;
  strm.avail_out -= len;
  s.pending -= len;
  if (s.pending === 0) {
    s.pending_out = 0;
  }
}


function flush_block_only(s, last) {
  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);
  s.block_start = s.strstart;
  flush_pending(s.strm);
}


function put_byte(s, b) {
  s.pending_buf[s.pending++] = b;
}


/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */
function putShortMSB(s, b) {
//  put_byte(s, (Byte)(b >> 8));
//  put_byte(s, (Byte)(b & 0xff));
  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
  s.pending_buf[s.pending++] = b & 0xff;
}


/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */
function read_buf(strm, buf, start, size) {
  var len = strm.avail_in;

  if (len > size) { len = size; }
  if (len === 0) { return 0; }

  strm.avail_in -= len;

  // zmemcpy(buf, strm->next_in, len);
  utils.arraySet(buf, strm.input, strm.next_in, len, start);
  if (strm.state.wrap === 1) {
    strm.adler = adler32(strm.adler, buf, len, start);
  }

  else if (strm.state.wrap === 2) {
    strm.adler = crc32(strm.adler, buf, len, start);
  }

  strm.next_in += len;
  strm.total_in += len;

  return len;
}


/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */
function longest_match(s, cur_match) {
  var chain_length = s.max_chain_length;      /* max hash chain length */
  var scan = s.strstart; /* current string */
  var match;                       /* matched string */
  var len;                           /* length of current match */
  var best_len = s.prev_length;              /* best match length so far */
  var nice_match = s.nice_match;             /* stop if match long enough */
  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?
      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;

  var _win = s.window; // shortcut

  var wmask = s.w_mask;
  var prev  = s.prev;

  /* Stop when cur_match becomes <= limit. To simplify the code,
   * we prevent matches with the string of window index 0.
   */

  var strend = s.strstart + MAX_MATCH;
  var scan_end1  = _win[scan + best_len - 1];
  var scan_end   = _win[scan + best_len];

  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */
  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

  /* Do not waste too much time if we already have a good match: */
  if (s.prev_length >= s.good_match) {
    chain_length >>= 2;
  }
  /* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */
  if (nice_match > s.lookahead) { nice_match = s.lookahead; }

  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

  do {
    // Assert(cur_match < s->strstart, "no future");
    match = cur_match;

    /* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

    if (_win[match + best_len]     !== scan_end  ||
        _win[match + best_len - 1] !== scan_end1 ||
        _win[match]                !== _win[scan] ||
        _win[++match]              !== _win[scan + 1]) {
      continue;
    }

    /* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */
    scan += 2;
    match++;
    // Assert(*scan == *match, "match[2]?");

    /* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */
    do {
      /*jshint noempty:false*/
    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             scan < strend);

    // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

    len = MAX_MATCH - (strend - scan);
    scan = strend - MAX_MATCH;

    if (len > best_len) {
      s.match_start = cur_match;
      best_len = len;
      if (len >= nice_match) {
        break;
      }
      scan_end1  = _win[scan + best_len - 1];
      scan_end   = _win[scan + best_len];
    }
  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);

  if (best_len <= s.lookahead) {
    return best_len;
  }
  return s.lookahead;
}


/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */
function fill_window(s) {
  var _w_size = s.w_size;
  var p, n, m, more, str;

  //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

  do {
    more = s.window_size - s.lookahead - s.strstart;

    // JS ints have 32 bit, block below not needed
    /* Deal with !@#$% 64K limit: */
    //if (sizeof(int) <= 2) {
    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
    //        more = wsize;
    //
    //  } else if (more == (unsigned)(-1)) {
    //        /* Very unlikely, but possible on 16 bit machine if
    //         * strstart == 0 && lookahead == 1 (input done a byte at time)
    //         */
    //        more--;
    //    }
    //}


    /* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */
    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {

      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);
      s.match_start -= _w_size;
      s.strstart -= _w_size;
      /* we now have strstart >= MAX_DIST */
      s.block_start -= _w_size;

      /* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

      n = s.hash_size;
      p = n;
      do {
        m = s.head[--p];
        s.head[p] = (m >= _w_size ? m - _w_size : 0);
      } while (--n);

      n = _w_size;
      p = n;
      do {
        m = s.prev[--p];
        s.prev[p] = (m >= _w_size ? m - _w_size : 0);
        /* If n is not on any hash chain, prev[n] is garbage but
         * its value will never be used.
         */
      } while (--n);

      more += _w_size;
    }
    if (s.strm.avail_in === 0) {
      break;
    }

    /* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */
    //Assert(more >= 2, "more < 2");
    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
    s.lookahead += n;

    /* Initialize the hash value now that we have some input: */
    if (s.lookahead + s.insert >= MIN_MATCH) {
      str = s.strstart - s.insert;
      s.ins_h = s.window[str];

      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;
//#if MIN_MATCH != 3
//        Call update_hash() MIN_MATCH-3 more times
//#endif
      while (s.insert) {
        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

        s.prev[str & s.w_mask] = s.head[s.ins_h];
        s.head[s.ins_h] = str;
        str++;
        s.insert--;
        if (s.lookahead + s.insert < MIN_MATCH) {
          break;
        }
      }
    }
    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);

  /* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */
//  if (s.high_water < s.window_size) {
//    var curr = s.strstart + s.lookahead;
//    var init = 0;
//
//    if (s.high_water < curr) {
//      /* Previous high water mark below current data -- zero WIN_INIT
//       * bytes or up to end of window, whichever is less.
//       */
//      init = s.window_size - curr;
//      if (init > WIN_INIT)
//        init = WIN_INIT;
//      zmemzero(s->window + curr, (unsigned)init);
//      s->high_water = curr + init;
//    }
//    else if (s->high_water < (ulg)curr + WIN_INIT) {
//      /* High water mark at or above current data, but below current data
//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
//       * to end of window, whichever is less.
//       */
//      init = (ulg)curr + WIN_INIT - s->high_water;
//      if (init > s->window_size - s->high_water)
//        init = s->window_size - s->high_water;
//      zmemzero(s->window + s->high_water, (unsigned)init);
//      s->high_water += init;
//    }
//  }
//
//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
//    "not enough room for search");
}

/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 * This function does not insert new strings in the dictionary since
 * uncompressible data is probably not useful. This function is used
 * only for the level=0 compression option.
 * NOTE: this function should be optimized to avoid extra copying from
 * window to pending_buf.
 */
function deflate_stored(s, flush) {
  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */
  var max_block_size = 0xffff;

  if (max_block_size > s.pending_buf_size - 5) {
    max_block_size = s.pending_buf_size - 5;
  }

  /* Copy as much as possible from input to output: */
  for (;;) {
    /* Fill the window as much as possible: */
    if (s.lookahead <= 1) {

      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||
      //  s->block_start >= (long)s->w_size, "slide too late");
//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
//        s.block_start >= s.w_size)) {
//        throw  new Error("slide too late");
//      }

      fill_window(s);
      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }

      if (s.lookahead === 0) {
        break;
      }
      /* flush the current block */
    }
    //Assert(s->block_start >= 0L, "block gone");
//    if (s.block_start < 0) throw new Error("block gone");

    s.strstart += s.lookahead;
    s.lookahead = 0;

    /* Emit a stored block if pending_buf will be full: */
    var max_start = s.block_start + max_block_size;

    if (s.strstart === 0 || s.strstart >= max_start) {
      /* strstart == 0 is possible when wraparound on 16-bit machine */
      s.lookahead = s.strstart - max_start;
      s.strstart = max_start;
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/


    }
    /* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */
    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }

  s.insert = 0;

  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }

  if (s.strstart > s.block_start) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_NEED_MORE;
}

/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */
function deflate_fast(s, flush) {
  var hash_head;        /* head of the hash chain */
  var bflush;           /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break; /* flush the current block */
      }
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */
    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */
    }
    if (s.match_length >= MIN_MATCH) {
      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

      /*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;

      /* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */
      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {
        s.match_length--; /* string at strstart already in table */
        do {
          s.strstart++;
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
          /* strstart never exceeds WSIZE-MAX_MATCH, so there are
           * always MIN_MATCH bytes ahead.
           */
        } while (--s.match_length !== 0);
        s.strstart++;
      } else
      {
        s.strstart += s.match_length;
        s.match_length = 0;
        s.ins_h = s.window[s.strstart];
        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;

//#if MIN_MATCH != 3
//                Call UPDATE_HASH() MIN_MATCH-3 more times
//#endif
        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
         * matter since it will be recomputed at next deflate call.
         */
      }
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s.window[s.strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */
function deflate_slow(s, flush) {
  var hash_head;          /* head of hash chain */
  var bflush;              /* set if current block must be flushed */

  var max_insert;

  /* Process the input block. */
  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     */
    s.prev_length = s.match_length;
    s.prev_match = s.match_start;
    s.match_length = MIN_MATCH - 1;

    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&
        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */

      if (s.match_length <= 5 &&
         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {

        /* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */
        s.match_length = MIN_MATCH - 1;
      }
    }
    /* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */
    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
      max_insert = s.strstart + s.lookahead - MIN_MATCH;
      /* Do not insert strings in hash table beyond this. */

      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);

      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/
      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);
      /* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */
      s.lookahead -= s.prev_length - 1;
      s.prev_length -= 2;
      do {
        if (++s.strstart <= max_insert) {
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
        }
      } while (--s.prev_length !== 0);
      s.match_available = 0;
      s.match_length = MIN_MATCH - 1;
      s.strstart++;

      if (bflush) {
        /*** FLUSH_BLOCK(s, 0); ***/
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
        /***/
      }

    } else if (s.match_available) {
      /* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */
      //Tracevv((stderr,"%c", s->window[s->strstart-1]));
      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

      if (bflush) {
        /*** FLUSH_BLOCK_ONLY(s, 0) ***/
        flush_block_only(s, false);
        /***/
      }
      s.strstart++;
      s.lookahead--;
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    } else {
      /* There is no previous match to compare with, wait for
       * the next step to decide.
       */
      s.match_available = 1;
      s.strstart++;
      s.lookahead--;
    }
  }
  //Assert (flush != Z_NO_FLUSH, "no flush?");
  if (s.match_available) {
    //Tracevv((stderr,"%c", s->window[s->strstart-1]));
    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

    s.match_available = 0;
  }
  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_BLOCK_DONE;
}


/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */
function deflate_rle(s, flush) {
  var bflush;            /* set if current block must be flushed */
  var prev;              /* byte at distance one to match */
  var scan, strend;      /* scan goes up to strend for length of run */

  var _win = s.window;

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */
    if (s.lookahead <= MAX_MATCH) {
      fill_window(s);
      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* See how many times the previous byte repeats */
    s.match_length = 0;
    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
      scan = s.strstart - 1;
      prev = _win[scan];
      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
        strend = s.strstart + MAX_MATCH;
        do {
          /*jshint noempty:false*/
        } while (prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 scan < strend);
        s.match_length = MAX_MATCH - (strend - scan);
        if (s.match_length > s.lookahead) {
          s.match_length = s.lookahead;
        }
      }
      //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
    }

    /* Emit match if have run of MIN_MATCH or longer, else emit literal */
    if (s.match_length >= MIN_MATCH) {
      //check_match(s, s.strstart, s.strstart - 1, s.match_length);

      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;
      s.strstart += s.match_length;
      s.match_length = 0;
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s->window[s->strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */
function deflate_huff(s, flush) {
  var bflush;             /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we have a literal to write. */
    if (s.lookahead === 0) {
      fill_window(s);
      if (s.lookahead === 0) {
        if (flush === Z_NO_FLUSH) {
          return BS_NEED_MORE;
        }
        break;      /* flush the current block */
      }
    }

    /* Output a literal byte */
    s.match_length = 0;
    //Tracevv((stderr,"%c", s->window[s->strstart]));
    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
    s.lookahead--;
    s.strstart++;
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */
function Config(good_length, max_lazy, nice_length, max_chain, func) {
  this.good_length = good_length;
  this.max_lazy = max_lazy;
  this.nice_length = nice_length;
  this.max_chain = max_chain;
  this.func = func;
}

var configuration_table;

configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */

  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */
];


/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */
function lm_init(s) {
  s.window_size = 2 * s.w_size;

  /*** CLEAR_HASH(s); ***/
  zero(s.head); // Fill with NIL (= 0);

  /* Set the default configuration parameters:
   */
  s.max_lazy_match = configuration_table[s.level].max_lazy;
  s.good_match = configuration_table[s.level].good_length;
  s.nice_match = configuration_table[s.level].nice_length;
  s.max_chain_length = configuration_table[s.level].max_chain;

  s.strstart = 0;
  s.block_start = 0;
  s.lookahead = 0;
  s.insert = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  s.ins_h = 0;
}


function DeflateState() {
  this.strm = null;            /* pointer back to this zlib stream */
  this.status = 0;            /* as the name implies */
  this.pending_buf = null;      /* output still pending */
  this.pending_buf_size = 0;  /* size of pending_buf */
  this.pending_out = 0;       /* next pending byte to output to the stream */
  this.pending = 0;           /* nb of bytes in the pending buffer */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.gzhead = null;         /* gzip header information to write */
  this.gzindex = 0;           /* where in extra, name, or comment */
  this.method = Z_DEFLATED; /* can only be DEFLATED */
  this.last_flush = -1;   /* value of flush param for previous deflate call */

  this.w_size = 0;  /* LZ77 window size (32K by default) */
  this.w_bits = 0;  /* log2(w_size)  (8..16) */
  this.w_mask = 0;  /* w_size - 1 */

  this.window = null;
  /* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

  this.window_size = 0;
  /* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

  this.prev = null;
  /* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

  this.head = null;   /* Heads of the hash chains or NIL. */

  this.ins_h = 0;       /* hash index of string to be inserted */
  this.hash_size = 0;   /* number of elements in hash table */
  this.hash_bits = 0;   /* log2(hash_size) */
  this.hash_mask = 0;   /* hash_size-1 */

  this.hash_shift = 0;
  /* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

  this.block_start = 0;
  /* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

  this.match_length = 0;      /* length of best match */
  this.prev_match = 0;        /* previous match */
  this.match_available = 0;   /* set if previous match exists */
  this.strstart = 0;          /* start of string to insert */
  this.match_start = 0;       /* start of matching string */
  this.lookahead = 0;         /* number of valid bytes ahead in window */

  this.prev_length = 0;
  /* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

  this.max_chain_length = 0;
  /* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

  this.max_lazy_match = 0;
  /* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */
  // That's alias to max_lazy_match, don't use directly
  //this.max_insert_length = 0;
  /* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

  this.level = 0;     /* compression level (1..9) */
  this.strategy = 0;  /* favor or force Huffman coding*/

  this.good_match = 0;
  /* Use a faster search when the previous match is longer than this */

  this.nice_match = 0; /* Stop searching when current match exceeds this */

              /* used by trees.c: */

  /* Didn't use ct_data typedef below to suppress compiler warning */

  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

  // Use flat array of DOUBLE size, with interleaved fata,
  // because JS does not support effective
  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);
  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);
  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);
  zero(this.dyn_ltree);
  zero(this.dyn_dtree);
  zero(this.bl_tree);

  this.l_desc   = null;         /* desc. for literal tree */
  this.d_desc   = null;         /* desc. for distance tree */
  this.bl_desc  = null;         /* desc. for bit length tree */

  //ush bl_count[MAX_BITS+1];
  this.bl_count = new utils.Buf16(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */
  zero(this.heap);

  this.heap_len = 0;               /* number of elements in the heap */
  this.heap_max = 0;               /* element of largest frequency */
  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];
  zero(this.depth);
  /* Depth of each subtree used as tie breaker for trees of equal frequency
   */

  this.l_buf = 0;          /* buffer index for literals or lengths */

  this.lit_bufsize = 0;
  /* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

  this.last_lit = 0;      /* running index in l_buf */

  this.d_buf = 0;
  /* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */

  this.opt_len = 0;       /* bit length of current block with optimal trees */
  this.static_len = 0;    /* bit length of current block with static trees */
  this.matches = 0;       /* number of string matches in current block */
  this.insert = 0;        /* bytes at end of window left to insert */


  this.bi_buf = 0;
  /* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */
  this.bi_valid = 0;
  /* Number of valid bits in bi_buf.  All bits above the last valid bit
   * are always zero.
   */

  // Used for window memory init. We safely ignore it for JS. That makes
  // sense only for pointers and memory check tools.
  //this.high_water = 0;
  /* High water mark offset in window for initialized bytes -- bytes above
   * this are set to zero in order to avoid memory check warnings when
   * longest match routines access bytes past the input.  This is then
   * updated to the new high water mark.
   */
}


function deflateResetKeep(strm) {
  var s;

  if (!strm || !strm.state) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.total_in = strm.total_out = 0;
  strm.data_type = Z_UNKNOWN;

  s = strm.state;
  s.pending = 0;
  s.pending_out = 0;

  if (s.wrap < 0) {
    s.wrap = -s.wrap;
    /* was made negative by deflate(..., Z_FINISH); */
  }
  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);
  strm.adler = (s.wrap === 2) ?
    0  // crc32(0, Z_NULL, 0)
  :
    1; // adler32(0, Z_NULL, 0)
  s.last_flush = Z_NO_FLUSH;
  trees._tr_init(s);
  return Z_OK;
}


function deflateReset(strm) {
  var ret = deflateResetKeep(strm);
  if (ret === Z_OK) {
    lm_init(strm.state);
  }
  return ret;
}


function deflateSetHeader(strm, head) {
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }
  strm.state.gzhead = head;
  return Z_OK;
}


function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {
  if (!strm) { // === Z_NULL
    return Z_STREAM_ERROR;
  }
  var wrap = 1;

  if (level === Z_DEFAULT_COMPRESSION) {
    level = 6;
  }

  if (windowBits < 0) { /* suppress zlib wrapper */
    wrap = 0;
    windowBits = -windowBits;
  }

  else if (windowBits > 15) {
    wrap = 2;           /* write gzip wrapper instead */
    windowBits -= 16;
  }


  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||
    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||
    strategy < 0 || strategy > Z_FIXED) {
    return err(strm, Z_STREAM_ERROR);
  }


  if (windowBits === 8) {
    windowBits = 9;
  }
  /* until 256-byte window bug fixed */

  var s = new DeflateState();

  strm.state = s;
  s.strm = strm;

  s.wrap = wrap;
  s.gzhead = null;
  s.w_bits = windowBits;
  s.w_size = 1 << s.w_bits;
  s.w_mask = s.w_size - 1;

  s.hash_bits = memLevel + 7;
  s.hash_size = 1 << s.hash_bits;
  s.hash_mask = s.hash_size - 1;
  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);

  s.window = new utils.Buf8(s.w_size * 2);
  s.head = new utils.Buf16(s.hash_size);
  s.prev = new utils.Buf16(s.w_size);

  // Don't need mem init magic for JS.
  //s.high_water = 0;  /* nothing written to s->window yet */

  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */

  s.pending_buf_size = s.lit_bufsize * 4;

  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);
  //s->pending_buf = (uchf *) overlay;
  s.pending_buf = new utils.Buf8(s.pending_buf_size);

  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)
  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);
  s.d_buf = 1 * s.lit_bufsize;

  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;
  s.l_buf = (1 + 2) * s.lit_bufsize;

  s.level = level;
  s.strategy = strategy;
  s.method = method;

  return deflateReset(strm);
}

function deflateInit(strm, level) {
  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
}


function deflate(strm, flush) {
  var old_flush, s;
  var beg, val; // for gzip header write only

  if (!strm || !strm.state ||
    flush > Z_BLOCK || flush < 0) {
    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
  }

  s = strm.state;

  if (!strm.output ||
      (!strm.input && strm.avail_in !== 0) ||
      (s.status === FINISH_STATE && flush !== Z_FINISH)) {
    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);
  }

  s.strm = strm; /* just in case */
  old_flush = s.last_flush;
  s.last_flush = flush;

  /* Write the header */
  if (s.status === INIT_STATE) {

    if (s.wrap === 2) { // GZIP header
      strm.adler = 0;  //crc32(0L, Z_NULL, 0);
      put_byte(s, 31);
      put_byte(s, 139);
      put_byte(s, 8);
      if (!s.gzhead) { // s->gzhead == Z_NULL
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, OS_CODE);
        s.status = BUSY_STATE;
      }
      else {
        put_byte(s, (s.gzhead.text ? 1 : 0) +
                    (s.gzhead.hcrc ? 2 : 0) +
                    (!s.gzhead.extra ? 0 : 4) +
                    (!s.gzhead.name ? 0 : 8) +
                    (!s.gzhead.comment ? 0 : 16)
                );
        put_byte(s, s.gzhead.time & 0xff);
        put_byte(s, (s.gzhead.time >> 8) & 0xff);
        put_byte(s, (s.gzhead.time >> 16) & 0xff);
        put_byte(s, (s.gzhead.time >> 24) & 0xff);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, s.gzhead.os & 0xff);
        if (s.gzhead.extra && s.gzhead.extra.length) {
          put_byte(s, s.gzhead.extra.length & 0xff);
          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
        }
        if (s.gzhead.hcrc) {
          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
        }
        s.gzindex = 0;
        s.status = EXTRA_STATE;
      }
    }
    else // DEFLATE header
    {
      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;
      var level_flags = -1;

      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
        level_flags = 0;
      } else if (s.level < 6) {
        level_flags = 1;
      } else if (s.level === 6) {
        level_flags = 2;
      } else {
        level_flags = 3;
      }
      header |= (level_flags << 6);
      if (s.strstart !== 0) { header |= PRESET_DICT; }
      header += 31 - (header % 31);

      s.status = BUSY_STATE;
      putShortMSB(s, header);

      /* Save the adler32 of the preset dictionary: */
      if (s.strstart !== 0) {
        putShortMSB(s, strm.adler >>> 16);
        putShortMSB(s, strm.adler & 0xffff);
      }
      strm.adler = 1; // adler32(0L, Z_NULL, 0);
    }
  }

//#ifdef GZIP
  if (s.status === EXTRA_STATE) {
    if (s.gzhead.extra/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */

      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            break;
          }
        }
        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);
        s.gzindex++;
      }
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (s.gzindex === s.gzhead.extra.length) {
        s.gzindex = 0;
        s.status = NAME_STATE;
      }
    }
    else {
      s.status = NAME_STATE;
    }
  }
  if (s.status === NAME_STATE) {
    if (s.gzhead.name/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.name.length) {
          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.gzindex = 0;
        s.status = COMMENT_STATE;
      }
    }
    else {
      s.status = COMMENT_STATE;
    }
  }
  if (s.status === COMMENT_STATE) {
    if (s.gzhead.comment/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.comment.length) {
          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.status = HCRC_STATE;
      }
    }
    else {
      s.status = HCRC_STATE;
    }
  }
  if (s.status === HCRC_STATE) {
    if (s.gzhead.hcrc) {
      if (s.pending + 2 > s.pending_buf_size) {
        flush_pending(strm);
      }
      if (s.pending + 2 <= s.pending_buf_size) {
        put_byte(s, strm.adler & 0xff);
        put_byte(s, (strm.adler >> 8) & 0xff);
        strm.adler = 0; //crc32(0L, Z_NULL, 0);
        s.status = BUSY_STATE;
      }
    }
    else {
      s.status = BUSY_STATE;
    }
  }
//#endif

  /* Flush as much pending output as possible */
  if (s.pending !== 0) {
    flush_pending(strm);
    if (strm.avail_out === 0) {
      /* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */
      s.last_flush = -1;
      return Z_OK;
    }

    /* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */
  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&
    flush !== Z_FINISH) {
    return err(strm, Z_BUF_ERROR);
  }

  /* User must not provide more input after the first FINISH: */
  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
    return err(strm, Z_BUF_ERROR);
  }

  /* Start a new block or continue the current one.
   */
  if (strm.avail_in !== 0 || s.lookahead !== 0 ||
    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {
    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :
      (s.strategy === Z_RLE ? deflate_rle(s, flush) :
        configuration_table[s.level].func(s, flush));

    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
      s.status = FINISH_STATE;
    }
    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
      if (strm.avail_out === 0) {
        s.last_flush = -1;
        /* avoid BUF_ERROR next call, see above */
      }
      return Z_OK;
      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */
    }
    if (bstate === BS_BLOCK_DONE) {
      if (flush === Z_PARTIAL_FLUSH) {
        trees._tr_align(s);
      }
      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */

        trees._tr_stored_block(s, 0, 0, false);
        /* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */
        if (flush === Z_FULL_FLUSH) {
          /*** CLEAR_HASH(s); ***/             /* forget history */
          zero(s.head); // Fill with NIL (= 0);

          if (s.lookahead === 0) {
            s.strstart = 0;
            s.block_start = 0;
            s.insert = 0;
          }
        }
      }
      flush_pending(strm);
      if (strm.avail_out === 0) {
        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */
        return Z_OK;
      }
    }
  }
  //Assert(strm->avail_out > 0, "bug2");
  //if (strm.avail_out <= 0) { throw new Error("bug2");}

  if (flush !== Z_FINISH) { return Z_OK; }
  if (s.wrap <= 0) { return Z_STREAM_END; }

  /* Write the trailer */
  if (s.wrap === 2) {
    put_byte(s, strm.adler & 0xff);
    put_byte(s, (strm.adler >> 8) & 0xff);
    put_byte(s, (strm.adler >> 16) & 0xff);
    put_byte(s, (strm.adler >> 24) & 0xff);
    put_byte(s, strm.total_in & 0xff);
    put_byte(s, (strm.total_in >> 8) & 0xff);
    put_byte(s, (strm.total_in >> 16) & 0xff);
    put_byte(s, (strm.total_in >> 24) & 0xff);
  }
  else
  {
    putShortMSB(s, strm.adler >>> 16);
    putShortMSB(s, strm.adler & 0xffff);
  }

  flush_pending(strm);
  /* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */
  if (s.wrap > 0) { s.wrap = -s.wrap; }
  /* write the trailer only once! */
  return s.pending !== 0 ? Z_OK : Z_STREAM_END;
}

function deflateEnd(strm) {
  var status;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  status = strm.state.status;
  if (status !== INIT_STATE &&
    status !== EXTRA_STATE &&
    status !== NAME_STATE &&
    status !== COMMENT_STATE &&
    status !== HCRC_STATE &&
    status !== BUSY_STATE &&
    status !== FINISH_STATE
  ) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.state = null;

  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
}


/* =========================================================================
 * Initializes the compression dictionary from the given byte
 * sequence without producing any compressed output.
 */
function deflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var s;
  var str, n;
  var wrap;
  var avail;
  var next;
  var input;
  var tmpDict;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  s = strm.state;
  wrap = s.wrap;

  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {
    return Z_STREAM_ERROR;
  }

  /* when using zlib wrappers, compute Adler-32 for provided dictionary */
  if (wrap === 1) {
    /* adler32(strm->adler, dictionary, dictLength); */
    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
  }

  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */

  /* if dictionary would fill window, just replace the history */
  if (dictLength >= s.w_size) {
    if (wrap === 0) {            /* already empty otherwise */
      /*** CLEAR_HASH(s); ***/
      zero(s.head); // Fill with NIL (= 0);
      s.strstart = 0;
      s.block_start = 0;
      s.insert = 0;
    }
    /* use the tail */
    // dictionary = dictionary.slice(dictLength - s.w_size);
    tmpDict = new utils.Buf8(s.w_size);
    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);
    dictionary = tmpDict;
    dictLength = s.w_size;
  }
  /* insert dictionary into window and hash */
  avail = strm.avail_in;
  next = strm.next_in;
  input = strm.input;
  strm.avail_in = dictLength;
  strm.next_in = 0;
  strm.input = dictionary;
  fill_window(s);
  while (s.lookahead >= MIN_MATCH) {
    str = s.strstart;
    n = s.lookahead - (MIN_MATCH - 1);
    do {
      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

      s.prev[str & s.w_mask] = s.head[s.ins_h];

      s.head[s.ins_h] = str;
      str++;
    } while (--n);
    s.strstart = str;
    s.lookahead = MIN_MATCH - 1;
    fill_window(s);
  }
  s.strstart += s.lookahead;
  s.block_start = s.strstart;
  s.insert = s.lookahead;
  s.lookahead = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  strm.next_in = next;
  strm.input = input;
  strm.avail_in = avail;
  s.wrap = wrap;
  return Z_OK;
}


exports.deflateInit = deflateInit;
exports.deflateInit2 = deflateInit2;
exports.deflateReset = deflateReset;
exports.deflateResetKeep = deflateResetKeep;
exports.deflateSetHeader = deflateSetHeader;
exports.deflate = deflate;
exports.deflateEnd = deflateEnd;
exports.deflateSetDictionary = deflateSetDictionary;
exports.deflateInfo = 'pako deflate (from Nodeca project)';

/* Not implemented
exports.deflateBound = deflateBound;
exports.deflateCopy = deflateCopy;
exports.deflateParams = deflateParams;
exports.deflatePending = deflatePending;
exports.deflatePrime = deflatePrime;
exports.deflateTune = deflateTune;
*/


/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var utils = __webpack_require__(45);

/* Public constants ==========================================================*/
/* ===========================================================================*/


//var Z_FILTERED          = 1;
//var Z_HUFFMAN_ONLY      = 2;
//var Z_RLE               = 3;
var Z_FIXED               = 4;
//var Z_DEFAULT_STRATEGY  = 0;

/* Possible values of the data_type field (though see inflate()) */
var Z_BINARY              = 0;
var Z_TEXT                = 1;
//var Z_ASCII             = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;

/*============================================================================*/


function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }

// From zutil.h

var STORED_BLOCK = 0;
var STATIC_TREES = 1;
var DYN_TREES    = 2;
/* The three kinds of block type */

var MIN_MATCH    = 3;
var MAX_MATCH    = 258;
/* The minimum and maximum match lengths */

// From deflate.h
/* ===========================================================================
 * Internal compression state.
 */

var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */

var LITERALS      = 256;
/* number of literal bytes 0..255 */

var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */

var D_CODES       = 30;
/* number of distance codes */

var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */

var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */

var MAX_BITS      = 15;
/* All codes must not exceed MAX_BITS bits */

var Buf_size      = 16;
/* size of bit buffer in bi_buf */


/* ===========================================================================
 * Constants
 */

var MAX_BL_BITS = 7;
/* Bit length codes must not exceed MAX_BL_BITS bits */

var END_BLOCK   = 256;
/* end of block literal code */

var REP_3_6     = 16;
/* repeat previous bit length 3-6 times (2 bits of repeat count) */

var REPZ_3_10   = 17;
/* repeat a zero length 3-10 times  (3 bits of repeat count) */

var REPZ_11_138 = 18;
/* repeat a zero length 11-138 times  (7 bits of repeat count) */

/* eslint-disable comma-spacing,array-bracket-spacing */
var extra_lbits =   /* extra bits for each length code */
  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];

var extra_dbits =   /* extra bits for each distance code */
  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];

var extra_blbits =  /* extra bits for each bit length code */
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];

var bl_order =
  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
/* eslint-enable comma-spacing,array-bracket-spacing */

/* The lengths of the bit length codes are sent in order of decreasing
 * probability, to avoid transmitting the lengths for unused bit length codes.
 */

/* ===========================================================================
 * Local data. These are initialized only once.
 */

// We pre-fill arrays with 0 to avoid uninitialized gaps

var DIST_CODE_LEN = 512; /* see definition of array dist_code below */

// !!!! Use flat array insdead of structure, Freq = i*2, Len = i*2+1
var static_ltree  = new Array((L_CODES + 2) * 2);
zero(static_ltree);
/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

var static_dtree  = new Array(D_CODES * 2);
zero(static_dtree);
/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

var _dist_code    = new Array(DIST_CODE_LEN);
zero(_dist_code);
/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

var _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);
zero(_length_code);
/* length code for each normalized match length (0 == MIN_MATCH) */

var base_length   = new Array(LENGTH_CODES);
zero(base_length);
/* First normalized length for each code (0 = MIN_MATCH) */

var base_dist     = new Array(D_CODES);
zero(base_dist);
/* First normalized distance for each code (0 = distance of 1) */


function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {

  this.static_tree  = static_tree;  /* static tree or NULL */
  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */
  this.extra_base   = extra_base;   /* base index for extra_bits */
  this.elems        = elems;        /* max number of elements in the tree */
  this.max_length   = max_length;   /* max bit length for the codes */

  // show if `static_tree` has data or dummy - needed for monomorphic objects
  this.has_stree    = static_tree && static_tree.length;
}


var static_l_desc;
var static_d_desc;
var static_bl_desc;


function TreeDesc(dyn_tree, stat_desc) {
  this.dyn_tree = dyn_tree;     /* the dynamic tree */
  this.max_code = 0;            /* largest code with non zero frequency */
  this.stat_desc = stat_desc;   /* the corresponding static tree */
}



function d_code(dist) {
  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
}


/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */
function put_short(s, w) {
//    put_byte(s, (uch)((w) & 0xff));
//    put_byte(s, (uch)((ush)(w) >> 8));
  s.pending_buf[s.pending++] = (w) & 0xff;
  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
}


/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */
function send_bits(s, value, length) {
  if (s.bi_valid > (Buf_size - length)) {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    put_short(s, s.bi_buf);
    s.bi_buf = value >> (Buf_size - s.bi_valid);
    s.bi_valid += length - Buf_size;
  } else {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    s.bi_valid += length;
  }
}


function send_code(s, c, tree) {
  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);
}


/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */
function bi_reverse(code, len) {
  var res = 0;
  do {
    res |= code & 1;
    code >>>= 1;
    res <<= 1;
  } while (--len > 0);
  return res >>> 1;
}


/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */
function bi_flush(s) {
  if (s.bi_valid === 16) {
    put_short(s, s.bi_buf);
    s.bi_buf = 0;
    s.bi_valid = 0;

  } else if (s.bi_valid >= 8) {
    s.pending_buf[s.pending++] = s.bi_buf & 0xff;
    s.bi_buf >>= 8;
    s.bi_valid -= 8;
  }
}


/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */
function gen_bitlen(s, desc)
//    deflate_state *s;
//    tree_desc *desc;    /* the tree descriptor */
{
  var tree            = desc.dyn_tree;
  var max_code        = desc.max_code;
  var stree           = desc.stat_desc.static_tree;
  var has_stree       = desc.stat_desc.has_stree;
  var extra           = desc.stat_desc.extra_bits;
  var base            = desc.stat_desc.extra_base;
  var max_length      = desc.stat_desc.max_length;
  var h;              /* heap index */
  var n, m;           /* iterate over the tree elements */
  var bits;           /* bit length */
  var xbits;          /* extra bits */
  var f;              /* frequency */
  var overflow = 0;   /* number of elements with bit length too large */

  for (bits = 0; bits <= MAX_BITS; bits++) {
    s.bl_count[bits] = 0;
  }

  /* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */
  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */

  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {
    n = s.heap[h];
    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;
    if (bits > max_length) {
      bits = max_length;
      overflow++;
    }
    tree[n * 2 + 1]/*.Len*/ = bits;
    /* We overwrite tree[n].Dad which is no longer needed */

    if (n > max_code) { continue; } /* not a leaf node */

    s.bl_count[bits]++;
    xbits = 0;
    if (n >= base) {
      xbits = extra[n - base];
    }
    f = tree[n * 2]/*.Freq*/;
    s.opt_len += f * (bits + xbits);
    if (has_stree) {
      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);
    }
  }
  if (overflow === 0) { return; }

  // Trace((stderr,"\nbit length overflow\n"));
  /* This happens for example on obj2 and pic of the Calgary corpus */

  /* Find the first bit length which could increase: */
  do {
    bits = max_length - 1;
    while (s.bl_count[bits] === 0) { bits--; }
    s.bl_count[bits]--;      /* move one leaf down the tree */
    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */
    s.bl_count[max_length]--;
    /* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */
    overflow -= 2;
  } while (overflow > 0);

  /* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */
  for (bits = max_length; bits !== 0; bits--) {
    n = s.bl_count[bits];
    while (n !== 0) {
      m = s.heap[--h];
      if (m > max_code) { continue; }
      if (tree[m * 2 + 1]/*.Len*/ !== bits) {
        // Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;
        tree[m * 2 + 1]/*.Len*/ = bits;
      }
      n--;
    }
  }
}


/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */
function gen_codes(tree, max_code, bl_count)
//    ct_data *tree;             /* the tree to decorate */
//    int max_code;              /* largest code with non zero frequency */
//    ushf *bl_count;            /* number of codes at each bit length */
{
  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */
  var code = 0;              /* running code value */
  var bits;                  /* bit index */
  var n;                     /* code index */

  /* The distribution counts are first used to generate the code values
   * without bit reversal.
   */
  for (bits = 1; bits <= MAX_BITS; bits++) {
    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;
  }
  /* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */
  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
  //        "inconsistent bit counts");
  //Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

  for (n = 0;  n <= max_code; n++) {
    var len = tree[n * 2 + 1]/*.Len*/;
    if (len === 0) { continue; }
    /* Now reverse the bits */
    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);

    //Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
  }
}


/* ===========================================================================
 * Initialize the various 'constant' tables.
 */
function tr_static_init() {
  var n;        /* iterates over tree elements */
  var bits;     /* bit counter */
  var length;   /* length value */
  var code;     /* code value */
  var dist;     /* distance index */
  var bl_count = new Array(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  // do check in _tr_init()
  //if (static_init_done) return;

  /* For some embedded targets, global variables are not initialized: */
/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

  /* Initialize the mapping length (0..255) -> length code (0..28) */
  length = 0;
  for (code = 0; code < LENGTH_CODES - 1; code++) {
    base_length[code] = length;
    for (n = 0; n < (1 << extra_lbits[code]); n++) {
      _length_code[length++] = code;
    }
  }
  //Assert (length == 256, "tr_static_init: length != 256");
  /* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */
  _length_code[length - 1] = code;

  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
  dist = 0;
  for (code = 0; code < 16; code++) {
    base_dist[code] = dist;
    for (n = 0; n < (1 << extra_dbits[code]); n++) {
      _dist_code[dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: dist != 256");
  dist >>= 7; /* from now on, all distances are divided by 128 */
  for (; code < D_CODES; code++) {
    base_dist[code] = dist << 7;
    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {
      _dist_code[256 + dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: 256+dist != 512");

  /* Construct the codes of the static literal tree */
  for (bits = 0; bits <= MAX_BITS; bits++) {
    bl_count[bits] = 0;
  }

  n = 0;
  while (n <= 143) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  while (n <= 255) {
    static_ltree[n * 2 + 1]/*.Len*/ = 9;
    n++;
    bl_count[9]++;
  }
  while (n <= 279) {
    static_ltree[n * 2 + 1]/*.Len*/ = 7;
    n++;
    bl_count[7]++;
  }
  while (n <= 287) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  /* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */
  gen_codes(static_ltree, L_CODES + 1, bl_count);

  /* The static distance tree is trivial: */
  for (n = 0; n < D_CODES; n++) {
    static_dtree[n * 2 + 1]/*.Len*/ = 5;
    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);
  }

  // Now data ready and we can init static trees
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);
  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);
  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);

  //static_init_done = true;
}


/* ===========================================================================
 * Initialize a new block.
 */
function init_block(s) {
  var n; /* iterates over tree elements */

  /* Initialize the trees. */
  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }

  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;
  s.opt_len = s.static_len = 0;
  s.last_lit = s.matches = 0;
}


/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */
function bi_windup(s)
{
  if (s.bi_valid > 8) {
    put_short(s, s.bi_buf);
  } else if (s.bi_valid > 0) {
    //put_byte(s, (Byte)s->bi_buf);
    s.pending_buf[s.pending++] = s.bi_buf;
  }
  s.bi_buf = 0;
  s.bi_valid = 0;
}

/* ===========================================================================
 * Copy a stored block, storing first the length and its
 * one's complement if requested.
 */
function copy_block(s, buf, len, header)
//DeflateState *s;
//charf    *buf;    /* the input data */
//unsigned len;     /* its length */
//int      header;  /* true if block header must be written */
{
  bi_windup(s);        /* align on byte boundary */

  if (header) {
    put_short(s, len);
    put_short(s, ~len);
  }
//  while (len--) {
//    put_byte(s, *buf++);
//  }
  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);
  s.pending += len;
}

/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */
function smaller(tree, n, m, depth) {
  var _n2 = n * 2;
  var _m2 = m * 2;
  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||
         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));
}

/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */
function pqdownheap(s, tree, k)
//    deflate_state *s;
//    ct_data *tree;  /* the tree to restore */
//    int k;               /* node to move down */
{
  var v = s.heap[k];
  var j = k << 1;  /* left son of k */
  while (j <= s.heap_len) {
    /* Set j to the smallest of the two sons: */
    if (j < s.heap_len &&
      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {
      j++;
    }
    /* Exit if v is smaller than both sons */
    if (smaller(tree, v, s.heap[j], s.depth)) { break; }

    /* Exchange v with the smallest son */
    s.heap[k] = s.heap[j];
    k = j;

    /* And continue down the tree, setting j to the left son of k */
    j <<= 1;
  }
  s.heap[k] = v;
}


// inlined manually
// var SMALLEST = 1;

/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */
function compress_block(s, ltree, dtree)
//    deflate_state *s;
//    const ct_data *ltree; /* literal tree */
//    const ct_data *dtree; /* distance tree */
{
  var dist;           /* distance of matched string */
  var lc;             /* match length or unmatched char (if dist == 0) */
  var lx = 0;         /* running index in l_buf */
  var code;           /* the code to send */
  var extra;          /* number of extra bits to send */

  if (s.last_lit !== 0) {
    do {
      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);
      lc = s.pending_buf[s.l_buf + lx];
      lx++;

      if (dist === 0) {
        send_code(s, lc, ltree); /* send a literal byte */
        //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
      } else {
        /* Here, lc is the match length - MIN_MATCH */
        code = _length_code[lc];
        send_code(s, code + LITERALS + 1, ltree); /* send the length code */
        extra = extra_lbits[code];
        if (extra !== 0) {
          lc -= base_length[code];
          send_bits(s, lc, extra);       /* send the extra length bits */
        }
        dist--; /* dist is now the match distance - 1 */
        code = d_code(dist);
        //Assert (code < D_CODES, "bad d_code");

        send_code(s, code, dtree);       /* send the distance code */
        extra = extra_dbits[code];
        if (extra !== 0) {
          dist -= base_dist[code];
          send_bits(s, dist, extra);   /* send the extra distance bits */
        }
      } /* literal or match pair ? */

      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */
      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
      //       "pendingBuf overflow");

    } while (lx < s.last_lit);
  }

  send_code(s, END_BLOCK, ltree);
}


/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */
function build_tree(s, desc)
//    deflate_state *s;
//    tree_desc *desc; /* the tree descriptor */
{
  var tree     = desc.dyn_tree;
  var stree    = desc.stat_desc.static_tree;
  var has_stree = desc.stat_desc.has_stree;
  var elems    = desc.stat_desc.elems;
  var n, m;          /* iterate over heap elements */
  var max_code = -1; /* largest code with non zero frequency */
  var node;          /* new node being created */

  /* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */
  s.heap_len = 0;
  s.heap_max = HEAP_SIZE;

  for (n = 0; n < elems; n++) {
    if (tree[n * 2]/*.Freq*/ !== 0) {
      s.heap[++s.heap_len] = max_code = n;
      s.depth[n] = 0;

    } else {
      tree[n * 2 + 1]/*.Len*/ = 0;
    }
  }

  /* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */
  while (s.heap_len < 2) {
    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);
    tree[node * 2]/*.Freq*/ = 1;
    s.depth[node] = 0;
    s.opt_len--;

    if (has_stree) {
      s.static_len -= stree[node * 2 + 1]/*.Len*/;
    }
    /* node is 0 or 1 so it does not have extra bits */
  }
  desc.max_code = max_code;

  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */
  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }

  /* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */
  node = elems;              /* next internal node of the tree */
  do {
    //pqremove(s, tree, n);  /* n = node of least frequency */
    /*** pqremove ***/
    n = s.heap[1/*SMALLEST*/];
    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];
    pqdownheap(s, tree, 1/*SMALLEST*/);
    /***/

    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */

    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
    s.heap[--s.heap_max] = m;

    /* Create a new node father of n and m */
    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;
    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;

    /* and insert the new node in the heap */
    s.heap[1/*SMALLEST*/] = node++;
    pqdownheap(s, tree, 1/*SMALLEST*/);

  } while (s.heap_len >= 2);

  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];

  /* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */
  gen_bitlen(s, desc);

  /* The field len is now set, we can generate the bit codes */
  gen_codes(tree, max_code, s.bl_count);
}


/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */
function scan_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree;   /* the tree to be scanned */
//    int max_code;    /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      s.bl_tree[curlen * 2]/*.Freq*/ += count;

    } else if (curlen !== 0) {

      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }
      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;

    } else if (count <= 10) {
      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;

    } else {
      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;
    }

    count = 0;
    prevlen = curlen;

    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */
function send_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree; /* the tree to be scanned */
//    int max_code;       /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  /* tree[max_code+1].Len = -1; */  /* guard already set */
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);

    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        send_code(s, curlen, s.bl_tree);
        count--;
      }
      //Assert(count >= 3 && count <= 6, " 3_6?");
      send_code(s, REP_3_6, s.bl_tree);
      send_bits(s, count - 3, 2);

    } else if (count <= 10) {
      send_code(s, REPZ_3_10, s.bl_tree);
      send_bits(s, count - 3, 3);

    } else {
      send_code(s, REPZ_11_138, s.bl_tree);
      send_bits(s, count - 11, 7);
    }

    count = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */
function build_bl_tree(s) {
  var max_blindex;  /* index of last bit length code of non zero freq */

  /* Determine the bit length frequencies for literal and distance trees */
  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);

  /* Build the bit length tree: */
  build_tree(s, s.bl_desc);
  /* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

  /* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */
  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {
      break;
    }
  }
  /* Update opt_len to include the bit length tree and counts */
  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
  //Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
  //        s->opt_len, s->static_len));

  return max_blindex;
}


/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */
function send_all_trees(s, lcodes, dcodes, blcodes)
//    deflate_state *s;
//    int lcodes, dcodes, blcodes; /* number of codes for each tree */
{
  var rank;                    /* index in bl_order */

  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
  //        "too many codes");
  //Tracev((stderr, "\nbl counts: "));
  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */
  send_bits(s, dcodes - 1,   5);
  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */
  for (rank = 0; rank < blcodes; rank++) {
    //Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);
  }
  //Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */
  //Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */
  //Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
}


/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "black list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */
function detect_data_type(s) {
  /* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */
  var black_mask = 0xf3ffc07f;
  var n;

  /* Check for non-textual ("black-listed") bytes. */
  for (n = 0; n <= 31; n++, black_mask >>>= 1) {
    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {
      return Z_BINARY;
    }
  }

  /* Check for textual ("white-listed") bytes. */
  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||
      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {
    return Z_TEXT;
  }
  for (n = 32; n < LITERALS; n++) {
    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {
      return Z_TEXT;
    }
  }

  /* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */
  return Z_BINARY;
}


var static_init_done = false;

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */
function _tr_init(s)
{

  if (!static_init_done) {
    tr_static_init();
    static_init_done = true;
  }

  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);
  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);
  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);

  s.bi_buf = 0;
  s.bi_valid = 0;

  /* Initialize the first block of the first file: */
  init_block(s);
}


/* ===========================================================================
 * Send a stored block
 */
function _tr_stored_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */
  copy_block(s, buf, stored_len, true); /* with header */
}


/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */
function _tr_align(s) {
  send_bits(s, STATIC_TREES << 1, 3);
  send_code(s, END_BLOCK, static_ltree);
  bi_flush(s);
}


/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and output the encoded block to the zip file.
 */
function _tr_flush_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block, or NULL if too old */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */
  var max_blindex = 0;        /* index of last bit length code of non zero freq */

  /* Build the Huffman trees unless a stored block is forced */
  if (s.level > 0) {

    /* Check if the file is binary or text */
    if (s.strm.data_type === Z_UNKNOWN) {
      s.strm.data_type = detect_data_type(s);
    }

    /* Construct the literal and distance trees */
    build_tree(s, s.l_desc);
    // Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));

    build_tree(s, s.d_desc);
    // Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));
    /* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

    /* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */
    max_blindex = build_bl_tree(s);

    /* Determine the best encoding. Compute the block lengths in bytes. */
    opt_lenb = (s.opt_len + 3 + 7) >>> 3;
    static_lenb = (s.static_len + 3 + 7) >>> 3;

    // Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
    //        s->last_lit));

    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }

  } else {
    // Assert(buf != (char*)0, "lost buf");
    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */
  }

  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {
    /* 4: two words for the lengths */

    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */
    _tr_stored_block(s, buf, stored_len, last);

  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {

    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
    compress_block(s, static_ltree, static_dtree);

  } else {
    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);
    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);
    compress_block(s, s.dyn_ltree, s.dyn_dtree);
  }
  // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
  /* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */
  init_block(s);

  if (last) {
    bi_windup(s);
  }
  // Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
  //       s->compressed_len-7*last));
}

/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */
function _tr_tally(s, dist, lc)
//    deflate_state *s;
//    unsigned dist;  /* distance of matched string */
//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
{
  //var out_length, in_length, dcode;

  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;
  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;

  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;
  s.last_lit++;

  if (dist === 0) {
    /* lc is the unmatched char */
    s.dyn_ltree[lc * 2]/*.Freq*/++;
  } else {
    s.matches++;
    /* Here, lc is the match length - MIN_MATCH */
    dist--;             /* dist = match distance - 1 */
    //Assert((ush)dist < (ush)MAX_DIST(s) &&
    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
    //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;
    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;
  }

// (!) This block is disabled in zlib defailts,
// don't enable it for binary compatibility

//#ifdef TRUNCATE_BLOCK
//  /* Try to guess if it is profitable to stop the current block here */
//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
//    /* Compute an upper bound for the compressed length */
//    out_length = s.last_lit*8;
//    in_length = s.strstart - s.block_start;
//
//    for (dcode = 0; dcode < D_CODES; dcode++) {
//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
//    }
//    out_length >>>= 3;
//    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
//    //       s->last_lit, in_length, out_length,
//    //       100L - out_length*100L/in_length));
//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
//      return true;
//    }
//  }
//#endif

  return (s.last_lit === s.lit_bufsize - 1);
  /* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */
}

exports._tr_init  = _tr_init;
exports._tr_stored_block = _tr_stored_block;
exports._tr_flush_block  = _tr_flush_block;
exports._tr_tally = _tr_tally;
exports._tr_align = _tr_align;


/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var utils         = __webpack_require__(45);
var adler32       = __webpack_require__(140);
var crc32         = __webpack_require__(141);
var inflate_fast  = __webpack_require__(355);
var inflate_table = __webpack_require__(356);

var CODES = 0;
var LENS = 1;
var DISTS = 2;

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
//var Z_NO_FLUSH      = 0;
//var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
//var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;

/* The deflate compression method */
var Z_DEFLATED  = 8;


/* STATES ====================================================================*/
/* ===========================================================================*/


var    HEAD = 1;       /* i: waiting for magic header */
var    FLAGS = 2;      /* i: waiting for method and flags (gzip) */
var    TIME = 3;       /* i: waiting for modification time (gzip) */
var    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */
var    EXLEN = 5;      /* i: waiting for extra length (gzip) */
var    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */
var    NAME = 7;       /* i: waiting for end of file name (gzip) */
var    COMMENT = 8;    /* i: waiting for end of comment (gzip) */
var    HCRC = 9;       /* i: waiting for header crc (gzip) */
var    DICTID = 10;    /* i: waiting for dictionary check value */
var    DICT = 11;      /* waiting for inflateSetDictionary() call */
var        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */
var        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */
var        STORED = 14;    /* i: waiting for stored size (length and complement) */
var        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */
var        COPY = 16;      /* i/o: waiting for input or output to copy stored block */
var        TABLE = 17;     /* i: waiting for dynamic block table lengths */
var        LENLENS = 18;   /* i: waiting for code length code lengths */
var        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */
var            LEN_ = 20;      /* i: same as LEN below, but only first time in */
var            LEN = 21;       /* i: waiting for length/lit/eob code */
var            LENEXT = 22;    /* i: waiting for length extra bits */
var            DIST = 23;      /* i: waiting for distance code */
var            DISTEXT = 24;   /* i: waiting for distance extra bits */
var            MATCH = 25;     /* o: waiting for output space to copy string */
var            LIT = 26;       /* o: waiting for output space to write literal */
var    CHECK = 27;     /* i: waiting for 32-bit check value */
var    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */
var    DONE = 29;      /* finished check, done -- remain here until reset */
var    BAD = 30;       /* got a data error -- remain here until reset */
var    MEM = 31;       /* got an inflate() memory error -- remain here until reset */
var    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */

/* ===========================================================================*/



var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);

var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_WBITS = MAX_WBITS;


function zswap32(q) {
  return  (((q >>> 24) & 0xff) +
          ((q >>> 8) & 0xff00) +
          ((q & 0xff00) << 8) +
          ((q & 0xff) << 24));
}


function InflateState() {
  this.mode = 0;             /* current inflate mode */
  this.last = false;          /* true if processing last block */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.havedict = false;      /* true if dictionary provided */
  this.flags = 0;             /* gzip header method and flags (0 if zlib) */
  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */
  this.check = 0;             /* protected copy of check value */
  this.total = 0;             /* protected copy of output count */
  // TODO: may be {}
  this.head = null;           /* where to save gzip header information */

  /* sliding window */
  this.wbits = 0;             /* log base 2 of requested window size */
  this.wsize = 0;             /* window size or zero if not using window */
  this.whave = 0;             /* valid bytes in the window */
  this.wnext = 0;             /* window write index */
  this.window = null;         /* allocated sliding window, if needed */

  /* bit accumulator */
  this.hold = 0;              /* input bit accumulator */
  this.bits = 0;              /* number of bits in "in" */

  /* for string and stored block copying */
  this.length = 0;            /* literal or length of data to copy */
  this.offset = 0;            /* distance back to copy string from */

  /* for table and code decoding */
  this.extra = 0;             /* extra bits needed */

  /* fixed and dynamic code tables */
  this.lencode = null;          /* starting table for length/literal codes */
  this.distcode = null;         /* starting table for distance codes */
  this.lenbits = 0;           /* index bits for lencode */
  this.distbits = 0;          /* index bits for distcode */

  /* dynamic table building */
  this.ncode = 0;             /* number of code length code lengths */
  this.nlen = 0;              /* number of length code lengths */
  this.ndist = 0;             /* number of distance code lengths */
  this.have = 0;              /* number of code lengths in lens[] */
  this.next = null;              /* next available space in codes[] */

  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */
  this.work = new utils.Buf16(288); /* work area for code table building */

  /*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */
  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */
  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */
  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */
  this.sane = 0;                   /* if false, allow invalid distance too far */
  this.back = 0;                   /* bits back of last unprocessed length/lit */
  this.was = 0;                    /* initial length of match */
}

function inflateResetKeep(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  strm.total_in = strm.total_out = state.total = 0;
  strm.msg = ''; /*Z_NULL*/
  if (state.wrap) {       /* to support ill-conceived Java test suite */
    strm.adler = state.wrap & 1;
  }
  state.mode = HEAD;
  state.last = 0;
  state.havedict = 0;
  state.dmax = 32768;
  state.head = null/*Z_NULL*/;
  state.hold = 0;
  state.bits = 0;
  //state.lencode = state.distcode = state.next = state.codes;
  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);
  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);

  state.sane = 1;
  state.back = -1;
  //Tracev((stderr, "inflate: reset\n"));
  return Z_OK;
}

function inflateReset(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  state.wsize = 0;
  state.whave = 0;
  state.wnext = 0;
  return inflateResetKeep(strm);

}

function inflateReset2(strm, windowBits) {
  var wrap;
  var state;

  /* get the state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;

  /* extract wrap request from windowBits parameter */
  if (windowBits < 0) {
    wrap = 0;
    windowBits = -windowBits;
  }
  else {
    wrap = (windowBits >> 4) + 1;
    if (windowBits < 48) {
      windowBits &= 15;
    }
  }

  /* set number of window bits, free window if different */
  if (windowBits && (windowBits < 8 || windowBits > 15)) {
    return Z_STREAM_ERROR;
  }
  if (state.window !== null && state.wbits !== windowBits) {
    state.window = null;
  }

  /* update state and reset the rest of it */
  state.wrap = wrap;
  state.wbits = windowBits;
  return inflateReset(strm);
}

function inflateInit2(strm, windowBits) {
  var ret;
  var state;

  if (!strm) { return Z_STREAM_ERROR; }
  //strm.msg = Z_NULL;                 /* in case we return an error */

  state = new InflateState();

  //if (state === Z_NULL) return Z_MEM_ERROR;
  //Tracev((stderr, "inflate: allocated\n"));
  strm.state = state;
  state.window = null/*Z_NULL*/;
  ret = inflateReset2(strm, windowBits);
  if (ret !== Z_OK) {
    strm.state = null/*Z_NULL*/;
  }
  return ret;
}

function inflateInit(strm) {
  return inflateInit2(strm, DEF_WBITS);
}


/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */
var virgin = true;

var lenfix, distfix; // We have no pointers in JS, so keep tables separate

function fixedtables(state) {
  /* build fixed huffman tables if first call (may not be thread safe) */
  if (virgin) {
    var sym;

    lenfix = new utils.Buf32(512);
    distfix = new utils.Buf32(32);

    /* literal/length table */
    sym = 0;
    while (sym < 144) { state.lens[sym++] = 8; }
    while (sym < 256) { state.lens[sym++] = 9; }
    while (sym < 280) { state.lens[sym++] = 7; }
    while (sym < 288) { state.lens[sym++] = 8; }

    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });

    /* distance table */
    sym = 0;
    while (sym < 32) { state.lens[sym++] = 5; }

    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });

    /* do this just once */
    virgin = false;
  }

  state.lencode = lenfix;
  state.lenbits = 9;
  state.distcode = distfix;
  state.distbits = 5;
}


/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */
function updatewindow(strm, src, end, copy) {
  var dist;
  var state = strm.state;

  /* if it hasn't been done already, allocate space for the window */
  if (state.window === null) {
    state.wsize = 1 << state.wbits;
    state.wnext = 0;
    state.whave = 0;

    state.window = new utils.Buf8(state.wsize);
  }

  /* copy state->wsize or less output bytes into the circular window */
  if (copy >= state.wsize) {
    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);
    state.wnext = 0;
    state.whave = state.wsize;
  }
  else {
    dist = state.wsize - state.wnext;
    if (dist > copy) {
      dist = copy;
    }
    //zmemcpy(state->window + state->wnext, end - copy, dist);
    utils.arraySet(state.window, src, end - copy, dist, state.wnext);
    copy -= dist;
    if (copy) {
      //zmemcpy(state->window, end - copy, copy);
      utils.arraySet(state.window, src, end - copy, copy, 0);
      state.wnext = copy;
      state.whave = state.wsize;
    }
    else {
      state.wnext += dist;
      if (state.wnext === state.wsize) { state.wnext = 0; }
      if (state.whave < state.wsize) { state.whave += dist; }
    }
  }
  return 0;
}

function inflate(strm, flush) {
  var state;
  var input, output;          // input/output buffers
  var next;                   /* next input INDEX */
  var put;                    /* next output INDEX */
  var have, left;             /* available input and output */
  var hold;                   /* bit buffer */
  var bits;                   /* bits in bit buffer */
  var _in, _out;              /* save starting available input and output */
  var copy;                   /* number of stored or match bytes to copy */
  var from;                   /* where to copy match bytes from */
  var from_source;
  var here = 0;               /* current decoding table entry */
  var here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
  //var last;                   /* parent table entry */
  var last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
  var len;                    /* length to copy for repeats, bits to drop */
  var ret;                    /* return code */
  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */
  var opts;

  var n; // temporary var for NEED_BITS

  var order = /* permutation of code lengths */
    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];


  if (!strm || !strm.state || !strm.output ||
      (!strm.input && strm.avail_in !== 0)) {
    return Z_STREAM_ERROR;
  }

  state = strm.state;
  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */


  //--- LOAD() ---
  put = strm.next_out;
  output = strm.output;
  left = strm.avail_out;
  next = strm.next_in;
  input = strm.input;
  have = strm.avail_in;
  hold = state.hold;
  bits = state.bits;
  //---

  _in = have;
  _out = left;
  ret = Z_OK;

  inf_leave: // goto emulation
  for (;;) {
    switch (state.mode) {
    case HEAD:
      if (state.wrap === 0) {
        state.mode = TYPEDO;
        break;
      }
      //=== NEEDBITS(16);
      while (bits < 16) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */
        state.check = 0/*crc32(0L, Z_NULL, 0)*/;
        //=== CRC2(state.check, hold);
        hbuf[0] = hold & 0xff;
        hbuf[1] = (hold >>> 8) & 0xff;
        state.check = crc32(state.check, hbuf, 2, 0);
        //===//

        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = FLAGS;
        break;
      }
      state.flags = 0;           /* expect zlib header */
      if (state.head) {
        state.head.done = false;
      }
      if (!(state.wrap & 1) ||   /* check if zlib header allowed */
        (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {
        strm.msg = 'incorrect header check';
        state.mode = BAD;
        break;
      }
      if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {
        strm.msg = 'unknown compression method';
        state.mode = BAD;
        break;
      }
      //--- DROPBITS(4) ---//
      hold >>>= 4;
      bits -= 4;
      //---//
      len = (hold & 0x0f)/*BITS(4)*/ + 8;
      if (state.wbits === 0) {
        state.wbits = len;
      }
      else if (len > state.wbits) {
        strm.msg = 'invalid window size';
        state.mode = BAD;
        break;
      }
      state.dmax = 1 << len;
      //Tracev((stderr, "inflate:   zlib header ok\n"));
      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
      state.mode = hold & 0x200 ? DICTID : TYPE;
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      break;
    case FLAGS:
      //=== NEEDBITS(16); */
      while (bits < 16) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      state.flags = hold;
      if ((state.flags & 0xff) !== Z_DEFLATED) {
        strm.msg = 'unknown compression method';
        state.mode = BAD;
        break;
      }
      if (state.flags & 0xe000) {
        strm.msg = 'unknown header flags set';
        state.mode = BAD;
        break;
      }
      if (state.head) {
        state.head.text = ((hold >> 8) & 1);
      }
      if (state.flags & 0x0200) {
        //=== CRC2(state.check, hold);
        hbuf[0] = hold & 0xff;
        hbuf[1] = (hold >>> 8) & 0xff;
        state.check = crc32(state.check, hbuf, 2, 0);
        //===//
      }
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = TIME;
      /* falls through */
    case TIME:
      //=== NEEDBITS(32); */
      while (bits < 32) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      if (state.head) {
        state.head.time = hold;
      }
      if (state.flags & 0x0200) {
        //=== CRC4(state.check, hold)
        hbuf[0] = hold & 0xff;
        hbuf[1] = (hold >>> 8) & 0xff;
        hbuf[2] = (hold >>> 16) & 0xff;
        hbuf[3] = (hold >>> 24) & 0xff;
        state.check = crc32(state.check, hbuf, 4, 0);
        //===
      }
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = OS;
      /* falls through */
    case OS:
      //=== NEEDBITS(16); */
      while (bits < 16) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      if (state.head) {
        state.head.xflags = (hold & 0xff);
        state.head.os = (hold >> 8);
      }
      if (state.flags & 0x0200) {
        //=== CRC2(state.check, hold);
        hbuf[0] = hold & 0xff;
        hbuf[1] = (hold >>> 8) & 0xff;
        state.check = crc32(state.check, hbuf, 2, 0);
        //===//
      }
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = EXLEN;
      /* falls through */
    case EXLEN:
      if (state.flags & 0x0400) {
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.length = hold;
        if (state.head) {
          state.head.extra_len = hold;
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
      }
      else if (state.head) {
        state.head.extra = null/*Z_NULL*/;
      }
      state.mode = EXTRA;
      /* falls through */
    case EXTRA:
      if (state.flags & 0x0400) {
        copy = state.length;
        if (copy > have) { copy = have; }
        if (copy) {
          if (state.head) {
            len = state.head.extra_len - state.length;
            if (!state.head.extra) {
              // Use untyped array for more conveniend processing later
              state.head.extra = new Array(state.head.extra_len);
            }
            utils.arraySet(
              state.head.extra,
              input,
              next,
              // extra field is limited to 65536 bytes
              // - no need for additional size check
              copy,
              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
              len
            );
            //zmemcpy(state.head.extra + len, next,
            //        len + copy > state.head.extra_max ?
            //        state.head.extra_max - len : copy);
          }
          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          state.length -= copy;
        }
        if (state.length) { break inf_leave; }
      }
      state.length = 0;
      state.mode = NAME;
      /* falls through */
    case NAME:
      if (state.flags & 0x0800) {
        if (have === 0) { break inf_leave; }
        copy = 0;
        do {
          // TODO: 2 or 1 bytes?
          len = input[next + copy++];
          /* use constant limit because in js we should not preallocate memory */
          if (state.head && len &&
              (state.length < 65536 /*state.head.name_max*/)) {
            state.head.name += String.fromCharCode(len);
          }
        } while (len && copy < have);

        if (state.flags & 0x0200) {
          state.check = crc32(state.check, input, copy, next);
        }
        have -= copy;
        next += copy;
        if (len) { break inf_leave; }
      }
      else if (state.head) {
        state.head.name = null;
      }
      state.length = 0;
      state.mode = COMMENT;
      /* falls through */
    case COMMENT:
      if (state.flags & 0x1000) {
        if (have === 0) { break inf_leave; }
        copy = 0;
        do {
          len = input[next + copy++];
          /* use constant limit because in js we should not preallocate memory */
          if (state.head && len &&
              (state.length < 65536 /*state.head.comm_max*/)) {
            state.head.comment += String.fromCharCode(len);
          }
        } while (len && copy < have);
        if (state.flags & 0x0200) {
          state.check = crc32(state.check, input, copy, next);
        }
        have -= copy;
        next += copy;
        if (len) { break inf_leave; }
      }
      else if (state.head) {
        state.head.comment = null;
      }
      state.mode = HCRC;
      /* falls through */
    case HCRC:
      if (state.flags & 0x0200) {
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (hold !== (state.check & 0xffff)) {
          strm.msg = 'header crc mismatch';
          state.mode = BAD;
          break;
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
      }
      if (state.head) {
        state.head.hcrc = ((state.flags >> 9) & 1);
        state.head.done = true;
      }
      strm.adler = state.check = 0;
      state.mode = TYPE;
      break;
    case DICTID:
      //=== NEEDBITS(32); */
      while (bits < 32) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      strm.adler = state.check = zswap32(hold);
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = DICT;
      /* falls through */
    case DICT:
      if (state.havedict === 0) {
        //--- RESTORE() ---
        strm.next_out = put;
        strm.avail_out = left;
        strm.next_in = next;
        strm.avail_in = have;
        state.hold = hold;
        state.bits = bits;
        //---
        return Z_NEED_DICT;
      }
      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
      state.mode = TYPE;
      /* falls through */
    case TYPE:
      if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }
      /* falls through */
    case TYPEDO:
      if (state.last) {
        //--- BYTEBITS() ---//
        hold >>>= bits & 7;
        bits -= bits & 7;
        //---//
        state.mode = CHECK;
        break;
      }
      //=== NEEDBITS(3); */
      while (bits < 3) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      state.last = (hold & 0x01)/*BITS(1)*/;
      //--- DROPBITS(1) ---//
      hold >>>= 1;
      bits -= 1;
      //---//

      switch ((hold & 0x03)/*BITS(2)*/) {
      case 0:                             /* stored block */
        //Tracev((stderr, "inflate:     stored block%s\n",
        //        state.last ? " (last)" : ""));
        state.mode = STORED;
        break;
      case 1:                             /* fixed block */
        fixedtables(state);
        //Tracev((stderr, "inflate:     fixed codes block%s\n",
        //        state.last ? " (last)" : ""));
        state.mode = LEN_;             /* decode codes */
        if (flush === Z_TREES) {
          //--- DROPBITS(2) ---//
          hold >>>= 2;
          bits -= 2;
          //---//
          break inf_leave;
        }
        break;
      case 2:                             /* dynamic block */
        //Tracev((stderr, "inflate:     dynamic codes block%s\n",
        //        state.last ? " (last)" : ""));
        state.mode = TABLE;
        break;
      case 3:
        strm.msg = 'invalid block type';
        state.mode = BAD;
      }
      //--- DROPBITS(2) ---//
      hold >>>= 2;
      bits -= 2;
      //---//
      break;
    case STORED:
      //--- BYTEBITS() ---// /* go to byte boundary */
      hold >>>= bits & 7;
      bits -= bits & 7;
      //---//
      //=== NEEDBITS(32); */
      while (bits < 32) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
        strm.msg = 'invalid stored block lengths';
        state.mode = BAD;
        break;
      }
      state.length = hold & 0xffff;
      //Tracev((stderr, "inflate:       stored length %u\n",
      //        state.length));
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = COPY_;
      if (flush === Z_TREES) { break inf_leave; }
      /* falls through */
    case COPY_:
      state.mode = COPY;
      /* falls through */
    case COPY:
      copy = state.length;
      if (copy) {
        if (copy > have) { copy = have; }
        if (copy > left) { copy = left; }
        if (copy === 0) { break inf_leave; }
        //--- zmemcpy(put, next, copy); ---
        utils.arraySet(output, input, next, copy, put);
        //---//
        have -= copy;
        next += copy;
        left -= copy;
        put += copy;
        state.length -= copy;
        break;
      }
      //Tracev((stderr, "inflate:       stored end\n"));
      state.mode = TYPE;
      break;
    case TABLE:
      //=== NEEDBITS(14); */
      while (bits < 14) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;
      //--- DROPBITS(5) ---//
      hold >>>= 5;
      bits -= 5;
      //---//
      state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;
      //--- DROPBITS(5) ---//
      hold >>>= 5;
      bits -= 5;
      //---//
      state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;
      //--- DROPBITS(4) ---//
      hold >>>= 4;
      bits -= 4;
      //---//
//#ifndef PKZIP_BUG_WORKAROUND
      if (state.nlen > 286 || state.ndist > 30) {
        strm.msg = 'too many length or distance symbols';
        state.mode = BAD;
        break;
      }
//#endif
      //Tracev((stderr, "inflate:       table sizes ok\n"));
      state.have = 0;
      state.mode = LENLENS;
      /* falls through */
    case LENLENS:
      while (state.have < state.ncode) {
        //=== NEEDBITS(3);
        while (bits < 3) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);
        //--- DROPBITS(3) ---//
        hold >>>= 3;
        bits -= 3;
        //---//
      }
      while (state.have < 19) {
        state.lens[order[state.have++]] = 0;
      }
      // We have separate tables & no pointers. 2 commented lines below not needed.
      //state.next = state.codes;
      //state.lencode = state.next;
      // Switch to use dynamic table
      state.lencode = state.lendyn;
      state.lenbits = 7;

      opts = { bits: state.lenbits };
      ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
      state.lenbits = opts.bits;

      if (ret) {
        strm.msg = 'invalid code lengths set';
        state.mode = BAD;
        break;
      }
      //Tracev((stderr, "inflate:       code lengths ok\n"));
      state.have = 0;
      state.mode = CODELENS;
      /* falls through */
    case CODELENS:
      while (state.have < state.nlen + state.ndist) {
        for (;;) {
          here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if (here_val < 16) {
          //--- DROPBITS(here.bits) ---//
          hold >>>= here_bits;
          bits -= here_bits;
          //---//
          state.lens[state.have++] = here_val;
        }
        else {
          if (here_val === 16) {
            //=== NEEDBITS(here.bits + 2);
            n = here_bits + 2;
            while (bits < n) {
              if (have === 0) { break inf_leave; }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            //===//
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            if (state.have === 0) {
              strm.msg = 'invalid bit length repeat';
              state.mode = BAD;
              break;
            }
            len = state.lens[state.have - 1];
            copy = 3 + (hold & 0x03);//BITS(2);
            //--- DROPBITS(2) ---//
            hold >>>= 2;
            bits -= 2;
            //---//
          }
          else if (here_val === 17) {
            //=== NEEDBITS(here.bits + 3);
            n = here_bits + 3;
            while (bits < n) {
              if (have === 0) { break inf_leave; }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            //===//
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            len = 0;
            copy = 3 + (hold & 0x07);//BITS(3);
            //--- DROPBITS(3) ---//
            hold >>>= 3;
            bits -= 3;
            //---//
          }
          else {
            //=== NEEDBITS(here.bits + 7);
            n = here_bits + 7;
            while (bits < n) {
              if (have === 0) { break inf_leave; }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            //===//
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            len = 0;
            copy = 11 + (hold & 0x7f);//BITS(7);
            //--- DROPBITS(7) ---//
            hold >>>= 7;
            bits -= 7;
            //---//
          }
          if (state.have + copy > state.nlen + state.ndist) {
            strm.msg = 'invalid bit length repeat';
            state.mode = BAD;
            break;
          }
          while (copy--) {
            state.lens[state.have++] = len;
          }
        }
      }

      /* handle error breaks in while */
      if (state.mode === BAD) { break; }

      /* check for end-of-block code (better have one) */
      if (state.lens[256] === 0) {
        strm.msg = 'invalid code -- missing end-of-block';
        state.mode = BAD;
        break;
      }

      /* build code tables -- note: do not change the lenbits or distbits
         values here (9 and 6) without reading the comments in inftrees.h
         concerning the ENOUGH constants, which depend on those values */
      state.lenbits = 9;

      opts = { bits: state.lenbits };
      ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
      // We have separate tables & no pointers. 2 commented lines below not needed.
      // state.next_index = opts.table_index;
      state.lenbits = opts.bits;
      // state.lencode = state.next;

      if (ret) {
        strm.msg = 'invalid literal/lengths set';
        state.mode = BAD;
        break;
      }

      state.distbits = 6;
      //state.distcode.copy(state.codes);
      // Switch to use dynamic table
      state.distcode = state.distdyn;
      opts = { bits: state.distbits };
      ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
      // We have separate tables & no pointers. 2 commented lines below not needed.
      // state.next_index = opts.table_index;
      state.distbits = opts.bits;
      // state.distcode = state.next;

      if (ret) {
        strm.msg = 'invalid distances set';
        state.mode = BAD;
        break;
      }
      //Tracev((stderr, 'inflate:       codes ok\n'));
      state.mode = LEN_;
      if (flush === Z_TREES) { break inf_leave; }
      /* falls through */
    case LEN_:
      state.mode = LEN;
      /* falls through */
    case LEN:
      if (have >= 6 && left >= 258) {
        //--- RESTORE() ---
        strm.next_out = put;
        strm.avail_out = left;
        strm.next_in = next;
        strm.avail_in = have;
        state.hold = hold;
        state.bits = bits;
        //---
        inflate_fast(strm, _out);
        //--- LOAD() ---
        put = strm.next_out;
        output = strm.output;
        left = strm.avail_out;
        next = strm.next_in;
        input = strm.input;
        have = strm.avail_in;
        hold = state.hold;
        bits = state.bits;
        //---

        if (state.mode === TYPE) {
          state.back = -1;
        }
        break;
      }
      state.back = 0;
      for (;;) {
        here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/
        here_bits = here >>> 24;
        here_op = (here >>> 16) & 0xff;
        here_val = here & 0xffff;

        if (here_bits <= bits) { break; }
        //--- PULLBYTE() ---//
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
        //---//
      }
      if (here_op && (here_op & 0xf0) === 0) {
        last_bits = here_bits;
        last_op = here_op;
        last_val = here_val;
        for (;;) {
          here = state.lencode[last_val +
                  ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((last_bits + here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        //--- DROPBITS(last.bits) ---//
        hold >>>= last_bits;
        bits -= last_bits;
        //---//
        state.back += last_bits;
      }
      //--- DROPBITS(here.bits) ---//
      hold >>>= here_bits;
      bits -= here_bits;
      //---//
      state.back += here_bits;
      state.length = here_val;
      if (here_op === 0) {
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        state.mode = LIT;
        break;
      }
      if (here_op & 32) {
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.back = -1;
        state.mode = TYPE;
        break;
      }
      if (here_op & 64) {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break;
      }
      state.extra = here_op & 15;
      state.mode = LENEXT;
      /* falls through */
    case LENEXT:
      if (state.extra) {
        //=== NEEDBITS(state.extra);
        n = state.extra;
        while (bits < n) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
        //--- DROPBITS(state.extra) ---//
        hold >>>= state.extra;
        bits -= state.extra;
        //---//
        state.back += state.extra;
      }
      //Tracevv((stderr, "inflate:         length %u\n", state.length));
      state.was = state.length;
      state.mode = DIST;
      /* falls through */
    case DIST:
      for (;;) {
        here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/
        here_bits = here >>> 24;
        here_op = (here >>> 16) & 0xff;
        here_val = here & 0xffff;

        if ((here_bits) <= bits) { break; }
        //--- PULLBYTE() ---//
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
        //---//
      }
      if ((here_op & 0xf0) === 0) {
        last_bits = here_bits;
        last_op = here_op;
        last_val = here_val;
        for (;;) {
          here = state.distcode[last_val +
                  ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((last_bits + here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        //--- DROPBITS(last.bits) ---//
        hold >>>= last_bits;
        bits -= last_bits;
        //---//
        state.back += last_bits;
      }
      //--- DROPBITS(here.bits) ---//
      hold >>>= here_bits;
      bits -= here_bits;
      //---//
      state.back += here_bits;
      if (here_op & 64) {
        strm.msg = 'invalid distance code';
        state.mode = BAD;
        break;
      }
      state.offset = here_val;
      state.extra = (here_op) & 15;
      state.mode = DISTEXT;
      /* falls through */
    case DISTEXT:
      if (state.extra) {
        //=== NEEDBITS(state.extra);
        n = state.extra;
        while (bits < n) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
        //--- DROPBITS(state.extra) ---//
        hold >>>= state.extra;
        bits -= state.extra;
        //---//
        state.back += state.extra;
      }
//#ifdef INFLATE_STRICT
      if (state.offset > state.dmax) {
        strm.msg = 'invalid distance too far back';
        state.mode = BAD;
        break;
      }
//#endif
      //Tracevv((stderr, "inflate:         distance %u\n", state.offset));
      state.mode = MATCH;
      /* falls through */
    case MATCH:
      if (left === 0) { break inf_leave; }
      copy = _out - left;
      if (state.offset > copy) {         /* copy from window */
        copy = state.offset - copy;
        if (copy > state.whave) {
          if (state.sane) {
            strm.msg = 'invalid distance too far back';
            state.mode = BAD;
            break;
          }
// (!) This block is disabled in zlib defailts,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//          Trace((stderr, "inflate.c too far\n"));
//          copy -= state.whave;
//          if (copy > state.length) { copy = state.length; }
//          if (copy > left) { copy = left; }
//          left -= copy;
//          state.length -= copy;
//          do {
//            output[put++] = 0;
//          } while (--copy);
//          if (state.length === 0) { state.mode = LEN; }
//          break;
//#endif
        }
        if (copy > state.wnext) {
          copy -= state.wnext;
          from = state.wsize - copy;
        }
        else {
          from = state.wnext - copy;
        }
        if (copy > state.length) { copy = state.length; }
        from_source = state.window;
      }
      else {                              /* copy from output */
        from_source = output;
        from = put - state.offset;
        copy = state.length;
      }
      if (copy > left) { copy = left; }
      left -= copy;
      state.length -= copy;
      do {
        output[put++] = from_source[from++];
      } while (--copy);
      if (state.length === 0) { state.mode = LEN; }
      break;
    case LIT:
      if (left === 0) { break inf_leave; }
      output[put++] = state.length;
      left--;
      state.mode = LEN;
      break;
    case CHECK:
      if (state.wrap) {
        //=== NEEDBITS(32);
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          // Use '|' insdead of '+' to make sure that result is signed
          hold |= input[next++] << bits;
          bits += 8;
        }
        //===//
        _out -= left;
        strm.total_out += _out;
        state.total += _out;
        if (_out) {
          strm.adler = state.check =
              /*UPDATE(state.check, put - _out, _out);*/
              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));

        }
        _out = left;
        // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too
        if ((state.flags ? hold : zswap32(hold)) !== state.check) {
          strm.msg = 'incorrect data check';
          state.mode = BAD;
          break;
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        //Tracev((stderr, "inflate:   check matches trailer\n"));
      }
      state.mode = LENGTH;
      /* falls through */
    case LENGTH:
      if (state.wrap && state.flags) {
        //=== NEEDBITS(32);
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (hold !== (state.total & 0xffffffff)) {
          strm.msg = 'incorrect length check';
          state.mode = BAD;
          break;
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        //Tracev((stderr, "inflate:   length matches trailer\n"));
      }
      state.mode = DONE;
      /* falls through */
    case DONE:
      ret = Z_STREAM_END;
      break inf_leave;
    case BAD:
      ret = Z_DATA_ERROR;
      break inf_leave;
    case MEM:
      return Z_MEM_ERROR;
    case SYNC:
      /* falls through */
    default:
      return Z_STREAM_ERROR;
    }
  }

  // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

  /*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

  //--- RESTORE() ---
  strm.next_out = put;
  strm.avail_out = left;
  strm.next_in = next;
  strm.avail_in = have;
  state.hold = hold;
  state.bits = bits;
  //---

  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&
                      (state.mode < CHECK || flush !== Z_FINISH))) {
    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
      state.mode = MEM;
      return Z_MEM_ERROR;
    }
  }
  _in -= strm.avail_in;
  _out -= strm.avail_out;
  strm.total_in += _in;
  strm.total_out += _out;
  state.total += _out;
  if (state.wrap && _out) {
    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));
  }
  strm.data_type = state.bits + (state.last ? 64 : 0) +
                    (state.mode === TYPE ? 128 : 0) +
                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {
    ret = Z_BUF_ERROR;
  }
  return ret;
}

function inflateEnd(strm) {

  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {
    return Z_STREAM_ERROR;
  }

  var state = strm.state;
  if (state.window) {
    state.window = null;
  }
  strm.state = null;
  return Z_OK;
}

function inflateGetHeader(strm, head) {
  var state;

  /* check state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }

  /* save header structure */
  state.head = head;
  head.done = false;
  return Z_OK;
}

function inflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var state;
  var dictid;
  var ret;

  /* check state */
  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }
  state = strm.state;

  if (state.wrap !== 0 && state.mode !== DICT) {
    return Z_STREAM_ERROR;
  }

  /* check for correct dictionary identifier */
  if (state.mode === DICT) {
    dictid = 1; /* adler32(0, null, 0)*/
    /* dictid = adler32(dictid, dictionary, dictLength); */
    dictid = adler32(dictid, dictionary, dictLength, 0);
    if (dictid !== state.check) {
      return Z_DATA_ERROR;
    }
  }
  /* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */
  ret = updatewindow(strm, dictionary, dictLength, dictLength);
  if (ret) {
    state.mode = MEM;
    return Z_MEM_ERROR;
  }
  state.havedict = 1;
  // Tracev((stderr, "inflate:   dictionary set\n"));
  return Z_OK;
}

exports.inflateReset = inflateReset;
exports.inflateReset2 = inflateReset2;
exports.inflateResetKeep = inflateResetKeep;
exports.inflateInit = inflateInit;
exports.inflateInit2 = inflateInit2;
exports.inflate = inflate;
exports.inflateEnd = inflateEnd;
exports.inflateGetHeader = inflateGetHeader;
exports.inflateSetDictionary = inflateSetDictionary;
exports.inflateInfo = 'pako inflate (from Nodeca project)';

/* Not implemented
exports.inflateCopy = inflateCopy;
exports.inflateGetDictionary = inflateGetDictionary;
exports.inflateMark = inflateMark;
exports.inflatePrime = inflatePrime;
exports.inflateSync = inflateSync;
exports.inflateSyncPoint = inflateSyncPoint;
exports.inflateUndermine = inflateUndermine;
*/


/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// See state defs from inflate.js
var BAD = 30;       /* got a data error -- remain here until reset */
var TYPE = 12;      /* i: waiting for type bits, including last-flag bit */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */
module.exports = function inflate_fast(strm, start) {
  var state;
  var _in;                    /* local strm.input */
  var last;                   /* have enough input while in < last */
  var _out;                   /* local strm.output */
  var beg;                    /* inflate()'s initial strm.output */
  var end;                    /* while out < end, enough space available */
//#ifdef INFLATE_STRICT
  var dmax;                   /* maximum distance from zlib header */
//#endif
  var wsize;                  /* window size or zero if not using window */
  var whave;                  /* valid bytes in the window */
  var wnext;                  /* window write index */
  // Use `s_window` instead `window`, avoid conflict with instrumentation tools
  var s_window;               /* allocated sliding window, if wsize != 0 */
  var hold;                   /* local strm.hold */
  var bits;                   /* local strm.bits */
  var lcode;                  /* local strm.lencode */
  var dcode;                  /* local strm.distcode */
  var lmask;                  /* mask for first level of length codes */
  var dmask;                  /* mask for first level of distance codes */
  var here;                   /* retrieved table entry */
  var op;                     /* code bits, operation, extra bits, or */
                              /*  window position, window bytes to copy */
  var len;                    /* match length, unused bytes */
  var dist;                   /* match distance */
  var from;                   /* where to copy match from */
  var from_source;


  var input, output; // JS specific, because we have no pointers

  /* copy state to local variables */
  state = strm.state;
  //here = state.here;
  _in = strm.next_in;
  input = strm.input;
  last = _in + (strm.avail_in - 5);
  _out = strm.next_out;
  output = strm.output;
  beg = _out - (start - strm.avail_out);
  end = _out + (strm.avail_out - 257);
//#ifdef INFLATE_STRICT
  dmax = state.dmax;
//#endif
  wsize = state.wsize;
  whave = state.whave;
  wnext = state.wnext;
  s_window = state.window;
  hold = state.hold;
  bits = state.bits;
  lcode = state.lencode;
  dcode = state.distcode;
  lmask = (1 << state.lenbits) - 1;
  dmask = (1 << state.distbits) - 1;


  /* decode literals and length/distances until end-of-block or not enough
     input data or output space */

  top:
  do {
    if (bits < 15) {
      hold += input[_in++] << bits;
      bits += 8;
      hold += input[_in++] << bits;
      bits += 8;
    }

    here = lcode[hold & lmask];

    dolen:
    for (;;) { // Goto emulation
      op = here >>> 24/*here.bits*/;
      hold >>>= op;
      bits -= op;
      op = (here >>> 16) & 0xff/*here.op*/;
      if (op === 0) {                          /* literal */
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        output[_out++] = here & 0xffff/*here.val*/;
      }
      else if (op & 16) {                     /* length base */
        len = here & 0xffff/*here.val*/;
        op &= 15;                           /* number of extra bits */
        if (op) {
          if (bits < op) {
            hold += input[_in++] << bits;
            bits += 8;
          }
          len += hold & ((1 << op) - 1);
          hold >>>= op;
          bits -= op;
        }
        //Tracevv((stderr, "inflate:         length %u\n", len));
        if (bits < 15) {
          hold += input[_in++] << bits;
          bits += 8;
          hold += input[_in++] << bits;
          bits += 8;
        }
        here = dcode[hold & dmask];

        dodist:
        for (;;) { // goto emulation
          op = here >>> 24/*here.bits*/;
          hold >>>= op;
          bits -= op;
          op = (here >>> 16) & 0xff/*here.op*/;

          if (op & 16) {                      /* distance base */
            dist = here & 0xffff/*here.val*/;
            op &= 15;                       /* number of extra bits */
            if (bits < op) {
              hold += input[_in++] << bits;
              bits += 8;
              if (bits < op) {
                hold += input[_in++] << bits;
                bits += 8;
              }
            }
            dist += hold & ((1 << op) - 1);
//#ifdef INFLATE_STRICT
            if (dist > dmax) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break top;
            }
//#endif
            hold >>>= op;
            bits -= op;
            //Tracevv((stderr, "inflate:         distance %u\n", dist));
            op = _out - beg;                /* max distance in output */
            if (dist > op) {                /* see if copy from window */
              op = dist - op;               /* distance back in window */
              if (op > whave) {
                if (state.sane) {
                  strm.msg = 'invalid distance too far back';
                  state.mode = BAD;
                  break top;
                }

// (!) This block is disabled in zlib defailts,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//                if (len <= op - whave) {
//                  do {
//                    output[_out++] = 0;
//                  } while (--len);
//                  continue top;
//                }
//                len -= op - whave;
//                do {
//                  output[_out++] = 0;
//                } while (--op > whave);
//                if (op === 0) {
//                  from = _out - dist;
//                  do {
//                    output[_out++] = output[from++];
//                  } while (--len);
//                  continue top;
//                }
//#endif
              }
              from = 0; // window index
              from_source = s_window;
              if (wnext === 0) {           /* very common case */
                from += wsize - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              else if (wnext < op) {      /* wrap around window */
                from += wsize + wnext - op;
                op -= wnext;
                if (op < len) {         /* some from end of window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = 0;
                  if (wnext < len) {  /* some from start of window */
                    op = wnext;
                    len -= op;
                    do {
                      output[_out++] = s_window[from++];
                    } while (--op);
                    from = _out - dist;      /* rest from output */
                    from_source = output;
                  }
                }
              }
              else {                      /* contiguous in window */
                from += wnext - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              while (len > 2) {
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                len -= 3;
              }
              if (len) {
                output[_out++] = from_source[from++];
                if (len > 1) {
                  output[_out++] = from_source[from++];
                }
              }
            }
            else {
              from = _out - dist;          /* copy direct from output */
              do {                        /* minimum length is three */
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                len -= 3;
              } while (len > 2);
              if (len) {
                output[_out++] = output[from++];
                if (len > 1) {
                  output[_out++] = output[from++];
                }
              }
            }
          }
          else if ((op & 64) === 0) {          /* 2nd level distance code */
            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
            continue dodist;
          }
          else {
            strm.msg = 'invalid distance code';
            state.mode = BAD;
            break top;
          }

          break; // need to emulate goto via "continue"
        }
      }
      else if ((op & 64) === 0) {              /* 2nd level length code */
        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
        continue dolen;
      }
      else if (op & 32) {                     /* end-of-block */
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.mode = TYPE;
        break top;
      }
      else {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break top;
      }

      break; // need to emulate goto via "continue"
    }
  } while (_in < last && _out < end);

  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
  len = bits >> 3;
  _in -= len;
  bits -= len << 3;
  hold &= (1 << bits) - 1;

  /* update state and return */
  strm.next_in = _in;
  strm.next_out = _out;
  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));
  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));
  state.hold = hold;
  state.bits = bits;
  return;
};


/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var utils = __webpack_require__(45);

var MAXBITS = 15;
var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);

var CODES = 0;
var LENS = 1;
var DISTS = 2;

var lbase = [ /* Length codes 257..285 base */
  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0
];

var lext = [ /* Length codes 257..285 extra */
  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
];

var dbase = [ /* Distance codes 0..29 base */
  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
  8193, 12289, 16385, 24577, 0, 0
];

var dext = [ /* Distance codes 0..29 extra */
  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
  28, 28, 29, 29, 64, 64
];

module.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)
{
  var bits = opts.bits;
      //here = opts.here; /* table entry for duplication */

  var len = 0;               /* a code's length in bits */
  var sym = 0;               /* index of code symbols */
  var min = 0, max = 0;          /* minimum and maximum code lengths */
  var root = 0;              /* number of index bits for root table */
  var curr = 0;              /* number of index bits for current table */
  var drop = 0;              /* code bits to drop for sub-table */
  var left = 0;                   /* number of prefix codes available */
  var used = 0;              /* code entries in table used */
  var huff = 0;              /* Huffman code */
  var incr;              /* for incrementing code, index */
  var fill;              /* index for replicating entries */
  var low;               /* low bits for current root entry */
  var mask;              /* mask for low root bits */
  var next;             /* next available space in table */
  var base = null;     /* base value table to use */
  var base_index = 0;
//  var shoextra;    /* extra bits table to use */
  var end;                    /* use base and extra for symbol > end */
  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */
  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */
  var extra = null;
  var extra_index = 0;

  var here_bits, here_op, here_val;

  /*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
  for (len = 0; len <= MAXBITS; len++) {
    count[len] = 0;
  }
  for (sym = 0; sym < codes; sym++) {
    count[lens[lens_index + sym]]++;
  }

  /* bound code lengths, force root to be within code lengths */
  root = bits;
  for (max = MAXBITS; max >= 1; max--) {
    if (count[max] !== 0) { break; }
  }
  if (root > max) {
    root = max;
  }
  if (max === 0) {                     /* no symbols to code at all */
    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;


    //table.op[opts.table_index] = 64;
    //table.bits[opts.table_index] = 1;
    //table.val[opts.table_index++] = 0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;

    opts.bits = 1;
    return 0;     /* no symbols, but wait for decoding to report error */
  }
  for (min = 1; min < max; min++) {
    if (count[min] !== 0) { break; }
  }
  if (root < min) {
    root = min;
  }

  /* check for an over-subscribed or incomplete set of lengths */
  left = 1;
  for (len = 1; len <= MAXBITS; len++) {
    left <<= 1;
    left -= count[len];
    if (left < 0) {
      return -1;
    }        /* over-subscribed */
  }
  if (left > 0 && (type === CODES || max !== 1)) {
    return -1;                      /* incomplete set */
  }

  /* generate offsets into symbol table for each length for sorting */
  offs[1] = 0;
  for (len = 1; len < MAXBITS; len++) {
    offs[len + 1] = offs[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (sym = 0; sym < codes; sym++) {
    if (lens[lens_index + sym] !== 0) {
      work[offs[lens[lens_index + sym]]++] = sym;
    }
  }

  /*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

  /* set up for code type */
  // poor man optimization - use if-else instead of switch,
  // to avoid deopts in old v8
  if (type === CODES) {
    base = extra = work;    /* dummy value--not used */
    end = 19;

  } else if (type === LENS) {
    base = lbase;
    base_index -= 257;
    extra = lext;
    extra_index -= 257;
    end = 256;

  } else {                    /* DISTS */
    base = dbase;
    extra = dext;
    end = -1;
  }

  /* initialize opts for loop */
  huff = 0;                   /* starting code */
  sym = 0;                    /* starting code symbol */
  len = min;                  /* starting code length */
  next = table_index;              /* current table to fill in */
  curr = root;                /* current table index bits */
  drop = 0;                   /* current bits to drop from code for index */
  low = -1;                   /* trigger new sub-table when len > root */
  used = 1 << root;          /* use root table entries */
  mask = used - 1;            /* mask for comparing low */

  /* check available table space */
  if ((type === LENS && used > ENOUGH_LENS) ||
    (type === DISTS && used > ENOUGH_DISTS)) {
    return 1;
  }

  var i = 0;
  /* process all codes and make table entries */
  for (;;) {
    i++;
    /* create table entry */
    here_bits = len - drop;
    if (work[sym] < end) {
      here_op = 0;
      here_val = work[sym];
    }
    else if (work[sym] > end) {
      here_op = extra[extra_index + work[sym]];
      here_val = base[base_index + work[sym]];
    }
    else {
      here_op = 32 + 64;         /* end of block */
      here_val = 0;
    }

    /* replicate for those indices with low len bits equal to huff */
    incr = 1 << (len - drop);
    fill = 1 << curr;
    min = fill;                 /* save offset to next table */
    do {
      fill -= incr;
      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;
    } while (fill !== 0);

    /* backwards increment the len-bit code huff */
    incr = 1 << (len - 1);
    while (huff & incr) {
      incr >>= 1;
    }
    if (incr !== 0) {
      huff &= incr - 1;
      huff += incr;
    } else {
      huff = 0;
    }

    /* go to next symbol, update count, len */
    sym++;
    if (--count[len] === 0) {
      if (len === max) { break; }
      len = lens[lens_index + work[sym]];
    }

    /* create new sub-table if needed */
    if (len > root && (huff & mask) !== low) {
      /* if first time, transition to sub-tables */
      if (drop === 0) {
        drop = root;
      }

      /* increment past last table */
      next += min;            /* here min is 1 << curr */

      /* determine length of next table */
      curr = len - drop;
      left = 1 << curr;
      while (curr + drop < max) {
        left -= count[curr + drop];
        if (left <= 0) { break; }
        curr++;
        left <<= 1;
      }

      /* check for enough space */
      used += 1 << curr;
      if ((type === LENS && used > ENOUGH_LENS) ||
        (type === DISTS && used > ENOUGH_DISTS)) {
        return 1;
      }

      /* point entry in root table to sub-table */
      low = huff & mask;
      /*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/
      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;
    }
  }

  /* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */
  if (huff !== 0) {
    //table.op[next + huff] = 64;            /* invalid code marker */
    //table.bits[next + huff] = len - drop;
    //table.val[next + huff] = 0;
    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;
  }

  /* set return parameters */
  //opts.table_index += used;
  opts.bits = root;
  return 0;
};


/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



module.exports = {

  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH:         0,
  Z_PARTIAL_FLUSH:    1,
  Z_SYNC_FLUSH:       2,
  Z_FULL_FLUSH:       3,
  Z_FINISH:           4,
  Z_BLOCK:            5,
  Z_TREES:            6,

  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK:               0,
  Z_STREAM_END:       1,
  Z_NEED_DICT:        2,
  Z_ERRNO:           -1,
  Z_STREAM_ERROR:    -2,
  Z_DATA_ERROR:      -3,
  //Z_MEM_ERROR:     -4,
  Z_BUF_ERROR:       -5,
  //Z_VERSION_ERROR: -6,

  /* compression levels */
  Z_NO_COMPRESSION:         0,
  Z_BEST_SPEED:             1,
  Z_BEST_COMPRESSION:       9,
  Z_DEFAULT_COMPRESSION:   -1,


  Z_FILTERED:               1,
  Z_HUFFMAN_ONLY:           2,
  Z_RLE:                    3,
  Z_FIXED:                  4,
  Z_DEFAULT_STRATEGY:       0,

  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY:                 0,
  Z_TEXT:                   1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN:                2,

  /* The deflate compression method */
  Z_DEFLATED:               8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};


/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
// original notice:

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function compare(a, b) {
  if (a === b) {
    return 0;
  }

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }

  if (x < y) {
    return -1;
  }
  if (y < x) {
    return 1;
  }
  return 0;
}
function isBuffer(b) {
  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
    return global.Buffer.isBuffer(b);
  }
  return !!(b != null && b._isBuffer);
}

// based on node assert, original notice:

// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

var util = __webpack_require__(49);
var hasOwn = Object.prototype.hasOwnProperty;
var pSlice = Array.prototype.slice;
var functionsHaveNames = (function () {
  return function foo() {}.name === 'foo';
}());
function pToString (obj) {
  return Object.prototype.toString.call(obj);
}
function isView(arrbuf) {
  if (isBuffer(arrbuf)) {
    return false;
  }
  if (typeof global.ArrayBuffer !== 'function') {
    return false;
  }
  if (typeof ArrayBuffer.isView === 'function') {
    return ArrayBuffer.isView(arrbuf);
  }
  if (!arrbuf) {
    return false;
  }
  if (arrbuf instanceof DataView) {
    return true;
  }
  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
    return true;
  }
  return false;
}
// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

var regex = /\s*function\s+([^\(\s]*)\s*/;
// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
function getName(func) {
  if (!util.isFunction(func)) {
    return;
  }
  if (functionsHaveNames) {
    return func.name;
  }
  var str = func.toString();
  var match = str.match(regex);
  return match && match[1];
}
assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  } else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = getName(stackStartFunction);
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function truncate(s, n) {
  if (typeof s === 'string') {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}
function inspect(something) {
  if (functionsHaveNames || !util.isFunction(something)) {
    return util.inspect(something);
  }
  var rawname = getName(something);
  var name = rawname ? ': ' + rawname : '';
  return '[Function' +  name + ']';
}
function getMessage(self) {
  return truncate(inspect(self.actual), 128) + ' ' +
         self.operator + ' ' +
         truncate(inspect(self.expected), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
  }
};

function _deepEqual(actual, expected, strict, memos) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;
  } else if (isBuffer(actual) && isBuffer(expected)) {
    return compare(actual, expected) === 0;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if ((actual === null || typeof actual !== 'object') &&
             (expected === null || typeof expected !== 'object')) {
    return strict ? actual === expected : actual == expected;

  // If both values are instances of typed arrays, wrap their underlying
  // ArrayBuffers in a Buffer each to increase performance
  // This optimization requires the arrays to have the same type as checked by
  // Object.prototype.toString (aka pToString). Never perform binary
  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
  // bit patterns are not identical.
  } else if (isView(actual) && isView(expected) &&
             pToString(actual) === pToString(expected) &&
             !(actual instanceof Float32Array ||
               actual instanceof Float64Array)) {
    return compare(new Uint8Array(actual.buffer),
                   new Uint8Array(expected.buffer)) === 0;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else if (isBuffer(actual) !== isBuffer(expected)) {
    return false;
  } else {
    memos = memos || {actual: [], expected: []};

    var actualIndex = memos.actual.indexOf(actual);
    if (actualIndex !== -1) {
      if (actualIndex === memos.expected.indexOf(expected)) {
        return true;
      }
    }

    memos.actual.push(actual);
    memos.expected.push(expected);

    return objEquiv(actual, expected, strict, memos);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b, strict, actualVisitedObjects) {
  if (a === null || a === undefined || b === null || b === undefined)
    return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b))
    return a === b;
  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
    return false;
  var aIsArgs = isArguments(a);
  var bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b, strict);
  }
  var ka = objectKeys(a);
  var kb = objectKeys(b);
  var key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length !== kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] !== kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
      return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
  }
}


// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  }

  try {
    if (actual instanceof expected) {
      return true;
    }
  } catch (e) {
    // Ignore.  The instanceof check doesn't work for arrow functions.
  }

  if (Error.isPrototypeOf(expected)) {
    return false;
  }

  return expected.call({}, actual) === true;
}

function _tryBlock(block) {
  var error;
  try {
    block();
  } catch (e) {
    error = e;
  }
  return error;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (typeof block !== 'function') {
    throw new TypeError('"block" argument must be a function');
  }

  if (typeof expected === 'string') {
    message = expected;
    expected = null;
  }

  actual = _tryBlock(block);

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  var userProvidedMessage = typeof message === 'string';
  var isUnwantedException = !shouldThrow && util.isError(actual);
  var isUnexpectedException = !shouldThrow && actual && !expected;

  if ((isUnwantedException &&
      userProvidedMessage &&
      expectedException(actual, expected)) ||
      isUnexpectedException) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws(true, block, error, message);
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {
  _throws(false, block, error, message);
};

assert.ifError = function(err) { if (err) throw err; };

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
class DefaultParseContext {
    constructor(version) {
        this.version = version;
        this.glyphCounts = new Map();
    }
    getVersion() {
        return this.version;
    }
    setGlyphCount(fontId, glyphCount) {
        this.glyphCounts.set(fontId, glyphCount);
    }
    getGlyphCount(fontId) {
        return this.glyphCounts.get(fontId);
    }
}
exports.DefaultParseContext = DefaultParseContext;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9wYXJzZS1jb250ZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBb0JBO0lBSUUsWUFBWSxPQUFrQjtRQUM1QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksR0FBRyxFQUFFLENBQUM7SUFDL0IsQ0FBQztJQUVELFVBQVU7UUFDUixNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0lBRUQsYUFBYSxDQUFDLE1BQWMsRUFBRSxVQUFvQjtRQUNoRCxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELGFBQWEsQ0FBQyxNQUFjO1FBQzFCLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN0QyxDQUFDO0NBQ0Y7QUFwQkQsa0RBb0JDIiwiZmlsZSI6ImxpYi9wYXJzZS1jb250ZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtVaW50MTYsIFVpbnRTaXplfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcblxuLyoqXG4gKiBSZXR1cm4gdGhlIG1ham9yIFNXRiB2ZXJzaW9uIG9yIHVuZGVmaW5lZCBpZiB0aGUgdmVyc2lvbiBpcyB1bmtub3duLlxuICovXG5leHBvcnQgdHlwZSBWZXJzaW9uUHJvdmlkZXIgPSAoKSA9PiBVaW50U2l6ZSB8IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBUeXBlIHJlcHJlc2VudGluZyBhIGZ1bmN0aW9uIHJldHVybmluZyB0aGUgbnVtYmVyIG9mIGdseXBocyBpbiB0aGUgZm9udCB3aXRoIElEIGBmb250SWRgLlxuICogSWYgdGhlIGZvbnQgaXMgbm90IGtub3duLCByZXR1cm5zIHVuZGVmaW5lZC5cbiAqL1xuZXhwb3J0IHR5cGUgR2x5cGhDb3VudFByb3ZpZGVyID0gKGZvbnRJZDogVWludDE2KSA9PiBVaW50U2l6ZSB8IHVuZGVmaW5lZDtcblxuZXhwb3J0IGludGVyZmFjZSBQYXJzZUNvbnRleHQge1xuICByZWFkb25seSBnZXRWZXJzaW9uOiBWZXJzaW9uUHJvdmlkZXI7XG4gIHJlYWRvbmx5IGdldEdseXBoQ291bnQ6IEdseXBoQ291bnRQcm92aWRlcjtcblxuICBzZXRHbHlwaENvdW50KGZvbnRJZDogVWludDE2LCBnbHlwaENvdW50OiBVaW50U2l6ZSk6IHZvaWQ7XG59XG5cbmV4cG9ydCBjbGFzcyBEZWZhdWx0UGFyc2VDb250ZXh0IGltcGxlbWVudHMgUGFyc2VDb250ZXh0IHtcbiAgcHJpdmF0ZSByZWFkb25seSB2ZXJzaW9uOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIHByaXZhdGUgcmVhZG9ubHkgZ2x5cGhDb3VudHM6IE1hcDxVaW50MTYsIFVpbnRTaXplPjtcblxuICBjb25zdHJ1Y3Rvcih2ZXJzaW9uPzogVWludFNpemUpIHtcbiAgICB0aGlzLnZlcnNpb24gPSB2ZXJzaW9uO1xuICAgIHRoaXMuZ2x5cGhDb3VudHMgPSBuZXcgTWFwKCk7XG4gIH1cblxuICBnZXRWZXJzaW9uKCk6IFVpbnRTaXplIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy52ZXJzaW9uO1xuICB9XG5cbiAgc2V0R2x5cGhDb3VudChmb250SWQ6IFVpbnQxNiwgZ2x5cGhDb3VudDogVWludFNpemUpOiB2b2lkIHtcbiAgICB0aGlzLmdseXBoQ291bnRzLnNldChmb250SWQsIGdseXBoQ291bnQpO1xuICB9XG5cbiAgZ2V0R2x5cGhDb3VudChmb250SWQ6IFVpbnQxNik6IFVpbnRTaXplIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5nbHlwaENvdW50cy5nZXQoZm9udElkKTtcbiAgfVxufVxuIl19


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const swf_tree_1 = __webpack_require__(6);
const incomplete_stream_1 = __webpack_require__(67);
const basic_data_types_1 = __webpack_require__(21);
function parseCompressionMethod(byteStream) {
    if (byteStream.byteEnd < 3) {
        throw incomplete_stream_1.IncompleteStreamError.create(3);
    }
    // Read FWS, CWS or ZWS
    if (byteStream.bytes[byteStream.bytePos + 1] !== "W".charCodeAt(0)
        || byteStream.bytes[byteStream.bytePos + 2] !== "S".charCodeAt(0)) {
        throw incident_1.Incident("InvalidCompressionMethod", "Invalid compression method");
    }
    let result;
    switch (byteStream.bytes[byteStream.bytePos]) {
        case "F".charCodeAt(0):
            result = swf_tree_1.CompressionMethod.None;
            break;
        case "C".charCodeAt(0):
            result = swf_tree_1.CompressionMethod.Deflate;
            break;
        case "Z".charCodeAt(0):
            result = swf_tree_1.CompressionMethod.Lzma;
            break;
        default:
            throw incident_1.Incident("InvalidCompressionMethod", "Invalid compression method");
    }
    byteStream.bytePos += 3;
    return result;
}
exports.parseCompressionMethod = parseCompressionMethod;
function parseSwfSignature(byteStream) {
    if (byteStream.byteEnd < 8) {
        throw incomplete_stream_1.IncompleteStreamError.create(8);
    }
    const compressionMethod = parseCompressionMethod(byteStream);
    const swfVersion = byteStream.readUint8();
    const uncompressedFileLength = byteStream.readUint32LE();
    return { compressionMethod, swfVersion, uncompressedFileLength };
}
exports.parseSwfSignature = parseSwfSignature;
function parseHeader(byteStream) {
    const signature = parseSwfSignature(byteStream);
    const frameSize = basic_data_types_1.parseRect(byteStream);
    const frameRate = byteStream.readUfixed8P8LE();
    const frameCount = byteStream.readUint16LE();
    return Object.assign({}, signature, { frameSize, frameRate, frameCount });
}
exports.parseHeader = parseHeader;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9wYXJzZXJzL2hlYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFrQztBQUVsQyx1Q0FBa0Y7QUFDbEYsbUVBQWtFO0FBRWxFLHlEQUE2QztBQUU3QyxnQ0FBdUMsVUFBa0I7SUFDdkQsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzNCLE1BQU0seUNBQXFCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFDRCx1QkFBdUI7SUFDdkIsRUFBRSxDQUFDLENBQ0QsVUFBVSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1dBQzNELFVBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FDbEUsQ0FBQyxDQUFDLENBQUM7UUFDRCxNQUFNLG1CQUFRLENBQUMsMEJBQTBCLEVBQUUsNEJBQTRCLENBQUMsQ0FBQztJQUMzRSxDQUFDO0lBRUQsSUFBSSxNQUF5QixDQUFDO0lBQzlCLE1BQU0sQ0FBQyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM3QyxLQUFLLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3BCLE1BQU0sR0FBRyw0QkFBaUIsQ0FBQyxJQUFJLENBQUM7WUFDaEMsS0FBSyxDQUFDO1FBQ1IsS0FBSyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUNwQixNQUFNLEdBQUcsNEJBQWlCLENBQUMsT0FBTyxDQUFDO1lBQ25DLEtBQUssQ0FBQztRQUNSLEtBQUssR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDcEIsTUFBTSxHQUFHLDRCQUFpQixDQUFDLElBQUksQ0FBQztZQUNoQyxLQUFLLENBQUM7UUFDUjtZQUNFLE1BQU0sbUJBQVEsQ0FBQywwQkFBMEIsRUFBRSw0QkFBNEIsQ0FBQyxDQUFDO0lBQzdFLENBQUM7SUFDRCxVQUFVLENBQUMsT0FBTyxJQUFJLENBQUMsQ0FBQztJQUN4QixNQUFNLENBQUMsTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUE1QkQsd0RBNEJDO0FBRUQsMkJBQWtDLFVBQWtCO0lBQ2xELEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMzQixNQUFNLHlDQUFxQixDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsTUFBTSxpQkFBaUIsR0FBc0Isc0JBQXNCLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDaEYsTUFBTSxVQUFVLEdBQVUsVUFBVSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ2pELE1BQU0sc0JBQXNCLEdBQVcsVUFBVSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBRWpFLE1BQU0sQ0FBQyxFQUFDLGlCQUFpQixFQUFFLFVBQVUsRUFBRSxzQkFBc0IsRUFBQyxDQUFDO0FBQ2pFLENBQUM7QUFWRCw4Q0FVQztBQUVELHFCQUE0QixVQUFrQjtJQUM1QyxNQUFNLFNBQVMsR0FBaUIsaUJBQWlCLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDOUQsTUFBTSxTQUFTLEdBQVMsNEJBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUM5QyxNQUFNLFNBQVMsR0FBYyxVQUFVLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDMUQsTUFBTSxVQUFVLEdBQVcsVUFBVSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3JELE1BQU0sbUJBQUssU0FBUyxJQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsVUFBVSxJQUFFO0FBQzFELENBQUM7QUFORCxrQ0FNQyIsImZpbGUiOiJsaWIvcGFyc2Vycy9oZWFkZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiaW5jaWRlbnRcIjtcbmltcG9ydCB7VWludDE2LCBVaW50MzIsIFVpbnQ4fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7Q29tcHJlc3Npb25NZXRob2QsIEhlYWRlciwgUmVjdCwgU3dmU2lnbmF0dXJlLCBVZml4ZWQ4UDh9IGZyb20gXCJzd2YtdHJlZVwiO1xuaW1wb3J0IHtJbmNvbXBsZXRlU3RyZWFtRXJyb3J9IGZyb20gXCIuLi9lcnJvcnMvaW5jb21wbGV0ZS1zdHJlYW1cIjtcbmltcG9ydCB7U3RyZWFtfSBmcm9tIFwiLi4vc3RyZWFtXCI7XG5pbXBvcnQge3BhcnNlUmVjdH0gZnJvbSBcIi4vYmFzaWMtZGF0YS10eXBlc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDb21wcmVzc2lvbk1ldGhvZChieXRlU3RyZWFtOiBTdHJlYW0pOiBDb21wcmVzc2lvbk1ldGhvZCB7XG4gIGlmIChieXRlU3RyZWFtLmJ5dGVFbmQgPCAzKSB7XG4gICAgdGhyb3cgSW5jb21wbGV0ZVN0cmVhbUVycm9yLmNyZWF0ZSgzKTtcbiAgfVxuICAvLyBSZWFkIEZXUywgQ1dTIG9yIFpXU1xuICBpZiAoXG4gICAgYnl0ZVN0cmVhbS5ieXRlc1tieXRlU3RyZWFtLmJ5dGVQb3MgKyAxXSAhPT0gXCJXXCIuY2hhckNvZGVBdCgwKVxuICAgIHx8IGJ5dGVTdHJlYW0uYnl0ZXNbYnl0ZVN0cmVhbS5ieXRlUG9zICsgMl0gIT09IFwiU1wiLmNoYXJDb2RlQXQoMClcbiAgKSB7XG4gICAgdGhyb3cgSW5jaWRlbnQoXCJJbnZhbGlkQ29tcHJlc3Npb25NZXRob2RcIiwgXCJJbnZhbGlkIGNvbXByZXNzaW9uIG1ldGhvZFwiKTtcbiAgfVxuXG4gIGxldCByZXN1bHQ6IENvbXByZXNzaW9uTWV0aG9kO1xuICBzd2l0Y2ggKGJ5dGVTdHJlYW0uYnl0ZXNbYnl0ZVN0cmVhbS5ieXRlUG9zXSkge1xuICAgIGNhc2UgXCJGXCIuY2hhckNvZGVBdCgwKTpcbiAgICAgIHJlc3VsdCA9IENvbXByZXNzaW9uTWV0aG9kLk5vbmU7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwiQ1wiLmNoYXJDb2RlQXQoMCk6XG4gICAgICByZXN1bHQgPSBDb21wcmVzc2lvbk1ldGhvZC5EZWZsYXRlO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcIlpcIi5jaGFyQ29kZUF0KDApOlxuICAgICAgcmVzdWx0ID0gQ29tcHJlc3Npb25NZXRob2QuTHptYTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBJbmNpZGVudChcIkludmFsaWRDb21wcmVzc2lvbk1ldGhvZFwiLCBcIkludmFsaWQgY29tcHJlc3Npb24gbWV0aG9kXCIpO1xuICB9XG4gIGJ5dGVTdHJlYW0uYnl0ZVBvcyArPSAzO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VTd2ZTaWduYXR1cmUoYnl0ZVN0cmVhbTogU3RyZWFtKTogU3dmU2lnbmF0dXJlIHtcbiAgaWYgKGJ5dGVTdHJlYW0uYnl0ZUVuZCA8IDgpIHtcbiAgICB0aHJvdyBJbmNvbXBsZXRlU3RyZWFtRXJyb3IuY3JlYXRlKDgpO1xuICB9XG5cbiAgY29uc3QgY29tcHJlc3Npb25NZXRob2Q6IENvbXByZXNzaW9uTWV0aG9kID0gcGFyc2VDb21wcmVzc2lvbk1ldGhvZChieXRlU3RyZWFtKTtcbiAgY29uc3Qgc3dmVmVyc2lvbjogVWludDggPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuICBjb25zdCB1bmNvbXByZXNzZWRGaWxlTGVuZ3RoOiBVaW50MzIgPSBieXRlU3RyZWFtLnJlYWRVaW50MzJMRSgpO1xuXG4gIHJldHVybiB7Y29tcHJlc3Npb25NZXRob2QsIHN3ZlZlcnNpb24sIHVuY29tcHJlc3NlZEZpbGVMZW5ndGh9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VIZWFkZXIoYnl0ZVN0cmVhbTogU3RyZWFtKTogSGVhZGVyIHtcbiAgY29uc3Qgc2lnbmF0dXJlOiBTd2ZTaWduYXR1cmUgPSBwYXJzZVN3ZlNpZ25hdHVyZShieXRlU3RyZWFtKTtcbiAgY29uc3QgZnJhbWVTaXplOiBSZWN0ID0gcGFyc2VSZWN0KGJ5dGVTdHJlYW0pO1xuICBjb25zdCBmcmFtZVJhdGU6IFVmaXhlZDhQOCA9IGJ5dGVTdHJlYW0ucmVhZFVmaXhlZDhQOExFKCk7XG4gIGNvbnN0IGZyYW1lQ291bnQ6IFVpbnQxNiA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQxNkxFKCk7XG4gIHJldHVybiB7Li4uc2lnbmF0dXJlLCBmcmFtZVNpemUsIGZyYW1lUmF0ZSwgZnJhbWVDb3VudH07XG59XG4iXX0=


/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const swf_tree_1 = __webpack_require__(6);
const avm1_1 = __webpack_require__(143);
const basic_data_types_1 = __webpack_require__(21);
const display_1 = __webpack_require__(362);
const shapes_1 = __webpack_require__(144);
const text_1 = __webpack_require__(364);
/**
 * Read tags until the end of the stream or "end-of-tags".
 */
function parseTagBlockString(byteStream, context) {
    const tags = [];
    while (byteStream.available() > 0) {
        // A null byte indicates the end-of-tags
        if (byteStream.peekUint8() === 0) {
            byteStream.skip(1);
            break;
        }
        tags.push(parseTag(byteStream, context));
    }
    return tags;
}
exports.parseTagBlockString = parseTagBlockString;
function parseTag(byteStream, context) {
    const { code, length } = parseTagHeader(byteStream);
    const tag = parseTagBody(byteStream.take(length), code, context);
    switch (tag.type) {
        case swf_tree_1.TagType.DefineFont:
            if (tag.glyphs !== undefined) {
                context.setGlyphCount(tag.id, tag.glyphs.length);
            }
            else {
                context.setGlyphCount(tag.id, 0);
            }
            break;
        default:
            break;
    }
    return tag;
}
exports.parseTag = parseTag;
function parseTagHeader(byteStream) {
    const codeAndLength = byteStream.readUint16LE();
    const code = codeAndLength >>> 6;
    const maxLength = (1 << 6) - 1;
    const length = codeAndLength & maxLength;
    if (length === maxLength) {
        return { code, length: byteStream.readUint32LE() };
    }
    else {
        return { code, length };
    }
}
function parseTagBody(byteStream, tagCode, context) {
    switch (tagCode) {
        case 1:
            return { type: swf_tree_1.TagType.ShowFrame };
        case 2:
            return parseDefineShape(byteStream);
        case 4:
            return parsePlaceObject(byteStream);
        case 5:
            return parseRemoveObject(byteStream);
        case 9:
            return parseSetBackgroundColor(byteStream);
        case 11:
            return parseDefineText(byteStream);
        case 12:
            return parseDoAction(byteStream);
        case 22:
            return parseDefineShape2(byteStream);
        case 26: {
            const swfVersion = context.getVersion();
            if (swfVersion === undefined) {
                throw new incident_1.Incident("Missing SWF version, unable to parse placeObject2");
            }
            return parsePlaceObject2(byteStream, swfVersion);
        }
        case 28:
            return parseRemoveObject2(byteStream);
        case 32:
            return parseDefineShape3(byteStream);
        case 37:
            return parseDefineEditText(byteStream);
        case 39:
            return parseDefineSprite(byteStream, context);
        case 56:
            return parseExportAssets(byteStream);
        case 57:
            return parseImportAssets(byteStream);
        case 59:
            return parseDoInitAction(byteStream);
        case 69:
            return parseFileAttributes(byteStream);
        case 70: {
            const swfVersion = context.getVersion();
            if (swfVersion === undefined) {
                throw new incident_1.Incident("Missing SWF version, unable to parse placeObject3");
            }
            return parsePlaceObject3(byteStream, swfVersion);
        }
        case 71:
            return parseImportAssets2(byteStream);
        case 73:
            return parseDefineFontAlignZones(byteStream, context.getGlyphCount.bind(context));
        case 74:
            return parseCsmTextSettings(byteStream);
        case 75:
            return parseDefineFont(byteStream);
        case 77:
            return parseMetadata(byteStream);
        case 86:
            return parseDefineSceneAndFrameLabelData(byteStream);
        case 88:
            return parseDefineFontName(byteStream);
        default:
            return { type: swf_tree_1.TagType.Unknown, code: tagCode, data: Uint8Array.from(byteStream.bytes) };
    }
}
function parseCsmTextSettings(byteStream) {
    const textId = byteStream.readUint16LE();
    const renderer = text_1.parseTextRendererBits(byteStream);
    const fitting = text_1.parseGridFittingBits(byteStream);
    byteStream.skipBits(3);
    const thickness = byteStream.readFloat32BE();
    const sharpness = byteStream.readFloat32BE();
    byteStream.skip(1);
    return { type: swf_tree_1.TagType.CsmTextSettings, textId, renderer, fitting, thickness, sharpness };
}
exports.parseCsmTextSettings = parseCsmTextSettings;
function parseDefineFont(byteStream) {
    const id = byteStream.readUint16LE();
    const hasLayout = byteStream.readBoolBits();
    const isShiftJis = byteStream.readBoolBits();
    const isAnsi = byteStream.readBoolBits();
    const isSmall = byteStream.readBoolBits();
    const useWideOffsets = byteStream.readBoolBits();
    const useWideCodes = byteStream.readBoolBits();
    const isItalic = byteStream.readBoolBits();
    const isBold = byteStream.readBoolBits();
    const language = text_1.parseLanguageCode(byteStream);
    const fontNameLength = byteStream.readUint8();
    const fontName = byteStream.take(fontNameLength).readCString();
    const glyphCount = byteStream.readUint16LE();
    if (glyphCount === 0) {
        // System font
        return {
            type: swf_tree_1.TagType.DefineFont,
            id,
            fontName,
            isSmall,
            isShiftJis,
            isAnsi,
            isItalic,
            isBold,
            language,
        };
    }
    const glyphs = text_1.parseOffsetGlyphs(byteStream, glyphCount, useWideOffsets);
    const codeUnits = new Array(glyphCount);
    for (let i = 0; i < codeUnits.length; i++) {
        codeUnits[i] = useWideCodes ? byteStream.readUint16LE() : byteStream.readUint8();
    }
    const layout = hasLayout ? text_1.parseFontLayout(byteStream, glyphCount) : undefined;
    return {
        type: swf_tree_1.TagType.DefineFont,
        id,
        fontName,
        isSmall,
        isShiftJis,
        isAnsi,
        isItalic,
        isBold,
        language,
        glyphs,
        codeUnits,
        layout,
    };
}
exports.parseDefineFont = parseDefineFont;
function parseDefineFontAlignZones(byteStream, glyphCountProvider) {
    const fontId = byteStream.readUint16LE();
    const glyphCount = glyphCountProvider(fontId);
    if (glyphCount === undefined) {
        throw new incident_1.Incident("ParseError", `ParseDefineFontAlignZones: Unknown font for id: ${fontId}`);
    }
    const csmTableHint = text_1.parseCsmTableHintBits(byteStream);
    byteStream.skipBits(6);
    const zones = [];
    for (let i = 0; i < glyphCount; i++) {
        zones.push(text_1.parseFontAlignmentZone(byteStream));
    }
    return { type: swf_tree_1.TagType.DefineFontAlignZones, fontId, csmTableHint, zones };
}
exports.parseDefineFontAlignZones = parseDefineFontAlignZones;
function parseDefineFontName(byteStream) {
    const fontId = byteStream.readUint16LE();
    const name = byteStream.readCString();
    const copyright = byteStream.readCString();
    return { type: swf_tree_1.TagType.DefineFontName, fontId, name, copyright };
}
exports.parseDefineFontName = parseDefineFontName;
function parseDefineSceneAndFrameLabelData(byteStream) {
    const sceneCount = byteStream.readEncodedUint32LE();
    const scenes = [];
    for (let i = 0; i < sceneCount; i++) {
        const offset = byteStream.readEncodedUint32LE();
        const name = byteStream.readCString();
        scenes.push({ offset, name });
    }
    const labelCount = byteStream.readEncodedUint32LE();
    const labels = [];
    for (let i = 0; i < labelCount; i++) {
        const frame = byteStream.readEncodedUint32LE();
        const name = byteStream.readCString();
        labels.push({ frame, name });
    }
    return {
        type: swf_tree_1.TagType.DefineSceneAndFrameLabelData,
        scenes,
        labels,
    };
}
exports.parseDefineSceneAndFrameLabelData = parseDefineSceneAndFrameLabelData;
function parseDefineShape(byteStream) {
    return parseDefineShapeAny(byteStream, shapes_1.ShapeVersion.Shape1);
}
exports.parseDefineShape = parseDefineShape;
function parseDefineShape2(byteStream) {
    return parseDefineShapeAny(byteStream, shapes_1.ShapeVersion.Shape2);
}
exports.parseDefineShape2 = parseDefineShape2;
function parseDefineShape3(byteStream) {
    return parseDefineShapeAny(byteStream, shapes_1.ShapeVersion.Shape3);
}
exports.parseDefineShape3 = parseDefineShape3;
function parseDefineShapeAny(byteStream, version) {
    const id = byteStream.readUint16LE();
    const bounds = basic_data_types_1.parseRect(byteStream);
    const shape = shapes_1.parseShape(byteStream, version);
    return {
        type: swf_tree_1.TagType.DefineShape,
        id,
        bounds,
        edgeBounds: undefined,
        hasFillWinding: false,
        hasNonScalingStrokes: false,
        hasScalingStrokes: false,
        shape,
    };
}
function parseDefineEditText(byteStream) {
    const id = byteStream.readUint16LE();
    const bounds = basic_data_types_1.parseRect(byteStream);
    const flags = byteStream.readUint16BE();
    const hasText = (flags & (1 << 15)) !== 0;
    const wordWrap = (flags & (1 << 14)) !== 0;
    const multiline = (flags & (1 << 13)) !== 0;
    const password = (flags & (1 << 12)) !== 0;
    const readonly = (flags & (1 << 11)) !== 0;
    const hasColor = (flags & (1 << 10)) !== 0;
    const hasMaxLength = (flags & (1 << 9)) !== 0;
    const hasFont = (flags & (1 << 8)) !== 0;
    const hasFontClass = (flags & (1 << 7)) !== 0;
    const autoSize = (flags & (1 << 6)) !== 0;
    const hasLayout = (flags & (1 << 5)) !== 0;
    const noSelect = (flags & (1 << 4)) !== 0;
    const border = (flags & (1 << 3)) !== 0;
    const wasStatic = (flags & (1 << 2)) !== 0;
    const html = (flags & (1 << 1)) !== 0;
    const useGlyphFont = (flags & (1 << 0)) !== 0;
    const fontId = hasFont ? byteStream.readUint16LE() : undefined;
    const fontClass = hasFontClass ? byteStream.readCString() : undefined;
    const fontSize = hasFont ? byteStream.readUint16LE() : undefined;
    const color = hasColor ? basic_data_types_1.parseStraightSRgba8(byteStream) : undefined;
    const maxLength = hasMaxLength ? byteStream.readUint16LE() : undefined;
    const align = hasLayout ? text_1.parseTextAlignment(byteStream) : undefined;
    const marginLeft = hasLayout ? byteStream.readUint16LE() : 0;
    const marginRight = hasLayout ? byteStream.readUint16LE() : 0;
    const indent = hasLayout ? byteStream.readUint16LE() : 0;
    const leading = hasLayout ? byteStream.readSint16LE() : 0;
    const rawVariableName = byteStream.readCString();
    const variableName = rawVariableName.length > 0 ? rawVariableName : undefined;
    const text = hasText ? byteStream.readCString() : undefined;
    return {
        type: swf_tree_1.TagType.DefineDynamicText,
        id,
        bounds,
        wordWrap,
        multiline,
        password,
        readonly,
        autoSize,
        noSelect,
        border,
        wasStatic,
        html,
        useGlyphFont,
        fontId,
        fontClass,
        fontSize,
        color,
        maxLength,
        align,
        marginLeft,
        marginRight,
        indent,
        leading,
        variableName,
        text,
    };
}
exports.parseDefineEditText = parseDefineEditText;
function parseDefineSprite(byteStream, context) {
    const id = byteStream.readUint16LE();
    const frameCount = byteStream.readUint16LE();
    const tags = parseTagBlockString(byteStream, context);
    return {
        type: swf_tree_1.TagType.DefineSprite,
        id,
        frameCount,
        tags,
    };
}
exports.parseDefineSprite = parseDefineSprite;
function parseDefineText(byteStream) {
    const id = byteStream.readUint16LE();
    const bounds = basic_data_types_1.parseRect(byteStream);
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    const indexBits = byteStream.readUint8();
    const advanceBits = byteStream.readUint8();
    const records = text_1.parseTextRecordString(byteStream, false, indexBits, advanceBits);
    return { type: swf_tree_1.TagType.DefineText, id, bounds, matrix, records };
}
exports.parseDefineText = parseDefineText;
function parseDefineText2(byteStream) {
    const id = byteStream.readUint16LE();
    const bounds = basic_data_types_1.parseRect(byteStream);
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    const indexBits = byteStream.readUint8();
    const advanceBits = byteStream.readUint8();
    const records = text_1.parseTextRecordString(byteStream, true, indexBits, advanceBits);
    return { type: swf_tree_1.TagType.DefineText, id, bounds, matrix, records };
}
exports.parseDefineText2 = parseDefineText2;
function parseDoAction(byteStream) {
    return { type: swf_tree_1.TagType.DoAction, actions: avm1_1.parseActionsString(byteStream) };
}
exports.parseDoAction = parseDoAction;
function parseDoInitAction(byteStream) {
    const spriteId = byteStream.readUint16LE();
    return { type: swf_tree_1.TagType.DoInitAction, spriteId, actions: avm1_1.parseActionsString(byteStream) };
}
exports.parseDoInitAction = parseDoInitAction;
function parseExportAssets(byteStream) {
    const assetCount = byteStream.readUint16LE();
    const assets = [];
    for (let i = 0; i < assetCount; i++) {
        const id = byteStream.readUint16LE();
        const name = byteStream.readCString();
        assets.push({ id, name });
    }
    return {
        type: swf_tree_1.TagType.ExportAssets,
        assets,
    };
}
exports.parseExportAssets = parseExportAssets;
function parseFileAttributes(byteStream) {
    const flags = byteStream.readUint8();
    byteStream.skip(3);
    return {
        type: swf_tree_1.TagType.FileAttributes,
        useDirectBlit: (flags & (1 << 6)) !== 0,
        useGpu: (flags & (1 << 5)) !== 0,
        hasMetadata: (flags & (1 << 4)) !== 0,
        useAs3: (flags & (1 << 3)) !== 0,
        noCrossDomainCaching: (flags & (1 << 2)) !== 0,
        useRelativeUrls: (flags & (1 << 1)) !== 0,
        useNetwork: (flags & (1 << 0)) !== 0,
    };
}
exports.parseFileAttributes = parseFileAttributes;
function parseImportAssets(byteStream) {
    const url = byteStream.readCString();
    const assetCount = byteStream.readUint16LE();
    const assets = [];
    for (let i = 0; i < assetCount; i++) {
        const id = byteStream.readUint16LE();
        const name = byteStream.readCString();
        assets.push({ id, name });
    }
    return {
        type: swf_tree_1.TagType.ImportAssets,
        url,
        assets,
    };
}
exports.parseImportAssets = parseImportAssets;
function parseImportAssets2(byteStream) {
    const url = byteStream.readCString();
    byteStream.skip(2);
    const assetCount = byteStream.readUint16LE();
    const assets = [];
    for (let i = 0; i < assetCount; i++) {
        const id = byteStream.readUint16LE();
        const name = byteStream.readCString();
        assets.push({ id, name });
    }
    return {
        type: swf_tree_1.TagType.ImportAssets,
        url,
        assets,
    };
}
exports.parseImportAssets2 = parseImportAssets2;
function parseMetadata(byteStream) {
    return { type: swf_tree_1.TagType.Metadata, metadata: byteStream.readCString() };
}
exports.parseMetadata = parseMetadata;
function parsePlaceObject(byteStream) {
    const characterId = byteStream.readUint16LE();
    const depth = byteStream.readUint16LE();
    const matrix = basic_data_types_1.parseMatrix(byteStream);
    let colorTransform = undefined;
    if (byteStream.available() > 0) {
        colorTransform = Object.assign({}, basic_data_types_1.parseColorTransform(byteStream), { alphaMult: swf_tree_1.Fixed8P8.fromValue(1), alphaAdd: 0 });
    }
    return {
        type: swf_tree_1.TagType.PlaceObject,
        isMove: false,
        depth,
        characterId,
        matrix,
        colorTransform,
        filters: undefined,
    };
}
exports.parsePlaceObject = parsePlaceObject;
function parsePlaceObject2(byteStream, swfVersion) {
    const hasClipActions = byteStream.readBoolBits();
    const hasClipDepth = byteStream.readBoolBits();
    const hasName = byteStream.readBoolBits();
    const hasRatio = byteStream.readBoolBits();
    const hasColorTransform = byteStream.readBoolBits();
    const hasMatrix = byteStream.readBoolBits();
    const hasCharacterId = byteStream.readBoolBits();
    const isMove = byteStream.readBoolBits();
    const depth = byteStream.readUint16LE();
    const characterId = hasCharacterId ? byteStream.readUint16LE() : undefined;
    const matrix = hasMatrix ? basic_data_types_1.parseMatrix(byteStream) : undefined;
    const colorTransform = hasColorTransform ?
        basic_data_types_1.parseColorTransformWithAlpha(byteStream) :
        undefined;
    const ratio = hasRatio ? byteStream.readUint16LE() : undefined;
    const name = hasName ? byteStream.readCString() : undefined;
    const clipDepth = hasClipDepth ? byteStream.readUint16LE() : undefined;
    const clipActions = hasClipActions ?
        display_1.parseClipActionsString(byteStream, swfVersion >= 6) :
        undefined;
    return {
        type: swf_tree_1.TagType.PlaceObject,
        isMove,
        depth,
        characterId,
        matrix,
        colorTransform,
        ratio,
        name,
        clipDepth,
        filters: undefined,
        clipActions: clipActions,
    };
}
exports.parsePlaceObject2 = parsePlaceObject2;
function parsePlaceObject3(byteStream, swfVersion) {
    const flags = byteStream.readUint16BE();
    const hasClipActions = (flags & (1 << 15)) !== 0;
    const hasClipDepth = (flags & (1 << 14)) !== 0;
    const hasName = (flags & (1 << 13)) !== 0;
    const hasRatio = (flags & (1 << 12)) !== 0;
    const hasColorTransform = (flags & (1 << 11)) !== 0;
    const hasMatrix = (flags & (1 << 10)) !== 0;
    const hasCharacterId = (flags & (1 << 9)) !== 0;
    const isMove = (flags & (1 << 8)) !== 0;
    // Reserved: (flags & (1 << 7))
    const hasBackgroundColor = (flags & (1 << 6)) !== 0;
    const hasVisibility = (flags & (1 << 5)) !== 0;
    const hasImage = (flags & (1 << 4)) !== 0;
    const hasClassName = (flags & (1 << 3)) !== 0;
    const hasCacheHint = (flags & (1 << 2)) !== 0;
    const hasBlendMode = (flags & (1 << 1)) !== 0;
    const hasFilters = (flags & (1 << 0)) !== 0;
    const depth = byteStream.readUint16LE();
    const className = hasClassName || (hasImage && hasCharacterId) ?
        byteStream.readCString() :
        undefined;
    const characterId = hasCharacterId ? byteStream.readUint16LE() : undefined;
    const matrix = hasMatrix ? basic_data_types_1.parseMatrix(byteStream) : undefined;
    const colorTransform = hasColorTransform ?
        basic_data_types_1.parseColorTransformWithAlpha(byteStream) :
        undefined;
    const ratio = hasRatio ? byteStream.readUint16LE() : undefined;
    const name = hasName ? byteStream.readCString() : undefined;
    const clipDepth = hasClipDepth ? byteStream.readUint16LE() : undefined;
    const filters = hasFilters ? display_1.parseFilterList(byteStream) : [];
    const blendMode = hasBlendMode ? display_1.parseBlendMode(byteStream) : swf_tree_1.BlendMode.Normal;
    const useBitmapCache = hasCacheHint ? byteStream.readUint8() !== 0 : false;
    const isVisible = hasVisibility ? byteStream.readUint8() !== 0 : false;
    // This does not match the spec, see Shumway
    // https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/swf/parser/module.ts#L158
    // TODO(demurgos): Check if it is RGBA or ARGB
    const backgroundColor = hasBackgroundColor ? basic_data_types_1.parseStraightSRgba8(byteStream) : undefined;
    const clipActions = hasClipActions ?
        display_1.parseClipActionsString(byteStream, swfVersion >= 6) :
        undefined;
    return {
        type: swf_tree_1.TagType.PlaceObject,
        isMove,
        depth,
        characterId,
        matrix,
        colorTransform,
        ratio,
        name,
        className,
        clipDepth,
        filters,
        blendMode,
        bitmapCache: useBitmapCache,
        visible: isVisible,
        backgroundColor,
        clipActions,
    };
}
exports.parsePlaceObject3 = parsePlaceObject3;
function parseRemoveObject(byteStream) {
    const characterId = byteStream.readUint16LE();
    const depth = byteStream.readUint16LE();
    return { type: swf_tree_1.TagType.RemoveObject, characterId, depth };
}
exports.parseRemoveObject = parseRemoveObject;
function parseRemoveObject2(byteStream) {
    const depth = byteStream.readUint16LE();
    return { type: swf_tree_1.TagType.RemoveObject, depth };
}
exports.parseRemoveObject2 = parseRemoveObject2;
function parseSetBackgroundColor(byteStream) {
    return { type: swf_tree_1.TagType.SetBackgroundColor, color: basic_data_types_1.parseSRgb8(byteStream) };
}
exports.parseSetBackgroundColor = parseSetBackgroundColor;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const swf_tree_1 = __webpack_require__(6);
const avm1_1 = __webpack_require__(143);
const basic_data_types_1 = __webpack_require__(21);
function parseBlendMode(byteStream) {
    switch (byteStream.readUint8()) {
        case 0:
        case 1:
            return swf_tree_1.BlendMode.Normal;
        case 2:
            return swf_tree_1.BlendMode.Layer;
        case 3:
            return swf_tree_1.BlendMode.Multiply;
        case 4:
            return swf_tree_1.BlendMode.Screen;
        case 5:
            return swf_tree_1.BlendMode.Lighten;
        case 6:
            return swf_tree_1.BlendMode.Darken;
        case 7:
            return swf_tree_1.BlendMode.Difference;
        case 8:
            return swf_tree_1.BlendMode.Add;
        case 9:
            return swf_tree_1.BlendMode.Subtract;
        case 10:
            return swf_tree_1.BlendMode.Invert;
        case 11:
            return swf_tree_1.BlendMode.Alpha;
        case 12:
            return swf_tree_1.BlendMode.Erase;
        case 13:
            return swf_tree_1.BlendMode.Overlay;
        case 14:
            return swf_tree_1.BlendMode.Hardlight;
        default:
            throw new incident_1.Incident("UnreachableCode");
    }
}
exports.parseBlendMode = parseBlendMode;
function parseClipActionsString(byteStream, extendedEvents) {
    byteStream.skip(2);
    // We skip the 4 bytes of the list of all events
    byteStream.skip(4);
    const result = [];
    while (true) {
        const savedPos = byteStream.bytePos;
        const peek = extendedEvents ? byteStream.readUint32BE() : byteStream.readUint32BE();
        if (peek === 0) {
            break;
        }
        else {
            byteStream.bytePos = savedPos;
        }
        result.push(parseClipActions(byteStream, extendedEvents));
    }
    return result;
}
exports.parseClipActionsString = parseClipActionsString;
function parseClipEventFlags(byteStream, extendedEvents) {
    const flags = byteStream.readUint16BE();
    const keyUp = (flags & (1 << 15)) !== 0;
    const keyDown = (flags & (1 << 14)) !== 0;
    const mouseUp = (flags & (1 << 13)) !== 0;
    const mouseDown = (flags & (1 << 12)) !== 0;
    const mouseMove = (flags & (1 << 11)) !== 0;
    const unload = (flags & (1 << 10)) !== 0;
    const enterFrame = (flags & (1 << 9)) !== 0;
    const load = (flags & (1 << 8)) !== 0;
    const dragOver = (flags & (1 << 7)) !== 0;
    const rollOut = (flags & (1 << 6)) !== 0;
    const rollOver = (flags & (1 << 5)) !== 0;
    const releaseOutside = (flags & (1 << 4)) !== 0;
    const release = (flags & (1 << 3)) !== 0;
    const press = (flags & (1 << 2)) !== 0;
    const initialize = (flags & (1 << 1)) !== 0;
    const data = (flags & (1 << 0)) !== 0;
    let construct = false;
    let keyPress = false;
    let dragOut = false;
    if (extendedEvents) {
        const flags = byteStream.readUint16BE();
        construct = (flags & (1 << 10)) !== 0;
        keyPress = (flags & (1 << 9)) !== 0;
        dragOut = (flags & (1 << 8)) !== 0;
    }
    return {
        keyUp,
        keyDown,
        mouseUp,
        mouseDown,
        mouseMove,
        unload,
        enterFrame,
        load,
        dragOver,
        rollOut,
        rollOver,
        releaseOutside,
        release,
        press,
        initialize,
        data,
        construct,
        keyPress,
        dragOut,
    };
}
exports.parseClipEventFlags = parseClipEventFlags;
function parseClipActions(byteStream, extendedEvents) {
    const events = parseClipEventFlags(byteStream, extendedEvents);
    let actionsSize = byteStream.readUint32LE();
    let keyCode = undefined;
    if (events.keyPress) {
        keyCode = byteStream.readUint8();
        actionsSize = Math.max(actionsSize - 1, 0);
    }
    const actions = avm1_1.parseActionsBlock(byteStream.take(actionsSize));
    return { events, keyCode, actions };
}
exports.parseClipActions = parseClipActions;
function parseFilterList(byteStream) {
    const filterCount = byteStream.readUint8();
    const result = [];
    for (let i = 0; i < filterCount; i++) {
        result.push(parseFilter(byteStream));
    }
    return result;
}
exports.parseFilterList = parseFilterList;
function parseFilter(byteStream) {
    switch (byteStream.readUint8()) {
        case 0:
            return parseDropShadowFilter(byteStream);
        case 1:
            return parseBlurFilter(byteStream);
        case 2:
            return parseGlowFilter(byteStream);
        case 3:
            return parseBevelFilter(byteStream);
        case 4:
            return parseGradientGlowFilter(byteStream);
        case 5:
            return parseConvolutionFilter(byteStream);
        case 6:
            return parseColorMatrixFilter(byteStream);
        case 7:
            return parseGradientBevelFilter(byteStream);
        default:
            throw new incident_1.Incident("UnreachableCode");
    }
}
exports.parseFilter = parseFilter;
function parseBevelFilter(byteStream) {
    const shadowColor = basic_data_types_1.parseStraightSRgba8(byteStream);
    const highlightColor = basic_data_types_1.parseStraightSRgba8(byteStream);
    const blurX = byteStream.readFixed16P16LE();
    const blurY = byteStream.readFixed16P16LE();
    const angle = byteStream.readFixed16P16LE();
    const distance = byteStream.readFixed16P16LE();
    const strength = byteStream.readFixed8P8LE();
    const flags = byteStream.readUint8();
    const inner = (flags & (1 << 7)) !== 0;
    const knockout = (flags & (1 << 6)) !== 0;
    const compositeSource = (flags & (1 << 5)) !== 0;
    const onTop = (flags & (1 << 4)) !== 0;
    const passes = (flags & ((1 << 4) - 1));
    return {
        filter: swf_tree_1.FilterType.Bevel,
        shadowColor,
        highlightColor,
        blurX,
        blurY,
        angle,
        distance,
        strength,
        inner,
        knockout,
        compositeSource,
        onTop,
        passes,
    };
}
exports.parseBevelFilter = parseBevelFilter;
function parseBlurFilter(byteStream) {
    const blurX = byteStream.readFixed16P16LE();
    const blurY = byteStream.readFixed16P16LE();
    const flags = byteStream.readUint8();
    const passes = ((flags & ((1 << 8) - 1)) >>> 3);
    return {
        filter: swf_tree_1.FilterType.Blur,
        blurX,
        blurY,
        passes,
    };
}
exports.parseBlurFilter = parseBlurFilter;
function parseColorMatrixFilter(byteStream) {
    const matrix = [];
    for (let i = 0; i < 20; i++) {
        matrix.push(byteStream.readFloat32BE());
    }
    return {
        filter: swf_tree_1.FilterType.ColorMatrix,
        matrix,
    };
}
exports.parseColorMatrixFilter = parseColorMatrixFilter;
function parseConvolutionFilter(byteStream) {
    const matrixWidth = byteStream.readUint8();
    const matrixHeight = byteStream.readUint8();
    const divisor = byteStream.readFloat32BE();
    const bias = byteStream.readFloat32BE();
    const matrix = [];
    for (let i = 0; i < matrixWidth * matrixHeight; i++) {
        matrix.push(byteStream.readFloat32BE());
    }
    const defaultColor = basic_data_types_1.parseStraightSRgba8(byteStream);
    const flags = byteStream.readUint8();
    const clamp = (flags & (1 << 1)) !== 0;
    const preserveAlpha = (flags & (1 << 0)) !== 0;
    return {
        filter: swf_tree_1.FilterType.Convolution,
        matrixWidth,
        matrixHeight,
        divisor,
        bias,
        matrix,
        defaultColor,
        clamp,
        preserveAlpha,
    };
}
exports.parseConvolutionFilter = parseConvolutionFilter;
function parseDropShadowFilter(byteStream) {
    const color = basic_data_types_1.parseStraightSRgba8(byteStream);
    const blurX = byteStream.readFixed16P16LE();
    const blurY = byteStream.readFixed16P16LE();
    const angle = byteStream.readFixed16P16LE();
    const distance = byteStream.readFixed16P16LE();
    const strength = byteStream.readFixed8P8LE();
    const flags = byteStream.readUint8();
    const inner = (flags & (1 << 7)) !== 0;
    const knockout = (flags & (1 << 6)) !== 0;
    const compositeSource = (flags & (1 << 5)) !== 0;
    const passes = flags & ((1 << 5) - 1);
    return {
        filter: swf_tree_1.FilterType.DropShadow,
        color,
        blurX,
        blurY,
        angle,
        distance,
        strength,
        inner,
        knockout,
        compositeSource,
        passes,
    };
}
exports.parseDropShadowFilter = parseDropShadowFilter;
function parseGlowFilter(byteStream) {
    const color = basic_data_types_1.parseStraightSRgba8(byteStream);
    const blurX = byteStream.readFixed16P16LE();
    const blurY = byteStream.readFixed16P16LE();
    const strength = byteStream.readFixed8P8LE();
    const flags = byteStream.readUint8();
    const inner = (flags & (1 << 7)) !== 0;
    const knockout = (flags & (1 << 6)) !== 0;
    const compositeSource = (flags & (1 << 5)) !== 0;
    const passes = flags & ((1 << 5) - 1);
    return {
        filter: swf_tree_1.FilterType.Glow,
        color,
        blurX,
        blurY,
        strength,
        inner,
        knockout,
        compositeSource,
        passes,
    };
}
exports.parseGlowFilter = parseGlowFilter;
function parseGradientBevelFilter(byteStream) {
    const colorCount = byteStream.readUint8();
    const gradient = [];
    for (let i = 0; i < colorCount; i++) {
        gradient.push({ ratio: 0, color: basic_data_types_1.parseStraightSRgba8(byteStream) });
    }
    for (let i = 0; i < colorCount; i++) {
        gradient[i].ratio = byteStream.readUint8();
    }
    const blurX = byteStream.readFixed16P16LE();
    const blurY = byteStream.readFixed16P16LE();
    const angle = byteStream.readFixed16P16LE();
    const distance = byteStream.readFixed16P16LE();
    const strength = byteStream.readFixed8P8LE();
    const flags = byteStream.readUint8();
    const inner = (flags & (1 << 7)) !== 0;
    const knockout = (flags & (1 << 6)) !== 0;
    const compositeSource = (flags & (1 << 5)) !== 0;
    const onTop = (flags & (1 << 4)) !== 0;
    const passes = (flags & ((1 << 4) - 1));
    return {
        filter: swf_tree_1.FilterType.GradientBevel,
        gradient,
        blurX,
        blurY,
        angle,
        distance,
        strength,
        inner,
        knockout,
        compositeSource,
        onTop,
        passes,
    };
}
exports.parseGradientBevelFilter = parseGradientBevelFilter;
function parseGradientGlowFilter(byteStream) {
    const colorCount = byteStream.readUint8();
    const gradient = [];
    for (let i = 0; i < colorCount; i++) {
        gradient.push({ ratio: 0, color: basic_data_types_1.parseStraightSRgba8(byteStream) });
    }
    for (let i = 0; i < colorCount; i++) {
        gradient[i].ratio = byteStream.readUint8();
    }
    const blurX = byteStream.readFixed16P16LE();
    const blurY = byteStream.readFixed16P16LE();
    const angle = byteStream.readFixed16P16LE();
    const distance = byteStream.readFixed16P16LE();
    const strength = byteStream.readFixed8P8LE();
    const flags = byteStream.readUint8();
    const inner = (flags & (1 << 7)) !== 0;
    const knockout = (flags & (1 << 6)) !== 0;
    const compositeSource = (flags & (1 << 5)) !== 0;
    const onTop = (flags & (1 << 4)) !== 0;
    const passes = (flags & ((1 << 4) - 1));
    return {
        filter: swf_tree_1.FilterType.GradientGlow,
        gradient,
        blurX,
        blurY,
        angle,
        distance,
        strength,
        inner,
        knockout,
        compositeSource,
        onTop,
        passes,
    };
}
exports.parseGradientGlowFilter = parseGradientGlowFilter;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9wYXJzZXJzL2Rpc3BsYXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBa0M7QUFFbEMsdUNBWWtCO0FBRWxCLGlDQUF5QztBQUN6Qyx5REFBdUQ7QUFFdkQsd0JBQStCLFVBQXNCO0lBQ25ELE1BQU0sQ0FBQyxDQUFDLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDL0IsS0FBSyxDQUFDLENBQUM7UUFDUCxLQUFLLENBQUM7WUFDSixNQUFNLENBQUMsb0JBQVMsQ0FBQyxNQUFNLENBQUM7UUFDMUIsS0FBSyxDQUFDO1lBQ0osTUFBTSxDQUFDLG9CQUFTLENBQUMsS0FBSyxDQUFDO1FBQ3pCLEtBQUssQ0FBQztZQUNKLE1BQU0sQ0FBQyxvQkFBUyxDQUFDLFFBQVEsQ0FBQztRQUM1QixLQUFLLENBQUM7WUFDSixNQUFNLENBQUMsb0JBQVMsQ0FBQyxNQUFNLENBQUM7UUFDMUIsS0FBSyxDQUFDO1lBQ0osTUFBTSxDQUFDLG9CQUFTLENBQUMsT0FBTyxDQUFDO1FBQzNCLEtBQUssQ0FBQztZQUNKLE1BQU0sQ0FBQyxvQkFBUyxDQUFDLE1BQU0sQ0FBQztRQUMxQixLQUFLLENBQUM7WUFDSixNQUFNLENBQUMsb0JBQVMsQ0FBQyxVQUFVLENBQUM7UUFDOUIsS0FBSyxDQUFDO1lBQ0osTUFBTSxDQUFDLG9CQUFTLENBQUMsR0FBRyxDQUFDO1FBQ3ZCLEtBQUssQ0FBQztZQUNKLE1BQU0sQ0FBQyxvQkFBUyxDQUFDLFFBQVEsQ0FBQztRQUM1QixLQUFLLEVBQUU7WUFDTCxNQUFNLENBQUMsb0JBQVMsQ0FBQyxNQUFNLENBQUM7UUFDMUIsS0FBSyxFQUFFO1lBQ0wsTUFBTSxDQUFDLG9CQUFTLENBQUMsS0FBSyxDQUFDO1FBQ3pCLEtBQUssRUFBRTtZQUNMLE1BQU0sQ0FBQyxvQkFBUyxDQUFDLEtBQUssQ0FBQztRQUN6QixLQUFLLEVBQUU7WUFDTCxNQUFNLENBQUMsb0JBQVMsQ0FBQyxPQUFPLENBQUM7UUFDM0IsS0FBSyxFQUFFO1lBQ0wsTUFBTSxDQUFDLG9CQUFTLENBQUMsU0FBUyxDQUFDO1FBQzdCO1lBQ0UsTUFBTSxJQUFJLG1CQUFRLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUMxQyxDQUFDO0FBQ0gsQ0FBQztBQWxDRCx3Q0FrQ0M7QUFFRCxnQ0FBdUMsVUFBc0IsRUFBRSxjQUF1QjtJQUNwRixVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ25CLGdEQUFnRDtJQUNoRCxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ25CLE1BQU0sTUFBTSxHQUFrQixFQUFFLENBQUM7SUFDakMsT0FBTyxJQUFJLEVBQUUsQ0FBQztRQUNaLE1BQU0sUUFBUSxHQUFhLFVBQVUsQ0FBQyxPQUFPLENBQUM7UUFDOUMsTUFBTSxJQUFJLEdBQVcsY0FBYyxHQUFHLFVBQVUsQ0FBQyxZQUFZLEVBQUUsR0FBRyxVQUFVLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDNUYsRUFBRSxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDZixLQUFLLENBQUM7UUFDUixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixVQUFVLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQztRQUNoQyxDQUFDO1FBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLEVBQUUsY0FBYyxDQUFDLENBQUMsQ0FBQztJQUM1RCxDQUFDO0lBRUQsTUFBTSxDQUFDLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBakJELHdEQWlCQztBQUVELDZCQUFvQyxVQUFzQixFQUFFLGNBQXVCO0lBQ2pGLE1BQU0sS0FBSyxHQUFXLFVBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNoRCxNQUFNLEtBQUssR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqRCxNQUFNLE9BQU8sR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuRCxNQUFNLE9BQU8sR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuRCxNQUFNLFNBQVMsR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNyRCxNQUFNLFNBQVMsR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNyRCxNQUFNLE1BQU0sR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsRCxNQUFNLFVBQVUsR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNyRCxNQUFNLElBQUksR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQyxNQUFNLFFBQVEsR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuRCxNQUFNLE9BQU8sR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsRCxNQUFNLFFBQVEsR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuRCxNQUFNLGNBQWMsR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6RCxNQUFNLE9BQU8sR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsRCxNQUFNLEtBQUssR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoRCxNQUFNLFVBQVUsR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNyRCxNQUFNLElBQUksR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQyxJQUFJLFNBQVMsR0FBWSxLQUFLLENBQUM7SUFDL0IsSUFBSSxRQUFRLEdBQVksS0FBSyxDQUFDO0lBQzlCLElBQUksT0FBTyxHQUFZLEtBQUssQ0FBQztJQUM3QixFQUFFLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO1FBQ25CLE1BQU0sS0FBSyxHQUFXLFVBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUNoRCxTQUFTLEdBQUcsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdEMsUUFBUSxHQUFHLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sR0FBRyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUQsTUFBTSxDQUFDO1FBQ0wsS0FBSztRQUNMLE9BQU87UUFDUCxPQUFPO1FBQ1AsU0FBUztRQUNULFNBQVM7UUFDVCxNQUFNO1FBQ04sVUFBVTtRQUNWLElBQUk7UUFDSixRQUFRO1FBQ1IsT0FBTztRQUNQLFFBQVE7UUFDUixjQUFjO1FBQ2QsT0FBTztRQUNQLEtBQUs7UUFDTCxVQUFVO1FBQ1YsSUFBSTtRQUNKLFNBQVM7UUFDVCxRQUFRO1FBQ1IsT0FBTztLQUNSLENBQUM7QUFDSixDQUFDO0FBakRELGtEQWlEQztBQUVELDBCQUFpQyxVQUFzQixFQUFFLGNBQXVCO0lBQzlFLE1BQU0sTUFBTSxHQUFtQixtQkFBbUIsQ0FBQyxVQUFVLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDL0UsSUFBSSxXQUFXLEdBQWEsVUFBVSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RELElBQUksT0FBTyxHQUFzQixTQUFTLENBQUM7SUFDM0MsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDcEIsT0FBTyxHQUFHLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNqQyxXQUFXLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFDRCxNQUFNLE9BQU8sR0FBa0Isd0JBQWlCLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0lBQy9FLE1BQU0sQ0FBQyxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUM7QUFDcEMsQ0FBQztBQVZELDRDQVVDO0FBRUQseUJBQWdDLFVBQXNCO0lBQ3BELE1BQU0sV0FBVyxHQUFhLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNyRCxNQUFNLE1BQU0sR0FBYSxFQUFFLENBQUM7SUFDNUIsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQVcsQ0FBQyxFQUFFLENBQUMsR0FBRyxXQUFXLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUM3QyxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFDRCxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFQRCwwQ0FPQztBQUVELHFCQUE0QixVQUFzQjtJQUNoRCxNQUFNLENBQUMsQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQy9CLEtBQUssQ0FBQztZQUNKLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUMzQyxLQUFLLENBQUM7WUFDSixNQUFNLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3JDLEtBQUssQ0FBQztZQUNKLE1BQU0sQ0FBQyxlQUFlLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDckMsS0FBSyxDQUFDO1lBQ0osTUFBTSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3RDLEtBQUssQ0FBQztZQUNKLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUM3QyxLQUFLLENBQUM7WUFDSixNQUFNLENBQUMsc0JBQXNCLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDNUMsS0FBSyxDQUFDO1lBQ0osTUFBTSxDQUFDLHNCQUFzQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzVDLEtBQUssQ0FBQztZQUNKLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUM5QztZQUNFLE1BQU0sSUFBSSxtQkFBUSxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDMUMsQ0FBQztBQUNILENBQUM7QUFyQkQsa0NBcUJDO0FBRUQsMEJBQWlDLFVBQXNCO0lBQ3JELE1BQU0sV0FBVyxHQUFtQixzQ0FBbUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNwRSxNQUFNLGNBQWMsR0FBbUIsc0NBQW1CLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDdkUsTUFBTSxLQUFLLEdBQWUsVUFBVSxDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFDeEQsTUFBTSxLQUFLLEdBQWUsVUFBVSxDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFDeEQsTUFBTSxLQUFLLEdBQWUsVUFBVSxDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFDeEQsTUFBTSxRQUFRLEdBQWUsVUFBVSxDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFDM0QsTUFBTSxRQUFRLEdBQWEsVUFBVSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3ZELE1BQU0sS0FBSyxHQUFVLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUM1QyxNQUFNLEtBQUssR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoRCxNQUFNLFFBQVEsR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuRCxNQUFNLGVBQWUsR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxRCxNQUFNLEtBQUssR0FBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoRCxNQUFNLE1BQU0sR0FBa0IsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZELE1BQU0sQ0FBQztRQUNMLE1BQU0sRUFBRSxxQkFBVSxDQUFDLEtBQUs7UUFDeEIsV0FBVztRQUNYLGNBQWM7UUFDZCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxRQUFRO1FBQ1IsUUFBUTtRQUNSLEtBQUs7UUFDTCxRQUFRO1FBQ1IsZUFBZTtRQUNmLEtBQUs7UUFDTCxNQUFNO0tBQ1AsQ0FBQztBQUNKLENBQUM7QUE3QkQsNENBNkJDO0FBRUQseUJBQWdDLFVBQXNCO0lBQ3BELE1BQU0sS0FBSyxHQUFlLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQ3hELE1BQU0sS0FBSyxHQUFlLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQ3hELE1BQU0sS0FBSyxHQUFVLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUM1QyxNQUFNLE1BQU0sR0FBa0IsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDL0QsTUFBTSxDQUFDO1FBQ0wsTUFBTSxFQUFFLHFCQUFVLENBQUMsSUFBSTtRQUN2QixLQUFLO1FBQ0wsS0FBSztRQUNMLE1BQU07S0FDUCxDQUFDO0FBQ0osQ0FBQztBQVhELDBDQVdDO0FBRUQsZ0NBQXVDLFVBQXNCO0lBQzNELE1BQU0sTUFBTSxHQUFjLEVBQUUsQ0FBQztJQUM3QixHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUNELE1BQU0sQ0FBQztRQUNMLE1BQU0sRUFBRSxxQkFBVSxDQUFDLFdBQVc7UUFDOUIsTUFBTTtLQUNQLENBQUM7QUFDSixDQUFDO0FBVEQsd0RBU0M7QUFFRCxnQ0FBdUMsVUFBc0I7SUFDM0QsTUFBTSxXQUFXLEdBQWEsVUFBVSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ3JELE1BQU0sWUFBWSxHQUFhLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUN0RCxNQUFNLE9BQU8sR0FBWSxVQUFVLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDcEQsTUFBTSxJQUFJLEdBQVksVUFBVSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ2pELE1BQU0sTUFBTSxHQUFjLEVBQUUsQ0FBQztJQUM3QixHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFdBQVcsR0FBRyxZQUFZLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUM1RCxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFDRCxNQUFNLFlBQVksR0FBbUIsc0NBQW1CLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDckUsTUFBTSxLQUFLLEdBQVUsVUFBVSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQzVDLE1BQU0sS0FBSyxHQUFZLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hELE1BQU0sYUFBYSxHQUFZLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hELE1BQU0sQ0FBQztRQUNMLE1BQU0sRUFBRSxxQkFBVSxDQUFDLFdBQVc7UUFDOUIsV0FBVztRQUNYLFlBQVk7UUFDWixPQUFPO1FBQ1AsSUFBSTtRQUNKLE1BQU07UUFDTixZQUFZO1FBQ1osS0FBSztRQUNMLGFBQWE7S0FDZCxDQUFDO0FBQ0osQ0FBQztBQXhCRCx3REF3QkM7QUFFRCwrQkFBc0MsVUFBc0I7SUFDMUQsTUFBTSxLQUFLLEdBQW1CLHNDQUFtQixDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzlELE1BQU0sS0FBSyxHQUFlLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQ3hELE1BQU0sS0FBSyxHQUFlLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQ3hELE1BQU0sS0FBSyxHQUFlLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQ3hELE1BQU0sUUFBUSxHQUFlLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQzNELE1BQU0sUUFBUSxHQUFhLFVBQVUsQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUN2RCxNQUFNLEtBQUssR0FBVSxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDNUMsTUFBTSxLQUFLLEdBQVksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEQsTUFBTSxRQUFRLEdBQVksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbkQsTUFBTSxlQUFlLEdBQVksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDMUQsTUFBTSxNQUFNLEdBQVUsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDN0MsTUFBTSxDQUFDO1FBQ0wsTUFBTSxFQUFFLHFCQUFVLENBQUMsVUFBVTtRQUM3QixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsUUFBUTtRQUNSLFFBQVE7UUFDUixLQUFLO1FBQ0wsUUFBUTtRQUNSLGVBQWU7UUFDZixNQUFNO0tBQ1AsQ0FBQztBQUNKLENBQUM7QUF6QkQsc0RBeUJDO0FBRUQseUJBQWdDLFVBQXNCO0lBQ3BELE1BQU0sS0FBSyxHQUFtQixzQ0FBbUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUM5RCxNQUFNLEtBQUssR0FBZSxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUN4RCxNQUFNLEtBQUssR0FBZSxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUN4RCxNQUFNLFFBQVEsR0FBYSxVQUFVLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDdkQsTUFBTSxLQUFLLEdBQVUsVUFBVSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQzVDLE1BQU0sS0FBSyxHQUFZLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hELE1BQU0sUUFBUSxHQUFZLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25ELE1BQU0sZUFBZSxHQUFZLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFELE1BQU0sTUFBTSxHQUFVLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzdDLE1BQU0sQ0FBQztRQUNMLE1BQU0sRUFBRSxxQkFBVSxDQUFDLElBQUk7UUFDdkIsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsUUFBUTtRQUNSLEtBQUs7UUFDTCxRQUFRO1FBQ1IsZUFBZTtRQUNmLE1BQU07S0FDUCxDQUFDO0FBQ0osQ0FBQztBQXJCRCwwQ0FxQkM7QUFFRCxrQ0FBeUMsVUFBc0I7SUFDN0QsTUFBTSxVQUFVLEdBQWEsVUFBVSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ3BELE1BQU0sUUFBUSxHQUFnQixFQUFFLENBQUM7SUFDakMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQVcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUM1QyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsc0NBQW1CLENBQUMsVUFBVSxDQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQ3BFLENBQUM7SUFDRCxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFVBQVUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1FBQzVDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsVUFBVSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQzdDLENBQUM7SUFDRCxNQUFNLEtBQUssR0FBZSxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUN4RCxNQUFNLEtBQUssR0FBZSxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUN4RCxNQUFNLEtBQUssR0FBZSxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUN4RCxNQUFNLFFBQVEsR0FBZSxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUMzRCxNQUFNLFFBQVEsR0FBYSxVQUFVLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDdkQsTUFBTSxLQUFLLEdBQVUsVUFBVSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQzVDLE1BQU0sS0FBSyxHQUFZLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hELE1BQU0sUUFBUSxHQUFZLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25ELE1BQU0sZUFBZSxHQUFZLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFELE1BQU0sS0FBSyxHQUFZLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hELE1BQU0sTUFBTSxHQUFrQixDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkQsTUFBTSxDQUFDO1FBQ0wsTUFBTSxFQUFFLHFCQUFVLENBQUMsYUFBYTtRQUNoQyxRQUFRO1FBQ1IsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsUUFBUTtRQUNSLFFBQVE7UUFDUixLQUFLO1FBQ0wsUUFBUTtRQUNSLGVBQWU7UUFDZixLQUFLO1FBQ0wsTUFBTTtLQUNQLENBQUM7QUFDSixDQUFDO0FBbENELDREQWtDQztBQUVELGlDQUF3QyxVQUFzQjtJQUM1RCxNQUFNLFVBQVUsR0FBYSxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDcEQsTUFBTSxRQUFRLEdBQWdCLEVBQUUsQ0FBQztJQUNqQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFVBQVUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1FBQzVDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxzQ0FBbUIsQ0FBQyxVQUFVLENBQUMsRUFBQyxDQUFDLENBQUM7SUFDcEUsQ0FBQztJQUNELEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFXLENBQUMsRUFBRSxDQUFDLEdBQUcsVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7UUFDNUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDN0MsQ0FBQztJQUNELE1BQU0sS0FBSyxHQUFlLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQ3hELE1BQU0sS0FBSyxHQUFlLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQ3hELE1BQU0sS0FBSyxHQUFlLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQ3hELE1BQU0sUUFBUSxHQUFlLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQzNELE1BQU0sUUFBUSxHQUFhLFVBQVUsQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUN2RCxNQUFNLEtBQUssR0FBVSxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDNUMsTUFBTSxLQUFLLEdBQVksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEQsTUFBTSxRQUFRLEdBQVksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbkQsTUFBTSxlQUFlLEdBQVksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDMUQsTUFBTSxLQUFLLEdBQVksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEQsTUFBTSxNQUFNLEdBQWtCLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2RCxNQUFNLENBQUM7UUFDTCxNQUFNLEVBQUUscUJBQVUsQ0FBQyxZQUFZO1FBQy9CLFFBQVE7UUFDUixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxRQUFRO1FBQ1IsUUFBUTtRQUNSLEtBQUs7UUFDTCxRQUFRO1FBQ1IsZUFBZTtRQUNmLEtBQUs7UUFDTCxNQUFNO0tBQ1AsQ0FBQztBQUNKLENBQUM7QUFsQ0QsMERBa0NDIiwiZmlsZSI6ImxpYi9wYXJzZXJzL2Rpc3BsYXkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luY2lkZW50fSBmcm9tIFwiaW5jaWRlbnRcIjtcbmltcG9ydCB7RmxvYXQzMiwgVWludDE2LCBVaW50MzIsIFVpbnQ0LCBVaW50NSwgVWludDgsIFVpbnRTaXplfSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7XG4gIGF2bTEsXG4gIEJsZW5kTW9kZSxcbiAgQ2xpcEFjdGlvbnMsXG4gIENsaXBFdmVudEZsYWdzLFxuICBDb2xvclN0b3AsXG4gIEZpbHRlcixcbiAgZmlsdGVycyxcbiAgRmlsdGVyVHlwZSxcbiAgRml4ZWQxNlAxNixcbiAgRml4ZWQ4UDgsXG4gIFN0cmFpZ2h0U1JnYmE4LFxufSBmcm9tIFwic3dmLXRyZWVcIjtcbmltcG9ydCB7Qnl0ZVN0cmVhbX0gZnJvbSBcIi4uL3N0cmVhbVwiO1xuaW1wb3J0IHtwYXJzZUFjdGlvbnNCbG9ja30gZnJvbSBcIi4vYXZtMVwiO1xuaW1wb3J0IHtwYXJzZVN0cmFpZ2h0U1JnYmE4fSBmcm9tIFwiLi9iYXNpYy1kYXRhLXR5cGVzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUJsZW5kTW9kZShieXRlU3RyZWFtOiBCeXRlU3RyZWFtKTogQmxlbmRNb2RlIHtcbiAgc3dpdGNoIChieXRlU3RyZWFtLnJlYWRVaW50OCgpKSB7XG4gICAgY2FzZSAwOlxuICAgIGNhc2UgMTpcbiAgICAgIHJldHVybiBCbGVuZE1vZGUuTm9ybWFsO1xuICAgIGNhc2UgMjpcbiAgICAgIHJldHVybiBCbGVuZE1vZGUuTGF5ZXI7XG4gICAgY2FzZSAzOlxuICAgICAgcmV0dXJuIEJsZW5kTW9kZS5NdWx0aXBseTtcbiAgICBjYXNlIDQ6XG4gICAgICByZXR1cm4gQmxlbmRNb2RlLlNjcmVlbjtcbiAgICBjYXNlIDU6XG4gICAgICByZXR1cm4gQmxlbmRNb2RlLkxpZ2h0ZW47XG4gICAgY2FzZSA2OlxuICAgICAgcmV0dXJuIEJsZW5kTW9kZS5EYXJrZW47XG4gICAgY2FzZSA3OlxuICAgICAgcmV0dXJuIEJsZW5kTW9kZS5EaWZmZXJlbmNlO1xuICAgIGNhc2UgODpcbiAgICAgIHJldHVybiBCbGVuZE1vZGUuQWRkO1xuICAgIGNhc2UgOTpcbiAgICAgIHJldHVybiBCbGVuZE1vZGUuU3VidHJhY3Q7XG4gICAgY2FzZSAxMDpcbiAgICAgIHJldHVybiBCbGVuZE1vZGUuSW52ZXJ0O1xuICAgIGNhc2UgMTE6XG4gICAgICByZXR1cm4gQmxlbmRNb2RlLkFscGhhO1xuICAgIGNhc2UgMTI6XG4gICAgICByZXR1cm4gQmxlbmRNb2RlLkVyYXNlO1xuICAgIGNhc2UgMTM6XG4gICAgICByZXR1cm4gQmxlbmRNb2RlLk92ZXJsYXk7XG4gICAgY2FzZSAxNDpcbiAgICAgIHJldHVybiBCbGVuZE1vZGUuSGFyZGxpZ2h0O1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgSW5jaWRlbnQoXCJVbnJlYWNoYWJsZUNvZGVcIik7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ2xpcEFjdGlvbnNTdHJpbmcoYnl0ZVN0cmVhbTogQnl0ZVN0cmVhbSwgZXh0ZW5kZWRFdmVudHM6IGJvb2xlYW4pOiBDbGlwQWN0aW9uc1tdIHtcbiAgYnl0ZVN0cmVhbS5za2lwKDIpO1xuICAvLyBXZSBza2lwIHRoZSA0IGJ5dGVzIG9mIHRoZSBsaXN0IG9mIGFsbCBldmVudHNcbiAgYnl0ZVN0cmVhbS5za2lwKDQpO1xuICBjb25zdCByZXN1bHQ6IENsaXBBY3Rpb25zW10gPSBbXTtcbiAgd2hpbGUgKHRydWUpIHtcbiAgICBjb25zdCBzYXZlZFBvczogVWludFNpemUgPSBieXRlU3RyZWFtLmJ5dGVQb3M7XG4gICAgY29uc3QgcGVlazogVWludDMyID0gZXh0ZW5kZWRFdmVudHMgPyBieXRlU3RyZWFtLnJlYWRVaW50MzJCRSgpIDogYnl0ZVN0cmVhbS5yZWFkVWludDMyQkUoKTtcbiAgICBpZiAocGVlayA9PT0gMCkge1xuICAgICAgYnJlYWs7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJ5dGVTdHJlYW0uYnl0ZVBvcyA9IHNhdmVkUG9zO1xuICAgIH1cbiAgICByZXN1bHQucHVzaChwYXJzZUNsaXBBY3Rpb25zKGJ5dGVTdHJlYW0sIGV4dGVuZGVkRXZlbnRzKSk7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDbGlwRXZlbnRGbGFncyhieXRlU3RyZWFtOiBCeXRlU3RyZWFtLCBleHRlbmRlZEV2ZW50czogYm9vbGVhbik6IENsaXBFdmVudEZsYWdzIHtcbiAgY29uc3QgZmxhZ3M6IFVpbnQxNiA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQxNkJFKCk7XG4gIGNvbnN0IGtleVVwOiBib29sZWFuID0gKGZsYWdzICYgKDEgPDwgMTUpKSAhPT0gMDtcbiAgY29uc3Qga2V5RG93bjogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDE0KSkgIT09IDA7XG4gIGNvbnN0IG1vdXNlVXA6IGJvb2xlYW4gPSAoZmxhZ3MgJiAoMSA8PCAxMykpICE9PSAwO1xuICBjb25zdCBtb3VzZURvd246IGJvb2xlYW4gPSAoZmxhZ3MgJiAoMSA8PCAxMikpICE9PSAwO1xuICBjb25zdCBtb3VzZU1vdmU6IGJvb2xlYW4gPSAoZmxhZ3MgJiAoMSA8PCAxMSkpICE9PSAwO1xuICBjb25zdCB1bmxvYWQ6IGJvb2xlYW4gPSAoZmxhZ3MgJiAoMSA8PCAxMCkpICE9PSAwO1xuICBjb25zdCBlbnRlckZyYW1lOiBib29sZWFuID0gKGZsYWdzICYgKDEgPDwgOSkpICE9PSAwO1xuICBjb25zdCBsb2FkOiBib29sZWFuID0gKGZsYWdzICYgKDEgPDwgOCkpICE9PSAwO1xuICBjb25zdCBkcmFnT3ZlcjogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDcpKSAhPT0gMDtcbiAgY29uc3Qgcm9sbE91dDogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDYpKSAhPT0gMDtcbiAgY29uc3Qgcm9sbE92ZXI6IGJvb2xlYW4gPSAoZmxhZ3MgJiAoMSA8PCA1KSkgIT09IDA7XG4gIGNvbnN0IHJlbGVhc2VPdXRzaWRlOiBib29sZWFuID0gKGZsYWdzICYgKDEgPDwgNCkpICE9PSAwO1xuICBjb25zdCByZWxlYXNlOiBib29sZWFuID0gKGZsYWdzICYgKDEgPDwgMykpICE9PSAwO1xuICBjb25zdCBwcmVzczogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDIpKSAhPT0gMDtcbiAgY29uc3QgaW5pdGlhbGl6ZTogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDEpKSAhPT0gMDtcbiAgY29uc3QgZGF0YTogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDApKSAhPT0gMDtcbiAgbGV0IGNvbnN0cnVjdDogYm9vbGVhbiA9IGZhbHNlO1xuICBsZXQga2V5UHJlc3M6IGJvb2xlYW4gPSBmYWxzZTtcbiAgbGV0IGRyYWdPdXQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgaWYgKGV4dGVuZGVkRXZlbnRzKSB7XG4gICAgY29uc3QgZmxhZ3M6IFVpbnQxNiA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQxNkJFKCk7XG4gICAgY29uc3RydWN0ID0gKGZsYWdzICYgKDEgPDwgMTApKSAhPT0gMDtcbiAgICBrZXlQcmVzcyA9IChmbGFncyAmICgxIDw8IDkpKSAhPT0gMDtcbiAgICBkcmFnT3V0ID0gKGZsYWdzICYgKDEgPDwgOCkpICE9PSAwO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBrZXlVcCxcbiAgICBrZXlEb3duLFxuICAgIG1vdXNlVXAsXG4gICAgbW91c2VEb3duLFxuICAgIG1vdXNlTW92ZSxcbiAgICB1bmxvYWQsXG4gICAgZW50ZXJGcmFtZSxcbiAgICBsb2FkLFxuICAgIGRyYWdPdmVyLFxuICAgIHJvbGxPdXQsXG4gICAgcm9sbE92ZXIsXG4gICAgcmVsZWFzZU91dHNpZGUsXG4gICAgcmVsZWFzZSxcbiAgICBwcmVzcyxcbiAgICBpbml0aWFsaXplLFxuICAgIGRhdGEsXG4gICAgY29uc3RydWN0LFxuICAgIGtleVByZXNzLFxuICAgIGRyYWdPdXQsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNsaXBBY3Rpb25zKGJ5dGVTdHJlYW06IEJ5dGVTdHJlYW0sIGV4dGVuZGVkRXZlbnRzOiBib29sZWFuKTogQ2xpcEFjdGlvbnMge1xuICBjb25zdCBldmVudHM6IENsaXBFdmVudEZsYWdzID0gcGFyc2VDbGlwRXZlbnRGbGFncyhieXRlU3RyZWFtLCBleHRlbmRlZEV2ZW50cyk7XG4gIGxldCBhY3Rpb25zU2l6ZTogVWludFNpemUgPSBieXRlU3RyZWFtLnJlYWRVaW50MzJMRSgpO1xuICBsZXQga2V5Q29kZTogVWludDggfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG4gIGlmIChldmVudHMua2V5UHJlc3MpIHtcbiAgICBrZXlDb2RlID0gYnl0ZVN0cmVhbS5yZWFkVWludDgoKTtcbiAgICBhY3Rpb25zU2l6ZSA9IE1hdGgubWF4KGFjdGlvbnNTaXplIC0gMSwgMCk7XG4gIH1cbiAgY29uc3QgYWN0aW9uczogYXZtMS5BY3Rpb25bXSA9IHBhcnNlQWN0aW9uc0Jsb2NrKGJ5dGVTdHJlYW0udGFrZShhY3Rpb25zU2l6ZSkpO1xuICByZXR1cm4ge2V2ZW50cywga2V5Q29kZSwgYWN0aW9uc307XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUZpbHRlckxpc3QoYnl0ZVN0cmVhbTogQnl0ZVN0cmVhbSk6IEZpbHRlcltdIHtcbiAgY29uc3QgZmlsdGVyQ291bnQ6IFVpbnRTaXplID0gYnl0ZVN0cmVhbS5yZWFkVWludDgoKTtcbiAgY29uc3QgcmVzdWx0OiBGaWx0ZXJbXSA9IFtdO1xuICBmb3IgKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgZmlsdGVyQ291bnQ7IGkrKykge1xuICAgIHJlc3VsdC5wdXNoKHBhcnNlRmlsdGVyKGJ5dGVTdHJlYW0pKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VGaWx0ZXIoYnl0ZVN0cmVhbTogQnl0ZVN0cmVhbSk6IEZpbHRlciB7XG4gIHN3aXRjaCAoYnl0ZVN0cmVhbS5yZWFkVWludDgoKSkge1xuICAgIGNhc2UgMDpcbiAgICAgIHJldHVybiBwYXJzZURyb3BTaGFkb3dGaWx0ZXIoYnl0ZVN0cmVhbSk7XG4gICAgY2FzZSAxOlxuICAgICAgcmV0dXJuIHBhcnNlQmx1ckZpbHRlcihieXRlU3RyZWFtKTtcbiAgICBjYXNlIDI6XG4gICAgICByZXR1cm4gcGFyc2VHbG93RmlsdGVyKGJ5dGVTdHJlYW0pO1xuICAgIGNhc2UgMzpcbiAgICAgIHJldHVybiBwYXJzZUJldmVsRmlsdGVyKGJ5dGVTdHJlYW0pO1xuICAgIGNhc2UgNDpcbiAgICAgIHJldHVybiBwYXJzZUdyYWRpZW50R2xvd0ZpbHRlcihieXRlU3RyZWFtKTtcbiAgICBjYXNlIDU6XG4gICAgICByZXR1cm4gcGFyc2VDb252b2x1dGlvbkZpbHRlcihieXRlU3RyZWFtKTtcbiAgICBjYXNlIDY6XG4gICAgICByZXR1cm4gcGFyc2VDb2xvck1hdHJpeEZpbHRlcihieXRlU3RyZWFtKTtcbiAgICBjYXNlIDc6XG4gICAgICByZXR1cm4gcGFyc2VHcmFkaWVudEJldmVsRmlsdGVyKGJ5dGVTdHJlYW0pO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgSW5jaWRlbnQoXCJVbnJlYWNoYWJsZUNvZGVcIik7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQmV2ZWxGaWx0ZXIoYnl0ZVN0cmVhbTogQnl0ZVN0cmVhbSk6IGZpbHRlcnMuQmV2ZWwge1xuICBjb25zdCBzaGFkb3dDb2xvcjogU3RyYWlnaHRTUmdiYTggPSBwYXJzZVN0cmFpZ2h0U1JnYmE4KGJ5dGVTdHJlYW0pO1xuICBjb25zdCBoaWdobGlnaHRDb2xvcjogU3RyYWlnaHRTUmdiYTggPSBwYXJzZVN0cmFpZ2h0U1JnYmE4KGJ5dGVTdHJlYW0pO1xuICBjb25zdCBibHVyWDogRml4ZWQxNlAxNiA9IGJ5dGVTdHJlYW0ucmVhZEZpeGVkMTZQMTZMRSgpO1xuICBjb25zdCBibHVyWTogRml4ZWQxNlAxNiA9IGJ5dGVTdHJlYW0ucmVhZEZpeGVkMTZQMTZMRSgpO1xuICBjb25zdCBhbmdsZTogRml4ZWQxNlAxNiA9IGJ5dGVTdHJlYW0ucmVhZEZpeGVkMTZQMTZMRSgpO1xuICBjb25zdCBkaXN0YW5jZTogRml4ZWQxNlAxNiA9IGJ5dGVTdHJlYW0ucmVhZEZpeGVkMTZQMTZMRSgpO1xuICBjb25zdCBzdHJlbmd0aDogRml4ZWQ4UDggPSBieXRlU3RyZWFtLnJlYWRGaXhlZDhQOExFKCk7XG4gIGNvbnN0IGZsYWdzOiBVaW50OCA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQ4KCk7XG4gIGNvbnN0IGlubmVyOiBib29sZWFuID0gKGZsYWdzICYgKDEgPDwgNykpICE9PSAwO1xuICBjb25zdCBrbm9ja291dDogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDYpKSAhPT0gMDtcbiAgY29uc3QgY29tcG9zaXRlU291cmNlOiBib29sZWFuID0gKGZsYWdzICYgKDEgPDwgNSkpICE9PSAwO1xuICBjb25zdCBvblRvcDogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDQpKSAhPT0gMDtcbiAgY29uc3QgcGFzc2VzOiBVaW50NCA9IDxVaW50ND4gKGZsYWdzICYgKCgxIDw8IDQpIC0gMSkpO1xuICByZXR1cm4ge1xuICAgIGZpbHRlcjogRmlsdGVyVHlwZS5CZXZlbCxcbiAgICBzaGFkb3dDb2xvcixcbiAgICBoaWdobGlnaHRDb2xvcixcbiAgICBibHVyWCxcbiAgICBibHVyWSxcbiAgICBhbmdsZSxcbiAgICBkaXN0YW5jZSxcbiAgICBzdHJlbmd0aCxcbiAgICBpbm5lcixcbiAgICBrbm9ja291dCxcbiAgICBjb21wb3NpdGVTb3VyY2UsXG4gICAgb25Ub3AsXG4gICAgcGFzc2VzLFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VCbHVyRmlsdGVyKGJ5dGVTdHJlYW06IEJ5dGVTdHJlYW0pOiBmaWx0ZXJzLkJsdXIge1xuICBjb25zdCBibHVyWDogRml4ZWQxNlAxNiA9IGJ5dGVTdHJlYW0ucmVhZEZpeGVkMTZQMTZMRSgpO1xuICBjb25zdCBibHVyWTogRml4ZWQxNlAxNiA9IGJ5dGVTdHJlYW0ucmVhZEZpeGVkMTZQMTZMRSgpO1xuICBjb25zdCBmbGFnczogVWludDggPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuICBjb25zdCBwYXNzZXM6IFVpbnQ1ID0gPFVpbnQ1PiAoKGZsYWdzICYgKCgxIDw8IDgpIC0gMSkpID4+PiAzKTtcbiAgcmV0dXJuIHtcbiAgICBmaWx0ZXI6IEZpbHRlclR5cGUuQmx1cixcbiAgICBibHVyWCxcbiAgICBibHVyWSxcbiAgICBwYXNzZXMsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNvbG9yTWF0cml4RmlsdGVyKGJ5dGVTdHJlYW06IEJ5dGVTdHJlYW0pOiBmaWx0ZXJzLkNvbG9yTWF0cml4IHtcbiAgY29uc3QgbWF0cml4OiBGbG9hdDMyW10gPSBbXTtcbiAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IDIwOyBpKyspIHtcbiAgICBtYXRyaXgucHVzaChieXRlU3RyZWFtLnJlYWRGbG9hdDMyQkUoKSk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBmaWx0ZXI6IEZpbHRlclR5cGUuQ29sb3JNYXRyaXgsXG4gICAgbWF0cml4LFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDb252b2x1dGlvbkZpbHRlcihieXRlU3RyZWFtOiBCeXRlU3RyZWFtKTogZmlsdGVycy5Db252b2x1dGlvbiB7XG4gIGNvbnN0IG1hdHJpeFdpZHRoOiBVaW50U2l6ZSA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQ4KCk7XG4gIGNvbnN0IG1hdHJpeEhlaWdodDogVWludFNpemUgPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuICBjb25zdCBkaXZpc29yOiBGbG9hdDMyID0gYnl0ZVN0cmVhbS5yZWFkRmxvYXQzMkJFKCk7XG4gIGNvbnN0IGJpYXM6IEZsb2F0MzIgPSBieXRlU3RyZWFtLnJlYWRGbG9hdDMyQkUoKTtcbiAgY29uc3QgbWF0cml4OiBGbG9hdDMyW10gPSBbXTtcbiAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IG1hdHJpeFdpZHRoICogbWF0cml4SGVpZ2h0OyBpKyspIHtcbiAgICBtYXRyaXgucHVzaChieXRlU3RyZWFtLnJlYWRGbG9hdDMyQkUoKSk7XG4gIH1cbiAgY29uc3QgZGVmYXVsdENvbG9yOiBTdHJhaWdodFNSZ2JhOCA9IHBhcnNlU3RyYWlnaHRTUmdiYTgoYnl0ZVN0cmVhbSk7XG4gIGNvbnN0IGZsYWdzOiBVaW50OCA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQ4KCk7XG4gIGNvbnN0IGNsYW1wOiBib29sZWFuID0gKGZsYWdzICYgKDEgPDwgMSkpICE9PSAwO1xuICBjb25zdCBwcmVzZXJ2ZUFscGhhOiBib29sZWFuID0gKGZsYWdzICYgKDEgPDwgMCkpICE9PSAwO1xuICByZXR1cm4ge1xuICAgIGZpbHRlcjogRmlsdGVyVHlwZS5Db252b2x1dGlvbixcbiAgICBtYXRyaXhXaWR0aCxcbiAgICBtYXRyaXhIZWlnaHQsXG4gICAgZGl2aXNvcixcbiAgICBiaWFzLFxuICAgIG1hdHJpeCxcbiAgICBkZWZhdWx0Q29sb3IsXG4gICAgY2xhbXAsXG4gICAgcHJlc2VydmVBbHBoYSxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRHJvcFNoYWRvd0ZpbHRlcihieXRlU3RyZWFtOiBCeXRlU3RyZWFtKTogZmlsdGVycy5Ecm9wU2hhZG93IHtcbiAgY29uc3QgY29sb3I6IFN0cmFpZ2h0U1JnYmE4ID0gcGFyc2VTdHJhaWdodFNSZ2JhOChieXRlU3RyZWFtKTtcbiAgY29uc3QgYmx1clg6IEZpeGVkMTZQMTYgPSBieXRlU3RyZWFtLnJlYWRGaXhlZDE2UDE2TEUoKTtcbiAgY29uc3QgYmx1clk6IEZpeGVkMTZQMTYgPSBieXRlU3RyZWFtLnJlYWRGaXhlZDE2UDE2TEUoKTtcbiAgY29uc3QgYW5nbGU6IEZpeGVkMTZQMTYgPSBieXRlU3RyZWFtLnJlYWRGaXhlZDE2UDE2TEUoKTtcbiAgY29uc3QgZGlzdGFuY2U6IEZpeGVkMTZQMTYgPSBieXRlU3RyZWFtLnJlYWRGaXhlZDE2UDE2TEUoKTtcbiAgY29uc3Qgc3RyZW5ndGg6IEZpeGVkOFA4ID0gYnl0ZVN0cmVhbS5yZWFkRml4ZWQ4UDhMRSgpO1xuICBjb25zdCBmbGFnczogVWludDggPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuICBjb25zdCBpbm5lcjogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDcpKSAhPT0gMDtcbiAgY29uc3Qga25vY2tvdXQ6IGJvb2xlYW4gPSAoZmxhZ3MgJiAoMSA8PCA2KSkgIT09IDA7XG4gIGNvbnN0IGNvbXBvc2l0ZVNvdXJjZTogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDUpKSAhPT0gMDtcbiAgY29uc3QgcGFzc2VzOiBVaW50NSA9IGZsYWdzICYgKCgxIDw8IDUpIC0gMSk7XG4gIHJldHVybiB7XG4gICAgZmlsdGVyOiBGaWx0ZXJUeXBlLkRyb3BTaGFkb3csXG4gICAgY29sb3IsXG4gICAgYmx1clgsXG4gICAgYmx1clksXG4gICAgYW5nbGUsXG4gICAgZGlzdGFuY2UsXG4gICAgc3RyZW5ndGgsXG4gICAgaW5uZXIsXG4gICAga25vY2tvdXQsXG4gICAgY29tcG9zaXRlU291cmNlLFxuICAgIHBhc3NlcyxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlR2xvd0ZpbHRlcihieXRlU3RyZWFtOiBCeXRlU3RyZWFtKTogZmlsdGVycy5HbG93IHtcbiAgY29uc3QgY29sb3I6IFN0cmFpZ2h0U1JnYmE4ID0gcGFyc2VTdHJhaWdodFNSZ2JhOChieXRlU3RyZWFtKTtcbiAgY29uc3QgYmx1clg6IEZpeGVkMTZQMTYgPSBieXRlU3RyZWFtLnJlYWRGaXhlZDE2UDE2TEUoKTtcbiAgY29uc3QgYmx1clk6IEZpeGVkMTZQMTYgPSBieXRlU3RyZWFtLnJlYWRGaXhlZDE2UDE2TEUoKTtcbiAgY29uc3Qgc3RyZW5ndGg6IEZpeGVkOFA4ID0gYnl0ZVN0cmVhbS5yZWFkRml4ZWQ4UDhMRSgpO1xuICBjb25zdCBmbGFnczogVWludDggPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuICBjb25zdCBpbm5lcjogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDcpKSAhPT0gMDtcbiAgY29uc3Qga25vY2tvdXQ6IGJvb2xlYW4gPSAoZmxhZ3MgJiAoMSA8PCA2KSkgIT09IDA7XG4gIGNvbnN0IGNvbXBvc2l0ZVNvdXJjZTogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDUpKSAhPT0gMDtcbiAgY29uc3QgcGFzc2VzOiBVaW50NSA9IGZsYWdzICYgKCgxIDw8IDUpIC0gMSk7XG4gIHJldHVybiB7XG4gICAgZmlsdGVyOiBGaWx0ZXJUeXBlLkdsb3csXG4gICAgY29sb3IsXG4gICAgYmx1clgsXG4gICAgYmx1clksXG4gICAgc3RyZW5ndGgsXG4gICAgaW5uZXIsXG4gICAga25vY2tvdXQsXG4gICAgY29tcG9zaXRlU291cmNlLFxuICAgIHBhc3NlcyxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlR3JhZGllbnRCZXZlbEZpbHRlcihieXRlU3RyZWFtOiBCeXRlU3RyZWFtKTogZmlsdGVycy5HcmFkaWVudEJldmVsIHtcbiAgY29uc3QgY29sb3JDb3VudDogVWludFNpemUgPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuICBjb25zdCBncmFkaWVudDogQ29sb3JTdG9wW10gPSBbXTtcbiAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IGNvbG9yQ291bnQ7IGkrKykge1xuICAgIGdyYWRpZW50LnB1c2goe3JhdGlvOiAwLCBjb2xvcjogcGFyc2VTdHJhaWdodFNSZ2JhOChieXRlU3RyZWFtKX0pO1xuICB9XG4gIGZvciAobGV0IGk6IG51bWJlciA9IDA7IGkgPCBjb2xvckNvdW50OyBpKyspIHtcbiAgICBncmFkaWVudFtpXS5yYXRpbyA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQ4KCk7XG4gIH1cbiAgY29uc3QgYmx1clg6IEZpeGVkMTZQMTYgPSBieXRlU3RyZWFtLnJlYWRGaXhlZDE2UDE2TEUoKTtcbiAgY29uc3QgYmx1clk6IEZpeGVkMTZQMTYgPSBieXRlU3RyZWFtLnJlYWRGaXhlZDE2UDE2TEUoKTtcbiAgY29uc3QgYW5nbGU6IEZpeGVkMTZQMTYgPSBieXRlU3RyZWFtLnJlYWRGaXhlZDE2UDE2TEUoKTtcbiAgY29uc3QgZGlzdGFuY2U6IEZpeGVkMTZQMTYgPSBieXRlU3RyZWFtLnJlYWRGaXhlZDE2UDE2TEUoKTtcbiAgY29uc3Qgc3RyZW5ndGg6IEZpeGVkOFA4ID0gYnl0ZVN0cmVhbS5yZWFkRml4ZWQ4UDhMRSgpO1xuICBjb25zdCBmbGFnczogVWludDggPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuICBjb25zdCBpbm5lcjogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDcpKSAhPT0gMDtcbiAgY29uc3Qga25vY2tvdXQ6IGJvb2xlYW4gPSAoZmxhZ3MgJiAoMSA8PCA2KSkgIT09IDA7XG4gIGNvbnN0IGNvbXBvc2l0ZVNvdXJjZTogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDUpKSAhPT0gMDtcbiAgY29uc3Qgb25Ub3A6IGJvb2xlYW4gPSAoZmxhZ3MgJiAoMSA8PCA0KSkgIT09IDA7XG4gIGNvbnN0IHBhc3NlczogVWludDQgPSA8VWludDQ+IChmbGFncyAmICgoMSA8PCA0KSAtIDEpKTtcbiAgcmV0dXJuIHtcbiAgICBmaWx0ZXI6IEZpbHRlclR5cGUuR3JhZGllbnRCZXZlbCxcbiAgICBncmFkaWVudCxcbiAgICBibHVyWCxcbiAgICBibHVyWSxcbiAgICBhbmdsZSxcbiAgICBkaXN0YW5jZSxcbiAgICBzdHJlbmd0aCxcbiAgICBpbm5lcixcbiAgICBrbm9ja291dCxcbiAgICBjb21wb3NpdGVTb3VyY2UsXG4gICAgb25Ub3AsXG4gICAgcGFzc2VzLFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VHcmFkaWVudEdsb3dGaWx0ZXIoYnl0ZVN0cmVhbTogQnl0ZVN0cmVhbSk6IGZpbHRlcnMuR3JhZGllbnRHbG93IHtcbiAgY29uc3QgY29sb3JDb3VudDogVWludFNpemUgPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuICBjb25zdCBncmFkaWVudDogQ29sb3JTdG9wW10gPSBbXTtcbiAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IGNvbG9yQ291bnQ7IGkrKykge1xuICAgIGdyYWRpZW50LnB1c2goe3JhdGlvOiAwLCBjb2xvcjogcGFyc2VTdHJhaWdodFNSZ2JhOChieXRlU3RyZWFtKX0pO1xuICB9XG4gIGZvciAobGV0IGk6IG51bWJlciA9IDA7IGkgPCBjb2xvckNvdW50OyBpKyspIHtcbiAgICBncmFkaWVudFtpXS5yYXRpbyA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQ4KCk7XG4gIH1cbiAgY29uc3QgYmx1clg6IEZpeGVkMTZQMTYgPSBieXRlU3RyZWFtLnJlYWRGaXhlZDE2UDE2TEUoKTtcbiAgY29uc3QgYmx1clk6IEZpeGVkMTZQMTYgPSBieXRlU3RyZWFtLnJlYWRGaXhlZDE2UDE2TEUoKTtcbiAgY29uc3QgYW5nbGU6IEZpeGVkMTZQMTYgPSBieXRlU3RyZWFtLnJlYWRGaXhlZDE2UDE2TEUoKTtcbiAgY29uc3QgZGlzdGFuY2U6IEZpeGVkMTZQMTYgPSBieXRlU3RyZWFtLnJlYWRGaXhlZDE2UDE2TEUoKTtcbiAgY29uc3Qgc3RyZW5ndGg6IEZpeGVkOFA4ID0gYnl0ZVN0cmVhbS5yZWFkRml4ZWQ4UDhMRSgpO1xuICBjb25zdCBmbGFnczogVWludDggPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuICBjb25zdCBpbm5lcjogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDcpKSAhPT0gMDtcbiAgY29uc3Qga25vY2tvdXQ6IGJvb2xlYW4gPSAoZmxhZ3MgJiAoMSA8PCA2KSkgIT09IDA7XG4gIGNvbnN0IGNvbXBvc2l0ZVNvdXJjZTogYm9vbGVhbiA9IChmbGFncyAmICgxIDw8IDUpKSAhPT0gMDtcbiAgY29uc3Qgb25Ub3A6IGJvb2xlYW4gPSAoZmxhZ3MgJiAoMSA8PCA0KSkgIT09IDA7XG4gIGNvbnN0IHBhc3NlczogVWludDQgPSA8VWludDQ+IChmbGFncyAmICgoMSA8PCA0KSAtIDEpKTtcbiAgcmV0dXJuIHtcbiAgICBmaWx0ZXI6IEZpbHRlclR5cGUuR3JhZGllbnRHbG93LFxuICAgIGdyYWRpZW50LFxuICAgIGJsdXJYLFxuICAgIGJsdXJZLFxuICAgIGFuZ2xlLFxuICAgIGRpc3RhbmNlLFxuICAgIHN0cmVuZ3RoLFxuICAgIGlubmVyLFxuICAgIGtub2Nrb3V0LFxuICAgIGNvbXBvc2l0ZVNvdXJjZSxcbiAgICBvblRvcCxcbiAgICBwYXNzZXMsXG4gIH07XG59XG4iXX0=


/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const swf_tree_1 = __webpack_require__(6);
const basic_data_types_1 = __webpack_require__(21);
function parseColorStop(byteStream, withAlpha) {
    const ratio = byteStream.readUint8();
    let color;
    if (withAlpha) {
        color = basic_data_types_1.parseStraightSRgba8(byteStream);
    }
    else {
        color = Object.assign({}, basic_data_types_1.parseSRgb8(byteStream), { a: 255 });
    }
    return { ratio, color };
}
exports.parseColorStop = parseColorStop;
function parseGradient(byteStream, withAlpha) {
    const flags = byteStream.readUint8();
    const spreadId = ((flags & ((1 << 8) - 1)) >>> 6);
    const colorSpaceId = ((flags & ((1 << 6) - 1)) >>> 4);
    const colorCount = (flags & ((1 << 4) - 1));
    let spread;
    switch (spreadId) {
        case 0:
            spread = swf_tree_1.GradientSpread.Pad;
            break;
        case 1:
            spread = swf_tree_1.GradientSpread.Reflect;
            break;
        case 2:
            spread = swf_tree_1.GradientSpread.Repeat;
            break;
        default:
            throw new Error("Unexpected gradient spread");
    }
    let colorSpace;
    switch (colorSpaceId) {
        case 0:
            colorSpace = swf_tree_1.ColorSpace.SRgb;
            break;
        case 1:
            colorSpace = swf_tree_1.ColorSpace.LinearRgb;
            break;
        default:
            throw new Error("Unexpected gradient spread");
    }
    const colors = [];
    for (let i = 0; i < colorCount; i++) {
        colors.push(parseColorStop(byteStream, withAlpha));
    }
    return {
        spread,
        colorSpace,
        colors,
    };
}
exports.parseGradient = parseGradient;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9wYXJzZXJzL2dyYWRpZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsdUNBQXlGO0FBRXpGLHlEQUFtRTtBQUVuRSx3QkFBK0IsVUFBc0IsRUFBRSxTQUFrQjtJQUN2RSxNQUFNLEtBQUssR0FBVSxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDNUMsSUFBSSxLQUFxQixDQUFDO0lBQzFCLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDZCxLQUFLLEdBQUcsc0NBQW1CLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUFDLElBQUksQ0FBQyxDQUFDO1FBQ04sS0FBSyxxQkFBTyw2QkFBVSxDQUFDLFVBQVUsQ0FBQyxJQUFFLENBQUMsRUFBRSxHQUFHLEdBQUMsQ0FBQztJQUM5QyxDQUFDO0lBQ0QsTUFBTSxDQUFDLEVBQUMsS0FBSyxFQUFFLEtBQUssRUFBQyxDQUFDO0FBQ3hCLENBQUM7QUFURCx3Q0FTQztBQUVELHVCQUE4QixVQUFzQixFQUFFLFNBQWtCO0lBQ3RFLE1BQU0sS0FBSyxHQUFVLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUM1QyxNQUFNLFFBQVEsR0FBa0IsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDakUsTUFBTSxZQUFZLEdBQWtCLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3JFLE1BQU0sVUFBVSxHQUFrQixDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDM0QsSUFBSSxNQUFzQixDQUFDO0lBQzNCLE1BQU0sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDakIsS0FBSyxDQUFDO1lBQ0osTUFBTSxHQUFHLHlCQUFjLENBQUMsR0FBRyxDQUFDO1lBQzVCLEtBQUssQ0FBQztRQUNSLEtBQUssQ0FBQztZQUNKLE1BQU0sR0FBRyx5QkFBYyxDQUFDLE9BQU8sQ0FBQztZQUNoQyxLQUFLLENBQUM7UUFDUixLQUFLLENBQUM7WUFDSixNQUFNLEdBQUcseUJBQWMsQ0FBQyxNQUFNLENBQUM7WUFDL0IsS0FBSyxDQUFDO1FBQ1I7WUFDRSxNQUFNLElBQUksS0FBSyxDQUFDLDRCQUE0QixDQUFDLENBQUM7SUFDbEQsQ0FBQztJQUNELElBQUksVUFBc0IsQ0FBQztJQUMzQixNQUFNLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1FBQ3JCLEtBQUssQ0FBQztZQUNKLFVBQVUsR0FBRyxxQkFBVSxDQUFDLElBQUksQ0FBQztZQUM3QixLQUFLLENBQUM7UUFDUixLQUFLLENBQUM7WUFDSixVQUFVLEdBQUcscUJBQVUsQ0FBQyxTQUFTLENBQUM7WUFDbEMsS0FBSyxDQUFDO1FBQ1I7WUFDRSxNQUFNLElBQUksS0FBSyxDQUFDLDRCQUE0QixDQUFDLENBQUM7SUFDbEQsQ0FBQztJQUNELE1BQU0sTUFBTSxHQUFnQixFQUFFLENBQUM7SUFDL0IsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQVcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUM1QyxNQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBQ0QsTUFBTSxDQUFDO1FBQ0wsTUFBTTtRQUNOLFVBQVU7UUFDVixNQUFNO0tBQ1AsQ0FBQztBQUNKLENBQUM7QUF2Q0Qsc0NBdUNDIiwiZmlsZSI6ImxpYi9wYXJzZXJzL2dyYWRpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtVaW50MiwgVWludDQsIFVpbnQ4fSBmcm9tIFwic2VtYW50aWMtdHlwZXNcIjtcbmltcG9ydCB7Q29sb3JTcGFjZSwgQ29sb3JTdG9wLCBHcmFkaWVudCwgR3JhZGllbnRTcHJlYWQsIFN0cmFpZ2h0U1JnYmE4fSBmcm9tIFwic3dmLXRyZWVcIjtcbmltcG9ydCB7Qnl0ZVN0cmVhbX0gZnJvbSBcIi4uL3N0cmVhbVwiO1xuaW1wb3J0IHtwYXJzZVNSZ2I4LCBwYXJzZVN0cmFpZ2h0U1JnYmE4fSBmcm9tIFwiLi9iYXNpYy1kYXRhLXR5cGVzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNvbG9yU3RvcChieXRlU3RyZWFtOiBCeXRlU3RyZWFtLCB3aXRoQWxwaGE6IGJvb2xlYW4pOiBDb2xvclN0b3Age1xuICBjb25zdCByYXRpbzogVWludDggPSBieXRlU3RyZWFtLnJlYWRVaW50OCgpO1xuICBsZXQgY29sb3I6IFN0cmFpZ2h0U1JnYmE4O1xuICBpZiAod2l0aEFscGhhKSB7XG4gICAgY29sb3IgPSBwYXJzZVN0cmFpZ2h0U1JnYmE4KGJ5dGVTdHJlYW0pO1xuICB9IGVsc2Uge1xuICAgIGNvbG9yID0gey4uLnBhcnNlU1JnYjgoYnl0ZVN0cmVhbSksIGE6IDI1NX07XG4gIH1cbiAgcmV0dXJuIHtyYXRpbywgY29sb3J9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VHcmFkaWVudChieXRlU3RyZWFtOiBCeXRlU3RyZWFtLCB3aXRoQWxwaGE6IGJvb2xlYW4pOiBHcmFkaWVudCB7XG4gIGNvbnN0IGZsYWdzOiBVaW50OCA9IGJ5dGVTdHJlYW0ucmVhZFVpbnQ4KCk7XG4gIGNvbnN0IHNwcmVhZElkOiBVaW50MiA9IDxVaW50Mj4gKChmbGFncyAmICgoMSA8PCA4KSAtIDEpKSA+Pj4gNik7XG4gIGNvbnN0IGNvbG9yU3BhY2VJZDogVWludDIgPSA8VWludDI+ICgoZmxhZ3MgJiAoKDEgPDwgNikgLSAxKSkgPj4+IDQpO1xuICBjb25zdCBjb2xvckNvdW50OiBVaW50NCA9IDxVaW50ND4gKGZsYWdzICYgKCgxIDw8IDQpIC0gMSkpO1xuICBsZXQgc3ByZWFkOiBHcmFkaWVudFNwcmVhZDtcbiAgc3dpdGNoIChzcHJlYWRJZCkge1xuICAgIGNhc2UgMDpcbiAgICAgIHNwcmVhZCA9IEdyYWRpZW50U3ByZWFkLlBhZDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMTpcbiAgICAgIHNwcmVhZCA9IEdyYWRpZW50U3ByZWFkLlJlZmxlY3Q7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDI6XG4gICAgICBzcHJlYWQgPSBHcmFkaWVudFNwcmVhZC5SZXBlYXQ7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5leHBlY3RlZCBncmFkaWVudCBzcHJlYWRcIik7XG4gIH1cbiAgbGV0IGNvbG9yU3BhY2U6IENvbG9yU3BhY2U7XG4gIHN3aXRjaCAoY29sb3JTcGFjZUlkKSB7XG4gICAgY2FzZSAwOlxuICAgICAgY29sb3JTcGFjZSA9IENvbG9yU3BhY2UuU1JnYjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMTpcbiAgICAgIGNvbG9yU3BhY2UgPSBDb2xvclNwYWNlLkxpbmVhclJnYjtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmV4cGVjdGVkIGdyYWRpZW50IHNwcmVhZFwiKTtcbiAgfVxuICBjb25zdCBjb2xvcnM6IENvbG9yU3RvcFtdID0gW107XG4gIGZvciAobGV0IGk6IG51bWJlciA9IDA7IGkgPCBjb2xvckNvdW50OyBpKyspIHtcbiAgICBjb2xvcnMucHVzaChwYXJzZUNvbG9yU3RvcChieXRlU3RyZWFtLCB3aXRoQWxwaGEpKTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHNwcmVhZCxcbiAgICBjb2xvclNwYWNlLFxuICAgIGNvbG9ycyxcbiAgfTtcbn1cbiJdfQ==


/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = __webpack_require__(2);
const swf_tree_1 = __webpack_require__(6);
const basic_data_types_1 = __webpack_require__(21);
const shapes_1 = __webpack_require__(144);
function parseGridFittingBits(bitStream) {
    const code = bitStream.readUint32Bits(3);
    switch (code) {
        case 0:
            return swf_tree_1.text.GridFitting.None;
        case 1:
            return swf_tree_1.text.GridFitting.Pixel;
        case 2:
            return swf_tree_1.text.GridFitting.SubPixel;
        default:
            throw new incident_1.Incident("UnreachableCode");
    }
}
exports.parseGridFittingBits = parseGridFittingBits;
function parseLanguageCode(byteStream) {
    const code = byteStream.readUint8();
    switch (code) {
        case 0:
            return swf_tree_1.LanguageCode.Auto;
        case 1:
            return swf_tree_1.LanguageCode.Latin;
        case 2:
            return swf_tree_1.LanguageCode.Japanese;
        case 3:
            return swf_tree_1.LanguageCode.Korean;
        case 4:
            return swf_tree_1.LanguageCode.SimplifiedChinese;
        case 5:
            return swf_tree_1.LanguageCode.TraditionalChinese;
        default:
            throw new incident_1.Incident("UnreachableCode");
    }
}
exports.parseLanguageCode = parseLanguageCode;
function parseTextRendererBits(bitStream) {
    const code = bitStream.readUint32Bits(2);
    switch (code) {
        case 0:
            return swf_tree_1.text.TextRenderer.Normal;
        case 1:
            return swf_tree_1.text.TextRenderer.Advanced;
        default:
            throw new incident_1.Incident("UnreachableCode");
    }
}
exports.parseTextRendererBits = parseTextRendererBits;
function parseTextRecordString(byteStream, hasAlpha, indexBits, advanceBits) {
    const result = [];
    while (byteStream.peekUint8() !== 0) {
        result.push(parseTextRecord(byteStream, hasAlpha, indexBits, advanceBits));
    }
    byteStream.skip(1); // End of records
    return result;
}
exports.parseTextRecordString = parseTextRecordString;
function parseTextRecord(byteStream, hasAlpha, indexBits, advanceBits) {
    const flags = byteStream.readUint8();
    const hasFont = (flags & (1 << 3)) !== 0;
    const hasColor = (flags & (1 << 2)) !== 0;
    const hasOffsetX = (flags & (1 << 1)) !== 0;
    const hasOffsetY = (flags & (1 << 0)) !== 0;
    const fontId = hasFont ? byteStream.readUint16LE() : undefined;
    let color = undefined;
    if (hasColor) {
        color = hasAlpha ? basic_data_types_1.parseStraightSRgba8(byteStream) : Object.assign({}, basic_data_types_1.parseSRgb8(byteStream), { a: 255 });
    }
    const offsetX = hasOffsetX ? byteStream.readSint16LE() : 0;
    const offsetY = hasOffsetY ? byteStream.readSint16LE() : 0;
    const fontSize = hasFont ? byteStream.readUint16LE() : undefined;
    const entryCount = byteStream.readUint8();
    const bitStream = byteStream.asBitStream();
    const entries = [];
    for (let i = 0; i < entryCount; i++) {
        const index = bitStream.readUint32Bits(indexBits);
        const advance = bitStream.readSint32Bits(advanceBits);
        entries.push({ index, advance });
    }
    bitStream.align();
    return { fontId, color, offsetX, offsetY, fontSize, entries };
}
exports.parseTextRecord = parseTextRecord;
function parseCsmTableHintBits(bitStream) {
    switch (bitStream.readUint16Bits(2)) {
        case 0:
            return swf_tree_1.text.CsmTableHint.Thin;
        case 1:
            return swf_tree_1.text.CsmTableHint.Medium;
        case 2:
            return swf_tree_1.text.CsmTableHint.Thick;
        default:
            throw new incident_1.Incident("UnreachableCode");
    }
}
exports.parseCsmTableHintBits = parseCsmTableHintBits;
function parseFontAlignmentZone(byteStream) {
    const zoneDataCount = byteStream.readUint8();
    // TODO: Assert zoneDataCount === 2
    const data = [];
    for (let i = 0; i < zoneDataCount; i++) {
        data.push(parseFontAlignmentZoneData(byteStream));
    }
    const flags = byteStream.readUint8();
    const hasY = (flags & (1 << 1)) !== 0;
    const hasX = (flags & (1 << 0)) !== 0;
    return { data, hasX, hasY };
}
exports.parseFontAlignmentZone = parseFontAlignmentZone;
function parseFontAlignmentZoneData(byteStream) {
    const origin = byteStream.readFloat16BE();
    const size = byteStream.readFloat16BE();
    return { origin, size };
}
exports.parseFontAlignmentZoneData = parseFontAlignmentZoneData;
function parseOffsetGlyphs(byteStream, glyphCount, useWideOffset) {
    const startPos = byteStream.bytePos;
    const offsets = new Array(glyphCount + 1);
    for (let i = 0; i < offsets.length; i++) {
        offsets[i] = useWideOffset ? byteStream.readUint32LE() : byteStream.readUint16LE();
    }
    const result = [];
    for (let i = 1; i < offsets.length; i++) {
        const length = offsets[i] - (byteStream.bytePos - startPos);
        result.push(shapes_1.parseGlyph(byteStream.take(length)));
    }
    return result;
}
exports.parseOffsetGlyphs = parseOffsetGlyphs;
function parseFontLayout(byteStream, glyphCount) {
    const ascent = byteStream.readUint16LE();
    const descent = byteStream.readUint16LE();
    const leading = byteStream.readUint16LE();
    const advances = new Array(glyphCount);
    for (let i = 0; i < advances.length; i++) {
        advances[i] = byteStream.readUint16LE();
    }
    const bounds = new Array(glyphCount);
    for (let i = 0; i < bounds.length; i++) {
        bounds[i] = basic_data_types_1.parseRect(byteStream);
    }
    const kerning = new Array(byteStream.readUint16LE());
    for (let i = 0; i < kerning.length; i++) {
        kerning[i] = parseKerningRecord(byteStream);
    }
    return { ascent, descent, leading, advances, bounds, kerning };
}
exports.parseFontLayout = parseFontLayout;
function parseKerningRecord(byteStream) {
    const left = byteStream.readUint16LE();
    const right = byteStream.readUint16LE();
    const adjustment = byteStream.readSint16LE();
    return { left, right, adjustment };
}
exports.parseKerningRecord = parseKerningRecord;
function parseTextAlignment(byteStream) {
    switch (byteStream.readUint8()) {
        case 0:
            return swf_tree_1.text.TextAlignment.Left;
        case 1:
            return swf_tree_1.text.TextAlignment.Right;
        case 2:
            return swf_tree_1.text.TextAlignment.Center;
        case 3:
            return swf_tree_1.text.TextAlignment.Justify;
        default:
            throw new incident_1.Incident("UnreachableCode");
    }
}
exports.parseTextAlignment = parseTextAlignment;

//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 365 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = decodeSwfShape;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_swf_tree__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_swf_tree___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_swf_tree__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__fill_style__ = __webpack_require__(145);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__line_style__ = __webpack_require__(146);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__path__ = __webpack_require__(147);




/**
 * Converts a space-optimized shape definition to a list of simpler paths for easier processing/rendering
 */
function decodeSwfShape(tag) {
    const converter = new SwfShapeDecoder(tag.shape.fillStyles, tag.shape.lineStyles);
    for (const record of tag.shape.records) {
        switch (record.type) {
            case __WEBPACK_IMPORTED_MODULE_0_swf_tree__["ShapeRecordType"].CurvedEdge:
                converter.applyCurvedEdge(record);
                break;
            case __WEBPACK_IMPORTED_MODULE_0_swf_tree__["ShapeRecordType"].StraightEdge:
                converter.applyStraightEdge(record);
                break;
            case __WEBPACK_IMPORTED_MODULE_0_swf_tree__["ShapeRecordType"].StyleChange:
                converter.applyStyleChange(record);
                break;
        }
    }
    return converter.getShape();
}
var SegmentType;
(function (SegmentType) {
    SegmentType[SegmentType["Straight"] = 0] = "Straight";
    SegmentType[SegmentType["Curved"] = 1] = "Curved";
})(SegmentType || (SegmentType = {}));
function createStraightSegment(startX, startY, endX, endY) {
    return { type: SegmentType.Straight, startX, startY, endX, endY };
}
function createCurvedSegment(startX, startY, controlX, controlY, endX, endY) {
    return { type: SegmentType.Curved, startX, startY, controlX, controlY, endX, endY };
}
function normalizeStraightSRgba(color) {
    return {
        r: color.r / 255,
        g: color.g / 255,
        b: color.b / 255,
        a: color.a / 255,
    };
}
/**
 * Normalize the fill style from the SWF format to the renderer format
 */
function decodeFillStyle(old) {
    switch (old.type) {
        case __WEBPACK_IMPORTED_MODULE_0_swf_tree__["FillStyleType"].Solid:
            return { type: __WEBPACK_IMPORTED_MODULE_1__fill_style__["a" /* FillStyleType */].Solid, color: normalizeStraightSRgba(old.color) };
        default:
            console.warn(old);
            throw new Error("Unknown fill type");
    }
}
/**
 * Normalize the line style from the SWF format to the renderer format
 */
function decodeLineStyle(old) {
    // TODO...
    return { type: __WEBPACK_IMPORTED_MODULE_2__line_style__["a" /* LineStyleType */].Solid, color: { r: 0, g: 0, b: 0, a: 1 }, width: 50 };
}
/**
 * Create a new layer with the supplied styles.
 */
function createStyleLayer(swfFillStyles, swfLineStyles) {
    const fills = [];
    for (const swfFillStyle of swfFillStyles) {
        fills.push({
            style: decodeFillStyle(swfFillStyle),
            segments: [],
        });
    }
    const lines = [];
    for (const swfLineStyle of swfLineStyles) {
        lines.push({
            style: decodeLineStyle(swfLineStyle),
            segments: [],
        });
    }
    return { fills, lines };
}
/**
 * Extract a sequence of continuous segments, removes them from openSet.
 */
function extractContinuous(openSet) {
    const first = openSet.shift();
    if (first === undefined) {
        throw new Error("FailedAssertion: openSet should not be empty");
    }
    const result = [first];
    let startX = first.startX;
    let startY = first.startY;
    let endX = first.endX;
    let endY = first.endY;
    for (let i = 0, len = openSet.length; i < len; i++) {
        const current = openSet[i];
        if (current.startX === endX && current.startY === endY) {
            openSet.splice(i, 1);
            i--;
            len--;
            endX = current.endX;
            endY = current.endY;
            result.push(current);
        }
        else if (current.endX === startX && current.endY === startY) {
            openSet.splice(i, 1);
            i--;
            len--;
            startX = current.startX;
            startY = current.startY;
            result.unshift(current);
        }
    }
    // TODO: Repeat until reaching fixed point? Currently there are some cases when a continuous path is not collected
    // if its segments are disordered.
    return result;
}
/**
 * Converts a list of segments (in their definition order) to a list of path commands.
 */
function segmentsToCommands(segments) {
    const openSet = segments.map((x) => x);
    const result = [];
    while (openSet.length > 0) {
        const sequence = extractContinuous(openSet);
        result.push({
            type: __WEBPACK_IMPORTED_MODULE_3__path__["a" /* CommandType */].MoveTo,
            x: sequence[0].startX,
            y: sequence[0].startY,
        });
        for (const segment of sequence) {
            switch (segment.type) {
                case SegmentType.Straight:
                    result.push({
                        type: __WEBPACK_IMPORTED_MODULE_3__path__["a" /* CommandType */].LineTo,
                        endX: segment.endX,
                        endY: segment.endY,
                    });
                    break;
                case SegmentType.Curved:
                    result.push({
                        type: __WEBPACK_IMPORTED_MODULE_3__path__["a" /* CommandType */].CurveTo,
                        controlX: segment.controlX,
                        controlY: segment.controlY,
                        endX: segment.endX,
                        endY: segment.endY,
                    });
                    break;
                default:
                    throw new Error("Failed assertion: unexpected segment type");
            }
        }
    }
    return result;
}
/**
 * Converts a layer to a list of paths with style
 */
function layerToPaths(layer) {
    const paths = [];
    for (const fillSet of layer.fills) {
        const commands = segmentsToCommands(fillSet.segments);
        if (commands.length > 0) {
            paths.push({ commands, fill: fillSet.style });
        }
    }
    for (const lineSet of layer.lines) {
        const commands = segmentsToCommands(lineSet.segments);
        if (commands.length > 0) {
            paths.push({ commands, line: lineSet.style });
        }
    }
    return paths;
}
/**
 * Maintains the state of the decoder while it consumes shape records.
 */
class SwfShapeDecoder {
    constructor(swfFillStyles, swfLineStyles) {
        this.x = 0;
        this.y = 0;
        this.layers = [];
        this.leftFill = undefined;
        this.rightFill = undefined;
        this.lineFill = undefined;
        this.setNewStyles(swfFillStyles, swfLineStyles);
    }
    applyStyleChange(record) {
        if (record.leftFill !== undefined) {
            this.setLeftFillById(record.leftFill);
        }
        if (record.rightFill !== undefined) {
            this.setRightFillById(record.rightFill);
        }
        if (record.moveTo !== undefined) {
            this.x = record.moveTo.x;
            this.y = record.moveTo.y;
        }
    }
    applyStraightEdge(record) {
        const endX = this.x + record.endDelta.x;
        const endY = this.y + record.endDelta.y;
        if (this.leftFill !== undefined) {
            this.leftFill.segments.push(createStraightSegment(this.x, this.y, endX, endY));
        }
        if (this.rightFill !== undefined) {
            this.rightFill.segments.push(createStraightSegment(endX, endY, this.x, this.y));
        }
        if (this.lineFill !== undefined) {
            this.lineFill.segments.push(createStraightSegment(this.x, this.y, endX, endY));
        }
        this.x = endX;
        this.y = endY;
    }
    applyCurvedEdge(record) {
        const controlX = this.x + record.controlDelta.x;
        const controlY = this.y + record.controlDelta.y;
        const endX = this.x + record.endDelta.x;
        const endY = this.y + record.endDelta.y;
        if (this.leftFill !== undefined) {
            this.leftFill.segments.push(createCurvedSegment(this.x, this.y, controlX, controlY, endX, endY));
        }
        if (this.rightFill !== undefined) {
            this.rightFill.segments.push(createCurvedSegment(endX, endY, controlX, controlY, this.x, this.y));
        }
        if (this.lineFill !== undefined) {
            this.lineFill.segments.push(createCurvedSegment(this.x, this.y, controlX, controlY, endX, endY));
        }
        this.x = endX;
        this.y = endY;
    }
    getShape() {
        const paths = [];
        for (const layer of this.layers) {
            for (const path of layerToPaths(layer)) {
                paths.push(path);
            }
        }
        return { paths };
    }
    setNewStyles(swfFillStyles, swfLineStyles) {
        const layer = createStyleLayer(swfFillStyles, swfLineStyles);
        this.layers.push(layer);
        this.leftFill = undefined;
        this.rightFill = undefined;
        this.lineFill = undefined;
    }
    setLeftFillById(fillId) {
        if (fillId === 0) {
            this.leftFill = undefined;
            return;
        }
        const currentLayer = this.layers[this.layers.length - 1];
        const fillIndex = fillId - 1;
        this.leftFill = currentLayer.fills[fillIndex];
        if (this.leftFill === undefined) {
            throw new Error("Invalid fill ID");
        }
    }
    setRightFillById(fillId) {
        if (fillId === 0) {
            this.rightFill = undefined;
            return;
        }
        const currentLayer = this.layers[this.layers.length - 1];
        const fillIndex = fillId - 1;
        this.rightFill = currentLayer.fills[fillIndex];
        if (this.rightFill === undefined) {
            throw new Error("Invalid fill ID");
        }
    }
    setLineFillById(fillId) {
        if (fillId === 0) {
            this.lineFill = undefined;
            return;
        }
        const currentLayer = this.layers[this.layers.length - 1];
        const fillIndex = fillId - 1;
        this.lineFill = currentLayer.lines[fillIndex];
        if (this.lineFill === undefined) {
            throw new Error("Invalid fill ID");
        }
    }
}


/***/ }),
/* 366 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__css_color__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shape_fill_style__ = __webpack_require__(145);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shape_line_style__ = __webpack_require__(146);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shape_path__ = __webpack_require__(147);




class CanvasRenderer {
    constructor(context, width, height) {
        this.context = context;
        this.width = width;
        this.height = height;
    }
    drawShape(shape) {
        this.context.save();
        try {
            this.context.scale(1 / 20, 1 / 20);
            for (const path of shape.paths) {
                this.drawPath(path);
            }
        }
        catch (err) {
            throw err;
        }
        finally {
            this.context.restore();
        }
    }
    clear() {
        this.context.fillStyle = "transparent";
        this.context.fillRect(0, 0, this.width, this.height);
    }
    drawPath(path) {
        if (path.fill === undefined && path.line === undefined || path.commands.length === 0) {
            return;
        }
        this.context.beginPath();
        for (const command of path.commands) {
            switch (command.type) {
                case __WEBPACK_IMPORTED_MODULE_3__shape_path__["a" /* CommandType */].CurveTo:
                    this.context.quadraticCurveTo(command.controlX, command.controlY, command.endX, command.endY);
                    break;
                case __WEBPACK_IMPORTED_MODULE_3__shape_path__["a" /* CommandType */].LineTo:
                    this.context.lineTo(command.endX, command.endY);
                    break;
                case __WEBPACK_IMPORTED_MODULE_3__shape_path__["a" /* CommandType */].MoveTo:
                    this.context.moveTo(command.x, command.y);
                    break;
                default:
                    throw new Error("FailedAssertion: Unexpected command");
            }
        }
        if (path.fill !== undefined) {
            switch (path.fill.type) {
                case __WEBPACK_IMPORTED_MODULE_1__shape_fill_style__["a" /* FillStyleType */].Solid:
                    this.context.fillStyle = Object(__WEBPACK_IMPORTED_MODULE_0__css_color__["a" /* fromNormalizedColor */])(path.fill.color);
                    break;
                default:
                    throw new Error("TODO: FailedAssertion");
            }
            this.context.fill();
        }
        if (path.line !== undefined) {
            switch (path.line.type) {
                case __WEBPACK_IMPORTED_MODULE_2__shape_line_style__["a" /* LineStyleType */].Solid:
                    this.context.lineWidth = path.line.width;
                    this.context.strokeStyle = Object(__WEBPACK_IMPORTED_MODULE_0__css_color__["a" /* fromNormalizedColor */])(path.line.color);
                    break;
                default:
                    throw new Error("TODO: FailedAssertion");
            }
            this.context.stroke();
        }
    }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = CanvasRenderer;



/***/ }),
/* 367 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export asyncIterator */
/* harmony export (immutable) */ __webpack_exports__["a"] = all;
/**
 * Polyfill to ensure that the `asyncIterator` symbol is defined
 */
function asyncIterator() {
    if (!Symbol.asyncIterator) {
        Symbol.asyncIterator = Symbol.for("Symbol.asyncIterator");
    }
}
/**
 * Applies all the polyfills
 */
function all() {
    asyncIterator();
}


/***/ })
/******/ ]);
//# sourceMappingURL=main.js.map